 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 1 - 1/5/2022 1:27:47


       1/       0 :                     	;Included files
       2/       0 :                     	include macros.asm
(1)    1/       0 :                     ;Zero page variables
(1)    2/       0 :                     ZP_START	MACRO ptr
(1)    3/       0 :                     zp_begin equ ptr
(1)    4/       0 :                     zp_address set ptr
(1)    5/       0 :                     			ENDM
(1)    6/       0 :                     			
(1)    7/       0 :                     ZP 	MACRO var
(1)    8/       0 :                     var equ zp_address
(1)    9/       0 :                     zp_address set zp_address+1
(1)   10/       0 :                     	ENDM
(1)   11/       0 :                     	
(1)   12/       0 :                     ZP_END	MACRO
(1)   13/       0 :                     zp_end equ zp_address
(1)   14/       0 :                     zp_size equ zp_address-zp_begin
(1)   15/       0 :                     		ENDM
(1)   16/       0 :                     	
(1)   17/       0 :                     ;Local variables - each emu level gets a copy
(1)   18/       0 :                     LOCALS_START	MACRO ptr
(1)   19/       0 :                     locals_begin equ ptr
(1)   20/       0 :                     local_address set ptr
(1)   21/       0 :                     			ENDM
(1)   22/       0 :                     
(1)   23/       0 :                     LOCAL 	MACRO var
(1)   24/       0 :                     var equ local_address
(1)   25/       0 :                     local_address set local_address+1
(1)   26/       0 :                     		ENDM
(1)   27/       0 :                     
(1)   28/       0 :                     LOCALS_END	MACRO
(1)   29/       0 :                     locals_end equ local_address
(1)   30/       0 :                     locals_size equ locals_end-locals_begin
(1)   31/       0 :                     			ENDM
(1)   32/       0 :                     
(1)   33/       0 :                     ;Called when each instruction is executed
(1)   34/       0 :                     OP_MACRO	MACRO
(1)   35/       0 :                     			;TODO
(1)   36/       0 :                     			ENDM
(1)   37/       0 :                     
(1)   38/       0 :                     ;Advance to next instruction
(1)   39/       0 :                     NEXT_MACRO	MACRO
(1)   40/       0 :                     			;Could also copy X to Y before NEXT then restore after jump
(1)   41/       0 :                     			
(1)   42/       0 :                     			halt
(1)   43/       0 :                     			
(1)   44/       0 :                     			;Jump table must be page aligned!!!
(1)   45/       0 :                     			LDA (emu_PC,X)
(1)   46/       0 :                     			ASL
(1)   47/       0 :                     			STA emu_ptr,X
(1)   48/       0 :                     			LDA #hi(JUMP_TABLE)
(1)   49/       0 :                     			ADC #0
(1)   50/       0 :                     			STA emu_ptr+1,X
(1)   51/       0 :                     			LDA (emu_ptr,X)
(1)   52/       0 :                     			STA emu_ptr2,X
(1)   53/       0 :                     			INC emu_ptr,X
(1)   54/       0 :                     			BCC .skip
(1)   55/       0 :                     				INC emu_ptr+1,X
(1)   56/       0 :                     			.skip:
(1)   57/       0 :                     			LDA (emu_ptr,X)
(1)   58/       0 :                     			STA emu_ptr2+1,X
 AS V1.42 Beta [Bld 157] - Source File main.asm(macros.asm) - Page 2 - 1/5/2022 1:27:47


(1)   59/       0 :                     			JMP (emu_ptr2,X)
(1)   60/       0 :                     			ENDM
(1)   61/       0 :                     			
(1)   62/       0 :                     ;Misc
(1)   63/       0 :                     halt	MACRO
(1)   64/       0 :                     		BRK
(1)   65/       0 :                     		BRK
(1)   66/       0 :                     		ENDM
(1)   67/       0 :                     		
(1)   68/       0 :                     hi FUNCTION x,(x/256)
(1)   69/       0 :                     lo FUNCTION x,(x#256)
(1)   70/       0 :                     		
       3/       0 :                     
       4/       0 :                     	;JavaScript emulator constants
       5/       0 : =$FFE1              RAM_BANK2 = 	$FFE1		;0x4000-0x7FFF
       6/       0 : =$FFE2              RAM_BANK3 = 	$FFE2		;0x8000-0xBFFF
       7/       0 : =$4                 BANK_GFX_RAM1 = 4
       8/       0 : =$5                 BANK_GFX_RAM2 = 5
       9/       0 :                     
      10/       0 : =$FFE7              DEBUG =			$FFE7
      11/       0 : =$FFE8              DEBUG_HEX = 	$FFE8
      12/       0 : =$FFE9              DEBUG_DEC = 	$FFE9
      13/       0 : =$FFEA              DEBUG_DEC16 = 	$FFEA
      14/       0 :                     
      15/       0 :                     	;65C02 emulator constants
      16/       0 : =$5                 MAX_EMU_LEVEL = 5
      17/       0 :                     
      18/       0 :                     	;Zero page variables
      19/       0 : (MACRO)             	ZP_START 240
      19/       0 : =$F0                zp_begin equ 240
      19/       0 : =$F0                zp_address set 240
      20/       0 : (MACRO)             		ZP global_emu_level
      20/       0 : =$F0                global_emu_level equ zp_address
      20/       0 : =$F1                zp_address set zp_address+1
      21/       0 : (MACRO)             	ZP_END
      21/       0 : =$F1                zp_end equ zp_address
      21/       0 : =$1                 zp_size equ zp_address-zp_begin
      22/       0 :                     	
      23/       0 :                     	;Locals - each emu level gets a copy
      24/       0 : (MACRO)             	LOCALS_START 0
      24/       0 : =$0                 locals_begin equ 0
      24/       0 : =$0                 local_address set 0
      25/       0 : (MACRO)             		LOCAL emu_level
      25/       0 : =$0                 emu_level equ local_address
      25/       0 : =$1                 local_address set local_address+1
      26/       0 : (MACRO)             		LOCAL emu_data_SP
      26/       0 : =$1                 emu_data_SP equ local_address
      26/       0 : =$2                 local_address set local_address+1
      27/       0 : (MACRO)             		LOCAL emu_PC
      27/       0 : =$2                 emu_PC equ local_address
      27/       0 : =$3                 local_address set local_address+1
      28/       0 : (MACRO)             		LOCAL emu_PC_hi
      28/       0 : =$3                 emu_PC_hi equ local_address
      28/       0 : =$4                 local_address set local_address+1
      29/       0 : (MACRO)             		LOCAL emu_SP
      29/       0 : =$4                 emu_SP equ local_address
      29/       0 : =$5                 local_address set local_address+1
      30/       0 : (MACRO)             		LOCAL emu_A
      30/       0 : =$5                 emu_A equ local_address
      30/       0 : =$6                 local_address set local_address+1
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 3 - 1/5/2022 1:27:47


      31/       0 : (MACRO)             		LOCAL emu_X
      31/       0 : =$6                 emu_X equ local_address
      31/       0 : =$7                 local_address set local_address+1
      32/       0 : (MACRO)             		LOCAL emu_Y
      32/       0 : =$7                 emu_Y equ local_address
      32/       0 : =$8                 local_address set local_address+1
      33/       0 : (MACRO)             		LOCAL emu_D_flag
      33/       0 : =$8                 emu_D_flag equ local_address
      33/       0 : =$9                 local_address set local_address+1
      34/       0 : (MACRO)             		LOCAL emu_mem
      34/       0 : =$9                 emu_mem equ local_address
      34/       0 : =$A                 local_address set local_address+1
      35/       0 : (MACRO)             		LOCAL emu_ptr
      35/       0 : =$A                 emu_ptr equ local_address
      35/       0 : =$B                 local_address set local_address+1
      36/       0 : (MACRO)             		LOCAL emu_ptr_hi
      36/       0 : =$B                 emu_ptr_hi equ local_address
      36/       0 : =$C                 local_address set local_address+1
      37/       0 : (MACRO)             		LOCAL emu_ptr2
      37/       0 : =$C                 emu_ptr2 equ local_address
      37/       0 : =$D                 local_address set local_address+1
      38/       0 : (MACRO)             		LOCAL emu_ptr2_hi
      38/       0 : =$D                 emu_ptr2_hi equ local_address
      38/       0 : =$E                 local_address set local_address+1
      39/       0 : (MACRO)             	LOCALS_END
      39/       0 : =$E                 locals_end equ local_address
      39/       0 : =$E                 locals_size equ locals_end-locals_begin
      40/       0 :                     		
      41/    C000 :                     	ORG $C000
      42/    C000 :                     	;Setup before any emulator level loads
      43/    C000 :                     	;STZ global_emu_level
      44/    C000 : A9 03               	LDA #3
      45/    C002 : 85 F0               	STA global_emu_level
      46/    C004 :                     	
      47/    C004 :                     	;Setup for each emulator level
      48/    C004 :                     	emu_begin:
      49/    C004 :                     			
      50/    C004 :                     		;Calculate local emu level
      51/    C004 : A5 F0               		LDA global_emu_level
      52/    C006 : C9 05               		CMP #MAX_EMU_LEVEL
      53/    C008 : D0 03               		BNE .level_good
      54/    C00A : 4C 4E C0            			JMP ExitEmu
      55/    C00D :                     		.level_good:
      56/    C00D : E6 F0               		INC global_emu_level
      57/    C00F :                     		
      58/    C00F :                     		;Calculate SP and ZP data stack pointer
      59/    C00F : A8                  		TAY
      60/    C010 : AA                  		TAX
      61/    C011 : A9 00               		LDA #0
      62/    C013 : 18                  		CLC
      63/    C014 :                     		.loop:
      64/    C014 : 69 0E               			ADC #locals_size
      65/    C016 : CA                  			DEX
      66/    C017 : D0 FB               			BNE .loop
      67/    C019 : AA                  		TAX
      68/    C01A : 95 01               		STA emu_data_SP,X
      69/    C01C : 95 04               		STA emu_SP,X
      70/    C01E : 98                  		TYA
      71/    C01F : 95 00               		STA emu_level,X
      72/    C021 :                     		
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 4 - 1/5/2022 1:27:47


      73/    C021 :                     		;Clear emulated D flag
      74/    C021 : 74 08               		STZ emu_D_flag,X
      75/    C023 :                     		
      76/    C023 :                     		;Load emulated PC
      77/    C023 : A9 00               		LDA #(example_prog#256)
      78/    C025 : 95 02               		STA emu_PC,X
      79/    C027 : A9 F8               		LDA #(example_prog/256)
      80/    C029 : 95 03               		STA emu_PC+1,X
      81/    C02B :                     	
      82/    C02B :                     		;Start emulating - should never return from this
      83/    C02B : (MACRO)             		NEXT_MACRO
      83/    C02B :                                             ;Could also copy X to Y before NEXT then restore after jump
      83/    C02B :                                             
      83/    C02B :  (MACRO-2)                                  halt
      83/    C02B : 00                                  BRK
      83/    C02C : 00                                  BRK
      83/    C02D :                                             
      83/    C02D :                                             ;Jump table must be page aligned!!!
      83/    C02D : A1 02                                       LDA (emu_PC,X)
      83/    C02F : 0A                                          ASL
      83/    C030 : 95 0A                                       STA emu_ptr,X
      83/    C032 : A9 DF                                       LDA #hi(JUMP_TABLE)
      83/    C034 : 69 00                                       ADC #0
      83/    C036 : 95 0B                                       STA emu_ptr+1,X
      83/    C038 : A1 0A                                       LDA (emu_ptr,X)
      83/    C03A : 95 0C                                       STA emu_ptr2,X
      83/    C03C : F6 0A                                       INC emu_ptr,X
      83/    C03E : 90 02                                       BCC .skip
      83/    C040 : F6 0B                                               INC emu_ptr+1,X
      83/    C042 :                                             .skip:
      83/    C042 : A1 0A                                       LDA (emu_ptr,X)
      83/    C044 : 95 0D                                       STA emu_ptr2+1,X
      83/    C046 : 7C 0C 00                                    JMP (emu_ptr2,X)
      84/    C049 :                     		
      85/    C049 : (MACRO)             		halt
      85/    C049 : 00                                  BRK
      85/    C04A : 00                                  BRK
      86/    C04B : 4C 4B C0            		JMP *
      87/    C04E :                     
      88/    C04E :                     	;Deepest emulation layer reached - stop nesting
      89/    C04E :                     	ExitEmu:
      90/    C04E : (MACRO)             		halt
      90/    C04E : 00                                  BRK
      90/    C04F : 00                                  BRK
      91/    C050 : 4C 50 C0            		JMP *
      92/    C053 :                     	
      93/    C053 :                     	
      94/    C053 :                     		;Instruction routines
      95/    C053 :                     	;0x0 - BRK IMP
      96/    C053 :                     	BRK_IMP:
      97/    C053 : (MACRO)             		OP_MACRO 0, "BRK", "IMP", "BRK_IMP"
      97/    C053 :                                             ;TODO
      98/    C053 : (MACRO)             		NEXT_MACRO
      98/    C053 :                                             ;Could also copy X to Y before NEXT then restore after jump
      98/    C053 :                                             
      98/    C053 :  (MACRO-2)                                  halt
      98/    C053 : 00                                  BRK
      98/    C054 : 00                                  BRK
      98/    C055 :                                             
      98/    C055 :                                             ;Jump table must be page aligned!!!
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 5 - 1/5/2022 1:27:47


      98/    C055 : A1 02                                       LDA (emu_PC,X)
      98/    C057 : 0A                                          ASL
      98/    C058 : 95 0A                                       STA emu_ptr,X
      98/    C05A : A9 DF                                       LDA #hi(JUMP_TABLE)
      98/    C05C : 69 00                                       ADC #0
      98/    C05E : 95 0B                                       STA emu_ptr+1,X
      98/    C060 : A1 0A                                       LDA (emu_ptr,X)
      98/    C062 : 95 0C                                       STA emu_ptr2,X
      98/    C064 : F6 0A                                       INC emu_ptr,X
      98/    C066 : 90 02                                       BCC .skip
      98/    C068 : F6 0B                                               INC emu_ptr+1,X
      98/    C06A :                                             .skip:
      98/    C06A : A1 0A                                       LDA (emu_ptr,X)
      98/    C06C : 95 0D                                       STA emu_ptr2+1,X
      98/    C06E : 7C 0C 00                                    JMP (emu_ptr2,X)
      99/    C071 :                     
     100/    C071 :                     	;0x1 - ORA IX
     101/    C071 :                     	ORA_IX:
     102/    C071 : (MACRO)             		OP_MACRO 1, "ORA", "IX", "ORA_IX"
     102/    C071 :                                             ;TODO
     103/    C071 : (MACRO)             		NEXT_MACRO
     103/    C071 :                                             ;Could also copy X to Y before NEXT then restore after jump
     103/    C071 :                                             
     103/    C071 :  (MACRO-2)                                  halt
     103/    C071 : 00                                  BRK
     103/    C072 : 00                                  BRK
     103/    C073 :                                             
     103/    C073 :                                             ;Jump table must be page aligned!!!
     103/    C073 : A1 02                                       LDA (emu_PC,X)
     103/    C075 : 0A                                          ASL
     103/    C076 : 95 0A                                       STA emu_ptr,X
     103/    C078 : A9 DF                                       LDA #hi(JUMP_TABLE)
     103/    C07A : 69 00                                       ADC #0
     103/    C07C : 95 0B                                       STA emu_ptr+1,X
     103/    C07E : A1 0A                                       LDA (emu_ptr,X)
     103/    C080 : 95 0C                                       STA emu_ptr2,X
     103/    C082 : F6 0A                                       INC emu_ptr,X
     103/    C084 : 90 02                                       BCC .skip
     103/    C086 : F6 0B                                               INC emu_ptr+1,X
     103/    C088 :                                             .skip:
     103/    C088 : A1 0A                                       LDA (emu_ptr,X)
     103/    C08A : 95 0D                                       STA emu_ptr2+1,X
     103/    C08C : 7C 0C 00                                    JMP (emu_ptr2,X)
     104/    C08F :                     
     105/    C08F :                     	;0x2 - NOP
     106/    C08F :                     	NOP_0x2:
     107/    C08F : (MACRO)             		OP_MACRO 2, "NOP", "IMP", "NOP_0x2"
     107/    C08F :                                             ;TODO
     108/    C08F : (MACRO)             		NEXT_MACRO
     108/    C08F :                                             ;Could also copy X to Y before NEXT then restore after jump
     108/    C08F :                                             
     108/    C08F :  (MACRO-2)                                  halt
     108/    C08F : 00                                  BRK
     108/    C090 : 00                                  BRK
     108/    C091 :                                             
     108/    C091 :                                             ;Jump table must be page aligned!!!
     108/    C091 : A1 02                                       LDA (emu_PC,X)
     108/    C093 : 0A                                          ASL
     108/    C094 : 95 0A                                       STA emu_ptr,X
     108/    C096 : A9 DF                                       LDA #hi(JUMP_TABLE)
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 6 - 1/5/2022 1:27:47


     108/    C098 : 69 00                                       ADC #0
     108/    C09A : 95 0B                                       STA emu_ptr+1,X
     108/    C09C : A1 0A                                       LDA (emu_ptr,X)
     108/    C09E : 95 0C                                       STA emu_ptr2,X
     108/    C0A0 : F6 0A                                       INC emu_ptr,X
     108/    C0A2 : 90 02                                       BCC .skip
     108/    C0A4 : F6 0B                                               INC emu_ptr+1,X
     108/    C0A6 :                                             .skip:
     108/    C0A6 : A1 0A                                       LDA (emu_ptr,X)
     108/    C0A8 : 95 0D                                       STA emu_ptr2+1,X
     108/    C0AA : 7C 0C 00                                    JMP (emu_ptr2,X)
     109/    C0AD :                     
     110/    C0AD :                     	;0x3 - NOP
     111/    C0AD :                     	NOP_0x3:
     112/    C0AD : (MACRO)             		OP_MACRO 3, "NOP", "IMP", "NOP_0x3"
     112/    C0AD :                                             ;TODO
     113/    C0AD : (MACRO)             		NEXT_MACRO
     113/    C0AD :                                             ;Could also copy X to Y before NEXT then restore after jump
     113/    C0AD :                                             
     113/    C0AD :  (MACRO-2)                                  halt
     113/    C0AD : 00                                  BRK
     113/    C0AE : 00                                  BRK
     113/    C0AF :                                             
     113/    C0AF :                                             ;Jump table must be page aligned!!!
     113/    C0AF : A1 02                                       LDA (emu_PC,X)
     113/    C0B1 : 0A                                          ASL
     113/    C0B2 : 95 0A                                       STA emu_ptr,X
     113/    C0B4 : A9 DF                                       LDA #hi(JUMP_TABLE)
     113/    C0B6 : 69 00                                       ADC #0
     113/    C0B8 : 95 0B                                       STA emu_ptr+1,X
     113/    C0BA : A1 0A                                       LDA (emu_ptr,X)
     113/    C0BC : 95 0C                                       STA emu_ptr2,X
     113/    C0BE : F6 0A                                       INC emu_ptr,X
     113/    C0C0 : 90 02                                       BCC .skip
     113/    C0C2 : F6 0B                                               INC emu_ptr+1,X
     113/    C0C4 :                                             .skip:
     113/    C0C4 : A1 0A                                       LDA (emu_ptr,X)
     113/    C0C6 : 95 0D                                       STA emu_ptr2+1,X
     113/    C0C8 : 7C 0C 00                                    JMP (emu_ptr2,X)
     114/    C0CB :                     
     115/    C0CB :                     	;0x4 - NOP
     116/    C0CB :                     	NOP_0x4:
     117/    C0CB : (MACRO)             		OP_MACRO 4, "NOP", "IMP", "NOP_0x4"
     117/    C0CB :                                             ;TODO
     118/    C0CB : (MACRO)             		NEXT_MACRO
     118/    C0CB :                                             ;Could also copy X to Y before NEXT then restore after jump
     118/    C0CB :                                             
     118/    C0CB :  (MACRO-2)                                  halt
     118/    C0CB : 00                                  BRK
     118/    C0CC : 00                                  BRK
     118/    C0CD :                                             
     118/    C0CD :                                             ;Jump table must be page aligned!!!
     118/    C0CD : A1 02                                       LDA (emu_PC,X)
     118/    C0CF : 0A                                          ASL
     118/    C0D0 : 95 0A                                       STA emu_ptr,X
     118/    C0D2 : A9 DF                                       LDA #hi(JUMP_TABLE)
     118/    C0D4 : 69 00                                       ADC #0
     118/    C0D6 : 95 0B                                       STA emu_ptr+1,X
     118/    C0D8 : A1 0A                                       LDA (emu_ptr,X)
     118/    C0DA : 95 0C                                       STA emu_ptr2,X
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 7 - 1/5/2022 1:27:47


     118/    C0DC : F6 0A                                       INC emu_ptr,X
     118/    C0DE : 90 02                                       BCC .skip
     118/    C0E0 : F6 0B                                               INC emu_ptr+1,X
     118/    C0E2 :                                             .skip:
     118/    C0E2 : A1 0A                                       LDA (emu_ptr,X)
     118/    C0E4 : 95 0D                                       STA emu_ptr2+1,X
     118/    C0E6 : 7C 0C 00                                    JMP (emu_ptr2,X)
     119/    C0E9 :                     
     120/    C0E9 :                     	;0x5 - ORA ZP
     121/    C0E9 :                     	ORA_ZP:
     122/    C0E9 : (MACRO)             		OP_MACRO 5, "ORA", "ZP", "ORA_ZP"
     122/    C0E9 :                                             ;TODO
     123/    C0E9 : (MACRO)             		NEXT_MACRO
     123/    C0E9 :                                             ;Could also copy X to Y before NEXT then restore after jump
     123/    C0E9 :                                             
     123/    C0E9 :  (MACRO-2)                                  halt
     123/    C0E9 : 00                                  BRK
     123/    C0EA : 00                                  BRK
     123/    C0EB :                                             
     123/    C0EB :                                             ;Jump table must be page aligned!!!
     123/    C0EB : A1 02                                       LDA (emu_PC,X)
     123/    C0ED : 0A                                          ASL
     123/    C0EE : 95 0A                                       STA emu_ptr,X
     123/    C0F0 : A9 DF                                       LDA #hi(JUMP_TABLE)
     123/    C0F2 : 69 00                                       ADC #0
     123/    C0F4 : 95 0B                                       STA emu_ptr+1,X
     123/    C0F6 : A1 0A                                       LDA (emu_ptr,X)
     123/    C0F8 : 95 0C                                       STA emu_ptr2,X
     123/    C0FA : F6 0A                                       INC emu_ptr,X
     123/    C0FC : 90 02                                       BCC .skip
     123/    C0FE : F6 0B                                               INC emu_ptr+1,X
     123/    C100 :                                             .skip:
     123/    C100 : A1 0A                                       LDA (emu_ptr,X)
     123/    C102 : 95 0D                                       STA emu_ptr2+1,X
     123/    C104 : 7C 0C 00                                    JMP (emu_ptr2,X)
     124/    C107 :                     
     125/    C107 :                     	;0x6 - ASL ZP
     126/    C107 :                     	ASL_ZP:
     127/    C107 : (MACRO)             		OP_MACRO 6, "ASL", "ZP", "ASL_ZP"
     127/    C107 :                                             ;TODO
     128/    C107 : (MACRO)             		NEXT_MACRO
     128/    C107 :                                             ;Could also copy X to Y before NEXT then restore after jump
     128/    C107 :                                             
     128/    C107 :  (MACRO-2)                                  halt
     128/    C107 : 00                                  BRK
     128/    C108 : 00                                  BRK
     128/    C109 :                                             
     128/    C109 :                                             ;Jump table must be page aligned!!!
     128/    C109 : A1 02                                       LDA (emu_PC,X)
     128/    C10B : 0A                                          ASL
     128/    C10C : 95 0A                                       STA emu_ptr,X
     128/    C10E : A9 DF                                       LDA #hi(JUMP_TABLE)
     128/    C110 : 69 00                                       ADC #0
     128/    C112 : 95 0B                                       STA emu_ptr+1,X
     128/    C114 : A1 0A                                       LDA (emu_ptr,X)
     128/    C116 : 95 0C                                       STA emu_ptr2,X
     128/    C118 : F6 0A                                       INC emu_ptr,X
     128/    C11A : 90 02                                       BCC .skip
     128/    C11C : F6 0B                                               INC emu_ptr+1,X
     128/    C11E :                                             .skip:
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 8 - 1/5/2022 1:27:47


     128/    C11E : A1 0A                                       LDA (emu_ptr,X)
     128/    C120 : 95 0D                                       STA emu_ptr2+1,X
     128/    C122 : 7C 0C 00                                    JMP (emu_ptr2,X)
     129/    C125 :                     
     130/    C125 :                     	;0x7 - NOP
     131/    C125 :                     	NOP_0x7:
     132/    C125 : (MACRO)             		OP_MACRO 7, "NOP", "IMP", "NOP_0x7"
     132/    C125 :                                             ;TODO
     133/    C125 : (MACRO)             		NEXT_MACRO
     133/    C125 :                                             ;Could also copy X to Y before NEXT then restore after jump
     133/    C125 :                                             
     133/    C125 :  (MACRO-2)                                  halt
     133/    C125 : 00                                  BRK
     133/    C126 : 00                                  BRK
     133/    C127 :                                             
     133/    C127 :                                             ;Jump table must be page aligned!!!
     133/    C127 : A1 02                                       LDA (emu_PC,X)
     133/    C129 : 0A                                          ASL
     133/    C12A : 95 0A                                       STA emu_ptr,X
     133/    C12C : A9 DF                                       LDA #hi(JUMP_TABLE)
     133/    C12E : 69 00                                       ADC #0
     133/    C130 : 95 0B                                       STA emu_ptr+1,X
     133/    C132 : A1 0A                                       LDA (emu_ptr,X)
     133/    C134 : 95 0C                                       STA emu_ptr2,X
     133/    C136 : F6 0A                                       INC emu_ptr,X
     133/    C138 : 90 02                                       BCC .skip
     133/    C13A : F6 0B                                               INC emu_ptr+1,X
     133/    C13C :                                             .skip:
     133/    C13C : A1 0A                                       LDA (emu_ptr,X)
     133/    C13E : 95 0D                                       STA emu_ptr2+1,X
     133/    C140 : 7C 0C 00                                    JMP (emu_ptr2,X)
     134/    C143 :                     
     135/    C143 :                     	;0x8 - PHP IMP
     136/    C143 :                     	PHP_IMP:
     137/    C143 : (MACRO)             		OP_MACRO 8, "PHP", "IMP", "PHP_IMP"
     137/    C143 :                                             ;TODO
     138/    C143 : (MACRO)             		NEXT_MACRO
     138/    C143 :                                             ;Could also copy X to Y before NEXT then restore after jump
     138/    C143 :                                             
     138/    C143 :  (MACRO-2)                                  halt
     138/    C143 : 00                                  BRK
     138/    C144 : 00                                  BRK
     138/    C145 :                                             
     138/    C145 :                                             ;Jump table must be page aligned!!!
     138/    C145 : A1 02                                       LDA (emu_PC,X)
     138/    C147 : 0A                                          ASL
     138/    C148 : 95 0A                                       STA emu_ptr,X
     138/    C14A : A9 DF                                       LDA #hi(JUMP_TABLE)
     138/    C14C : 69 00                                       ADC #0
     138/    C14E : 95 0B                                       STA emu_ptr+1,X
     138/    C150 : A1 0A                                       LDA (emu_ptr,X)
     138/    C152 : 95 0C                                       STA emu_ptr2,X
     138/    C154 : F6 0A                                       INC emu_ptr,X
     138/    C156 : 90 02                                       BCC .skip
     138/    C158 : F6 0B                                               INC emu_ptr+1,X
     138/    C15A :                                             .skip:
     138/    C15A : A1 0A                                       LDA (emu_ptr,X)
     138/    C15C : 95 0D                                       STA emu_ptr2+1,X
     138/    C15E : 7C 0C 00                                    JMP (emu_ptr2,X)
     139/    C161 :                     
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 9 - 1/5/2022 1:27:47


     140/    C161 :                     	;0x9 - ORA IMMED
     141/    C161 :                     	ORA_IMMED:
     142/    C161 : (MACRO)             		OP_MACRO 9, "ORA", "IMMED", "ORA_IMMED"
     142/    C161 :                                             ;TODO
     143/    C161 : (MACRO)             		NEXT_MACRO
     143/    C161 :                                             ;Could also copy X to Y before NEXT then restore after jump
     143/    C161 :                                             
     143/    C161 :  (MACRO-2)                                  halt
     143/    C161 : 00                                  BRK
     143/    C162 : 00                                  BRK
     143/    C163 :                                             
     143/    C163 :                                             ;Jump table must be page aligned!!!
     143/    C163 : A1 02                                       LDA (emu_PC,X)
     143/    C165 : 0A                                          ASL
     143/    C166 : 95 0A                                       STA emu_ptr,X
     143/    C168 : A9 DF                                       LDA #hi(JUMP_TABLE)
     143/    C16A : 69 00                                       ADC #0
     143/    C16C : 95 0B                                       STA emu_ptr+1,X
     143/    C16E : A1 0A                                       LDA (emu_ptr,X)
     143/    C170 : 95 0C                                       STA emu_ptr2,X
     143/    C172 : F6 0A                                       INC emu_ptr,X
     143/    C174 : 90 02                                       BCC .skip
     143/    C176 : F6 0B                                               INC emu_ptr+1,X
     143/    C178 :                                             .skip:
     143/    C178 : A1 0A                                       LDA (emu_ptr,X)
     143/    C17A : 95 0D                                       STA emu_ptr2+1,X
     143/    C17C : 7C 0C 00                                    JMP (emu_ptr2,X)
     144/    C17F :                     
     145/    C17F :                     	;0xA - ASL A
     146/    C17F :                     	ASL_A:
     147/    C17F : (MACRO)             		OP_MACRO 10, "ASL", "A", "ASL_A"
     147/    C17F :                                             ;TODO
     148/    C17F : (MACRO)             		NEXT_MACRO
     148/    C17F :                                             ;Could also copy X to Y before NEXT then restore after jump
     148/    C17F :                                             
     148/    C17F :  (MACRO-2)                                  halt
     148/    C17F : 00                                  BRK
     148/    C180 : 00                                  BRK
     148/    C181 :                                             
     148/    C181 :                                             ;Jump table must be page aligned!!!
     148/    C181 : A1 02                                       LDA (emu_PC,X)
     148/    C183 : 0A                                          ASL
     148/    C184 : 95 0A                                       STA emu_ptr,X
     148/    C186 : A9 DF                                       LDA #hi(JUMP_TABLE)
     148/    C188 : 69 00                                       ADC #0
     148/    C18A : 95 0B                                       STA emu_ptr+1,X
     148/    C18C : A1 0A                                       LDA (emu_ptr,X)
     148/    C18E : 95 0C                                       STA emu_ptr2,X
     148/    C190 : F6 0A                                       INC emu_ptr,X
     148/    C192 : 90 02                                       BCC .skip
     148/    C194 : F6 0B                                               INC emu_ptr+1,X
     148/    C196 :                                             .skip:
     148/    C196 : A1 0A                                       LDA (emu_ptr,X)
     148/    C198 : 95 0D                                       STA emu_ptr2+1,X
     148/    C19A : 7C 0C 00                                    JMP (emu_ptr2,X)
     149/    C19D :                     
     150/    C19D :                     	;0xB - NOP
     151/    C19D :                     	NOP_0xB:
     152/    C19D : (MACRO)             		OP_MACRO 11, "NOP", "IMP", "NOP_0xB"
     152/    C19D :                                             ;TODO
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 10 - 1/5/2022 1:27:47


     153/    C19D : (MACRO)             		NEXT_MACRO
     153/    C19D :                                             ;Could also copy X to Y before NEXT then restore after jump
     153/    C19D :                                             
     153/    C19D :  (MACRO-2)                                  halt
     153/    C19D : 00                                  BRK
     153/    C19E : 00                                  BRK
     153/    C19F :                                             
     153/    C19F :                                             ;Jump table must be page aligned!!!
     153/    C19F : A1 02                                       LDA (emu_PC,X)
     153/    C1A1 : 0A                                          ASL
     153/    C1A2 : 95 0A                                       STA emu_ptr,X
     153/    C1A4 : A9 DF                                       LDA #hi(JUMP_TABLE)
     153/    C1A6 : 69 00                                       ADC #0
     153/    C1A8 : 95 0B                                       STA emu_ptr+1,X
     153/    C1AA : A1 0A                                       LDA (emu_ptr,X)
     153/    C1AC : 95 0C                                       STA emu_ptr2,X
     153/    C1AE : F6 0A                                       INC emu_ptr,X
     153/    C1B0 : 90 02                                       BCC .skip
     153/    C1B2 : F6 0B                                               INC emu_ptr+1,X
     153/    C1B4 :                                             .skip:
     153/    C1B4 : A1 0A                                       LDA (emu_ptr,X)
     153/    C1B6 : 95 0D                                       STA emu_ptr2+1,X
     153/    C1B8 : 7C 0C 00                                    JMP (emu_ptr2,X)
     154/    C1BB :                     
     155/    C1BB :                     	;0xC - NOP
     156/    C1BB :                     	NOP_0xC:
     157/    C1BB : (MACRO)             		OP_MACRO 12, "NOP", "IMP", "NOP_0xC"
     157/    C1BB :                                             ;TODO
     158/    C1BB : (MACRO)             		NEXT_MACRO
     158/    C1BB :                                             ;Could also copy X to Y before NEXT then restore after jump
     158/    C1BB :                                             
     158/    C1BB :  (MACRO-2)                                  halt
     158/    C1BB : 00                                  BRK
     158/    C1BC : 00                                  BRK
     158/    C1BD :                                             
     158/    C1BD :                                             ;Jump table must be page aligned!!!
     158/    C1BD : A1 02                                       LDA (emu_PC,X)
     158/    C1BF : 0A                                          ASL
     158/    C1C0 : 95 0A                                       STA emu_ptr,X
     158/    C1C2 : A9 DF                                       LDA #hi(JUMP_TABLE)
     158/    C1C4 : 69 00                                       ADC #0
     158/    C1C6 : 95 0B                                       STA emu_ptr+1,X
     158/    C1C8 : A1 0A                                       LDA (emu_ptr,X)
     158/    C1CA : 95 0C                                       STA emu_ptr2,X
     158/    C1CC : F6 0A                                       INC emu_ptr,X
     158/    C1CE : 90 02                                       BCC .skip
     158/    C1D0 : F6 0B                                               INC emu_ptr+1,X
     158/    C1D2 :                                             .skip:
     158/    C1D2 : A1 0A                                       LDA (emu_ptr,X)
     158/    C1D4 : 95 0D                                       STA emu_ptr2+1,X
     158/    C1D6 : 7C 0C 00                                    JMP (emu_ptr2,X)
     159/    C1D9 :                     
     160/    C1D9 :                     	;0xD - ORA ABS
     161/    C1D9 :                     	ORA_ABS:
     162/    C1D9 : (MACRO)             		OP_MACRO 13, "ORA", "ABS", "ORA_ABS"
     162/    C1D9 :                                             ;TODO
     163/    C1D9 : (MACRO)             		NEXT_MACRO
     163/    C1D9 :                                             ;Could also copy X to Y before NEXT then restore after jump
     163/    C1D9 :                                             
     163/    C1D9 :  (MACRO-2)                                  halt
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 11 - 1/5/2022 1:27:47


     163/    C1D9 : 00                                  BRK
     163/    C1DA : 00                                  BRK
     163/    C1DB :                                             
     163/    C1DB :                                             ;Jump table must be page aligned!!!
     163/    C1DB : A1 02                                       LDA (emu_PC,X)
     163/    C1DD : 0A                                          ASL
     163/    C1DE : 95 0A                                       STA emu_ptr,X
     163/    C1E0 : A9 DF                                       LDA #hi(JUMP_TABLE)
     163/    C1E2 : 69 00                                       ADC #0
     163/    C1E4 : 95 0B                                       STA emu_ptr+1,X
     163/    C1E6 : A1 0A                                       LDA (emu_ptr,X)
     163/    C1E8 : 95 0C                                       STA emu_ptr2,X
     163/    C1EA : F6 0A                                       INC emu_ptr,X
     163/    C1EC : 90 02                                       BCC .skip
     163/    C1EE : F6 0B                                               INC emu_ptr+1,X
     163/    C1F0 :                                             .skip:
     163/    C1F0 : A1 0A                                       LDA (emu_ptr,X)
     163/    C1F2 : 95 0D                                       STA emu_ptr2+1,X
     163/    C1F4 : 7C 0C 00                                    JMP (emu_ptr2,X)
     164/    C1F7 :                     
     165/    C1F7 :                     	;0xE - ASL ABS
     166/    C1F7 :                     	ASL_ABS:
     167/    C1F7 : (MACRO)             		OP_MACRO 14, "ASL", "ABS", "ASL_ABS"
     167/    C1F7 :                                             ;TODO
     168/    C1F7 : (MACRO)             		NEXT_MACRO
     168/    C1F7 :                                             ;Could also copy X to Y before NEXT then restore after jump
     168/    C1F7 :                                             
     168/    C1F7 :  (MACRO-2)                                  halt
     168/    C1F7 : 00                                  BRK
     168/    C1F8 : 00                                  BRK
     168/    C1F9 :                                             
     168/    C1F9 :                                             ;Jump table must be page aligned!!!
     168/    C1F9 : A1 02                                       LDA (emu_PC,X)
     168/    C1FB : 0A                                          ASL
     168/    C1FC : 95 0A                                       STA emu_ptr,X
     168/    C1FE : A9 DF                                       LDA #hi(JUMP_TABLE)
     168/    C200 : 69 00                                       ADC #0
     168/    C202 : 95 0B                                       STA emu_ptr+1,X
     168/    C204 : A1 0A                                       LDA (emu_ptr,X)
     168/    C206 : 95 0C                                       STA emu_ptr2,X
     168/    C208 : F6 0A                                       INC emu_ptr,X
     168/    C20A : 90 02                                       BCC .skip
     168/    C20C : F6 0B                                               INC emu_ptr+1,X
     168/    C20E :                                             .skip:
     168/    C20E : A1 0A                                       LDA (emu_ptr,X)
     168/    C210 : 95 0D                                       STA emu_ptr2+1,X
     168/    C212 : 7C 0C 00                                    JMP (emu_ptr2,X)
     169/    C215 :                     
     170/    C215 :                     	;0xF - NOP
     171/    C215 :                     	NOP_0xF:
     172/    C215 : (MACRO)             		OP_MACRO 15, "NOP", "IMP", "NOP_0xF"
     172/    C215 :                                             ;TODO
     173/    C215 : (MACRO)             		NEXT_MACRO
     173/    C215 :                                             ;Could also copy X to Y before NEXT then restore after jump
     173/    C215 :                                             
     173/    C215 :  (MACRO-2)                                  halt
     173/    C215 : 00                                  BRK
     173/    C216 : 00                                  BRK
     173/    C217 :                                             
     173/    C217 :                                             ;Jump table must be page aligned!!!
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 12 - 1/5/2022 1:27:47


     173/    C217 : A1 02                                       LDA (emu_PC,X)
     173/    C219 : 0A                                          ASL
     173/    C21A : 95 0A                                       STA emu_ptr,X
     173/    C21C : A9 DF                                       LDA #hi(JUMP_TABLE)
     173/    C21E : 69 00                                       ADC #0
     173/    C220 : 95 0B                                       STA emu_ptr+1,X
     173/    C222 : A1 0A                                       LDA (emu_ptr,X)
     173/    C224 : 95 0C                                       STA emu_ptr2,X
     173/    C226 : F6 0A                                       INC emu_ptr,X
     173/    C228 : 90 02                                       BCC .skip
     173/    C22A : F6 0B                                               INC emu_ptr+1,X
     173/    C22C :                                             .skip:
     173/    C22C : A1 0A                                       LDA (emu_ptr,X)
     173/    C22E : 95 0D                                       STA emu_ptr2+1,X
     173/    C230 : 7C 0C 00                                    JMP (emu_ptr2,X)
     174/    C233 :                     
     175/    C233 :                     	;0x10 - BPL REL
     176/    C233 :                     	BPL_REL:
     177/    C233 : (MACRO)             		OP_MACRO 16, "BPL", "REL", "BPL_REL"
     177/    C233 :                                             ;TODO
     178/    C233 : (MACRO)             		NEXT_MACRO
     178/    C233 :                                             ;Could also copy X to Y before NEXT then restore after jump
     178/    C233 :                                             
     178/    C233 :  (MACRO-2)                                  halt
     178/    C233 : 00                                  BRK
     178/    C234 : 00                                  BRK
     178/    C235 :                                             
     178/    C235 :                                             ;Jump table must be page aligned!!!
     178/    C235 : A1 02                                       LDA (emu_PC,X)
     178/    C237 : 0A                                          ASL
     178/    C238 : 95 0A                                       STA emu_ptr,X
     178/    C23A : A9 DF                                       LDA #hi(JUMP_TABLE)
     178/    C23C : 69 00                                       ADC #0
     178/    C23E : 95 0B                                       STA emu_ptr+1,X
     178/    C240 : A1 0A                                       LDA (emu_ptr,X)
     178/    C242 : 95 0C                                       STA emu_ptr2,X
     178/    C244 : F6 0A                                       INC emu_ptr,X
     178/    C246 : 90 02                                       BCC .skip
     178/    C248 : F6 0B                                               INC emu_ptr+1,X
     178/    C24A :                                             .skip:
     178/    C24A : A1 0A                                       LDA (emu_ptr,X)
     178/    C24C : 95 0D                                       STA emu_ptr2+1,X
     178/    C24E : 7C 0C 00                                    JMP (emu_ptr2,X)
     179/    C251 :                     
     180/    C251 :                     	;0x11 - ORA IY
     181/    C251 :                     	ORA_IY:
     182/    C251 : (MACRO)             		OP_MACRO 17, "ORA", "IY", "ORA_IY"
     182/    C251 :                                             ;TODO
     183/    C251 : (MACRO)             		NEXT_MACRO
     183/    C251 :                                             ;Could also copy X to Y before NEXT then restore after jump
     183/    C251 :                                             
     183/    C251 :  (MACRO-2)                                  halt
     183/    C251 : 00                                  BRK
     183/    C252 : 00                                  BRK
     183/    C253 :                                             
     183/    C253 :                                             ;Jump table must be page aligned!!!
     183/    C253 : A1 02                                       LDA (emu_PC,X)
     183/    C255 : 0A                                          ASL
     183/    C256 : 95 0A                                       STA emu_ptr,X
     183/    C258 : A9 DF                                       LDA #hi(JUMP_TABLE)
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 13 - 1/5/2022 1:27:47


     183/    C25A : 69 00                                       ADC #0
     183/    C25C : 95 0B                                       STA emu_ptr+1,X
     183/    C25E : A1 0A                                       LDA (emu_ptr,X)
     183/    C260 : 95 0C                                       STA emu_ptr2,X
     183/    C262 : F6 0A                                       INC emu_ptr,X
     183/    C264 : 90 02                                       BCC .skip
     183/    C266 : F6 0B                                               INC emu_ptr+1,X
     183/    C268 :                                             .skip:
     183/    C268 : A1 0A                                       LDA (emu_ptr,X)
     183/    C26A : 95 0D                                       STA emu_ptr2+1,X
     183/    C26C : 7C 0C 00                                    JMP (emu_ptr2,X)
     184/    C26F :                     
     185/    C26F :                     	;0x12 - NOP
     186/    C26F :                     	NOP_0x12:
     187/    C26F : (MACRO)             		OP_MACRO 18, "NOP", "IMP", "NOP_0x12"
     187/    C26F :                                             ;TODO
     188/    C26F : (MACRO)             		NEXT_MACRO
     188/    C26F :                                             ;Could also copy X to Y before NEXT then restore after jump
     188/    C26F :                                             
     188/    C26F :  (MACRO-2)                                  halt
     188/    C26F : 00                                  BRK
     188/    C270 : 00                                  BRK
     188/    C271 :                                             
     188/    C271 :                                             ;Jump table must be page aligned!!!
     188/    C271 : A1 02                                       LDA (emu_PC,X)
     188/    C273 : 0A                                          ASL
     188/    C274 : 95 0A                                       STA emu_ptr,X
     188/    C276 : A9 DF                                       LDA #hi(JUMP_TABLE)
     188/    C278 : 69 00                                       ADC #0
     188/    C27A : 95 0B                                       STA emu_ptr+1,X
     188/    C27C : A1 0A                                       LDA (emu_ptr,X)
     188/    C27E : 95 0C                                       STA emu_ptr2,X
     188/    C280 : F6 0A                                       INC emu_ptr,X
     188/    C282 : 90 02                                       BCC .skip
     188/    C284 : F6 0B                                               INC emu_ptr+1,X
     188/    C286 :                                             .skip:
     188/    C286 : A1 0A                                       LDA (emu_ptr,X)
     188/    C288 : 95 0D                                       STA emu_ptr2+1,X
     188/    C28A : 7C 0C 00                                    JMP (emu_ptr2,X)
     189/    C28D :                     
     190/    C28D :                     	;0x13 - NOP
     191/    C28D :                     	NOP_0x13:
     192/    C28D : (MACRO)             		OP_MACRO 19, "NOP", "IMP", "NOP_0x13"
     192/    C28D :                                             ;TODO
     193/    C28D : (MACRO)             		NEXT_MACRO
     193/    C28D :                                             ;Could also copy X to Y before NEXT then restore after jump
     193/    C28D :                                             
     193/    C28D :  (MACRO-2)                                  halt
     193/    C28D : 00                                  BRK
     193/    C28E : 00                                  BRK
     193/    C28F :                                             
     193/    C28F :                                             ;Jump table must be page aligned!!!
     193/    C28F : A1 02                                       LDA (emu_PC,X)
     193/    C291 : 0A                                          ASL
     193/    C292 : 95 0A                                       STA emu_ptr,X
     193/    C294 : A9 DF                                       LDA #hi(JUMP_TABLE)
     193/    C296 : 69 00                                       ADC #0
     193/    C298 : 95 0B                                       STA emu_ptr+1,X
     193/    C29A : A1 0A                                       LDA (emu_ptr,X)
     193/    C29C : 95 0C                                       STA emu_ptr2,X
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 14 - 1/5/2022 1:27:47


     193/    C29E : F6 0A                                       INC emu_ptr,X
     193/    C2A0 : 90 02                                       BCC .skip
     193/    C2A2 : F6 0B                                               INC emu_ptr+1,X
     193/    C2A4 :                                             .skip:
     193/    C2A4 : A1 0A                                       LDA (emu_ptr,X)
     193/    C2A6 : 95 0D                                       STA emu_ptr2+1,X
     193/    C2A8 : 7C 0C 00                                    JMP (emu_ptr2,X)
     194/    C2AB :                     
     195/    C2AB :                     	;0x14 - NOP
     196/    C2AB :                     	NOP_0x14:
     197/    C2AB : (MACRO)             		OP_MACRO 20, "NOP", "IMP", "NOP_0x14"
     197/    C2AB :                                             ;TODO
     198/    C2AB : (MACRO)             		NEXT_MACRO
     198/    C2AB :                                             ;Could also copy X to Y before NEXT then restore after jump
     198/    C2AB :                                             
     198/    C2AB :  (MACRO-2)                                  halt
     198/    C2AB : 00                                  BRK
     198/    C2AC : 00                                  BRK
     198/    C2AD :                                             
     198/    C2AD :                                             ;Jump table must be page aligned!!!
     198/    C2AD : A1 02                                       LDA (emu_PC,X)
     198/    C2AF : 0A                                          ASL
     198/    C2B0 : 95 0A                                       STA emu_ptr,X
     198/    C2B2 : A9 DF                                       LDA #hi(JUMP_TABLE)
     198/    C2B4 : 69 00                                       ADC #0
     198/    C2B6 : 95 0B                                       STA emu_ptr+1,X
     198/    C2B8 : A1 0A                                       LDA (emu_ptr,X)
     198/    C2BA : 95 0C                                       STA emu_ptr2,X
     198/    C2BC : F6 0A                                       INC emu_ptr,X
     198/    C2BE : 90 02                                       BCC .skip
     198/    C2C0 : F6 0B                                               INC emu_ptr+1,X
     198/    C2C2 :                                             .skip:
     198/    C2C2 : A1 0A                                       LDA (emu_ptr,X)
     198/    C2C4 : 95 0D                                       STA emu_ptr2+1,X
     198/    C2C6 : 7C 0C 00                                    JMP (emu_ptr2,X)
     199/    C2C9 :                     
     200/    C2C9 :                     	;0x15 - ORA ZPX
     201/    C2C9 :                     	ORA_ZPX:
     202/    C2C9 : (MACRO)             		OP_MACRO 21, "ORA", "ZPX", "ORA_ZPX"
     202/    C2C9 :                                             ;TODO
     203/    C2C9 : (MACRO)             		NEXT_MACRO
     203/    C2C9 :                                             ;Could also copy X to Y before NEXT then restore after jump
     203/    C2C9 :                                             
     203/    C2C9 :  (MACRO-2)                                  halt
     203/    C2C9 : 00                                  BRK
     203/    C2CA : 00                                  BRK
     203/    C2CB :                                             
     203/    C2CB :                                             ;Jump table must be page aligned!!!
     203/    C2CB : A1 02                                       LDA (emu_PC,X)
     203/    C2CD : 0A                                          ASL
     203/    C2CE : 95 0A                                       STA emu_ptr,X
     203/    C2D0 : A9 DF                                       LDA #hi(JUMP_TABLE)
     203/    C2D2 : 69 00                                       ADC #0
     203/    C2D4 : 95 0B                                       STA emu_ptr+1,X
     203/    C2D6 : A1 0A                                       LDA (emu_ptr,X)
     203/    C2D8 : 95 0C                                       STA emu_ptr2,X
     203/    C2DA : F6 0A                                       INC emu_ptr,X
     203/    C2DC : 90 02                                       BCC .skip
     203/    C2DE : F6 0B                                               INC emu_ptr+1,X
     203/    C2E0 :                                             .skip:
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 15 - 1/5/2022 1:27:47


     203/    C2E0 : A1 0A                                       LDA (emu_ptr,X)
     203/    C2E2 : 95 0D                                       STA emu_ptr2+1,X
     203/    C2E4 : 7C 0C 00                                    JMP (emu_ptr2,X)
     204/    C2E7 :                     
     205/    C2E7 :                     	;0x16 - ASL ZPX
     206/    C2E7 :                     	ASL_ZPX:
     207/    C2E7 : (MACRO)             		OP_MACRO 22, "ASL", "ZPX", "ASL_ZPX"
     207/    C2E7 :                                             ;TODO
     208/    C2E7 : (MACRO)             		NEXT_MACRO
     208/    C2E7 :                                             ;Could also copy X to Y before NEXT then restore after jump
     208/    C2E7 :                                             
     208/    C2E7 :  (MACRO-2)                                  halt
     208/    C2E7 : 00                                  BRK
     208/    C2E8 : 00                                  BRK
     208/    C2E9 :                                             
     208/    C2E9 :                                             ;Jump table must be page aligned!!!
     208/    C2E9 : A1 02                                       LDA (emu_PC,X)
     208/    C2EB : 0A                                          ASL
     208/    C2EC : 95 0A                                       STA emu_ptr,X
     208/    C2EE : A9 DF                                       LDA #hi(JUMP_TABLE)
     208/    C2F0 : 69 00                                       ADC #0
     208/    C2F2 : 95 0B                                       STA emu_ptr+1,X
     208/    C2F4 : A1 0A                                       LDA (emu_ptr,X)
     208/    C2F6 : 95 0C                                       STA emu_ptr2,X
     208/    C2F8 : F6 0A                                       INC emu_ptr,X
     208/    C2FA : 90 02                                       BCC .skip
     208/    C2FC : F6 0B                                               INC emu_ptr+1,X
     208/    C2FE :                                             .skip:
     208/    C2FE : A1 0A                                       LDA (emu_ptr,X)
     208/    C300 : 95 0D                                       STA emu_ptr2+1,X
     208/    C302 : 7C 0C 00                                    JMP (emu_ptr2,X)
     209/    C305 :                     
     210/    C305 :                     	;0x17 - NOP
     211/    C305 :                     	NOP_0x17:
     212/    C305 : (MACRO)             		OP_MACRO 23, "NOP", "IMP", "NOP_0x17"
     212/    C305 :                                             ;TODO
     213/    C305 : (MACRO)             		NEXT_MACRO
     213/    C305 :                                             ;Could also copy X to Y before NEXT then restore after jump
     213/    C305 :                                             
     213/    C305 :  (MACRO-2)                                  halt
     213/    C305 : 00                                  BRK
     213/    C306 : 00                                  BRK
     213/    C307 :                                             
     213/    C307 :                                             ;Jump table must be page aligned!!!
     213/    C307 : A1 02                                       LDA (emu_PC,X)
     213/    C309 : 0A                                          ASL
     213/    C30A : 95 0A                                       STA emu_ptr,X
     213/    C30C : A9 DF                                       LDA #hi(JUMP_TABLE)
     213/    C30E : 69 00                                       ADC #0
     213/    C310 : 95 0B                                       STA emu_ptr+1,X
     213/    C312 : A1 0A                                       LDA (emu_ptr,X)
     213/    C314 : 95 0C                                       STA emu_ptr2,X
     213/    C316 : F6 0A                                       INC emu_ptr,X
     213/    C318 : 90 02                                       BCC .skip
     213/    C31A : F6 0B                                               INC emu_ptr+1,X
     213/    C31C :                                             .skip:
     213/    C31C : A1 0A                                       LDA (emu_ptr,X)
     213/    C31E : 95 0D                                       STA emu_ptr2+1,X
     213/    C320 : 7C 0C 00                                    JMP (emu_ptr2,X)
     214/    C323 :                     
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 16 - 1/5/2022 1:27:47


     215/    C323 :                     	;0x18 - CLC IMP
     216/    C323 :                     	CLC_IMP:
     217/    C323 : (MACRO)             		OP_MACRO 24, "CLC", "IMP", "CLC_IMP"
     217/    C323 :                                             ;TODO
     218/    C323 : (MACRO)             		NEXT_MACRO
     218/    C323 :                                             ;Could also copy X to Y before NEXT then restore after jump
     218/    C323 :                                             
     218/    C323 :  (MACRO-2)                                  halt
     218/    C323 : 00                                  BRK
     218/    C324 : 00                                  BRK
     218/    C325 :                                             
     218/    C325 :                                             ;Jump table must be page aligned!!!
     218/    C325 : A1 02                                       LDA (emu_PC,X)
     218/    C327 : 0A                                          ASL
     218/    C328 : 95 0A                                       STA emu_ptr,X
     218/    C32A : A9 DF                                       LDA #hi(JUMP_TABLE)
     218/    C32C : 69 00                                       ADC #0
     218/    C32E : 95 0B                                       STA emu_ptr+1,X
     218/    C330 : A1 0A                                       LDA (emu_ptr,X)
     218/    C332 : 95 0C                                       STA emu_ptr2,X
     218/    C334 : F6 0A                                       INC emu_ptr,X
     218/    C336 : 90 02                                       BCC .skip
     218/    C338 : F6 0B                                               INC emu_ptr+1,X
     218/    C33A :                                             .skip:
     218/    C33A : A1 0A                                       LDA (emu_ptr,X)
     218/    C33C : 95 0D                                       STA emu_ptr2+1,X
     218/    C33E : 7C 0C 00                                    JMP (emu_ptr2,X)
     219/    C341 :                     
     220/    C341 :                     	;0x19 - ORA ABSY
     221/    C341 :                     	ORA_ABSY:
     222/    C341 : (MACRO)             		OP_MACRO 25, "ORA", "ABSY", "ORA_ABSY"
     222/    C341 :                                             ;TODO
     223/    C341 : (MACRO)             		NEXT_MACRO
     223/    C341 :                                             ;Could also copy X to Y before NEXT then restore after jump
     223/    C341 :                                             
     223/    C341 :  (MACRO-2)                                  halt
     223/    C341 : 00                                  BRK
     223/    C342 : 00                                  BRK
     223/    C343 :                                             
     223/    C343 :                                             ;Jump table must be page aligned!!!
     223/    C343 : A1 02                                       LDA (emu_PC,X)
     223/    C345 : 0A                                          ASL
     223/    C346 : 95 0A                                       STA emu_ptr,X
     223/    C348 : A9 DF                                       LDA #hi(JUMP_TABLE)
     223/    C34A : 69 00                                       ADC #0
     223/    C34C : 95 0B                                       STA emu_ptr+1,X
     223/    C34E : A1 0A                                       LDA (emu_ptr,X)
     223/    C350 : 95 0C                                       STA emu_ptr2,X
     223/    C352 : F6 0A                                       INC emu_ptr,X
     223/    C354 : 90 02                                       BCC .skip
     223/    C356 : F6 0B                                               INC emu_ptr+1,X
     223/    C358 :                                             .skip:
     223/    C358 : A1 0A                                       LDA (emu_ptr,X)
     223/    C35A : 95 0D                                       STA emu_ptr2+1,X
     223/    C35C : 7C 0C 00                                    JMP (emu_ptr2,X)
     224/    C35F :                     
     225/    C35F :                     	;0x1A - NOP
     226/    C35F :                     	NOP_0x1A:
     227/    C35F : (MACRO)             		OP_MACRO 26, "NOP", "IMP", "NOP_0x1A"
     227/    C35F :                                             ;TODO
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 17 - 1/5/2022 1:27:47


     228/    C35F : (MACRO)             		NEXT_MACRO
     228/    C35F :                                             ;Could also copy X to Y before NEXT then restore after jump
     228/    C35F :                                             
     228/    C35F :  (MACRO-2)                                  halt
     228/    C35F : 00                                  BRK
     228/    C360 : 00                                  BRK
     228/    C361 :                                             
     228/    C361 :                                             ;Jump table must be page aligned!!!
     228/    C361 : A1 02                                       LDA (emu_PC,X)
     228/    C363 : 0A                                          ASL
     228/    C364 : 95 0A                                       STA emu_ptr,X
     228/    C366 : A9 DF                                       LDA #hi(JUMP_TABLE)
     228/    C368 : 69 00                                       ADC #0
     228/    C36A : 95 0B                                       STA emu_ptr+1,X
     228/    C36C : A1 0A                                       LDA (emu_ptr,X)
     228/    C36E : 95 0C                                       STA emu_ptr2,X
     228/    C370 : F6 0A                                       INC emu_ptr,X
     228/    C372 : 90 02                                       BCC .skip
     228/    C374 : F6 0B                                               INC emu_ptr+1,X
     228/    C376 :                                             .skip:
     228/    C376 : A1 0A                                       LDA (emu_ptr,X)
     228/    C378 : 95 0D                                       STA emu_ptr2+1,X
     228/    C37A : 7C 0C 00                                    JMP (emu_ptr2,X)
     229/    C37D :                     
     230/    C37D :                     	;0x1B - NOP
     231/    C37D :                     	NOP_0x1B:
     232/    C37D : (MACRO)             		OP_MACRO 27, "NOP", "IMP", "NOP_0x1B"
     232/    C37D :                                             ;TODO
     233/    C37D : (MACRO)             		NEXT_MACRO
     233/    C37D :                                             ;Could also copy X to Y before NEXT then restore after jump
     233/    C37D :                                             
     233/    C37D :  (MACRO-2)                                  halt
     233/    C37D : 00                                  BRK
     233/    C37E : 00                                  BRK
     233/    C37F :                                             
     233/    C37F :                                             ;Jump table must be page aligned!!!
     233/    C37F : A1 02                                       LDA (emu_PC,X)
     233/    C381 : 0A                                          ASL
     233/    C382 : 95 0A                                       STA emu_ptr,X
     233/    C384 : A9 DF                                       LDA #hi(JUMP_TABLE)
     233/    C386 : 69 00                                       ADC #0
     233/    C388 : 95 0B                                       STA emu_ptr+1,X
     233/    C38A : A1 0A                                       LDA (emu_ptr,X)
     233/    C38C : 95 0C                                       STA emu_ptr2,X
     233/    C38E : F6 0A                                       INC emu_ptr,X
     233/    C390 : 90 02                                       BCC .skip
     233/    C392 : F6 0B                                               INC emu_ptr+1,X
     233/    C394 :                                             .skip:
     233/    C394 : A1 0A                                       LDA (emu_ptr,X)
     233/    C396 : 95 0D                                       STA emu_ptr2+1,X
     233/    C398 : 7C 0C 00                                    JMP (emu_ptr2,X)
     234/    C39B :                     
     235/    C39B :                     	;0x1C - NOP
     236/    C39B :                     	NOP_0x1C:
     237/    C39B : (MACRO)             		OP_MACRO 28, "NOP", "IMP", "NOP_0x1C"
     237/    C39B :                                             ;TODO
     238/    C39B : (MACRO)             		NEXT_MACRO
     238/    C39B :                                             ;Could also copy X to Y before NEXT then restore after jump
     238/    C39B :                                             
     238/    C39B :  (MACRO-2)                                  halt
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 18 - 1/5/2022 1:27:47


     238/    C39B : 00                                  BRK
     238/    C39C : 00                                  BRK
     238/    C39D :                                             
     238/    C39D :                                             ;Jump table must be page aligned!!!
     238/    C39D : A1 02                                       LDA (emu_PC,X)
     238/    C39F : 0A                                          ASL
     238/    C3A0 : 95 0A                                       STA emu_ptr,X
     238/    C3A2 : A9 DF                                       LDA #hi(JUMP_TABLE)
     238/    C3A4 : 69 00                                       ADC #0
     238/    C3A6 : 95 0B                                       STA emu_ptr+1,X
     238/    C3A8 : A1 0A                                       LDA (emu_ptr,X)
     238/    C3AA : 95 0C                                       STA emu_ptr2,X
     238/    C3AC : F6 0A                                       INC emu_ptr,X
     238/    C3AE : 90 02                                       BCC .skip
     238/    C3B0 : F6 0B                                               INC emu_ptr+1,X
     238/    C3B2 :                                             .skip:
     238/    C3B2 : A1 0A                                       LDA (emu_ptr,X)
     238/    C3B4 : 95 0D                                       STA emu_ptr2+1,X
     238/    C3B6 : 7C 0C 00                                    JMP (emu_ptr2,X)
     239/    C3B9 :                     
     240/    C3B9 :                     	;0x1D - ORA ABSX
     241/    C3B9 :                     	ORA_ABSX:
     242/    C3B9 : (MACRO)             		OP_MACRO 29, "ORA", "ABSX", "ORA_ABSX"
     242/    C3B9 :                                             ;TODO
     243/    C3B9 : (MACRO)             		NEXT_MACRO
     243/    C3B9 :                                             ;Could also copy X to Y before NEXT then restore after jump
     243/    C3B9 :                                             
     243/    C3B9 :  (MACRO-2)                                  halt
     243/    C3B9 : 00                                  BRK
     243/    C3BA : 00                                  BRK
     243/    C3BB :                                             
     243/    C3BB :                                             ;Jump table must be page aligned!!!
     243/    C3BB : A1 02                                       LDA (emu_PC,X)
     243/    C3BD : 0A                                          ASL
     243/    C3BE : 95 0A                                       STA emu_ptr,X
     243/    C3C0 : A9 DF                                       LDA #hi(JUMP_TABLE)
     243/    C3C2 : 69 00                                       ADC #0
     243/    C3C4 : 95 0B                                       STA emu_ptr+1,X
     243/    C3C6 : A1 0A                                       LDA (emu_ptr,X)
     243/    C3C8 : 95 0C                                       STA emu_ptr2,X
     243/    C3CA : F6 0A                                       INC emu_ptr,X
     243/    C3CC : 90 02                                       BCC .skip
     243/    C3CE : F6 0B                                               INC emu_ptr+1,X
     243/    C3D0 :                                             .skip:
     243/    C3D0 : A1 0A                                       LDA (emu_ptr,X)
     243/    C3D2 : 95 0D                                       STA emu_ptr2+1,X
     243/    C3D4 : 7C 0C 00                                    JMP (emu_ptr2,X)
     244/    C3D7 :                     
     245/    C3D7 :                     	;0x1E - ASL ABSX
     246/    C3D7 :                     	ASL_ABSX:
     247/    C3D7 : (MACRO)             		OP_MACRO 30, "ASL", "ABSX", "ASL_ABSX"
     247/    C3D7 :                                             ;TODO
     248/    C3D7 : (MACRO)             		NEXT_MACRO
     248/    C3D7 :                                             ;Could also copy X to Y before NEXT then restore after jump
     248/    C3D7 :                                             
     248/    C3D7 :  (MACRO-2)                                  halt
     248/    C3D7 : 00                                  BRK
     248/    C3D8 : 00                                  BRK
     248/    C3D9 :                                             
     248/    C3D9 :                                             ;Jump table must be page aligned!!!
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 19 - 1/5/2022 1:27:47


     248/    C3D9 : A1 02                                       LDA (emu_PC,X)
     248/    C3DB : 0A                                          ASL
     248/    C3DC : 95 0A                                       STA emu_ptr,X
     248/    C3DE : A9 DF                                       LDA #hi(JUMP_TABLE)
     248/    C3E0 : 69 00                                       ADC #0
     248/    C3E2 : 95 0B                                       STA emu_ptr+1,X
     248/    C3E4 : A1 0A                                       LDA (emu_ptr,X)
     248/    C3E6 : 95 0C                                       STA emu_ptr2,X
     248/    C3E8 : F6 0A                                       INC emu_ptr,X
     248/    C3EA : 90 02                                       BCC .skip
     248/    C3EC : F6 0B                                               INC emu_ptr+1,X
     248/    C3EE :                                             .skip:
     248/    C3EE : A1 0A                                       LDA (emu_ptr,X)
     248/    C3F0 : 95 0D                                       STA emu_ptr2+1,X
     248/    C3F2 : 7C 0C 00                                    JMP (emu_ptr2,X)
     249/    C3F5 :                     
     250/    C3F5 :                     	;0x1F - NOP
     251/    C3F5 :                     	NOP_0x1F:
     252/    C3F5 : (MACRO)             		OP_MACRO 31, "NOP", "IMP", "NOP_0x1F"
     252/    C3F5 :                                             ;TODO
     253/    C3F5 : (MACRO)             		NEXT_MACRO
     253/    C3F5 :                                             ;Could also copy X to Y before NEXT then restore after jump
     253/    C3F5 :                                             
     253/    C3F5 :  (MACRO-2)                                  halt
     253/    C3F5 : 00                                  BRK
     253/    C3F6 : 00                                  BRK
     253/    C3F7 :                                             
     253/    C3F7 :                                             ;Jump table must be page aligned!!!
     253/    C3F7 : A1 02                                       LDA (emu_PC,X)
     253/    C3F9 : 0A                                          ASL
     253/    C3FA : 95 0A                                       STA emu_ptr,X
     253/    C3FC : A9 DF                                       LDA #hi(JUMP_TABLE)
     253/    C3FE : 69 00                                       ADC #0
     253/    C400 : 95 0B                                       STA emu_ptr+1,X
     253/    C402 : A1 0A                                       LDA (emu_ptr,X)
     253/    C404 : 95 0C                                       STA emu_ptr2,X
     253/    C406 : F6 0A                                       INC emu_ptr,X
     253/    C408 : 90 02                                       BCC .skip
     253/    C40A : F6 0B                                               INC emu_ptr+1,X
     253/    C40C :                                             .skip:
     253/    C40C : A1 0A                                       LDA (emu_ptr,X)
     253/    C40E : 95 0D                                       STA emu_ptr2+1,X
     253/    C410 : 7C 0C 00                                    JMP (emu_ptr2,X)
     254/    C413 :                     
     255/    C413 :                     	;0x20 - JSR ABS
     256/    C413 :                     	JSR_ABS:
     257/    C413 : (MACRO)             		OP_MACRO 32, "JSR", "ABS", "JSR_ABS"
     257/    C413 :                                             ;TODO
     258/    C413 : (MACRO)             		NEXT_MACRO
     258/    C413 :                                             ;Could also copy X to Y before NEXT then restore after jump
     258/    C413 :                                             
     258/    C413 :  (MACRO-2)                                  halt
     258/    C413 : 00                                  BRK
     258/    C414 : 00                                  BRK
     258/    C415 :                                             
     258/    C415 :                                             ;Jump table must be page aligned!!!
     258/    C415 : A1 02                                       LDA (emu_PC,X)
     258/    C417 : 0A                                          ASL
     258/    C418 : 95 0A                                       STA emu_ptr,X
     258/    C41A : A9 DF                                       LDA #hi(JUMP_TABLE)
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 20 - 1/5/2022 1:27:47


     258/    C41C : 69 00                                       ADC #0
     258/    C41E : 95 0B                                       STA emu_ptr+1,X
     258/    C420 : A1 0A                                       LDA (emu_ptr,X)
     258/    C422 : 95 0C                                       STA emu_ptr2,X
     258/    C424 : F6 0A                                       INC emu_ptr,X
     258/    C426 : 90 02                                       BCC .skip
     258/    C428 : F6 0B                                               INC emu_ptr+1,X
     258/    C42A :                                             .skip:
     258/    C42A : A1 0A                                       LDA (emu_ptr,X)
     258/    C42C : 95 0D                                       STA emu_ptr2+1,X
     258/    C42E : 7C 0C 00                                    JMP (emu_ptr2,X)
     259/    C431 :                     
     260/    C431 :                     	;0x21 - AND IX
     261/    C431 :                     	AND_IX:
     262/    C431 : (MACRO)             		OP_MACRO 33, "AND", "IX", "AND_IX"
     262/    C431 :                                             ;TODO
     263/    C431 : (MACRO)             		NEXT_MACRO
     263/    C431 :                                             ;Could also copy X to Y before NEXT then restore after jump
     263/    C431 :                                             
     263/    C431 :  (MACRO-2)                                  halt
     263/    C431 : 00                                  BRK
     263/    C432 : 00                                  BRK
     263/    C433 :                                             
     263/    C433 :                                             ;Jump table must be page aligned!!!
     263/    C433 : A1 02                                       LDA (emu_PC,X)
     263/    C435 : 0A                                          ASL
     263/    C436 : 95 0A                                       STA emu_ptr,X
     263/    C438 : A9 DF                                       LDA #hi(JUMP_TABLE)
     263/    C43A : 69 00                                       ADC #0
     263/    C43C : 95 0B                                       STA emu_ptr+1,X
     263/    C43E : A1 0A                                       LDA (emu_ptr,X)
     263/    C440 : 95 0C                                       STA emu_ptr2,X
     263/    C442 : F6 0A                                       INC emu_ptr,X
     263/    C444 : 90 02                                       BCC .skip
     263/    C446 : F6 0B                                               INC emu_ptr+1,X
     263/    C448 :                                             .skip:
     263/    C448 : A1 0A                                       LDA (emu_ptr,X)
     263/    C44A : 95 0D                                       STA emu_ptr2+1,X
     263/    C44C : 7C 0C 00                                    JMP (emu_ptr2,X)
     264/    C44F :                     
     265/    C44F :                     	;0x22 - NOP
     266/    C44F :                     	NOP_0x22:
     267/    C44F : (MACRO)             		OP_MACRO 34, "NOP", "IMP", "NOP_0x22"
     267/    C44F :                                             ;TODO
     268/    C44F : (MACRO)             		NEXT_MACRO
     268/    C44F :                                             ;Could also copy X to Y before NEXT then restore after jump
     268/    C44F :                                             
     268/    C44F :  (MACRO-2)                                  halt
     268/    C44F : 00                                  BRK
     268/    C450 : 00                                  BRK
     268/    C451 :                                             
     268/    C451 :                                             ;Jump table must be page aligned!!!
     268/    C451 : A1 02                                       LDA (emu_PC,X)
     268/    C453 : 0A                                          ASL
     268/    C454 : 95 0A                                       STA emu_ptr,X
     268/    C456 : A9 DF                                       LDA #hi(JUMP_TABLE)
     268/    C458 : 69 00                                       ADC #0
     268/    C45A : 95 0B                                       STA emu_ptr+1,X
     268/    C45C : A1 0A                                       LDA (emu_ptr,X)
     268/    C45E : 95 0C                                       STA emu_ptr2,X
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 21 - 1/5/2022 1:27:47


     268/    C460 : F6 0A                                       INC emu_ptr,X
     268/    C462 : 90 02                                       BCC .skip
     268/    C464 : F6 0B                                               INC emu_ptr+1,X
     268/    C466 :                                             .skip:
     268/    C466 : A1 0A                                       LDA (emu_ptr,X)
     268/    C468 : 95 0D                                       STA emu_ptr2+1,X
     268/    C46A : 7C 0C 00                                    JMP (emu_ptr2,X)
     269/    C46D :                     
     270/    C46D :                     	;0x23 - NOP
     271/    C46D :                     	NOP_0x23:
     272/    C46D : (MACRO)             		OP_MACRO 35, "NOP", "IMP", "NOP_0x23"
     272/    C46D :                                             ;TODO
     273/    C46D : (MACRO)             		NEXT_MACRO
     273/    C46D :                                             ;Could also copy X to Y before NEXT then restore after jump
     273/    C46D :                                             
     273/    C46D :  (MACRO-2)                                  halt
     273/    C46D : 00                                  BRK
     273/    C46E : 00                                  BRK
     273/    C46F :                                             
     273/    C46F :                                             ;Jump table must be page aligned!!!
     273/    C46F : A1 02                                       LDA (emu_PC,X)
     273/    C471 : 0A                                          ASL
     273/    C472 : 95 0A                                       STA emu_ptr,X
     273/    C474 : A9 DF                                       LDA #hi(JUMP_TABLE)
     273/    C476 : 69 00                                       ADC #0
     273/    C478 : 95 0B                                       STA emu_ptr+1,X
     273/    C47A : A1 0A                                       LDA (emu_ptr,X)
     273/    C47C : 95 0C                                       STA emu_ptr2,X
     273/    C47E : F6 0A                                       INC emu_ptr,X
     273/    C480 : 90 02                                       BCC .skip
     273/    C482 : F6 0B                                               INC emu_ptr+1,X
     273/    C484 :                                             .skip:
     273/    C484 : A1 0A                                       LDA (emu_ptr,X)
     273/    C486 : 95 0D                                       STA emu_ptr2+1,X
     273/    C488 : 7C 0C 00                                    JMP (emu_ptr2,X)
     274/    C48B :                     
     275/    C48B :                     	;0x24 - BIT ZP
     276/    C48B :                     	BIT_ZP:
     277/    C48B : (MACRO)             		OP_MACRO 36, "BIT", "ZP", "BIT_ZP"
     277/    C48B :                                             ;TODO
     278/    C48B : (MACRO)             		NEXT_MACRO
     278/    C48B :                                             ;Could also copy X to Y before NEXT then restore after jump
     278/    C48B :                                             
     278/    C48B :  (MACRO-2)                                  halt
     278/    C48B : 00                                  BRK
     278/    C48C : 00                                  BRK
     278/    C48D :                                             
     278/    C48D :                                             ;Jump table must be page aligned!!!
     278/    C48D : A1 02                                       LDA (emu_PC,X)
     278/    C48F : 0A                                          ASL
     278/    C490 : 95 0A                                       STA emu_ptr,X
     278/    C492 : A9 DF                                       LDA #hi(JUMP_TABLE)
     278/    C494 : 69 00                                       ADC #0
     278/    C496 : 95 0B                                       STA emu_ptr+1,X
     278/    C498 : A1 0A                                       LDA (emu_ptr,X)
     278/    C49A : 95 0C                                       STA emu_ptr2,X
     278/    C49C : F6 0A                                       INC emu_ptr,X
     278/    C49E : 90 02                                       BCC .skip
     278/    C4A0 : F6 0B                                               INC emu_ptr+1,X
     278/    C4A2 :                                             .skip:
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 22 - 1/5/2022 1:27:47


     278/    C4A2 : A1 0A                                       LDA (emu_ptr,X)
     278/    C4A4 : 95 0D                                       STA emu_ptr2+1,X
     278/    C4A6 : 7C 0C 00                                    JMP (emu_ptr2,X)
     279/    C4A9 :                     
     280/    C4A9 :                     	;0x25 - AND ZP
     281/    C4A9 :                     	AND_ZP:
     282/    C4A9 : (MACRO)             		OP_MACRO 37, "AND", "ZP", "AND_ZP"
     282/    C4A9 :                                             ;TODO
     283/    C4A9 : (MACRO)             		NEXT_MACRO
     283/    C4A9 :                                             ;Could also copy X to Y before NEXT then restore after jump
     283/    C4A9 :                                             
     283/    C4A9 :  (MACRO-2)                                  halt
     283/    C4A9 : 00                                  BRK
     283/    C4AA : 00                                  BRK
     283/    C4AB :                                             
     283/    C4AB :                                             ;Jump table must be page aligned!!!
     283/    C4AB : A1 02                                       LDA (emu_PC,X)
     283/    C4AD : 0A                                          ASL
     283/    C4AE : 95 0A                                       STA emu_ptr,X
     283/    C4B0 : A9 DF                                       LDA #hi(JUMP_TABLE)
     283/    C4B2 : 69 00                                       ADC #0
     283/    C4B4 : 95 0B                                       STA emu_ptr+1,X
     283/    C4B6 : A1 0A                                       LDA (emu_ptr,X)
     283/    C4B8 : 95 0C                                       STA emu_ptr2,X
     283/    C4BA : F6 0A                                       INC emu_ptr,X
     283/    C4BC : 90 02                                       BCC .skip
     283/    C4BE : F6 0B                                               INC emu_ptr+1,X
     283/    C4C0 :                                             .skip:
     283/    C4C0 : A1 0A                                       LDA (emu_ptr,X)
     283/    C4C2 : 95 0D                                       STA emu_ptr2+1,X
     283/    C4C4 : 7C 0C 00                                    JMP (emu_ptr2,X)
     284/    C4C7 :                     
     285/    C4C7 :                     	;0x26 - ROL ZP
     286/    C4C7 :                     	ROL_ZP:
     287/    C4C7 : (MACRO)             		OP_MACRO 38, "ROL", "ZP", "ROL_ZP"
     287/    C4C7 :                                             ;TODO
     288/    C4C7 : (MACRO)             		NEXT_MACRO
     288/    C4C7 :                                             ;Could also copy X to Y before NEXT then restore after jump
     288/    C4C7 :                                             
     288/    C4C7 :  (MACRO-2)                                  halt
     288/    C4C7 : 00                                  BRK
     288/    C4C8 : 00                                  BRK
     288/    C4C9 :                                             
     288/    C4C9 :                                             ;Jump table must be page aligned!!!
     288/    C4C9 : A1 02                                       LDA (emu_PC,X)
     288/    C4CB : 0A                                          ASL
     288/    C4CC : 95 0A                                       STA emu_ptr,X
     288/    C4CE : A9 DF                                       LDA #hi(JUMP_TABLE)
     288/    C4D0 : 69 00                                       ADC #0
     288/    C4D2 : 95 0B                                       STA emu_ptr+1,X
     288/    C4D4 : A1 0A                                       LDA (emu_ptr,X)
     288/    C4D6 : 95 0C                                       STA emu_ptr2,X
     288/    C4D8 : F6 0A                                       INC emu_ptr,X
     288/    C4DA : 90 02                                       BCC .skip
     288/    C4DC : F6 0B                                               INC emu_ptr+1,X
     288/    C4DE :                                             .skip:
     288/    C4DE : A1 0A                                       LDA (emu_ptr,X)
     288/    C4E0 : 95 0D                                       STA emu_ptr2+1,X
     288/    C4E2 : 7C 0C 00                                    JMP (emu_ptr2,X)
     289/    C4E5 :                     
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 23 - 1/5/2022 1:27:47


     290/    C4E5 :                     	;0x27 - NOP
     291/    C4E5 :                     	NOP_0x27:
     292/    C4E5 : (MACRO)             		OP_MACRO 39, "NOP", "IMP", "NOP_0x27"
     292/    C4E5 :                                             ;TODO
     293/    C4E5 : (MACRO)             		NEXT_MACRO
     293/    C4E5 :                                             ;Could also copy X to Y before NEXT then restore after jump
     293/    C4E5 :                                             
     293/    C4E5 :  (MACRO-2)                                  halt
     293/    C4E5 : 00                                  BRK
     293/    C4E6 : 00                                  BRK
     293/    C4E7 :                                             
     293/    C4E7 :                                             ;Jump table must be page aligned!!!
     293/    C4E7 : A1 02                                       LDA (emu_PC,X)
     293/    C4E9 : 0A                                          ASL
     293/    C4EA : 95 0A                                       STA emu_ptr,X
     293/    C4EC : A9 DF                                       LDA #hi(JUMP_TABLE)
     293/    C4EE : 69 00                                       ADC #0
     293/    C4F0 : 95 0B                                       STA emu_ptr+1,X
     293/    C4F2 : A1 0A                                       LDA (emu_ptr,X)
     293/    C4F4 : 95 0C                                       STA emu_ptr2,X
     293/    C4F6 : F6 0A                                       INC emu_ptr,X
     293/    C4F8 : 90 02                                       BCC .skip
     293/    C4FA : F6 0B                                               INC emu_ptr+1,X
     293/    C4FC :                                             .skip:
     293/    C4FC : A1 0A                                       LDA (emu_ptr,X)
     293/    C4FE : 95 0D                                       STA emu_ptr2+1,X
     293/    C500 : 7C 0C 00                                    JMP (emu_ptr2,X)
     294/    C503 :                     
     295/    C503 :                     	;0x28 - PLP IMP
     296/    C503 :                     	PLP_IMP:
     297/    C503 : (MACRO)             		OP_MACRO 40, "PLP", "IMP", "PLP_IMP"
     297/    C503 :                                             ;TODO
     298/    C503 : (MACRO)             		NEXT_MACRO
     298/    C503 :                                             ;Could also copy X to Y before NEXT then restore after jump
     298/    C503 :                                             
     298/    C503 :  (MACRO-2)                                  halt
     298/    C503 : 00                                  BRK
     298/    C504 : 00                                  BRK
     298/    C505 :                                             
     298/    C505 :                                             ;Jump table must be page aligned!!!
     298/    C505 : A1 02                                       LDA (emu_PC,X)
     298/    C507 : 0A                                          ASL
     298/    C508 : 95 0A                                       STA emu_ptr,X
     298/    C50A : A9 DF                                       LDA #hi(JUMP_TABLE)
     298/    C50C : 69 00                                       ADC #0
     298/    C50E : 95 0B                                       STA emu_ptr+1,X
     298/    C510 : A1 0A                                       LDA (emu_ptr,X)
     298/    C512 : 95 0C                                       STA emu_ptr2,X
     298/    C514 : F6 0A                                       INC emu_ptr,X
     298/    C516 : 90 02                                       BCC .skip
     298/    C518 : F6 0B                                               INC emu_ptr+1,X
     298/    C51A :                                             .skip:
     298/    C51A : A1 0A                                       LDA (emu_ptr,X)
     298/    C51C : 95 0D                                       STA emu_ptr2+1,X
     298/    C51E : 7C 0C 00                                    JMP (emu_ptr2,X)
     299/    C521 :                     
     300/    C521 :                     	;0x29 - AND IMMED
     301/    C521 :                     	AND_IMMED:
     302/    C521 : (MACRO)             		OP_MACRO 41, "AND", "IMMED", "AND_IMMED"
     302/    C521 :                                             ;TODO
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 24 - 1/5/2022 1:27:47


     303/    C521 : (MACRO)             		NEXT_MACRO
     303/    C521 :                                             ;Could also copy X to Y before NEXT then restore after jump
     303/    C521 :                                             
     303/    C521 :  (MACRO-2)                                  halt
     303/    C521 : 00                                  BRK
     303/    C522 : 00                                  BRK
     303/    C523 :                                             
     303/    C523 :                                             ;Jump table must be page aligned!!!
     303/    C523 : A1 02                                       LDA (emu_PC,X)
     303/    C525 : 0A                                          ASL
     303/    C526 : 95 0A                                       STA emu_ptr,X
     303/    C528 : A9 DF                                       LDA #hi(JUMP_TABLE)
     303/    C52A : 69 00                                       ADC #0
     303/    C52C : 95 0B                                       STA emu_ptr+1,X
     303/    C52E : A1 0A                                       LDA (emu_ptr,X)
     303/    C530 : 95 0C                                       STA emu_ptr2,X
     303/    C532 : F6 0A                                       INC emu_ptr,X
     303/    C534 : 90 02                                       BCC .skip
     303/    C536 : F6 0B                                               INC emu_ptr+1,X
     303/    C538 :                                             .skip:
     303/    C538 : A1 0A                                       LDA (emu_ptr,X)
     303/    C53A : 95 0D                                       STA emu_ptr2+1,X
     303/    C53C : 7C 0C 00                                    JMP (emu_ptr2,X)
     304/    C53F :                     
     305/    C53F :                     	;0x2A - ROL A
     306/    C53F :                     	ROL_A:
     307/    C53F : (MACRO)             		OP_MACRO 42, "ROL", "A", "ROL_A"
     307/    C53F :                                             ;TODO
     308/    C53F : (MACRO)             		NEXT_MACRO
     308/    C53F :                                             ;Could also copy X to Y before NEXT then restore after jump
     308/    C53F :                                             
     308/    C53F :  (MACRO-2)                                  halt
     308/    C53F : 00                                  BRK
     308/    C540 : 00                                  BRK
     308/    C541 :                                             
     308/    C541 :                                             ;Jump table must be page aligned!!!
     308/    C541 : A1 02                                       LDA (emu_PC,X)
     308/    C543 : 0A                                          ASL
     308/    C544 : 95 0A                                       STA emu_ptr,X
     308/    C546 : A9 DF                                       LDA #hi(JUMP_TABLE)
     308/    C548 : 69 00                                       ADC #0
     308/    C54A : 95 0B                                       STA emu_ptr+1,X
     308/    C54C : A1 0A                                       LDA (emu_ptr,X)
     308/    C54E : 95 0C                                       STA emu_ptr2,X
     308/    C550 : F6 0A                                       INC emu_ptr,X
     308/    C552 : 90 02                                       BCC .skip
     308/    C554 : F6 0B                                               INC emu_ptr+1,X
     308/    C556 :                                             .skip:
     308/    C556 : A1 0A                                       LDA (emu_ptr,X)
     308/    C558 : 95 0D                                       STA emu_ptr2+1,X
     308/    C55A : 7C 0C 00                                    JMP (emu_ptr2,X)
     309/    C55D :                     
     310/    C55D :                     	;0x2B - NOP
     311/    C55D :                     	NOP_0x2B:
     312/    C55D : (MACRO)             		OP_MACRO 43, "NOP", "IMP", "NOP_0x2B"
     312/    C55D :                                             ;TODO
     313/    C55D : (MACRO)             		NEXT_MACRO
     313/    C55D :                                             ;Could also copy X to Y before NEXT then restore after jump
     313/    C55D :                                             
     313/    C55D :  (MACRO-2)                                  halt
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 25 - 1/5/2022 1:27:47


     313/    C55D : 00                                  BRK
     313/    C55E : 00                                  BRK
     313/    C55F :                                             
     313/    C55F :                                             ;Jump table must be page aligned!!!
     313/    C55F : A1 02                                       LDA (emu_PC,X)
     313/    C561 : 0A                                          ASL
     313/    C562 : 95 0A                                       STA emu_ptr,X
     313/    C564 : A9 DF                                       LDA #hi(JUMP_TABLE)
     313/    C566 : 69 00                                       ADC #0
     313/    C568 : 95 0B                                       STA emu_ptr+1,X
     313/    C56A : A1 0A                                       LDA (emu_ptr,X)
     313/    C56C : 95 0C                                       STA emu_ptr2,X
     313/    C56E : F6 0A                                       INC emu_ptr,X
     313/    C570 : 90 02                                       BCC .skip
     313/    C572 : F6 0B                                               INC emu_ptr+1,X
     313/    C574 :                                             .skip:
     313/    C574 : A1 0A                                       LDA (emu_ptr,X)
     313/    C576 : 95 0D                                       STA emu_ptr2+1,X
     313/    C578 : 7C 0C 00                                    JMP (emu_ptr2,X)
     314/    C57B :                     
     315/    C57B :                     	;0x2C - BIT ABS
     316/    C57B :                     	BIT_ABS:
     317/    C57B : (MACRO)             		OP_MACRO 44, "BIT", "ABS", "BIT_ABS"
     317/    C57B :                                             ;TODO
     318/    C57B : (MACRO)             		NEXT_MACRO
     318/    C57B :                                             ;Could also copy X to Y before NEXT then restore after jump
     318/    C57B :                                             
     318/    C57B :  (MACRO-2)                                  halt
     318/    C57B : 00                                  BRK
     318/    C57C : 00                                  BRK
     318/    C57D :                                             
     318/    C57D :                                             ;Jump table must be page aligned!!!
     318/    C57D : A1 02                                       LDA (emu_PC,X)
     318/    C57F : 0A                                          ASL
     318/    C580 : 95 0A                                       STA emu_ptr,X
     318/    C582 : A9 DF                                       LDA #hi(JUMP_TABLE)
     318/    C584 : 69 00                                       ADC #0
     318/    C586 : 95 0B                                       STA emu_ptr+1,X
     318/    C588 : A1 0A                                       LDA (emu_ptr,X)
     318/    C58A : 95 0C                                       STA emu_ptr2,X
     318/    C58C : F6 0A                                       INC emu_ptr,X
     318/    C58E : 90 02                                       BCC .skip
     318/    C590 : F6 0B                                               INC emu_ptr+1,X
     318/    C592 :                                             .skip:
     318/    C592 : A1 0A                                       LDA (emu_ptr,X)
     318/    C594 : 95 0D                                       STA emu_ptr2+1,X
     318/    C596 : 7C 0C 00                                    JMP (emu_ptr2,X)
     319/    C599 :                     
     320/    C599 :                     	;0x2D - AND ABS
     321/    C599 :                     	AND_ABS:
     322/    C599 : (MACRO)             		OP_MACRO 45, "AND", "ABS", "AND_ABS"
     322/    C599 :                                             ;TODO
     323/    C599 : (MACRO)             		NEXT_MACRO
     323/    C599 :                                             ;Could also copy X to Y before NEXT then restore after jump
     323/    C599 :                                             
     323/    C599 :  (MACRO-2)                                  halt
     323/    C599 : 00                                  BRK
     323/    C59A : 00                                  BRK
     323/    C59B :                                             
     323/    C59B :                                             ;Jump table must be page aligned!!!
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 26 - 1/5/2022 1:27:47


     323/    C59B : A1 02                                       LDA (emu_PC,X)
     323/    C59D : 0A                                          ASL
     323/    C59E : 95 0A                                       STA emu_ptr,X
     323/    C5A0 : A9 DF                                       LDA #hi(JUMP_TABLE)
     323/    C5A2 : 69 00                                       ADC #0
     323/    C5A4 : 95 0B                                       STA emu_ptr+1,X
     323/    C5A6 : A1 0A                                       LDA (emu_ptr,X)
     323/    C5A8 : 95 0C                                       STA emu_ptr2,X
     323/    C5AA : F6 0A                                       INC emu_ptr,X
     323/    C5AC : 90 02                                       BCC .skip
     323/    C5AE : F6 0B                                               INC emu_ptr+1,X
     323/    C5B0 :                                             .skip:
     323/    C5B0 : A1 0A                                       LDA (emu_ptr,X)
     323/    C5B2 : 95 0D                                       STA emu_ptr2+1,X
     323/    C5B4 : 7C 0C 00                                    JMP (emu_ptr2,X)
     324/    C5B7 :                     
     325/    C5B7 :                     	;0x2E - ROL ABS
     326/    C5B7 :                     	ROL_ABS:
     327/    C5B7 : (MACRO)             		OP_MACRO 46, "ROL", "ABS", "ROL_ABS"
     327/    C5B7 :                                             ;TODO
     328/    C5B7 : (MACRO)             		NEXT_MACRO
     328/    C5B7 :                                             ;Could also copy X to Y before NEXT then restore after jump
     328/    C5B7 :                                             
     328/    C5B7 :  (MACRO-2)                                  halt
     328/    C5B7 : 00                                  BRK
     328/    C5B8 : 00                                  BRK
     328/    C5B9 :                                             
     328/    C5B9 :                                             ;Jump table must be page aligned!!!
     328/    C5B9 : A1 02                                       LDA (emu_PC,X)
     328/    C5BB : 0A                                          ASL
     328/    C5BC : 95 0A                                       STA emu_ptr,X
     328/    C5BE : A9 DF                                       LDA #hi(JUMP_TABLE)
     328/    C5C0 : 69 00                                       ADC #0
     328/    C5C2 : 95 0B                                       STA emu_ptr+1,X
     328/    C5C4 : A1 0A                                       LDA (emu_ptr,X)
     328/    C5C6 : 95 0C                                       STA emu_ptr2,X
     328/    C5C8 : F6 0A                                       INC emu_ptr,X
     328/    C5CA : 90 02                                       BCC .skip
     328/    C5CC : F6 0B                                               INC emu_ptr+1,X
     328/    C5CE :                                             .skip:
     328/    C5CE : A1 0A                                       LDA (emu_ptr,X)
     328/    C5D0 : 95 0D                                       STA emu_ptr2+1,X
     328/    C5D2 : 7C 0C 00                                    JMP (emu_ptr2,X)
     329/    C5D5 :                     
     330/    C5D5 :                     	;0x2F - NOP
     331/    C5D5 :                     	NOP_0x2F:
     332/    C5D5 : (MACRO)             		OP_MACRO 47, "NOP", "IMP", "NOP_0x2F"
     332/    C5D5 :                                             ;TODO
     333/    C5D5 : (MACRO)             		NEXT_MACRO
     333/    C5D5 :                                             ;Could also copy X to Y before NEXT then restore after jump
     333/    C5D5 :                                             
     333/    C5D5 :  (MACRO-2)                                  halt
     333/    C5D5 : 00                                  BRK
     333/    C5D6 : 00                                  BRK
     333/    C5D7 :                                             
     333/    C5D7 :                                             ;Jump table must be page aligned!!!
     333/    C5D7 : A1 02                                       LDA (emu_PC,X)
     333/    C5D9 : 0A                                          ASL
     333/    C5DA : 95 0A                                       STA emu_ptr,X
     333/    C5DC : A9 DF                                       LDA #hi(JUMP_TABLE)
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 27 - 1/5/2022 1:27:47


     333/    C5DE : 69 00                                       ADC #0
     333/    C5E0 : 95 0B                                       STA emu_ptr+1,X
     333/    C5E2 : A1 0A                                       LDA (emu_ptr,X)
     333/    C5E4 : 95 0C                                       STA emu_ptr2,X
     333/    C5E6 : F6 0A                                       INC emu_ptr,X
     333/    C5E8 : 90 02                                       BCC .skip
     333/    C5EA : F6 0B                                               INC emu_ptr+1,X
     333/    C5EC :                                             .skip:
     333/    C5EC : A1 0A                                       LDA (emu_ptr,X)
     333/    C5EE : 95 0D                                       STA emu_ptr2+1,X
     333/    C5F0 : 7C 0C 00                                    JMP (emu_ptr2,X)
     334/    C5F3 :                     
     335/    C5F3 :                     	;0x30 - BMI REL
     336/    C5F3 :                     	BMI_REL:
     337/    C5F3 : (MACRO)             		OP_MACRO 48, "BMI", "REL", "BMI_REL"
     337/    C5F3 :                                             ;TODO
     338/    C5F3 : (MACRO)             		NEXT_MACRO
     338/    C5F3 :                                             ;Could also copy X to Y before NEXT then restore after jump
     338/    C5F3 :                                             
     338/    C5F3 :  (MACRO-2)                                  halt
     338/    C5F3 : 00                                  BRK
     338/    C5F4 : 00                                  BRK
     338/    C5F5 :                                             
     338/    C5F5 :                                             ;Jump table must be page aligned!!!
     338/    C5F5 : A1 02                                       LDA (emu_PC,X)
     338/    C5F7 : 0A                                          ASL
     338/    C5F8 : 95 0A                                       STA emu_ptr,X
     338/    C5FA : A9 DF                                       LDA #hi(JUMP_TABLE)
     338/    C5FC : 69 00                                       ADC #0
     338/    C5FE : 95 0B                                       STA emu_ptr+1,X
     338/    C600 : A1 0A                                       LDA (emu_ptr,X)
     338/    C602 : 95 0C                                       STA emu_ptr2,X
     338/    C604 : F6 0A                                       INC emu_ptr,X
     338/    C606 : 90 02                                       BCC .skip
     338/    C608 : F6 0B                                               INC emu_ptr+1,X
     338/    C60A :                                             .skip:
     338/    C60A : A1 0A                                       LDA (emu_ptr,X)
     338/    C60C : 95 0D                                       STA emu_ptr2+1,X
     338/    C60E : 7C 0C 00                                    JMP (emu_ptr2,X)
     339/    C611 :                     
     340/    C611 :                     	;0x31 - AND IY
     341/    C611 :                     	AND_IY:
     342/    C611 : (MACRO)             		OP_MACRO 49, "AND", "IY", "AND_IY"
     342/    C611 :                                             ;TODO
     343/    C611 : (MACRO)             		NEXT_MACRO
     343/    C611 :                                             ;Could also copy X to Y before NEXT then restore after jump
     343/    C611 :                                             
     343/    C611 :  (MACRO-2)                                  halt
     343/    C611 : 00                                  BRK
     343/    C612 : 00                                  BRK
     343/    C613 :                                             
     343/    C613 :                                             ;Jump table must be page aligned!!!
     343/    C613 : A1 02                                       LDA (emu_PC,X)
     343/    C615 : 0A                                          ASL
     343/    C616 : 95 0A                                       STA emu_ptr,X
     343/    C618 : A9 DF                                       LDA #hi(JUMP_TABLE)
     343/    C61A : 69 00                                       ADC #0
     343/    C61C : 95 0B                                       STA emu_ptr+1,X
     343/    C61E : A1 0A                                       LDA (emu_ptr,X)
     343/    C620 : 95 0C                                       STA emu_ptr2,X
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 28 - 1/5/2022 1:27:47


     343/    C622 : F6 0A                                       INC emu_ptr,X
     343/    C624 : 90 02                                       BCC .skip
     343/    C626 : F6 0B                                               INC emu_ptr+1,X
     343/    C628 :                                             .skip:
     343/    C628 : A1 0A                                       LDA (emu_ptr,X)
     343/    C62A : 95 0D                                       STA emu_ptr2+1,X
     343/    C62C : 7C 0C 00                                    JMP (emu_ptr2,X)
     344/    C62F :                     
     345/    C62F :                     	;0x32 - NOP
     346/    C62F :                     	NOP_0x32:
     347/    C62F : (MACRO)             		OP_MACRO 50, "NOP", "IMP", "NOP_0x32"
     347/    C62F :                                             ;TODO
     348/    C62F : (MACRO)             		NEXT_MACRO
     348/    C62F :                                             ;Could also copy X to Y before NEXT then restore after jump
     348/    C62F :                                             
     348/    C62F :  (MACRO-2)                                  halt
     348/    C62F : 00                                  BRK
     348/    C630 : 00                                  BRK
     348/    C631 :                                             
     348/    C631 :                                             ;Jump table must be page aligned!!!
     348/    C631 : A1 02                                       LDA (emu_PC,X)
     348/    C633 : 0A                                          ASL
     348/    C634 : 95 0A                                       STA emu_ptr,X
     348/    C636 : A9 DF                                       LDA #hi(JUMP_TABLE)
     348/    C638 : 69 00                                       ADC #0
     348/    C63A : 95 0B                                       STA emu_ptr+1,X
     348/    C63C : A1 0A                                       LDA (emu_ptr,X)
     348/    C63E : 95 0C                                       STA emu_ptr2,X
     348/    C640 : F6 0A                                       INC emu_ptr,X
     348/    C642 : 90 02                                       BCC .skip
     348/    C644 : F6 0B                                               INC emu_ptr+1,X
     348/    C646 :                                             .skip:
     348/    C646 : A1 0A                                       LDA (emu_ptr,X)
     348/    C648 : 95 0D                                       STA emu_ptr2+1,X
     348/    C64A : 7C 0C 00                                    JMP (emu_ptr2,X)
     349/    C64D :                     
     350/    C64D :                     	;0x33 - NOP
     351/    C64D :                     	NOP_0x33:
     352/    C64D : (MACRO)             		OP_MACRO 51, "NOP", "IMP", "NOP_0x33"
     352/    C64D :                                             ;TODO
     353/    C64D : (MACRO)             		NEXT_MACRO
     353/    C64D :                                             ;Could also copy X to Y before NEXT then restore after jump
     353/    C64D :                                             
     353/    C64D :  (MACRO-2)                                  halt
     353/    C64D : 00                                  BRK
     353/    C64E : 00                                  BRK
     353/    C64F :                                             
     353/    C64F :                                             ;Jump table must be page aligned!!!
     353/    C64F : A1 02                                       LDA (emu_PC,X)
     353/    C651 : 0A                                          ASL
     353/    C652 : 95 0A                                       STA emu_ptr,X
     353/    C654 : A9 DF                                       LDA #hi(JUMP_TABLE)
     353/    C656 : 69 00                                       ADC #0
     353/    C658 : 95 0B                                       STA emu_ptr+1,X
     353/    C65A : A1 0A                                       LDA (emu_ptr,X)
     353/    C65C : 95 0C                                       STA emu_ptr2,X
     353/    C65E : F6 0A                                       INC emu_ptr,X
     353/    C660 : 90 02                                       BCC .skip
     353/    C662 : F6 0B                                               INC emu_ptr+1,X
     353/    C664 :                                             .skip:
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 29 - 1/5/2022 1:27:47


     353/    C664 : A1 0A                                       LDA (emu_ptr,X)
     353/    C666 : 95 0D                                       STA emu_ptr2+1,X
     353/    C668 : 7C 0C 00                                    JMP (emu_ptr2,X)
     354/    C66B :                     
     355/    C66B :                     	;0x34 - NOP
     356/    C66B :                     	NOP_0x34:
     357/    C66B : (MACRO)             		OP_MACRO 52, "NOP", "IMP", "NOP_0x34"
     357/    C66B :                                             ;TODO
     358/    C66B : (MACRO)             		NEXT_MACRO
     358/    C66B :                                             ;Could also copy X to Y before NEXT then restore after jump
     358/    C66B :                                             
     358/    C66B :  (MACRO-2)                                  halt
     358/    C66B : 00                                  BRK
     358/    C66C : 00                                  BRK
     358/    C66D :                                             
     358/    C66D :                                             ;Jump table must be page aligned!!!
     358/    C66D : A1 02                                       LDA (emu_PC,X)
     358/    C66F : 0A                                          ASL
     358/    C670 : 95 0A                                       STA emu_ptr,X
     358/    C672 : A9 DF                                       LDA #hi(JUMP_TABLE)
     358/    C674 : 69 00                                       ADC #0
     358/    C676 : 95 0B                                       STA emu_ptr+1,X
     358/    C678 : A1 0A                                       LDA (emu_ptr,X)
     358/    C67A : 95 0C                                       STA emu_ptr2,X
     358/    C67C : F6 0A                                       INC emu_ptr,X
     358/    C67E : 90 02                                       BCC .skip
     358/    C680 : F6 0B                                               INC emu_ptr+1,X
     358/    C682 :                                             .skip:
     358/    C682 : A1 0A                                       LDA (emu_ptr,X)
     358/    C684 : 95 0D                                       STA emu_ptr2+1,X
     358/    C686 : 7C 0C 00                                    JMP (emu_ptr2,X)
     359/    C689 :                     
     360/    C689 :                     	;0x35 - AND ZPX
     361/    C689 :                     	AND_ZPX:
     362/    C689 : (MACRO)             		OP_MACRO 53, "AND", "ZPX", "AND_ZPX"
     362/    C689 :                                             ;TODO
     363/    C689 : (MACRO)             		NEXT_MACRO
     363/    C689 :                                             ;Could also copy X to Y before NEXT then restore after jump
     363/    C689 :                                             
     363/    C689 :  (MACRO-2)                                  halt
     363/    C689 : 00                                  BRK
     363/    C68A : 00                                  BRK
     363/    C68B :                                             
     363/    C68B :                                             ;Jump table must be page aligned!!!
     363/    C68B : A1 02                                       LDA (emu_PC,X)
     363/    C68D : 0A                                          ASL
     363/    C68E : 95 0A                                       STA emu_ptr,X
     363/    C690 : A9 DF                                       LDA #hi(JUMP_TABLE)
     363/    C692 : 69 00                                       ADC #0
     363/    C694 : 95 0B                                       STA emu_ptr+1,X
     363/    C696 : A1 0A                                       LDA (emu_ptr,X)
     363/    C698 : 95 0C                                       STA emu_ptr2,X
     363/    C69A : F6 0A                                       INC emu_ptr,X
     363/    C69C : 90 02                                       BCC .skip
     363/    C69E : F6 0B                                               INC emu_ptr+1,X
     363/    C6A0 :                                             .skip:
     363/    C6A0 : A1 0A                                       LDA (emu_ptr,X)
     363/    C6A2 : 95 0D                                       STA emu_ptr2+1,X
     363/    C6A4 : 7C 0C 00                                    JMP (emu_ptr2,X)
     364/    C6A7 :                     
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 30 - 1/5/2022 1:27:47


     365/    C6A7 :                     	;0x36 - ROL ZPX
     366/    C6A7 :                     	ROL_ZPX:
     367/    C6A7 : (MACRO)             		OP_MACRO 54, "ROL", "ZPX", "ROL_ZPX"
     367/    C6A7 :                                             ;TODO
     368/    C6A7 : (MACRO)             		NEXT_MACRO
     368/    C6A7 :                                             ;Could also copy X to Y before NEXT then restore after jump
     368/    C6A7 :                                             
     368/    C6A7 :  (MACRO-2)                                  halt
     368/    C6A7 : 00                                  BRK
     368/    C6A8 : 00                                  BRK
     368/    C6A9 :                                             
     368/    C6A9 :                                             ;Jump table must be page aligned!!!
     368/    C6A9 : A1 02                                       LDA (emu_PC,X)
     368/    C6AB : 0A                                          ASL
     368/    C6AC : 95 0A                                       STA emu_ptr,X
     368/    C6AE : A9 DF                                       LDA #hi(JUMP_TABLE)
     368/    C6B0 : 69 00                                       ADC #0
     368/    C6B2 : 95 0B                                       STA emu_ptr+1,X
     368/    C6B4 : A1 0A                                       LDA (emu_ptr,X)
     368/    C6B6 : 95 0C                                       STA emu_ptr2,X
     368/    C6B8 : F6 0A                                       INC emu_ptr,X
     368/    C6BA : 90 02                                       BCC .skip
     368/    C6BC : F6 0B                                               INC emu_ptr+1,X
     368/    C6BE :                                             .skip:
     368/    C6BE : A1 0A                                       LDA (emu_ptr,X)
     368/    C6C0 : 95 0D                                       STA emu_ptr2+1,X
     368/    C6C2 : 7C 0C 00                                    JMP (emu_ptr2,X)
     369/    C6C5 :                     
     370/    C6C5 :                     	;0x37 - NOP
     371/    C6C5 :                     	NOP_0x37:
     372/    C6C5 : (MACRO)             		OP_MACRO 55, "NOP", "IMP", "NOP_0x37"
     372/    C6C5 :                                             ;TODO
     373/    C6C5 : (MACRO)             		NEXT_MACRO
     373/    C6C5 :                                             ;Could also copy X to Y before NEXT then restore after jump
     373/    C6C5 :                                             
     373/    C6C5 :  (MACRO-2)                                  halt
     373/    C6C5 : 00                                  BRK
     373/    C6C6 : 00                                  BRK
     373/    C6C7 :                                             
     373/    C6C7 :                                             ;Jump table must be page aligned!!!
     373/    C6C7 : A1 02                                       LDA (emu_PC,X)
     373/    C6C9 : 0A                                          ASL
     373/    C6CA : 95 0A                                       STA emu_ptr,X
     373/    C6CC : A9 DF                                       LDA #hi(JUMP_TABLE)
     373/    C6CE : 69 00                                       ADC #0
     373/    C6D0 : 95 0B                                       STA emu_ptr+1,X
     373/    C6D2 : A1 0A                                       LDA (emu_ptr,X)
     373/    C6D4 : 95 0C                                       STA emu_ptr2,X
     373/    C6D6 : F6 0A                                       INC emu_ptr,X
     373/    C6D8 : 90 02                                       BCC .skip
     373/    C6DA : F6 0B                                               INC emu_ptr+1,X
     373/    C6DC :                                             .skip:
     373/    C6DC : A1 0A                                       LDA (emu_ptr,X)
     373/    C6DE : 95 0D                                       STA emu_ptr2+1,X
     373/    C6E0 : 7C 0C 00                                    JMP (emu_ptr2,X)
     374/    C6E3 :                     
     375/    C6E3 :                     	;0x38 - SEC IMP
     376/    C6E3 :                     	SEC_IMP:
     377/    C6E3 : (MACRO)             		OP_MACRO 56, "SEC", "IMP", "SEC_IMP"
     377/    C6E3 :                                             ;TODO
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 31 - 1/5/2022 1:27:47


     378/    C6E3 : (MACRO)             		NEXT_MACRO
     378/    C6E3 :                                             ;Could also copy X to Y before NEXT then restore after jump
     378/    C6E3 :                                             
     378/    C6E3 :  (MACRO-2)                                  halt
     378/    C6E3 : 00                                  BRK
     378/    C6E4 : 00                                  BRK
     378/    C6E5 :                                             
     378/    C6E5 :                                             ;Jump table must be page aligned!!!
     378/    C6E5 : A1 02                                       LDA (emu_PC,X)
     378/    C6E7 : 0A                                          ASL
     378/    C6E8 : 95 0A                                       STA emu_ptr,X
     378/    C6EA : A9 DF                                       LDA #hi(JUMP_TABLE)
     378/    C6EC : 69 00                                       ADC #0
     378/    C6EE : 95 0B                                       STA emu_ptr+1,X
     378/    C6F0 : A1 0A                                       LDA (emu_ptr,X)
     378/    C6F2 : 95 0C                                       STA emu_ptr2,X
     378/    C6F4 : F6 0A                                       INC emu_ptr,X
     378/    C6F6 : 90 02                                       BCC .skip
     378/    C6F8 : F6 0B                                               INC emu_ptr+1,X
     378/    C6FA :                                             .skip:
     378/    C6FA : A1 0A                                       LDA (emu_ptr,X)
     378/    C6FC : 95 0D                                       STA emu_ptr2+1,X
     378/    C6FE : 7C 0C 00                                    JMP (emu_ptr2,X)
     379/    C701 :                     
     380/    C701 :                     	;0x39 - AND ABSY
     381/    C701 :                     	AND_ABSY:
     382/    C701 : (MACRO)             		OP_MACRO 57, "AND", "ABSY", "AND_ABSY"
     382/    C701 :                                             ;TODO
     383/    C701 : (MACRO)             		NEXT_MACRO
     383/    C701 :                                             ;Could also copy X to Y before NEXT then restore after jump
     383/    C701 :                                             
     383/    C701 :  (MACRO-2)                                  halt
     383/    C701 : 00                                  BRK
     383/    C702 : 00                                  BRK
     383/    C703 :                                             
     383/    C703 :                                             ;Jump table must be page aligned!!!
     383/    C703 : A1 02                                       LDA (emu_PC,X)
     383/    C705 : 0A                                          ASL
     383/    C706 : 95 0A                                       STA emu_ptr,X
     383/    C708 : A9 DF                                       LDA #hi(JUMP_TABLE)
     383/    C70A : 69 00                                       ADC #0
     383/    C70C : 95 0B                                       STA emu_ptr+1,X
     383/    C70E : A1 0A                                       LDA (emu_ptr,X)
     383/    C710 : 95 0C                                       STA emu_ptr2,X
     383/    C712 : F6 0A                                       INC emu_ptr,X
     383/    C714 : 90 02                                       BCC .skip
     383/    C716 : F6 0B                                               INC emu_ptr+1,X
     383/    C718 :                                             .skip:
     383/    C718 : A1 0A                                       LDA (emu_ptr,X)
     383/    C71A : 95 0D                                       STA emu_ptr2+1,X
     383/    C71C : 7C 0C 00                                    JMP (emu_ptr2,X)
     384/    C71F :                     
     385/    C71F :                     	;0x3A - NOP
     386/    C71F :                     	NOP_0x3A:
     387/    C71F : (MACRO)             		OP_MACRO 58, "NOP", "IMP", "NOP_0x3A"
     387/    C71F :                                             ;TODO
     388/    C71F : (MACRO)             		NEXT_MACRO
     388/    C71F :                                             ;Could also copy X to Y before NEXT then restore after jump
     388/    C71F :                                             
     388/    C71F :  (MACRO-2)                                  halt
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 32 - 1/5/2022 1:27:48


     388/    C71F : 00                                  BRK
     388/    C720 : 00                                  BRK
     388/    C721 :                                             
     388/    C721 :                                             ;Jump table must be page aligned!!!
     388/    C721 : A1 02                                       LDA (emu_PC,X)
     388/    C723 : 0A                                          ASL
     388/    C724 : 95 0A                                       STA emu_ptr,X
     388/    C726 : A9 DF                                       LDA #hi(JUMP_TABLE)
     388/    C728 : 69 00                                       ADC #0
     388/    C72A : 95 0B                                       STA emu_ptr+1,X
     388/    C72C : A1 0A                                       LDA (emu_ptr,X)
     388/    C72E : 95 0C                                       STA emu_ptr2,X
     388/    C730 : F6 0A                                       INC emu_ptr,X
     388/    C732 : 90 02                                       BCC .skip
     388/    C734 : F6 0B                                               INC emu_ptr+1,X
     388/    C736 :                                             .skip:
     388/    C736 : A1 0A                                       LDA (emu_ptr,X)
     388/    C738 : 95 0D                                       STA emu_ptr2+1,X
     388/    C73A : 7C 0C 00                                    JMP (emu_ptr2,X)
     389/    C73D :                     
     390/    C73D :                     	;0x3B - NOP
     391/    C73D :                     	NOP_0x3B:
     392/    C73D : (MACRO)             		OP_MACRO 59, "NOP", "IMP", "NOP_0x3B"
     392/    C73D :                                             ;TODO
     393/    C73D : (MACRO)             		NEXT_MACRO
     393/    C73D :                                             ;Could also copy X to Y before NEXT then restore after jump
     393/    C73D :                                             
     393/    C73D :  (MACRO-2)                                  halt
     393/    C73D : 00                                  BRK
     393/    C73E : 00                                  BRK
     393/    C73F :                                             
     393/    C73F :                                             ;Jump table must be page aligned!!!
     393/    C73F : A1 02                                       LDA (emu_PC,X)
     393/    C741 : 0A                                          ASL
     393/    C742 : 95 0A                                       STA emu_ptr,X
     393/    C744 : A9 DF                                       LDA #hi(JUMP_TABLE)
     393/    C746 : 69 00                                       ADC #0
     393/    C748 : 95 0B                                       STA emu_ptr+1,X
     393/    C74A : A1 0A                                       LDA (emu_ptr,X)
     393/    C74C : 95 0C                                       STA emu_ptr2,X
     393/    C74E : F6 0A                                       INC emu_ptr,X
     393/    C750 : 90 02                                       BCC .skip
     393/    C752 : F6 0B                                               INC emu_ptr+1,X
     393/    C754 :                                             .skip:
     393/    C754 : A1 0A                                       LDA (emu_ptr,X)
     393/    C756 : 95 0D                                       STA emu_ptr2+1,X
     393/    C758 : 7C 0C 00                                    JMP (emu_ptr2,X)
     394/    C75B :                     
     395/    C75B :                     	;0x3C - NOP
     396/    C75B :                     	NOP_0x3C:
     397/    C75B : (MACRO)             		OP_MACRO 60, "NOP", "IMP", "NOP_0x3C"
     397/    C75B :                                             ;TODO
     398/    C75B : (MACRO)             		NEXT_MACRO
     398/    C75B :                                             ;Could also copy X to Y before NEXT then restore after jump
     398/    C75B :                                             
     398/    C75B :  (MACRO-2)                                  halt
     398/    C75B : 00                                  BRK
     398/    C75C : 00                                  BRK
     398/    C75D :                                             
     398/    C75D :                                             ;Jump table must be page aligned!!!
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 33 - 1/5/2022 1:27:48


     398/    C75D : A1 02                                       LDA (emu_PC,X)
     398/    C75F : 0A                                          ASL
     398/    C760 : 95 0A                                       STA emu_ptr,X
     398/    C762 : A9 DF                                       LDA #hi(JUMP_TABLE)
     398/    C764 : 69 00                                       ADC #0
     398/    C766 : 95 0B                                       STA emu_ptr+1,X
     398/    C768 : A1 0A                                       LDA (emu_ptr,X)
     398/    C76A : 95 0C                                       STA emu_ptr2,X
     398/    C76C : F6 0A                                       INC emu_ptr,X
     398/    C76E : 90 02                                       BCC .skip
     398/    C770 : F6 0B                                               INC emu_ptr+1,X
     398/    C772 :                                             .skip:
     398/    C772 : A1 0A                                       LDA (emu_ptr,X)
     398/    C774 : 95 0D                                       STA emu_ptr2+1,X
     398/    C776 : 7C 0C 00                                    JMP (emu_ptr2,X)
     399/    C779 :                     
     400/    C779 :                     	;0x3D - AND ABSX
     401/    C779 :                     	AND_ABSX:
     402/    C779 : (MACRO)             		OP_MACRO 61, "AND", "ABSX", "AND_ABSX"
     402/    C779 :                                             ;TODO
     403/    C779 : (MACRO)             		NEXT_MACRO
     403/    C779 :                                             ;Could also copy X to Y before NEXT then restore after jump
     403/    C779 :                                             
     403/    C779 :  (MACRO-2)                                  halt
     403/    C779 : 00                                  BRK
     403/    C77A : 00                                  BRK
     403/    C77B :                                             
     403/    C77B :                                             ;Jump table must be page aligned!!!
     403/    C77B : A1 02                                       LDA (emu_PC,X)
     403/    C77D : 0A                                          ASL
     403/    C77E : 95 0A                                       STA emu_ptr,X
     403/    C780 : A9 DF                                       LDA #hi(JUMP_TABLE)
     403/    C782 : 69 00                                       ADC #0
     403/    C784 : 95 0B                                       STA emu_ptr+1,X
     403/    C786 : A1 0A                                       LDA (emu_ptr,X)
     403/    C788 : 95 0C                                       STA emu_ptr2,X
     403/    C78A : F6 0A                                       INC emu_ptr,X
     403/    C78C : 90 02                                       BCC .skip
     403/    C78E : F6 0B                                               INC emu_ptr+1,X
     403/    C790 :                                             .skip:
     403/    C790 : A1 0A                                       LDA (emu_ptr,X)
     403/    C792 : 95 0D                                       STA emu_ptr2+1,X
     403/    C794 : 7C 0C 00                                    JMP (emu_ptr2,X)
     404/    C797 :                     
     405/    C797 :                     	;0x3E - ROL ABSX
     406/    C797 :                     	ROL_ABSX:
     407/    C797 : (MACRO)             		OP_MACRO 62, "ROL", "ABSX", "ROL_ABSX"
     407/    C797 :                                             ;TODO
     408/    C797 : (MACRO)             		NEXT_MACRO
     408/    C797 :                                             ;Could also copy X to Y before NEXT then restore after jump
     408/    C797 :                                             
     408/    C797 :  (MACRO-2)                                  halt
     408/    C797 : 00                                  BRK
     408/    C798 : 00                                  BRK
     408/    C799 :                                             
     408/    C799 :                                             ;Jump table must be page aligned!!!
     408/    C799 : A1 02                                       LDA (emu_PC,X)
     408/    C79B : 0A                                          ASL
     408/    C79C : 95 0A                                       STA emu_ptr,X
     408/    C79E : A9 DF                                       LDA #hi(JUMP_TABLE)
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 34 - 1/5/2022 1:27:48


     408/    C7A0 : 69 00                                       ADC #0
     408/    C7A2 : 95 0B                                       STA emu_ptr+1,X
     408/    C7A4 : A1 0A                                       LDA (emu_ptr,X)
     408/    C7A6 : 95 0C                                       STA emu_ptr2,X
     408/    C7A8 : F6 0A                                       INC emu_ptr,X
     408/    C7AA : 90 02                                       BCC .skip
     408/    C7AC : F6 0B                                               INC emu_ptr+1,X
     408/    C7AE :                                             .skip:
     408/    C7AE : A1 0A                                       LDA (emu_ptr,X)
     408/    C7B0 : 95 0D                                       STA emu_ptr2+1,X
     408/    C7B2 : 7C 0C 00                                    JMP (emu_ptr2,X)
     409/    C7B5 :                     
     410/    C7B5 :                     	;0x3F - NOP
     411/    C7B5 :                     	NOP_0x3F:
     412/    C7B5 : (MACRO)             		OP_MACRO 63, "NOP", "IMP", "NOP_0x3F"
     412/    C7B5 :                                             ;TODO
     413/    C7B5 : (MACRO)             		NEXT_MACRO
     413/    C7B5 :                                             ;Could also copy X to Y before NEXT then restore after jump
     413/    C7B5 :                                             
     413/    C7B5 :  (MACRO-2)                                  halt
     413/    C7B5 : 00                                  BRK
     413/    C7B6 : 00                                  BRK
     413/    C7B7 :                                             
     413/    C7B7 :                                             ;Jump table must be page aligned!!!
     413/    C7B7 : A1 02                                       LDA (emu_PC,X)
     413/    C7B9 : 0A                                          ASL
     413/    C7BA : 95 0A                                       STA emu_ptr,X
     413/    C7BC : A9 DF                                       LDA #hi(JUMP_TABLE)
     413/    C7BE : 69 00                                       ADC #0
     413/    C7C0 : 95 0B                                       STA emu_ptr+1,X
     413/    C7C2 : A1 0A                                       LDA (emu_ptr,X)
     413/    C7C4 : 95 0C                                       STA emu_ptr2,X
     413/    C7C6 : F6 0A                                       INC emu_ptr,X
     413/    C7C8 : 90 02                                       BCC .skip
     413/    C7CA : F6 0B                                               INC emu_ptr+1,X
     413/    C7CC :                                             .skip:
     413/    C7CC : A1 0A                                       LDA (emu_ptr,X)
     413/    C7CE : 95 0D                                       STA emu_ptr2+1,X
     413/    C7D0 : 7C 0C 00                                    JMP (emu_ptr2,X)
     414/    C7D3 :                     
     415/    C7D3 :                     	;0x40 - RTI IMP
     416/    C7D3 :                     	RTI_IMP:
     417/    C7D3 : (MACRO)             		OP_MACRO 64, "RTI", "IMP", "RTI_IMP"
     417/    C7D3 :                                             ;TODO
     418/    C7D3 : (MACRO)             		NEXT_MACRO
     418/    C7D3 :                                             ;Could also copy X to Y before NEXT then restore after jump
     418/    C7D3 :                                             
     418/    C7D3 :  (MACRO-2)                                  halt
     418/    C7D3 : 00                                  BRK
     418/    C7D4 : 00                                  BRK
     418/    C7D5 :                                             
     418/    C7D5 :                                             ;Jump table must be page aligned!!!
     418/    C7D5 : A1 02                                       LDA (emu_PC,X)
     418/    C7D7 : 0A                                          ASL
     418/    C7D8 : 95 0A                                       STA emu_ptr,X
     418/    C7DA : A9 DF                                       LDA #hi(JUMP_TABLE)
     418/    C7DC : 69 00                                       ADC #0
     418/    C7DE : 95 0B                                       STA emu_ptr+1,X
     418/    C7E0 : A1 0A                                       LDA (emu_ptr,X)
     418/    C7E2 : 95 0C                                       STA emu_ptr2,X
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 35 - 1/5/2022 1:27:48


     418/    C7E4 : F6 0A                                       INC emu_ptr,X
     418/    C7E6 : 90 02                                       BCC .skip
     418/    C7E8 : F6 0B                                               INC emu_ptr+1,X
     418/    C7EA :                                             .skip:
     418/    C7EA : A1 0A                                       LDA (emu_ptr,X)
     418/    C7EC : 95 0D                                       STA emu_ptr2+1,X
     418/    C7EE : 7C 0C 00                                    JMP (emu_ptr2,X)
     419/    C7F1 :                     
     420/    C7F1 :                     	;0x41 - EOR IX
     421/    C7F1 :                     	EOR_IX:
     422/    C7F1 : (MACRO)             		OP_MACRO 65, "EOR", "IX", "EOR_IX"
     422/    C7F1 :                                             ;TODO
     423/    C7F1 : (MACRO)             		NEXT_MACRO
     423/    C7F1 :                                             ;Could also copy X to Y before NEXT then restore after jump
     423/    C7F1 :                                             
     423/    C7F1 :  (MACRO-2)                                  halt
     423/    C7F1 : 00                                  BRK
     423/    C7F2 : 00                                  BRK
     423/    C7F3 :                                             
     423/    C7F3 :                                             ;Jump table must be page aligned!!!
     423/    C7F3 : A1 02                                       LDA (emu_PC,X)
     423/    C7F5 : 0A                                          ASL
     423/    C7F6 : 95 0A                                       STA emu_ptr,X
     423/    C7F8 : A9 DF                                       LDA #hi(JUMP_TABLE)
     423/    C7FA : 69 00                                       ADC #0
     423/    C7FC : 95 0B                                       STA emu_ptr+1,X
     423/    C7FE : A1 0A                                       LDA (emu_ptr,X)
     423/    C800 : 95 0C                                       STA emu_ptr2,X
     423/    C802 : F6 0A                                       INC emu_ptr,X
     423/    C804 : 90 02                                       BCC .skip
     423/    C806 : F6 0B                                               INC emu_ptr+1,X
     423/    C808 :                                             .skip:
     423/    C808 : A1 0A                                       LDA (emu_ptr,X)
     423/    C80A : 95 0D                                       STA emu_ptr2+1,X
     423/    C80C : 7C 0C 00                                    JMP (emu_ptr2,X)
     424/    C80F :                     
     425/    C80F :                     	;0x42 - NOP
     426/    C80F :                     	NOP_0x42:
     427/    C80F : (MACRO)             		OP_MACRO 66, "NOP", "IMP", "NOP_0x42"
     427/    C80F :                                             ;TODO
     428/    C80F : (MACRO)             		NEXT_MACRO
     428/    C80F :                                             ;Could also copy X to Y before NEXT then restore after jump
     428/    C80F :                                             
     428/    C80F :  (MACRO-2)                                  halt
     428/    C80F : 00                                  BRK
     428/    C810 : 00                                  BRK
     428/    C811 :                                             
     428/    C811 :                                             ;Jump table must be page aligned!!!
     428/    C811 : A1 02                                       LDA (emu_PC,X)
     428/    C813 : 0A                                          ASL
     428/    C814 : 95 0A                                       STA emu_ptr,X
     428/    C816 : A9 DF                                       LDA #hi(JUMP_TABLE)
     428/    C818 : 69 00                                       ADC #0
     428/    C81A : 95 0B                                       STA emu_ptr+1,X
     428/    C81C : A1 0A                                       LDA (emu_ptr,X)
     428/    C81E : 95 0C                                       STA emu_ptr2,X
     428/    C820 : F6 0A                                       INC emu_ptr,X
     428/    C822 : 90 02                                       BCC .skip
     428/    C824 : F6 0B                                               INC emu_ptr+1,X
     428/    C826 :                                             .skip:
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 36 - 1/5/2022 1:27:48


     428/    C826 : A1 0A                                       LDA (emu_ptr,X)
     428/    C828 : 95 0D                                       STA emu_ptr2+1,X
     428/    C82A : 7C 0C 00                                    JMP (emu_ptr2,X)
     429/    C82D :                     
     430/    C82D :                     	;0x43 - NOP
     431/    C82D :                     	NOP_0x43:
     432/    C82D : (MACRO)             		OP_MACRO 67, "NOP", "IMP", "NOP_0x43"
     432/    C82D :                                             ;TODO
     433/    C82D : (MACRO)             		NEXT_MACRO
     433/    C82D :                                             ;Could also copy X to Y before NEXT then restore after jump
     433/    C82D :                                             
     433/    C82D :  (MACRO-2)                                  halt
     433/    C82D : 00                                  BRK
     433/    C82E : 00                                  BRK
     433/    C82F :                                             
     433/    C82F :                                             ;Jump table must be page aligned!!!
     433/    C82F : A1 02                                       LDA (emu_PC,X)
     433/    C831 : 0A                                          ASL
     433/    C832 : 95 0A                                       STA emu_ptr,X
     433/    C834 : A9 DF                                       LDA #hi(JUMP_TABLE)
     433/    C836 : 69 00                                       ADC #0
     433/    C838 : 95 0B                                       STA emu_ptr+1,X
     433/    C83A : A1 0A                                       LDA (emu_ptr,X)
     433/    C83C : 95 0C                                       STA emu_ptr2,X
     433/    C83E : F6 0A                                       INC emu_ptr,X
     433/    C840 : 90 02                                       BCC .skip
     433/    C842 : F6 0B                                               INC emu_ptr+1,X
     433/    C844 :                                             .skip:
     433/    C844 : A1 0A                                       LDA (emu_ptr,X)
     433/    C846 : 95 0D                                       STA emu_ptr2+1,X
     433/    C848 : 7C 0C 00                                    JMP (emu_ptr2,X)
     434/    C84B :                     
     435/    C84B :                     	;0x44 - NOP
     436/    C84B :                     	NOP_0x44:
     437/    C84B : (MACRO)             		OP_MACRO 68, "NOP", "IMP", "NOP_0x44"
     437/    C84B :                                             ;TODO
     438/    C84B : (MACRO)             		NEXT_MACRO
     438/    C84B :                                             ;Could also copy X to Y before NEXT then restore after jump
     438/    C84B :                                             
     438/    C84B :  (MACRO-2)                                  halt
     438/    C84B : 00                                  BRK
     438/    C84C : 00                                  BRK
     438/    C84D :                                             
     438/    C84D :                                             ;Jump table must be page aligned!!!
     438/    C84D : A1 02                                       LDA (emu_PC,X)
     438/    C84F : 0A                                          ASL
     438/    C850 : 95 0A                                       STA emu_ptr,X
     438/    C852 : A9 DF                                       LDA #hi(JUMP_TABLE)
     438/    C854 : 69 00                                       ADC #0
     438/    C856 : 95 0B                                       STA emu_ptr+1,X
     438/    C858 : A1 0A                                       LDA (emu_ptr,X)
     438/    C85A : 95 0C                                       STA emu_ptr2,X
     438/    C85C : F6 0A                                       INC emu_ptr,X
     438/    C85E : 90 02                                       BCC .skip
     438/    C860 : F6 0B                                               INC emu_ptr+1,X
     438/    C862 :                                             .skip:
     438/    C862 : A1 0A                                       LDA (emu_ptr,X)
     438/    C864 : 95 0D                                       STA emu_ptr2+1,X
     438/    C866 : 7C 0C 00                                    JMP (emu_ptr2,X)
     439/    C869 :                     
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 37 - 1/5/2022 1:27:48


     440/    C869 :                     	;0x45 - EOR ZP
     441/    C869 :                     	EOR_ZP:
     442/    C869 : (MACRO)             		OP_MACRO 69, "EOR", "ZP", "EOR_ZP"
     442/    C869 :                                             ;TODO
     443/    C869 : (MACRO)             		NEXT_MACRO
     443/    C869 :                                             ;Could also copy X to Y before NEXT then restore after jump
     443/    C869 :                                             
     443/    C869 :  (MACRO-2)                                  halt
     443/    C869 : 00                                  BRK
     443/    C86A : 00                                  BRK
     443/    C86B :                                             
     443/    C86B :                                             ;Jump table must be page aligned!!!
     443/    C86B : A1 02                                       LDA (emu_PC,X)
     443/    C86D : 0A                                          ASL
     443/    C86E : 95 0A                                       STA emu_ptr,X
     443/    C870 : A9 DF                                       LDA #hi(JUMP_TABLE)
     443/    C872 : 69 00                                       ADC #0
     443/    C874 : 95 0B                                       STA emu_ptr+1,X
     443/    C876 : A1 0A                                       LDA (emu_ptr,X)
     443/    C878 : 95 0C                                       STA emu_ptr2,X
     443/    C87A : F6 0A                                       INC emu_ptr,X
     443/    C87C : 90 02                                       BCC .skip
     443/    C87E : F6 0B                                               INC emu_ptr+1,X
     443/    C880 :                                             .skip:
     443/    C880 : A1 0A                                       LDA (emu_ptr,X)
     443/    C882 : 95 0D                                       STA emu_ptr2+1,X
     443/    C884 : 7C 0C 00                                    JMP (emu_ptr2,X)
     444/    C887 :                     
     445/    C887 :                     	;0x46 - LSR ZP
     446/    C887 :                     	LSR_ZP:
     447/    C887 : (MACRO)             		OP_MACRO 70, "LSR", "ZP", "LSR_ZP"
     447/    C887 :                                             ;TODO
     448/    C887 : (MACRO)             		NEXT_MACRO
     448/    C887 :                                             ;Could also copy X to Y before NEXT then restore after jump
     448/    C887 :                                             
     448/    C887 :  (MACRO-2)                                  halt
     448/    C887 : 00                                  BRK
     448/    C888 : 00                                  BRK
     448/    C889 :                                             
     448/    C889 :                                             ;Jump table must be page aligned!!!
     448/    C889 : A1 02                                       LDA (emu_PC,X)
     448/    C88B : 0A                                          ASL
     448/    C88C : 95 0A                                       STA emu_ptr,X
     448/    C88E : A9 DF                                       LDA #hi(JUMP_TABLE)
     448/    C890 : 69 00                                       ADC #0
     448/    C892 : 95 0B                                       STA emu_ptr+1,X
     448/    C894 : A1 0A                                       LDA (emu_ptr,X)
     448/    C896 : 95 0C                                       STA emu_ptr2,X
     448/    C898 : F6 0A                                       INC emu_ptr,X
     448/    C89A : 90 02                                       BCC .skip
     448/    C89C : F6 0B                                               INC emu_ptr+1,X
     448/    C89E :                                             .skip:
     448/    C89E : A1 0A                                       LDA (emu_ptr,X)
     448/    C8A0 : 95 0D                                       STA emu_ptr2+1,X
     448/    C8A2 : 7C 0C 00                                    JMP (emu_ptr2,X)
     449/    C8A5 :                     
     450/    C8A5 :                     	;0x47 - NOP
     451/    C8A5 :                     	NOP_0x47:
     452/    C8A5 : (MACRO)             		OP_MACRO 71, "NOP", "IMP", "NOP_0x47"
     452/    C8A5 :                                             ;TODO
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 38 - 1/5/2022 1:27:48


     453/    C8A5 : (MACRO)             		NEXT_MACRO
     453/    C8A5 :                                             ;Could also copy X to Y before NEXT then restore after jump
     453/    C8A5 :                                             
     453/    C8A5 :  (MACRO-2)                                  halt
     453/    C8A5 : 00                                  BRK
     453/    C8A6 : 00                                  BRK
     453/    C8A7 :                                             
     453/    C8A7 :                                             ;Jump table must be page aligned!!!
     453/    C8A7 : A1 02                                       LDA (emu_PC,X)
     453/    C8A9 : 0A                                          ASL
     453/    C8AA : 95 0A                                       STA emu_ptr,X
     453/    C8AC : A9 DF                                       LDA #hi(JUMP_TABLE)
     453/    C8AE : 69 00                                       ADC #0
     453/    C8B0 : 95 0B                                       STA emu_ptr+1,X
     453/    C8B2 : A1 0A                                       LDA (emu_ptr,X)
     453/    C8B4 : 95 0C                                       STA emu_ptr2,X
     453/    C8B6 : F6 0A                                       INC emu_ptr,X
     453/    C8B8 : 90 02                                       BCC .skip
     453/    C8BA : F6 0B                                               INC emu_ptr+1,X
     453/    C8BC :                                             .skip:
     453/    C8BC : A1 0A                                       LDA (emu_ptr,X)
     453/    C8BE : 95 0D                                       STA emu_ptr2+1,X
     453/    C8C0 : 7C 0C 00                                    JMP (emu_ptr2,X)
     454/    C8C3 :                     
     455/    C8C3 :                     	;0x48 - PHA IMP
     456/    C8C3 :                     	PHA_IMP:
     457/    C8C3 : (MACRO)             		OP_MACRO 72, "PHA", "IMP", "PHA_IMP"
     457/    C8C3 :                                             ;TODO
     458/    C8C3 : (MACRO)             		NEXT_MACRO
     458/    C8C3 :                                             ;Could also copy X to Y before NEXT then restore after jump
     458/    C8C3 :                                             
     458/    C8C3 :  (MACRO-2)                                  halt
     458/    C8C3 : 00                                  BRK
     458/    C8C4 : 00                                  BRK
     458/    C8C5 :                                             
     458/    C8C5 :                                             ;Jump table must be page aligned!!!
     458/    C8C5 : A1 02                                       LDA (emu_PC,X)
     458/    C8C7 : 0A                                          ASL
     458/    C8C8 : 95 0A                                       STA emu_ptr,X
     458/    C8CA : A9 DF                                       LDA #hi(JUMP_TABLE)
     458/    C8CC : 69 00                                       ADC #0
     458/    C8CE : 95 0B                                       STA emu_ptr+1,X
     458/    C8D0 : A1 0A                                       LDA (emu_ptr,X)
     458/    C8D2 : 95 0C                                       STA emu_ptr2,X
     458/    C8D4 : F6 0A                                       INC emu_ptr,X
     458/    C8D6 : 90 02                                       BCC .skip
     458/    C8D8 : F6 0B                                               INC emu_ptr+1,X
     458/    C8DA :                                             .skip:
     458/    C8DA : A1 0A                                       LDA (emu_ptr,X)
     458/    C8DC : 95 0D                                       STA emu_ptr2+1,X
     458/    C8DE : 7C 0C 00                                    JMP (emu_ptr2,X)
     459/    C8E1 :                     
     460/    C8E1 :                     	;0x49 - EOR IMMED
     461/    C8E1 :                     	EOR_IMMED:
     462/    C8E1 : (MACRO)             		OP_MACRO 73, "EOR", "IMMED", "EOR_IMMED"
     462/    C8E1 :                                             ;TODO
     463/    C8E1 : (MACRO)             		NEXT_MACRO
     463/    C8E1 :                                             ;Could also copy X to Y before NEXT then restore after jump
     463/    C8E1 :                                             
     463/    C8E1 :  (MACRO-2)                                  halt
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 39 - 1/5/2022 1:27:48


     463/    C8E1 : 00                                  BRK
     463/    C8E2 : 00                                  BRK
     463/    C8E3 :                                             
     463/    C8E3 :                                             ;Jump table must be page aligned!!!
     463/    C8E3 : A1 02                                       LDA (emu_PC,X)
     463/    C8E5 : 0A                                          ASL
     463/    C8E6 : 95 0A                                       STA emu_ptr,X
     463/    C8E8 : A9 DF                                       LDA #hi(JUMP_TABLE)
     463/    C8EA : 69 00                                       ADC #0
     463/    C8EC : 95 0B                                       STA emu_ptr+1,X
     463/    C8EE : A1 0A                                       LDA (emu_ptr,X)
     463/    C8F0 : 95 0C                                       STA emu_ptr2,X
     463/    C8F2 : F6 0A                                       INC emu_ptr,X
     463/    C8F4 : 90 02                                       BCC .skip
     463/    C8F6 : F6 0B                                               INC emu_ptr+1,X
     463/    C8F8 :                                             .skip:
     463/    C8F8 : A1 0A                                       LDA (emu_ptr,X)
     463/    C8FA : 95 0D                                       STA emu_ptr2+1,X
     463/    C8FC : 7C 0C 00                                    JMP (emu_ptr2,X)
     464/    C8FF :                     
     465/    C8FF :                     	;0x4A - LSR A
     466/    C8FF :                     	LSR_A:
     467/    C8FF : (MACRO)             		OP_MACRO 74, "LSR", "A", "LSR_A"
     467/    C8FF :                                             ;TODO
     468/    C8FF : (MACRO)             		NEXT_MACRO
     468/    C8FF :                                             ;Could also copy X to Y before NEXT then restore after jump
     468/    C8FF :                                             
     468/    C8FF :  (MACRO-2)                                  halt
     468/    C8FF : 00                                  BRK
     468/    C900 : 00                                  BRK
     468/    C901 :                                             
     468/    C901 :                                             ;Jump table must be page aligned!!!
     468/    C901 : A1 02                                       LDA (emu_PC,X)
     468/    C903 : 0A                                          ASL
     468/    C904 : 95 0A                                       STA emu_ptr,X
     468/    C906 : A9 DF                                       LDA #hi(JUMP_TABLE)
     468/    C908 : 69 00                                       ADC #0
     468/    C90A : 95 0B                                       STA emu_ptr+1,X
     468/    C90C : A1 0A                                       LDA (emu_ptr,X)
     468/    C90E : 95 0C                                       STA emu_ptr2,X
     468/    C910 : F6 0A                                       INC emu_ptr,X
     468/    C912 : 90 02                                       BCC .skip
     468/    C914 : F6 0B                                               INC emu_ptr+1,X
     468/    C916 :                                             .skip:
     468/    C916 : A1 0A                                       LDA (emu_ptr,X)
     468/    C918 : 95 0D                                       STA emu_ptr2+1,X
     468/    C91A : 7C 0C 00                                    JMP (emu_ptr2,X)
     469/    C91D :                     
     470/    C91D :                     	;0x4B - NOP
     471/    C91D :                     	NOP_0x4B:
     472/    C91D : (MACRO)             		OP_MACRO 75, "NOP", "IMP", "NOP_0x4B"
     472/    C91D :                                             ;TODO
     473/    C91D : (MACRO)             		NEXT_MACRO
     473/    C91D :                                             ;Could also copy X to Y before NEXT then restore after jump
     473/    C91D :                                             
     473/    C91D :  (MACRO-2)                                  halt
     473/    C91D : 00                                  BRK
     473/    C91E : 00                                  BRK
     473/    C91F :                                             
     473/    C91F :                                             ;Jump table must be page aligned!!!
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 40 - 1/5/2022 1:27:48


     473/    C91F : A1 02                                       LDA (emu_PC,X)
     473/    C921 : 0A                                          ASL
     473/    C922 : 95 0A                                       STA emu_ptr,X
     473/    C924 : A9 DF                                       LDA #hi(JUMP_TABLE)
     473/    C926 : 69 00                                       ADC #0
     473/    C928 : 95 0B                                       STA emu_ptr+1,X
     473/    C92A : A1 0A                                       LDA (emu_ptr,X)
     473/    C92C : 95 0C                                       STA emu_ptr2,X
     473/    C92E : F6 0A                                       INC emu_ptr,X
     473/    C930 : 90 02                                       BCC .skip
     473/    C932 : F6 0B                                               INC emu_ptr+1,X
     473/    C934 :                                             .skip:
     473/    C934 : A1 0A                                       LDA (emu_ptr,X)
     473/    C936 : 95 0D                                       STA emu_ptr2+1,X
     473/    C938 : 7C 0C 00                                    JMP (emu_ptr2,X)
     474/    C93B :                     
     475/    C93B :                     	;0x4C - JMP ABS
     476/    C93B :                     	JMP_ABS:
     477/    C93B : (MACRO)             		OP_MACRO 76, "JMP", "ABS", "JMP_ABS"
     477/    C93B :                                             ;TODO
     478/    C93B : (MACRO)             		NEXT_MACRO
     478/    C93B :                                             ;Could also copy X to Y before NEXT then restore after jump
     478/    C93B :                                             
     478/    C93B :  (MACRO-2)                                  halt
     478/    C93B : 00                                  BRK
     478/    C93C : 00                                  BRK
     478/    C93D :                                             
     478/    C93D :                                             ;Jump table must be page aligned!!!
     478/    C93D : A1 02                                       LDA (emu_PC,X)
     478/    C93F : 0A                                          ASL
     478/    C940 : 95 0A                                       STA emu_ptr,X
     478/    C942 : A9 DF                                       LDA #hi(JUMP_TABLE)
     478/    C944 : 69 00                                       ADC #0
     478/    C946 : 95 0B                                       STA emu_ptr+1,X
     478/    C948 : A1 0A                                       LDA (emu_ptr,X)
     478/    C94A : 95 0C                                       STA emu_ptr2,X
     478/    C94C : F6 0A                                       INC emu_ptr,X
     478/    C94E : 90 02                                       BCC .skip
     478/    C950 : F6 0B                                               INC emu_ptr+1,X
     478/    C952 :                                             .skip:
     478/    C952 : A1 0A                                       LDA (emu_ptr,X)
     478/    C954 : 95 0D                                       STA emu_ptr2+1,X
     478/    C956 : 7C 0C 00                                    JMP (emu_ptr2,X)
     479/    C959 :                     
     480/    C959 :                     	;0x4D - EOR ABS
     481/    C959 :                     	EOR_ABS:
     482/    C959 : (MACRO)             		OP_MACRO 77, "EOR", "ABS", "EOR_ABS"
     482/    C959 :                                             ;TODO
     483/    C959 : (MACRO)             		NEXT_MACRO
     483/    C959 :                                             ;Could also copy X to Y before NEXT then restore after jump
     483/    C959 :                                             
     483/    C959 :  (MACRO-2)                                  halt
     483/    C959 : 00                                  BRK
     483/    C95A : 00                                  BRK
     483/    C95B :                                             
     483/    C95B :                                             ;Jump table must be page aligned!!!
     483/    C95B : A1 02                                       LDA (emu_PC,X)
     483/    C95D : 0A                                          ASL
     483/    C95E : 95 0A                                       STA emu_ptr,X
     483/    C960 : A9 DF                                       LDA #hi(JUMP_TABLE)
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 41 - 1/5/2022 1:27:48


     483/    C962 : 69 00                                       ADC #0
     483/    C964 : 95 0B                                       STA emu_ptr+1,X
     483/    C966 : A1 0A                                       LDA (emu_ptr,X)
     483/    C968 : 95 0C                                       STA emu_ptr2,X
     483/    C96A : F6 0A                                       INC emu_ptr,X
     483/    C96C : 90 02                                       BCC .skip
     483/    C96E : F6 0B                                               INC emu_ptr+1,X
     483/    C970 :                                             .skip:
     483/    C970 : A1 0A                                       LDA (emu_ptr,X)
     483/    C972 : 95 0D                                       STA emu_ptr2+1,X
     483/    C974 : 7C 0C 00                                    JMP (emu_ptr2,X)
     484/    C977 :                     
     485/    C977 :                     	;0x4E - LSR ABS
     486/    C977 :                     	LSR_ABS:
     487/    C977 : (MACRO)             		OP_MACRO 78, "LSR", "ABS", "LSR_ABS"
     487/    C977 :                                             ;TODO
     488/    C977 : (MACRO)             		NEXT_MACRO
     488/    C977 :                                             ;Could also copy X to Y before NEXT then restore after jump
     488/    C977 :                                             
     488/    C977 :  (MACRO-2)                                  halt
     488/    C977 : 00                                  BRK
     488/    C978 : 00                                  BRK
     488/    C979 :                                             
     488/    C979 :                                             ;Jump table must be page aligned!!!
     488/    C979 : A1 02                                       LDA (emu_PC,X)
     488/    C97B : 0A                                          ASL
     488/    C97C : 95 0A                                       STA emu_ptr,X
     488/    C97E : A9 DF                                       LDA #hi(JUMP_TABLE)
     488/    C980 : 69 00                                       ADC #0
     488/    C982 : 95 0B                                       STA emu_ptr+1,X
     488/    C984 : A1 0A                                       LDA (emu_ptr,X)
     488/    C986 : 95 0C                                       STA emu_ptr2,X
     488/    C988 : F6 0A                                       INC emu_ptr,X
     488/    C98A : 90 02                                       BCC .skip
     488/    C98C : F6 0B                                               INC emu_ptr+1,X
     488/    C98E :                                             .skip:
     488/    C98E : A1 0A                                       LDA (emu_ptr,X)
     488/    C990 : 95 0D                                       STA emu_ptr2+1,X
     488/    C992 : 7C 0C 00                                    JMP (emu_ptr2,X)
     489/    C995 :                     
     490/    C995 :                     	;0x4F - NOP
     491/    C995 :                     	NOP_0x4F:
     492/    C995 : (MACRO)             		OP_MACRO 79, "NOP", "IMP", "NOP_0x4F"
     492/    C995 :                                             ;TODO
     493/    C995 : (MACRO)             		NEXT_MACRO
     493/    C995 :                                             ;Could also copy X to Y before NEXT then restore after jump
     493/    C995 :                                             
     493/    C995 :  (MACRO-2)                                  halt
     493/    C995 : 00                                  BRK
     493/    C996 : 00                                  BRK
     493/    C997 :                                             
     493/    C997 :                                             ;Jump table must be page aligned!!!
     493/    C997 : A1 02                                       LDA (emu_PC,X)
     493/    C999 : 0A                                          ASL
     493/    C99A : 95 0A                                       STA emu_ptr,X
     493/    C99C : A9 DF                                       LDA #hi(JUMP_TABLE)
     493/    C99E : 69 00                                       ADC #0
     493/    C9A0 : 95 0B                                       STA emu_ptr+1,X
     493/    C9A2 : A1 0A                                       LDA (emu_ptr,X)
     493/    C9A4 : 95 0C                                       STA emu_ptr2,X
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 42 - 1/5/2022 1:27:48


     493/    C9A6 : F6 0A                                       INC emu_ptr,X
     493/    C9A8 : 90 02                                       BCC .skip
     493/    C9AA : F6 0B                                               INC emu_ptr+1,X
     493/    C9AC :                                             .skip:
     493/    C9AC : A1 0A                                       LDA (emu_ptr,X)
     493/    C9AE : 95 0D                                       STA emu_ptr2+1,X
     493/    C9B0 : 7C 0C 00                                    JMP (emu_ptr2,X)
     494/    C9B3 :                     
     495/    C9B3 :                     	;0x50 - BVC REL
     496/    C9B3 :                     	BVC_REL:
     497/    C9B3 : (MACRO)             		OP_MACRO 80, "BVC", "REL", "BVC_REL"
     497/    C9B3 :                                             ;TODO
     498/    C9B3 : (MACRO)             		NEXT_MACRO
     498/    C9B3 :                                             ;Could also copy X to Y before NEXT then restore after jump
     498/    C9B3 :                                             
     498/    C9B3 :  (MACRO-2)                                  halt
     498/    C9B3 : 00                                  BRK
     498/    C9B4 : 00                                  BRK
     498/    C9B5 :                                             
     498/    C9B5 :                                             ;Jump table must be page aligned!!!
     498/    C9B5 : A1 02                                       LDA (emu_PC,X)
     498/    C9B7 : 0A                                          ASL
     498/    C9B8 : 95 0A                                       STA emu_ptr,X
     498/    C9BA : A9 DF                                       LDA #hi(JUMP_TABLE)
     498/    C9BC : 69 00                                       ADC #0
     498/    C9BE : 95 0B                                       STA emu_ptr+1,X
     498/    C9C0 : A1 0A                                       LDA (emu_ptr,X)
     498/    C9C2 : 95 0C                                       STA emu_ptr2,X
     498/    C9C4 : F6 0A                                       INC emu_ptr,X
     498/    C9C6 : 90 02                                       BCC .skip
     498/    C9C8 : F6 0B                                               INC emu_ptr+1,X
     498/    C9CA :                                             .skip:
     498/    C9CA : A1 0A                                       LDA (emu_ptr,X)
     498/    C9CC : 95 0D                                       STA emu_ptr2+1,X
     498/    C9CE : 7C 0C 00                                    JMP (emu_ptr2,X)
     499/    C9D1 :                     
     500/    C9D1 :                     	;0x51 - EOR IY
     501/    C9D1 :                     	EOR_IY:
     502/    C9D1 : (MACRO)             		OP_MACRO 81, "EOR", "IY", "EOR_IY"
     502/    C9D1 :                                             ;TODO
     503/    C9D1 : (MACRO)             		NEXT_MACRO
     503/    C9D1 :                                             ;Could also copy X to Y before NEXT then restore after jump
     503/    C9D1 :                                             
     503/    C9D1 :  (MACRO-2)                                  halt
     503/    C9D1 : 00                                  BRK
     503/    C9D2 : 00                                  BRK
     503/    C9D3 :                                             
     503/    C9D3 :                                             ;Jump table must be page aligned!!!
     503/    C9D3 : A1 02                                       LDA (emu_PC,X)
     503/    C9D5 : 0A                                          ASL
     503/    C9D6 : 95 0A                                       STA emu_ptr,X
     503/    C9D8 : A9 DF                                       LDA #hi(JUMP_TABLE)
     503/    C9DA : 69 00                                       ADC #0
     503/    C9DC : 95 0B                                       STA emu_ptr+1,X
     503/    C9DE : A1 0A                                       LDA (emu_ptr,X)
     503/    C9E0 : 95 0C                                       STA emu_ptr2,X
     503/    C9E2 : F6 0A                                       INC emu_ptr,X
     503/    C9E4 : 90 02                                       BCC .skip
     503/    C9E6 : F6 0B                                               INC emu_ptr+1,X
     503/    C9E8 :                                             .skip:
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 43 - 1/5/2022 1:27:48


     503/    C9E8 : A1 0A                                       LDA (emu_ptr,X)
     503/    C9EA : 95 0D                                       STA emu_ptr2+1,X
     503/    C9EC : 7C 0C 00                                    JMP (emu_ptr2,X)
     504/    C9EF :                     
     505/    C9EF :                     	;0x52 - NOP
     506/    C9EF :                     	NOP_0x52:
     507/    C9EF : (MACRO)             		OP_MACRO 82, "NOP", "IMP", "NOP_0x52"
     507/    C9EF :                                             ;TODO
     508/    C9EF : (MACRO)             		NEXT_MACRO
     508/    C9EF :                                             ;Could also copy X to Y before NEXT then restore after jump
     508/    C9EF :                                             
     508/    C9EF :  (MACRO-2)                                  halt
     508/    C9EF : 00                                  BRK
     508/    C9F0 : 00                                  BRK
     508/    C9F1 :                                             
     508/    C9F1 :                                             ;Jump table must be page aligned!!!
     508/    C9F1 : A1 02                                       LDA (emu_PC,X)
     508/    C9F3 : 0A                                          ASL
     508/    C9F4 : 95 0A                                       STA emu_ptr,X
     508/    C9F6 : A9 DF                                       LDA #hi(JUMP_TABLE)
     508/    C9F8 : 69 00                                       ADC #0
     508/    C9FA : 95 0B                                       STA emu_ptr+1,X
     508/    C9FC : A1 0A                                       LDA (emu_ptr,X)
     508/    C9FE : 95 0C                                       STA emu_ptr2,X
     508/    CA00 : F6 0A                                       INC emu_ptr,X
     508/    CA02 : 90 02                                       BCC .skip
     508/    CA04 : F6 0B                                               INC emu_ptr+1,X
     508/    CA06 :                                             .skip:
     508/    CA06 : A1 0A                                       LDA (emu_ptr,X)
     508/    CA08 : 95 0D                                       STA emu_ptr2+1,X
     508/    CA0A : 7C 0C 00                                    JMP (emu_ptr2,X)
     509/    CA0D :                     
     510/    CA0D :                     	;0x53 - NOP
     511/    CA0D :                     	NOP_0x53:
     512/    CA0D : (MACRO)             		OP_MACRO 83, "NOP", "IMP", "NOP_0x53"
     512/    CA0D :                                             ;TODO
     513/    CA0D : (MACRO)             		NEXT_MACRO
     513/    CA0D :                                             ;Could also copy X to Y before NEXT then restore after jump
     513/    CA0D :                                             
     513/    CA0D :  (MACRO-2)                                  halt
     513/    CA0D : 00                                  BRK
     513/    CA0E : 00                                  BRK
     513/    CA0F :                                             
     513/    CA0F :                                             ;Jump table must be page aligned!!!
     513/    CA0F : A1 02                                       LDA (emu_PC,X)
     513/    CA11 : 0A                                          ASL
     513/    CA12 : 95 0A                                       STA emu_ptr,X
     513/    CA14 : A9 DF                                       LDA #hi(JUMP_TABLE)
     513/    CA16 : 69 00                                       ADC #0
     513/    CA18 : 95 0B                                       STA emu_ptr+1,X
     513/    CA1A : A1 0A                                       LDA (emu_ptr,X)
     513/    CA1C : 95 0C                                       STA emu_ptr2,X
     513/    CA1E : F6 0A                                       INC emu_ptr,X
     513/    CA20 : 90 02                                       BCC .skip
     513/    CA22 : F6 0B                                               INC emu_ptr+1,X
     513/    CA24 :                                             .skip:
     513/    CA24 : A1 0A                                       LDA (emu_ptr,X)
     513/    CA26 : 95 0D                                       STA emu_ptr2+1,X
     513/    CA28 : 7C 0C 00                                    JMP (emu_ptr2,X)
     514/    CA2B :                     
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 44 - 1/5/2022 1:27:48


     515/    CA2B :                     	;0x54 - NOP
     516/    CA2B :                     	NOP_0x54:
     517/    CA2B : (MACRO)             		OP_MACRO 84, "NOP", "IMP", "NOP_0x54"
     517/    CA2B :                                             ;TODO
     518/    CA2B : (MACRO)             		NEXT_MACRO
     518/    CA2B :                                             ;Could also copy X to Y before NEXT then restore after jump
     518/    CA2B :                                             
     518/    CA2B :  (MACRO-2)                                  halt
     518/    CA2B : 00                                  BRK
     518/    CA2C : 00                                  BRK
     518/    CA2D :                                             
     518/    CA2D :                                             ;Jump table must be page aligned!!!
     518/    CA2D : A1 02                                       LDA (emu_PC,X)
     518/    CA2F : 0A                                          ASL
     518/    CA30 : 95 0A                                       STA emu_ptr,X
     518/    CA32 : A9 DF                                       LDA #hi(JUMP_TABLE)
     518/    CA34 : 69 00                                       ADC #0
     518/    CA36 : 95 0B                                       STA emu_ptr+1,X
     518/    CA38 : A1 0A                                       LDA (emu_ptr,X)
     518/    CA3A : 95 0C                                       STA emu_ptr2,X
     518/    CA3C : F6 0A                                       INC emu_ptr,X
     518/    CA3E : 90 02                                       BCC .skip
     518/    CA40 : F6 0B                                               INC emu_ptr+1,X
     518/    CA42 :                                             .skip:
     518/    CA42 : A1 0A                                       LDA (emu_ptr,X)
     518/    CA44 : 95 0D                                       STA emu_ptr2+1,X
     518/    CA46 : 7C 0C 00                                    JMP (emu_ptr2,X)
     519/    CA49 :                     
     520/    CA49 :                     	;0x55 - EOR ZPX
     521/    CA49 :                     	EOR_ZPX:
     522/    CA49 : (MACRO)             		OP_MACRO 85, "EOR", "ZPX", "EOR_ZPX"
     522/    CA49 :                                             ;TODO
     523/    CA49 : (MACRO)             		NEXT_MACRO
     523/    CA49 :                                             ;Could also copy X to Y before NEXT then restore after jump
     523/    CA49 :                                             
     523/    CA49 :  (MACRO-2)                                  halt
     523/    CA49 : 00                                  BRK
     523/    CA4A : 00                                  BRK
     523/    CA4B :                                             
     523/    CA4B :                                             ;Jump table must be page aligned!!!
     523/    CA4B : A1 02                                       LDA (emu_PC,X)
     523/    CA4D : 0A                                          ASL
     523/    CA4E : 95 0A                                       STA emu_ptr,X
     523/    CA50 : A9 DF                                       LDA #hi(JUMP_TABLE)
     523/    CA52 : 69 00                                       ADC #0
     523/    CA54 : 95 0B                                       STA emu_ptr+1,X
     523/    CA56 : A1 0A                                       LDA (emu_ptr,X)
     523/    CA58 : 95 0C                                       STA emu_ptr2,X
     523/    CA5A : F6 0A                                       INC emu_ptr,X
     523/    CA5C : 90 02                                       BCC .skip
     523/    CA5E : F6 0B                                               INC emu_ptr+1,X
     523/    CA60 :                                             .skip:
     523/    CA60 : A1 0A                                       LDA (emu_ptr,X)
     523/    CA62 : 95 0D                                       STA emu_ptr2+1,X
     523/    CA64 : 7C 0C 00                                    JMP (emu_ptr2,X)
     524/    CA67 :                     
     525/    CA67 :                     	;0x56 - LSR ZPX
     526/    CA67 :                     	LSR_ZPX:
     527/    CA67 : (MACRO)             		OP_MACRO 86, "LSR", "ZPX", "LSR_ZPX"
     527/    CA67 :                                             ;TODO
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 45 - 1/5/2022 1:27:48


     528/    CA67 : (MACRO)             		NEXT_MACRO
     528/    CA67 :                                             ;Could also copy X to Y before NEXT then restore after jump
     528/    CA67 :                                             
     528/    CA67 :  (MACRO-2)                                  halt
     528/    CA67 : 00                                  BRK
     528/    CA68 : 00                                  BRK
     528/    CA69 :                                             
     528/    CA69 :                                             ;Jump table must be page aligned!!!
     528/    CA69 : A1 02                                       LDA (emu_PC,X)
     528/    CA6B : 0A                                          ASL
     528/    CA6C : 95 0A                                       STA emu_ptr,X
     528/    CA6E : A9 DF                                       LDA #hi(JUMP_TABLE)
     528/    CA70 : 69 00                                       ADC #0
     528/    CA72 : 95 0B                                       STA emu_ptr+1,X
     528/    CA74 : A1 0A                                       LDA (emu_ptr,X)
     528/    CA76 : 95 0C                                       STA emu_ptr2,X
     528/    CA78 : F6 0A                                       INC emu_ptr,X
     528/    CA7A : 90 02                                       BCC .skip
     528/    CA7C : F6 0B                                               INC emu_ptr+1,X
     528/    CA7E :                                             .skip:
     528/    CA7E : A1 0A                                       LDA (emu_ptr,X)
     528/    CA80 : 95 0D                                       STA emu_ptr2+1,X
     528/    CA82 : 7C 0C 00                                    JMP (emu_ptr2,X)
     529/    CA85 :                     
     530/    CA85 :                     	;0x57 - NOP
     531/    CA85 :                     	NOP_0x57:
     532/    CA85 : (MACRO)             		OP_MACRO 87, "NOP", "IMP", "NOP_0x57"
     532/    CA85 :                                             ;TODO
     533/    CA85 : (MACRO)             		NEXT_MACRO
     533/    CA85 :                                             ;Could also copy X to Y before NEXT then restore after jump
     533/    CA85 :                                             
     533/    CA85 :  (MACRO-2)                                  halt
     533/    CA85 : 00                                  BRK
     533/    CA86 : 00                                  BRK
     533/    CA87 :                                             
     533/    CA87 :                                             ;Jump table must be page aligned!!!
     533/    CA87 : A1 02                                       LDA (emu_PC,X)
     533/    CA89 : 0A                                          ASL
     533/    CA8A : 95 0A                                       STA emu_ptr,X
     533/    CA8C : A9 DF                                       LDA #hi(JUMP_TABLE)
     533/    CA8E : 69 00                                       ADC #0
     533/    CA90 : 95 0B                                       STA emu_ptr+1,X
     533/    CA92 : A1 0A                                       LDA (emu_ptr,X)
     533/    CA94 : 95 0C                                       STA emu_ptr2,X
     533/    CA96 : F6 0A                                       INC emu_ptr,X
     533/    CA98 : 90 02                                       BCC .skip
     533/    CA9A : F6 0B                                               INC emu_ptr+1,X
     533/    CA9C :                                             .skip:
     533/    CA9C : A1 0A                                       LDA (emu_ptr,X)
     533/    CA9E : 95 0D                                       STA emu_ptr2+1,X
     533/    CAA0 : 7C 0C 00                                    JMP (emu_ptr2,X)
     534/    CAA3 :                     
     535/    CAA3 :                     	;0x58 - CLI IMP
     536/    CAA3 :                     	CLI_IMP:
     537/    CAA3 : (MACRO)             		OP_MACRO 88, "CLI", "IMP", "CLI_IMP"
     537/    CAA3 :                                             ;TODO
     538/    CAA3 : (MACRO)             		NEXT_MACRO
     538/    CAA3 :                                             ;Could also copy X to Y before NEXT then restore after jump
     538/    CAA3 :                                             
     538/    CAA3 :  (MACRO-2)                                  halt
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 46 - 1/5/2022 1:27:48


     538/    CAA3 : 00                                  BRK
     538/    CAA4 : 00                                  BRK
     538/    CAA5 :                                             
     538/    CAA5 :                                             ;Jump table must be page aligned!!!
     538/    CAA5 : A1 02                                       LDA (emu_PC,X)
     538/    CAA7 : 0A                                          ASL
     538/    CAA8 : 95 0A                                       STA emu_ptr,X
     538/    CAAA : A9 DF                                       LDA #hi(JUMP_TABLE)
     538/    CAAC : 69 00                                       ADC #0
     538/    CAAE : 95 0B                                       STA emu_ptr+1,X
     538/    CAB0 : A1 0A                                       LDA (emu_ptr,X)
     538/    CAB2 : 95 0C                                       STA emu_ptr2,X
     538/    CAB4 : F6 0A                                       INC emu_ptr,X
     538/    CAB6 : 90 02                                       BCC .skip
     538/    CAB8 : F6 0B                                               INC emu_ptr+1,X
     538/    CABA :                                             .skip:
     538/    CABA : A1 0A                                       LDA (emu_ptr,X)
     538/    CABC : 95 0D                                       STA emu_ptr2+1,X
     538/    CABE : 7C 0C 00                                    JMP (emu_ptr2,X)
     539/    CAC1 :                     
     540/    CAC1 :                     	;0x59 - EOR ABSY
     541/    CAC1 :                     	EOR_ABSY:
     542/    CAC1 : (MACRO)             		OP_MACRO 89, "EOR", "ABSY", "EOR_ABSY"
     542/    CAC1 :                                             ;TODO
     543/    CAC1 : (MACRO)             		NEXT_MACRO
     543/    CAC1 :                                             ;Could also copy X to Y before NEXT then restore after jump
     543/    CAC1 :                                             
     543/    CAC1 :  (MACRO-2)                                  halt
     543/    CAC1 : 00                                  BRK
     543/    CAC2 : 00                                  BRK
     543/    CAC3 :                                             
     543/    CAC3 :                                             ;Jump table must be page aligned!!!
     543/    CAC3 : A1 02                                       LDA (emu_PC,X)
     543/    CAC5 : 0A                                          ASL
     543/    CAC6 : 95 0A                                       STA emu_ptr,X
     543/    CAC8 : A9 DF                                       LDA #hi(JUMP_TABLE)
     543/    CACA : 69 00                                       ADC #0
     543/    CACC : 95 0B                                       STA emu_ptr+1,X
     543/    CACE : A1 0A                                       LDA (emu_ptr,X)
     543/    CAD0 : 95 0C                                       STA emu_ptr2,X
     543/    CAD2 : F6 0A                                       INC emu_ptr,X
     543/    CAD4 : 90 02                                       BCC .skip
     543/    CAD6 : F6 0B                                               INC emu_ptr+1,X
     543/    CAD8 :                                             .skip:
     543/    CAD8 : A1 0A                                       LDA (emu_ptr,X)
     543/    CADA : 95 0D                                       STA emu_ptr2+1,X
     543/    CADC : 7C 0C 00                                    JMP (emu_ptr2,X)
     544/    CADF :                     
     545/    CADF :                     	;0x5A - NOP
     546/    CADF :                     	NOP_0x5A:
     547/    CADF : (MACRO)             		OP_MACRO 90, "NOP", "IMP", "NOP_0x5A"
     547/    CADF :                                             ;TODO
     548/    CADF : (MACRO)             		NEXT_MACRO
     548/    CADF :                                             ;Could also copy X to Y before NEXT then restore after jump
     548/    CADF :                                             
     548/    CADF :  (MACRO-2)                                  halt
     548/    CADF : 00                                  BRK
     548/    CAE0 : 00                                  BRK
     548/    CAE1 :                                             
     548/    CAE1 :                                             ;Jump table must be page aligned!!!
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 47 - 1/5/2022 1:27:48


     548/    CAE1 : A1 02                                       LDA (emu_PC,X)
     548/    CAE3 : 0A                                          ASL
     548/    CAE4 : 95 0A                                       STA emu_ptr,X
     548/    CAE6 : A9 DF                                       LDA #hi(JUMP_TABLE)
     548/    CAE8 : 69 00                                       ADC #0
     548/    CAEA : 95 0B                                       STA emu_ptr+1,X
     548/    CAEC : A1 0A                                       LDA (emu_ptr,X)
     548/    CAEE : 95 0C                                       STA emu_ptr2,X
     548/    CAF0 : F6 0A                                       INC emu_ptr,X
     548/    CAF2 : 90 02                                       BCC .skip
     548/    CAF4 : F6 0B                                               INC emu_ptr+1,X
     548/    CAF6 :                                             .skip:
     548/    CAF6 : A1 0A                                       LDA (emu_ptr,X)
     548/    CAF8 : 95 0D                                       STA emu_ptr2+1,X
     548/    CAFA : 7C 0C 00                                    JMP (emu_ptr2,X)
     549/    CAFD :                     
     550/    CAFD :                     	;0x5B - NOP
     551/    CAFD :                     	NOP_0x5B:
     552/    CAFD : (MACRO)             		OP_MACRO 91, "NOP", "IMP", "NOP_0x5B"
     552/    CAFD :                                             ;TODO
     553/    CAFD : (MACRO)             		NEXT_MACRO
     553/    CAFD :                                             ;Could also copy X to Y before NEXT then restore after jump
     553/    CAFD :                                             
     553/    CAFD :  (MACRO-2)                                  halt
     553/    CAFD : 00                                  BRK
     553/    CAFE : 00                                  BRK
     553/    CAFF :                                             
     553/    CAFF :                                             ;Jump table must be page aligned!!!
     553/    CAFF : A1 02                                       LDA (emu_PC,X)
     553/    CB01 : 0A                                          ASL
     553/    CB02 : 95 0A                                       STA emu_ptr,X
     553/    CB04 : A9 DF                                       LDA #hi(JUMP_TABLE)
     553/    CB06 : 69 00                                       ADC #0
     553/    CB08 : 95 0B                                       STA emu_ptr+1,X
     553/    CB0A : A1 0A                                       LDA (emu_ptr,X)
     553/    CB0C : 95 0C                                       STA emu_ptr2,X
     553/    CB0E : F6 0A                                       INC emu_ptr,X
     553/    CB10 : 90 02                                       BCC .skip
     553/    CB12 : F6 0B                                               INC emu_ptr+1,X
     553/    CB14 :                                             .skip:
     553/    CB14 : A1 0A                                       LDA (emu_ptr,X)
     553/    CB16 : 95 0D                                       STA emu_ptr2+1,X
     553/    CB18 : 7C 0C 00                                    JMP (emu_ptr2,X)
     554/    CB1B :                     
     555/    CB1B :                     	;0x5C - NOP
     556/    CB1B :                     	NOP_0x5C:
     557/    CB1B : (MACRO)             		OP_MACRO 92, "NOP", "IMP", "NOP_0x5C"
     557/    CB1B :                                             ;TODO
     558/    CB1B : (MACRO)             		NEXT_MACRO
     558/    CB1B :                                             ;Could also copy X to Y before NEXT then restore after jump
     558/    CB1B :                                             
     558/    CB1B :  (MACRO-2)                                  halt
     558/    CB1B : 00                                  BRK
     558/    CB1C : 00                                  BRK
     558/    CB1D :                                             
     558/    CB1D :                                             ;Jump table must be page aligned!!!
     558/    CB1D : A1 02                                       LDA (emu_PC,X)
     558/    CB1F : 0A                                          ASL
     558/    CB20 : 95 0A                                       STA emu_ptr,X
     558/    CB22 : A9 DF                                       LDA #hi(JUMP_TABLE)
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 48 - 1/5/2022 1:27:48


     558/    CB24 : 69 00                                       ADC #0
     558/    CB26 : 95 0B                                       STA emu_ptr+1,X
     558/    CB28 : A1 0A                                       LDA (emu_ptr,X)
     558/    CB2A : 95 0C                                       STA emu_ptr2,X
     558/    CB2C : F6 0A                                       INC emu_ptr,X
     558/    CB2E : 90 02                                       BCC .skip
     558/    CB30 : F6 0B                                               INC emu_ptr+1,X
     558/    CB32 :                                             .skip:
     558/    CB32 : A1 0A                                       LDA (emu_ptr,X)
     558/    CB34 : 95 0D                                       STA emu_ptr2+1,X
     558/    CB36 : 7C 0C 00                                    JMP (emu_ptr2,X)
     559/    CB39 :                     
     560/    CB39 :                     	;0x5D - EOR ABSX
     561/    CB39 :                     	EOR_ABSX:
     562/    CB39 : (MACRO)             		OP_MACRO 93, "EOR", "ABSX", "EOR_ABSX"
     562/    CB39 :                                             ;TODO
     563/    CB39 : (MACRO)             		NEXT_MACRO
     563/    CB39 :                                             ;Could also copy X to Y before NEXT then restore after jump
     563/    CB39 :                                             
     563/    CB39 :  (MACRO-2)                                  halt
     563/    CB39 : 00                                  BRK
     563/    CB3A : 00                                  BRK
     563/    CB3B :                                             
     563/    CB3B :                                             ;Jump table must be page aligned!!!
     563/    CB3B : A1 02                                       LDA (emu_PC,X)
     563/    CB3D : 0A                                          ASL
     563/    CB3E : 95 0A                                       STA emu_ptr,X
     563/    CB40 : A9 DF                                       LDA #hi(JUMP_TABLE)
     563/    CB42 : 69 00                                       ADC #0
     563/    CB44 : 95 0B                                       STA emu_ptr+1,X
     563/    CB46 : A1 0A                                       LDA (emu_ptr,X)
     563/    CB48 : 95 0C                                       STA emu_ptr2,X
     563/    CB4A : F6 0A                                       INC emu_ptr,X
     563/    CB4C : 90 02                                       BCC .skip
     563/    CB4E : F6 0B                                               INC emu_ptr+1,X
     563/    CB50 :                                             .skip:
     563/    CB50 : A1 0A                                       LDA (emu_ptr,X)
     563/    CB52 : 95 0D                                       STA emu_ptr2+1,X
     563/    CB54 : 7C 0C 00                                    JMP (emu_ptr2,X)
     564/    CB57 :                     
     565/    CB57 :                     	;0x5E - LSR ABSX
     566/    CB57 :                     	LSR_ABSX:
     567/    CB57 : (MACRO)             		OP_MACRO 94, "LSR", "ABSX", "LSR_ABSX"
     567/    CB57 :                                             ;TODO
     568/    CB57 : (MACRO)             		NEXT_MACRO
     568/    CB57 :                                             ;Could also copy X to Y before NEXT then restore after jump
     568/    CB57 :                                             
     568/    CB57 :  (MACRO-2)                                  halt
     568/    CB57 : 00                                  BRK
     568/    CB58 : 00                                  BRK
     568/    CB59 :                                             
     568/    CB59 :                                             ;Jump table must be page aligned!!!
     568/    CB59 : A1 02                                       LDA (emu_PC,X)
     568/    CB5B : 0A                                          ASL
     568/    CB5C : 95 0A                                       STA emu_ptr,X
     568/    CB5E : A9 DF                                       LDA #hi(JUMP_TABLE)
     568/    CB60 : 69 00                                       ADC #0
     568/    CB62 : 95 0B                                       STA emu_ptr+1,X
     568/    CB64 : A1 0A                                       LDA (emu_ptr,X)
     568/    CB66 : 95 0C                                       STA emu_ptr2,X
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 49 - 1/5/2022 1:27:48


     568/    CB68 : F6 0A                                       INC emu_ptr,X
     568/    CB6A : 90 02                                       BCC .skip
     568/    CB6C : F6 0B                                               INC emu_ptr+1,X
     568/    CB6E :                                             .skip:
     568/    CB6E : A1 0A                                       LDA (emu_ptr,X)
     568/    CB70 : 95 0D                                       STA emu_ptr2+1,X
     568/    CB72 : 7C 0C 00                                    JMP (emu_ptr2,X)
     569/    CB75 :                     
     570/    CB75 :                     	;0x5F - NOP
     571/    CB75 :                     	NOP_0x5F:
     572/    CB75 : (MACRO)             		OP_MACRO 95, "NOP", "IMP", "NOP_0x5F"
     572/    CB75 :                                             ;TODO
     573/    CB75 : (MACRO)             		NEXT_MACRO
     573/    CB75 :                                             ;Could also copy X to Y before NEXT then restore after jump
     573/    CB75 :                                             
     573/    CB75 :  (MACRO-2)                                  halt
     573/    CB75 : 00                                  BRK
     573/    CB76 : 00                                  BRK
     573/    CB77 :                                             
     573/    CB77 :                                             ;Jump table must be page aligned!!!
     573/    CB77 : A1 02                                       LDA (emu_PC,X)
     573/    CB79 : 0A                                          ASL
     573/    CB7A : 95 0A                                       STA emu_ptr,X
     573/    CB7C : A9 DF                                       LDA #hi(JUMP_TABLE)
     573/    CB7E : 69 00                                       ADC #0
     573/    CB80 : 95 0B                                       STA emu_ptr+1,X
     573/    CB82 : A1 0A                                       LDA (emu_ptr,X)
     573/    CB84 : 95 0C                                       STA emu_ptr2,X
     573/    CB86 : F6 0A                                       INC emu_ptr,X
     573/    CB88 : 90 02                                       BCC .skip
     573/    CB8A : F6 0B                                               INC emu_ptr+1,X
     573/    CB8C :                                             .skip:
     573/    CB8C : A1 0A                                       LDA (emu_ptr,X)
     573/    CB8E : 95 0D                                       STA emu_ptr2+1,X
     573/    CB90 : 7C 0C 00                                    JMP (emu_ptr2,X)
     574/    CB93 :                     
     575/    CB93 :                     	;0x60 - RTS IMP
     576/    CB93 :                     	RTS_IMP:
     577/    CB93 : (MACRO)             		OP_MACRO 96, "RTS", "IMP", "RTS_IMP"
     577/    CB93 :                                             ;TODO
     578/    CB93 : (MACRO)             		NEXT_MACRO
     578/    CB93 :                                             ;Could also copy X to Y before NEXT then restore after jump
     578/    CB93 :                                             
     578/    CB93 :  (MACRO-2)                                  halt
     578/    CB93 : 00                                  BRK
     578/    CB94 : 00                                  BRK
     578/    CB95 :                                             
     578/    CB95 :                                             ;Jump table must be page aligned!!!
     578/    CB95 : A1 02                                       LDA (emu_PC,X)
     578/    CB97 : 0A                                          ASL
     578/    CB98 : 95 0A                                       STA emu_ptr,X
     578/    CB9A : A9 DF                                       LDA #hi(JUMP_TABLE)
     578/    CB9C : 69 00                                       ADC #0
     578/    CB9E : 95 0B                                       STA emu_ptr+1,X
     578/    CBA0 : A1 0A                                       LDA (emu_ptr,X)
     578/    CBA2 : 95 0C                                       STA emu_ptr2,X
     578/    CBA4 : F6 0A                                       INC emu_ptr,X
     578/    CBA6 : 90 02                                       BCC .skip
     578/    CBA8 : F6 0B                                               INC emu_ptr+1,X
     578/    CBAA :                                             .skip:
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 50 - 1/5/2022 1:27:48


     578/    CBAA : A1 0A                                       LDA (emu_ptr,X)
     578/    CBAC : 95 0D                                       STA emu_ptr2+1,X
     578/    CBAE : 7C 0C 00                                    JMP (emu_ptr2,X)
     579/    CBB1 :                     
     580/    CBB1 :                     	;0x61 - ADC IX
     581/    CBB1 :                     	ADC_IX:
     582/    CBB1 : (MACRO)             		OP_MACRO 97, "ADC", "IX", "ADC_IX"
     582/    CBB1 :                                             ;TODO
     583/    CBB1 : (MACRO)             		NEXT_MACRO
     583/    CBB1 :                                             ;Could also copy X to Y before NEXT then restore after jump
     583/    CBB1 :                                             
     583/    CBB1 :  (MACRO-2)                                  halt
     583/    CBB1 : 00                                  BRK
     583/    CBB2 : 00                                  BRK
     583/    CBB3 :                                             
     583/    CBB3 :                                             ;Jump table must be page aligned!!!
     583/    CBB3 : A1 02                                       LDA (emu_PC,X)
     583/    CBB5 : 0A                                          ASL
     583/    CBB6 : 95 0A                                       STA emu_ptr,X
     583/    CBB8 : A9 DF                                       LDA #hi(JUMP_TABLE)
     583/    CBBA : 69 00                                       ADC #0
     583/    CBBC : 95 0B                                       STA emu_ptr+1,X
     583/    CBBE : A1 0A                                       LDA (emu_ptr,X)
     583/    CBC0 : 95 0C                                       STA emu_ptr2,X
     583/    CBC2 : F6 0A                                       INC emu_ptr,X
     583/    CBC4 : 90 02                                       BCC .skip
     583/    CBC6 : F6 0B                                               INC emu_ptr+1,X
     583/    CBC8 :                                             .skip:
     583/    CBC8 : A1 0A                                       LDA (emu_ptr,X)
     583/    CBCA : 95 0D                                       STA emu_ptr2+1,X
     583/    CBCC : 7C 0C 00                                    JMP (emu_ptr2,X)
     584/    CBCF :                     
     585/    CBCF :                     	;0x62 - NOP
     586/    CBCF :                     	NOP_0x62:
     587/    CBCF : (MACRO)             		OP_MACRO 98, "NOP", "IMP", "NOP_0x62"
     587/    CBCF :                                             ;TODO
     588/    CBCF : (MACRO)             		NEXT_MACRO
     588/    CBCF :                                             ;Could also copy X to Y before NEXT then restore after jump
     588/    CBCF :                                             
     588/    CBCF :  (MACRO-2)                                  halt
     588/    CBCF : 00                                  BRK
     588/    CBD0 : 00                                  BRK
     588/    CBD1 :                                             
     588/    CBD1 :                                             ;Jump table must be page aligned!!!
     588/    CBD1 : A1 02                                       LDA (emu_PC,X)
     588/    CBD3 : 0A                                          ASL
     588/    CBD4 : 95 0A                                       STA emu_ptr,X
     588/    CBD6 : A9 DF                                       LDA #hi(JUMP_TABLE)
     588/    CBD8 : 69 00                                       ADC #0
     588/    CBDA : 95 0B                                       STA emu_ptr+1,X
     588/    CBDC : A1 0A                                       LDA (emu_ptr,X)
     588/    CBDE : 95 0C                                       STA emu_ptr2,X
     588/    CBE0 : F6 0A                                       INC emu_ptr,X
     588/    CBE2 : 90 02                                       BCC .skip
     588/    CBE4 : F6 0B                                               INC emu_ptr+1,X
     588/    CBE6 :                                             .skip:
     588/    CBE6 : A1 0A                                       LDA (emu_ptr,X)
     588/    CBE8 : 95 0D                                       STA emu_ptr2+1,X
     588/    CBEA : 7C 0C 00                                    JMP (emu_ptr2,X)
     589/    CBED :                     
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 51 - 1/5/2022 1:27:48


     590/    CBED :                     	;0x63 - NOP
     591/    CBED :                     	NOP_0x63:
     592/    CBED : (MACRO)             		OP_MACRO 99, "NOP", "IMP", "NOP_0x63"
     592/    CBED :                                             ;TODO
     593/    CBED : (MACRO)             		NEXT_MACRO
     593/    CBED :                                             ;Could also copy X to Y before NEXT then restore after jump
     593/    CBED :                                             
     593/    CBED :  (MACRO-2)                                  halt
     593/    CBED : 00                                  BRK
     593/    CBEE : 00                                  BRK
     593/    CBEF :                                             
     593/    CBEF :                                             ;Jump table must be page aligned!!!
     593/    CBEF : A1 02                                       LDA (emu_PC,X)
     593/    CBF1 : 0A                                          ASL
     593/    CBF2 : 95 0A                                       STA emu_ptr,X
     593/    CBF4 : A9 DF                                       LDA #hi(JUMP_TABLE)
     593/    CBF6 : 69 00                                       ADC #0
     593/    CBF8 : 95 0B                                       STA emu_ptr+1,X
     593/    CBFA : A1 0A                                       LDA (emu_ptr,X)
     593/    CBFC : 95 0C                                       STA emu_ptr2,X
     593/    CBFE : F6 0A                                       INC emu_ptr,X
     593/    CC00 : 90 02                                       BCC .skip
     593/    CC02 : F6 0B                                               INC emu_ptr+1,X
     593/    CC04 :                                             .skip:
     593/    CC04 : A1 0A                                       LDA (emu_ptr,X)
     593/    CC06 : 95 0D                                       STA emu_ptr2+1,X
     593/    CC08 : 7C 0C 00                                    JMP (emu_ptr2,X)
     594/    CC0B :                     
     595/    CC0B :                     	;0x64 - NOP
     596/    CC0B :                     	NOP_0x64:
     597/    CC0B : (MACRO)             		OP_MACRO 100, "NOP", "IMP", "NOP_0x64"
     597/    CC0B :                                             ;TODO
     598/    CC0B : (MACRO)             		NEXT_MACRO
     598/    CC0B :                                             ;Could also copy X to Y before NEXT then restore after jump
     598/    CC0B :                                             
     598/    CC0B :  (MACRO-2)                                  halt
     598/    CC0B : 00                                  BRK
     598/    CC0C : 00                                  BRK
     598/    CC0D :                                             
     598/    CC0D :                                             ;Jump table must be page aligned!!!
     598/    CC0D : A1 02                                       LDA (emu_PC,X)
     598/    CC0F : 0A                                          ASL
     598/    CC10 : 95 0A                                       STA emu_ptr,X
     598/    CC12 : A9 DF                                       LDA #hi(JUMP_TABLE)
     598/    CC14 : 69 00                                       ADC #0
     598/    CC16 : 95 0B                                       STA emu_ptr+1,X
     598/    CC18 : A1 0A                                       LDA (emu_ptr,X)
     598/    CC1A : 95 0C                                       STA emu_ptr2,X
     598/    CC1C : F6 0A                                       INC emu_ptr,X
     598/    CC1E : 90 02                                       BCC .skip
     598/    CC20 : F6 0B                                               INC emu_ptr+1,X
     598/    CC22 :                                             .skip:
     598/    CC22 : A1 0A                                       LDA (emu_ptr,X)
     598/    CC24 : 95 0D                                       STA emu_ptr2+1,X
     598/    CC26 : 7C 0C 00                                    JMP (emu_ptr2,X)
     599/    CC29 :                     
     600/    CC29 :                     	;0x65 - ADC ZP
     601/    CC29 :                     	ADC_ZP:
     602/    CC29 : (MACRO)             		OP_MACRO 101, "ADC", "ZP", "ADC_ZP"
     602/    CC29 :                                             ;TODO
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 52 - 1/5/2022 1:27:48


     603/    CC29 : (MACRO)             		NEXT_MACRO
     603/    CC29 :                                             ;Could also copy X to Y before NEXT then restore after jump
     603/    CC29 :                                             
     603/    CC29 :  (MACRO-2)                                  halt
     603/    CC29 : 00                                  BRK
     603/    CC2A : 00                                  BRK
     603/    CC2B :                                             
     603/    CC2B :                                             ;Jump table must be page aligned!!!
     603/    CC2B : A1 02                                       LDA (emu_PC,X)
     603/    CC2D : 0A                                          ASL
     603/    CC2E : 95 0A                                       STA emu_ptr,X
     603/    CC30 : A9 DF                                       LDA #hi(JUMP_TABLE)
     603/    CC32 : 69 00                                       ADC #0
     603/    CC34 : 95 0B                                       STA emu_ptr+1,X
     603/    CC36 : A1 0A                                       LDA (emu_ptr,X)
     603/    CC38 : 95 0C                                       STA emu_ptr2,X
     603/    CC3A : F6 0A                                       INC emu_ptr,X
     603/    CC3C : 90 02                                       BCC .skip
     603/    CC3E : F6 0B                                               INC emu_ptr+1,X
     603/    CC40 :                                             .skip:
     603/    CC40 : A1 0A                                       LDA (emu_ptr,X)
     603/    CC42 : 95 0D                                       STA emu_ptr2+1,X
     603/    CC44 : 7C 0C 00                                    JMP (emu_ptr2,X)
     604/    CC47 :                     
     605/    CC47 :                     	;0x66 - ROR ZP
     606/    CC47 :                     	ROR_ZP:
     607/    CC47 : (MACRO)             		OP_MACRO 102, "ROR", "ZP", "ROR_ZP"
     607/    CC47 :                                             ;TODO
     608/    CC47 : (MACRO)             		NEXT_MACRO
     608/    CC47 :                                             ;Could also copy X to Y before NEXT then restore after jump
     608/    CC47 :                                             
     608/    CC47 :  (MACRO-2)                                  halt
     608/    CC47 : 00                                  BRK
     608/    CC48 : 00                                  BRK
     608/    CC49 :                                             
     608/    CC49 :                                             ;Jump table must be page aligned!!!
     608/    CC49 : A1 02                                       LDA (emu_PC,X)
     608/    CC4B : 0A                                          ASL
     608/    CC4C : 95 0A                                       STA emu_ptr,X
     608/    CC4E : A9 DF                                       LDA #hi(JUMP_TABLE)
     608/    CC50 : 69 00                                       ADC #0
     608/    CC52 : 95 0B                                       STA emu_ptr+1,X
     608/    CC54 : A1 0A                                       LDA (emu_ptr,X)
     608/    CC56 : 95 0C                                       STA emu_ptr2,X
     608/    CC58 : F6 0A                                       INC emu_ptr,X
     608/    CC5A : 90 02                                       BCC .skip
     608/    CC5C : F6 0B                                               INC emu_ptr+1,X
     608/    CC5E :                                             .skip:
     608/    CC5E : A1 0A                                       LDA (emu_ptr,X)
     608/    CC60 : 95 0D                                       STA emu_ptr2+1,X
     608/    CC62 : 7C 0C 00                                    JMP (emu_ptr2,X)
     609/    CC65 :                     
     610/    CC65 :                     	;0x67 - NOP
     611/    CC65 :                     	NOP_0x67:
     612/    CC65 : (MACRO)             		OP_MACRO 103, "NOP", "IMP", "NOP_0x67"
     612/    CC65 :                                             ;TODO
     613/    CC65 : (MACRO)             		NEXT_MACRO
     613/    CC65 :                                             ;Could also copy X to Y before NEXT then restore after jump
     613/    CC65 :                                             
     613/    CC65 :  (MACRO-2)                                  halt
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 53 - 1/5/2022 1:27:48


     613/    CC65 : 00                                  BRK
     613/    CC66 : 00                                  BRK
     613/    CC67 :                                             
     613/    CC67 :                                             ;Jump table must be page aligned!!!
     613/    CC67 : A1 02                                       LDA (emu_PC,X)
     613/    CC69 : 0A                                          ASL
     613/    CC6A : 95 0A                                       STA emu_ptr,X
     613/    CC6C : A9 DF                                       LDA #hi(JUMP_TABLE)
     613/    CC6E : 69 00                                       ADC #0
     613/    CC70 : 95 0B                                       STA emu_ptr+1,X
     613/    CC72 : A1 0A                                       LDA (emu_ptr,X)
     613/    CC74 : 95 0C                                       STA emu_ptr2,X
     613/    CC76 : F6 0A                                       INC emu_ptr,X
     613/    CC78 : 90 02                                       BCC .skip
     613/    CC7A : F6 0B                                               INC emu_ptr+1,X
     613/    CC7C :                                             .skip:
     613/    CC7C : A1 0A                                       LDA (emu_ptr,X)
     613/    CC7E : 95 0D                                       STA emu_ptr2+1,X
     613/    CC80 : 7C 0C 00                                    JMP (emu_ptr2,X)
     614/    CC83 :                     
     615/    CC83 :                     	;0x68 - PLA IMP
     616/    CC83 :                     	PLA_IMP:
     617/    CC83 : (MACRO)             		OP_MACRO 104, "PLA", "IMP", "PLA_IMP"
     617/    CC83 :                                             ;TODO
     618/    CC83 : (MACRO)             		NEXT_MACRO
     618/    CC83 :                                             ;Could also copy X to Y before NEXT then restore after jump
     618/    CC83 :                                             
     618/    CC83 :  (MACRO-2)                                  halt
     618/    CC83 : 00                                  BRK
     618/    CC84 : 00                                  BRK
     618/    CC85 :                                             
     618/    CC85 :                                             ;Jump table must be page aligned!!!
     618/    CC85 : A1 02                                       LDA (emu_PC,X)
     618/    CC87 : 0A                                          ASL
     618/    CC88 : 95 0A                                       STA emu_ptr,X
     618/    CC8A : A9 DF                                       LDA #hi(JUMP_TABLE)
     618/    CC8C : 69 00                                       ADC #0
     618/    CC8E : 95 0B                                       STA emu_ptr+1,X
     618/    CC90 : A1 0A                                       LDA (emu_ptr,X)
     618/    CC92 : 95 0C                                       STA emu_ptr2,X
     618/    CC94 : F6 0A                                       INC emu_ptr,X
     618/    CC96 : 90 02                                       BCC .skip
     618/    CC98 : F6 0B                                               INC emu_ptr+1,X
     618/    CC9A :                                             .skip:
     618/    CC9A : A1 0A                                       LDA (emu_ptr,X)
     618/    CC9C : 95 0D                                       STA emu_ptr2+1,X
     618/    CC9E : 7C 0C 00                                    JMP (emu_ptr2,X)
     619/    CCA1 :                     
     620/    CCA1 :                     	;0x69 - ADC IMMED
     621/    CCA1 :                     	ADC_IMMED:
     622/    CCA1 : (MACRO)             		OP_MACRO 105, "ADC", "IMMED", "ADC_IMMED"
     622/    CCA1 :                                             ;TODO
     623/    CCA1 : (MACRO)             		NEXT_MACRO
     623/    CCA1 :                                             ;Could also copy X to Y before NEXT then restore after jump
     623/    CCA1 :                                             
     623/    CCA1 :  (MACRO-2)                                  halt
     623/    CCA1 : 00                                  BRK
     623/    CCA2 : 00                                  BRK
     623/    CCA3 :                                             
     623/    CCA3 :                                             ;Jump table must be page aligned!!!
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 54 - 1/5/2022 1:27:48


     623/    CCA3 : A1 02                                       LDA (emu_PC,X)
     623/    CCA5 : 0A                                          ASL
     623/    CCA6 : 95 0A                                       STA emu_ptr,X
     623/    CCA8 : A9 DF                                       LDA #hi(JUMP_TABLE)
     623/    CCAA : 69 00                                       ADC #0
     623/    CCAC : 95 0B                                       STA emu_ptr+1,X
     623/    CCAE : A1 0A                                       LDA (emu_ptr,X)
     623/    CCB0 : 95 0C                                       STA emu_ptr2,X
     623/    CCB2 : F6 0A                                       INC emu_ptr,X
     623/    CCB4 : 90 02                                       BCC .skip
     623/    CCB6 : F6 0B                                               INC emu_ptr+1,X
     623/    CCB8 :                                             .skip:
     623/    CCB8 : A1 0A                                       LDA (emu_ptr,X)
     623/    CCBA : 95 0D                                       STA emu_ptr2+1,X
     623/    CCBC : 7C 0C 00                                    JMP (emu_ptr2,X)
     624/    CCBF :                     
     625/    CCBF :                     	;0x6A - ROR A
     626/    CCBF :                     	ROR_A:
     627/    CCBF : (MACRO)             		OP_MACRO 106, "ROR", "A", "ROR_A"
     627/    CCBF :                                             ;TODO
     628/    CCBF : (MACRO)             		NEXT_MACRO
     628/    CCBF :                                             ;Could also copy X to Y before NEXT then restore after jump
     628/    CCBF :                                             
     628/    CCBF :  (MACRO-2)                                  halt
     628/    CCBF : 00                                  BRK
     628/    CCC0 : 00                                  BRK
     628/    CCC1 :                                             
     628/    CCC1 :                                             ;Jump table must be page aligned!!!
     628/    CCC1 : A1 02                                       LDA (emu_PC,X)
     628/    CCC3 : 0A                                          ASL
     628/    CCC4 : 95 0A                                       STA emu_ptr,X
     628/    CCC6 : A9 DF                                       LDA #hi(JUMP_TABLE)
     628/    CCC8 : 69 00                                       ADC #0
     628/    CCCA : 95 0B                                       STA emu_ptr+1,X
     628/    CCCC : A1 0A                                       LDA (emu_ptr,X)
     628/    CCCE : 95 0C                                       STA emu_ptr2,X
     628/    CCD0 : F6 0A                                       INC emu_ptr,X
     628/    CCD2 : 90 02                                       BCC .skip
     628/    CCD4 : F6 0B                                               INC emu_ptr+1,X
     628/    CCD6 :                                             .skip:
     628/    CCD6 : A1 0A                                       LDA (emu_ptr,X)
     628/    CCD8 : 95 0D                                       STA emu_ptr2+1,X
     628/    CCDA : 7C 0C 00                                    JMP (emu_ptr2,X)
     629/    CCDD :                     
     630/    CCDD :                     	;0x6B - NOP
     631/    CCDD :                     	NOP_0x6B:
     632/    CCDD : (MACRO)             		OP_MACRO 107, "NOP", "IMP", "NOP_0x6B"
     632/    CCDD :                                             ;TODO
     633/    CCDD : (MACRO)             		NEXT_MACRO
     633/    CCDD :                                             ;Could also copy X to Y before NEXT then restore after jump
     633/    CCDD :                                             
     633/    CCDD :  (MACRO-2)                                  halt
     633/    CCDD : 00                                  BRK
     633/    CCDE : 00                                  BRK
     633/    CCDF :                                             
     633/    CCDF :                                             ;Jump table must be page aligned!!!
     633/    CCDF : A1 02                                       LDA (emu_PC,X)
     633/    CCE1 : 0A                                          ASL
     633/    CCE2 : 95 0A                                       STA emu_ptr,X
     633/    CCE4 : A9 DF                                       LDA #hi(JUMP_TABLE)
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 55 - 1/5/2022 1:27:48


     633/    CCE6 : 69 00                                       ADC #0
     633/    CCE8 : 95 0B                                       STA emu_ptr+1,X
     633/    CCEA : A1 0A                                       LDA (emu_ptr,X)
     633/    CCEC : 95 0C                                       STA emu_ptr2,X
     633/    CCEE : F6 0A                                       INC emu_ptr,X
     633/    CCF0 : 90 02                                       BCC .skip
     633/    CCF2 : F6 0B                                               INC emu_ptr+1,X
     633/    CCF4 :                                             .skip:
     633/    CCF4 : A1 0A                                       LDA (emu_ptr,X)
     633/    CCF6 : 95 0D                                       STA emu_ptr2+1,X
     633/    CCF8 : 7C 0C 00                                    JMP (emu_ptr2,X)
     634/    CCFB :                     
     635/    CCFB :                     	;0x6C - JMP I
     636/    CCFB :                     	JMP_I:
     637/    CCFB : (MACRO)             		OP_MACRO 108, "JMP", "I", "JMP_I"
     637/    CCFB :                                             ;TODO
     638/    CCFB : (MACRO)             		NEXT_MACRO
     638/    CCFB :                                             ;Could also copy X to Y before NEXT then restore after jump
     638/    CCFB :                                             
     638/    CCFB :  (MACRO-2)                                  halt
     638/    CCFB : 00                                  BRK
     638/    CCFC : 00                                  BRK
     638/    CCFD :                                             
     638/    CCFD :                                             ;Jump table must be page aligned!!!
     638/    CCFD : A1 02                                       LDA (emu_PC,X)
     638/    CCFF : 0A                                          ASL
     638/    CD00 : 95 0A                                       STA emu_ptr,X
     638/    CD02 : A9 DF                                       LDA #hi(JUMP_TABLE)
     638/    CD04 : 69 00                                       ADC #0
     638/    CD06 : 95 0B                                       STA emu_ptr+1,X
     638/    CD08 : A1 0A                                       LDA (emu_ptr,X)
     638/    CD0A : 95 0C                                       STA emu_ptr2,X
     638/    CD0C : F6 0A                                       INC emu_ptr,X
     638/    CD0E : 90 02                                       BCC .skip
     638/    CD10 : F6 0B                                               INC emu_ptr+1,X
     638/    CD12 :                                             .skip:
     638/    CD12 : A1 0A                                       LDA (emu_ptr,X)
     638/    CD14 : 95 0D                                       STA emu_ptr2+1,X
     638/    CD16 : 7C 0C 00                                    JMP (emu_ptr2,X)
     639/    CD19 :                     
     640/    CD19 :                     	;0x6D - ADC ABS
     641/    CD19 :                     	ADC_ABS:
     642/    CD19 : (MACRO)             		OP_MACRO 109, "ADC", "ABS", "ADC_ABS"
     642/    CD19 :                                             ;TODO
     643/    CD19 : (MACRO)             		NEXT_MACRO
     643/    CD19 :                                             ;Could also copy X to Y before NEXT then restore after jump
     643/    CD19 :                                             
     643/    CD19 :  (MACRO-2)                                  halt
     643/    CD19 : 00                                  BRK
     643/    CD1A : 00                                  BRK
     643/    CD1B :                                             
     643/    CD1B :                                             ;Jump table must be page aligned!!!
     643/    CD1B : A1 02                                       LDA (emu_PC,X)
     643/    CD1D : 0A                                          ASL
     643/    CD1E : 95 0A                                       STA emu_ptr,X
     643/    CD20 : A9 DF                                       LDA #hi(JUMP_TABLE)
     643/    CD22 : 69 00                                       ADC #0
     643/    CD24 : 95 0B                                       STA emu_ptr+1,X
     643/    CD26 : A1 0A                                       LDA (emu_ptr,X)
     643/    CD28 : 95 0C                                       STA emu_ptr2,X
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 56 - 1/5/2022 1:27:48


     643/    CD2A : F6 0A                                       INC emu_ptr,X
     643/    CD2C : 90 02                                       BCC .skip
     643/    CD2E : F6 0B                                               INC emu_ptr+1,X
     643/    CD30 :                                             .skip:
     643/    CD30 : A1 0A                                       LDA (emu_ptr,X)
     643/    CD32 : 95 0D                                       STA emu_ptr2+1,X
     643/    CD34 : 7C 0C 00                                    JMP (emu_ptr2,X)
     644/    CD37 :                     
     645/    CD37 :                     	;0x6E - ROR ABS
     646/    CD37 :                     	ROR_ABS:
     647/    CD37 : (MACRO)             		OP_MACRO 110, "ROR", "ABS", "ROR_ABS"
     647/    CD37 :                                             ;TODO
     648/    CD37 : (MACRO)             		NEXT_MACRO
     648/    CD37 :                                             ;Could also copy X to Y before NEXT then restore after jump
     648/    CD37 :                                             
     648/    CD37 :  (MACRO-2)                                  halt
     648/    CD37 : 00                                  BRK
     648/    CD38 : 00                                  BRK
     648/    CD39 :                                             
     648/    CD39 :                                             ;Jump table must be page aligned!!!
     648/    CD39 : A1 02                                       LDA (emu_PC,X)
     648/    CD3B : 0A                                          ASL
     648/    CD3C : 95 0A                                       STA emu_ptr,X
     648/    CD3E : A9 DF                                       LDA #hi(JUMP_TABLE)
     648/    CD40 : 69 00                                       ADC #0
     648/    CD42 : 95 0B                                       STA emu_ptr+1,X
     648/    CD44 : A1 0A                                       LDA (emu_ptr,X)
     648/    CD46 : 95 0C                                       STA emu_ptr2,X
     648/    CD48 : F6 0A                                       INC emu_ptr,X
     648/    CD4A : 90 02                                       BCC .skip
     648/    CD4C : F6 0B                                               INC emu_ptr+1,X
     648/    CD4E :                                             .skip:
     648/    CD4E : A1 0A                                       LDA (emu_ptr,X)
     648/    CD50 : 95 0D                                       STA emu_ptr2+1,X
     648/    CD52 : 7C 0C 00                                    JMP (emu_ptr2,X)
     649/    CD55 :                     
     650/    CD55 :                     	;0x6F - NOP
     651/    CD55 :                     	NOP_0x6F:
     652/    CD55 : (MACRO)             		OP_MACRO 111, "NOP", "IMP", "NOP_0x6F"
     652/    CD55 :                                             ;TODO
     653/    CD55 : (MACRO)             		NEXT_MACRO
     653/    CD55 :                                             ;Could also copy X to Y before NEXT then restore after jump
     653/    CD55 :                                             
     653/    CD55 :  (MACRO-2)                                  halt
     653/    CD55 : 00                                  BRK
     653/    CD56 : 00                                  BRK
     653/    CD57 :                                             
     653/    CD57 :                                             ;Jump table must be page aligned!!!
     653/    CD57 : A1 02                                       LDA (emu_PC,X)
     653/    CD59 : 0A                                          ASL
     653/    CD5A : 95 0A                                       STA emu_ptr,X
     653/    CD5C : A9 DF                                       LDA #hi(JUMP_TABLE)
     653/    CD5E : 69 00                                       ADC #0
     653/    CD60 : 95 0B                                       STA emu_ptr+1,X
     653/    CD62 : A1 0A                                       LDA (emu_ptr,X)
     653/    CD64 : 95 0C                                       STA emu_ptr2,X
     653/    CD66 : F6 0A                                       INC emu_ptr,X
     653/    CD68 : 90 02                                       BCC .skip
     653/    CD6A : F6 0B                                               INC emu_ptr+1,X
     653/    CD6C :                                             .skip:
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 57 - 1/5/2022 1:27:48


     653/    CD6C : A1 0A                                       LDA (emu_ptr,X)
     653/    CD6E : 95 0D                                       STA emu_ptr2+1,X
     653/    CD70 : 7C 0C 00                                    JMP (emu_ptr2,X)
     654/    CD73 :                     
     655/    CD73 :                     	;0x70 - BVS REL
     656/    CD73 :                     	BVS_REL:
     657/    CD73 : (MACRO)             		OP_MACRO 112, "BVS", "REL", "BVS_REL"
     657/    CD73 :                                             ;TODO
     658/    CD73 : (MACRO)             		NEXT_MACRO
     658/    CD73 :                                             ;Could also copy X to Y before NEXT then restore after jump
     658/    CD73 :                                             
     658/    CD73 :  (MACRO-2)                                  halt
     658/    CD73 : 00                                  BRK
     658/    CD74 : 00                                  BRK
     658/    CD75 :                                             
     658/    CD75 :                                             ;Jump table must be page aligned!!!
     658/    CD75 : A1 02                                       LDA (emu_PC,X)
     658/    CD77 : 0A                                          ASL
     658/    CD78 : 95 0A                                       STA emu_ptr,X
     658/    CD7A : A9 DF                                       LDA #hi(JUMP_TABLE)
     658/    CD7C : 69 00                                       ADC #0
     658/    CD7E : 95 0B                                       STA emu_ptr+1,X
     658/    CD80 : A1 0A                                       LDA (emu_ptr,X)
     658/    CD82 : 95 0C                                       STA emu_ptr2,X
     658/    CD84 : F6 0A                                       INC emu_ptr,X
     658/    CD86 : 90 02                                       BCC .skip
     658/    CD88 : F6 0B                                               INC emu_ptr+1,X
     658/    CD8A :                                             .skip:
     658/    CD8A : A1 0A                                       LDA (emu_ptr,X)
     658/    CD8C : 95 0D                                       STA emu_ptr2+1,X
     658/    CD8E : 7C 0C 00                                    JMP (emu_ptr2,X)
     659/    CD91 :                     
     660/    CD91 :                     	;0x71 - ADC IY
     661/    CD91 :                     	ADC_IY:
     662/    CD91 : (MACRO)             		OP_MACRO 113, "ADC", "IY", "ADC_IY"
     662/    CD91 :                                             ;TODO
     663/    CD91 : (MACRO)             		NEXT_MACRO
     663/    CD91 :                                             ;Could also copy X to Y before NEXT then restore after jump
     663/    CD91 :                                             
     663/    CD91 :  (MACRO-2)                                  halt
     663/    CD91 : 00                                  BRK
     663/    CD92 : 00                                  BRK
     663/    CD93 :                                             
     663/    CD93 :                                             ;Jump table must be page aligned!!!
     663/    CD93 : A1 02                                       LDA (emu_PC,X)
     663/    CD95 : 0A                                          ASL
     663/    CD96 : 95 0A                                       STA emu_ptr,X
     663/    CD98 : A9 DF                                       LDA #hi(JUMP_TABLE)
     663/    CD9A : 69 00                                       ADC #0
     663/    CD9C : 95 0B                                       STA emu_ptr+1,X
     663/    CD9E : A1 0A                                       LDA (emu_ptr,X)
     663/    CDA0 : 95 0C                                       STA emu_ptr2,X
     663/    CDA2 : F6 0A                                       INC emu_ptr,X
     663/    CDA4 : 90 02                                       BCC .skip
     663/    CDA6 : F6 0B                                               INC emu_ptr+1,X
     663/    CDA8 :                                             .skip:
     663/    CDA8 : A1 0A                                       LDA (emu_ptr,X)
     663/    CDAA : 95 0D                                       STA emu_ptr2+1,X
     663/    CDAC : 7C 0C 00                                    JMP (emu_ptr2,X)
     664/    CDAF :                     
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 58 - 1/5/2022 1:27:48


     665/    CDAF :                     	;0x72 - NOP
     666/    CDAF :                     	NOP_0x72:
     667/    CDAF : (MACRO)             		OP_MACRO 114, "NOP", "IMP", "NOP_0x72"
     667/    CDAF :                                             ;TODO
     668/    CDAF : (MACRO)             		NEXT_MACRO
     668/    CDAF :                                             ;Could also copy X to Y before NEXT then restore after jump
     668/    CDAF :                                             
     668/    CDAF :  (MACRO-2)                                  halt
     668/    CDAF : 00                                  BRK
     668/    CDB0 : 00                                  BRK
     668/    CDB1 :                                             
     668/    CDB1 :                                             ;Jump table must be page aligned!!!
     668/    CDB1 : A1 02                                       LDA (emu_PC,X)
     668/    CDB3 : 0A                                          ASL
     668/    CDB4 : 95 0A                                       STA emu_ptr,X
     668/    CDB6 : A9 DF                                       LDA #hi(JUMP_TABLE)
     668/    CDB8 : 69 00                                       ADC #0
     668/    CDBA : 95 0B                                       STA emu_ptr+1,X
     668/    CDBC : A1 0A                                       LDA (emu_ptr,X)
     668/    CDBE : 95 0C                                       STA emu_ptr2,X
     668/    CDC0 : F6 0A                                       INC emu_ptr,X
     668/    CDC2 : 90 02                                       BCC .skip
     668/    CDC4 : F6 0B                                               INC emu_ptr+1,X
     668/    CDC6 :                                             .skip:
     668/    CDC6 : A1 0A                                       LDA (emu_ptr,X)
     668/    CDC8 : 95 0D                                       STA emu_ptr2+1,X
     668/    CDCA : 7C 0C 00                                    JMP (emu_ptr2,X)
     669/    CDCD :                     
     670/    CDCD :                     	;0x73 - NOP
     671/    CDCD :                     	NOP_0x73:
     672/    CDCD : (MACRO)             		OP_MACRO 115, "NOP", "IMP", "NOP_0x73"
     672/    CDCD :                                             ;TODO
     673/    CDCD : (MACRO)             		NEXT_MACRO
     673/    CDCD :                                             ;Could also copy X to Y before NEXT then restore after jump
     673/    CDCD :                                             
     673/    CDCD :  (MACRO-2)                                  halt
     673/    CDCD : 00                                  BRK
     673/    CDCE : 00                                  BRK
     673/    CDCF :                                             
     673/    CDCF :                                             ;Jump table must be page aligned!!!
     673/    CDCF : A1 02                                       LDA (emu_PC,X)
     673/    CDD1 : 0A                                          ASL
     673/    CDD2 : 95 0A                                       STA emu_ptr,X
     673/    CDD4 : A9 DF                                       LDA #hi(JUMP_TABLE)
     673/    CDD6 : 69 00                                       ADC #0
     673/    CDD8 : 95 0B                                       STA emu_ptr+1,X
     673/    CDDA : A1 0A                                       LDA (emu_ptr,X)
     673/    CDDC : 95 0C                                       STA emu_ptr2,X
     673/    CDDE : F6 0A                                       INC emu_ptr,X
     673/    CDE0 : 90 02                                       BCC .skip
     673/    CDE2 : F6 0B                                               INC emu_ptr+1,X
     673/    CDE4 :                                             .skip:
     673/    CDE4 : A1 0A                                       LDA (emu_ptr,X)
     673/    CDE6 : 95 0D                                       STA emu_ptr2+1,X
     673/    CDE8 : 7C 0C 00                                    JMP (emu_ptr2,X)
     674/    CDEB :                     
     675/    CDEB :                     	;0x74 - NOP
     676/    CDEB :                     	NOP_0x74:
     677/    CDEB : (MACRO)             		OP_MACRO 116, "NOP", "IMP", "NOP_0x74"
     677/    CDEB :                                             ;TODO
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 59 - 1/5/2022 1:27:48


     678/    CDEB : (MACRO)             		NEXT_MACRO
     678/    CDEB :                                             ;Could also copy X to Y before NEXT then restore after jump
     678/    CDEB :                                             
     678/    CDEB :  (MACRO-2)                                  halt
     678/    CDEB : 00                                  BRK
     678/    CDEC : 00                                  BRK
     678/    CDED :                                             
     678/    CDED :                                             ;Jump table must be page aligned!!!
     678/    CDED : A1 02                                       LDA (emu_PC,X)
     678/    CDEF : 0A                                          ASL
     678/    CDF0 : 95 0A                                       STA emu_ptr,X
     678/    CDF2 : A9 DF                                       LDA #hi(JUMP_TABLE)
     678/    CDF4 : 69 00                                       ADC #0
     678/    CDF6 : 95 0B                                       STA emu_ptr+1,X
     678/    CDF8 : A1 0A                                       LDA (emu_ptr,X)
     678/    CDFA : 95 0C                                       STA emu_ptr2,X
     678/    CDFC : F6 0A                                       INC emu_ptr,X
     678/    CDFE : 90 02                                       BCC .skip
     678/    CE00 : F6 0B                                               INC emu_ptr+1,X
     678/    CE02 :                                             .skip:
     678/    CE02 : A1 0A                                       LDA (emu_ptr,X)
     678/    CE04 : 95 0D                                       STA emu_ptr2+1,X
     678/    CE06 : 7C 0C 00                                    JMP (emu_ptr2,X)
     679/    CE09 :                     
     680/    CE09 :                     	;0x75 - ADC ZPX
     681/    CE09 :                     	ADC_ZPX:
     682/    CE09 : (MACRO)             		OP_MACRO 117, "ADC", "ZPX", "ADC_ZPX"
     682/    CE09 :                                             ;TODO
     683/    CE09 : (MACRO)             		NEXT_MACRO
     683/    CE09 :                                             ;Could also copy X to Y before NEXT then restore after jump
     683/    CE09 :                                             
     683/    CE09 :  (MACRO-2)                                  halt
     683/    CE09 : 00                                  BRK
     683/    CE0A : 00                                  BRK
     683/    CE0B :                                             
     683/    CE0B :                                             ;Jump table must be page aligned!!!
     683/    CE0B : A1 02                                       LDA (emu_PC,X)
     683/    CE0D : 0A                                          ASL
     683/    CE0E : 95 0A                                       STA emu_ptr,X
     683/    CE10 : A9 DF                                       LDA #hi(JUMP_TABLE)
     683/    CE12 : 69 00                                       ADC #0
     683/    CE14 : 95 0B                                       STA emu_ptr+1,X
     683/    CE16 : A1 0A                                       LDA (emu_ptr,X)
     683/    CE18 : 95 0C                                       STA emu_ptr2,X
     683/    CE1A : F6 0A                                       INC emu_ptr,X
     683/    CE1C : 90 02                                       BCC .skip
     683/    CE1E : F6 0B                                               INC emu_ptr+1,X
     683/    CE20 :                                             .skip:
     683/    CE20 : A1 0A                                       LDA (emu_ptr,X)
     683/    CE22 : 95 0D                                       STA emu_ptr2+1,X
     683/    CE24 : 7C 0C 00                                    JMP (emu_ptr2,X)
     684/    CE27 :                     
     685/    CE27 :                     	;0x76 - ROR ZPX
     686/    CE27 :                     	ROR_ZPX:
     687/    CE27 : (MACRO)             		OP_MACRO 118, "ROR", "ZPX", "ROR_ZPX"
     687/    CE27 :                                             ;TODO
     688/    CE27 : (MACRO)             		NEXT_MACRO
     688/    CE27 :                                             ;Could also copy X to Y before NEXT then restore after jump
     688/    CE27 :                                             
     688/    CE27 :  (MACRO-2)                                  halt
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 60 - 1/5/2022 1:27:48


     688/    CE27 : 00                                  BRK
     688/    CE28 : 00                                  BRK
     688/    CE29 :                                             
     688/    CE29 :                                             ;Jump table must be page aligned!!!
     688/    CE29 : A1 02                                       LDA (emu_PC,X)
     688/    CE2B : 0A                                          ASL
     688/    CE2C : 95 0A                                       STA emu_ptr,X
     688/    CE2E : A9 DF                                       LDA #hi(JUMP_TABLE)
     688/    CE30 : 69 00                                       ADC #0
     688/    CE32 : 95 0B                                       STA emu_ptr+1,X
     688/    CE34 : A1 0A                                       LDA (emu_ptr,X)
     688/    CE36 : 95 0C                                       STA emu_ptr2,X
     688/    CE38 : F6 0A                                       INC emu_ptr,X
     688/    CE3A : 90 02                                       BCC .skip
     688/    CE3C : F6 0B                                               INC emu_ptr+1,X
     688/    CE3E :                                             .skip:
     688/    CE3E : A1 0A                                       LDA (emu_ptr,X)
     688/    CE40 : 95 0D                                       STA emu_ptr2+1,X
     688/    CE42 : 7C 0C 00                                    JMP (emu_ptr2,X)
     689/    CE45 :                     
     690/    CE45 :                     	;0x77 - NOP
     691/    CE45 :                     	NOP_0x77:
     692/    CE45 : (MACRO)             		OP_MACRO 119, "NOP", "IMP", "NOP_0x77"
     692/    CE45 :                                             ;TODO
     693/    CE45 : (MACRO)             		NEXT_MACRO
     693/    CE45 :                                             ;Could also copy X to Y before NEXT then restore after jump
     693/    CE45 :                                             
     693/    CE45 :  (MACRO-2)                                  halt
     693/    CE45 : 00                                  BRK
     693/    CE46 : 00                                  BRK
     693/    CE47 :                                             
     693/    CE47 :                                             ;Jump table must be page aligned!!!
     693/    CE47 : A1 02                                       LDA (emu_PC,X)
     693/    CE49 : 0A                                          ASL
     693/    CE4A : 95 0A                                       STA emu_ptr,X
     693/    CE4C : A9 DF                                       LDA #hi(JUMP_TABLE)
     693/    CE4E : 69 00                                       ADC #0
     693/    CE50 : 95 0B                                       STA emu_ptr+1,X
     693/    CE52 : A1 0A                                       LDA (emu_ptr,X)
     693/    CE54 : 95 0C                                       STA emu_ptr2,X
     693/    CE56 : F6 0A                                       INC emu_ptr,X
     693/    CE58 : 90 02                                       BCC .skip
     693/    CE5A : F6 0B                                               INC emu_ptr+1,X
     693/    CE5C :                                             .skip:
     693/    CE5C : A1 0A                                       LDA (emu_ptr,X)
     693/    CE5E : 95 0D                                       STA emu_ptr2+1,X
     693/    CE60 : 7C 0C 00                                    JMP (emu_ptr2,X)
     694/    CE63 :                     
     695/    CE63 :                     	;0x78 - SEI IMP
     696/    CE63 :                     	SEI_IMP:
     697/    CE63 : (MACRO)             		OP_MACRO 120, "SEI", "IMP", "SEI_IMP"
     697/    CE63 :                                             ;TODO
     698/    CE63 : (MACRO)             		NEXT_MACRO
     698/    CE63 :                                             ;Could also copy X to Y before NEXT then restore after jump
     698/    CE63 :                                             
     698/    CE63 :  (MACRO-2)                                  halt
     698/    CE63 : 00                                  BRK
     698/    CE64 : 00                                  BRK
     698/    CE65 :                                             
     698/    CE65 :                                             ;Jump table must be page aligned!!!
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 61 - 1/5/2022 1:27:48


     698/    CE65 : A1 02                                       LDA (emu_PC,X)
     698/    CE67 : 0A                                          ASL
     698/    CE68 : 95 0A                                       STA emu_ptr,X
     698/    CE6A : A9 DF                                       LDA #hi(JUMP_TABLE)
     698/    CE6C : 69 00                                       ADC #0
     698/    CE6E : 95 0B                                       STA emu_ptr+1,X
     698/    CE70 : A1 0A                                       LDA (emu_ptr,X)
     698/    CE72 : 95 0C                                       STA emu_ptr2,X
     698/    CE74 : F6 0A                                       INC emu_ptr,X
     698/    CE76 : 90 02                                       BCC .skip
     698/    CE78 : F6 0B                                               INC emu_ptr+1,X
     698/    CE7A :                                             .skip:
     698/    CE7A : A1 0A                                       LDA (emu_ptr,X)
     698/    CE7C : 95 0D                                       STA emu_ptr2+1,X
     698/    CE7E : 7C 0C 00                                    JMP (emu_ptr2,X)
     699/    CE81 :                     
     700/    CE81 :                     	;0x79 - ADC ABSY
     701/    CE81 :                     	ADC_ABSY:
     702/    CE81 : (MACRO)             		OP_MACRO 121, "ADC", "ABSY", "ADC_ABSY"
     702/    CE81 :                                             ;TODO
     703/    CE81 : (MACRO)             		NEXT_MACRO
     703/    CE81 :                                             ;Could also copy X to Y before NEXT then restore after jump
     703/    CE81 :                                             
     703/    CE81 :  (MACRO-2)                                  halt
     703/    CE81 : 00                                  BRK
     703/    CE82 : 00                                  BRK
     703/    CE83 :                                             
     703/    CE83 :                                             ;Jump table must be page aligned!!!
     703/    CE83 : A1 02                                       LDA (emu_PC,X)
     703/    CE85 : 0A                                          ASL
     703/    CE86 : 95 0A                                       STA emu_ptr,X
     703/    CE88 : A9 DF                                       LDA #hi(JUMP_TABLE)
     703/    CE8A : 69 00                                       ADC #0
     703/    CE8C : 95 0B                                       STA emu_ptr+1,X
     703/    CE8E : A1 0A                                       LDA (emu_ptr,X)
     703/    CE90 : 95 0C                                       STA emu_ptr2,X
     703/    CE92 : F6 0A                                       INC emu_ptr,X
     703/    CE94 : 90 02                                       BCC .skip
     703/    CE96 : F6 0B                                               INC emu_ptr+1,X
     703/    CE98 :                                             .skip:
     703/    CE98 : A1 0A                                       LDA (emu_ptr,X)
     703/    CE9A : 95 0D                                       STA emu_ptr2+1,X
     703/    CE9C : 7C 0C 00                                    JMP (emu_ptr2,X)
     704/    CE9F :                     
     705/    CE9F :                     	;0x7A - NOP
     706/    CE9F :                     	NOP_0x7A:
     707/    CE9F : (MACRO)             		OP_MACRO 122, "NOP", "IMP", "NOP_0x7A"
     707/    CE9F :                                             ;TODO
     708/    CE9F : (MACRO)             		NEXT_MACRO
     708/    CE9F :                                             ;Could also copy X to Y before NEXT then restore after jump
     708/    CE9F :                                             
     708/    CE9F :  (MACRO-2)                                  halt
     708/    CE9F : 00                                  BRK
     708/    CEA0 : 00                                  BRK
     708/    CEA1 :                                             
     708/    CEA1 :                                             ;Jump table must be page aligned!!!
     708/    CEA1 : A1 02                                       LDA (emu_PC,X)
     708/    CEA3 : 0A                                          ASL
     708/    CEA4 : 95 0A                                       STA emu_ptr,X
     708/    CEA6 : A9 DF                                       LDA #hi(JUMP_TABLE)
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 62 - 1/5/2022 1:27:48


     708/    CEA8 : 69 00                                       ADC #0
     708/    CEAA : 95 0B                                       STA emu_ptr+1,X
     708/    CEAC : A1 0A                                       LDA (emu_ptr,X)
     708/    CEAE : 95 0C                                       STA emu_ptr2,X
     708/    CEB0 : F6 0A                                       INC emu_ptr,X
     708/    CEB2 : 90 02                                       BCC .skip
     708/    CEB4 : F6 0B                                               INC emu_ptr+1,X
     708/    CEB6 :                                             .skip:
     708/    CEB6 : A1 0A                                       LDA (emu_ptr,X)
     708/    CEB8 : 95 0D                                       STA emu_ptr2+1,X
     708/    CEBA : 7C 0C 00                                    JMP (emu_ptr2,X)
     709/    CEBD :                     
     710/    CEBD :                     	;0x7B - NOP
     711/    CEBD :                     	NOP_0x7B:
     712/    CEBD : (MACRO)             		OP_MACRO 123, "NOP", "IMP", "NOP_0x7B"
     712/    CEBD :                                             ;TODO
     713/    CEBD : (MACRO)             		NEXT_MACRO
     713/    CEBD :                                             ;Could also copy X to Y before NEXT then restore after jump
     713/    CEBD :                                             
     713/    CEBD :  (MACRO-2)                                  halt
     713/    CEBD : 00                                  BRK
     713/    CEBE : 00                                  BRK
     713/    CEBF :                                             
     713/    CEBF :                                             ;Jump table must be page aligned!!!
     713/    CEBF : A1 02                                       LDA (emu_PC,X)
     713/    CEC1 : 0A                                          ASL
     713/    CEC2 : 95 0A                                       STA emu_ptr,X
     713/    CEC4 : A9 DF                                       LDA #hi(JUMP_TABLE)
     713/    CEC6 : 69 00                                       ADC #0
     713/    CEC8 : 95 0B                                       STA emu_ptr+1,X
     713/    CECA : A1 0A                                       LDA (emu_ptr,X)
     713/    CECC : 95 0C                                       STA emu_ptr2,X
     713/    CECE : F6 0A                                       INC emu_ptr,X
     713/    CED0 : 90 02                                       BCC .skip
     713/    CED2 : F6 0B                                               INC emu_ptr+1,X
     713/    CED4 :                                             .skip:
     713/    CED4 : A1 0A                                       LDA (emu_ptr,X)
     713/    CED6 : 95 0D                                       STA emu_ptr2+1,X
     713/    CED8 : 7C 0C 00                                    JMP (emu_ptr2,X)
     714/    CEDB :                     
     715/    CEDB :                     	;0x7C - NOP
     716/    CEDB :                     	NOP_0x7C:
     717/    CEDB : (MACRO)             		OP_MACRO 124, "NOP", "IMP", "NOP_0x7C"
     717/    CEDB :                                             ;TODO
     718/    CEDB : (MACRO)             		NEXT_MACRO
     718/    CEDB :                                             ;Could also copy X to Y before NEXT then restore after jump
     718/    CEDB :                                             
     718/    CEDB :  (MACRO-2)                                  halt
     718/    CEDB : 00                                  BRK
     718/    CEDC : 00                                  BRK
     718/    CEDD :                                             
     718/    CEDD :                                             ;Jump table must be page aligned!!!
     718/    CEDD : A1 02                                       LDA (emu_PC,X)
     718/    CEDF : 0A                                          ASL
     718/    CEE0 : 95 0A                                       STA emu_ptr,X
     718/    CEE2 : A9 DF                                       LDA #hi(JUMP_TABLE)
     718/    CEE4 : 69 00                                       ADC #0
     718/    CEE6 : 95 0B                                       STA emu_ptr+1,X
     718/    CEE8 : A1 0A                                       LDA (emu_ptr,X)
     718/    CEEA : 95 0C                                       STA emu_ptr2,X
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 63 - 1/5/2022 1:27:48


     718/    CEEC : F6 0A                                       INC emu_ptr,X
     718/    CEEE : 90 02                                       BCC .skip
     718/    CEF0 : F6 0B                                               INC emu_ptr+1,X
     718/    CEF2 :                                             .skip:
     718/    CEF2 : A1 0A                                       LDA (emu_ptr,X)
     718/    CEF4 : 95 0D                                       STA emu_ptr2+1,X
     718/    CEF6 : 7C 0C 00                                    JMP (emu_ptr2,X)
     719/    CEF9 :                     
     720/    CEF9 :                     	;0x7D - ADC ABSX
     721/    CEF9 :                     	ADC_ABSX:
     722/    CEF9 : (MACRO)             		OP_MACRO 125, "ADC", "ABSX", "ADC_ABSX"
     722/    CEF9 :                                             ;TODO
     723/    CEF9 : (MACRO)             		NEXT_MACRO
     723/    CEF9 :                                             ;Could also copy X to Y before NEXT then restore after jump
     723/    CEF9 :                                             
     723/    CEF9 :  (MACRO-2)                                  halt
     723/    CEF9 : 00                                  BRK
     723/    CEFA : 00                                  BRK
     723/    CEFB :                                             
     723/    CEFB :                                             ;Jump table must be page aligned!!!
     723/    CEFB : A1 02                                       LDA (emu_PC,X)
     723/    CEFD : 0A                                          ASL
     723/    CEFE : 95 0A                                       STA emu_ptr,X
     723/    CF00 : A9 DF                                       LDA #hi(JUMP_TABLE)
     723/    CF02 : 69 00                                       ADC #0
     723/    CF04 : 95 0B                                       STA emu_ptr+1,X
     723/    CF06 : A1 0A                                       LDA (emu_ptr,X)
     723/    CF08 : 95 0C                                       STA emu_ptr2,X
     723/    CF0A : F6 0A                                       INC emu_ptr,X
     723/    CF0C : 90 02                                       BCC .skip
     723/    CF0E : F6 0B                                               INC emu_ptr+1,X
     723/    CF10 :                                             .skip:
     723/    CF10 : A1 0A                                       LDA (emu_ptr,X)
     723/    CF12 : 95 0D                                       STA emu_ptr2+1,X
     723/    CF14 : 7C 0C 00                                    JMP (emu_ptr2,X)
     724/    CF17 :                     
     725/    CF17 :                     	;0x7E - ROR ABSX
     726/    CF17 :                     	ROR_ABSX:
     727/    CF17 : (MACRO)             		OP_MACRO 126, "ROR", "ABSX", "ROR_ABSX"
     727/    CF17 :                                             ;TODO
     728/    CF17 : (MACRO)             		NEXT_MACRO
     728/    CF17 :                                             ;Could also copy X to Y before NEXT then restore after jump
     728/    CF17 :                                             
     728/    CF17 :  (MACRO-2)                                  halt
     728/    CF17 : 00                                  BRK
     728/    CF18 : 00                                  BRK
     728/    CF19 :                                             
     728/    CF19 :                                             ;Jump table must be page aligned!!!
     728/    CF19 : A1 02                                       LDA (emu_PC,X)
     728/    CF1B : 0A                                          ASL
     728/    CF1C : 95 0A                                       STA emu_ptr,X
     728/    CF1E : A9 DF                                       LDA #hi(JUMP_TABLE)
     728/    CF20 : 69 00                                       ADC #0
     728/    CF22 : 95 0B                                       STA emu_ptr+1,X
     728/    CF24 : A1 0A                                       LDA (emu_ptr,X)
     728/    CF26 : 95 0C                                       STA emu_ptr2,X
     728/    CF28 : F6 0A                                       INC emu_ptr,X
     728/    CF2A : 90 02                                       BCC .skip
     728/    CF2C : F6 0B                                               INC emu_ptr+1,X
     728/    CF2E :                                             .skip:
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 64 - 1/5/2022 1:27:48


     728/    CF2E : A1 0A                                       LDA (emu_ptr,X)
     728/    CF30 : 95 0D                                       STA emu_ptr2+1,X
     728/    CF32 : 7C 0C 00                                    JMP (emu_ptr2,X)
     729/    CF35 :                     
     730/    CF35 :                     	;0x7F - NOP
     731/    CF35 :                     	NOP_0x7F:
     732/    CF35 : (MACRO)             		OP_MACRO 127, "NOP", "IMP", "NOP_0x7F"
     732/    CF35 :                                             ;TODO
     733/    CF35 : (MACRO)             		NEXT_MACRO
     733/    CF35 :                                             ;Could also copy X to Y before NEXT then restore after jump
     733/    CF35 :                                             
     733/    CF35 :  (MACRO-2)                                  halt
     733/    CF35 : 00                                  BRK
     733/    CF36 : 00                                  BRK
     733/    CF37 :                                             
     733/    CF37 :                                             ;Jump table must be page aligned!!!
     733/    CF37 : A1 02                                       LDA (emu_PC,X)
     733/    CF39 : 0A                                          ASL
     733/    CF3A : 95 0A                                       STA emu_ptr,X
     733/    CF3C : A9 DF                                       LDA #hi(JUMP_TABLE)
     733/    CF3E : 69 00                                       ADC #0
     733/    CF40 : 95 0B                                       STA emu_ptr+1,X
     733/    CF42 : A1 0A                                       LDA (emu_ptr,X)
     733/    CF44 : 95 0C                                       STA emu_ptr2,X
     733/    CF46 : F6 0A                                       INC emu_ptr,X
     733/    CF48 : 90 02                                       BCC .skip
     733/    CF4A : F6 0B                                               INC emu_ptr+1,X
     733/    CF4C :                                             .skip:
     733/    CF4C : A1 0A                                       LDA (emu_ptr,X)
     733/    CF4E : 95 0D                                       STA emu_ptr2+1,X
     733/    CF50 : 7C 0C 00                                    JMP (emu_ptr2,X)
     734/    CF53 :                     
     735/    CF53 :                     	;0x80 - NOP
     736/    CF53 :                     	NOP_0x80:
     737/    CF53 : (MACRO)             		OP_MACRO 128, "NOP", "IMP", "NOP_0x80"
     737/    CF53 :                                             ;TODO
     738/    CF53 : (MACRO)             		NEXT_MACRO
     738/    CF53 :                                             ;Could also copy X to Y before NEXT then restore after jump
     738/    CF53 :                                             
     738/    CF53 :  (MACRO-2)                                  halt
     738/    CF53 : 00                                  BRK
     738/    CF54 : 00                                  BRK
     738/    CF55 :                                             
     738/    CF55 :                                             ;Jump table must be page aligned!!!
     738/    CF55 : A1 02                                       LDA (emu_PC,X)
     738/    CF57 : 0A                                          ASL
     738/    CF58 : 95 0A                                       STA emu_ptr,X
     738/    CF5A : A9 DF                                       LDA #hi(JUMP_TABLE)
     738/    CF5C : 69 00                                       ADC #0
     738/    CF5E : 95 0B                                       STA emu_ptr+1,X
     738/    CF60 : A1 0A                                       LDA (emu_ptr,X)
     738/    CF62 : 95 0C                                       STA emu_ptr2,X
     738/    CF64 : F6 0A                                       INC emu_ptr,X
     738/    CF66 : 90 02                                       BCC .skip
     738/    CF68 : F6 0B                                               INC emu_ptr+1,X
     738/    CF6A :                                             .skip:
     738/    CF6A : A1 0A                                       LDA (emu_ptr,X)
     738/    CF6C : 95 0D                                       STA emu_ptr2+1,X
     738/    CF6E : 7C 0C 00                                    JMP (emu_ptr2,X)
     739/    CF71 :                     
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 65 - 1/5/2022 1:27:48


     740/    CF71 :                     	;0x81 - STA IX
     741/    CF71 :                     	STA_IX:
     742/    CF71 : (MACRO)             		OP_MACRO 129, "STA", "IX", "STA_IX"
     742/    CF71 :                                             ;TODO
     743/    CF71 : (MACRO)             		NEXT_MACRO
     743/    CF71 :                                             ;Could also copy X to Y before NEXT then restore after jump
     743/    CF71 :                                             
     743/    CF71 :  (MACRO-2)                                  halt
     743/    CF71 : 00                                  BRK
     743/    CF72 : 00                                  BRK
     743/    CF73 :                                             
     743/    CF73 :                                             ;Jump table must be page aligned!!!
     743/    CF73 : A1 02                                       LDA (emu_PC,X)
     743/    CF75 : 0A                                          ASL
     743/    CF76 : 95 0A                                       STA emu_ptr,X
     743/    CF78 : A9 DF                                       LDA #hi(JUMP_TABLE)
     743/    CF7A : 69 00                                       ADC #0
     743/    CF7C : 95 0B                                       STA emu_ptr+1,X
     743/    CF7E : A1 0A                                       LDA (emu_ptr,X)
     743/    CF80 : 95 0C                                       STA emu_ptr2,X
     743/    CF82 : F6 0A                                       INC emu_ptr,X
     743/    CF84 : 90 02                                       BCC .skip
     743/    CF86 : F6 0B                                               INC emu_ptr+1,X
     743/    CF88 :                                             .skip:
     743/    CF88 : A1 0A                                       LDA (emu_ptr,X)
     743/    CF8A : 95 0D                                       STA emu_ptr2+1,X
     743/    CF8C : 7C 0C 00                                    JMP (emu_ptr2,X)
     744/    CF8F :                     
     745/    CF8F :                     	;0x82 - NOP
     746/    CF8F :                     	NOP_0x82:
     747/    CF8F : (MACRO)             		OP_MACRO 130, "NOP", "IMP", "NOP_0x82"
     747/    CF8F :                                             ;TODO
     748/    CF8F : (MACRO)             		NEXT_MACRO
     748/    CF8F :                                             ;Could also copy X to Y before NEXT then restore after jump
     748/    CF8F :                                             
     748/    CF8F :  (MACRO-2)                                  halt
     748/    CF8F : 00                                  BRK
     748/    CF90 : 00                                  BRK
     748/    CF91 :                                             
     748/    CF91 :                                             ;Jump table must be page aligned!!!
     748/    CF91 : A1 02                                       LDA (emu_PC,X)
     748/    CF93 : 0A                                          ASL
     748/    CF94 : 95 0A                                       STA emu_ptr,X
     748/    CF96 : A9 DF                                       LDA #hi(JUMP_TABLE)
     748/    CF98 : 69 00                                       ADC #0
     748/    CF9A : 95 0B                                       STA emu_ptr+1,X
     748/    CF9C : A1 0A                                       LDA (emu_ptr,X)
     748/    CF9E : 95 0C                                       STA emu_ptr2,X
     748/    CFA0 : F6 0A                                       INC emu_ptr,X
     748/    CFA2 : 90 02                                       BCC .skip
     748/    CFA4 : F6 0B                                               INC emu_ptr+1,X
     748/    CFA6 :                                             .skip:
     748/    CFA6 : A1 0A                                       LDA (emu_ptr,X)
     748/    CFA8 : 95 0D                                       STA emu_ptr2+1,X
     748/    CFAA : 7C 0C 00                                    JMP (emu_ptr2,X)
     749/    CFAD :                     
     750/    CFAD :                     	;0x83 - NOP
     751/    CFAD :                     	NOP_0x83:
     752/    CFAD : (MACRO)             		OP_MACRO 131, "NOP", "IMP", "NOP_0x83"
     752/    CFAD :                                             ;TODO
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 66 - 1/5/2022 1:27:48


     753/    CFAD : (MACRO)             		NEXT_MACRO
     753/    CFAD :                                             ;Could also copy X to Y before NEXT then restore after jump
     753/    CFAD :                                             
     753/    CFAD :  (MACRO-2)                                  halt
     753/    CFAD : 00                                  BRK
     753/    CFAE : 00                                  BRK
     753/    CFAF :                                             
     753/    CFAF :                                             ;Jump table must be page aligned!!!
     753/    CFAF : A1 02                                       LDA (emu_PC,X)
     753/    CFB1 : 0A                                          ASL
     753/    CFB2 : 95 0A                                       STA emu_ptr,X
     753/    CFB4 : A9 DF                                       LDA #hi(JUMP_TABLE)
     753/    CFB6 : 69 00                                       ADC #0
     753/    CFB8 : 95 0B                                       STA emu_ptr+1,X
     753/    CFBA : A1 0A                                       LDA (emu_ptr,X)
     753/    CFBC : 95 0C                                       STA emu_ptr2,X
     753/    CFBE : F6 0A                                       INC emu_ptr,X
     753/    CFC0 : 90 02                                       BCC .skip
     753/    CFC2 : F6 0B                                               INC emu_ptr+1,X
     753/    CFC4 :                                             .skip:
     753/    CFC4 : A1 0A                                       LDA (emu_ptr,X)
     753/    CFC6 : 95 0D                                       STA emu_ptr2+1,X
     753/    CFC8 : 7C 0C 00                                    JMP (emu_ptr2,X)
     754/    CFCB :                     
     755/    CFCB :                     	;0x84 - STY ZP
     756/    CFCB :                     	STY_ZP:
     757/    CFCB : (MACRO)             		OP_MACRO 132, "STY", "ZP", "STY_ZP"
     757/    CFCB :                                             ;TODO
     758/    CFCB : (MACRO)             		NEXT_MACRO
     758/    CFCB :                                             ;Could also copy X to Y before NEXT then restore after jump
     758/    CFCB :                                             
     758/    CFCB :  (MACRO-2)                                  halt
     758/    CFCB : 00                                  BRK
     758/    CFCC : 00                                  BRK
     758/    CFCD :                                             
     758/    CFCD :                                             ;Jump table must be page aligned!!!
     758/    CFCD : A1 02                                       LDA (emu_PC,X)
     758/    CFCF : 0A                                          ASL
     758/    CFD0 : 95 0A                                       STA emu_ptr,X
     758/    CFD2 : A9 DF                                       LDA #hi(JUMP_TABLE)
     758/    CFD4 : 69 00                                       ADC #0
     758/    CFD6 : 95 0B                                       STA emu_ptr+1,X
     758/    CFD8 : A1 0A                                       LDA (emu_ptr,X)
     758/    CFDA : 95 0C                                       STA emu_ptr2,X
     758/    CFDC : F6 0A                                       INC emu_ptr,X
     758/    CFDE : 90 02                                       BCC .skip
     758/    CFE0 : F6 0B                                               INC emu_ptr+1,X
     758/    CFE2 :                                             .skip:
     758/    CFE2 : A1 0A                                       LDA (emu_ptr,X)
     758/    CFE4 : 95 0D                                       STA emu_ptr2+1,X
     758/    CFE6 : 7C 0C 00                                    JMP (emu_ptr2,X)
     759/    CFE9 :                     
     760/    CFE9 :                     	;0x85 - STA ZP
     761/    CFE9 :                     	STA_ZP:
     762/    CFE9 : (MACRO)             		OP_MACRO 133, "STA", "ZP", "STA_ZP"
     762/    CFE9 :                                             ;TODO
     763/    CFE9 : (MACRO)             		NEXT_MACRO
     763/    CFE9 :                                             ;Could also copy X to Y before NEXT then restore after jump
     763/    CFE9 :                                             
     763/    CFE9 :  (MACRO-2)                                  halt
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 67 - 1/5/2022 1:27:48


     763/    CFE9 : 00                                  BRK
     763/    CFEA : 00                                  BRK
     763/    CFEB :                                             
     763/    CFEB :                                             ;Jump table must be page aligned!!!
     763/    CFEB : A1 02                                       LDA (emu_PC,X)
     763/    CFED : 0A                                          ASL
     763/    CFEE : 95 0A                                       STA emu_ptr,X
     763/    CFF0 : A9 DF                                       LDA #hi(JUMP_TABLE)
     763/    CFF2 : 69 00                                       ADC #0
     763/    CFF4 : 95 0B                                       STA emu_ptr+1,X
     763/    CFF6 : A1 0A                                       LDA (emu_ptr,X)
     763/    CFF8 : 95 0C                                       STA emu_ptr2,X
     763/    CFFA : F6 0A                                       INC emu_ptr,X
     763/    CFFC : 90 02                                       BCC .skip
     763/    CFFE : F6 0B                                               INC emu_ptr+1,X
     763/    D000 :                                             .skip:
     763/    D000 : A1 0A                                       LDA (emu_ptr,X)
     763/    D002 : 95 0D                                       STA emu_ptr2+1,X
     763/    D004 : 7C 0C 00                                    JMP (emu_ptr2,X)
     764/    D007 :                     
     765/    D007 :                     	;0x86 - STX ZP
     766/    D007 :                     	STX_ZP:
     767/    D007 : (MACRO)             		OP_MACRO 134, "STX", "ZP", "STX_ZP"
     767/    D007 :                                             ;TODO
     768/    D007 : (MACRO)             		NEXT_MACRO
     768/    D007 :                                             ;Could also copy X to Y before NEXT then restore after jump
     768/    D007 :                                             
     768/    D007 :  (MACRO-2)                                  halt
     768/    D007 : 00                                  BRK
     768/    D008 : 00                                  BRK
     768/    D009 :                                             
     768/    D009 :                                             ;Jump table must be page aligned!!!
     768/    D009 : A1 02                                       LDA (emu_PC,X)
     768/    D00B : 0A                                          ASL
     768/    D00C : 95 0A                                       STA emu_ptr,X
     768/    D00E : A9 DF                                       LDA #hi(JUMP_TABLE)
     768/    D010 : 69 00                                       ADC #0
     768/    D012 : 95 0B                                       STA emu_ptr+1,X
     768/    D014 : A1 0A                                       LDA (emu_ptr,X)
     768/    D016 : 95 0C                                       STA emu_ptr2,X
     768/    D018 : F6 0A                                       INC emu_ptr,X
     768/    D01A : 90 02                                       BCC .skip
     768/    D01C : F6 0B                                               INC emu_ptr+1,X
     768/    D01E :                                             .skip:
     768/    D01E : A1 0A                                       LDA (emu_ptr,X)
     768/    D020 : 95 0D                                       STA emu_ptr2+1,X
     768/    D022 : 7C 0C 00                                    JMP (emu_ptr2,X)
     769/    D025 :                     
     770/    D025 :                     	;0x87 - NOP
     771/    D025 :                     	NOP_0x87:
     772/    D025 : (MACRO)             		OP_MACRO 135, "NOP", "IMP", "NOP_0x87"
     772/    D025 :                                             ;TODO
     773/    D025 : (MACRO)             		NEXT_MACRO
     773/    D025 :                                             ;Could also copy X to Y before NEXT then restore after jump
     773/    D025 :                                             
     773/    D025 :  (MACRO-2)                                  halt
     773/    D025 : 00                                  BRK
     773/    D026 : 00                                  BRK
     773/    D027 :                                             
     773/    D027 :                                             ;Jump table must be page aligned!!!
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 68 - 1/5/2022 1:27:48


     773/    D027 : A1 02                                       LDA (emu_PC,X)
     773/    D029 : 0A                                          ASL
     773/    D02A : 95 0A                                       STA emu_ptr,X
     773/    D02C : A9 DF                                       LDA #hi(JUMP_TABLE)
     773/    D02E : 69 00                                       ADC #0
     773/    D030 : 95 0B                                       STA emu_ptr+1,X
     773/    D032 : A1 0A                                       LDA (emu_ptr,X)
     773/    D034 : 95 0C                                       STA emu_ptr2,X
     773/    D036 : F6 0A                                       INC emu_ptr,X
     773/    D038 : 90 02                                       BCC .skip
     773/    D03A : F6 0B                                               INC emu_ptr+1,X
     773/    D03C :                                             .skip:
     773/    D03C : A1 0A                                       LDA (emu_ptr,X)
     773/    D03E : 95 0D                                       STA emu_ptr2+1,X
     773/    D040 : 7C 0C 00                                    JMP (emu_ptr2,X)
     774/    D043 :                     
     775/    D043 :                     	;0x88 - DEY IMP
     776/    D043 :                     	DEY_IMP:
     777/    D043 : (MACRO)             		OP_MACRO 136, "DEY", "IMP", "DEY_IMP"
     777/    D043 :                                             ;TODO
     778/    D043 : (MACRO)             		NEXT_MACRO
     778/    D043 :                                             ;Could also copy X to Y before NEXT then restore after jump
     778/    D043 :                                             
     778/    D043 :  (MACRO-2)                                  halt
     778/    D043 : 00                                  BRK
     778/    D044 : 00                                  BRK
     778/    D045 :                                             
     778/    D045 :                                             ;Jump table must be page aligned!!!
     778/    D045 : A1 02                                       LDA (emu_PC,X)
     778/    D047 : 0A                                          ASL
     778/    D048 : 95 0A                                       STA emu_ptr,X
     778/    D04A : A9 DF                                       LDA #hi(JUMP_TABLE)
     778/    D04C : 69 00                                       ADC #0
     778/    D04E : 95 0B                                       STA emu_ptr+1,X
     778/    D050 : A1 0A                                       LDA (emu_ptr,X)
     778/    D052 : 95 0C                                       STA emu_ptr2,X
     778/    D054 : F6 0A                                       INC emu_ptr,X
     778/    D056 : 90 02                                       BCC .skip
     778/    D058 : F6 0B                                               INC emu_ptr+1,X
     778/    D05A :                                             .skip:
     778/    D05A : A1 0A                                       LDA (emu_ptr,X)
     778/    D05C : 95 0D                                       STA emu_ptr2+1,X
     778/    D05E : 7C 0C 00                                    JMP (emu_ptr2,X)
     779/    D061 :                     
     780/    D061 :                     	;0x89 - NOP
     781/    D061 :                     	NOP_0x89:
     782/    D061 : (MACRO)             		OP_MACRO 137, "NOP", "IMP", "NOP_0x89"
     782/    D061 :                                             ;TODO
     783/    D061 : (MACRO)             		NEXT_MACRO
     783/    D061 :                                             ;Could also copy X to Y before NEXT then restore after jump
     783/    D061 :                                             
     783/    D061 :  (MACRO-2)                                  halt
     783/    D061 : 00                                  BRK
     783/    D062 : 00                                  BRK
     783/    D063 :                                             
     783/    D063 :                                             ;Jump table must be page aligned!!!
     783/    D063 : A1 02                                       LDA (emu_PC,X)
     783/    D065 : 0A                                          ASL
     783/    D066 : 95 0A                                       STA emu_ptr,X
     783/    D068 : A9 DF                                       LDA #hi(JUMP_TABLE)
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 69 - 1/5/2022 1:27:48


     783/    D06A : 69 00                                       ADC #0
     783/    D06C : 95 0B                                       STA emu_ptr+1,X
     783/    D06E : A1 0A                                       LDA (emu_ptr,X)
     783/    D070 : 95 0C                                       STA emu_ptr2,X
     783/    D072 : F6 0A                                       INC emu_ptr,X
     783/    D074 : 90 02                                       BCC .skip
     783/    D076 : F6 0B                                               INC emu_ptr+1,X
     783/    D078 :                                             .skip:
     783/    D078 : A1 0A                                       LDA (emu_ptr,X)
     783/    D07A : 95 0D                                       STA emu_ptr2+1,X
     783/    D07C : 7C 0C 00                                    JMP (emu_ptr2,X)
     784/    D07F :                     
     785/    D07F :                     	;0x8A - TXA IMP
     786/    D07F :                     	TXA_IMP:
     787/    D07F : (MACRO)             		OP_MACRO 138, "TXA", "IMP", "TXA_IMP"
     787/    D07F :                                             ;TODO
     788/    D07F : (MACRO)             		NEXT_MACRO
     788/    D07F :                                             ;Could also copy X to Y before NEXT then restore after jump
     788/    D07F :                                             
     788/    D07F :  (MACRO-2)                                  halt
     788/    D07F : 00                                  BRK
     788/    D080 : 00                                  BRK
     788/    D081 :                                             
     788/    D081 :                                             ;Jump table must be page aligned!!!
     788/    D081 : A1 02                                       LDA (emu_PC,X)
     788/    D083 : 0A                                          ASL
     788/    D084 : 95 0A                                       STA emu_ptr,X
     788/    D086 : A9 DF                                       LDA #hi(JUMP_TABLE)
     788/    D088 : 69 00                                       ADC #0
     788/    D08A : 95 0B                                       STA emu_ptr+1,X
     788/    D08C : A1 0A                                       LDA (emu_ptr,X)
     788/    D08E : 95 0C                                       STA emu_ptr2,X
     788/    D090 : F6 0A                                       INC emu_ptr,X
     788/    D092 : 90 02                                       BCC .skip
     788/    D094 : F6 0B                                               INC emu_ptr+1,X
     788/    D096 :                                             .skip:
     788/    D096 : A1 0A                                       LDA (emu_ptr,X)
     788/    D098 : 95 0D                                       STA emu_ptr2+1,X
     788/    D09A : 7C 0C 00                                    JMP (emu_ptr2,X)
     789/    D09D :                     
     790/    D09D :                     	;0x8B - NOP
     791/    D09D :                     	NOP_0x8B:
     792/    D09D : (MACRO)             		OP_MACRO 139, "NOP", "IMP", "NOP_0x8B"
     792/    D09D :                                             ;TODO
     793/    D09D : (MACRO)             		NEXT_MACRO
     793/    D09D :                                             ;Could also copy X to Y before NEXT then restore after jump
     793/    D09D :                                             
     793/    D09D :  (MACRO-2)                                  halt
     793/    D09D : 00                                  BRK
     793/    D09E : 00                                  BRK
     793/    D09F :                                             
     793/    D09F :                                             ;Jump table must be page aligned!!!
     793/    D09F : A1 02                                       LDA (emu_PC,X)
     793/    D0A1 : 0A                                          ASL
     793/    D0A2 : 95 0A                                       STA emu_ptr,X
     793/    D0A4 : A9 DF                                       LDA #hi(JUMP_TABLE)
     793/    D0A6 : 69 00                                       ADC #0
     793/    D0A8 : 95 0B                                       STA emu_ptr+1,X
     793/    D0AA : A1 0A                                       LDA (emu_ptr,X)
     793/    D0AC : 95 0C                                       STA emu_ptr2,X
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 70 - 1/5/2022 1:27:48


     793/    D0AE : F6 0A                                       INC emu_ptr,X
     793/    D0B0 : 90 02                                       BCC .skip
     793/    D0B2 : F6 0B                                               INC emu_ptr+1,X
     793/    D0B4 :                                             .skip:
     793/    D0B4 : A1 0A                                       LDA (emu_ptr,X)
     793/    D0B6 : 95 0D                                       STA emu_ptr2+1,X
     793/    D0B8 : 7C 0C 00                                    JMP (emu_ptr2,X)
     794/    D0BB :                     
     795/    D0BB :                     	;0x8C - STY ABS
     796/    D0BB :                     	STY_ABS:
     797/    D0BB : (MACRO)             		OP_MACRO 140, "STY", "ABS", "STY_ABS"
     797/    D0BB :                                             ;TODO
     798/    D0BB : (MACRO)             		NEXT_MACRO
     798/    D0BB :                                             ;Could also copy X to Y before NEXT then restore after jump
     798/    D0BB :                                             
     798/    D0BB :  (MACRO-2)                                  halt
     798/    D0BB : 00                                  BRK
     798/    D0BC : 00                                  BRK
     798/    D0BD :                                             
     798/    D0BD :                                             ;Jump table must be page aligned!!!
     798/    D0BD : A1 02                                       LDA (emu_PC,X)
     798/    D0BF : 0A                                          ASL
     798/    D0C0 : 95 0A                                       STA emu_ptr,X
     798/    D0C2 : A9 DF                                       LDA #hi(JUMP_TABLE)
     798/    D0C4 : 69 00                                       ADC #0
     798/    D0C6 : 95 0B                                       STA emu_ptr+1,X
     798/    D0C8 : A1 0A                                       LDA (emu_ptr,X)
     798/    D0CA : 95 0C                                       STA emu_ptr2,X
     798/    D0CC : F6 0A                                       INC emu_ptr,X
     798/    D0CE : 90 02                                       BCC .skip
     798/    D0D0 : F6 0B                                               INC emu_ptr+1,X
     798/    D0D2 :                                             .skip:
     798/    D0D2 : A1 0A                                       LDA (emu_ptr,X)
     798/    D0D4 : 95 0D                                       STA emu_ptr2+1,X
     798/    D0D6 : 7C 0C 00                                    JMP (emu_ptr2,X)
     799/    D0D9 :                     
     800/    D0D9 :                     	;0x8D - STA ABS
     801/    D0D9 :                     	STA_ABS:
     802/    D0D9 : (MACRO)             		OP_MACRO 141, "STA", "ABS", "STA_ABS"
     802/    D0D9 :                                             ;TODO
     803/    D0D9 : (MACRO)             		NEXT_MACRO
     803/    D0D9 :                                             ;Could also copy X to Y before NEXT then restore after jump
     803/    D0D9 :                                             
     803/    D0D9 :  (MACRO-2)                                  halt
     803/    D0D9 : 00                                  BRK
     803/    D0DA : 00                                  BRK
     803/    D0DB :                                             
     803/    D0DB :                                             ;Jump table must be page aligned!!!
     803/    D0DB : A1 02                                       LDA (emu_PC,X)
     803/    D0DD : 0A                                          ASL
     803/    D0DE : 95 0A                                       STA emu_ptr,X
     803/    D0E0 : A9 DF                                       LDA #hi(JUMP_TABLE)
     803/    D0E2 : 69 00                                       ADC #0
     803/    D0E4 : 95 0B                                       STA emu_ptr+1,X
     803/    D0E6 : A1 0A                                       LDA (emu_ptr,X)
     803/    D0E8 : 95 0C                                       STA emu_ptr2,X
     803/    D0EA : F6 0A                                       INC emu_ptr,X
     803/    D0EC : 90 02                                       BCC .skip
     803/    D0EE : F6 0B                                               INC emu_ptr+1,X
     803/    D0F0 :                                             .skip:
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 71 - 1/5/2022 1:27:48


     803/    D0F0 : A1 0A                                       LDA (emu_ptr,X)
     803/    D0F2 : 95 0D                                       STA emu_ptr2+1,X
     803/    D0F4 : 7C 0C 00                                    JMP (emu_ptr2,X)
     804/    D0F7 :                     
     805/    D0F7 :                     	;0x8E - STX ABS
     806/    D0F7 :                     	STX_ABS:
     807/    D0F7 : (MACRO)             		OP_MACRO 142, "STX", "ABS", "STX_ABS"
     807/    D0F7 :                                             ;TODO
     808/    D0F7 : (MACRO)             		NEXT_MACRO
     808/    D0F7 :                                             ;Could also copy X to Y before NEXT then restore after jump
     808/    D0F7 :                                             
     808/    D0F7 :  (MACRO-2)                                  halt
     808/    D0F7 : 00                                  BRK
     808/    D0F8 : 00                                  BRK
     808/    D0F9 :                                             
     808/    D0F9 :                                             ;Jump table must be page aligned!!!
     808/    D0F9 : A1 02                                       LDA (emu_PC,X)
     808/    D0FB : 0A                                          ASL
     808/    D0FC : 95 0A                                       STA emu_ptr,X
     808/    D0FE : A9 DF                                       LDA #hi(JUMP_TABLE)
     808/    D100 : 69 00                                       ADC #0
     808/    D102 : 95 0B                                       STA emu_ptr+1,X
     808/    D104 : A1 0A                                       LDA (emu_ptr,X)
     808/    D106 : 95 0C                                       STA emu_ptr2,X
     808/    D108 : F6 0A                                       INC emu_ptr,X
     808/    D10A : 90 02                                       BCC .skip
     808/    D10C : F6 0B                                               INC emu_ptr+1,X
     808/    D10E :                                             .skip:
     808/    D10E : A1 0A                                       LDA (emu_ptr,X)
     808/    D110 : 95 0D                                       STA emu_ptr2+1,X
     808/    D112 : 7C 0C 00                                    JMP (emu_ptr2,X)
     809/    D115 :                     
     810/    D115 :                     	;0x8F - NOP
     811/    D115 :                     	NOP_0x8F:
     812/    D115 : (MACRO)             		OP_MACRO 143, "NOP", "IMP", "NOP_0x8F"
     812/    D115 :                                             ;TODO
     813/    D115 : (MACRO)             		NEXT_MACRO
     813/    D115 :                                             ;Could also copy X to Y before NEXT then restore after jump
     813/    D115 :                                             
     813/    D115 :  (MACRO-2)                                  halt
     813/    D115 : 00                                  BRK
     813/    D116 : 00                                  BRK
     813/    D117 :                                             
     813/    D117 :                                             ;Jump table must be page aligned!!!
     813/    D117 : A1 02                                       LDA (emu_PC,X)
     813/    D119 : 0A                                          ASL
     813/    D11A : 95 0A                                       STA emu_ptr,X
     813/    D11C : A9 DF                                       LDA #hi(JUMP_TABLE)
     813/    D11E : 69 00                                       ADC #0
     813/    D120 : 95 0B                                       STA emu_ptr+1,X
     813/    D122 : A1 0A                                       LDA (emu_ptr,X)
     813/    D124 : 95 0C                                       STA emu_ptr2,X
     813/    D126 : F6 0A                                       INC emu_ptr,X
     813/    D128 : 90 02                                       BCC .skip
     813/    D12A : F6 0B                                               INC emu_ptr+1,X
     813/    D12C :                                             .skip:
     813/    D12C : A1 0A                                       LDA (emu_ptr,X)
     813/    D12E : 95 0D                                       STA emu_ptr2+1,X
     813/    D130 : 7C 0C 00                                    JMP (emu_ptr2,X)
     814/    D133 :                     
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 72 - 1/5/2022 1:27:48


     815/    D133 :                     	;0x90 - BCC REL
     816/    D133 :                     	BCC_REL:
     817/    D133 : (MACRO)             		OP_MACRO 144, "BCC", "REL", "BCC_REL"
     817/    D133 :                                             ;TODO
     818/    D133 : (MACRO)             		NEXT_MACRO
     818/    D133 :                                             ;Could also copy X to Y before NEXT then restore after jump
     818/    D133 :                                             
     818/    D133 :  (MACRO-2)                                  halt
     818/    D133 : 00                                  BRK
     818/    D134 : 00                                  BRK
     818/    D135 :                                             
     818/    D135 :                                             ;Jump table must be page aligned!!!
     818/    D135 : A1 02                                       LDA (emu_PC,X)
     818/    D137 : 0A                                          ASL
     818/    D138 : 95 0A                                       STA emu_ptr,X
     818/    D13A : A9 DF                                       LDA #hi(JUMP_TABLE)
     818/    D13C : 69 00                                       ADC #0
     818/    D13E : 95 0B                                       STA emu_ptr+1,X
     818/    D140 : A1 0A                                       LDA (emu_ptr,X)
     818/    D142 : 95 0C                                       STA emu_ptr2,X
     818/    D144 : F6 0A                                       INC emu_ptr,X
     818/    D146 : 90 02                                       BCC .skip
     818/    D148 : F6 0B                                               INC emu_ptr+1,X
     818/    D14A :                                             .skip:
     818/    D14A : A1 0A                                       LDA (emu_ptr,X)
     818/    D14C : 95 0D                                       STA emu_ptr2+1,X
     818/    D14E : 7C 0C 00                                    JMP (emu_ptr2,X)
     819/    D151 :                     
     820/    D151 :                     	;0x91 - STA IY
     821/    D151 :                     	STA_IY:
     822/    D151 : (MACRO)             		OP_MACRO 145, "STA", "IY", "STA_IY"
     822/    D151 :                                             ;TODO
     823/    D151 : (MACRO)             		NEXT_MACRO
     823/    D151 :                                             ;Could also copy X to Y before NEXT then restore after jump
     823/    D151 :                                             
     823/    D151 :  (MACRO-2)                                  halt
     823/    D151 : 00                                  BRK
     823/    D152 : 00                                  BRK
     823/    D153 :                                             
     823/    D153 :                                             ;Jump table must be page aligned!!!
     823/    D153 : A1 02                                       LDA (emu_PC,X)
     823/    D155 : 0A                                          ASL
     823/    D156 : 95 0A                                       STA emu_ptr,X
     823/    D158 : A9 DF                                       LDA #hi(JUMP_TABLE)
     823/    D15A : 69 00                                       ADC #0
     823/    D15C : 95 0B                                       STA emu_ptr+1,X
     823/    D15E : A1 0A                                       LDA (emu_ptr,X)
     823/    D160 : 95 0C                                       STA emu_ptr2,X
     823/    D162 : F6 0A                                       INC emu_ptr,X
     823/    D164 : 90 02                                       BCC .skip
     823/    D166 : F6 0B                                               INC emu_ptr+1,X
     823/    D168 :                                             .skip:
     823/    D168 : A1 0A                                       LDA (emu_ptr,X)
     823/    D16A : 95 0D                                       STA emu_ptr2+1,X
     823/    D16C : 7C 0C 00                                    JMP (emu_ptr2,X)
     824/    D16F :                     
     825/    D16F :                     	;0x92 - NOP
     826/    D16F :                     	NOP_0x92:
     827/    D16F : (MACRO)             		OP_MACRO 146, "NOP", "IMP", "NOP_0x92"
     827/    D16F :                                             ;TODO
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 73 - 1/5/2022 1:27:48


     828/    D16F : (MACRO)             		NEXT_MACRO
     828/    D16F :                                             ;Could also copy X to Y before NEXT then restore after jump
     828/    D16F :                                             
     828/    D16F :  (MACRO-2)                                  halt
     828/    D16F : 00                                  BRK
     828/    D170 : 00                                  BRK
     828/    D171 :                                             
     828/    D171 :                                             ;Jump table must be page aligned!!!
     828/    D171 : A1 02                                       LDA (emu_PC,X)
     828/    D173 : 0A                                          ASL
     828/    D174 : 95 0A                                       STA emu_ptr,X
     828/    D176 : A9 DF                                       LDA #hi(JUMP_TABLE)
     828/    D178 : 69 00                                       ADC #0
     828/    D17A : 95 0B                                       STA emu_ptr+1,X
     828/    D17C : A1 0A                                       LDA (emu_ptr,X)
     828/    D17E : 95 0C                                       STA emu_ptr2,X
     828/    D180 : F6 0A                                       INC emu_ptr,X
     828/    D182 : 90 02                                       BCC .skip
     828/    D184 : F6 0B                                               INC emu_ptr+1,X
     828/    D186 :                                             .skip:
     828/    D186 : A1 0A                                       LDA (emu_ptr,X)
     828/    D188 : 95 0D                                       STA emu_ptr2+1,X
     828/    D18A : 7C 0C 00                                    JMP (emu_ptr2,X)
     829/    D18D :                     
     830/    D18D :                     	;0x93 - NOP
     831/    D18D :                     	NOP_0x93:
     832/    D18D : (MACRO)             		OP_MACRO 147, "NOP", "IMP", "NOP_0x93"
     832/    D18D :                                             ;TODO
     833/    D18D : (MACRO)             		NEXT_MACRO
     833/    D18D :                                             ;Could also copy X to Y before NEXT then restore after jump
     833/    D18D :                                             
     833/    D18D :  (MACRO-2)                                  halt
     833/    D18D : 00                                  BRK
     833/    D18E : 00                                  BRK
     833/    D18F :                                             
     833/    D18F :                                             ;Jump table must be page aligned!!!
     833/    D18F : A1 02                                       LDA (emu_PC,X)
     833/    D191 : 0A                                          ASL
     833/    D192 : 95 0A                                       STA emu_ptr,X
     833/    D194 : A9 DF                                       LDA #hi(JUMP_TABLE)
     833/    D196 : 69 00                                       ADC #0
     833/    D198 : 95 0B                                       STA emu_ptr+1,X
     833/    D19A : A1 0A                                       LDA (emu_ptr,X)
     833/    D19C : 95 0C                                       STA emu_ptr2,X
     833/    D19E : F6 0A                                       INC emu_ptr,X
     833/    D1A0 : 90 02                                       BCC .skip
     833/    D1A2 : F6 0B                                               INC emu_ptr+1,X
     833/    D1A4 :                                             .skip:
     833/    D1A4 : A1 0A                                       LDA (emu_ptr,X)
     833/    D1A6 : 95 0D                                       STA emu_ptr2+1,X
     833/    D1A8 : 7C 0C 00                                    JMP (emu_ptr2,X)
     834/    D1AB :                     
     835/    D1AB :                     	;0x94 - STY ZPX
     836/    D1AB :                     	STY_ZPX:
     837/    D1AB : (MACRO)             		OP_MACRO 148, "STY", "ZPX", "STY_ZPX"
     837/    D1AB :                                             ;TODO
     838/    D1AB : (MACRO)             		NEXT_MACRO
     838/    D1AB :                                             ;Could also copy X to Y before NEXT then restore after jump
     838/    D1AB :                                             
     838/    D1AB :  (MACRO-2)                                  halt
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 74 - 1/5/2022 1:27:48


     838/    D1AB : 00                                  BRK
     838/    D1AC : 00                                  BRK
     838/    D1AD :                                             
     838/    D1AD :                                             ;Jump table must be page aligned!!!
     838/    D1AD : A1 02                                       LDA (emu_PC,X)
     838/    D1AF : 0A                                          ASL
     838/    D1B0 : 95 0A                                       STA emu_ptr,X
     838/    D1B2 : A9 DF                                       LDA #hi(JUMP_TABLE)
     838/    D1B4 : 69 00                                       ADC #0
     838/    D1B6 : 95 0B                                       STA emu_ptr+1,X
     838/    D1B8 : A1 0A                                       LDA (emu_ptr,X)
     838/    D1BA : 95 0C                                       STA emu_ptr2,X
     838/    D1BC : F6 0A                                       INC emu_ptr,X
     838/    D1BE : 90 02                                       BCC .skip
     838/    D1C0 : F6 0B                                               INC emu_ptr+1,X
     838/    D1C2 :                                             .skip:
     838/    D1C2 : A1 0A                                       LDA (emu_ptr,X)
     838/    D1C4 : 95 0D                                       STA emu_ptr2+1,X
     838/    D1C6 : 7C 0C 00                                    JMP (emu_ptr2,X)
     839/    D1C9 :                     
     840/    D1C9 :                     	;0x95 - STA ZPX
     841/    D1C9 :                     	STA_ZPX:
     842/    D1C9 : (MACRO)             		OP_MACRO 149, "STA", "ZPX", "STA_ZPX"
     842/    D1C9 :                                             ;TODO
     843/    D1C9 : (MACRO)             		NEXT_MACRO
     843/    D1C9 :                                             ;Could also copy X to Y before NEXT then restore after jump
     843/    D1C9 :                                             
     843/    D1C9 :  (MACRO-2)                                  halt
     843/    D1C9 : 00                                  BRK
     843/    D1CA : 00                                  BRK
     843/    D1CB :                                             
     843/    D1CB :                                             ;Jump table must be page aligned!!!
     843/    D1CB : A1 02                                       LDA (emu_PC,X)
     843/    D1CD : 0A                                          ASL
     843/    D1CE : 95 0A                                       STA emu_ptr,X
     843/    D1D0 : A9 DF                                       LDA #hi(JUMP_TABLE)
     843/    D1D2 : 69 00                                       ADC #0
     843/    D1D4 : 95 0B                                       STA emu_ptr+1,X
     843/    D1D6 : A1 0A                                       LDA (emu_ptr,X)
     843/    D1D8 : 95 0C                                       STA emu_ptr2,X
     843/    D1DA : F6 0A                                       INC emu_ptr,X
     843/    D1DC : 90 02                                       BCC .skip
     843/    D1DE : F6 0B                                               INC emu_ptr+1,X
     843/    D1E0 :                                             .skip:
     843/    D1E0 : A1 0A                                       LDA (emu_ptr,X)
     843/    D1E2 : 95 0D                                       STA emu_ptr2+1,X
     843/    D1E4 : 7C 0C 00                                    JMP (emu_ptr2,X)
     844/    D1E7 :                     
     845/    D1E7 :                     	;0x96 - STX ZPY
     846/    D1E7 :                     	STX_ZPY:
     847/    D1E7 : (MACRO)             		OP_MACRO 150, "STX", "ZPY", "STX_ZPY"
     847/    D1E7 :                                             ;TODO
     848/    D1E7 : (MACRO)             		NEXT_MACRO
     848/    D1E7 :                                             ;Could also copy X to Y before NEXT then restore after jump
     848/    D1E7 :                                             
     848/    D1E7 :  (MACRO-2)                                  halt
     848/    D1E7 : 00                                  BRK
     848/    D1E8 : 00                                  BRK
     848/    D1E9 :                                             
     848/    D1E9 :                                             ;Jump table must be page aligned!!!
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 75 - 1/5/2022 1:27:48


     848/    D1E9 : A1 02                                       LDA (emu_PC,X)
     848/    D1EB : 0A                                          ASL
     848/    D1EC : 95 0A                                       STA emu_ptr,X
     848/    D1EE : A9 DF                                       LDA #hi(JUMP_TABLE)
     848/    D1F0 : 69 00                                       ADC #0
     848/    D1F2 : 95 0B                                       STA emu_ptr+1,X
     848/    D1F4 : A1 0A                                       LDA (emu_ptr,X)
     848/    D1F6 : 95 0C                                       STA emu_ptr2,X
     848/    D1F8 : F6 0A                                       INC emu_ptr,X
     848/    D1FA : 90 02                                       BCC .skip
     848/    D1FC : F6 0B                                               INC emu_ptr+1,X
     848/    D1FE :                                             .skip:
     848/    D1FE : A1 0A                                       LDA (emu_ptr,X)
     848/    D200 : 95 0D                                       STA emu_ptr2+1,X
     848/    D202 : 7C 0C 00                                    JMP (emu_ptr2,X)
     849/    D205 :                     
     850/    D205 :                     	;0x97 - NOP
     851/    D205 :                     	NOP_0x97:
     852/    D205 : (MACRO)             		OP_MACRO 151, "NOP", "IMP", "NOP_0x97"
     852/    D205 :                                             ;TODO
     853/    D205 : (MACRO)             		NEXT_MACRO
     853/    D205 :                                             ;Could also copy X to Y before NEXT then restore after jump
     853/    D205 :                                             
     853/    D205 :  (MACRO-2)                                  halt
     853/    D205 : 00                                  BRK
     853/    D206 : 00                                  BRK
     853/    D207 :                                             
     853/    D207 :                                             ;Jump table must be page aligned!!!
     853/    D207 : A1 02                                       LDA (emu_PC,X)
     853/    D209 : 0A                                          ASL
     853/    D20A : 95 0A                                       STA emu_ptr,X
     853/    D20C : A9 DF                                       LDA #hi(JUMP_TABLE)
     853/    D20E : 69 00                                       ADC #0
     853/    D210 : 95 0B                                       STA emu_ptr+1,X
     853/    D212 : A1 0A                                       LDA (emu_ptr,X)
     853/    D214 : 95 0C                                       STA emu_ptr2,X
     853/    D216 : F6 0A                                       INC emu_ptr,X
     853/    D218 : 90 02                                       BCC .skip
     853/    D21A : F6 0B                                               INC emu_ptr+1,X
     853/    D21C :                                             .skip:
     853/    D21C : A1 0A                                       LDA (emu_ptr,X)
     853/    D21E : 95 0D                                       STA emu_ptr2+1,X
     853/    D220 : 7C 0C 00                                    JMP (emu_ptr2,X)
     854/    D223 :                     
     855/    D223 :                     	;0x98 - TYA IMP
     856/    D223 :                     	TYA_IMP:
     857/    D223 : (MACRO)             		OP_MACRO 152, "TYA", "IMP", "TYA_IMP"
     857/    D223 :                                             ;TODO
     858/    D223 : (MACRO)             		NEXT_MACRO
     858/    D223 :                                             ;Could also copy X to Y before NEXT then restore after jump
     858/    D223 :                                             
     858/    D223 :  (MACRO-2)                                  halt
     858/    D223 : 00                                  BRK
     858/    D224 : 00                                  BRK
     858/    D225 :                                             
     858/    D225 :                                             ;Jump table must be page aligned!!!
     858/    D225 : A1 02                                       LDA (emu_PC,X)
     858/    D227 : 0A                                          ASL
     858/    D228 : 95 0A                                       STA emu_ptr,X
     858/    D22A : A9 DF                                       LDA #hi(JUMP_TABLE)
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 76 - 1/5/2022 1:27:48


     858/    D22C : 69 00                                       ADC #0
     858/    D22E : 95 0B                                       STA emu_ptr+1,X
     858/    D230 : A1 0A                                       LDA (emu_ptr,X)
     858/    D232 : 95 0C                                       STA emu_ptr2,X
     858/    D234 : F6 0A                                       INC emu_ptr,X
     858/    D236 : 90 02                                       BCC .skip
     858/    D238 : F6 0B                                               INC emu_ptr+1,X
     858/    D23A :                                             .skip:
     858/    D23A : A1 0A                                       LDA (emu_ptr,X)
     858/    D23C : 95 0D                                       STA emu_ptr2+1,X
     858/    D23E : 7C 0C 00                                    JMP (emu_ptr2,X)
     859/    D241 :                     
     860/    D241 :                     	;0x99 - STA ABSY
     861/    D241 :                     	STA_ABSY:
     862/    D241 : (MACRO)             		OP_MACRO 153, "STA", "ABSY", "STA_ABSY"
     862/    D241 :                                             ;TODO
     863/    D241 : (MACRO)             		NEXT_MACRO
     863/    D241 :                                             ;Could also copy X to Y before NEXT then restore after jump
     863/    D241 :                                             
     863/    D241 :  (MACRO-2)                                  halt
     863/    D241 : 00                                  BRK
     863/    D242 : 00                                  BRK
     863/    D243 :                                             
     863/    D243 :                                             ;Jump table must be page aligned!!!
     863/    D243 : A1 02                                       LDA (emu_PC,X)
     863/    D245 : 0A                                          ASL
     863/    D246 : 95 0A                                       STA emu_ptr,X
     863/    D248 : A9 DF                                       LDA #hi(JUMP_TABLE)
     863/    D24A : 69 00                                       ADC #0
     863/    D24C : 95 0B                                       STA emu_ptr+1,X
     863/    D24E : A1 0A                                       LDA (emu_ptr,X)
     863/    D250 : 95 0C                                       STA emu_ptr2,X
     863/    D252 : F6 0A                                       INC emu_ptr,X
     863/    D254 : 90 02                                       BCC .skip
     863/    D256 : F6 0B                                               INC emu_ptr+1,X
     863/    D258 :                                             .skip:
     863/    D258 : A1 0A                                       LDA (emu_ptr,X)
     863/    D25A : 95 0D                                       STA emu_ptr2+1,X
     863/    D25C : 7C 0C 00                                    JMP (emu_ptr2,X)
     864/    D25F :                     
     865/    D25F :                     	;0x9A - TXS IMP
     866/    D25F :                     	TXS_IMP:
     867/    D25F : (MACRO)             		OP_MACRO 154, "TXS", "IMP", "TXS_IMP"
     867/    D25F :                                             ;TODO
     868/    D25F : (MACRO)             		NEXT_MACRO
     868/    D25F :                                             ;Could also copy X to Y before NEXT then restore after jump
     868/    D25F :                                             
     868/    D25F :  (MACRO-2)                                  halt
     868/    D25F : 00                                  BRK
     868/    D260 : 00                                  BRK
     868/    D261 :                                             
     868/    D261 :                                             ;Jump table must be page aligned!!!
     868/    D261 : A1 02                                       LDA (emu_PC,X)
     868/    D263 : 0A                                          ASL
     868/    D264 : 95 0A                                       STA emu_ptr,X
     868/    D266 : A9 DF                                       LDA #hi(JUMP_TABLE)
     868/    D268 : 69 00                                       ADC #0
     868/    D26A : 95 0B                                       STA emu_ptr+1,X
     868/    D26C : A1 0A                                       LDA (emu_ptr,X)
     868/    D26E : 95 0C                                       STA emu_ptr2,X
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 77 - 1/5/2022 1:27:48


     868/    D270 : F6 0A                                       INC emu_ptr,X
     868/    D272 : 90 02                                       BCC .skip
     868/    D274 : F6 0B                                               INC emu_ptr+1,X
     868/    D276 :                                             .skip:
     868/    D276 : A1 0A                                       LDA (emu_ptr,X)
     868/    D278 : 95 0D                                       STA emu_ptr2+1,X
     868/    D27A : 7C 0C 00                                    JMP (emu_ptr2,X)
     869/    D27D :                     
     870/    D27D :                     	;0x9B - NOP
     871/    D27D :                     	NOP_0x9B:
     872/    D27D : (MACRO)             		OP_MACRO 155, "NOP", "IMP", "NOP_0x9B"
     872/    D27D :                                             ;TODO
     873/    D27D : (MACRO)             		NEXT_MACRO
     873/    D27D :                                             ;Could also copy X to Y before NEXT then restore after jump
     873/    D27D :                                             
     873/    D27D :  (MACRO-2)                                  halt
     873/    D27D : 00                                  BRK
     873/    D27E : 00                                  BRK
     873/    D27F :                                             
     873/    D27F :                                             ;Jump table must be page aligned!!!
     873/    D27F : A1 02                                       LDA (emu_PC,X)
     873/    D281 : 0A                                          ASL
     873/    D282 : 95 0A                                       STA emu_ptr,X
     873/    D284 : A9 DF                                       LDA #hi(JUMP_TABLE)
     873/    D286 : 69 00                                       ADC #0
     873/    D288 : 95 0B                                       STA emu_ptr+1,X
     873/    D28A : A1 0A                                       LDA (emu_ptr,X)
     873/    D28C : 95 0C                                       STA emu_ptr2,X
     873/    D28E : F6 0A                                       INC emu_ptr,X
     873/    D290 : 90 02                                       BCC .skip
     873/    D292 : F6 0B                                               INC emu_ptr+1,X
     873/    D294 :                                             .skip:
     873/    D294 : A1 0A                                       LDA (emu_ptr,X)
     873/    D296 : 95 0D                                       STA emu_ptr2+1,X
     873/    D298 : 7C 0C 00                                    JMP (emu_ptr2,X)
     874/    D29B :                     
     875/    D29B :                     	;0x9C - NOP
     876/    D29B :                     	NOP_0x9C:
     877/    D29B : (MACRO)             		OP_MACRO 156, "NOP", "IMP", "NOP_0x9C"
     877/    D29B :                                             ;TODO
     878/    D29B : (MACRO)             		NEXT_MACRO
     878/    D29B :                                             ;Could also copy X to Y before NEXT then restore after jump
     878/    D29B :                                             
     878/    D29B :  (MACRO-2)                                  halt
     878/    D29B : 00                                  BRK
     878/    D29C : 00                                  BRK
     878/    D29D :                                             
     878/    D29D :                                             ;Jump table must be page aligned!!!
     878/    D29D : A1 02                                       LDA (emu_PC,X)
     878/    D29F : 0A                                          ASL
     878/    D2A0 : 95 0A                                       STA emu_ptr,X
     878/    D2A2 : A9 DF                                       LDA #hi(JUMP_TABLE)
     878/    D2A4 : 69 00                                       ADC #0
     878/    D2A6 : 95 0B                                       STA emu_ptr+1,X
     878/    D2A8 : A1 0A                                       LDA (emu_ptr,X)
     878/    D2AA : 95 0C                                       STA emu_ptr2,X
     878/    D2AC : F6 0A                                       INC emu_ptr,X
     878/    D2AE : 90 02                                       BCC .skip
     878/    D2B0 : F6 0B                                               INC emu_ptr+1,X
     878/    D2B2 :                                             .skip:
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 78 - 1/5/2022 1:27:48


     878/    D2B2 : A1 0A                                       LDA (emu_ptr,X)
     878/    D2B4 : 95 0D                                       STA emu_ptr2+1,X
     878/    D2B6 : 7C 0C 00                                    JMP (emu_ptr2,X)
     879/    D2B9 :                     
     880/    D2B9 :                     	;0x9D - STA ABSX
     881/    D2B9 :                     	STA_ABSX:
     882/    D2B9 : (MACRO)             		OP_MACRO 157, "STA", "ABSX", "STA_ABSX"
     882/    D2B9 :                                             ;TODO
     883/    D2B9 : (MACRO)             		NEXT_MACRO
     883/    D2B9 :                                             ;Could also copy X to Y before NEXT then restore after jump
     883/    D2B9 :                                             
     883/    D2B9 :  (MACRO-2)                                  halt
     883/    D2B9 : 00                                  BRK
     883/    D2BA : 00                                  BRK
     883/    D2BB :                                             
     883/    D2BB :                                             ;Jump table must be page aligned!!!
     883/    D2BB : A1 02                                       LDA (emu_PC,X)
     883/    D2BD : 0A                                          ASL
     883/    D2BE : 95 0A                                       STA emu_ptr,X
     883/    D2C0 : A9 DF                                       LDA #hi(JUMP_TABLE)
     883/    D2C2 : 69 00                                       ADC #0
     883/    D2C4 : 95 0B                                       STA emu_ptr+1,X
     883/    D2C6 : A1 0A                                       LDA (emu_ptr,X)
     883/    D2C8 : 95 0C                                       STA emu_ptr2,X
     883/    D2CA : F6 0A                                       INC emu_ptr,X
     883/    D2CC : 90 02                                       BCC .skip
     883/    D2CE : F6 0B                                               INC emu_ptr+1,X
     883/    D2D0 :                                             .skip:
     883/    D2D0 : A1 0A                                       LDA (emu_ptr,X)
     883/    D2D2 : 95 0D                                       STA emu_ptr2+1,X
     883/    D2D4 : 7C 0C 00                                    JMP (emu_ptr2,X)
     884/    D2D7 :                     
     885/    D2D7 :                     	;0x9E - NOP
     886/    D2D7 :                     	NOP_0x9E:
     887/    D2D7 : (MACRO)             		OP_MACRO 158, "NOP", "IMP", "NOP_0x9E"
     887/    D2D7 :                                             ;TODO
     888/    D2D7 : (MACRO)             		NEXT_MACRO
     888/    D2D7 :                                             ;Could also copy X to Y before NEXT then restore after jump
     888/    D2D7 :                                             
     888/    D2D7 :  (MACRO-2)                                  halt
     888/    D2D7 : 00                                  BRK
     888/    D2D8 : 00                                  BRK
     888/    D2D9 :                                             
     888/    D2D9 :                                             ;Jump table must be page aligned!!!
     888/    D2D9 : A1 02                                       LDA (emu_PC,X)
     888/    D2DB : 0A                                          ASL
     888/    D2DC : 95 0A                                       STA emu_ptr,X
     888/    D2DE : A9 DF                                       LDA #hi(JUMP_TABLE)
     888/    D2E0 : 69 00                                       ADC #0
     888/    D2E2 : 95 0B                                       STA emu_ptr+1,X
     888/    D2E4 : A1 0A                                       LDA (emu_ptr,X)
     888/    D2E6 : 95 0C                                       STA emu_ptr2,X
     888/    D2E8 : F6 0A                                       INC emu_ptr,X
     888/    D2EA : 90 02                                       BCC .skip
     888/    D2EC : F6 0B                                               INC emu_ptr+1,X
     888/    D2EE :                                             .skip:
     888/    D2EE : A1 0A                                       LDA (emu_ptr,X)
     888/    D2F0 : 95 0D                                       STA emu_ptr2+1,X
     888/    D2F2 : 7C 0C 00                                    JMP (emu_ptr2,X)
     889/    D2F5 :                     
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 79 - 1/5/2022 1:27:48


     890/    D2F5 :                     	;0x9F - NOP
     891/    D2F5 :                     	NOP_0x9F:
     892/    D2F5 : (MACRO)             		OP_MACRO 159, "NOP", "IMP", "NOP_0x9F"
     892/    D2F5 :                                             ;TODO
     893/    D2F5 : (MACRO)             		NEXT_MACRO
     893/    D2F5 :                                             ;Could also copy X to Y before NEXT then restore after jump
     893/    D2F5 :                                             
     893/    D2F5 :  (MACRO-2)                                  halt
     893/    D2F5 : 00                                  BRK
     893/    D2F6 : 00                                  BRK
     893/    D2F7 :                                             
     893/    D2F7 :                                             ;Jump table must be page aligned!!!
     893/    D2F7 : A1 02                                       LDA (emu_PC,X)
     893/    D2F9 : 0A                                          ASL
     893/    D2FA : 95 0A                                       STA emu_ptr,X
     893/    D2FC : A9 DF                                       LDA #hi(JUMP_TABLE)
     893/    D2FE : 69 00                                       ADC #0
     893/    D300 : 95 0B                                       STA emu_ptr+1,X
     893/    D302 : A1 0A                                       LDA (emu_ptr,X)
     893/    D304 : 95 0C                                       STA emu_ptr2,X
     893/    D306 : F6 0A                                       INC emu_ptr,X
     893/    D308 : 90 02                                       BCC .skip
     893/    D30A : F6 0B                                               INC emu_ptr+1,X
     893/    D30C :                                             .skip:
     893/    D30C : A1 0A                                       LDA (emu_ptr,X)
     893/    D30E : 95 0D                                       STA emu_ptr2+1,X
     893/    D310 : 7C 0C 00                                    JMP (emu_ptr2,X)
     894/    D313 :                     
     895/    D313 :                     	;0xA0 - LDY IMMED
     896/    D313 :                     	LDY_IMMED:
     897/    D313 : (MACRO)             		OP_MACRO 160, "LDY", "IMMED", "LDY_IMMED"
     897/    D313 :                                             ;TODO
     898/    D313 : (MACRO)             		NEXT_MACRO
     898/    D313 :                                             ;Could also copy X to Y before NEXT then restore after jump
     898/    D313 :                                             
     898/    D313 :  (MACRO-2)                                  halt
     898/    D313 : 00                                  BRK
     898/    D314 : 00                                  BRK
     898/    D315 :                                             
     898/    D315 :                                             ;Jump table must be page aligned!!!
     898/    D315 : A1 02                                       LDA (emu_PC,X)
     898/    D317 : 0A                                          ASL
     898/    D318 : 95 0A                                       STA emu_ptr,X
     898/    D31A : A9 DF                                       LDA #hi(JUMP_TABLE)
     898/    D31C : 69 00                                       ADC #0
     898/    D31E : 95 0B                                       STA emu_ptr+1,X
     898/    D320 : A1 0A                                       LDA (emu_ptr,X)
     898/    D322 : 95 0C                                       STA emu_ptr2,X
     898/    D324 : F6 0A                                       INC emu_ptr,X
     898/    D326 : 90 02                                       BCC .skip
     898/    D328 : F6 0B                                               INC emu_ptr+1,X
     898/    D32A :                                             .skip:
     898/    D32A : A1 0A                                       LDA (emu_ptr,X)
     898/    D32C : 95 0D                                       STA emu_ptr2+1,X
     898/    D32E : 7C 0C 00                                    JMP (emu_ptr2,X)
     899/    D331 :                     
     900/    D331 :                     	;0xA1 - LDA IX
     901/    D331 :                     	LDA_IX:
     902/    D331 : (MACRO)             		OP_MACRO 161, "LDA", "IX", "LDA_IX"
     902/    D331 :                                             ;TODO
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 80 - 1/5/2022 1:27:48


     903/    D331 : (MACRO)             		NEXT_MACRO
     903/    D331 :                                             ;Could also copy X to Y before NEXT then restore after jump
     903/    D331 :                                             
     903/    D331 :  (MACRO-2)                                  halt
     903/    D331 : 00                                  BRK
     903/    D332 : 00                                  BRK
     903/    D333 :                                             
     903/    D333 :                                             ;Jump table must be page aligned!!!
     903/    D333 : A1 02                                       LDA (emu_PC,X)
     903/    D335 : 0A                                          ASL
     903/    D336 : 95 0A                                       STA emu_ptr,X
     903/    D338 : A9 DF                                       LDA #hi(JUMP_TABLE)
     903/    D33A : 69 00                                       ADC #0
     903/    D33C : 95 0B                                       STA emu_ptr+1,X
     903/    D33E : A1 0A                                       LDA (emu_ptr,X)
     903/    D340 : 95 0C                                       STA emu_ptr2,X
     903/    D342 : F6 0A                                       INC emu_ptr,X
     903/    D344 : 90 02                                       BCC .skip
     903/    D346 : F6 0B                                               INC emu_ptr+1,X
     903/    D348 :                                             .skip:
     903/    D348 : A1 0A                                       LDA (emu_ptr,X)
     903/    D34A : 95 0D                                       STA emu_ptr2+1,X
     903/    D34C : 7C 0C 00                                    JMP (emu_ptr2,X)
     904/    D34F :                     
     905/    D34F :                     	;0xA2 - LDX IMMED
     906/    D34F :                     	LDX_IMMED:
     907/    D34F : (MACRO)             		OP_MACRO 162, "LDX", "IMMED", "LDX_IMMED"
     907/    D34F :                                             ;TODO
     908/    D34F : (MACRO)             		NEXT_MACRO
     908/    D34F :                                             ;Could also copy X to Y before NEXT then restore after jump
     908/    D34F :                                             
     908/    D34F :  (MACRO-2)                                  halt
     908/    D34F : 00                                  BRK
     908/    D350 : 00                                  BRK
     908/    D351 :                                             
     908/    D351 :                                             ;Jump table must be page aligned!!!
     908/    D351 : A1 02                                       LDA (emu_PC,X)
     908/    D353 : 0A                                          ASL
     908/    D354 : 95 0A                                       STA emu_ptr,X
     908/    D356 : A9 DF                                       LDA #hi(JUMP_TABLE)
     908/    D358 : 69 00                                       ADC #0
     908/    D35A : 95 0B                                       STA emu_ptr+1,X
     908/    D35C : A1 0A                                       LDA (emu_ptr,X)
     908/    D35E : 95 0C                                       STA emu_ptr2,X
     908/    D360 : F6 0A                                       INC emu_ptr,X
     908/    D362 : 90 02                                       BCC .skip
     908/    D364 : F6 0B                                               INC emu_ptr+1,X
     908/    D366 :                                             .skip:
     908/    D366 : A1 0A                                       LDA (emu_ptr,X)
     908/    D368 : 95 0D                                       STA emu_ptr2+1,X
     908/    D36A : 7C 0C 00                                    JMP (emu_ptr2,X)
     909/    D36D :                     
     910/    D36D :                     	;0xA3 - NOP
     911/    D36D :                     	NOP_0xA3:
     912/    D36D : (MACRO)             		OP_MACRO 163, "NOP", "IMP", "NOP_0xA3"
     912/    D36D :                                             ;TODO
     913/    D36D : (MACRO)             		NEXT_MACRO
     913/    D36D :                                             ;Could also copy X to Y before NEXT then restore after jump
     913/    D36D :                                             
     913/    D36D :  (MACRO-2)                                  halt
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 81 - 1/5/2022 1:27:48


     913/    D36D : 00                                  BRK
     913/    D36E : 00                                  BRK
     913/    D36F :                                             
     913/    D36F :                                             ;Jump table must be page aligned!!!
     913/    D36F : A1 02                                       LDA (emu_PC,X)
     913/    D371 : 0A                                          ASL
     913/    D372 : 95 0A                                       STA emu_ptr,X
     913/    D374 : A9 DF                                       LDA #hi(JUMP_TABLE)
     913/    D376 : 69 00                                       ADC #0
     913/    D378 : 95 0B                                       STA emu_ptr+1,X
     913/    D37A : A1 0A                                       LDA (emu_ptr,X)
     913/    D37C : 95 0C                                       STA emu_ptr2,X
     913/    D37E : F6 0A                                       INC emu_ptr,X
     913/    D380 : 90 02                                       BCC .skip
     913/    D382 : F6 0B                                               INC emu_ptr+1,X
     913/    D384 :                                             .skip:
     913/    D384 : A1 0A                                       LDA (emu_ptr,X)
     913/    D386 : 95 0D                                       STA emu_ptr2+1,X
     913/    D388 : 7C 0C 00                                    JMP (emu_ptr2,X)
     914/    D38B :                     
     915/    D38B :                     	;0xA4 - LDY ZP
     916/    D38B :                     	LDY_ZP:
     917/    D38B : (MACRO)             		OP_MACRO 164, "LDY", "ZP", "LDY_ZP"
     917/    D38B :                                             ;TODO
     918/    D38B : (MACRO)             		NEXT_MACRO
     918/    D38B :                                             ;Could also copy X to Y before NEXT then restore after jump
     918/    D38B :                                             
     918/    D38B :  (MACRO-2)                                  halt
     918/    D38B : 00                                  BRK
     918/    D38C : 00                                  BRK
     918/    D38D :                                             
     918/    D38D :                                             ;Jump table must be page aligned!!!
     918/    D38D : A1 02                                       LDA (emu_PC,X)
     918/    D38F : 0A                                          ASL
     918/    D390 : 95 0A                                       STA emu_ptr,X
     918/    D392 : A9 DF                                       LDA #hi(JUMP_TABLE)
     918/    D394 : 69 00                                       ADC #0
     918/    D396 : 95 0B                                       STA emu_ptr+1,X
     918/    D398 : A1 0A                                       LDA (emu_ptr,X)
     918/    D39A : 95 0C                                       STA emu_ptr2,X
     918/    D39C : F6 0A                                       INC emu_ptr,X
     918/    D39E : 90 02                                       BCC .skip
     918/    D3A0 : F6 0B                                               INC emu_ptr+1,X
     918/    D3A2 :                                             .skip:
     918/    D3A2 : A1 0A                                       LDA (emu_ptr,X)
     918/    D3A4 : 95 0D                                       STA emu_ptr2+1,X
     918/    D3A6 : 7C 0C 00                                    JMP (emu_ptr2,X)
     919/    D3A9 :                     
     920/    D3A9 :                     	;0xA5 - LDA ZP
     921/    D3A9 :                     	LDA_ZP:
     922/    D3A9 : (MACRO)             		OP_MACRO 165, "LDA", "ZP", "LDA_ZP"
     922/    D3A9 :                                             ;TODO
     923/    D3A9 : (MACRO)             		NEXT_MACRO
     923/    D3A9 :                                             ;Could also copy X to Y before NEXT then restore after jump
     923/    D3A9 :                                             
     923/    D3A9 :  (MACRO-2)                                  halt
     923/    D3A9 : 00                                  BRK
     923/    D3AA : 00                                  BRK
     923/    D3AB :                                             
     923/    D3AB :                                             ;Jump table must be page aligned!!!
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 82 - 1/5/2022 1:27:48


     923/    D3AB : A1 02                                       LDA (emu_PC,X)
     923/    D3AD : 0A                                          ASL
     923/    D3AE : 95 0A                                       STA emu_ptr,X
     923/    D3B0 : A9 DF                                       LDA #hi(JUMP_TABLE)
     923/    D3B2 : 69 00                                       ADC #0
     923/    D3B4 : 95 0B                                       STA emu_ptr+1,X
     923/    D3B6 : A1 0A                                       LDA (emu_ptr,X)
     923/    D3B8 : 95 0C                                       STA emu_ptr2,X
     923/    D3BA : F6 0A                                       INC emu_ptr,X
     923/    D3BC : 90 02                                       BCC .skip
     923/    D3BE : F6 0B                                               INC emu_ptr+1,X
     923/    D3C0 :                                             .skip:
     923/    D3C0 : A1 0A                                       LDA (emu_ptr,X)
     923/    D3C2 : 95 0D                                       STA emu_ptr2+1,X
     923/    D3C4 : 7C 0C 00                                    JMP (emu_ptr2,X)
     924/    D3C7 :                     
     925/    D3C7 :                     	;0xA6 - LDX ZP
     926/    D3C7 :                     	LDX_ZP:
     927/    D3C7 : (MACRO)             		OP_MACRO 166, "LDX", "ZP", "LDX_ZP"
     927/    D3C7 :                                             ;TODO
     928/    D3C7 : (MACRO)             		NEXT_MACRO
     928/    D3C7 :                                             ;Could also copy X to Y before NEXT then restore after jump
     928/    D3C7 :                                             
     928/    D3C7 :  (MACRO-2)                                  halt
     928/    D3C7 : 00                                  BRK
     928/    D3C8 : 00                                  BRK
     928/    D3C9 :                                             
     928/    D3C9 :                                             ;Jump table must be page aligned!!!
     928/    D3C9 : A1 02                                       LDA (emu_PC,X)
     928/    D3CB : 0A                                          ASL
     928/    D3CC : 95 0A                                       STA emu_ptr,X
     928/    D3CE : A9 DF                                       LDA #hi(JUMP_TABLE)
     928/    D3D0 : 69 00                                       ADC #0
     928/    D3D2 : 95 0B                                       STA emu_ptr+1,X
     928/    D3D4 : A1 0A                                       LDA (emu_ptr,X)
     928/    D3D6 : 95 0C                                       STA emu_ptr2,X
     928/    D3D8 : F6 0A                                       INC emu_ptr,X
     928/    D3DA : 90 02                                       BCC .skip
     928/    D3DC : F6 0B                                               INC emu_ptr+1,X
     928/    D3DE :                                             .skip:
     928/    D3DE : A1 0A                                       LDA (emu_ptr,X)
     928/    D3E0 : 95 0D                                       STA emu_ptr2+1,X
     928/    D3E2 : 7C 0C 00                                    JMP (emu_ptr2,X)
     929/    D3E5 :                     
     930/    D3E5 :                     	;0xA7 - NOP
     931/    D3E5 :                     	NOP_0xA7:
     932/    D3E5 : (MACRO)             		OP_MACRO 167, "NOP", "IMP", "NOP_0xA7"
     932/    D3E5 :                                             ;TODO
     933/    D3E5 : (MACRO)             		NEXT_MACRO
     933/    D3E5 :                                             ;Could also copy X to Y before NEXT then restore after jump
     933/    D3E5 :                                             
     933/    D3E5 :  (MACRO-2)                                  halt
     933/    D3E5 : 00                                  BRK
     933/    D3E6 : 00                                  BRK
     933/    D3E7 :                                             
     933/    D3E7 :                                             ;Jump table must be page aligned!!!
     933/    D3E7 : A1 02                                       LDA (emu_PC,X)
     933/    D3E9 : 0A                                          ASL
     933/    D3EA : 95 0A                                       STA emu_ptr,X
     933/    D3EC : A9 DF                                       LDA #hi(JUMP_TABLE)
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 83 - 1/5/2022 1:27:48


     933/    D3EE : 69 00                                       ADC #0
     933/    D3F0 : 95 0B                                       STA emu_ptr+1,X
     933/    D3F2 : A1 0A                                       LDA (emu_ptr,X)
     933/    D3F4 : 95 0C                                       STA emu_ptr2,X
     933/    D3F6 : F6 0A                                       INC emu_ptr,X
     933/    D3F8 : 90 02                                       BCC .skip
     933/    D3FA : F6 0B                                               INC emu_ptr+1,X
     933/    D3FC :                                             .skip:
     933/    D3FC : A1 0A                                       LDA (emu_ptr,X)
     933/    D3FE : 95 0D                                       STA emu_ptr2+1,X
     933/    D400 : 7C 0C 00                                    JMP (emu_ptr2,X)
     934/    D403 :                     
     935/    D403 :                     	;0xA8 - TAY IMP
     936/    D403 :                     	TAY_IMP:
     937/    D403 : (MACRO)             		OP_MACRO 168, "TAY", "IMP", "TAY_IMP"
     937/    D403 :                                             ;TODO
     938/    D403 : (MACRO)             		NEXT_MACRO
     938/    D403 :                                             ;Could also copy X to Y before NEXT then restore after jump
     938/    D403 :                                             
     938/    D403 :  (MACRO-2)                                  halt
     938/    D403 : 00                                  BRK
     938/    D404 : 00                                  BRK
     938/    D405 :                                             
     938/    D405 :                                             ;Jump table must be page aligned!!!
     938/    D405 : A1 02                                       LDA (emu_PC,X)
     938/    D407 : 0A                                          ASL
     938/    D408 : 95 0A                                       STA emu_ptr,X
     938/    D40A : A9 DF                                       LDA #hi(JUMP_TABLE)
     938/    D40C : 69 00                                       ADC #0
     938/    D40E : 95 0B                                       STA emu_ptr+1,X
     938/    D410 : A1 0A                                       LDA (emu_ptr,X)
     938/    D412 : 95 0C                                       STA emu_ptr2,X
     938/    D414 : F6 0A                                       INC emu_ptr,X
     938/    D416 : 90 02                                       BCC .skip
     938/    D418 : F6 0B                                               INC emu_ptr+1,X
     938/    D41A :                                             .skip:
     938/    D41A : A1 0A                                       LDA (emu_ptr,X)
     938/    D41C : 95 0D                                       STA emu_ptr2+1,X
     938/    D41E : 7C 0C 00                                    JMP (emu_ptr2,X)
     939/    D421 :                     
     940/    D421 :                     	;0xA9 - LDA IMMED
     941/    D421 :                     	LDA_IMMED:
     942/    D421 : (MACRO)             		OP_MACRO 169, "LDA", "IMMED", "LDA_IMMED"
     942/    D421 :                                             ;TODO
     943/    D421 : A9 23               		LDA #$23
     944/    D423 : (MACRO)             		NEXT_MACRO
     944/    D423 :                                             ;Could also copy X to Y before NEXT then restore after jump
     944/    D423 :                                             
     944/    D423 :  (MACRO-2)                                  halt
     944/    D423 : 00                                  BRK
     944/    D424 : 00                                  BRK
     944/    D425 :                                             
     944/    D425 :                                             ;Jump table must be page aligned!!!
     944/    D425 : A1 02                                       LDA (emu_PC,X)
     944/    D427 : 0A                                          ASL
     944/    D428 : 95 0A                                       STA emu_ptr,X
     944/    D42A : A9 DF                                       LDA #hi(JUMP_TABLE)
     944/    D42C : 69 00                                       ADC #0
     944/    D42E : 95 0B                                       STA emu_ptr+1,X
     944/    D430 : A1 0A                                       LDA (emu_ptr,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 84 - 1/5/2022 1:27:48


     944/    D432 : 95 0C                                       STA emu_ptr2,X
     944/    D434 : F6 0A                                       INC emu_ptr,X
     944/    D436 : 90 02                                       BCC .skip
     944/    D438 : F6 0B                                               INC emu_ptr+1,X
     944/    D43A :                                             .skip:
     944/    D43A : A1 0A                                       LDA (emu_ptr,X)
     944/    D43C : 95 0D                                       STA emu_ptr2+1,X
     944/    D43E : 7C 0C 00                                    JMP (emu_ptr2,X)
     945/    D441 :                     
     946/    D441 :                     	;0xAA - TAX IMP
     947/    D441 :                     	TAX_IMP:
     948/    D441 : (MACRO)             		OP_MACRO 170, "TAX", "IMP", "TAX_IMP"
     948/    D441 :                                             ;TODO
     949/    D441 : (MACRO)             		NEXT_MACRO
     949/    D441 :                                             ;Could also copy X to Y before NEXT then restore after jump
     949/    D441 :                                             
     949/    D441 :  (MACRO-2)                                  halt
     949/    D441 : 00                                  BRK
     949/    D442 : 00                                  BRK
     949/    D443 :                                             
     949/    D443 :                                             ;Jump table must be page aligned!!!
     949/    D443 : A1 02                                       LDA (emu_PC,X)
     949/    D445 : 0A                                          ASL
     949/    D446 : 95 0A                                       STA emu_ptr,X
     949/    D448 : A9 DF                                       LDA #hi(JUMP_TABLE)
     949/    D44A : 69 00                                       ADC #0
     949/    D44C : 95 0B                                       STA emu_ptr+1,X
     949/    D44E : A1 0A                                       LDA (emu_ptr,X)
     949/    D450 : 95 0C                                       STA emu_ptr2,X
     949/    D452 : F6 0A                                       INC emu_ptr,X
     949/    D454 : 90 02                                       BCC .skip
     949/    D456 : F6 0B                                               INC emu_ptr+1,X
     949/    D458 :                                             .skip:
     949/    D458 : A1 0A                                       LDA (emu_ptr,X)
     949/    D45A : 95 0D                                       STA emu_ptr2+1,X
     949/    D45C : 7C 0C 00                                    JMP (emu_ptr2,X)
     950/    D45F :                     
     951/    D45F :                     	;0xAB - NOP
     952/    D45F :                     	NOP_0xAB:
     953/    D45F : (MACRO)             		OP_MACRO 171, "NOP", "IMP", "NOP_0xAB"
     953/    D45F :                                             ;TODO
     954/    D45F : (MACRO)             		NEXT_MACRO
     954/    D45F :                                             ;Could also copy X to Y before NEXT then restore after jump
     954/    D45F :                                             
     954/    D45F :  (MACRO-2)                                  halt
     954/    D45F : 00                                  BRK
     954/    D460 : 00                                  BRK
     954/    D461 :                                             
     954/    D461 :                                             ;Jump table must be page aligned!!!
     954/    D461 : A1 02                                       LDA (emu_PC,X)
     954/    D463 : 0A                                          ASL
     954/    D464 : 95 0A                                       STA emu_ptr,X
     954/    D466 : A9 DF                                       LDA #hi(JUMP_TABLE)
     954/    D468 : 69 00                                       ADC #0
     954/    D46A : 95 0B                                       STA emu_ptr+1,X
     954/    D46C : A1 0A                                       LDA (emu_ptr,X)
     954/    D46E : 95 0C                                       STA emu_ptr2,X
     954/    D470 : F6 0A                                       INC emu_ptr,X
     954/    D472 : 90 02                                       BCC .skip
     954/    D474 : F6 0B                                               INC emu_ptr+1,X
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 85 - 1/5/2022 1:27:48


     954/    D476 :                                             .skip:
     954/    D476 : A1 0A                                       LDA (emu_ptr,X)
     954/    D478 : 95 0D                                       STA emu_ptr2+1,X
     954/    D47A : 7C 0C 00                                    JMP (emu_ptr2,X)
     955/    D47D :                     
     956/    D47D :                     	;0xAC - LDY ABS
     957/    D47D :                     	LDY_ABS:
     958/    D47D : (MACRO)             		OP_MACRO 172, "LDY", "ABS", "LDY_ABS"
     958/    D47D :                                             ;TODO
     959/    D47D : (MACRO)             		NEXT_MACRO
     959/    D47D :                                             ;Could also copy X to Y before NEXT then restore after jump
     959/    D47D :                                             
     959/    D47D :  (MACRO-2)                                  halt
     959/    D47D : 00                                  BRK
     959/    D47E : 00                                  BRK
     959/    D47F :                                             
     959/    D47F :                                             ;Jump table must be page aligned!!!
     959/    D47F : A1 02                                       LDA (emu_PC,X)
     959/    D481 : 0A                                          ASL
     959/    D482 : 95 0A                                       STA emu_ptr,X
     959/    D484 : A9 DF                                       LDA #hi(JUMP_TABLE)
     959/    D486 : 69 00                                       ADC #0
     959/    D488 : 95 0B                                       STA emu_ptr+1,X
     959/    D48A : A1 0A                                       LDA (emu_ptr,X)
     959/    D48C : 95 0C                                       STA emu_ptr2,X
     959/    D48E : F6 0A                                       INC emu_ptr,X
     959/    D490 : 90 02                                       BCC .skip
     959/    D492 : F6 0B                                               INC emu_ptr+1,X
     959/    D494 :                                             .skip:
     959/    D494 : A1 0A                                       LDA (emu_ptr,X)
     959/    D496 : 95 0D                                       STA emu_ptr2+1,X
     959/    D498 : 7C 0C 00                                    JMP (emu_ptr2,X)
     960/    D49B :                     
     961/    D49B :                     	;0xAD - LDA ABS
     962/    D49B :                     	LDA_ABS:
     963/    D49B : (MACRO)             		OP_MACRO 173, "LDA", "ABS", "LDA_ABS"
     963/    D49B :                                             ;TODO
     964/    D49B : (MACRO)             		NEXT_MACRO
     964/    D49B :                                             ;Could also copy X to Y before NEXT then restore after jump
     964/    D49B :                                             
     964/    D49B :  (MACRO-2)                                  halt
     964/    D49B : 00                                  BRK
     964/    D49C : 00                                  BRK
     964/    D49D :                                             
     964/    D49D :                                             ;Jump table must be page aligned!!!
     964/    D49D : A1 02                                       LDA (emu_PC,X)
     964/    D49F : 0A                                          ASL
     964/    D4A0 : 95 0A                                       STA emu_ptr,X
     964/    D4A2 : A9 DF                                       LDA #hi(JUMP_TABLE)
     964/    D4A4 : 69 00                                       ADC #0
     964/    D4A6 : 95 0B                                       STA emu_ptr+1,X
     964/    D4A8 : A1 0A                                       LDA (emu_ptr,X)
     964/    D4AA : 95 0C                                       STA emu_ptr2,X
     964/    D4AC : F6 0A                                       INC emu_ptr,X
     964/    D4AE : 90 02                                       BCC .skip
     964/    D4B0 : F6 0B                                               INC emu_ptr+1,X
     964/    D4B2 :                                             .skip:
     964/    D4B2 : A1 0A                                       LDA (emu_ptr,X)
     964/    D4B4 : 95 0D                                       STA emu_ptr2+1,X
     964/    D4B6 : 7C 0C 00                                    JMP (emu_ptr2,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 86 - 1/5/2022 1:27:48


     965/    D4B9 :                     
     966/    D4B9 :                     	;0xAE - LDX ABS
     967/    D4B9 :                     	LDX_ABS:
     968/    D4B9 : (MACRO)             		OP_MACRO 174, "LDX", "ABS", "LDX_ABS"
     968/    D4B9 :                                             ;TODO
     969/    D4B9 : (MACRO)             		NEXT_MACRO
     969/    D4B9 :                                             ;Could also copy X to Y before NEXT then restore after jump
     969/    D4B9 :                                             
     969/    D4B9 :  (MACRO-2)                                  halt
     969/    D4B9 : 00                                  BRK
     969/    D4BA : 00                                  BRK
     969/    D4BB :                                             
     969/    D4BB :                                             ;Jump table must be page aligned!!!
     969/    D4BB : A1 02                                       LDA (emu_PC,X)
     969/    D4BD : 0A                                          ASL
     969/    D4BE : 95 0A                                       STA emu_ptr,X
     969/    D4C0 : A9 DF                                       LDA #hi(JUMP_TABLE)
     969/    D4C2 : 69 00                                       ADC #0
     969/    D4C4 : 95 0B                                       STA emu_ptr+1,X
     969/    D4C6 : A1 0A                                       LDA (emu_ptr,X)
     969/    D4C8 : 95 0C                                       STA emu_ptr2,X
     969/    D4CA : F6 0A                                       INC emu_ptr,X
     969/    D4CC : 90 02                                       BCC .skip
     969/    D4CE : F6 0B                                               INC emu_ptr+1,X
     969/    D4D0 :                                             .skip:
     969/    D4D0 : A1 0A                                       LDA (emu_ptr,X)
     969/    D4D2 : 95 0D                                       STA emu_ptr2+1,X
     969/    D4D4 : 7C 0C 00                                    JMP (emu_ptr2,X)
     970/    D4D7 :                     
     971/    D4D7 :                     	;0xAF - NOP
     972/    D4D7 :                     	NOP_0xAF:
     973/    D4D7 : (MACRO)             		OP_MACRO 175, "NOP", "IMP", "NOP_0xAF"
     973/    D4D7 :                                             ;TODO
     974/    D4D7 : (MACRO)             		NEXT_MACRO
     974/    D4D7 :                                             ;Could also copy X to Y before NEXT then restore after jump
     974/    D4D7 :                                             
     974/    D4D7 :  (MACRO-2)                                  halt
     974/    D4D7 : 00                                  BRK
     974/    D4D8 : 00                                  BRK
     974/    D4D9 :                                             
     974/    D4D9 :                                             ;Jump table must be page aligned!!!
     974/    D4D9 : A1 02                                       LDA (emu_PC,X)
     974/    D4DB : 0A                                          ASL
     974/    D4DC : 95 0A                                       STA emu_ptr,X
     974/    D4DE : A9 DF                                       LDA #hi(JUMP_TABLE)
     974/    D4E0 : 69 00                                       ADC #0
     974/    D4E2 : 95 0B                                       STA emu_ptr+1,X
     974/    D4E4 : A1 0A                                       LDA (emu_ptr,X)
     974/    D4E6 : 95 0C                                       STA emu_ptr2,X
     974/    D4E8 : F6 0A                                       INC emu_ptr,X
     974/    D4EA : 90 02                                       BCC .skip
     974/    D4EC : F6 0B                                               INC emu_ptr+1,X
     974/    D4EE :                                             .skip:
     974/    D4EE : A1 0A                                       LDA (emu_ptr,X)
     974/    D4F0 : 95 0D                                       STA emu_ptr2+1,X
     974/    D4F2 : 7C 0C 00                                    JMP (emu_ptr2,X)
     975/    D4F5 :                     
     976/    D4F5 :                     	;0xB0 - BCS REL
     977/    D4F5 :                     	BCS_REL:
     978/    D4F5 : (MACRO)             		OP_MACRO 176, "BCS", "REL", "BCS_REL"
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 87 - 1/5/2022 1:27:48


     978/    D4F5 :                                             ;TODO
     979/    D4F5 : (MACRO)             		NEXT_MACRO
     979/    D4F5 :                                             ;Could also copy X to Y before NEXT then restore after jump
     979/    D4F5 :                                             
     979/    D4F5 :  (MACRO-2)                                  halt
     979/    D4F5 : 00                                  BRK
     979/    D4F6 : 00                                  BRK
     979/    D4F7 :                                             
     979/    D4F7 :                                             ;Jump table must be page aligned!!!
     979/    D4F7 : A1 02                                       LDA (emu_PC,X)
     979/    D4F9 : 0A                                          ASL
     979/    D4FA : 95 0A                                       STA emu_ptr,X
     979/    D4FC : A9 DF                                       LDA #hi(JUMP_TABLE)
     979/    D4FE : 69 00                                       ADC #0
     979/    D500 : 95 0B                                       STA emu_ptr+1,X
     979/    D502 : A1 0A                                       LDA (emu_ptr,X)
     979/    D504 : 95 0C                                       STA emu_ptr2,X
     979/    D506 : F6 0A                                       INC emu_ptr,X
     979/    D508 : 90 02                                       BCC .skip
     979/    D50A : F6 0B                                               INC emu_ptr+1,X
     979/    D50C :                                             .skip:
     979/    D50C : A1 0A                                       LDA (emu_ptr,X)
     979/    D50E : 95 0D                                       STA emu_ptr2+1,X
     979/    D510 : 7C 0C 00                                    JMP (emu_ptr2,X)
     980/    D513 :                     
     981/    D513 :                     	;0xB1 - LDA IY
     982/    D513 :                     	LDA_IY:
     983/    D513 : (MACRO)             		OP_MACRO 177, "LDA", "IY", "LDA_IY"
     983/    D513 :                                             ;TODO
     984/    D513 : (MACRO)             		NEXT_MACRO
     984/    D513 :                                             ;Could also copy X to Y before NEXT then restore after jump
     984/    D513 :                                             
     984/    D513 :  (MACRO-2)                                  halt
     984/    D513 : 00                                  BRK
     984/    D514 : 00                                  BRK
     984/    D515 :                                             
     984/    D515 :                                             ;Jump table must be page aligned!!!
     984/    D515 : A1 02                                       LDA (emu_PC,X)
     984/    D517 : 0A                                          ASL
     984/    D518 : 95 0A                                       STA emu_ptr,X
     984/    D51A : A9 DF                                       LDA #hi(JUMP_TABLE)
     984/    D51C : 69 00                                       ADC #0
     984/    D51E : 95 0B                                       STA emu_ptr+1,X
     984/    D520 : A1 0A                                       LDA (emu_ptr,X)
     984/    D522 : 95 0C                                       STA emu_ptr2,X
     984/    D524 : F6 0A                                       INC emu_ptr,X
     984/    D526 : 90 02                                       BCC .skip
     984/    D528 : F6 0B                                               INC emu_ptr+1,X
     984/    D52A :                                             .skip:
     984/    D52A : A1 0A                                       LDA (emu_ptr,X)
     984/    D52C : 95 0D                                       STA emu_ptr2+1,X
     984/    D52E : 7C 0C 00                                    JMP (emu_ptr2,X)
     985/    D531 :                     
     986/    D531 :                     	;0xB2 - NOP
     987/    D531 :                     	NOP_0xB2:
     988/    D531 : (MACRO)             		OP_MACRO 178, "NOP", "IMP", "NOP_0xB2"
     988/    D531 :                                             ;TODO
     989/    D531 : (MACRO)             		NEXT_MACRO
     989/    D531 :                                             ;Could also copy X to Y before NEXT then restore after jump
     989/    D531 :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 88 - 1/5/2022 1:27:48


     989/    D531 :  (MACRO-2)                                  halt
     989/    D531 : 00                                  BRK
     989/    D532 : 00                                  BRK
     989/    D533 :                                             
     989/    D533 :                                             ;Jump table must be page aligned!!!
     989/    D533 : A1 02                                       LDA (emu_PC,X)
     989/    D535 : 0A                                          ASL
     989/    D536 : 95 0A                                       STA emu_ptr,X
     989/    D538 : A9 DF                                       LDA #hi(JUMP_TABLE)
     989/    D53A : 69 00                                       ADC #0
     989/    D53C : 95 0B                                       STA emu_ptr+1,X
     989/    D53E : A1 0A                                       LDA (emu_ptr,X)
     989/    D540 : 95 0C                                       STA emu_ptr2,X
     989/    D542 : F6 0A                                       INC emu_ptr,X
     989/    D544 : 90 02                                       BCC .skip
     989/    D546 : F6 0B                                               INC emu_ptr+1,X
     989/    D548 :                                             .skip:
     989/    D548 : A1 0A                                       LDA (emu_ptr,X)
     989/    D54A : 95 0D                                       STA emu_ptr2+1,X
     989/    D54C : 7C 0C 00                                    JMP (emu_ptr2,X)
     990/    D54F :                     
     991/    D54F :                     	;0xB3 - NOP
     992/    D54F :                     	NOP_0xB3:
     993/    D54F : (MACRO)             		OP_MACRO 179, "NOP", "IMP", "NOP_0xB3"
     993/    D54F :                                             ;TODO
     994/    D54F : (MACRO)             		NEXT_MACRO
     994/    D54F :                                             ;Could also copy X to Y before NEXT then restore after jump
     994/    D54F :                                             
     994/    D54F :  (MACRO-2)                                  halt
     994/    D54F : 00                                  BRK
     994/    D550 : 00                                  BRK
     994/    D551 :                                             
     994/    D551 :                                             ;Jump table must be page aligned!!!
     994/    D551 : A1 02                                       LDA (emu_PC,X)
     994/    D553 : 0A                                          ASL
     994/    D554 : 95 0A                                       STA emu_ptr,X
     994/    D556 : A9 DF                                       LDA #hi(JUMP_TABLE)
     994/    D558 : 69 00                                       ADC #0
     994/    D55A : 95 0B                                       STA emu_ptr+1,X
     994/    D55C : A1 0A                                       LDA (emu_ptr,X)
     994/    D55E : 95 0C                                       STA emu_ptr2,X
     994/    D560 : F6 0A                                       INC emu_ptr,X
     994/    D562 : 90 02                                       BCC .skip
     994/    D564 : F6 0B                                               INC emu_ptr+1,X
     994/    D566 :                                             .skip:
     994/    D566 : A1 0A                                       LDA (emu_ptr,X)
     994/    D568 : 95 0D                                       STA emu_ptr2+1,X
     994/    D56A : 7C 0C 00                                    JMP (emu_ptr2,X)
     995/    D56D :                     
     996/    D56D :                     	;0xB4 - LDY ZPX
     997/    D56D :                     	LDY_ZPX:
     998/    D56D : (MACRO)             		OP_MACRO 180, "LDY", "ZPX", "LDY_ZPX"
     998/    D56D :                                             ;TODO
     999/    D56D : (MACRO)             		NEXT_MACRO
     999/    D56D :                                             ;Could also copy X to Y before NEXT then restore after jump
     999/    D56D :                                             
     999/    D56D :  (MACRO-2)                                  halt
     999/    D56D : 00                                  BRK
     999/    D56E : 00                                  BRK
     999/    D56F :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 89 - 1/5/2022 1:27:48


     999/    D56F :                                             ;Jump table must be page aligned!!!
     999/    D56F : A1 02                                       LDA (emu_PC,X)
     999/    D571 : 0A                                          ASL
     999/    D572 : 95 0A                                       STA emu_ptr,X
     999/    D574 : A9 DF                                       LDA #hi(JUMP_TABLE)
     999/    D576 : 69 00                                       ADC #0
     999/    D578 : 95 0B                                       STA emu_ptr+1,X
     999/    D57A : A1 0A                                       LDA (emu_ptr,X)
     999/    D57C : 95 0C                                       STA emu_ptr2,X
     999/    D57E : F6 0A                                       INC emu_ptr,X
     999/    D580 : 90 02                                       BCC .skip
     999/    D582 : F6 0B                                               INC emu_ptr+1,X
     999/    D584 :                                             .skip:
     999/    D584 : A1 0A                                       LDA (emu_ptr,X)
     999/    D586 : 95 0D                                       STA emu_ptr2+1,X
     999/    D588 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1000/    D58B :                     
    1001/    D58B :                     	;0xB5 - LDA ZPX
    1002/    D58B :                     	LDA_ZPX:
    1003/    D58B : (MACRO)             		OP_MACRO 181, "LDA", "ZPX", "LDA_ZPX"
    1003/    D58B :                                             ;TODO
    1004/    D58B : (MACRO)             		NEXT_MACRO
    1004/    D58B :                                             ;Could also copy X to Y before NEXT then restore after jump
    1004/    D58B :                                             
    1004/    D58B :  (MACRO-2)                                  halt
    1004/    D58B : 00                                  BRK
    1004/    D58C : 00                                  BRK
    1004/    D58D :                                             
    1004/    D58D :                                             ;Jump table must be page aligned!!!
    1004/    D58D : A1 02                                       LDA (emu_PC,X)
    1004/    D58F : 0A                                          ASL
    1004/    D590 : 95 0A                                       STA emu_ptr,X
    1004/    D592 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1004/    D594 : 69 00                                       ADC #0
    1004/    D596 : 95 0B                                       STA emu_ptr+1,X
    1004/    D598 : A1 0A                                       LDA (emu_ptr,X)
    1004/    D59A : 95 0C                                       STA emu_ptr2,X
    1004/    D59C : F6 0A                                       INC emu_ptr,X
    1004/    D59E : 90 02                                       BCC .skip
    1004/    D5A0 : F6 0B                                               INC emu_ptr+1,X
    1004/    D5A2 :                                             .skip:
    1004/    D5A2 : A1 0A                                       LDA (emu_ptr,X)
    1004/    D5A4 : 95 0D                                       STA emu_ptr2+1,X
    1004/    D5A6 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1005/    D5A9 :                     
    1006/    D5A9 :                     	;0xB6 - LDX ZPY
    1007/    D5A9 :                     	LDX_ZPY:
    1008/    D5A9 : (MACRO)             		OP_MACRO 182, "LDX", "ZPY", "LDX_ZPY"
    1008/    D5A9 :                                             ;TODO
    1009/    D5A9 : (MACRO)             		NEXT_MACRO
    1009/    D5A9 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1009/    D5A9 :                                             
    1009/    D5A9 :  (MACRO-2)                                  halt
    1009/    D5A9 : 00                                  BRK
    1009/    D5AA : 00                                  BRK
    1009/    D5AB :                                             
    1009/    D5AB :                                             ;Jump table must be page aligned!!!
    1009/    D5AB : A1 02                                       LDA (emu_PC,X)
    1009/    D5AD : 0A                                          ASL
    1009/    D5AE : 95 0A                                       STA emu_ptr,X
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 90 - 1/5/2022 1:27:48


    1009/    D5B0 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1009/    D5B2 : 69 00                                       ADC #0
    1009/    D5B4 : 95 0B                                       STA emu_ptr+1,X
    1009/    D5B6 : A1 0A                                       LDA (emu_ptr,X)
    1009/    D5B8 : 95 0C                                       STA emu_ptr2,X
    1009/    D5BA : F6 0A                                       INC emu_ptr,X
    1009/    D5BC : 90 02                                       BCC .skip
    1009/    D5BE : F6 0B                                               INC emu_ptr+1,X
    1009/    D5C0 :                                             .skip:
    1009/    D5C0 : A1 0A                                       LDA (emu_ptr,X)
    1009/    D5C2 : 95 0D                                       STA emu_ptr2+1,X
    1009/    D5C4 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1010/    D5C7 :                     
    1011/    D5C7 :                     	;0xB7 - NOP
    1012/    D5C7 :                     	NOP_0xB7:
    1013/    D5C7 : (MACRO)             		OP_MACRO 183, "NOP", "IMP", "NOP_0xB7"
    1013/    D5C7 :                                             ;TODO
    1014/    D5C7 : (MACRO)             		NEXT_MACRO
    1014/    D5C7 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1014/    D5C7 :                                             
    1014/    D5C7 :  (MACRO-2)                                  halt
    1014/    D5C7 : 00                                  BRK
    1014/    D5C8 : 00                                  BRK
    1014/    D5C9 :                                             
    1014/    D5C9 :                                             ;Jump table must be page aligned!!!
    1014/    D5C9 : A1 02                                       LDA (emu_PC,X)
    1014/    D5CB : 0A                                          ASL
    1014/    D5CC : 95 0A                                       STA emu_ptr,X
    1014/    D5CE : A9 DF                                       LDA #hi(JUMP_TABLE)
    1014/    D5D0 : 69 00                                       ADC #0
    1014/    D5D2 : 95 0B                                       STA emu_ptr+1,X
    1014/    D5D4 : A1 0A                                       LDA (emu_ptr,X)
    1014/    D5D6 : 95 0C                                       STA emu_ptr2,X
    1014/    D5D8 : F6 0A                                       INC emu_ptr,X
    1014/    D5DA : 90 02                                       BCC .skip
    1014/    D5DC : F6 0B                                               INC emu_ptr+1,X
    1014/    D5DE :                                             .skip:
    1014/    D5DE : A1 0A                                       LDA (emu_ptr,X)
    1014/    D5E0 : 95 0D                                       STA emu_ptr2+1,X
    1014/    D5E2 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1015/    D5E5 :                     
    1016/    D5E5 :                     	;0xB8 - CLV IMP
    1017/    D5E5 :                     	CLV_IMP:
    1018/    D5E5 : (MACRO)             		OP_MACRO 184, "CLV", "IMP", "CLV_IMP"
    1018/    D5E5 :                                             ;TODO
    1019/    D5E5 : (MACRO)             		NEXT_MACRO
    1019/    D5E5 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1019/    D5E5 :                                             
    1019/    D5E5 :  (MACRO-2)                                  halt
    1019/    D5E5 : 00                                  BRK
    1019/    D5E6 : 00                                  BRK
    1019/    D5E7 :                                             
    1019/    D5E7 :                                             ;Jump table must be page aligned!!!
    1019/    D5E7 : A1 02                                       LDA (emu_PC,X)
    1019/    D5E9 : 0A                                          ASL
    1019/    D5EA : 95 0A                                       STA emu_ptr,X
    1019/    D5EC : A9 DF                                       LDA #hi(JUMP_TABLE)
    1019/    D5EE : 69 00                                       ADC #0
    1019/    D5F0 : 95 0B                                       STA emu_ptr+1,X
    1019/    D5F2 : A1 0A                                       LDA (emu_ptr,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 91 - 1/5/2022 1:27:48


    1019/    D5F4 : 95 0C                                       STA emu_ptr2,X
    1019/    D5F6 : F6 0A                                       INC emu_ptr,X
    1019/    D5F8 : 90 02                                       BCC .skip
    1019/    D5FA : F6 0B                                               INC emu_ptr+1,X
    1019/    D5FC :                                             .skip:
    1019/    D5FC : A1 0A                                       LDA (emu_ptr,X)
    1019/    D5FE : 95 0D                                       STA emu_ptr2+1,X
    1019/    D600 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1020/    D603 :                     
    1021/    D603 :                     	;0xB9 - LDA ABSY
    1022/    D603 :                     	LDA_ABSY:
    1023/    D603 : (MACRO)             		OP_MACRO 185, "LDA", "ABSY", "LDA_ABSY"
    1023/    D603 :                                             ;TODO
    1024/    D603 : (MACRO)             		NEXT_MACRO
    1024/    D603 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1024/    D603 :                                             
    1024/    D603 :  (MACRO-2)                                  halt
    1024/    D603 : 00                                  BRK
    1024/    D604 : 00                                  BRK
    1024/    D605 :                                             
    1024/    D605 :                                             ;Jump table must be page aligned!!!
    1024/    D605 : A1 02                                       LDA (emu_PC,X)
    1024/    D607 : 0A                                          ASL
    1024/    D608 : 95 0A                                       STA emu_ptr,X
    1024/    D60A : A9 DF                                       LDA #hi(JUMP_TABLE)
    1024/    D60C : 69 00                                       ADC #0
    1024/    D60E : 95 0B                                       STA emu_ptr+1,X
    1024/    D610 : A1 0A                                       LDA (emu_ptr,X)
    1024/    D612 : 95 0C                                       STA emu_ptr2,X
    1024/    D614 : F6 0A                                       INC emu_ptr,X
    1024/    D616 : 90 02                                       BCC .skip
    1024/    D618 : F6 0B                                               INC emu_ptr+1,X
    1024/    D61A :                                             .skip:
    1024/    D61A : A1 0A                                       LDA (emu_ptr,X)
    1024/    D61C : 95 0D                                       STA emu_ptr2+1,X
    1024/    D61E : 7C 0C 00                                    JMP (emu_ptr2,X)
    1025/    D621 :                     
    1026/    D621 :                     	;0xBA - TSX IMP
    1027/    D621 :                     	TSX_IMP:
    1028/    D621 : (MACRO)             		OP_MACRO 186, "TSX", "IMP", "TSX_IMP"
    1028/    D621 :                                             ;TODO
    1029/    D621 : (MACRO)             		NEXT_MACRO
    1029/    D621 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1029/    D621 :                                             
    1029/    D621 :  (MACRO-2)                                  halt
    1029/    D621 : 00                                  BRK
    1029/    D622 : 00                                  BRK
    1029/    D623 :                                             
    1029/    D623 :                                             ;Jump table must be page aligned!!!
    1029/    D623 : A1 02                                       LDA (emu_PC,X)
    1029/    D625 : 0A                                          ASL
    1029/    D626 : 95 0A                                       STA emu_ptr,X
    1029/    D628 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1029/    D62A : 69 00                                       ADC #0
    1029/    D62C : 95 0B                                       STA emu_ptr+1,X
    1029/    D62E : A1 0A                                       LDA (emu_ptr,X)
    1029/    D630 : 95 0C                                       STA emu_ptr2,X
    1029/    D632 : F6 0A                                       INC emu_ptr,X
    1029/    D634 : 90 02                                       BCC .skip
    1029/    D636 : F6 0B                                               INC emu_ptr+1,X
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 92 - 1/5/2022 1:27:48


    1029/    D638 :                                             .skip:
    1029/    D638 : A1 0A                                       LDA (emu_ptr,X)
    1029/    D63A : 95 0D                                       STA emu_ptr2+1,X
    1029/    D63C : 7C 0C 00                                    JMP (emu_ptr2,X)
    1030/    D63F :                     
    1031/    D63F :                     	;0xBB - NOP
    1032/    D63F :                     	NOP_0xBB:
    1033/    D63F : (MACRO)             		OP_MACRO 187, "NOP", "IMP", "NOP_0xBB"
    1033/    D63F :                                             ;TODO
    1034/    D63F : (MACRO)             		NEXT_MACRO
    1034/    D63F :                                             ;Could also copy X to Y before NEXT then restore after jump
    1034/    D63F :                                             
    1034/    D63F :  (MACRO-2)                                  halt
    1034/    D63F : 00                                  BRK
    1034/    D640 : 00                                  BRK
    1034/    D641 :                                             
    1034/    D641 :                                             ;Jump table must be page aligned!!!
    1034/    D641 : A1 02                                       LDA (emu_PC,X)
    1034/    D643 : 0A                                          ASL
    1034/    D644 : 95 0A                                       STA emu_ptr,X
    1034/    D646 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1034/    D648 : 69 00                                       ADC #0
    1034/    D64A : 95 0B                                       STA emu_ptr+1,X
    1034/    D64C : A1 0A                                       LDA (emu_ptr,X)
    1034/    D64E : 95 0C                                       STA emu_ptr2,X
    1034/    D650 : F6 0A                                       INC emu_ptr,X
    1034/    D652 : 90 02                                       BCC .skip
    1034/    D654 : F6 0B                                               INC emu_ptr+1,X
    1034/    D656 :                                             .skip:
    1034/    D656 : A1 0A                                       LDA (emu_ptr,X)
    1034/    D658 : 95 0D                                       STA emu_ptr2+1,X
    1034/    D65A : 7C 0C 00                                    JMP (emu_ptr2,X)
    1035/    D65D :                     
    1036/    D65D :                     	;0xBC - LDY ABSX
    1037/    D65D :                     	LDY_ABSX:
    1038/    D65D : (MACRO)             		OP_MACRO 188, "LDY", "ABSX", "LDY_ABSX"
    1038/    D65D :                                             ;TODO
    1039/    D65D : (MACRO)             		NEXT_MACRO
    1039/    D65D :                                             ;Could also copy X to Y before NEXT then restore after jump
    1039/    D65D :                                             
    1039/    D65D :  (MACRO-2)                                  halt
    1039/    D65D : 00                                  BRK
    1039/    D65E : 00                                  BRK
    1039/    D65F :                                             
    1039/    D65F :                                             ;Jump table must be page aligned!!!
    1039/    D65F : A1 02                                       LDA (emu_PC,X)
    1039/    D661 : 0A                                          ASL
    1039/    D662 : 95 0A                                       STA emu_ptr,X
    1039/    D664 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1039/    D666 : 69 00                                       ADC #0
    1039/    D668 : 95 0B                                       STA emu_ptr+1,X
    1039/    D66A : A1 0A                                       LDA (emu_ptr,X)
    1039/    D66C : 95 0C                                       STA emu_ptr2,X
    1039/    D66E : F6 0A                                       INC emu_ptr,X
    1039/    D670 : 90 02                                       BCC .skip
    1039/    D672 : F6 0B                                               INC emu_ptr+1,X
    1039/    D674 :                                             .skip:
    1039/    D674 : A1 0A                                       LDA (emu_ptr,X)
    1039/    D676 : 95 0D                                       STA emu_ptr2+1,X
    1039/    D678 : 7C 0C 00                                    JMP (emu_ptr2,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 93 - 1/5/2022 1:27:48


    1040/    D67B :                     
    1041/    D67B :                     	;0xBD - LDA ABSX
    1042/    D67B :                     	LDA_ABSX:
    1043/    D67B : (MACRO)             		OP_MACRO 189, "LDA", "ABSX", "LDA_ABSX"
    1043/    D67B :                                             ;TODO
    1044/    D67B : (MACRO)             		NEXT_MACRO
    1044/    D67B :                                             ;Could also copy X to Y before NEXT then restore after jump
    1044/    D67B :                                             
    1044/    D67B :  (MACRO-2)                                  halt
    1044/    D67B : 00                                  BRK
    1044/    D67C : 00                                  BRK
    1044/    D67D :                                             
    1044/    D67D :                                             ;Jump table must be page aligned!!!
    1044/    D67D : A1 02                                       LDA (emu_PC,X)
    1044/    D67F : 0A                                          ASL
    1044/    D680 : 95 0A                                       STA emu_ptr,X
    1044/    D682 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1044/    D684 : 69 00                                       ADC #0
    1044/    D686 : 95 0B                                       STA emu_ptr+1,X
    1044/    D688 : A1 0A                                       LDA (emu_ptr,X)
    1044/    D68A : 95 0C                                       STA emu_ptr2,X
    1044/    D68C : F6 0A                                       INC emu_ptr,X
    1044/    D68E : 90 02                                       BCC .skip
    1044/    D690 : F6 0B                                               INC emu_ptr+1,X
    1044/    D692 :                                             .skip:
    1044/    D692 : A1 0A                                       LDA (emu_ptr,X)
    1044/    D694 : 95 0D                                       STA emu_ptr2+1,X
    1044/    D696 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1045/    D699 :                     
    1046/    D699 :                     	;0xBE - LDX ABSY
    1047/    D699 :                     	LDX_ABSY:
    1048/    D699 : (MACRO)             		OP_MACRO 190, "LDX", "ABSY", "LDX_ABSY"
    1048/    D699 :                                             ;TODO
    1049/    D699 : (MACRO)             		NEXT_MACRO
    1049/    D699 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1049/    D699 :                                             
    1049/    D699 :  (MACRO-2)                                  halt
    1049/    D699 : 00                                  BRK
    1049/    D69A : 00                                  BRK
    1049/    D69B :                                             
    1049/    D69B :                                             ;Jump table must be page aligned!!!
    1049/    D69B : A1 02                                       LDA (emu_PC,X)
    1049/    D69D : 0A                                          ASL
    1049/    D69E : 95 0A                                       STA emu_ptr,X
    1049/    D6A0 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1049/    D6A2 : 69 00                                       ADC #0
    1049/    D6A4 : 95 0B                                       STA emu_ptr+1,X
    1049/    D6A6 : A1 0A                                       LDA (emu_ptr,X)
    1049/    D6A8 : 95 0C                                       STA emu_ptr2,X
    1049/    D6AA : F6 0A                                       INC emu_ptr,X
    1049/    D6AC : 90 02                                       BCC .skip
    1049/    D6AE : F6 0B                                               INC emu_ptr+1,X
    1049/    D6B0 :                                             .skip:
    1049/    D6B0 : A1 0A                                       LDA (emu_ptr,X)
    1049/    D6B2 : 95 0D                                       STA emu_ptr2+1,X
    1049/    D6B4 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1050/    D6B7 :                     
    1051/    D6B7 :                     	;0xBF - NOP
    1052/    D6B7 :                     	NOP_0xBF:
    1053/    D6B7 : (MACRO)             		OP_MACRO 191, "NOP", "IMP", "NOP_0xBF"
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 94 - 1/5/2022 1:27:48


    1053/    D6B7 :                                             ;TODO
    1054/    D6B7 : (MACRO)             		NEXT_MACRO
    1054/    D6B7 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1054/    D6B7 :                                             
    1054/    D6B7 :  (MACRO-2)                                  halt
    1054/    D6B7 : 00                                  BRK
    1054/    D6B8 : 00                                  BRK
    1054/    D6B9 :                                             
    1054/    D6B9 :                                             ;Jump table must be page aligned!!!
    1054/    D6B9 : A1 02                                       LDA (emu_PC,X)
    1054/    D6BB : 0A                                          ASL
    1054/    D6BC : 95 0A                                       STA emu_ptr,X
    1054/    D6BE : A9 DF                                       LDA #hi(JUMP_TABLE)
    1054/    D6C0 : 69 00                                       ADC #0
    1054/    D6C2 : 95 0B                                       STA emu_ptr+1,X
    1054/    D6C4 : A1 0A                                       LDA (emu_ptr,X)
    1054/    D6C6 : 95 0C                                       STA emu_ptr2,X
    1054/    D6C8 : F6 0A                                       INC emu_ptr,X
    1054/    D6CA : 90 02                                       BCC .skip
    1054/    D6CC : F6 0B                                               INC emu_ptr+1,X
    1054/    D6CE :                                             .skip:
    1054/    D6CE : A1 0A                                       LDA (emu_ptr,X)
    1054/    D6D0 : 95 0D                                       STA emu_ptr2+1,X
    1054/    D6D2 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1055/    D6D5 :                     
    1056/    D6D5 :                     	;0xC0 - CPY IMMED
    1057/    D6D5 :                     	CPY_IMMED:
    1058/    D6D5 : (MACRO)             		OP_MACRO 192, "CPY", "IMMED", "CPY_IMMED"
    1058/    D6D5 :                                             ;TODO
    1059/    D6D5 : (MACRO)             		NEXT_MACRO
    1059/    D6D5 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1059/    D6D5 :                                             
    1059/    D6D5 :  (MACRO-2)                                  halt
    1059/    D6D5 : 00                                  BRK
    1059/    D6D6 : 00                                  BRK
    1059/    D6D7 :                                             
    1059/    D6D7 :                                             ;Jump table must be page aligned!!!
    1059/    D6D7 : A1 02                                       LDA (emu_PC,X)
    1059/    D6D9 : 0A                                          ASL
    1059/    D6DA : 95 0A                                       STA emu_ptr,X
    1059/    D6DC : A9 DF                                       LDA #hi(JUMP_TABLE)
    1059/    D6DE : 69 00                                       ADC #0
    1059/    D6E0 : 95 0B                                       STA emu_ptr+1,X
    1059/    D6E2 : A1 0A                                       LDA (emu_ptr,X)
    1059/    D6E4 : 95 0C                                       STA emu_ptr2,X
    1059/    D6E6 : F6 0A                                       INC emu_ptr,X
    1059/    D6E8 : 90 02                                       BCC .skip
    1059/    D6EA : F6 0B                                               INC emu_ptr+1,X
    1059/    D6EC :                                             .skip:
    1059/    D6EC : A1 0A                                       LDA (emu_ptr,X)
    1059/    D6EE : 95 0D                                       STA emu_ptr2+1,X
    1059/    D6F0 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1060/    D6F3 :                     
    1061/    D6F3 :                     	;0xC1 - CMP IX
    1062/    D6F3 :                     	CMP_IX:
    1063/    D6F3 : (MACRO)             		OP_MACRO 193, "CMP", "IX", "CMP_IX"
    1063/    D6F3 :                                             ;TODO
    1064/    D6F3 : (MACRO)             		NEXT_MACRO
    1064/    D6F3 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1064/    D6F3 :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 95 - 1/5/2022 1:27:48


    1064/    D6F3 :  (MACRO-2)                                  halt
    1064/    D6F3 : 00                                  BRK
    1064/    D6F4 : 00                                  BRK
    1064/    D6F5 :                                             
    1064/    D6F5 :                                             ;Jump table must be page aligned!!!
    1064/    D6F5 : A1 02                                       LDA (emu_PC,X)
    1064/    D6F7 : 0A                                          ASL
    1064/    D6F8 : 95 0A                                       STA emu_ptr,X
    1064/    D6FA : A9 DF                                       LDA #hi(JUMP_TABLE)
    1064/    D6FC : 69 00                                       ADC #0
    1064/    D6FE : 95 0B                                       STA emu_ptr+1,X
    1064/    D700 : A1 0A                                       LDA (emu_ptr,X)
    1064/    D702 : 95 0C                                       STA emu_ptr2,X
    1064/    D704 : F6 0A                                       INC emu_ptr,X
    1064/    D706 : 90 02                                       BCC .skip
    1064/    D708 : F6 0B                                               INC emu_ptr+1,X
    1064/    D70A :                                             .skip:
    1064/    D70A : A1 0A                                       LDA (emu_ptr,X)
    1064/    D70C : 95 0D                                       STA emu_ptr2+1,X
    1064/    D70E : 7C 0C 00                                    JMP (emu_ptr2,X)
    1065/    D711 :                     
    1066/    D711 :                     	;0xC2 - NOP
    1067/    D711 :                     	NOP_0xC2:
    1068/    D711 : (MACRO)             		OP_MACRO 194, "NOP", "IMP", "NOP_0xC2"
    1068/    D711 :                                             ;TODO
    1069/    D711 : (MACRO)             		NEXT_MACRO
    1069/    D711 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1069/    D711 :                                             
    1069/    D711 :  (MACRO-2)                                  halt
    1069/    D711 : 00                                  BRK
    1069/    D712 : 00                                  BRK
    1069/    D713 :                                             
    1069/    D713 :                                             ;Jump table must be page aligned!!!
    1069/    D713 : A1 02                                       LDA (emu_PC,X)
    1069/    D715 : 0A                                          ASL
    1069/    D716 : 95 0A                                       STA emu_ptr,X
    1069/    D718 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1069/    D71A : 69 00                                       ADC #0
    1069/    D71C : 95 0B                                       STA emu_ptr+1,X
    1069/    D71E : A1 0A                                       LDA (emu_ptr,X)
    1069/    D720 : 95 0C                                       STA emu_ptr2,X
    1069/    D722 : F6 0A                                       INC emu_ptr,X
    1069/    D724 : 90 02                                       BCC .skip
    1069/    D726 : F6 0B                                               INC emu_ptr+1,X
    1069/    D728 :                                             .skip:
    1069/    D728 : A1 0A                                       LDA (emu_ptr,X)
    1069/    D72A : 95 0D                                       STA emu_ptr2+1,X
    1069/    D72C : 7C 0C 00                                    JMP (emu_ptr2,X)
    1070/    D72F :                     
    1071/    D72F :                     	;0xC3 - NOP
    1072/    D72F :                     	NOP_0xC3:
    1073/    D72F : (MACRO)             		OP_MACRO 195, "NOP", "IMP", "NOP_0xC3"
    1073/    D72F :                                             ;TODO
    1074/    D72F : (MACRO)             		NEXT_MACRO
    1074/    D72F :                                             ;Could also copy X to Y before NEXT then restore after jump
    1074/    D72F :                                             
    1074/    D72F :  (MACRO-2)                                  halt
    1074/    D72F : 00                                  BRK
    1074/    D730 : 00                                  BRK
    1074/    D731 :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 96 - 1/5/2022 1:27:48


    1074/    D731 :                                             ;Jump table must be page aligned!!!
    1074/    D731 : A1 02                                       LDA (emu_PC,X)
    1074/    D733 : 0A                                          ASL
    1074/    D734 : 95 0A                                       STA emu_ptr,X
    1074/    D736 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1074/    D738 : 69 00                                       ADC #0
    1074/    D73A : 95 0B                                       STA emu_ptr+1,X
    1074/    D73C : A1 0A                                       LDA (emu_ptr,X)
    1074/    D73E : 95 0C                                       STA emu_ptr2,X
    1074/    D740 : F6 0A                                       INC emu_ptr,X
    1074/    D742 : 90 02                                       BCC .skip
    1074/    D744 : F6 0B                                               INC emu_ptr+1,X
    1074/    D746 :                                             .skip:
    1074/    D746 : A1 0A                                       LDA (emu_ptr,X)
    1074/    D748 : 95 0D                                       STA emu_ptr2+1,X
    1074/    D74A : 7C 0C 00                                    JMP (emu_ptr2,X)
    1075/    D74D :                     
    1076/    D74D :                     	;0xC4 - CPY ZP
    1077/    D74D :                     	CPY_ZP:
    1078/    D74D : (MACRO)             		OP_MACRO 196, "CPY", "ZP", "CPY_ZP"
    1078/    D74D :                                             ;TODO
    1079/    D74D : (MACRO)             		NEXT_MACRO
    1079/    D74D :                                             ;Could also copy X to Y before NEXT then restore after jump
    1079/    D74D :                                             
    1079/    D74D :  (MACRO-2)                                  halt
    1079/    D74D : 00                                  BRK
    1079/    D74E : 00                                  BRK
    1079/    D74F :                                             
    1079/    D74F :                                             ;Jump table must be page aligned!!!
    1079/    D74F : A1 02                                       LDA (emu_PC,X)
    1079/    D751 : 0A                                          ASL
    1079/    D752 : 95 0A                                       STA emu_ptr,X
    1079/    D754 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1079/    D756 : 69 00                                       ADC #0
    1079/    D758 : 95 0B                                       STA emu_ptr+1,X
    1079/    D75A : A1 0A                                       LDA (emu_ptr,X)
    1079/    D75C : 95 0C                                       STA emu_ptr2,X
    1079/    D75E : F6 0A                                       INC emu_ptr,X
    1079/    D760 : 90 02                                       BCC .skip
    1079/    D762 : F6 0B                                               INC emu_ptr+1,X
    1079/    D764 :                                             .skip:
    1079/    D764 : A1 0A                                       LDA (emu_ptr,X)
    1079/    D766 : 95 0D                                       STA emu_ptr2+1,X
    1079/    D768 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1080/    D76B :                     
    1081/    D76B :                     	;0xC5 - CMP ZP
    1082/    D76B :                     	CMP_ZP:
    1083/    D76B : (MACRO)             		OP_MACRO 197, "CMP", "ZP", "CMP_ZP"
    1083/    D76B :                                             ;TODO
    1084/    D76B : (MACRO)             		NEXT_MACRO
    1084/    D76B :                                             ;Could also copy X to Y before NEXT then restore after jump
    1084/    D76B :                                             
    1084/    D76B :  (MACRO-2)                                  halt
    1084/    D76B : 00                                  BRK
    1084/    D76C : 00                                  BRK
    1084/    D76D :                                             
    1084/    D76D :                                             ;Jump table must be page aligned!!!
    1084/    D76D : A1 02                                       LDA (emu_PC,X)
    1084/    D76F : 0A                                          ASL
    1084/    D770 : 95 0A                                       STA emu_ptr,X
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 97 - 1/5/2022 1:27:48


    1084/    D772 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1084/    D774 : 69 00                                       ADC #0
    1084/    D776 : 95 0B                                       STA emu_ptr+1,X
    1084/    D778 : A1 0A                                       LDA (emu_ptr,X)
    1084/    D77A : 95 0C                                       STA emu_ptr2,X
    1084/    D77C : F6 0A                                       INC emu_ptr,X
    1084/    D77E : 90 02                                       BCC .skip
    1084/    D780 : F6 0B                                               INC emu_ptr+1,X
    1084/    D782 :                                             .skip:
    1084/    D782 : A1 0A                                       LDA (emu_ptr,X)
    1084/    D784 : 95 0D                                       STA emu_ptr2+1,X
    1084/    D786 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1085/    D789 :                     
    1086/    D789 :                     	;0xC6 - DEC ZP
    1087/    D789 :                     	DEC_ZP:
    1088/    D789 : (MACRO)             		OP_MACRO 198, "DEC", "ZP", "DEC_ZP"
    1088/    D789 :                                             ;TODO
    1089/    D789 : (MACRO)             		NEXT_MACRO
    1089/    D789 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1089/    D789 :                                             
    1089/    D789 :  (MACRO-2)                                  halt
    1089/    D789 : 00                                  BRK
    1089/    D78A : 00                                  BRK
    1089/    D78B :                                             
    1089/    D78B :                                             ;Jump table must be page aligned!!!
    1089/    D78B : A1 02                                       LDA (emu_PC,X)
    1089/    D78D : 0A                                          ASL
    1089/    D78E : 95 0A                                       STA emu_ptr,X
    1089/    D790 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1089/    D792 : 69 00                                       ADC #0
    1089/    D794 : 95 0B                                       STA emu_ptr+1,X
    1089/    D796 : A1 0A                                       LDA (emu_ptr,X)
    1089/    D798 : 95 0C                                       STA emu_ptr2,X
    1089/    D79A : F6 0A                                       INC emu_ptr,X
    1089/    D79C : 90 02                                       BCC .skip
    1089/    D79E : F6 0B                                               INC emu_ptr+1,X
    1089/    D7A0 :                                             .skip:
    1089/    D7A0 : A1 0A                                       LDA (emu_ptr,X)
    1089/    D7A2 : 95 0D                                       STA emu_ptr2+1,X
    1089/    D7A4 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1090/    D7A7 :                     
    1091/    D7A7 :                     	;0xC7 - NOP
    1092/    D7A7 :                     	NOP_0xC7:
    1093/    D7A7 : (MACRO)             		OP_MACRO 199, "NOP", "IMP", "NOP_0xC7"
    1093/    D7A7 :                                             ;TODO
    1094/    D7A7 : (MACRO)             		NEXT_MACRO
    1094/    D7A7 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1094/    D7A7 :                                             
    1094/    D7A7 :  (MACRO-2)                                  halt
    1094/    D7A7 : 00                                  BRK
    1094/    D7A8 : 00                                  BRK
    1094/    D7A9 :                                             
    1094/    D7A9 :                                             ;Jump table must be page aligned!!!
    1094/    D7A9 : A1 02                                       LDA (emu_PC,X)
    1094/    D7AB : 0A                                          ASL
    1094/    D7AC : 95 0A                                       STA emu_ptr,X
    1094/    D7AE : A9 DF                                       LDA #hi(JUMP_TABLE)
    1094/    D7B0 : 69 00                                       ADC #0
    1094/    D7B2 : 95 0B                                       STA emu_ptr+1,X
    1094/    D7B4 : A1 0A                                       LDA (emu_ptr,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 98 - 1/5/2022 1:27:48


    1094/    D7B6 : 95 0C                                       STA emu_ptr2,X
    1094/    D7B8 : F6 0A                                       INC emu_ptr,X
    1094/    D7BA : 90 02                                       BCC .skip
    1094/    D7BC : F6 0B                                               INC emu_ptr+1,X
    1094/    D7BE :                                             .skip:
    1094/    D7BE : A1 0A                                       LDA (emu_ptr,X)
    1094/    D7C0 : 95 0D                                       STA emu_ptr2+1,X
    1094/    D7C2 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1095/    D7C5 :                     
    1096/    D7C5 :                     	;0xC8 - INY IMP
    1097/    D7C5 :                     	INY_IMP:
    1098/    D7C5 : (MACRO)             		OP_MACRO 200, "INY", "IMP", "INY_IMP"
    1098/    D7C5 :                                             ;TODO
    1099/    D7C5 : (MACRO)             		NEXT_MACRO
    1099/    D7C5 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1099/    D7C5 :                                             
    1099/    D7C5 :  (MACRO-2)                                  halt
    1099/    D7C5 : 00                                  BRK
    1099/    D7C6 : 00                                  BRK
    1099/    D7C7 :                                             
    1099/    D7C7 :                                             ;Jump table must be page aligned!!!
    1099/    D7C7 : A1 02                                       LDA (emu_PC,X)
    1099/    D7C9 : 0A                                          ASL
    1099/    D7CA : 95 0A                                       STA emu_ptr,X
    1099/    D7CC : A9 DF                                       LDA #hi(JUMP_TABLE)
    1099/    D7CE : 69 00                                       ADC #0
    1099/    D7D0 : 95 0B                                       STA emu_ptr+1,X
    1099/    D7D2 : A1 0A                                       LDA (emu_ptr,X)
    1099/    D7D4 : 95 0C                                       STA emu_ptr2,X
    1099/    D7D6 : F6 0A                                       INC emu_ptr,X
    1099/    D7D8 : 90 02                                       BCC .skip
    1099/    D7DA : F6 0B                                               INC emu_ptr+1,X
    1099/    D7DC :                                             .skip:
    1099/    D7DC : A1 0A                                       LDA (emu_ptr,X)
    1099/    D7DE : 95 0D                                       STA emu_ptr2+1,X
    1099/    D7E0 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1100/    D7E3 :                     
    1101/    D7E3 :                     	;0xC9 - CMP IMMED
    1102/    D7E3 :                     	CMP_IMMED:
    1103/    D7E3 : (MACRO)             		OP_MACRO 201, "CMP", "IMMED", "CMP_IMMED"
    1103/    D7E3 :                                             ;TODO
    1104/    D7E3 : (MACRO)             		NEXT_MACRO
    1104/    D7E3 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1104/    D7E3 :                                             
    1104/    D7E3 :  (MACRO-2)                                  halt
    1104/    D7E3 : 00                                  BRK
    1104/    D7E4 : 00                                  BRK
    1104/    D7E5 :                                             
    1104/    D7E5 :                                             ;Jump table must be page aligned!!!
    1104/    D7E5 : A1 02                                       LDA (emu_PC,X)
    1104/    D7E7 : 0A                                          ASL
    1104/    D7E8 : 95 0A                                       STA emu_ptr,X
    1104/    D7EA : A9 DF                                       LDA #hi(JUMP_TABLE)
    1104/    D7EC : 69 00                                       ADC #0
    1104/    D7EE : 95 0B                                       STA emu_ptr+1,X
    1104/    D7F0 : A1 0A                                       LDA (emu_ptr,X)
    1104/    D7F2 : 95 0C                                       STA emu_ptr2,X
    1104/    D7F4 : F6 0A                                       INC emu_ptr,X
    1104/    D7F6 : 90 02                                       BCC .skip
    1104/    D7F8 : F6 0B                                               INC emu_ptr+1,X
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 99 - 1/5/2022 1:27:48


    1104/    D7FA :                                             .skip:
    1104/    D7FA : A1 0A                                       LDA (emu_ptr,X)
    1104/    D7FC : 95 0D                                       STA emu_ptr2+1,X
    1104/    D7FE : 7C 0C 00                                    JMP (emu_ptr2,X)
    1105/    D801 :                     
    1106/    D801 :                     	;0xCA - DEX IMP
    1107/    D801 :                     	DEX_IMP:
    1108/    D801 : (MACRO)             		OP_MACRO 202, "DEX", "IMP", "DEX_IMP"
    1108/    D801 :                                             ;TODO
    1109/    D801 : (MACRO)             		NEXT_MACRO
    1109/    D801 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1109/    D801 :                                             
    1109/    D801 :  (MACRO-2)                                  halt
    1109/    D801 : 00                                  BRK
    1109/    D802 : 00                                  BRK
    1109/    D803 :                                             
    1109/    D803 :                                             ;Jump table must be page aligned!!!
    1109/    D803 : A1 02                                       LDA (emu_PC,X)
    1109/    D805 : 0A                                          ASL
    1109/    D806 : 95 0A                                       STA emu_ptr,X
    1109/    D808 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1109/    D80A : 69 00                                       ADC #0
    1109/    D80C : 95 0B                                       STA emu_ptr+1,X
    1109/    D80E : A1 0A                                       LDA (emu_ptr,X)
    1109/    D810 : 95 0C                                       STA emu_ptr2,X
    1109/    D812 : F6 0A                                       INC emu_ptr,X
    1109/    D814 : 90 02                                       BCC .skip
    1109/    D816 : F6 0B                                               INC emu_ptr+1,X
    1109/    D818 :                                             .skip:
    1109/    D818 : A1 0A                                       LDA (emu_ptr,X)
    1109/    D81A : 95 0D                                       STA emu_ptr2+1,X
    1109/    D81C : 7C 0C 00                                    JMP (emu_ptr2,X)
    1110/    D81F :                     
    1111/    D81F :                     	;0xCB - NOP
    1112/    D81F :                     	NOP_0xCB:
    1113/    D81F : (MACRO)             		OP_MACRO 203, "NOP", "IMP", "NOP_0xCB"
    1113/    D81F :                                             ;TODO
    1114/    D81F : (MACRO)             		NEXT_MACRO
    1114/    D81F :                                             ;Could also copy X to Y before NEXT then restore after jump
    1114/    D81F :                                             
    1114/    D81F :  (MACRO-2)                                  halt
    1114/    D81F : 00                                  BRK
    1114/    D820 : 00                                  BRK
    1114/    D821 :                                             
    1114/    D821 :                                             ;Jump table must be page aligned!!!
    1114/    D821 : A1 02                                       LDA (emu_PC,X)
    1114/    D823 : 0A                                          ASL
    1114/    D824 : 95 0A                                       STA emu_ptr,X
    1114/    D826 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1114/    D828 : 69 00                                       ADC #0
    1114/    D82A : 95 0B                                       STA emu_ptr+1,X
    1114/    D82C : A1 0A                                       LDA (emu_ptr,X)
    1114/    D82E : 95 0C                                       STA emu_ptr2,X
    1114/    D830 : F6 0A                                       INC emu_ptr,X
    1114/    D832 : 90 02                                       BCC .skip
    1114/    D834 : F6 0B                                               INC emu_ptr+1,X
    1114/    D836 :                                             .skip:
    1114/    D836 : A1 0A                                       LDA (emu_ptr,X)
    1114/    D838 : 95 0D                                       STA emu_ptr2+1,X
    1114/    D83A : 7C 0C 00                                    JMP (emu_ptr2,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 100 - 1/5/2022 1:27:48


    1115/    D83D :                     
    1116/    D83D :                     	;0xCC - CPY ABS
    1117/    D83D :                     	CPY_ABS:
    1118/    D83D : (MACRO)             		OP_MACRO 204, "CPY", "ABS", "CPY_ABS"
    1118/    D83D :                                             ;TODO
    1119/    D83D : (MACRO)             		NEXT_MACRO
    1119/    D83D :                                             ;Could also copy X to Y before NEXT then restore after jump
    1119/    D83D :                                             
    1119/    D83D :  (MACRO-2)                                  halt
    1119/    D83D : 00                                  BRK
    1119/    D83E : 00                                  BRK
    1119/    D83F :                                             
    1119/    D83F :                                             ;Jump table must be page aligned!!!
    1119/    D83F : A1 02                                       LDA (emu_PC,X)
    1119/    D841 : 0A                                          ASL
    1119/    D842 : 95 0A                                       STA emu_ptr,X
    1119/    D844 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1119/    D846 : 69 00                                       ADC #0
    1119/    D848 : 95 0B                                       STA emu_ptr+1,X
    1119/    D84A : A1 0A                                       LDA (emu_ptr,X)
    1119/    D84C : 95 0C                                       STA emu_ptr2,X
    1119/    D84E : F6 0A                                       INC emu_ptr,X
    1119/    D850 : 90 02                                       BCC .skip
    1119/    D852 : F6 0B                                               INC emu_ptr+1,X
    1119/    D854 :                                             .skip:
    1119/    D854 : A1 0A                                       LDA (emu_ptr,X)
    1119/    D856 : 95 0D                                       STA emu_ptr2+1,X
    1119/    D858 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1120/    D85B :                     
    1121/    D85B :                     	;0xCD - CMP ABS
    1122/    D85B :                     	CMP_ABS:
    1123/    D85B : (MACRO)             		OP_MACRO 205, "CMP", "ABS", "CMP_ABS"
    1123/    D85B :                                             ;TODO
    1124/    D85B : (MACRO)             		NEXT_MACRO
    1124/    D85B :                                             ;Could also copy X to Y before NEXT then restore after jump
    1124/    D85B :                                             
    1124/    D85B :  (MACRO-2)                                  halt
    1124/    D85B : 00                                  BRK
    1124/    D85C : 00                                  BRK
    1124/    D85D :                                             
    1124/    D85D :                                             ;Jump table must be page aligned!!!
    1124/    D85D : A1 02                                       LDA (emu_PC,X)
    1124/    D85F : 0A                                          ASL
    1124/    D860 : 95 0A                                       STA emu_ptr,X
    1124/    D862 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1124/    D864 : 69 00                                       ADC #0
    1124/    D866 : 95 0B                                       STA emu_ptr+1,X
    1124/    D868 : A1 0A                                       LDA (emu_ptr,X)
    1124/    D86A : 95 0C                                       STA emu_ptr2,X
    1124/    D86C : F6 0A                                       INC emu_ptr,X
    1124/    D86E : 90 02                                       BCC .skip
    1124/    D870 : F6 0B                                               INC emu_ptr+1,X
    1124/    D872 :                                             .skip:
    1124/    D872 : A1 0A                                       LDA (emu_ptr,X)
    1124/    D874 : 95 0D                                       STA emu_ptr2+1,X
    1124/    D876 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1125/    D879 :                     
    1126/    D879 :                     	;0xCE - DEC ABS
    1127/    D879 :                     	DEC_ABS:
    1128/    D879 : (MACRO)             		OP_MACRO 206, "DEC", "ABS", "DEC_ABS"
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 101 - 1/5/2022 1:27:48


    1128/    D879 :                                             ;TODO
    1129/    D879 : (MACRO)             		NEXT_MACRO
    1129/    D879 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1129/    D879 :                                             
    1129/    D879 :  (MACRO-2)                                  halt
    1129/    D879 : 00                                  BRK
    1129/    D87A : 00                                  BRK
    1129/    D87B :                                             
    1129/    D87B :                                             ;Jump table must be page aligned!!!
    1129/    D87B : A1 02                                       LDA (emu_PC,X)
    1129/    D87D : 0A                                          ASL
    1129/    D87E : 95 0A                                       STA emu_ptr,X
    1129/    D880 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1129/    D882 : 69 00                                       ADC #0
    1129/    D884 : 95 0B                                       STA emu_ptr+1,X
    1129/    D886 : A1 0A                                       LDA (emu_ptr,X)
    1129/    D888 : 95 0C                                       STA emu_ptr2,X
    1129/    D88A : F6 0A                                       INC emu_ptr,X
    1129/    D88C : 90 02                                       BCC .skip
    1129/    D88E : F6 0B                                               INC emu_ptr+1,X
    1129/    D890 :                                             .skip:
    1129/    D890 : A1 0A                                       LDA (emu_ptr,X)
    1129/    D892 : 95 0D                                       STA emu_ptr2+1,X
    1129/    D894 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1130/    D897 :                     
    1131/    D897 :                     	;0xCF - NOP
    1132/    D897 :                     	NOP_0xCF:
    1133/    D897 : (MACRO)             		OP_MACRO 207, "NOP", "IMP", "NOP_0xCF"
    1133/    D897 :                                             ;TODO
    1134/    D897 : (MACRO)             		NEXT_MACRO
    1134/    D897 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1134/    D897 :                                             
    1134/    D897 :  (MACRO-2)                                  halt
    1134/    D897 : 00                                  BRK
    1134/    D898 : 00                                  BRK
    1134/    D899 :                                             
    1134/    D899 :                                             ;Jump table must be page aligned!!!
    1134/    D899 : A1 02                                       LDA (emu_PC,X)
    1134/    D89B : 0A                                          ASL
    1134/    D89C : 95 0A                                       STA emu_ptr,X
    1134/    D89E : A9 DF                                       LDA #hi(JUMP_TABLE)
    1134/    D8A0 : 69 00                                       ADC #0
    1134/    D8A2 : 95 0B                                       STA emu_ptr+1,X
    1134/    D8A4 : A1 0A                                       LDA (emu_ptr,X)
    1134/    D8A6 : 95 0C                                       STA emu_ptr2,X
    1134/    D8A8 : F6 0A                                       INC emu_ptr,X
    1134/    D8AA : 90 02                                       BCC .skip
    1134/    D8AC : F6 0B                                               INC emu_ptr+1,X
    1134/    D8AE :                                             .skip:
    1134/    D8AE : A1 0A                                       LDA (emu_ptr,X)
    1134/    D8B0 : 95 0D                                       STA emu_ptr2+1,X
    1134/    D8B2 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1135/    D8B5 :                     
    1136/    D8B5 :                     	;0xD0 - BNE REL
    1137/    D8B5 :                     	BNE_REL:
    1138/    D8B5 : (MACRO)             		OP_MACRO 208, "BNE", "REL", "BNE_REL"
    1138/    D8B5 :                                             ;TODO
    1139/    D8B5 : (MACRO)             		NEXT_MACRO
    1139/    D8B5 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1139/    D8B5 :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 102 - 1/5/2022 1:27:48


    1139/    D8B5 :  (MACRO-2)                                  halt
    1139/    D8B5 : 00                                  BRK
    1139/    D8B6 : 00                                  BRK
    1139/    D8B7 :                                             
    1139/    D8B7 :                                             ;Jump table must be page aligned!!!
    1139/    D8B7 : A1 02                                       LDA (emu_PC,X)
    1139/    D8B9 : 0A                                          ASL
    1139/    D8BA : 95 0A                                       STA emu_ptr,X
    1139/    D8BC : A9 DF                                       LDA #hi(JUMP_TABLE)
    1139/    D8BE : 69 00                                       ADC #0
    1139/    D8C0 : 95 0B                                       STA emu_ptr+1,X
    1139/    D8C2 : A1 0A                                       LDA (emu_ptr,X)
    1139/    D8C4 : 95 0C                                       STA emu_ptr2,X
    1139/    D8C6 : F6 0A                                       INC emu_ptr,X
    1139/    D8C8 : 90 02                                       BCC .skip
    1139/    D8CA : F6 0B                                               INC emu_ptr+1,X
    1139/    D8CC :                                             .skip:
    1139/    D8CC : A1 0A                                       LDA (emu_ptr,X)
    1139/    D8CE : 95 0D                                       STA emu_ptr2+1,X
    1139/    D8D0 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1140/    D8D3 :                     
    1141/    D8D3 :                     	;0xD1 - CMP IY
    1142/    D8D3 :                     	CMP_IY:
    1143/    D8D3 : (MACRO)             		OP_MACRO 209, "CMP", "IY", "CMP_IY"
    1143/    D8D3 :                                             ;TODO
    1144/    D8D3 : (MACRO)             		NEXT_MACRO
    1144/    D8D3 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1144/    D8D3 :                                             
    1144/    D8D3 :  (MACRO-2)                                  halt
    1144/    D8D3 : 00                                  BRK
    1144/    D8D4 : 00                                  BRK
    1144/    D8D5 :                                             
    1144/    D8D5 :                                             ;Jump table must be page aligned!!!
    1144/    D8D5 : A1 02                                       LDA (emu_PC,X)
    1144/    D8D7 : 0A                                          ASL
    1144/    D8D8 : 95 0A                                       STA emu_ptr,X
    1144/    D8DA : A9 DF                                       LDA #hi(JUMP_TABLE)
    1144/    D8DC : 69 00                                       ADC #0
    1144/    D8DE : 95 0B                                       STA emu_ptr+1,X
    1144/    D8E0 : A1 0A                                       LDA (emu_ptr,X)
    1144/    D8E2 : 95 0C                                       STA emu_ptr2,X
    1144/    D8E4 : F6 0A                                       INC emu_ptr,X
    1144/    D8E6 : 90 02                                       BCC .skip
    1144/    D8E8 : F6 0B                                               INC emu_ptr+1,X
    1144/    D8EA :                                             .skip:
    1144/    D8EA : A1 0A                                       LDA (emu_ptr,X)
    1144/    D8EC : 95 0D                                       STA emu_ptr2+1,X
    1144/    D8EE : 7C 0C 00                                    JMP (emu_ptr2,X)
    1145/    D8F1 :                     
    1146/    D8F1 :                     	;0xD2 - NOP
    1147/    D8F1 :                     	NOP_0xD2:
    1148/    D8F1 : (MACRO)             		OP_MACRO 210, "NOP", "IMP", "NOP_0xD2"
    1148/    D8F1 :                                             ;TODO
    1149/    D8F1 : (MACRO)             		NEXT_MACRO
    1149/    D8F1 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1149/    D8F1 :                                             
    1149/    D8F1 :  (MACRO-2)                                  halt
    1149/    D8F1 : 00                                  BRK
    1149/    D8F2 : 00                                  BRK
    1149/    D8F3 :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 103 - 1/5/2022 1:27:48


    1149/    D8F3 :                                             ;Jump table must be page aligned!!!
    1149/    D8F3 : A1 02                                       LDA (emu_PC,X)
    1149/    D8F5 : 0A                                          ASL
    1149/    D8F6 : 95 0A                                       STA emu_ptr,X
    1149/    D8F8 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1149/    D8FA : 69 00                                       ADC #0
    1149/    D8FC : 95 0B                                       STA emu_ptr+1,X
    1149/    D8FE : A1 0A                                       LDA (emu_ptr,X)
    1149/    D900 : 95 0C                                       STA emu_ptr2,X
    1149/    D902 : F6 0A                                       INC emu_ptr,X
    1149/    D904 : 90 02                                       BCC .skip
    1149/    D906 : F6 0B                                               INC emu_ptr+1,X
    1149/    D908 :                                             .skip:
    1149/    D908 : A1 0A                                       LDA (emu_ptr,X)
    1149/    D90A : 95 0D                                       STA emu_ptr2+1,X
    1149/    D90C : 7C 0C 00                                    JMP (emu_ptr2,X)
    1150/    D90F :                     
    1151/    D90F :                     	;0xD3 - NOP
    1152/    D90F :                     	NOP_0xD3:
    1153/    D90F : (MACRO)             		OP_MACRO 211, "NOP", "IMP", "NOP_0xD3"
    1153/    D90F :                                             ;TODO
    1154/    D90F : (MACRO)             		NEXT_MACRO
    1154/    D90F :                                             ;Could also copy X to Y before NEXT then restore after jump
    1154/    D90F :                                             
    1154/    D90F :  (MACRO-2)                                  halt
    1154/    D90F : 00                                  BRK
    1154/    D910 : 00                                  BRK
    1154/    D911 :                                             
    1154/    D911 :                                             ;Jump table must be page aligned!!!
    1154/    D911 : A1 02                                       LDA (emu_PC,X)
    1154/    D913 : 0A                                          ASL
    1154/    D914 : 95 0A                                       STA emu_ptr,X
    1154/    D916 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1154/    D918 : 69 00                                       ADC #0
    1154/    D91A : 95 0B                                       STA emu_ptr+1,X
    1154/    D91C : A1 0A                                       LDA (emu_ptr,X)
    1154/    D91E : 95 0C                                       STA emu_ptr2,X
    1154/    D920 : F6 0A                                       INC emu_ptr,X
    1154/    D922 : 90 02                                       BCC .skip
    1154/    D924 : F6 0B                                               INC emu_ptr+1,X
    1154/    D926 :                                             .skip:
    1154/    D926 : A1 0A                                       LDA (emu_ptr,X)
    1154/    D928 : 95 0D                                       STA emu_ptr2+1,X
    1154/    D92A : 7C 0C 00                                    JMP (emu_ptr2,X)
    1155/    D92D :                     
    1156/    D92D :                     	;0xD4 - NOP
    1157/    D92D :                     	NOP_0xD4:
    1158/    D92D : (MACRO)             		OP_MACRO 212, "NOP", "IMP", "NOP_0xD4"
    1158/    D92D :                                             ;TODO
    1159/    D92D : (MACRO)             		NEXT_MACRO
    1159/    D92D :                                             ;Could also copy X to Y before NEXT then restore after jump
    1159/    D92D :                                             
    1159/    D92D :  (MACRO-2)                                  halt
    1159/    D92D : 00                                  BRK
    1159/    D92E : 00                                  BRK
    1159/    D92F :                                             
    1159/    D92F :                                             ;Jump table must be page aligned!!!
    1159/    D92F : A1 02                                       LDA (emu_PC,X)
    1159/    D931 : 0A                                          ASL
    1159/    D932 : 95 0A                                       STA emu_ptr,X
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 104 - 1/5/2022 1:27:48


    1159/    D934 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1159/    D936 : 69 00                                       ADC #0
    1159/    D938 : 95 0B                                       STA emu_ptr+1,X
    1159/    D93A : A1 0A                                       LDA (emu_ptr,X)
    1159/    D93C : 95 0C                                       STA emu_ptr2,X
    1159/    D93E : F6 0A                                       INC emu_ptr,X
    1159/    D940 : 90 02                                       BCC .skip
    1159/    D942 : F6 0B                                               INC emu_ptr+1,X
    1159/    D944 :                                             .skip:
    1159/    D944 : A1 0A                                       LDA (emu_ptr,X)
    1159/    D946 : 95 0D                                       STA emu_ptr2+1,X
    1159/    D948 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1160/    D94B :                     
    1161/    D94B :                     	;0xD5 - CMP ZPX
    1162/    D94B :                     	CMP_ZPX:
    1163/    D94B : (MACRO)             		OP_MACRO 213, "CMP", "ZPX", "CMP_ZPX"
    1163/    D94B :                                             ;TODO
    1164/    D94B : (MACRO)             		NEXT_MACRO
    1164/    D94B :                                             ;Could also copy X to Y before NEXT then restore after jump
    1164/    D94B :                                             
    1164/    D94B :  (MACRO-2)                                  halt
    1164/    D94B : 00                                  BRK
    1164/    D94C : 00                                  BRK
    1164/    D94D :                                             
    1164/    D94D :                                             ;Jump table must be page aligned!!!
    1164/    D94D : A1 02                                       LDA (emu_PC,X)
    1164/    D94F : 0A                                          ASL
    1164/    D950 : 95 0A                                       STA emu_ptr,X
    1164/    D952 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1164/    D954 : 69 00                                       ADC #0
    1164/    D956 : 95 0B                                       STA emu_ptr+1,X
    1164/    D958 : A1 0A                                       LDA (emu_ptr,X)
    1164/    D95A : 95 0C                                       STA emu_ptr2,X
    1164/    D95C : F6 0A                                       INC emu_ptr,X
    1164/    D95E : 90 02                                       BCC .skip
    1164/    D960 : F6 0B                                               INC emu_ptr+1,X
    1164/    D962 :                                             .skip:
    1164/    D962 : A1 0A                                       LDA (emu_ptr,X)
    1164/    D964 : 95 0D                                       STA emu_ptr2+1,X
    1164/    D966 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1165/    D969 :                     
    1166/    D969 :                     	;0xD6 - DEC ZPX
    1167/    D969 :                     	DEC_ZPX:
    1168/    D969 : (MACRO)             		OP_MACRO 214, "DEC", "ZPX", "DEC_ZPX"
    1168/    D969 :                                             ;TODO
    1169/    D969 : (MACRO)             		NEXT_MACRO
    1169/    D969 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1169/    D969 :                                             
    1169/    D969 :  (MACRO-2)                                  halt
    1169/    D969 : 00                                  BRK
    1169/    D96A : 00                                  BRK
    1169/    D96B :                                             
    1169/    D96B :                                             ;Jump table must be page aligned!!!
    1169/    D96B : A1 02                                       LDA (emu_PC,X)
    1169/    D96D : 0A                                          ASL
    1169/    D96E : 95 0A                                       STA emu_ptr,X
    1169/    D970 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1169/    D972 : 69 00                                       ADC #0
    1169/    D974 : 95 0B                                       STA emu_ptr+1,X
    1169/    D976 : A1 0A                                       LDA (emu_ptr,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 105 - 1/5/2022 1:27:48


    1169/    D978 : 95 0C                                       STA emu_ptr2,X
    1169/    D97A : F6 0A                                       INC emu_ptr,X
    1169/    D97C : 90 02                                       BCC .skip
    1169/    D97E : F6 0B                                               INC emu_ptr+1,X
    1169/    D980 :                                             .skip:
    1169/    D980 : A1 0A                                       LDA (emu_ptr,X)
    1169/    D982 : 95 0D                                       STA emu_ptr2+1,X
    1169/    D984 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1170/    D987 :                     
    1171/    D987 :                     	;0xD7 - NOP
    1172/    D987 :                     	NOP_0xD7:
    1173/    D987 : (MACRO)             		OP_MACRO 215, "NOP", "IMP", "NOP_0xD7"
    1173/    D987 :                                             ;TODO
    1174/    D987 : (MACRO)             		NEXT_MACRO
    1174/    D987 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1174/    D987 :                                             
    1174/    D987 :  (MACRO-2)                                  halt
    1174/    D987 : 00                                  BRK
    1174/    D988 : 00                                  BRK
    1174/    D989 :                                             
    1174/    D989 :                                             ;Jump table must be page aligned!!!
    1174/    D989 : A1 02                                       LDA (emu_PC,X)
    1174/    D98B : 0A                                          ASL
    1174/    D98C : 95 0A                                       STA emu_ptr,X
    1174/    D98E : A9 DF                                       LDA #hi(JUMP_TABLE)
    1174/    D990 : 69 00                                       ADC #0
    1174/    D992 : 95 0B                                       STA emu_ptr+1,X
    1174/    D994 : A1 0A                                       LDA (emu_ptr,X)
    1174/    D996 : 95 0C                                       STA emu_ptr2,X
    1174/    D998 : F6 0A                                       INC emu_ptr,X
    1174/    D99A : 90 02                                       BCC .skip
    1174/    D99C : F6 0B                                               INC emu_ptr+1,X
    1174/    D99E :                                             .skip:
    1174/    D99E : A1 0A                                       LDA (emu_ptr,X)
    1174/    D9A0 : 95 0D                                       STA emu_ptr2+1,X
    1174/    D9A2 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1175/    D9A5 :                     
    1176/    D9A5 :                     	;0xD8 - CLD IMP
    1177/    D9A5 :                     	CLD_IMP:
    1178/    D9A5 : (MACRO)             		OP_MACRO 216, "CLD", "IMP", "CLD_IMP"
    1178/    D9A5 :                                             ;TODO
    1179/    D9A5 : (MACRO)             		NEXT_MACRO
    1179/    D9A5 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1179/    D9A5 :                                             
    1179/    D9A5 :  (MACRO-2)                                  halt
    1179/    D9A5 : 00                                  BRK
    1179/    D9A6 : 00                                  BRK
    1179/    D9A7 :                                             
    1179/    D9A7 :                                             ;Jump table must be page aligned!!!
    1179/    D9A7 : A1 02                                       LDA (emu_PC,X)
    1179/    D9A9 : 0A                                          ASL
    1179/    D9AA : 95 0A                                       STA emu_ptr,X
    1179/    D9AC : A9 DF                                       LDA #hi(JUMP_TABLE)
    1179/    D9AE : 69 00                                       ADC #0
    1179/    D9B0 : 95 0B                                       STA emu_ptr+1,X
    1179/    D9B2 : A1 0A                                       LDA (emu_ptr,X)
    1179/    D9B4 : 95 0C                                       STA emu_ptr2,X
    1179/    D9B6 : F6 0A                                       INC emu_ptr,X
    1179/    D9B8 : 90 02                                       BCC .skip
    1179/    D9BA : F6 0B                                               INC emu_ptr+1,X
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 106 - 1/5/2022 1:27:48


    1179/    D9BC :                                             .skip:
    1179/    D9BC : A1 0A                                       LDA (emu_ptr,X)
    1179/    D9BE : 95 0D                                       STA emu_ptr2+1,X
    1179/    D9C0 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1180/    D9C3 :                     
    1181/    D9C3 :                     	;0xD9 - CMP ABSY
    1182/    D9C3 :                     	CMP_ABSY:
    1183/    D9C3 : (MACRO)             		OP_MACRO 217, "CMP", "ABSY", "CMP_ABSY"
    1183/    D9C3 :                                             ;TODO
    1184/    D9C3 : (MACRO)             		NEXT_MACRO
    1184/    D9C3 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1184/    D9C3 :                                             
    1184/    D9C3 :  (MACRO-2)                                  halt
    1184/    D9C3 : 00                                  BRK
    1184/    D9C4 : 00                                  BRK
    1184/    D9C5 :                                             
    1184/    D9C5 :                                             ;Jump table must be page aligned!!!
    1184/    D9C5 : A1 02                                       LDA (emu_PC,X)
    1184/    D9C7 : 0A                                          ASL
    1184/    D9C8 : 95 0A                                       STA emu_ptr,X
    1184/    D9CA : A9 DF                                       LDA #hi(JUMP_TABLE)
    1184/    D9CC : 69 00                                       ADC #0
    1184/    D9CE : 95 0B                                       STA emu_ptr+1,X
    1184/    D9D0 : A1 0A                                       LDA (emu_ptr,X)
    1184/    D9D2 : 95 0C                                       STA emu_ptr2,X
    1184/    D9D4 : F6 0A                                       INC emu_ptr,X
    1184/    D9D6 : 90 02                                       BCC .skip
    1184/    D9D8 : F6 0B                                               INC emu_ptr+1,X
    1184/    D9DA :                                             .skip:
    1184/    D9DA : A1 0A                                       LDA (emu_ptr,X)
    1184/    D9DC : 95 0D                                       STA emu_ptr2+1,X
    1184/    D9DE : 7C 0C 00                                    JMP (emu_ptr2,X)
    1185/    D9E1 :                     
    1186/    D9E1 :                     	;0xDA - NOP
    1187/    D9E1 :                     	NOP_0xDA:
    1188/    D9E1 : (MACRO)             		OP_MACRO 218, "NOP", "IMP", "NOP_0xDA"
    1188/    D9E1 :                                             ;TODO
    1189/    D9E1 : (MACRO)             		NEXT_MACRO
    1189/    D9E1 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1189/    D9E1 :                                             
    1189/    D9E1 :  (MACRO-2)                                  halt
    1189/    D9E1 : 00                                  BRK
    1189/    D9E2 : 00                                  BRK
    1189/    D9E3 :                                             
    1189/    D9E3 :                                             ;Jump table must be page aligned!!!
    1189/    D9E3 : A1 02                                       LDA (emu_PC,X)
    1189/    D9E5 : 0A                                          ASL
    1189/    D9E6 : 95 0A                                       STA emu_ptr,X
    1189/    D9E8 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1189/    D9EA : 69 00                                       ADC #0
    1189/    D9EC : 95 0B                                       STA emu_ptr+1,X
    1189/    D9EE : A1 0A                                       LDA (emu_ptr,X)
    1189/    D9F0 : 95 0C                                       STA emu_ptr2,X
    1189/    D9F2 : F6 0A                                       INC emu_ptr,X
    1189/    D9F4 : 90 02                                       BCC .skip
    1189/    D9F6 : F6 0B                                               INC emu_ptr+1,X
    1189/    D9F8 :                                             .skip:
    1189/    D9F8 : A1 0A                                       LDA (emu_ptr,X)
    1189/    D9FA : 95 0D                                       STA emu_ptr2+1,X
    1189/    D9FC : 7C 0C 00                                    JMP (emu_ptr2,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 107 - 1/5/2022 1:27:48


    1190/    D9FF :                     
    1191/    D9FF :                     	;0xDB - NOP
    1192/    D9FF :                     	NOP_0xDB:
    1193/    D9FF : (MACRO)             		OP_MACRO 219, "NOP", "IMP", "NOP_0xDB"
    1193/    D9FF :                                             ;TODO
    1194/    D9FF : (MACRO)             		NEXT_MACRO
    1194/    D9FF :                                             ;Could also copy X to Y before NEXT then restore after jump
    1194/    D9FF :                                             
    1194/    D9FF :  (MACRO-2)                                  halt
    1194/    D9FF : 00                                  BRK
    1194/    DA00 : 00                                  BRK
    1194/    DA01 :                                             
    1194/    DA01 :                                             ;Jump table must be page aligned!!!
    1194/    DA01 : A1 02                                       LDA (emu_PC,X)
    1194/    DA03 : 0A                                          ASL
    1194/    DA04 : 95 0A                                       STA emu_ptr,X
    1194/    DA06 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1194/    DA08 : 69 00                                       ADC #0
    1194/    DA0A : 95 0B                                       STA emu_ptr+1,X
    1194/    DA0C : A1 0A                                       LDA (emu_ptr,X)
    1194/    DA0E : 95 0C                                       STA emu_ptr2,X
    1194/    DA10 : F6 0A                                       INC emu_ptr,X
    1194/    DA12 : 90 02                                       BCC .skip
    1194/    DA14 : F6 0B                                               INC emu_ptr+1,X
    1194/    DA16 :                                             .skip:
    1194/    DA16 : A1 0A                                       LDA (emu_ptr,X)
    1194/    DA18 : 95 0D                                       STA emu_ptr2+1,X
    1194/    DA1A : 7C 0C 00                                    JMP (emu_ptr2,X)
    1195/    DA1D :                     
    1196/    DA1D :                     	;0xDC - NOP
    1197/    DA1D :                     	NOP_0xDC:
    1198/    DA1D : (MACRO)             		OP_MACRO 220, "NOP", "IMP", "NOP_0xDC"
    1198/    DA1D :                                             ;TODO
    1199/    DA1D : (MACRO)             		NEXT_MACRO
    1199/    DA1D :                                             ;Could also copy X to Y before NEXT then restore after jump
    1199/    DA1D :                                             
    1199/    DA1D :  (MACRO-2)                                  halt
    1199/    DA1D : 00                                  BRK
    1199/    DA1E : 00                                  BRK
    1199/    DA1F :                                             
    1199/    DA1F :                                             ;Jump table must be page aligned!!!
    1199/    DA1F : A1 02                                       LDA (emu_PC,X)
    1199/    DA21 : 0A                                          ASL
    1199/    DA22 : 95 0A                                       STA emu_ptr,X
    1199/    DA24 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1199/    DA26 : 69 00                                       ADC #0
    1199/    DA28 : 95 0B                                       STA emu_ptr+1,X
    1199/    DA2A : A1 0A                                       LDA (emu_ptr,X)
    1199/    DA2C : 95 0C                                       STA emu_ptr2,X
    1199/    DA2E : F6 0A                                       INC emu_ptr,X
    1199/    DA30 : 90 02                                       BCC .skip
    1199/    DA32 : F6 0B                                               INC emu_ptr+1,X
    1199/    DA34 :                                             .skip:
    1199/    DA34 : A1 0A                                       LDA (emu_ptr,X)
    1199/    DA36 : 95 0D                                       STA emu_ptr2+1,X
    1199/    DA38 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1200/    DA3B :                     
    1201/    DA3B :                     	;0xDD - CMP ABSX
    1202/    DA3B :                     	CMP_ABSX:
    1203/    DA3B : (MACRO)             		OP_MACRO 221, "CMP", "ABSX", "CMP_ABSX"
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 108 - 1/5/2022 1:27:48


    1203/    DA3B :                                             ;TODO
    1204/    DA3B : (MACRO)             		NEXT_MACRO
    1204/    DA3B :                                             ;Could also copy X to Y before NEXT then restore after jump
    1204/    DA3B :                                             
    1204/    DA3B :  (MACRO-2)                                  halt
    1204/    DA3B : 00                                  BRK
    1204/    DA3C : 00                                  BRK
    1204/    DA3D :                                             
    1204/    DA3D :                                             ;Jump table must be page aligned!!!
    1204/    DA3D : A1 02                                       LDA (emu_PC,X)
    1204/    DA3F : 0A                                          ASL
    1204/    DA40 : 95 0A                                       STA emu_ptr,X
    1204/    DA42 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1204/    DA44 : 69 00                                       ADC #0
    1204/    DA46 : 95 0B                                       STA emu_ptr+1,X
    1204/    DA48 : A1 0A                                       LDA (emu_ptr,X)
    1204/    DA4A : 95 0C                                       STA emu_ptr2,X
    1204/    DA4C : F6 0A                                       INC emu_ptr,X
    1204/    DA4E : 90 02                                       BCC .skip
    1204/    DA50 : F6 0B                                               INC emu_ptr+1,X
    1204/    DA52 :                                             .skip:
    1204/    DA52 : A1 0A                                       LDA (emu_ptr,X)
    1204/    DA54 : 95 0D                                       STA emu_ptr2+1,X
    1204/    DA56 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1205/    DA59 :                     
    1206/    DA59 :                     	;0xDE - DEC ABSX
    1207/    DA59 :                     	DEC_ABSX:
    1208/    DA59 : (MACRO)             		OP_MACRO 222, "DEC", "ABSX", "DEC_ABSX"
    1208/    DA59 :                                             ;TODO
    1209/    DA59 : (MACRO)             		NEXT_MACRO
    1209/    DA59 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1209/    DA59 :                                             
    1209/    DA59 :  (MACRO-2)                                  halt
    1209/    DA59 : 00                                  BRK
    1209/    DA5A : 00                                  BRK
    1209/    DA5B :                                             
    1209/    DA5B :                                             ;Jump table must be page aligned!!!
    1209/    DA5B : A1 02                                       LDA (emu_PC,X)
    1209/    DA5D : 0A                                          ASL
    1209/    DA5E : 95 0A                                       STA emu_ptr,X
    1209/    DA60 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1209/    DA62 : 69 00                                       ADC #0
    1209/    DA64 : 95 0B                                       STA emu_ptr+1,X
    1209/    DA66 : A1 0A                                       LDA (emu_ptr,X)
    1209/    DA68 : 95 0C                                       STA emu_ptr2,X
    1209/    DA6A : F6 0A                                       INC emu_ptr,X
    1209/    DA6C : 90 02                                       BCC .skip
    1209/    DA6E : F6 0B                                               INC emu_ptr+1,X
    1209/    DA70 :                                             .skip:
    1209/    DA70 : A1 0A                                       LDA (emu_ptr,X)
    1209/    DA72 : 95 0D                                       STA emu_ptr2+1,X
    1209/    DA74 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1210/    DA77 :                     
    1211/    DA77 :                     	;0xDF - NOP
    1212/    DA77 :                     	NOP_0xDF:
    1213/    DA77 : (MACRO)             		OP_MACRO 223, "NOP", "IMP", "NOP_0xDF"
    1213/    DA77 :                                             ;TODO
    1214/    DA77 : (MACRO)             		NEXT_MACRO
    1214/    DA77 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1214/    DA77 :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 109 - 1/5/2022 1:27:48


    1214/    DA77 :  (MACRO-2)                                  halt
    1214/    DA77 : 00                                  BRK
    1214/    DA78 : 00                                  BRK
    1214/    DA79 :                                             
    1214/    DA79 :                                             ;Jump table must be page aligned!!!
    1214/    DA79 : A1 02                                       LDA (emu_PC,X)
    1214/    DA7B : 0A                                          ASL
    1214/    DA7C : 95 0A                                       STA emu_ptr,X
    1214/    DA7E : A9 DF                                       LDA #hi(JUMP_TABLE)
    1214/    DA80 : 69 00                                       ADC #0
    1214/    DA82 : 95 0B                                       STA emu_ptr+1,X
    1214/    DA84 : A1 0A                                       LDA (emu_ptr,X)
    1214/    DA86 : 95 0C                                       STA emu_ptr2,X
    1214/    DA88 : F6 0A                                       INC emu_ptr,X
    1214/    DA8A : 90 02                                       BCC .skip
    1214/    DA8C : F6 0B                                               INC emu_ptr+1,X
    1214/    DA8E :                                             .skip:
    1214/    DA8E : A1 0A                                       LDA (emu_ptr,X)
    1214/    DA90 : 95 0D                                       STA emu_ptr2+1,X
    1214/    DA92 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1215/    DA95 :                     
    1216/    DA95 :                     	;0xE0 - CPX IMMED
    1217/    DA95 :                     	CPX_IMMED:
    1218/    DA95 : (MACRO)             		OP_MACRO 224, "CPX", "IMMED", "CPX_IMMED"
    1218/    DA95 :                                             ;TODO
    1219/    DA95 : (MACRO)             		NEXT_MACRO
    1219/    DA95 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1219/    DA95 :                                             
    1219/    DA95 :  (MACRO-2)                                  halt
    1219/    DA95 : 00                                  BRK
    1219/    DA96 : 00                                  BRK
    1219/    DA97 :                                             
    1219/    DA97 :                                             ;Jump table must be page aligned!!!
    1219/    DA97 : A1 02                                       LDA (emu_PC,X)
    1219/    DA99 : 0A                                          ASL
    1219/    DA9A : 95 0A                                       STA emu_ptr,X
    1219/    DA9C : A9 DF                                       LDA #hi(JUMP_TABLE)
    1219/    DA9E : 69 00                                       ADC #0
    1219/    DAA0 : 95 0B                                       STA emu_ptr+1,X
    1219/    DAA2 : A1 0A                                       LDA (emu_ptr,X)
    1219/    DAA4 : 95 0C                                       STA emu_ptr2,X
    1219/    DAA6 : F6 0A                                       INC emu_ptr,X
    1219/    DAA8 : 90 02                                       BCC .skip
    1219/    DAAA : F6 0B                                               INC emu_ptr+1,X
    1219/    DAAC :                                             .skip:
    1219/    DAAC : A1 0A                                       LDA (emu_ptr,X)
    1219/    DAAE : 95 0D                                       STA emu_ptr2+1,X
    1219/    DAB0 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1220/    DAB3 :                     
    1221/    DAB3 :                     	;0xE1 - SBC IX
    1222/    DAB3 :                     	SBC_IX:
    1223/    DAB3 : (MACRO)             		OP_MACRO 225, "SBC", "IX", "SBC_IX"
    1223/    DAB3 :                                             ;TODO
    1224/    DAB3 : (MACRO)             		NEXT_MACRO
    1224/    DAB3 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1224/    DAB3 :                                             
    1224/    DAB3 :  (MACRO-2)                                  halt
    1224/    DAB3 : 00                                  BRK
    1224/    DAB4 : 00                                  BRK
    1224/    DAB5 :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 110 - 1/5/2022 1:27:48


    1224/    DAB5 :                                             ;Jump table must be page aligned!!!
    1224/    DAB5 : A1 02                                       LDA (emu_PC,X)
    1224/    DAB7 : 0A                                          ASL
    1224/    DAB8 : 95 0A                                       STA emu_ptr,X
    1224/    DABA : A9 DF                                       LDA #hi(JUMP_TABLE)
    1224/    DABC : 69 00                                       ADC #0
    1224/    DABE : 95 0B                                       STA emu_ptr+1,X
    1224/    DAC0 : A1 0A                                       LDA (emu_ptr,X)
    1224/    DAC2 : 95 0C                                       STA emu_ptr2,X
    1224/    DAC4 : F6 0A                                       INC emu_ptr,X
    1224/    DAC6 : 90 02                                       BCC .skip
    1224/    DAC8 : F6 0B                                               INC emu_ptr+1,X
    1224/    DACA :                                             .skip:
    1224/    DACA : A1 0A                                       LDA (emu_ptr,X)
    1224/    DACC : 95 0D                                       STA emu_ptr2+1,X
    1224/    DACE : 7C 0C 00                                    JMP (emu_ptr2,X)
    1225/    DAD1 :                     
    1226/    DAD1 :                     	;0xE2 - NOP
    1227/    DAD1 :                     	NOP_0xE2:
    1228/    DAD1 : (MACRO)             		OP_MACRO 226, "NOP", "IMP", "NOP_0xE2"
    1228/    DAD1 :                                             ;TODO
    1229/    DAD1 : (MACRO)             		NEXT_MACRO
    1229/    DAD1 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1229/    DAD1 :                                             
    1229/    DAD1 :  (MACRO-2)                                  halt
    1229/    DAD1 : 00                                  BRK
    1229/    DAD2 : 00                                  BRK
    1229/    DAD3 :                                             
    1229/    DAD3 :                                             ;Jump table must be page aligned!!!
    1229/    DAD3 : A1 02                                       LDA (emu_PC,X)
    1229/    DAD5 : 0A                                          ASL
    1229/    DAD6 : 95 0A                                       STA emu_ptr,X
    1229/    DAD8 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1229/    DADA : 69 00                                       ADC #0
    1229/    DADC : 95 0B                                       STA emu_ptr+1,X
    1229/    DADE : A1 0A                                       LDA (emu_ptr,X)
    1229/    DAE0 : 95 0C                                       STA emu_ptr2,X
    1229/    DAE2 : F6 0A                                       INC emu_ptr,X
    1229/    DAE4 : 90 02                                       BCC .skip
    1229/    DAE6 : F6 0B                                               INC emu_ptr+1,X
    1229/    DAE8 :                                             .skip:
    1229/    DAE8 : A1 0A                                       LDA (emu_ptr,X)
    1229/    DAEA : 95 0D                                       STA emu_ptr2+1,X
    1229/    DAEC : 7C 0C 00                                    JMP (emu_ptr2,X)
    1230/    DAEF :                     
    1231/    DAEF :                     	;0xE3 - NOP
    1232/    DAEF :                     	NOP_0xE3:
    1233/    DAEF : (MACRO)             		OP_MACRO 227, "NOP", "IMP", "NOP_0xE3"
    1233/    DAEF :                                             ;TODO
    1234/    DAEF : (MACRO)             		NEXT_MACRO
    1234/    DAEF :                                             ;Could also copy X to Y before NEXT then restore after jump
    1234/    DAEF :                                             
    1234/    DAEF :  (MACRO-2)                                  halt
    1234/    DAEF : 00                                  BRK
    1234/    DAF0 : 00                                  BRK
    1234/    DAF1 :                                             
    1234/    DAF1 :                                             ;Jump table must be page aligned!!!
    1234/    DAF1 : A1 02                                       LDA (emu_PC,X)
    1234/    DAF3 : 0A                                          ASL
    1234/    DAF4 : 95 0A                                       STA emu_ptr,X
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 111 - 1/5/2022 1:27:48


    1234/    DAF6 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1234/    DAF8 : 69 00                                       ADC #0
    1234/    DAFA : 95 0B                                       STA emu_ptr+1,X
    1234/    DAFC : A1 0A                                       LDA (emu_ptr,X)
    1234/    DAFE : 95 0C                                       STA emu_ptr2,X
    1234/    DB00 : F6 0A                                       INC emu_ptr,X
    1234/    DB02 : 90 02                                       BCC .skip
    1234/    DB04 : F6 0B                                               INC emu_ptr+1,X
    1234/    DB06 :                                             .skip:
    1234/    DB06 : A1 0A                                       LDA (emu_ptr,X)
    1234/    DB08 : 95 0D                                       STA emu_ptr2+1,X
    1234/    DB0A : 7C 0C 00                                    JMP (emu_ptr2,X)
    1235/    DB0D :                     
    1236/    DB0D :                     	;0xE4 - CPX ZP
    1237/    DB0D :                     	CPX_ZP:
    1238/    DB0D : (MACRO)             		OP_MACRO 228, "CPX", "ZP", "CPX_ZP"
    1238/    DB0D :                                             ;TODO
    1239/    DB0D : (MACRO)             		NEXT_MACRO
    1239/    DB0D :                                             ;Could also copy X to Y before NEXT then restore after jump
    1239/    DB0D :                                             
    1239/    DB0D :  (MACRO-2)                                  halt
    1239/    DB0D : 00                                  BRK
    1239/    DB0E : 00                                  BRK
    1239/    DB0F :                                             
    1239/    DB0F :                                             ;Jump table must be page aligned!!!
    1239/    DB0F : A1 02                                       LDA (emu_PC,X)
    1239/    DB11 : 0A                                          ASL
    1239/    DB12 : 95 0A                                       STA emu_ptr,X
    1239/    DB14 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1239/    DB16 : 69 00                                       ADC #0
    1239/    DB18 : 95 0B                                       STA emu_ptr+1,X
    1239/    DB1A : A1 0A                                       LDA (emu_ptr,X)
    1239/    DB1C : 95 0C                                       STA emu_ptr2,X
    1239/    DB1E : F6 0A                                       INC emu_ptr,X
    1239/    DB20 : 90 02                                       BCC .skip
    1239/    DB22 : F6 0B                                               INC emu_ptr+1,X
    1239/    DB24 :                                             .skip:
    1239/    DB24 : A1 0A                                       LDA (emu_ptr,X)
    1239/    DB26 : 95 0D                                       STA emu_ptr2+1,X
    1239/    DB28 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1240/    DB2B :                     
    1241/    DB2B :                     	;0xE5 - SBC ZP
    1242/    DB2B :                     	SBC_ZP:
    1243/    DB2B : (MACRO)             		OP_MACRO 229, "SBC", "ZP", "SBC_ZP"
    1243/    DB2B :                                             ;TODO
    1244/    DB2B : (MACRO)             		NEXT_MACRO
    1244/    DB2B :                                             ;Could also copy X to Y before NEXT then restore after jump
    1244/    DB2B :                                             
    1244/    DB2B :  (MACRO-2)                                  halt
    1244/    DB2B : 00                                  BRK
    1244/    DB2C : 00                                  BRK
    1244/    DB2D :                                             
    1244/    DB2D :                                             ;Jump table must be page aligned!!!
    1244/    DB2D : A1 02                                       LDA (emu_PC,X)
    1244/    DB2F : 0A                                          ASL
    1244/    DB30 : 95 0A                                       STA emu_ptr,X
    1244/    DB32 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1244/    DB34 : 69 00                                       ADC #0
    1244/    DB36 : 95 0B                                       STA emu_ptr+1,X
    1244/    DB38 : A1 0A                                       LDA (emu_ptr,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 112 - 1/5/2022 1:27:48


    1244/    DB3A : 95 0C                                       STA emu_ptr2,X
    1244/    DB3C : F6 0A                                       INC emu_ptr,X
    1244/    DB3E : 90 02                                       BCC .skip
    1244/    DB40 : F6 0B                                               INC emu_ptr+1,X
    1244/    DB42 :                                             .skip:
    1244/    DB42 : A1 0A                                       LDA (emu_ptr,X)
    1244/    DB44 : 95 0D                                       STA emu_ptr2+1,X
    1244/    DB46 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1245/    DB49 :                     
    1246/    DB49 :                     	;0xE6 - INC ZP
    1247/    DB49 :                     	INC_ZP:
    1248/    DB49 : (MACRO)             		OP_MACRO 230, "INC", "ZP", "INC_ZP"
    1248/    DB49 :                                             ;TODO
    1249/    DB49 : (MACRO)             		NEXT_MACRO
    1249/    DB49 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1249/    DB49 :                                             
    1249/    DB49 :  (MACRO-2)                                  halt
    1249/    DB49 : 00                                  BRK
    1249/    DB4A : 00                                  BRK
    1249/    DB4B :                                             
    1249/    DB4B :                                             ;Jump table must be page aligned!!!
    1249/    DB4B : A1 02                                       LDA (emu_PC,X)
    1249/    DB4D : 0A                                          ASL
    1249/    DB4E : 95 0A                                       STA emu_ptr,X
    1249/    DB50 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1249/    DB52 : 69 00                                       ADC #0
    1249/    DB54 : 95 0B                                       STA emu_ptr+1,X
    1249/    DB56 : A1 0A                                       LDA (emu_ptr,X)
    1249/    DB58 : 95 0C                                       STA emu_ptr2,X
    1249/    DB5A : F6 0A                                       INC emu_ptr,X
    1249/    DB5C : 90 02                                       BCC .skip
    1249/    DB5E : F6 0B                                               INC emu_ptr+1,X
    1249/    DB60 :                                             .skip:
    1249/    DB60 : A1 0A                                       LDA (emu_ptr,X)
    1249/    DB62 : 95 0D                                       STA emu_ptr2+1,X
    1249/    DB64 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1250/    DB67 :                     
    1251/    DB67 :                     	;0xE7 - NOP
    1252/    DB67 :                     	NOP_0xE7:
    1253/    DB67 : (MACRO)             		OP_MACRO 231, "NOP", "IMP", "NOP_0xE7"
    1253/    DB67 :                                             ;TODO
    1254/    DB67 : (MACRO)             		NEXT_MACRO
    1254/    DB67 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1254/    DB67 :                                             
    1254/    DB67 :  (MACRO-2)                                  halt
    1254/    DB67 : 00                                  BRK
    1254/    DB68 : 00                                  BRK
    1254/    DB69 :                                             
    1254/    DB69 :                                             ;Jump table must be page aligned!!!
    1254/    DB69 : A1 02                                       LDA (emu_PC,X)
    1254/    DB6B : 0A                                          ASL
    1254/    DB6C : 95 0A                                       STA emu_ptr,X
    1254/    DB6E : A9 DF                                       LDA #hi(JUMP_TABLE)
    1254/    DB70 : 69 00                                       ADC #0
    1254/    DB72 : 95 0B                                       STA emu_ptr+1,X
    1254/    DB74 : A1 0A                                       LDA (emu_ptr,X)
    1254/    DB76 : 95 0C                                       STA emu_ptr2,X
    1254/    DB78 : F6 0A                                       INC emu_ptr,X
    1254/    DB7A : 90 02                                       BCC .skip
    1254/    DB7C : F6 0B                                               INC emu_ptr+1,X
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 113 - 1/5/2022 1:27:48


    1254/    DB7E :                                             .skip:
    1254/    DB7E : A1 0A                                       LDA (emu_ptr,X)
    1254/    DB80 : 95 0D                                       STA emu_ptr2+1,X
    1254/    DB82 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1255/    DB85 :                     
    1256/    DB85 :                     	;0xE8 - INX IMP
    1257/    DB85 :                     	INX_IMP:
    1258/    DB85 : (MACRO)             		OP_MACRO 232, "INX", "IMP", "INX_IMP"
    1258/    DB85 :                                             ;TODO
    1259/    DB85 : (MACRO)             		NEXT_MACRO
    1259/    DB85 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1259/    DB85 :                                             
    1259/    DB85 :  (MACRO-2)                                  halt
    1259/    DB85 : 00                                  BRK
    1259/    DB86 : 00                                  BRK
    1259/    DB87 :                                             
    1259/    DB87 :                                             ;Jump table must be page aligned!!!
    1259/    DB87 : A1 02                                       LDA (emu_PC,X)
    1259/    DB89 : 0A                                          ASL
    1259/    DB8A : 95 0A                                       STA emu_ptr,X
    1259/    DB8C : A9 DF                                       LDA #hi(JUMP_TABLE)
    1259/    DB8E : 69 00                                       ADC #0
    1259/    DB90 : 95 0B                                       STA emu_ptr+1,X
    1259/    DB92 : A1 0A                                       LDA (emu_ptr,X)
    1259/    DB94 : 95 0C                                       STA emu_ptr2,X
    1259/    DB96 : F6 0A                                       INC emu_ptr,X
    1259/    DB98 : 90 02                                       BCC .skip
    1259/    DB9A : F6 0B                                               INC emu_ptr+1,X
    1259/    DB9C :                                             .skip:
    1259/    DB9C : A1 0A                                       LDA (emu_ptr,X)
    1259/    DB9E : 95 0D                                       STA emu_ptr2+1,X
    1259/    DBA0 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1260/    DBA3 :                     
    1261/    DBA3 :                     	;0xE9 - SBC IMMED
    1262/    DBA3 :                     	SBC_IMMED:
    1263/    DBA3 : (MACRO)             		OP_MACRO 233, "SBC", "IMMED", "SBC_IMMED"
    1263/    DBA3 :                                             ;TODO
    1264/    DBA3 : (MACRO)             		NEXT_MACRO
    1264/    DBA3 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1264/    DBA3 :                                             
    1264/    DBA3 :  (MACRO-2)                                  halt
    1264/    DBA3 : 00                                  BRK
    1264/    DBA4 : 00                                  BRK
    1264/    DBA5 :                                             
    1264/    DBA5 :                                             ;Jump table must be page aligned!!!
    1264/    DBA5 : A1 02                                       LDA (emu_PC,X)
    1264/    DBA7 : 0A                                          ASL
    1264/    DBA8 : 95 0A                                       STA emu_ptr,X
    1264/    DBAA : A9 DF                                       LDA #hi(JUMP_TABLE)
    1264/    DBAC : 69 00                                       ADC #0
    1264/    DBAE : 95 0B                                       STA emu_ptr+1,X
    1264/    DBB0 : A1 0A                                       LDA (emu_ptr,X)
    1264/    DBB2 : 95 0C                                       STA emu_ptr2,X
    1264/    DBB4 : F6 0A                                       INC emu_ptr,X
    1264/    DBB6 : 90 02                                       BCC .skip
    1264/    DBB8 : F6 0B                                               INC emu_ptr+1,X
    1264/    DBBA :                                             .skip:
    1264/    DBBA : A1 0A                                       LDA (emu_ptr,X)
    1264/    DBBC : 95 0D                                       STA emu_ptr2+1,X
    1264/    DBBE : 7C 0C 00                                    JMP (emu_ptr2,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 114 - 1/5/2022 1:27:48


    1265/    DBC1 :                     
    1266/    DBC1 :                     	;0xEA - NOP IMP
    1267/    DBC1 :                     	NOP_IMP:
    1268/    DBC1 : (MACRO)             		OP_MACRO 234, "NOP", "IMP", "NOP_IMP"
    1268/    DBC1 :                                             ;TODO
    1269/    DBC1 : (MACRO)             		NEXT_MACRO
    1269/    DBC1 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1269/    DBC1 :                                             
    1269/    DBC1 :  (MACRO-2)                                  halt
    1269/    DBC1 : 00                                  BRK
    1269/    DBC2 : 00                                  BRK
    1269/    DBC3 :                                             
    1269/    DBC3 :                                             ;Jump table must be page aligned!!!
    1269/    DBC3 : A1 02                                       LDA (emu_PC,X)
    1269/    DBC5 : 0A                                          ASL
    1269/    DBC6 : 95 0A                                       STA emu_ptr,X
    1269/    DBC8 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1269/    DBCA : 69 00                                       ADC #0
    1269/    DBCC : 95 0B                                       STA emu_ptr+1,X
    1269/    DBCE : A1 0A                                       LDA (emu_ptr,X)
    1269/    DBD0 : 95 0C                                       STA emu_ptr2,X
    1269/    DBD2 : F6 0A                                       INC emu_ptr,X
    1269/    DBD4 : 90 02                                       BCC .skip
    1269/    DBD6 : F6 0B                                               INC emu_ptr+1,X
    1269/    DBD8 :                                             .skip:
    1269/    DBD8 : A1 0A                                       LDA (emu_ptr,X)
    1269/    DBDA : 95 0D                                       STA emu_ptr2+1,X
    1269/    DBDC : 7C 0C 00                                    JMP (emu_ptr2,X)
    1270/    DBDF :                     
    1271/    DBDF :                     	;0xEB - NOP
    1272/    DBDF :                     	NOP_0xEB:
    1273/    DBDF : (MACRO)             		OP_MACRO 235, "NOP", "IMP", "NOP_0xEB"
    1273/    DBDF :                                             ;TODO
    1274/    DBDF : (MACRO)             		NEXT_MACRO
    1274/    DBDF :                                             ;Could also copy X to Y before NEXT then restore after jump
    1274/    DBDF :                                             
    1274/    DBDF :  (MACRO-2)                                  halt
    1274/    DBDF : 00                                  BRK
    1274/    DBE0 : 00                                  BRK
    1274/    DBE1 :                                             
    1274/    DBE1 :                                             ;Jump table must be page aligned!!!
    1274/    DBE1 : A1 02                                       LDA (emu_PC,X)
    1274/    DBE3 : 0A                                          ASL
    1274/    DBE4 : 95 0A                                       STA emu_ptr,X
    1274/    DBE6 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1274/    DBE8 : 69 00                                       ADC #0
    1274/    DBEA : 95 0B                                       STA emu_ptr+1,X
    1274/    DBEC : A1 0A                                       LDA (emu_ptr,X)
    1274/    DBEE : 95 0C                                       STA emu_ptr2,X
    1274/    DBF0 : F6 0A                                       INC emu_ptr,X
    1274/    DBF2 : 90 02                                       BCC .skip
    1274/    DBF4 : F6 0B                                               INC emu_ptr+1,X
    1274/    DBF6 :                                             .skip:
    1274/    DBF6 : A1 0A                                       LDA (emu_ptr,X)
    1274/    DBF8 : 95 0D                                       STA emu_ptr2+1,X
    1274/    DBFA : 7C 0C 00                                    JMP (emu_ptr2,X)
    1275/    DBFD :                     
    1276/    DBFD :                     	;0xEC - CPX ABS
    1277/    DBFD :                     	CPX_ABS:
    1278/    DBFD : (MACRO)             		OP_MACRO 236, "CPX", "ABS", "CPX_ABS"
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 115 - 1/5/2022 1:27:48


    1278/    DBFD :                                             ;TODO
    1279/    DBFD : (MACRO)             		NEXT_MACRO
    1279/    DBFD :                                             ;Could also copy X to Y before NEXT then restore after jump
    1279/    DBFD :                                             
    1279/    DBFD :  (MACRO-2)                                  halt
    1279/    DBFD : 00                                  BRK
    1279/    DBFE : 00                                  BRK
    1279/    DBFF :                                             
    1279/    DBFF :                                             ;Jump table must be page aligned!!!
    1279/    DBFF : A1 02                                       LDA (emu_PC,X)
    1279/    DC01 : 0A                                          ASL
    1279/    DC02 : 95 0A                                       STA emu_ptr,X
    1279/    DC04 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1279/    DC06 : 69 00                                       ADC #0
    1279/    DC08 : 95 0B                                       STA emu_ptr+1,X
    1279/    DC0A : A1 0A                                       LDA (emu_ptr,X)
    1279/    DC0C : 95 0C                                       STA emu_ptr2,X
    1279/    DC0E : F6 0A                                       INC emu_ptr,X
    1279/    DC10 : 90 02                                       BCC .skip
    1279/    DC12 : F6 0B                                               INC emu_ptr+1,X
    1279/    DC14 :                                             .skip:
    1279/    DC14 : A1 0A                                       LDA (emu_ptr,X)
    1279/    DC16 : 95 0D                                       STA emu_ptr2+1,X
    1279/    DC18 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1280/    DC1B :                     
    1281/    DC1B :                     	;0xED - SBC ABS
    1282/    DC1B :                     	SBC_ABS:
    1283/    DC1B : (MACRO)             		OP_MACRO 237, "SBC", "ABS", "SBC_ABS"
    1283/    DC1B :                                             ;TODO
    1284/    DC1B : (MACRO)             		NEXT_MACRO
    1284/    DC1B :                                             ;Could also copy X to Y before NEXT then restore after jump
    1284/    DC1B :                                             
    1284/    DC1B :  (MACRO-2)                                  halt
    1284/    DC1B : 00                                  BRK
    1284/    DC1C : 00                                  BRK
    1284/    DC1D :                                             
    1284/    DC1D :                                             ;Jump table must be page aligned!!!
    1284/    DC1D : A1 02                                       LDA (emu_PC,X)
    1284/    DC1F : 0A                                          ASL
    1284/    DC20 : 95 0A                                       STA emu_ptr,X
    1284/    DC22 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1284/    DC24 : 69 00                                       ADC #0
    1284/    DC26 : 95 0B                                       STA emu_ptr+1,X
    1284/    DC28 : A1 0A                                       LDA (emu_ptr,X)
    1284/    DC2A : 95 0C                                       STA emu_ptr2,X
    1284/    DC2C : F6 0A                                       INC emu_ptr,X
    1284/    DC2E : 90 02                                       BCC .skip
    1284/    DC30 : F6 0B                                               INC emu_ptr+1,X
    1284/    DC32 :                                             .skip:
    1284/    DC32 : A1 0A                                       LDA (emu_ptr,X)
    1284/    DC34 : 95 0D                                       STA emu_ptr2+1,X
    1284/    DC36 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1285/    DC39 :                     
    1286/    DC39 :                     	;0xEE - INC ABS
    1287/    DC39 :                     	INC_ABS:
    1288/    DC39 : (MACRO)             		OP_MACRO 238, "INC", "ABS", "INC_ABS"
    1288/    DC39 :                                             ;TODO
    1289/    DC39 : (MACRO)             		NEXT_MACRO
    1289/    DC39 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1289/    DC39 :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 116 - 1/5/2022 1:27:48


    1289/    DC39 :  (MACRO-2)                                  halt
    1289/    DC39 : 00                                  BRK
    1289/    DC3A : 00                                  BRK
    1289/    DC3B :                                             
    1289/    DC3B :                                             ;Jump table must be page aligned!!!
    1289/    DC3B : A1 02                                       LDA (emu_PC,X)
    1289/    DC3D : 0A                                          ASL
    1289/    DC3E : 95 0A                                       STA emu_ptr,X
    1289/    DC40 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1289/    DC42 : 69 00                                       ADC #0
    1289/    DC44 : 95 0B                                       STA emu_ptr+1,X
    1289/    DC46 : A1 0A                                       LDA (emu_ptr,X)
    1289/    DC48 : 95 0C                                       STA emu_ptr2,X
    1289/    DC4A : F6 0A                                       INC emu_ptr,X
    1289/    DC4C : 90 02                                       BCC .skip
    1289/    DC4E : F6 0B                                               INC emu_ptr+1,X
    1289/    DC50 :                                             .skip:
    1289/    DC50 : A1 0A                                       LDA (emu_ptr,X)
    1289/    DC52 : 95 0D                                       STA emu_ptr2+1,X
    1289/    DC54 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1290/    DC57 :                     
    1291/    DC57 :                     	;0xEF - NOP
    1292/    DC57 :                     	NOP_0xEF:
    1293/    DC57 : (MACRO)             		OP_MACRO 239, "NOP", "IMP", "NOP_0xEF"
    1293/    DC57 :                                             ;TODO
    1294/    DC57 : (MACRO)             		NEXT_MACRO
    1294/    DC57 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1294/    DC57 :                                             
    1294/    DC57 :  (MACRO-2)                                  halt
    1294/    DC57 : 00                                  BRK
    1294/    DC58 : 00                                  BRK
    1294/    DC59 :                                             
    1294/    DC59 :                                             ;Jump table must be page aligned!!!
    1294/    DC59 : A1 02                                       LDA (emu_PC,X)
    1294/    DC5B : 0A                                          ASL
    1294/    DC5C : 95 0A                                       STA emu_ptr,X
    1294/    DC5E : A9 DF                                       LDA #hi(JUMP_TABLE)
    1294/    DC60 : 69 00                                       ADC #0
    1294/    DC62 : 95 0B                                       STA emu_ptr+1,X
    1294/    DC64 : A1 0A                                       LDA (emu_ptr,X)
    1294/    DC66 : 95 0C                                       STA emu_ptr2,X
    1294/    DC68 : F6 0A                                       INC emu_ptr,X
    1294/    DC6A : 90 02                                       BCC .skip
    1294/    DC6C : F6 0B                                               INC emu_ptr+1,X
    1294/    DC6E :                                             .skip:
    1294/    DC6E : A1 0A                                       LDA (emu_ptr,X)
    1294/    DC70 : 95 0D                                       STA emu_ptr2+1,X
    1294/    DC72 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1295/    DC75 :                     
    1296/    DC75 :                     	;0xF0 - BEQ REL
    1297/    DC75 :                     	BEQ_REL:
    1298/    DC75 : (MACRO)             		OP_MACRO 240, "BEQ", "REL", "BEQ_REL"
    1298/    DC75 :                                             ;TODO
    1299/    DC75 : (MACRO)             		NEXT_MACRO
    1299/    DC75 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1299/    DC75 :                                             
    1299/    DC75 :  (MACRO-2)                                  halt
    1299/    DC75 : 00                                  BRK
    1299/    DC76 : 00                                  BRK
    1299/    DC77 :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 117 - 1/5/2022 1:27:48


    1299/    DC77 :                                             ;Jump table must be page aligned!!!
    1299/    DC77 : A1 02                                       LDA (emu_PC,X)
    1299/    DC79 : 0A                                          ASL
    1299/    DC7A : 95 0A                                       STA emu_ptr,X
    1299/    DC7C : A9 DF                                       LDA #hi(JUMP_TABLE)
    1299/    DC7E : 69 00                                       ADC #0
    1299/    DC80 : 95 0B                                       STA emu_ptr+1,X
    1299/    DC82 : A1 0A                                       LDA (emu_ptr,X)
    1299/    DC84 : 95 0C                                       STA emu_ptr2,X
    1299/    DC86 : F6 0A                                       INC emu_ptr,X
    1299/    DC88 : 90 02                                       BCC .skip
    1299/    DC8A : F6 0B                                               INC emu_ptr+1,X
    1299/    DC8C :                                             .skip:
    1299/    DC8C : A1 0A                                       LDA (emu_ptr,X)
    1299/    DC8E : 95 0D                                       STA emu_ptr2+1,X
    1299/    DC90 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1300/    DC93 :                     
    1301/    DC93 :                     	;0xF1 - SBC IY
    1302/    DC93 :                     	SBC_IY:
    1303/    DC93 : (MACRO)             		OP_MACRO 241, "SBC", "IY", "SBC_IY"
    1303/    DC93 :                                             ;TODO
    1304/    DC93 : (MACRO)             		NEXT_MACRO
    1304/    DC93 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1304/    DC93 :                                             
    1304/    DC93 :  (MACRO-2)                                  halt
    1304/    DC93 : 00                                  BRK
    1304/    DC94 : 00                                  BRK
    1304/    DC95 :                                             
    1304/    DC95 :                                             ;Jump table must be page aligned!!!
    1304/    DC95 : A1 02                                       LDA (emu_PC,X)
    1304/    DC97 : 0A                                          ASL
    1304/    DC98 : 95 0A                                       STA emu_ptr,X
    1304/    DC9A : A9 DF                                       LDA #hi(JUMP_TABLE)
    1304/    DC9C : 69 00                                       ADC #0
    1304/    DC9E : 95 0B                                       STA emu_ptr+1,X
    1304/    DCA0 : A1 0A                                       LDA (emu_ptr,X)
    1304/    DCA2 : 95 0C                                       STA emu_ptr2,X
    1304/    DCA4 : F6 0A                                       INC emu_ptr,X
    1304/    DCA6 : 90 02                                       BCC .skip
    1304/    DCA8 : F6 0B                                               INC emu_ptr+1,X
    1304/    DCAA :                                             .skip:
    1304/    DCAA : A1 0A                                       LDA (emu_ptr,X)
    1304/    DCAC : 95 0D                                       STA emu_ptr2+1,X
    1304/    DCAE : 7C 0C 00                                    JMP (emu_ptr2,X)
    1305/    DCB1 :                     
    1306/    DCB1 :                     	;0xF2 - NOP
    1307/    DCB1 :                     	NOP_0xF2:
    1308/    DCB1 : (MACRO)             		OP_MACRO 242, "NOP", "IMP", "NOP_0xF2"
    1308/    DCB1 :                                             ;TODO
    1309/    DCB1 : (MACRO)             		NEXT_MACRO
    1309/    DCB1 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1309/    DCB1 :                                             
    1309/    DCB1 :  (MACRO-2)                                  halt
    1309/    DCB1 : 00                                  BRK
    1309/    DCB2 : 00                                  BRK
    1309/    DCB3 :                                             
    1309/    DCB3 :                                             ;Jump table must be page aligned!!!
    1309/    DCB3 : A1 02                                       LDA (emu_PC,X)
    1309/    DCB5 : 0A                                          ASL
    1309/    DCB6 : 95 0A                                       STA emu_ptr,X
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 118 - 1/5/2022 1:27:48


    1309/    DCB8 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1309/    DCBA : 69 00                                       ADC #0
    1309/    DCBC : 95 0B                                       STA emu_ptr+1,X
    1309/    DCBE : A1 0A                                       LDA (emu_ptr,X)
    1309/    DCC0 : 95 0C                                       STA emu_ptr2,X
    1309/    DCC2 : F6 0A                                       INC emu_ptr,X
    1309/    DCC4 : 90 02                                       BCC .skip
    1309/    DCC6 : F6 0B                                               INC emu_ptr+1,X
    1309/    DCC8 :                                             .skip:
    1309/    DCC8 : A1 0A                                       LDA (emu_ptr,X)
    1309/    DCCA : 95 0D                                       STA emu_ptr2+1,X
    1309/    DCCC : 7C 0C 00                                    JMP (emu_ptr2,X)
    1310/    DCCF :                     
    1311/    DCCF :                     	;0xF3 - NOP
    1312/    DCCF :                     	NOP_0xF3:
    1313/    DCCF : (MACRO)             		OP_MACRO 243, "NOP", "IMP", "NOP_0xF3"
    1313/    DCCF :                                             ;TODO
    1314/    DCCF : (MACRO)             		NEXT_MACRO
    1314/    DCCF :                                             ;Could also copy X to Y before NEXT then restore after jump
    1314/    DCCF :                                             
    1314/    DCCF :  (MACRO-2)                                  halt
    1314/    DCCF : 00                                  BRK
    1314/    DCD0 : 00                                  BRK
    1314/    DCD1 :                                             
    1314/    DCD1 :                                             ;Jump table must be page aligned!!!
    1314/    DCD1 : A1 02                                       LDA (emu_PC,X)
    1314/    DCD3 : 0A                                          ASL
    1314/    DCD4 : 95 0A                                       STA emu_ptr,X
    1314/    DCD6 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1314/    DCD8 : 69 00                                       ADC #0
    1314/    DCDA : 95 0B                                       STA emu_ptr+1,X
    1314/    DCDC : A1 0A                                       LDA (emu_ptr,X)
    1314/    DCDE : 95 0C                                       STA emu_ptr2,X
    1314/    DCE0 : F6 0A                                       INC emu_ptr,X
    1314/    DCE2 : 90 02                                       BCC .skip
    1314/    DCE4 : F6 0B                                               INC emu_ptr+1,X
    1314/    DCE6 :                                             .skip:
    1314/    DCE6 : A1 0A                                       LDA (emu_ptr,X)
    1314/    DCE8 : 95 0D                                       STA emu_ptr2+1,X
    1314/    DCEA : 7C 0C 00                                    JMP (emu_ptr2,X)
    1315/    DCED :                     
    1316/    DCED :                     	;0xF4 - NOP
    1317/    DCED :                     	NOP_0xF4:
    1318/    DCED : (MACRO)             		OP_MACRO 244, "NOP", "IMP", "NOP_0xF4"
    1318/    DCED :                                             ;TODO
    1319/    DCED : (MACRO)             		NEXT_MACRO
    1319/    DCED :                                             ;Could also copy X to Y before NEXT then restore after jump
    1319/    DCED :                                             
    1319/    DCED :  (MACRO-2)                                  halt
    1319/    DCED : 00                                  BRK
    1319/    DCEE : 00                                  BRK
    1319/    DCEF :                                             
    1319/    DCEF :                                             ;Jump table must be page aligned!!!
    1319/    DCEF : A1 02                                       LDA (emu_PC,X)
    1319/    DCF1 : 0A                                          ASL
    1319/    DCF2 : 95 0A                                       STA emu_ptr,X
    1319/    DCF4 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1319/    DCF6 : 69 00                                       ADC #0
    1319/    DCF8 : 95 0B                                       STA emu_ptr+1,X
    1319/    DCFA : A1 0A                                       LDA (emu_ptr,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 119 - 1/5/2022 1:27:48


    1319/    DCFC : 95 0C                                       STA emu_ptr2,X
    1319/    DCFE : F6 0A                                       INC emu_ptr,X
    1319/    DD00 : 90 02                                       BCC .skip
    1319/    DD02 : F6 0B                                               INC emu_ptr+1,X
    1319/    DD04 :                                             .skip:
    1319/    DD04 : A1 0A                                       LDA (emu_ptr,X)
    1319/    DD06 : 95 0D                                       STA emu_ptr2+1,X
    1319/    DD08 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1320/    DD0B :                     
    1321/    DD0B :                     	;0xF5 - SBC ZPX
    1322/    DD0B :                     	SBC_ZPX:
    1323/    DD0B : (MACRO)             		OP_MACRO 245, "SBC", "ZPX", "SBC_ZPX"
    1323/    DD0B :                                             ;TODO
    1324/    DD0B : (MACRO)             		NEXT_MACRO
    1324/    DD0B :                                             ;Could also copy X to Y before NEXT then restore after jump
    1324/    DD0B :                                             
    1324/    DD0B :  (MACRO-2)                                  halt
    1324/    DD0B : 00                                  BRK
    1324/    DD0C : 00                                  BRK
    1324/    DD0D :                                             
    1324/    DD0D :                                             ;Jump table must be page aligned!!!
    1324/    DD0D : A1 02                                       LDA (emu_PC,X)
    1324/    DD0F : 0A                                          ASL
    1324/    DD10 : 95 0A                                       STA emu_ptr,X
    1324/    DD12 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1324/    DD14 : 69 00                                       ADC #0
    1324/    DD16 : 95 0B                                       STA emu_ptr+1,X
    1324/    DD18 : A1 0A                                       LDA (emu_ptr,X)
    1324/    DD1A : 95 0C                                       STA emu_ptr2,X
    1324/    DD1C : F6 0A                                       INC emu_ptr,X
    1324/    DD1E : 90 02                                       BCC .skip
    1324/    DD20 : F6 0B                                               INC emu_ptr+1,X
    1324/    DD22 :                                             .skip:
    1324/    DD22 : A1 0A                                       LDA (emu_ptr,X)
    1324/    DD24 : 95 0D                                       STA emu_ptr2+1,X
    1324/    DD26 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1325/    DD29 :                     
    1326/    DD29 :                     	;0xF6 - INC ZPX
    1327/    DD29 :                     	INC_ZPX:
    1328/    DD29 : (MACRO)             		OP_MACRO 246, "INC", "ZPX", "INC_ZPX"
    1328/    DD29 :                                             ;TODO
    1329/    DD29 : (MACRO)             		NEXT_MACRO
    1329/    DD29 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1329/    DD29 :                                             
    1329/    DD29 :  (MACRO-2)                                  halt
    1329/    DD29 : 00                                  BRK
    1329/    DD2A : 00                                  BRK
    1329/    DD2B :                                             
    1329/    DD2B :                                             ;Jump table must be page aligned!!!
    1329/    DD2B : A1 02                                       LDA (emu_PC,X)
    1329/    DD2D : 0A                                          ASL
    1329/    DD2E : 95 0A                                       STA emu_ptr,X
    1329/    DD30 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1329/    DD32 : 69 00                                       ADC #0
    1329/    DD34 : 95 0B                                       STA emu_ptr+1,X
    1329/    DD36 : A1 0A                                       LDA (emu_ptr,X)
    1329/    DD38 : 95 0C                                       STA emu_ptr2,X
    1329/    DD3A : F6 0A                                       INC emu_ptr,X
    1329/    DD3C : 90 02                                       BCC .skip
    1329/    DD3E : F6 0B                                               INC emu_ptr+1,X
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 120 - 1/5/2022 1:27:48


    1329/    DD40 :                                             .skip:
    1329/    DD40 : A1 0A                                       LDA (emu_ptr,X)
    1329/    DD42 : 95 0D                                       STA emu_ptr2+1,X
    1329/    DD44 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1330/    DD47 :                     
    1331/    DD47 :                     	;0xF7 - NOP
    1332/    DD47 :                     	NOP_0xF7:
    1333/    DD47 : (MACRO)             		OP_MACRO 247, "NOP", "IMP", "NOP_0xF7"
    1333/    DD47 :                                             ;TODO
    1334/    DD47 : (MACRO)             		NEXT_MACRO
    1334/    DD47 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1334/    DD47 :                                             
    1334/    DD47 :  (MACRO-2)                                  halt
    1334/    DD47 : 00                                  BRK
    1334/    DD48 : 00                                  BRK
    1334/    DD49 :                                             
    1334/    DD49 :                                             ;Jump table must be page aligned!!!
    1334/    DD49 : A1 02                                       LDA (emu_PC,X)
    1334/    DD4B : 0A                                          ASL
    1334/    DD4C : 95 0A                                       STA emu_ptr,X
    1334/    DD4E : A9 DF                                       LDA #hi(JUMP_TABLE)
    1334/    DD50 : 69 00                                       ADC #0
    1334/    DD52 : 95 0B                                       STA emu_ptr+1,X
    1334/    DD54 : A1 0A                                       LDA (emu_ptr,X)
    1334/    DD56 : 95 0C                                       STA emu_ptr2,X
    1334/    DD58 : F6 0A                                       INC emu_ptr,X
    1334/    DD5A : 90 02                                       BCC .skip
    1334/    DD5C : F6 0B                                               INC emu_ptr+1,X
    1334/    DD5E :                                             .skip:
    1334/    DD5E : A1 0A                                       LDA (emu_ptr,X)
    1334/    DD60 : 95 0D                                       STA emu_ptr2+1,X
    1334/    DD62 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1335/    DD65 :                     
    1336/    DD65 :                     	;0xF8 - SED IMP
    1337/    DD65 :                     	SED_IMP:
    1338/    DD65 : (MACRO)             		OP_MACRO 248, "SED", "IMP", "SED_IMP"
    1338/    DD65 :                                             ;TODO
    1339/    DD65 : (MACRO)             		NEXT_MACRO
    1339/    DD65 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1339/    DD65 :                                             
    1339/    DD65 :  (MACRO-2)                                  halt
    1339/    DD65 : 00                                  BRK
    1339/    DD66 : 00                                  BRK
    1339/    DD67 :                                             
    1339/    DD67 :                                             ;Jump table must be page aligned!!!
    1339/    DD67 : A1 02                                       LDA (emu_PC,X)
    1339/    DD69 : 0A                                          ASL
    1339/    DD6A : 95 0A                                       STA emu_ptr,X
    1339/    DD6C : A9 DF                                       LDA #hi(JUMP_TABLE)
    1339/    DD6E : 69 00                                       ADC #0
    1339/    DD70 : 95 0B                                       STA emu_ptr+1,X
    1339/    DD72 : A1 0A                                       LDA (emu_ptr,X)
    1339/    DD74 : 95 0C                                       STA emu_ptr2,X
    1339/    DD76 : F6 0A                                       INC emu_ptr,X
    1339/    DD78 : 90 02                                       BCC .skip
    1339/    DD7A : F6 0B                                               INC emu_ptr+1,X
    1339/    DD7C :                                             .skip:
    1339/    DD7C : A1 0A                                       LDA (emu_ptr,X)
    1339/    DD7E : 95 0D                                       STA emu_ptr2+1,X
    1339/    DD80 : 7C 0C 00                                    JMP (emu_ptr2,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 121 - 1/5/2022 1:27:48


    1340/    DD83 :                     
    1341/    DD83 :                     	;0xF9 - SBC ABSY
    1342/    DD83 :                     	SBC_ABSY:
    1343/    DD83 : (MACRO)             		OP_MACRO 249, "SBC", "ABSY", "SBC_ABSY"
    1343/    DD83 :                                             ;TODO
    1344/    DD83 : (MACRO)             		NEXT_MACRO
    1344/    DD83 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1344/    DD83 :                                             
    1344/    DD83 :  (MACRO-2)                                  halt
    1344/    DD83 : 00                                  BRK
    1344/    DD84 : 00                                  BRK
    1344/    DD85 :                                             
    1344/    DD85 :                                             ;Jump table must be page aligned!!!
    1344/    DD85 : A1 02                                       LDA (emu_PC,X)
    1344/    DD87 : 0A                                          ASL
    1344/    DD88 : 95 0A                                       STA emu_ptr,X
    1344/    DD8A : A9 DF                                       LDA #hi(JUMP_TABLE)
    1344/    DD8C : 69 00                                       ADC #0
    1344/    DD8E : 95 0B                                       STA emu_ptr+1,X
    1344/    DD90 : A1 0A                                       LDA (emu_ptr,X)
    1344/    DD92 : 95 0C                                       STA emu_ptr2,X
    1344/    DD94 : F6 0A                                       INC emu_ptr,X
    1344/    DD96 : 90 02                                       BCC .skip
    1344/    DD98 : F6 0B                                               INC emu_ptr+1,X
    1344/    DD9A :                                             .skip:
    1344/    DD9A : A1 0A                                       LDA (emu_ptr,X)
    1344/    DD9C : 95 0D                                       STA emu_ptr2+1,X
    1344/    DD9E : 7C 0C 00                                    JMP (emu_ptr2,X)
    1345/    DDA1 :                     
    1346/    DDA1 :                     	;0xFA - NOP
    1347/    DDA1 :                     	NOP_0xFA:
    1348/    DDA1 : (MACRO)             		OP_MACRO 250, "NOP", "IMP", "NOP_0xFA"
    1348/    DDA1 :                                             ;TODO
    1349/    DDA1 : (MACRO)             		NEXT_MACRO
    1349/    DDA1 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1349/    DDA1 :                                             
    1349/    DDA1 :  (MACRO-2)                                  halt
    1349/    DDA1 : 00                                  BRK
    1349/    DDA2 : 00                                  BRK
    1349/    DDA3 :                                             
    1349/    DDA3 :                                             ;Jump table must be page aligned!!!
    1349/    DDA3 : A1 02                                       LDA (emu_PC,X)
    1349/    DDA5 : 0A                                          ASL
    1349/    DDA6 : 95 0A                                       STA emu_ptr,X
    1349/    DDA8 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1349/    DDAA : 69 00                                       ADC #0
    1349/    DDAC : 95 0B                                       STA emu_ptr+1,X
    1349/    DDAE : A1 0A                                       LDA (emu_ptr,X)
    1349/    DDB0 : 95 0C                                       STA emu_ptr2,X
    1349/    DDB2 : F6 0A                                       INC emu_ptr,X
    1349/    DDB4 : 90 02                                       BCC .skip
    1349/    DDB6 : F6 0B                                               INC emu_ptr+1,X
    1349/    DDB8 :                                             .skip:
    1349/    DDB8 : A1 0A                                       LDA (emu_ptr,X)
    1349/    DDBA : 95 0D                                       STA emu_ptr2+1,X
    1349/    DDBC : 7C 0C 00                                    JMP (emu_ptr2,X)
    1350/    DDBF :                     
    1351/    DDBF :                     	;0xFB - NOP
    1352/    DDBF :                     	NOP_0xFB:
    1353/    DDBF : (MACRO)             		OP_MACRO 251, "NOP", "IMP", "NOP_0xFB"
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 122 - 1/5/2022 1:27:48


    1353/    DDBF :                                             ;TODO
    1354/    DDBF : (MACRO)             		NEXT_MACRO
    1354/    DDBF :                                             ;Could also copy X to Y before NEXT then restore after jump
    1354/    DDBF :                                             
    1354/    DDBF :  (MACRO-2)                                  halt
    1354/    DDBF : 00                                  BRK
    1354/    DDC0 : 00                                  BRK
    1354/    DDC1 :                                             
    1354/    DDC1 :                                             ;Jump table must be page aligned!!!
    1354/    DDC1 : A1 02                                       LDA (emu_PC,X)
    1354/    DDC3 : 0A                                          ASL
    1354/    DDC4 : 95 0A                                       STA emu_ptr,X
    1354/    DDC6 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1354/    DDC8 : 69 00                                       ADC #0
    1354/    DDCA : 95 0B                                       STA emu_ptr+1,X
    1354/    DDCC : A1 0A                                       LDA (emu_ptr,X)
    1354/    DDCE : 95 0C                                       STA emu_ptr2,X
    1354/    DDD0 : F6 0A                                       INC emu_ptr,X
    1354/    DDD2 : 90 02                                       BCC .skip
    1354/    DDD4 : F6 0B                                               INC emu_ptr+1,X
    1354/    DDD6 :                                             .skip:
    1354/    DDD6 : A1 0A                                       LDA (emu_ptr,X)
    1354/    DDD8 : 95 0D                                       STA emu_ptr2+1,X
    1354/    DDDA : 7C 0C 00                                    JMP (emu_ptr2,X)
    1355/    DDDD :                     
    1356/    DDDD :                     	;0xFC - NOP
    1357/    DDDD :                     	NOP_0xFC:
    1358/    DDDD : (MACRO)             		OP_MACRO 252, "NOP", "IMP", "NOP_0xFC"
    1358/    DDDD :                                             ;TODO
    1359/    DDDD : (MACRO)             		NEXT_MACRO
    1359/    DDDD :                                             ;Could also copy X to Y before NEXT then restore after jump
    1359/    DDDD :                                             
    1359/    DDDD :  (MACRO-2)                                  halt
    1359/    DDDD : 00                                  BRK
    1359/    DDDE : 00                                  BRK
    1359/    DDDF :                                             
    1359/    DDDF :                                             ;Jump table must be page aligned!!!
    1359/    DDDF : A1 02                                       LDA (emu_PC,X)
    1359/    DDE1 : 0A                                          ASL
    1359/    DDE2 : 95 0A                                       STA emu_ptr,X
    1359/    DDE4 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1359/    DDE6 : 69 00                                       ADC #0
    1359/    DDE8 : 95 0B                                       STA emu_ptr+1,X
    1359/    DDEA : A1 0A                                       LDA (emu_ptr,X)
    1359/    DDEC : 95 0C                                       STA emu_ptr2,X
    1359/    DDEE : F6 0A                                       INC emu_ptr,X
    1359/    DDF0 : 90 02                                       BCC .skip
    1359/    DDF2 : F6 0B                                               INC emu_ptr+1,X
    1359/    DDF4 :                                             .skip:
    1359/    DDF4 : A1 0A                                       LDA (emu_ptr,X)
    1359/    DDF6 : 95 0D                                       STA emu_ptr2+1,X
    1359/    DDF8 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1360/    DDFB :                     
    1361/    DDFB :                     	;0xFD - SBC ABSX
    1362/    DDFB :                     	SBC_ABSX:
    1363/    DDFB : (MACRO)             		OP_MACRO 253, "SBC", "ABSX", "SBC_ABSX"
    1363/    DDFB :                                             ;TODO
    1364/    DDFB : (MACRO)             		NEXT_MACRO
    1364/    DDFB :                                             ;Could also copy X to Y before NEXT then restore after jump
    1364/    DDFB :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 123 - 1/5/2022 1:27:48


    1364/    DDFB :  (MACRO-2)                                  halt
    1364/    DDFB : 00                                  BRK
    1364/    DDFC : 00                                  BRK
    1364/    DDFD :                                             
    1364/    DDFD :                                             ;Jump table must be page aligned!!!
    1364/    DDFD : A1 02                                       LDA (emu_PC,X)
    1364/    DDFF : 0A                                          ASL
    1364/    DE00 : 95 0A                                       STA emu_ptr,X
    1364/    DE02 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1364/    DE04 : 69 00                                       ADC #0
    1364/    DE06 : 95 0B                                       STA emu_ptr+1,X
    1364/    DE08 : A1 0A                                       LDA (emu_ptr,X)
    1364/    DE0A : 95 0C                                       STA emu_ptr2,X
    1364/    DE0C : F6 0A                                       INC emu_ptr,X
    1364/    DE0E : 90 02                                       BCC .skip
    1364/    DE10 : F6 0B                                               INC emu_ptr+1,X
    1364/    DE12 :                                             .skip:
    1364/    DE12 : A1 0A                                       LDA (emu_ptr,X)
    1364/    DE14 : 95 0D                                       STA emu_ptr2+1,X
    1364/    DE16 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1365/    DE19 :                     
    1366/    DE19 :                     	;0xFE - INC ABSX
    1367/    DE19 :                     	INC_ABSX:
    1368/    DE19 : (MACRO)             		OP_MACRO 254, "INC", "ABSX", "INC_ABSX"
    1368/    DE19 :                                             ;TODO
    1369/    DE19 : (MACRO)             		NEXT_MACRO
    1369/    DE19 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1369/    DE19 :                                             
    1369/    DE19 :  (MACRO-2)                                  halt
    1369/    DE19 : 00                                  BRK
    1369/    DE1A : 00                                  BRK
    1369/    DE1B :                                             
    1369/    DE1B :                                             ;Jump table must be page aligned!!!
    1369/    DE1B : A1 02                                       LDA (emu_PC,X)
    1369/    DE1D : 0A                                          ASL
    1369/    DE1E : 95 0A                                       STA emu_ptr,X
    1369/    DE20 : A9 DF                                       LDA #hi(JUMP_TABLE)
    1369/    DE22 : 69 00                                       ADC #0
    1369/    DE24 : 95 0B                                       STA emu_ptr+1,X
    1369/    DE26 : A1 0A                                       LDA (emu_ptr,X)
    1369/    DE28 : 95 0C                                       STA emu_ptr2,X
    1369/    DE2A : F6 0A                                       INC emu_ptr,X
    1369/    DE2C : 90 02                                       BCC .skip
    1369/    DE2E : F6 0B                                               INC emu_ptr+1,X
    1369/    DE30 :                                             .skip:
    1369/    DE30 : A1 0A                                       LDA (emu_ptr,X)
    1369/    DE32 : 95 0D                                       STA emu_ptr2+1,X
    1369/    DE34 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1370/    DE37 :                     
    1371/    DE37 :                     	;0xFF - NOP
    1372/    DE37 :                     	NOP_0xFF:
    1373/    DE37 : (MACRO)             		OP_MACRO 255, "NOP", "IMP", "NOP_0xFF"
    1373/    DE37 :                                             ;TODO
    1374/    DE37 : (MACRO)             		NEXT_MACRO
    1374/    DE37 :                                             ;Could also copy X to Y before NEXT then restore after jump
    1374/    DE37 :                                             
    1374/    DE37 :  (MACRO-2)                                  halt
    1374/    DE37 : 00                                  BRK
    1374/    DE38 : 00                                  BRK
    1374/    DE39 :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 124 - 1/5/2022 1:27:48


    1374/    DE39 :                                             ;Jump table must be page aligned!!!
    1374/    DE39 : A1 02                                       LDA (emu_PC,X)
    1374/    DE3B : 0A                                          ASL
    1374/    DE3C : 95 0A                                       STA emu_ptr,X
    1374/    DE3E : A9 DF                                       LDA #hi(JUMP_TABLE)
    1374/    DE40 : 69 00                                       ADC #0
    1374/    DE42 : 95 0B                                       STA emu_ptr+1,X
    1374/    DE44 : A1 0A                                       LDA (emu_ptr,X)
    1374/    DE46 : 95 0C                                       STA emu_ptr2,X
    1374/    DE48 : F6 0A                                       INC emu_ptr,X
    1374/    DE4A : 90 02                                       BCC .skip
    1374/    DE4C : F6 0B                                               INC emu_ptr+1,X
    1374/    DE4E :                                             .skip:
    1374/    DE4E : A1 0A                                       LDA (emu_ptr,X)
    1374/    DE50 : 95 0D                                       STA emu_ptr2+1,X
    1374/    DE52 : 7C 0C 00                                    JMP (emu_ptr2,X)
    1375/    DE55 :                     
    1376/    DE55 :                     
    1377/    DE55 :                     	;Jump table
    1378/    DE55 :                     	ALIGN 256
    1379/    DF00 :                     	JUMP_TABLE:
    1380/    DF00 : 53 C0               	FDB BRK_IMP
    1381/    DF02 : 71 C0               	FDB ORA_IX
    1382/    DF04 : 8F C0               	FDB NOP_0x2
    1383/    DF06 : AD C0               	FDB NOP_0x3
    1384/    DF08 : CB C0               	FDB NOP_0x4
    1385/    DF0A : E9 C0               	FDB ORA_ZP
    1386/    DF0C : 07 C1               	FDB ASL_ZP
    1387/    DF0E : 25 C1               	FDB NOP_0x7
    1388/    DF10 : 43 C1               	FDB PHP_IMP
    1389/    DF12 : 61 C1               	FDB ORA_IMMED
    1390/    DF14 : 7F C1               	FDB ASL_A
    1391/    DF16 : 9D C1               	FDB NOP_0xB
    1392/    DF18 : BB C1               	FDB NOP_0xC
    1393/    DF1A : D9 C1               	FDB ORA_ABS
    1394/    DF1C : F7 C1               	FDB ASL_ABS
    1395/    DF1E : 15 C2               	FDB NOP_0xF
    1396/    DF20 : 33 C2               	FDB BPL_REL
    1397/    DF22 : 51 C2               	FDB ORA_IY
    1398/    DF24 : 6F C2               	FDB NOP_0x12
    1399/    DF26 : 8D C2               	FDB NOP_0x13
    1400/    DF28 : AB C2               	FDB NOP_0x14
    1401/    DF2A : C9 C2               	FDB ORA_ZPX
    1402/    DF2C : E7 C2               	FDB ASL_ZPX
    1403/    DF2E : 05 C3               	FDB NOP_0x17
    1404/    DF30 : 23 C3               	FDB CLC_IMP
    1405/    DF32 : 41 C3               	FDB ORA_ABSY
    1406/    DF34 : 5F C3               	FDB NOP_0x1A
    1407/    DF36 : 7D C3               	FDB NOP_0x1B
    1408/    DF38 : 9B C3               	FDB NOP_0x1C
    1409/    DF3A : B9 C3               	FDB ORA_ABSX
    1410/    DF3C : D7 C3               	FDB ASL_ABSX
    1411/    DF3E : F5 C3               	FDB NOP_0x1F
    1412/    DF40 : 13 C4               	FDB JSR_ABS
    1413/    DF42 : 31 C4               	FDB AND_IX
    1414/    DF44 : 4F C4               	FDB NOP_0x22
    1415/    DF46 : 6D C4               	FDB NOP_0x23
    1416/    DF48 : 8B C4               	FDB BIT_ZP
    1417/    DF4A : A9 C4               	FDB AND_ZP
    1418/    DF4C : C7 C4               	FDB ROL_ZP
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 125 - 1/5/2022 1:27:48


    1419/    DF4E : E5 C4               	FDB NOP_0x27
    1420/    DF50 : 03 C5               	FDB PLP_IMP
    1421/    DF52 : 21 C5               	FDB AND_IMMED
    1422/    DF54 : 3F C5               	FDB ROL_A
    1423/    DF56 : 5D C5               	FDB NOP_0x2B
    1424/    DF58 : 7B C5               	FDB BIT_ABS
    1425/    DF5A : 99 C5               	FDB AND_ABS
    1426/    DF5C : B7 C5               	FDB ROL_ABS
    1427/    DF5E : D5 C5               	FDB NOP_0x2F
    1428/    DF60 : F3 C5               	FDB BMI_REL
    1429/    DF62 : 11 C6               	FDB AND_IY
    1430/    DF64 : 2F C6               	FDB NOP_0x32
    1431/    DF66 : 4D C6               	FDB NOP_0x33
    1432/    DF68 : 6B C6               	FDB NOP_0x34
    1433/    DF6A : 89 C6               	FDB AND_ZPX
    1434/    DF6C : A7 C6               	FDB ROL_ZPX
    1435/    DF6E : C5 C6               	FDB NOP_0x37
    1436/    DF70 : E3 C6               	FDB SEC_IMP
    1437/    DF72 : 01 C7               	FDB AND_ABSY
    1438/    DF74 : 1F C7               	FDB NOP_0x3A
    1439/    DF76 : 3D C7               	FDB NOP_0x3B
    1440/    DF78 : 5B C7               	FDB NOP_0x3C
    1441/    DF7A : 79 C7               	FDB AND_ABSX
    1442/    DF7C : 97 C7               	FDB ROL_ABSX
    1443/    DF7E : B5 C7               	FDB NOP_0x3F
    1444/    DF80 : D3 C7               	FDB RTI_IMP
    1445/    DF82 : F1 C7               	FDB EOR_IX
    1446/    DF84 : 0F C8               	FDB NOP_0x42
    1447/    DF86 : 2D C8               	FDB NOP_0x43
    1448/    DF88 : 4B C8               	FDB NOP_0x44
    1449/    DF8A : 69 C8               	FDB EOR_ZP
    1450/    DF8C : 87 C8               	FDB LSR_ZP
    1451/    DF8E : A5 C8               	FDB NOP_0x47
    1452/    DF90 : C3 C8               	FDB PHA_IMP
    1453/    DF92 : E1 C8               	FDB EOR_IMMED
    1454/    DF94 : FF C8               	FDB LSR_A
    1455/    DF96 : 1D C9               	FDB NOP_0x4B
    1456/    DF98 : 3B C9               	FDB JMP_ABS
    1457/    DF9A : 59 C9               	FDB EOR_ABS
    1458/    DF9C : 77 C9               	FDB LSR_ABS
    1459/    DF9E : 95 C9               	FDB NOP_0x4F
    1460/    DFA0 : B3 C9               	FDB BVC_REL
    1461/    DFA2 : D1 C9               	FDB EOR_IY
    1462/    DFA4 : EF C9               	FDB NOP_0x52
    1463/    DFA6 : 0D CA               	FDB NOP_0x53
    1464/    DFA8 : 2B CA               	FDB NOP_0x54
    1465/    DFAA : 49 CA               	FDB EOR_ZPX
    1466/    DFAC : 67 CA               	FDB LSR_ZPX
    1467/    DFAE : 85 CA               	FDB NOP_0x57
    1468/    DFB0 : A3 CA               	FDB CLI_IMP
    1469/    DFB2 : C1 CA               	FDB EOR_ABSY
    1470/    DFB4 : DF CA               	FDB NOP_0x5A
    1471/    DFB6 : FD CA               	FDB NOP_0x5B
    1472/    DFB8 : 1B CB               	FDB NOP_0x5C
    1473/    DFBA : 39 CB               	FDB EOR_ABSX
    1474/    DFBC : 57 CB               	FDB LSR_ABSX
    1475/    DFBE : 75 CB               	FDB NOP_0x5F
    1476/    DFC0 : 93 CB               	FDB RTS_IMP
    1477/    DFC2 : B1 CB               	FDB ADC_IX
    1478/    DFC4 : CF CB               	FDB NOP_0x62
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 126 - 1/5/2022 1:27:48


    1479/    DFC6 : ED CB               	FDB NOP_0x63
    1480/    DFC8 : 0B CC               	FDB NOP_0x64
    1481/    DFCA : 29 CC               	FDB ADC_ZP
    1482/    DFCC : 47 CC               	FDB ROR_ZP
    1483/    DFCE : 65 CC               	FDB NOP_0x67
    1484/    DFD0 : 83 CC               	FDB PLA_IMP
    1485/    DFD2 : A1 CC               	FDB ADC_IMMED
    1486/    DFD4 : BF CC               	FDB ROR_A
    1487/    DFD6 : DD CC               	FDB NOP_0x6B
    1488/    DFD8 : FB CC               	FDB JMP_I
    1489/    DFDA : 19 CD               	FDB ADC_ABS
    1490/    DFDC : 37 CD               	FDB ROR_ABS
    1491/    DFDE : 55 CD               	FDB NOP_0x6F
    1492/    DFE0 : 73 CD               	FDB BVS_REL
    1493/    DFE2 : 91 CD               	FDB ADC_IY
    1494/    DFE4 : AF CD               	FDB NOP_0x72
    1495/    DFE6 : CD CD               	FDB NOP_0x73
    1496/    DFE8 : EB CD               	FDB NOP_0x74
    1497/    DFEA : 09 CE               	FDB ADC_ZPX
    1498/    DFEC : 27 CE               	FDB ROR_ZPX
    1499/    DFEE : 45 CE               	FDB NOP_0x77
    1500/    DFF0 : 63 CE               	FDB SEI_IMP
    1501/    DFF2 : 81 CE               	FDB ADC_ABSY
    1502/    DFF4 : 9F CE               	FDB NOP_0x7A
    1503/    DFF6 : BD CE               	FDB NOP_0x7B
    1504/    DFF8 : DB CE               	FDB NOP_0x7C
    1505/    DFFA : F9 CE               	FDB ADC_ABSX
    1506/    DFFC : 17 CF               	FDB ROR_ABSX
    1507/    DFFE : 35 CF               	FDB NOP_0x7F
    1508/    E000 :                     
    1509/    E000 :                     	JUMP_TABLE2:
    1510/    E000 : 53 CF               	FDB NOP_0x80
    1511/    E002 : 71 CF               	FDB STA_IX
    1512/    E004 : 8F CF               	FDB NOP_0x82
    1513/    E006 : AD CF               	FDB NOP_0x83
    1514/    E008 : CB CF               	FDB STY_ZP
    1515/    E00A : E9 CF               	FDB STA_ZP
    1516/    E00C : 07 D0               	FDB STX_ZP
    1517/    E00E : 25 D0               	FDB NOP_0x87
    1518/    E010 : 43 D0               	FDB DEY_IMP
    1519/    E012 : 61 D0               	FDB NOP_0x89
    1520/    E014 : 7F D0               	FDB TXA_IMP
    1521/    E016 : 9D D0               	FDB NOP_0x8B
    1522/    E018 : BB D0               	FDB STY_ABS
    1523/    E01A : D9 D0               	FDB STA_ABS
    1524/    E01C : F7 D0               	FDB STX_ABS
    1525/    E01E : 15 D1               	FDB NOP_0x8F
    1526/    E020 : 33 D1               	FDB BCC_REL
    1527/    E022 : 51 D1               	FDB STA_IY
    1528/    E024 : 6F D1               	FDB NOP_0x92
    1529/    E026 : 8D D1               	FDB NOP_0x93
    1530/    E028 : AB D1               	FDB STY_ZPX
    1531/    E02A : C9 D1               	FDB STA_ZPX
    1532/    E02C : E7 D1               	FDB STX_ZPY
    1533/    E02E : 05 D2               	FDB NOP_0x97
    1534/    E030 : 23 D2               	FDB TYA_IMP
    1535/    E032 : 41 D2               	FDB STA_ABSY
    1536/    E034 : 5F D2               	FDB TXS_IMP
    1537/    E036 : 7D D2               	FDB NOP_0x9B
    1538/    E038 : 9B D2               	FDB NOP_0x9C
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 127 - 1/5/2022 1:27:48


    1539/    E03A : B9 D2               	FDB STA_ABSX
    1540/    E03C : D7 D2               	FDB NOP_0x9E
    1541/    E03E : F5 D2               	FDB NOP_0x9F
    1542/    E040 : 13 D3               	FDB LDY_IMMED
    1543/    E042 : 31 D3               	FDB LDA_IX
    1544/    E044 : 4F D3               	FDB LDX_IMMED
    1545/    E046 : 6D D3               	FDB NOP_0xA3
    1546/    E048 : 8B D3               	FDB LDY_ZP
    1547/    E04A : A9 D3               	FDB LDA_ZP
    1548/    E04C : C7 D3               	FDB LDX_ZP
    1549/    E04E : E5 D3               	FDB NOP_0xA7
    1550/    E050 : 03 D4               	FDB TAY_IMP
    1551/    E052 : 21 D4               	FDB LDA_IMMED
    1552/    E054 : 41 D4               	FDB TAX_IMP
    1553/    E056 : 5F D4               	FDB NOP_0xAB
    1554/    E058 : 7D D4               	FDB LDY_ABS
    1555/    E05A : 9B D4               	FDB LDA_ABS
    1556/    E05C : B9 D4               	FDB LDX_ABS
    1557/    E05E : D7 D4               	FDB NOP_0xAF
    1558/    E060 : F5 D4               	FDB BCS_REL
    1559/    E062 : 13 D5               	FDB LDA_IY
    1560/    E064 : 31 D5               	FDB NOP_0xB2
    1561/    E066 : 4F D5               	FDB NOP_0xB3
    1562/    E068 : 6D D5               	FDB LDY_ZPX
    1563/    E06A : 8B D5               	FDB LDA_ZPX
    1564/    E06C : A9 D5               	FDB LDX_ZPY
    1565/    E06E : C7 D5               	FDB NOP_0xB7
    1566/    E070 : E5 D5               	FDB CLV_IMP
    1567/    E072 : 03 D6               	FDB LDA_ABSY
    1568/    E074 : 21 D6               	FDB TSX_IMP
    1569/    E076 : 3F D6               	FDB NOP_0xBB
    1570/    E078 : 5D D6               	FDB LDY_ABSX
    1571/    E07A : 7B D6               	FDB LDA_ABSX
    1572/    E07C : 99 D6               	FDB LDX_ABSY
    1573/    E07E : B7 D6               	FDB NOP_0xBF
    1574/    E080 : D5 D6               	FDB CPY_IMMED
    1575/    E082 : F3 D6               	FDB CMP_IX
    1576/    E084 : 11 D7               	FDB NOP_0xC2
    1577/    E086 : 2F D7               	FDB NOP_0xC3
    1578/    E088 : 4D D7               	FDB CPY_ZP
    1579/    E08A : 6B D7               	FDB CMP_ZP
    1580/    E08C : 89 D7               	FDB DEC_ZP
    1581/    E08E : A7 D7               	FDB NOP_0xC7
    1582/    E090 : C5 D7               	FDB INY_IMP
    1583/    E092 : E3 D7               	FDB CMP_IMMED
    1584/    E094 : 01 D8               	FDB DEX_IMP
    1585/    E096 : 1F D8               	FDB NOP_0xCB
    1586/    E098 : 3D D8               	FDB CPY_ABS
    1587/    E09A : 5B D8               	FDB CMP_ABS
    1588/    E09C : 79 D8               	FDB DEC_ABS
    1589/    E09E : 97 D8               	FDB NOP_0xCF
    1590/    E0A0 : B5 D8               	FDB BNE_REL
    1591/    E0A2 : D3 D8               	FDB CMP_IY
    1592/    E0A4 : F1 D8               	FDB NOP_0xD2
    1593/    E0A6 : 0F D9               	FDB NOP_0xD3
    1594/    E0A8 : 2D D9               	FDB NOP_0xD4
    1595/    E0AA : 4B D9               	FDB CMP_ZPX
    1596/    E0AC : 69 D9               	FDB DEC_ZPX
    1597/    E0AE : 87 D9               	FDB NOP_0xD7
    1598/    E0B0 : A5 D9               	FDB CLD_IMP
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 128 - 1/5/2022 1:27:48


    1599/    E0B2 : C3 D9               	FDB CMP_ABSY
    1600/    E0B4 : E1 D9               	FDB NOP_0xDA
    1601/    E0B6 : FF D9               	FDB NOP_0xDB
    1602/    E0B8 : 1D DA               	FDB NOP_0xDC
    1603/    E0BA : 3B DA               	FDB CMP_ABSX
    1604/    E0BC : 59 DA               	FDB DEC_ABSX
    1605/    E0BE : 77 DA               	FDB NOP_0xDF
    1606/    E0C0 : 95 DA               	FDB CPX_IMMED
    1607/    E0C2 : B3 DA               	FDB SBC_IX
    1608/    E0C4 : D1 DA               	FDB NOP_0xE2
    1609/    E0C6 : EF DA               	FDB NOP_0xE3
    1610/    E0C8 : 0D DB               	FDB CPX_ZP
    1611/    E0CA : 2B DB               	FDB SBC_ZP
    1612/    E0CC : 49 DB               	FDB INC_ZP
    1613/    E0CE : 67 DB               	FDB NOP_0xE7
    1614/    E0D0 : 85 DB               	FDB INX_IMP
    1615/    E0D2 : A3 DB               	FDB SBC_IMMED
    1616/    E0D4 : C1 DB               	FDB NOP_IMP
    1617/    E0D6 : DF DB               	FDB NOP_0xEB
    1618/    E0D8 : FD DB               	FDB CPX_ABS
    1619/    E0DA : 1B DC               	FDB SBC_ABS
    1620/    E0DC : 39 DC               	FDB INC_ABS
    1621/    E0DE : 57 DC               	FDB NOP_0xEF
    1622/    E0E0 : 75 DC               	FDB BEQ_REL
    1623/    E0E2 : 93 DC               	FDB SBC_IY
    1624/    E0E4 : B1 DC               	FDB NOP_0xF2
    1625/    E0E6 : CF DC               	FDB NOP_0xF3
    1626/    E0E8 : ED DC               	FDB NOP_0xF4
    1627/    E0EA : 0B DD               	FDB SBC_ZPX
    1628/    E0EC : 29 DD               	FDB INC_ZPX
    1629/    E0EE : 47 DD               	FDB NOP_0xF7
    1630/    E0F0 : 65 DD               	FDB SED_IMP
    1631/    E0F2 : 83 DD               	FDB SBC_ABSY
    1632/    E0F4 : A1 DD               	FDB NOP_0xFA
    1633/    E0F6 : BF DD               	FDB NOP_0xFB
    1634/    E0F8 : DD DD               	FDB NOP_0xFC
    1635/    E0FA : FB DD               	FDB SBC_ABSX
    1636/    E0FC : 19 DE               	FDB INC_ABSX
    1637/    E0FE : 37 DE               	FDB NOP_0xFF
    1638/    E100 :                     
    1639/    F800 :                     	ORG $F800
    1640/    F800 :                     	example_prog:
    1641/    F800 :                     	
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 129 - 1/5/2022 1:27:48


  Symbol Table (* = unused):
  --------------------------

 ADC_ABS :                     CD19 C |  ADC_ABSX :                    CEF9 C |
 ADC_ABSY :                    CE81 C |  ADC_IMMED :                   CCA1 C |
 ADC_IX :                      CBB1 C |  ADC_IY :                      CD91 C |
 ADC_ZP :                      CC29 C |  ADC_ZPX :                     CE09 C |
 AND_ABS :                     C599 C |  AND_ABSX :                    C779 C |
 AND_ABSY :                    C701 C |  AND_IMMED :                   C521 C |
 AND_IX :                      C431 C |  AND_IY :                      C611 C |
 AND_ZP :                      C4A9 C |  AND_ZPX :                     C689 C |
*ARCHITECTURE :  i386-unknown-win32 - |  ASL_A :                       C17F C |
 ASL_ABS :                     C1F7 C |  ASL_ABSX :                    C3D7 C |
 ASL_ZP :                      C107 C |  ASL_ZPX :                     C2E7 C |
*BANK_GFX_RAM1 :                  4 - | *BANK_GFX_RAM2 :                  5 - |
 BCC_REL :                     D133 C |  BCS_REL :                     D4F5 C |
 BEQ_REL :                     DC75 C | *BIGENDIAN :                      0 - |
 BIT_ABS :                     C57B C |  BIT_ZP :                      C48B C |
 BMI_REL :                     C5F3 C |  BNE_REL :                     D8B5 C |
 BPL_REL :                     C233 C | *BRANCHEXT :                      0 - |
 BRK_IMP :                     C053 C |  BVC_REL :                     C9B3 C |
 BVS_REL :                     CD73 C | *CASESENSITIVE :                  1 - |
 CLC_IMP :                     C323 C |  CLD_IMP :                     D9A5 C |
 CLI_IMP :                     CAA3 C |  CLV_IMP :                     D5E5 C |
 CMP_ABS :                     D85B C |  CMP_ABSX :                    DA3B C |
 CMP_ABSY :                    D9C3 C |  CMP_IMMED :                   D7E3 C |
 CMP_IX :                      D6F3 C |  CMP_IY :                      D8D3 C |
 CMP_ZP :                      D76B C |  CMP_ZPX :                     D94B C |
*CONSTPI :        3.141592653589793 - |  CPX_ABS :                     DBFD C |
 CPX_IMMED :                   DA95 C |  CPX_ZP :                      DB0D C |
 CPY_ABS :                     D83D C |  CPY_IMMED :                   D6D5 C |
 CPY_ZP :                      D74D C | *DATE :                    1/5/2022 - |
*DEBUG :                       FFE7 - | *DEBUG_DEC :                   FFE9 - |
*DEBUG_DEC16 :                 FFEA - | *DEBUG_HEX :                   FFE8 - |
 DEC_ABS :                     D879 C |  DEC_ABSX :                    DA59 C |
 DEC_ZP :                      D789 C |  DEC_ZPX :                     D969 C |
 DEX_IMP :                     D801 C |  DEY_IMP :                     D043 C |
 EOR_ABS :                     C959 C |  EOR_ABSX :                    CB39 C |
 EOR_ABSY :                    CAC1 C |  EOR_IMMED :                   C8E1 C |
 EOR_IX :                      C7F1 C |  EOR_IY :                      C9D1 C |
 EOR_ZP :                      C869 C |  EOR_ZPX :                     CA49 C |
 ExitEmu :                     C04E C | *FALSE :                          0 - |
*FULLPMMU :                       1 - | *HAS64 :                          1 - |
*HASDSP :                         0 - | *HASFPU :                         0 - |
*HASPMMU :                        0 - |  INC_ABS :                     DC39 C |
 INC_ABSX :                    DE19 C |  INC_ZP :                      DB49 C |
 INC_ZPX :                     DD29 C | *INEXTMODE :                      0 - |
*INLWORDMODE :                    0 - | *INMAXMODE :                      0 - |
*INSRCMODE :                      0 - | *INSUPMODE :                      0 - |
 INX_IMP :                     DB85 C |  INY_IMP :                     D7C5 C |
 JMP_ABS :                     C93B C |  JMP_I :                       CCFB C |
 JSR_ABS :                     C413 C |  JUMP_TABLE :                  DF00 C |
*JUMP_TABLE2 :                 E000 C |  LDA_ABS :                     D49B C |
 LDA_ABSX :                    D67B C |  LDA_ABSY :                    D603 C |
 LDA_IMMED :                   D421 C |  LDA_IX :                      D331 C |
 LDA_IY :                      D513 C |  LDA_ZP :                      D3A9 C |
 LDA_ZPX :                     D58B C |  LDX_ABS :                     D4B9 C |
 LDX_ABSY :                    D699 C |  LDX_IMMED :                   D34F C |
 LDX_ZP :                      D3C7 C |  LDX_ZPY :                     D5A9 C |
 LDY_ABS :                     D47D C |  LDY_ABSX :                    D65D C |
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 130 - 1/5/2022 1:27:48


 LDY_IMMED :                   D313 C |  LDY_ZP :                      D38B C |
 LDY_ZPX :                     D56D C | *LISTON :                         1 - |
 LSR_A :                       C8FF C |  LSR_ABS :                     C977 C |
 LSR_ABSX :                    CB57 C |  LSR_ZP :                      C887 C |
 LSR_ZPX :                     CA67 C | *MACEXP :                         7 - |
 MAX_EMU_LEVEL :                  5 - | *MOMCPU :                     65C02 - |
*MOMCPUNAME :                 65C02 - | *NESTMAX :                      100 - |
 NOP_0x12 :                    C26F C |  NOP_0x13 :                    C28D C |
 NOP_0x14 :                    C2AB C |  NOP_0x17 :                    C305 C |
 NOP_0x1A :                    C35F C |  NOP_0x1B :                    C37D C |
 NOP_0x1C :                    C39B C |  NOP_0x1F :                    C3F5 C |
 NOP_0x2 :                     C08F C |  NOP_0x22 :                    C44F C |
 NOP_0x23 :                    C46D C |  NOP_0x27 :                    C4E5 C |
 NOP_0x2B :                    C55D C |  NOP_0x2F :                    C5D5 C |
 NOP_0x3 :                     C0AD C |  NOP_0x32 :                    C62F C |
 NOP_0x33 :                    C64D C |  NOP_0x34 :                    C66B C |
 NOP_0x37 :                    C6C5 C |  NOP_0x3A :                    C71F C |
 NOP_0x3B :                    C73D C |  NOP_0x3C :                    C75B C |
 NOP_0x3F :                    C7B5 C |  NOP_0x4 :                     C0CB C |
 NOP_0x42 :                    C80F C |  NOP_0x43 :                    C82D C |
 NOP_0x44 :                    C84B C |  NOP_0x47 :                    C8A5 C |
 NOP_0x4B :                    C91D C |  NOP_0x4F :                    C995 C |
 NOP_0x52 :                    C9EF C |  NOP_0x53 :                    CA0D C |
 NOP_0x54 :                    CA2B C |  NOP_0x57 :                    CA85 C |
 NOP_0x5A :                    CADF C |  NOP_0x5B :                    CAFD C |
 NOP_0x5C :                    CB1B C |  NOP_0x5F :                    CB75 C |
 NOP_0x62 :                    CBCF C |  NOP_0x63 :                    CBED C |
 NOP_0x64 :                    CC0B C |  NOP_0x67 :                    CC65 C |
 NOP_0x6B :                    CCDD C |  NOP_0x6F :                    CD55 C |
 NOP_0x7 :                     C125 C |  NOP_0x72 :                    CDAF C |
 NOP_0x73 :                    CDCD C |  NOP_0x74 :                    CDEB C |
 NOP_0x77 :                    CE45 C |  NOP_0x7A :                    CE9F C |
 NOP_0x7B :                    CEBD C |  NOP_0x7C :                    CEDB C |
 NOP_0x7F :                    CF35 C |  NOP_0x80 :                    CF53 C |
 NOP_0x82 :                    CF8F C |  NOP_0x83 :                    CFAD C |
 NOP_0x87 :                    D025 C |  NOP_0x89 :                    D061 C |
 NOP_0x8B :                    D09D C |  NOP_0x8F :                    D115 C |
 NOP_0x92 :                    D16F C |  NOP_0x93 :                    D18D C |
 NOP_0x97 :                    D205 C |  NOP_0x9B :                    D27D C |
 NOP_0x9C :                    D29B C |  NOP_0x9E :                    D2D7 C |
 NOP_0x9F :                    D2F5 C |  NOP_0xA3 :                    D36D C |
 NOP_0xA7 :                    D3E5 C |  NOP_0xAB :                    D45F C |
 NOP_0xAF :                    D4D7 C |  NOP_0xB :                     C19D C |
 NOP_0xB2 :                    D531 C |  NOP_0xB3 :                    D54F C |
 NOP_0xB7 :                    D5C7 C |  NOP_0xBB :                    D63F C |
 NOP_0xBF :                    D6B7 C |  NOP_0xC :                     C1BB C |
 NOP_0xC2 :                    D711 C |  NOP_0xC3 :                    D72F C |
 NOP_0xC7 :                    D7A7 C |  NOP_0xCB :                    D81F C |
 NOP_0xCF :                    D897 C |  NOP_0xD2 :                    D8F1 C |
 NOP_0xD3 :                    D90F C |  NOP_0xD4 :                    D92D C |
 NOP_0xD7 :                    D987 C |  NOP_0xDA :                    D9E1 C |
 NOP_0xDB :                    D9FF C |  NOP_0xDC :                    DA1D C |
 NOP_0xDF :                    DA77 C |  NOP_0xE2 :                    DAD1 C |
 NOP_0xE3 :                    DAEF C |  NOP_0xE7 :                    DB67 C |
 NOP_0xEB :                    DBDF C |  NOP_0xEF :                    DC57 C |
 NOP_0xF :                     C215 C |  NOP_0xF2 :                    DCB1 C |
 NOP_0xF3 :                    DCCF C |  NOP_0xF4 :                    DCED C |
 NOP_0xF7 :                    DD47 C |  NOP_0xFA :                    DDA1 C |
 NOP_0xFB :                    DDBF C |  NOP_0xFC :                    DDDD C |
 NOP_0xFF :                    DE37 C |  NOP_IMP :                     DBC1 C |
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 131 - 1/5/2022 1:27:48


 ORA_ABS :                     C1D9 C |  ORA_ABSX :                    C3B9 C |
 ORA_ABSY :                    C341 C |  ORA_IMMED :                   C161 C |
 ORA_IX :                      C071 C |  ORA_IY :                      C251 C |
 ORA_ZP :                      C0E9 C |  ORA_ZPX :                     C2C9 C |
*PACKING :                        0 - | *PADDING :                        1 - |
 PHA_IMP :                     C8C3 C |  PHP_IMP :                     C143 C |
 PLA_IMP :                     CC83 C |  PLP_IMP :                     C503 C |
*RAM_BANK2 :                   FFE1 - | *RAM_BANK3 :                   FFE2 - |
*RELAXED :                        0 - |  ROL_A :                       C53F C |
 ROL_ABS :                     C5B7 C |  ROL_ABSX :                    C797 C |
 ROL_ZP :                      C4C7 C |  ROL_ZPX :                     C6A7 C |
 ROR_A :                       CCBF C |  ROR_ABS :                     CD37 C |
 ROR_ABSX :                    CF17 C |  ROR_ZP :                      CC47 C |
 ROR_ZPX :                     CE27 C |  RTI_IMP :                     C7D3 C |
 RTS_IMP :                     CB93 C |  SBC_ABS :                     DC1B C |
 SBC_ABSX :                    DDFB C |  SBC_ABSY :                    DD83 C |
 SBC_IMMED :                   DBA3 C |  SBC_IX :                      DAB3 C |
 SBC_IY :                      DC93 C |  SBC_ZP :                      DB2B C |
 SBC_ZPX :                     DD0B C |  SEC_IMP :                     C6E3 C |
 SED_IMP :                     DD65 C |  SEI_IMP :                     CE63 C |
 STA_ABS :                     D0D9 C |  STA_ABSX :                    D2B9 C |
 STA_ABSY :                    D241 C |  STA_IX :                      CF71 C |
 STA_IY :                      D151 C |  STA_ZP :                      CFE9 C |
 STA_ZPX :                     D1C9 C |  STX_ABS :                     D0F7 C |
 STX_ZP :                      D007 C |  STX_ZPY :                     D1E7 C |
 STY_ABS :                     D0BB C |  STY_ZP :                      CFCB C |
 STY_ZPX :                     D1AB C |  TAX_IMP :                     D441 C |
 TAY_IMP :                     D403 C | *TIME :                     1:27:47 - |
*TRUE :                           1 - |  TSX_IMP :                     D621 C |
 TXA_IMP :                     D07F C |  TXS_IMP :                     D25F C |
 TYA_IMP :                     D223 C | *VERSION :                     142F - |
*emu_A :                          5 - |  emu_D_flag :                     8 - |
 emu_PC :                         2 - | *emu_PC_hi :                      3 - |
 emu_SP :                         4 - | *emu_X :                          6 - |
*emu_Y :                          7 - | *emu_begin :                   C004 C |
 emu_begin.level_good :        C00D C |  emu_begin.loop :              C014 C |
 emu_data_SP :                    1 - |  emu_level :                      0 - |
*emu_mem :                        9 - |  emu_ptr :                        A - |
 emu_ptr2 :                       C - | *emu_ptr2_hi :                    D - |
*emu_ptr_hi :                     B - |  example_prog :                F800 C |
 global_emu_level :              F0 - |  local_address :                  E - |
 locals_begin :                   0 - |  locals_end :                     E - |
 locals_size :                    E - |  zp_address :                    F1 - |
 zp_begin :                      F0 - | *zp_end :                        F1 - |
*zp_size :                        1 - |

    323 symbols
     47 unused symbols

 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 132 - 1/5/2022 1:27:48


  Defined Macros:
  ---------------

LOCAL                                 | LOCALS_END                           
LOCALS_START                          | NEXT_MACRO                           
OP_MACRO                              | ZP                                   
ZP_END                                | ZP_START                             
halt                                  |

      9 macros

 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 133 - 1/5/2022 1:27:48


  Defined Functions:
  ------------------

lo                                    | hi                                   

 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 134 - 1/5/2022 1:27:48


  Code Pages:
  ----------

STANDARD (0 changed characters)

1 code page

0.23 seconds assembly time

   1711 lines source file
   7663 lines incl. macro expansions
      2 passes
      0 errors
      0 warnings
