 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 1 - 1/5/2022 12:19:0


       1/       0 :                     	;TODO
       2/       0 :                     	;-All operations same size to eliminate second jump in dispatch?
       3/       0 :                     	;-Split SP btw data SP and SP
       4/       0 :                     	; - more SP than data SP - 16 or so
       5/       0 :                     	;-Recalc dispatch - cycles times don't matter!
       6/       0 :                     	;-Load code into RAM and recode! fair as long as done by 6502
       7/       0 :                     	; - actually, no way to tell from binary without listing :/
       8/       0 :                     	; - so JIT but that's probably slower. also huge amount of memory :/
       9/       0 :                     
      10/       0 :                     	;Included files
      11/       0 :                     	include macros.asm
(1)    1/       0 :                     ;Zero page variables
(1)    2/       0 :                     ZP_START MACRO ptr
(1)    3/       0 :                     zp_begin equ ptr
(1)    4/       0 :                     zp_address set ptr
(1)    5/       0 :                     	ENDM
(1)    6/       0 :                     			
(1)    7/       0 :                     ZP MACRO var
(1)    8/       0 :                     var equ zp_address
(1)    9/       0 :                     zp_address set zp_address+1
(1)   10/       0 :                     	ENDM
(1)   11/       0 :                     	
(1)   12/       0 :                     ZP_END MACRO
(1)   13/       0 :                     zp_end equ zp_address
(1)   14/       0 :                     zp_size equ zp_address-zp_begin
(1)   15/       0 :                     	ENDM
(1)   16/       0 :                     	
(1)   17/       0 :                     ;Local variables - each emu level gets a copy
(1)   18/       0 :                     LOCALS_START MACRO ptr
(1)   19/       0 :                     locals_begin equ ptr
(1)   20/       0 :                     local_address set ptr
(1)   21/       0 :                     	ENDM
(1)   22/       0 :                     
(1)   23/       0 :                     LOCAL MACRO var
(1)   24/       0 :                     var equ local_address
(1)   25/       0 :                     local_address set local_address+1
(1)   26/       0 :                     	ENDM
(1)   27/       0 :                     
(1)   28/       0 :                     LOCALS_END MACRO
(1)   29/       0 :                     locals_end equ local_address
(1)   30/       0 :                     locals_size equ locals_end-locals_begin
(1)   31/       0 :                     	ENDM
(1)   32/       0 :                     
(1)   33/       0 :                     ;Called when each instruction is executed
(1)   34/       0 :                     OP_MACRO MACRO
(1)   35/       0 :                     	;TODO
(1)   36/       0 :                     	ENDM
(1)   37/       0 :                     
(1)   38/       0 :                     ;Advance to next instruction
(1)   39/       0 :                     NEXT_MACRO MACRO
(1)   40/       0 :                     			
(1)   41/       0 :                     	halt
(1)   42/       0 :                     	
(1)   43/       0 :                     	;Method 1 - 60 cycles
(1)   44/       0 :                     	;Jump table must be page aligned!!!
(1)   45/       0 :                     	;LDA (emu_PC,X)			;6
(1)   46/       0 :                     	;ASL					;2
(1)   47/       0 :                     	;STA emu_ptr,X			;4
(1)   48/       0 :                     	;LDA #hi(JUMP_TABLE)	;2
(1)   49/       0 :                     	;ADC #0					;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(macros.asm) - Page 2 - 1/5/2022 12:19:0


(1)   50/       0 :                     	;STA emu_ptr+1,X		;4
(1)   51/       0 :                     	;LDA (emu_ptr,X)		;6
(1)   52/       0 :                     	;STA emu_ptr2,X			;4
(1)   53/       0 :                     	;INC emu_ptr,X			;6
(1)   54/       0 :                     	;BCC .skip				;2
(1)   55/       0 :                     	;	INC emu_ptr+1,X		;6
(1)   56/       0 :                     	;.skip:
(1)   57/       0 :                     	;LDA (emu_ptr,X)		;6
(1)   58/       0 :                     	;STA emu_ptr2+1,X		;4
(1)   59/       0 :                     	;JMP (emu_ptr2,X)		;6
(1)   60/       0 :                     	
(1)   61/       0 :                     	;Method 2 - 46 cycles
(1)   62/       0 :                     	;Jump table must be page aligned!!!
(1)   63/       0 :                     	;LDA (emu_PC,X)			;6
(1)   64/       0 :                     	;STZ emu_ptr+1,X		;4
(1)   65/       0 :                     	;ASL					;2
(1)   66/       0 :                     	;ROL emu_ptr+1,X		;6
(1)   67/       0 :                     	;ASL					;2
(1)   68/       0 :                     	;ROL emu_ptr+1,X		;6
(1)   69/       0 :                     	;STA emu_ptr,X			;4				
(1)   70/       0 :                     	;LDA emu_ptr+1,X		;4
(1)   71/       0 :                     	;ADC #hi(JUMP_TABLE)	;2
(1)   72/       0 :                     	;STA emu_ptr+1,X		;4
(1)   73/       0 :                     	;JMP (emu_ptr2,X)		;6
(1)   74/       0 :                     	
(1)   75/       0 :                     	;Method 3 - 30 cycles
(1)   76/       0 :                     	;TXA							;2
(1)   77/       0 :                     	;TAY							;2
(1)   78/       0 :                     	;LDA (emu_PC,X)					;6
(1)   79/       0 :                     	;ASL 							;2
(1)   80/       0 :                     	;BCS upper						;2
(1)   81/       0 :                     	;lower:
(1)   82/       0 :                     	;	ASL							;2
(1)   83/       0 :                     	;	TAX							;2
(1)   84/       0 :                     	;	BCS upper_lower				;2
(1)   85/       0 :                     	;	lower_lower:
(1)   86/       0 :                     	;		JMP (JUMP_TABLE1,X)		;6
(1)   87/       0 :                     	;	upper_lower:
(1)   88/       0 :                     	;		JMP (JUMP_TABLE2,X)
(1)   89/       0 :                     	;upper:
(1)   90/       0 :                     	;	ASL
(1)   91/       0 :                     	;	TAX
(1)   92/       0 :                     	;	BCS upper_upper
(1)   93/       0 :                     	;	lower_upper:
(1)   94/       0 :                     	;		JMP (JUMP_TABLE3,X)
(1)   95/       0 :                     	;	upper_upper:
(1)   96/       0 :                     	;		JMP (JUMP_TABLE4,X)
(1)   97/       0 :                     	;After jump:
(1)   98/       0 :                     	;TYA							;2
(1)   99/       0 :                     	;TAX							;2
(1)  100/       0 :                     	
(1)  101/       0 :                     	;Method 4 - 28 cycles
(1)  102/       0 :                     	;LDA (emu_PC,X)			;6
(1)  103/       0 :                     	;TAY					;2
(1)  104/       0 :                     	;LDA JUMP_TABLE,Y		;4
(1)  105/       0 :                     	;PHA					;3
(1)  106/       0 :                     	;LDA JUMP_TABLE2,Y		;4
(1)  107/       0 :                     	;PHA					;3
(1)  108/       0 :                     	;RTS					;6
(1)  109/       0 :                     	
 AS V1.42 Beta [Bld 157] - Source File main.asm(macros.asm) - Page 3 - 1/5/2022 12:19:0


(1)  110/       0 :                     	;Method 5 - 30 cycles
(1)  111/       0 :                     	LDA (emu_PC,X)			;6
(1)  112/       0 :                     	TAY						;2
(1)  113/       0 :                     	LDA JUMP_TABLE_LO,Y		;4
(1)  114/       0 :                     	STA emu_ptr,X			;4
(1)  115/       0 :                     	LDA JUMP_TABLE_HI,Y		;4
(1)  116/       0 :                     	STA emu_ptr+1,X			;4
(1)  117/       0 :                     	JMP (emu_ptr,X)			;6
(1)  118/       0 :                     				
(1)  119/       0 :                     	ENDM
(1)  120/       0 :                     			
(1)  121/       0 :                     ;Misc
(1)  122/       0 :                     halt MACRO
(1)  123/       0 :                     	BRK
(1)  124/       0 :                     	BRK
(1)  125/       0 :                     	ENDM
(1)  126/       0 :                     	
(1)  127/       0 :                     LOAD16 MACRO val
(1)  128/       0 :                     	LDA #lo(val)
(1)  129/       0 :                     	LDX #hi(val)
(1)  130/       0 :                     	ENDM
(1)  131/       0 :                     	
(1)  132/       0 :                     hi FUNCTION x,(x/256)
(1)  133/       0 :                     lo FUNCTION x,(x#256)
(1)  134/       0 :                     		
      12/       0 :                     
      13/       0 :                     	;JavaScript emulator constants
      14/       0 : =$FFE1              RAM_BANK2 = 	$FFE1		;0x4000-0x7FFF
      15/       0 : =$FFE2              RAM_BANK3 = 	$FFE2		;0x8000-0xBFFF
      16/       0 : =$4                 BANK_GFX_RAM1 = 4
      17/       0 : =$5                 BANK_GFX_RAM2 = 5
      18/       0 :                     
      19/       0 : =$FFE7              DEBUG =			$FFE7
      20/       0 : =$FFE8              DEBUG_HEX = 	$FFE8
      21/       0 : =$FFE9              DEBUG_DEC = 	$FFE9
      22/       0 : =$FFEA              DEBUG_DEC16 = 	$FFEA
      23/       0 :                     
      24/       0 :                     	;65C02 emulator constants
      25/       0 : =$5                 MAX_EMU_LEVEL = 5
      26/       0 :                     
      27/       0 :                     	;Zero page variables - shared between emu levels
      28/       0 : (MACRO)             	ZP_START 240
      28/       0 : =$F0                zp_begin equ 240
      28/       0 : =$F0                zp_address set 240
      29/       0 : (MACRO)             		ZP global_emu_level
      29/       0 : =$F0                global_emu_level equ zp_address
      29/       0 : =$F1                zp_address set zp_address+1
      30/       0 : (MACRO)             	ZP_END
      30/       0 : =$F1                zp_end equ zp_address
      30/       0 : =$1                 zp_size equ zp_address-zp_begin
      31/       0 :                     	
      32/       0 :                     	;Locals - each emu level gets a copy
      33/       0 : (MACRO)             	LOCALS_START 0
      33/       0 : =$0                 locals_begin equ 0
      33/       0 : =$0                 local_address set 0
      34/       0 : (MACRO)             		LOCAL emu_level
      34/       0 : =$0                 emu_level equ local_address
      34/       0 : =$1                 local_address set local_address+1
      35/       0 : (MACRO)             		LOCAL emu_data_SP
      35/       0 : =$1                 emu_data_SP equ local_address
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 4 - 1/5/2022 12:19:0


      35/       0 : =$2                 local_address set local_address+1
      36/       0 : (MACRO)             		LOCAL emu_PC
      36/       0 : =$2                 emu_PC equ local_address
      36/       0 : =$3                 local_address set local_address+1
      37/       0 : (MACRO)             		LOCAL emu_PC_hi
      37/       0 : =$3                 emu_PC_hi equ local_address
      37/       0 : =$4                 local_address set local_address+1
      38/       0 : (MACRO)             		LOCAL emu_SP
      38/       0 : =$4                 emu_SP equ local_address
      38/       0 : =$5                 local_address set local_address+1
      39/       0 : (MACRO)             		LOCAL emu_A
      39/       0 : =$5                 emu_A equ local_address
      39/       0 : =$6                 local_address set local_address+1
      40/       0 : (MACRO)             		LOCAL emu_X
      40/       0 : =$6                 emu_X equ local_address
      40/       0 : =$7                 local_address set local_address+1
      41/       0 : (MACRO)             		LOCAL emu_Y
      41/       0 : =$7                 emu_Y equ local_address
      41/       0 : =$8                 local_address set local_address+1
      42/       0 : (MACRO)             		LOCAL emu_D_flag
      42/       0 : =$8                 emu_D_flag equ local_address
      42/       0 : =$9                 local_address set local_address+1
      43/       0 : (MACRO)             		LOCAL emu_mem
      43/       0 : =$9                 emu_mem equ local_address
      43/       0 : =$A                 local_address set local_address+1
      44/       0 : (MACRO)             		LOCAL emu_ptr
      44/       0 : =$A                 emu_ptr equ local_address
      44/       0 : =$B                 local_address set local_address+1
      45/       0 : (MACRO)             		LOCAL emu_ptr_hi
      45/       0 : =$B                 emu_ptr_hi equ local_address
      45/       0 : =$C                 local_address set local_address+1
      46/       0 : (MACRO)             		LOCAL emu_ptr2
      46/       0 : =$C                 emu_ptr2 equ local_address
      46/       0 : =$D                 local_address set local_address+1
      47/       0 : (MACRO)             		LOCAL emu_ptr2_hi
      47/       0 : =$D                 emu_ptr2_hi equ local_address
      47/       0 : =$E                 local_address set local_address+1
      48/       0 : (MACRO)             	LOCALS_END
      48/       0 : =$E                 locals_end equ local_address
      48/       0 : =$E                 locals_size equ locals_end-locals_begin
      49/       0 :                     		
      50/    C000 :                     	ORG $C000
      51/    C000 :                     	;Debug - file sizes
      52/    C000 : 20 95 D4            	JSR DebugFileSizes
      53/    C003 :                     	
      54/    C003 :                     	;Setup before any emulator level loads
      55/    C003 : 64 F0               	STZ global_emu_level
      56/    C005 :                     	
      57/    C005 :                     	;Setup for each emulator level
      58/    C005 :                     	emu_begin:
      59/    C005 :                     		;Calculate local emu level
      60/    C005 : A5 F0               		LDA global_emu_level
      61/    C007 : C9 05               		CMP #MAX_EMU_LEVEL
      62/    C009 : D0 03               		BNE .level_good
      63/    C00B : 4C 45 C0            			JMP ExitEmu
      64/    C00E :                     		.level_good:
      65/    C00E : E6 F0               		INC global_emu_level
      66/    C010 :                     		
      67/    C010 :                     		;Calculate SP and ZP data stack pointer
      68/    C010 : A8                  		TAY
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 5 - 1/5/2022 12:19:0


      69/    C011 : AA                  		TAX
      70/    C012 : F0 08               		BEQ .loop_done
      71/    C014 : A9 00               		LDA #0
      72/    C016 : 18                  		CLC
      73/    C017 :                     		.loop:
      74/    C017 : 69 0E               			ADC #locals_size
      75/    C019 : CA                  			DEX
      76/    C01A : D0 FB               			BNE .loop
      77/    C01C :                     		.loop_done:
      78/    C01C : AA                  		TAX
      79/    C01D : 95 01               		STA emu_data_SP,X
      80/    C01F : 95 04               		STA emu_SP,X
      81/    C021 : 98                  		TYA
      82/    C022 : 95 00               		STA emu_level,X
      83/    C024 :                     		
      84/    C024 :                     		;Clear emulated D flag
      85/    C024 : 74 08               		STZ emu_D_flag,X
      86/    C026 :                     		
      87/    C026 :                     		;Load emulated PC
      88/    C026 : A9 BC               		LDA #lo(test_prog)
      89/    C028 : 95 02               		STA emu_PC,X
      90/    C02A : A9 D4               		LDA #hi(test_prog)
      91/    C02C : 95 03               		STA emu_PC+1,X
      92/    C02E :                     	
      93/    C02E :                     		;Start emulating - should never return from this
      94/    C02E : (MACRO)             		NEXT_MACRO
      94/    C02E :                                             
      94/    C02E :  (MACRO-2)                  halt
      94/    C02E : 00                          BRK
      94/    C02F : 00                          BRK
      94/    C030 :                             
      94/    C030 :                             ;Method 1 - 60 cycles
      94/    C030 :                             ;Jump table must be page aligned!!!
      94/    C030 :                             ;LDA (emu_PC,X)                 ;6
      94/    C030 :                             ;ASL                                    ;2
      94/    C030 :                             ;STA emu_ptr,X                  ;4
      94/    C030 :                             ;LDA #hi(JUMP_TABLE)    ;2
      94/    C030 :                             ;ADC #0                                 ;2
      94/    C030 :                             ;STA emu_ptr+1,X                ;4
      94/    C030 :                             ;LDA (emu_ptr,X)                ;6
      94/    C030 :                             ;STA emu_ptr2,X                 ;4
      94/    C030 :                             ;INC emu_ptr,X                  ;6
      94/    C030 :                             ;BCC .skip                              ;2
      94/    C030 :                             ;       INC emu_ptr+1,X         ;6
      94/    C030 :                             ;.skip:
      94/    C030 :                             ;LDA (emu_ptr,X)                ;6
      94/    C030 :                             ;STA emu_ptr2+1,X               ;4
      94/    C030 :                             ;JMP (emu_ptr2,X)               ;6
      94/    C030 :                             
      94/    C030 :                             ;Method 2 - 46 cycles
      94/    C030 :                             ;Jump table must be page aligned!!!
      94/    C030 :                             ;LDA (emu_PC,X)                 ;6
      94/    C030 :                             ;STZ emu_ptr+1,X                ;4
      94/    C030 :                             ;ASL                                    ;2
      94/    C030 :                             ;ROL emu_ptr+1,X                ;6
      94/    C030 :                             ;ASL                                    ;2
      94/    C030 :                             ;ROL emu_ptr+1,X                ;6
      94/    C030 :                             ;STA emu_ptr,X                  ;4                              
      94/    C030 :                             ;LDA emu_ptr+1,X                ;4
      94/    C030 :                             ;ADC #hi(JUMP_TABLE)    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 6 - 1/5/2022 12:19:0


      94/    C030 :                             ;STA emu_ptr+1,X                ;4
      94/    C030 :                             ;JMP (emu_ptr2,X)               ;6
      94/    C030 :                             
      94/    C030 :                             ;Method 3 - 30 cycles
      94/    C030 :                             ;TXA                                                    ;2
      94/    C030 :                             ;TAY                                                    ;2
      94/    C030 :                             ;LDA (emu_PC,X)                                 ;6
      94/    C030 :                             ;ASL                                                    ;2
      94/    C030 :                             ;BCS upper                                              ;2
      94/    C030 :                             ;lower:
      94/    C030 :                             ;       ASL                                                     ;2
      94/    C030 :                             ;       TAX                                                     ;2
      94/    C030 :                             ;       BCS upper_lower                         ;2
      94/    C030 :                             ;       lower_lower:
      94/    C030 :                             ;               JMP (JUMP_TABLE1,X)             ;6
      94/    C030 :                             ;       upper_lower:
      94/    C030 :                             ;               JMP (JUMP_TABLE2,X)
      94/    C030 :                             ;upper:
      94/    C030 :                             ;       ASL
      94/    C030 :                             ;       TAX
      94/    C030 :                             ;       BCS upper_upper
      94/    C030 :                             ;       lower_upper:
      94/    C030 :                             ;               JMP (JUMP_TABLE3,X)
      94/    C030 :                             ;       upper_upper:
      94/    C030 :                             ;               JMP (JUMP_TABLE4,X)
      94/    C030 :                             ;After jump:
      94/    C030 :                             ;TYA                                                    ;2
      94/    C030 :                             ;TAX                                                    ;2
      94/    C030 :                             
      94/    C030 :                             ;Method 4 - 28 cycles
      94/    C030 :                             ;LDA (emu_PC,X)                 ;6
      94/    C030 :                             ;TAY                                    ;2
      94/    C030 :                             ;LDA JUMP_TABLE,Y               ;4
      94/    C030 :                             ;PHA                                    ;3
      94/    C030 :                             ;LDA JUMP_TABLE2,Y              ;4
      94/    C030 :                             ;PHA                                    ;3
      94/    C030 :                             ;RTS                                    ;6
      94/    C030 :                             
      94/    C030 :                             ;Method 5 - 30 cycles
      94/    C030 : A1 02                       LDA (emu_PC,X)                  ;6
      94/    C032 : A8                          TAY                                             ;2
      94/    C033 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
      94/    C036 : 95 0A                       STA emu_ptr,X                   ;4
      94/    C038 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
      94/    C03B : 95 0B                       STA emu_ptr+1,X                 ;4
      94/    C03D : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
      94/    C040 :                                                     
      95/    C040 :                     		
      96/    C040 : (MACRO)             		halt
      96/    C040 : 00                          BRK
      96/    C041 : 00                          BRK
      97/    C042 : 4C 42 C0            		JMP *
      98/    C045 :                     
      99/    C045 :                     	;Deepest emulation layer reached - stop nesting
     100/    C045 :                     	ExitEmu:
     101/    C045 : (MACRO)             		halt
     101/    C045 : 00                          BRK
     101/    C046 : 00                          BRK
     102/    C047 : 4C 47 C0            		JMP *
     103/    C04A :                     	
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 7 - 1/5/2022 12:19:0


     104/    C04A :                     	include "instructions.asm"
(1)    1/    C04A :                     	;Instruction routines
(1)    2/    C04A :                     	instructions_begin:
(1)    3/    C04A :                     
(1)    4/    C04A :                     	;0x0 - BRK IMP
(1)    5/    C04A :                     	BRK_IMP:
(1)    6/    C04A : (MACRO)             		OP_MACRO 0, "BRK", "IMP", "BRK_IMP"
(1)    6/    C04A :                             ;TODO
(1)    7/    C04A : (MACRO)             		NEXT_MACRO
(1)    7/    C04A :                                             
(1)    7/    C04A :  (MACRO-2)                  halt
(1)    7/    C04A : 00                          BRK
(1)    7/    C04B : 00                          BRK
(1)    7/    C04C :                             
(1)    7/    C04C :                             ;Method 1 - 60 cycles
(1)    7/    C04C :                             ;Jump table must be page aligned!!!
(1)    7/    C04C :                             ;LDA (emu_PC,X)                 ;6
(1)    7/    C04C :                             ;ASL                                    ;2
(1)    7/    C04C :                             ;STA emu_ptr,X                  ;4
(1)    7/    C04C :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)    7/    C04C :                             ;ADC #0                                 ;2
(1)    7/    C04C :                             ;STA emu_ptr+1,X                ;4
(1)    7/    C04C :                             ;LDA (emu_ptr,X)                ;6
(1)    7/    C04C :                             ;STA emu_ptr2,X                 ;4
(1)    7/    C04C :                             ;INC emu_ptr,X                  ;6
(1)    7/    C04C :                             ;BCC .skip                              ;2
(1)    7/    C04C :                             ;       INC emu_ptr+1,X         ;6
(1)    7/    C04C :                             ;.skip:
(1)    7/    C04C :                             ;LDA (emu_ptr,X)                ;6
(1)    7/    C04C :                             ;STA emu_ptr2+1,X               ;4
(1)    7/    C04C :                             ;JMP (emu_ptr2,X)               ;6
(1)    7/    C04C :                             
(1)    7/    C04C :                             ;Method 2 - 46 cycles
(1)    7/    C04C :                             ;Jump table must be page aligned!!!
(1)    7/    C04C :                             ;LDA (emu_PC,X)                 ;6
(1)    7/    C04C :                             ;STZ emu_ptr+1,X                ;4
(1)    7/    C04C :                             ;ASL                                    ;2
(1)    7/    C04C :                             ;ROL emu_ptr+1,X                ;6
(1)    7/    C04C :                             ;ASL                                    ;2
(1)    7/    C04C :                             ;ROL emu_ptr+1,X                ;6
(1)    7/    C04C :                             ;STA emu_ptr,X                  ;4                              
(1)    7/    C04C :                             ;LDA emu_ptr+1,X                ;4
(1)    7/    C04C :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)    7/    C04C :                             ;STA emu_ptr+1,X                ;4
(1)    7/    C04C :                             ;JMP (emu_ptr2,X)               ;6
(1)    7/    C04C :                             
(1)    7/    C04C :                             ;Method 3 - 30 cycles
(1)    7/    C04C :                             ;TXA                                                    ;2
(1)    7/    C04C :                             ;TAY                                                    ;2
(1)    7/    C04C :                             ;LDA (emu_PC,X)                                 ;6
(1)    7/    C04C :                             ;ASL                                                    ;2
(1)    7/    C04C :                             ;BCS upper                                              ;2
(1)    7/    C04C :                             ;lower:
(1)    7/    C04C :                             ;       ASL                                                     ;2
(1)    7/    C04C :                             ;       TAX                                                     ;2
(1)    7/    C04C :                             ;       BCS upper_lower                         ;2
(1)    7/    C04C :                             ;       lower_lower:
(1)    7/    C04C :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)    7/    C04C :                             ;       upper_lower:
(1)    7/    C04C :                             ;               JMP (JUMP_TABLE2,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 8 - 1/5/2022 12:19:0


(1)    7/    C04C :                             ;upper:
(1)    7/    C04C :                             ;       ASL
(1)    7/    C04C :                             ;       TAX
(1)    7/    C04C :                             ;       BCS upper_upper
(1)    7/    C04C :                             ;       lower_upper:
(1)    7/    C04C :                             ;               JMP (JUMP_TABLE3,X)
(1)    7/    C04C :                             ;       upper_upper:
(1)    7/    C04C :                             ;               JMP (JUMP_TABLE4,X)
(1)    7/    C04C :                             ;After jump:
(1)    7/    C04C :                             ;TYA                                                    ;2
(1)    7/    C04C :                             ;TAX                                                    ;2
(1)    7/    C04C :                             
(1)    7/    C04C :                             ;Method 4 - 28 cycles
(1)    7/    C04C :                             ;LDA (emu_PC,X)                 ;6
(1)    7/    C04C :                             ;TAY                                    ;2
(1)    7/    C04C :                             ;LDA JUMP_TABLE,Y               ;4
(1)    7/    C04C :                             ;PHA                                    ;3
(1)    7/    C04C :                             ;LDA JUMP_TABLE2,Y              ;4
(1)    7/    C04C :                             ;PHA                                    ;3
(1)    7/    C04C :                             ;RTS                                    ;6
(1)    7/    C04C :                             
(1)    7/    C04C :                             ;Method 5 - 30 cycles
(1)    7/    C04C : A1 02                       LDA (emu_PC,X)                  ;6
(1)    7/    C04E : A8                          TAY                                             ;2
(1)    7/    C04F : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)    7/    C052 : 95 0A                       STA emu_ptr,X                   ;4
(1)    7/    C054 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)    7/    C057 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)    7/    C059 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)    7/    C05C :                                                     
(1)    8/    C05C :                     
(1)    9/    C05C :                     	;0x1 - ORA IX
(1)   10/    C05C :                     	ORA_IX:
(1)   11/    C05C : (MACRO)             		OP_MACRO 1, "ORA", "IX", "ORA_IX"
(1)   11/    C05C :                             ;TODO
(1)   12/    C05C : (MACRO)             		NEXT_MACRO
(1)   12/    C05C :                                             
(1)   12/    C05C :  (MACRO-2)                  halt
(1)   12/    C05C : 00                          BRK
(1)   12/    C05D : 00                          BRK
(1)   12/    C05E :                             
(1)   12/    C05E :                             ;Method 1 - 60 cycles
(1)   12/    C05E :                             ;Jump table must be page aligned!!!
(1)   12/    C05E :                             ;LDA (emu_PC,X)                 ;6
(1)   12/    C05E :                             ;ASL                                    ;2
(1)   12/    C05E :                             ;STA emu_ptr,X                  ;4
(1)   12/    C05E :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   12/    C05E :                             ;ADC #0                                 ;2
(1)   12/    C05E :                             ;STA emu_ptr+1,X                ;4
(1)   12/    C05E :                             ;LDA (emu_ptr,X)                ;6
(1)   12/    C05E :                             ;STA emu_ptr2,X                 ;4
(1)   12/    C05E :                             ;INC emu_ptr,X                  ;6
(1)   12/    C05E :                             ;BCC .skip                              ;2
(1)   12/    C05E :                             ;       INC emu_ptr+1,X         ;6
(1)   12/    C05E :                             ;.skip:
(1)   12/    C05E :                             ;LDA (emu_ptr,X)                ;6
(1)   12/    C05E :                             ;STA emu_ptr2+1,X               ;4
(1)   12/    C05E :                             ;JMP (emu_ptr2,X)               ;6
(1)   12/    C05E :                             
(1)   12/    C05E :                             ;Method 2 - 46 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 9 - 1/5/2022 12:19:0


(1)   12/    C05E :                             ;Jump table must be page aligned!!!
(1)   12/    C05E :                             ;LDA (emu_PC,X)                 ;6
(1)   12/    C05E :                             ;STZ emu_ptr+1,X                ;4
(1)   12/    C05E :                             ;ASL                                    ;2
(1)   12/    C05E :                             ;ROL emu_ptr+1,X                ;6
(1)   12/    C05E :                             ;ASL                                    ;2
(1)   12/    C05E :                             ;ROL emu_ptr+1,X                ;6
(1)   12/    C05E :                             ;STA emu_ptr,X                  ;4                              
(1)   12/    C05E :                             ;LDA emu_ptr+1,X                ;4
(1)   12/    C05E :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   12/    C05E :                             ;STA emu_ptr+1,X                ;4
(1)   12/    C05E :                             ;JMP (emu_ptr2,X)               ;6
(1)   12/    C05E :                             
(1)   12/    C05E :                             ;Method 3 - 30 cycles
(1)   12/    C05E :                             ;TXA                                                    ;2
(1)   12/    C05E :                             ;TAY                                                    ;2
(1)   12/    C05E :                             ;LDA (emu_PC,X)                                 ;6
(1)   12/    C05E :                             ;ASL                                                    ;2
(1)   12/    C05E :                             ;BCS upper                                              ;2
(1)   12/    C05E :                             ;lower:
(1)   12/    C05E :                             ;       ASL                                                     ;2
(1)   12/    C05E :                             ;       TAX                                                     ;2
(1)   12/    C05E :                             ;       BCS upper_lower                         ;2
(1)   12/    C05E :                             ;       lower_lower:
(1)   12/    C05E :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   12/    C05E :                             ;       upper_lower:
(1)   12/    C05E :                             ;               JMP (JUMP_TABLE2,X)
(1)   12/    C05E :                             ;upper:
(1)   12/    C05E :                             ;       ASL
(1)   12/    C05E :                             ;       TAX
(1)   12/    C05E :                             ;       BCS upper_upper
(1)   12/    C05E :                             ;       lower_upper:
(1)   12/    C05E :                             ;               JMP (JUMP_TABLE3,X)
(1)   12/    C05E :                             ;       upper_upper:
(1)   12/    C05E :                             ;               JMP (JUMP_TABLE4,X)
(1)   12/    C05E :                             ;After jump:
(1)   12/    C05E :                             ;TYA                                                    ;2
(1)   12/    C05E :                             ;TAX                                                    ;2
(1)   12/    C05E :                             
(1)   12/    C05E :                             ;Method 4 - 28 cycles
(1)   12/    C05E :                             ;LDA (emu_PC,X)                 ;6
(1)   12/    C05E :                             ;TAY                                    ;2
(1)   12/    C05E :                             ;LDA JUMP_TABLE,Y               ;4
(1)   12/    C05E :                             ;PHA                                    ;3
(1)   12/    C05E :                             ;LDA JUMP_TABLE2,Y              ;4
(1)   12/    C05E :                             ;PHA                                    ;3
(1)   12/    C05E :                             ;RTS                                    ;6
(1)   12/    C05E :                             
(1)   12/    C05E :                             ;Method 5 - 30 cycles
(1)   12/    C05E : A1 02                       LDA (emu_PC,X)                  ;6
(1)   12/    C060 : A8                          TAY                                             ;2
(1)   12/    C061 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)   12/    C064 : 95 0A                       STA emu_ptr,X                   ;4
(1)   12/    C066 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)   12/    C069 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)   12/    C06B : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)   12/    C06E :                                                     
(1)   13/    C06E :                     
(1)   14/    C06E :                     	;0x2 - NOP
(1)   15/    C06E :                     	NOP_0x2:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 10 - 1/5/2022 12:19:0


(1)   16/    C06E : (MACRO)             		OP_MACRO 2, "NOP", "IMP", "NOP_0x2"
(1)   16/    C06E :                             ;TODO
(1)   17/    C06E : (MACRO)             		NEXT_MACRO
(1)   17/    C06E :                                             
(1)   17/    C06E :  (MACRO-2)                  halt
(1)   17/    C06E : 00                          BRK
(1)   17/    C06F : 00                          BRK
(1)   17/    C070 :                             
(1)   17/    C070 :                             ;Method 1 - 60 cycles
(1)   17/    C070 :                             ;Jump table must be page aligned!!!
(1)   17/    C070 :                             ;LDA (emu_PC,X)                 ;6
(1)   17/    C070 :                             ;ASL                                    ;2
(1)   17/    C070 :                             ;STA emu_ptr,X                  ;4
(1)   17/    C070 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   17/    C070 :                             ;ADC #0                                 ;2
(1)   17/    C070 :                             ;STA emu_ptr+1,X                ;4
(1)   17/    C070 :                             ;LDA (emu_ptr,X)                ;6
(1)   17/    C070 :                             ;STA emu_ptr2,X                 ;4
(1)   17/    C070 :                             ;INC emu_ptr,X                  ;6
(1)   17/    C070 :                             ;BCC .skip                              ;2
(1)   17/    C070 :                             ;       INC emu_ptr+1,X         ;6
(1)   17/    C070 :                             ;.skip:
(1)   17/    C070 :                             ;LDA (emu_ptr,X)                ;6
(1)   17/    C070 :                             ;STA emu_ptr2+1,X               ;4
(1)   17/    C070 :                             ;JMP (emu_ptr2,X)               ;6
(1)   17/    C070 :                             
(1)   17/    C070 :                             ;Method 2 - 46 cycles
(1)   17/    C070 :                             ;Jump table must be page aligned!!!
(1)   17/    C070 :                             ;LDA (emu_PC,X)                 ;6
(1)   17/    C070 :                             ;STZ emu_ptr+1,X                ;4
(1)   17/    C070 :                             ;ASL                                    ;2
(1)   17/    C070 :                             ;ROL emu_ptr+1,X                ;6
(1)   17/    C070 :                             ;ASL                                    ;2
(1)   17/    C070 :                             ;ROL emu_ptr+1,X                ;6
(1)   17/    C070 :                             ;STA emu_ptr,X                  ;4                              
(1)   17/    C070 :                             ;LDA emu_ptr+1,X                ;4
(1)   17/    C070 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   17/    C070 :                             ;STA emu_ptr+1,X                ;4
(1)   17/    C070 :                             ;JMP (emu_ptr2,X)               ;6
(1)   17/    C070 :                             
(1)   17/    C070 :                             ;Method 3 - 30 cycles
(1)   17/    C070 :                             ;TXA                                                    ;2
(1)   17/    C070 :                             ;TAY                                                    ;2
(1)   17/    C070 :                             ;LDA (emu_PC,X)                                 ;6
(1)   17/    C070 :                             ;ASL                                                    ;2
(1)   17/    C070 :                             ;BCS upper                                              ;2
(1)   17/    C070 :                             ;lower:
(1)   17/    C070 :                             ;       ASL                                                     ;2
(1)   17/    C070 :                             ;       TAX                                                     ;2
(1)   17/    C070 :                             ;       BCS upper_lower                         ;2
(1)   17/    C070 :                             ;       lower_lower:
(1)   17/    C070 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   17/    C070 :                             ;       upper_lower:
(1)   17/    C070 :                             ;               JMP (JUMP_TABLE2,X)
(1)   17/    C070 :                             ;upper:
(1)   17/    C070 :                             ;       ASL
(1)   17/    C070 :                             ;       TAX
(1)   17/    C070 :                             ;       BCS upper_upper
(1)   17/    C070 :                             ;       lower_upper:
(1)   17/    C070 :                             ;               JMP (JUMP_TABLE3,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 11 - 1/5/2022 12:19:0


(1)   17/    C070 :                             ;       upper_upper:
(1)   17/    C070 :                             ;               JMP (JUMP_TABLE4,X)
(1)   17/    C070 :                             ;After jump:
(1)   17/    C070 :                             ;TYA                                                    ;2
(1)   17/    C070 :                             ;TAX                                                    ;2
(1)   17/    C070 :                             
(1)   17/    C070 :                             ;Method 4 - 28 cycles
(1)   17/    C070 :                             ;LDA (emu_PC,X)                 ;6
(1)   17/    C070 :                             ;TAY                                    ;2
(1)   17/    C070 :                             ;LDA JUMP_TABLE,Y               ;4
(1)   17/    C070 :                             ;PHA                                    ;3
(1)   17/    C070 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)   17/    C070 :                             ;PHA                                    ;3
(1)   17/    C070 :                             ;RTS                                    ;6
(1)   17/    C070 :                             
(1)   17/    C070 :                             ;Method 5 - 30 cycles
(1)   17/    C070 : A1 02                       LDA (emu_PC,X)                  ;6
(1)   17/    C072 : A8                          TAY                                             ;2
(1)   17/    C073 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)   17/    C076 : 95 0A                       STA emu_ptr,X                   ;4
(1)   17/    C078 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)   17/    C07B : 95 0B                       STA emu_ptr+1,X                 ;4
(1)   17/    C07D : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)   17/    C080 :                                                     
(1)   18/    C080 :                     
(1)   19/    C080 :                     	;0x3 - NOP
(1)   20/    C080 :                     	NOP_0x3:
(1)   21/    C080 : (MACRO)             		OP_MACRO 3, "NOP", "IMP", "NOP_0x3"
(1)   21/    C080 :                             ;TODO
(1)   22/    C080 : (MACRO)             		NEXT_MACRO
(1)   22/    C080 :                                             
(1)   22/    C080 :  (MACRO-2)                  halt
(1)   22/    C080 : 00                          BRK
(1)   22/    C081 : 00                          BRK
(1)   22/    C082 :                             
(1)   22/    C082 :                             ;Method 1 - 60 cycles
(1)   22/    C082 :                             ;Jump table must be page aligned!!!
(1)   22/    C082 :                             ;LDA (emu_PC,X)                 ;6
(1)   22/    C082 :                             ;ASL                                    ;2
(1)   22/    C082 :                             ;STA emu_ptr,X                  ;4
(1)   22/    C082 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   22/    C082 :                             ;ADC #0                                 ;2
(1)   22/    C082 :                             ;STA emu_ptr+1,X                ;4
(1)   22/    C082 :                             ;LDA (emu_ptr,X)                ;6
(1)   22/    C082 :                             ;STA emu_ptr2,X                 ;4
(1)   22/    C082 :                             ;INC emu_ptr,X                  ;6
(1)   22/    C082 :                             ;BCC .skip                              ;2
(1)   22/    C082 :                             ;       INC emu_ptr+1,X         ;6
(1)   22/    C082 :                             ;.skip:
(1)   22/    C082 :                             ;LDA (emu_ptr,X)                ;6
(1)   22/    C082 :                             ;STA emu_ptr2+1,X               ;4
(1)   22/    C082 :                             ;JMP (emu_ptr2,X)               ;6
(1)   22/    C082 :                             
(1)   22/    C082 :                             ;Method 2 - 46 cycles
(1)   22/    C082 :                             ;Jump table must be page aligned!!!
(1)   22/    C082 :                             ;LDA (emu_PC,X)                 ;6
(1)   22/    C082 :                             ;STZ emu_ptr+1,X                ;4
(1)   22/    C082 :                             ;ASL                                    ;2
(1)   22/    C082 :                             ;ROL emu_ptr+1,X                ;6
(1)   22/    C082 :                             ;ASL                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 12 - 1/5/2022 12:19:0


(1)   22/    C082 :                             ;ROL emu_ptr+1,X                ;6
(1)   22/    C082 :                             ;STA emu_ptr,X                  ;4                              
(1)   22/    C082 :                             ;LDA emu_ptr+1,X                ;4
(1)   22/    C082 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   22/    C082 :                             ;STA emu_ptr+1,X                ;4
(1)   22/    C082 :                             ;JMP (emu_ptr2,X)               ;6
(1)   22/    C082 :                             
(1)   22/    C082 :                             ;Method 3 - 30 cycles
(1)   22/    C082 :                             ;TXA                                                    ;2
(1)   22/    C082 :                             ;TAY                                                    ;2
(1)   22/    C082 :                             ;LDA (emu_PC,X)                                 ;6
(1)   22/    C082 :                             ;ASL                                                    ;2
(1)   22/    C082 :                             ;BCS upper                                              ;2
(1)   22/    C082 :                             ;lower:
(1)   22/    C082 :                             ;       ASL                                                     ;2
(1)   22/    C082 :                             ;       TAX                                                     ;2
(1)   22/    C082 :                             ;       BCS upper_lower                         ;2
(1)   22/    C082 :                             ;       lower_lower:
(1)   22/    C082 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   22/    C082 :                             ;       upper_lower:
(1)   22/    C082 :                             ;               JMP (JUMP_TABLE2,X)
(1)   22/    C082 :                             ;upper:
(1)   22/    C082 :                             ;       ASL
(1)   22/    C082 :                             ;       TAX
(1)   22/    C082 :                             ;       BCS upper_upper
(1)   22/    C082 :                             ;       lower_upper:
(1)   22/    C082 :                             ;               JMP (JUMP_TABLE3,X)
(1)   22/    C082 :                             ;       upper_upper:
(1)   22/    C082 :                             ;               JMP (JUMP_TABLE4,X)
(1)   22/    C082 :                             ;After jump:
(1)   22/    C082 :                             ;TYA                                                    ;2
(1)   22/    C082 :                             ;TAX                                                    ;2
(1)   22/    C082 :                             
(1)   22/    C082 :                             ;Method 4 - 28 cycles
(1)   22/    C082 :                             ;LDA (emu_PC,X)                 ;6
(1)   22/    C082 :                             ;TAY                                    ;2
(1)   22/    C082 :                             ;LDA JUMP_TABLE,Y               ;4
(1)   22/    C082 :                             ;PHA                                    ;3
(1)   22/    C082 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)   22/    C082 :                             ;PHA                                    ;3
(1)   22/    C082 :                             ;RTS                                    ;6
(1)   22/    C082 :                             
(1)   22/    C082 :                             ;Method 5 - 30 cycles
(1)   22/    C082 : A1 02                       LDA (emu_PC,X)                  ;6
(1)   22/    C084 : A8                          TAY                                             ;2
(1)   22/    C085 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)   22/    C088 : 95 0A                       STA emu_ptr,X                   ;4
(1)   22/    C08A : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)   22/    C08D : 95 0B                       STA emu_ptr+1,X                 ;4
(1)   22/    C08F : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)   22/    C092 :                                                     
(1)   23/    C092 :                     
(1)   24/    C092 :                     	;0x4 - NOP
(1)   25/    C092 :                     	NOP_0x4:
(1)   26/    C092 : (MACRO)             		OP_MACRO 4, "NOP", "IMP", "NOP_0x4"
(1)   26/    C092 :                             ;TODO
(1)   27/    C092 : (MACRO)             		NEXT_MACRO
(1)   27/    C092 :                                             
(1)   27/    C092 :  (MACRO-2)                  halt
(1)   27/    C092 : 00                          BRK
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 13 - 1/5/2022 12:19:0


(1)   27/    C093 : 00                          BRK
(1)   27/    C094 :                             
(1)   27/    C094 :                             ;Method 1 - 60 cycles
(1)   27/    C094 :                             ;Jump table must be page aligned!!!
(1)   27/    C094 :                             ;LDA (emu_PC,X)                 ;6
(1)   27/    C094 :                             ;ASL                                    ;2
(1)   27/    C094 :                             ;STA emu_ptr,X                  ;4
(1)   27/    C094 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   27/    C094 :                             ;ADC #0                                 ;2
(1)   27/    C094 :                             ;STA emu_ptr+1,X                ;4
(1)   27/    C094 :                             ;LDA (emu_ptr,X)                ;6
(1)   27/    C094 :                             ;STA emu_ptr2,X                 ;4
(1)   27/    C094 :                             ;INC emu_ptr,X                  ;6
(1)   27/    C094 :                             ;BCC .skip                              ;2
(1)   27/    C094 :                             ;       INC emu_ptr+1,X         ;6
(1)   27/    C094 :                             ;.skip:
(1)   27/    C094 :                             ;LDA (emu_ptr,X)                ;6
(1)   27/    C094 :                             ;STA emu_ptr2+1,X               ;4
(1)   27/    C094 :                             ;JMP (emu_ptr2,X)               ;6
(1)   27/    C094 :                             
(1)   27/    C094 :                             ;Method 2 - 46 cycles
(1)   27/    C094 :                             ;Jump table must be page aligned!!!
(1)   27/    C094 :                             ;LDA (emu_PC,X)                 ;6
(1)   27/    C094 :                             ;STZ emu_ptr+1,X                ;4
(1)   27/    C094 :                             ;ASL                                    ;2
(1)   27/    C094 :                             ;ROL emu_ptr+1,X                ;6
(1)   27/    C094 :                             ;ASL                                    ;2
(1)   27/    C094 :                             ;ROL emu_ptr+1,X                ;6
(1)   27/    C094 :                             ;STA emu_ptr,X                  ;4                              
(1)   27/    C094 :                             ;LDA emu_ptr+1,X                ;4
(1)   27/    C094 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   27/    C094 :                             ;STA emu_ptr+1,X                ;4
(1)   27/    C094 :                             ;JMP (emu_ptr2,X)               ;6
(1)   27/    C094 :                             
(1)   27/    C094 :                             ;Method 3 - 30 cycles
(1)   27/    C094 :                             ;TXA                                                    ;2
(1)   27/    C094 :                             ;TAY                                                    ;2
(1)   27/    C094 :                             ;LDA (emu_PC,X)                                 ;6
(1)   27/    C094 :                             ;ASL                                                    ;2
(1)   27/    C094 :                             ;BCS upper                                              ;2
(1)   27/    C094 :                             ;lower:
(1)   27/    C094 :                             ;       ASL                                                     ;2
(1)   27/    C094 :                             ;       TAX                                                     ;2
(1)   27/    C094 :                             ;       BCS upper_lower                         ;2
(1)   27/    C094 :                             ;       lower_lower:
(1)   27/    C094 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   27/    C094 :                             ;       upper_lower:
(1)   27/    C094 :                             ;               JMP (JUMP_TABLE2,X)
(1)   27/    C094 :                             ;upper:
(1)   27/    C094 :                             ;       ASL
(1)   27/    C094 :                             ;       TAX
(1)   27/    C094 :                             ;       BCS upper_upper
(1)   27/    C094 :                             ;       lower_upper:
(1)   27/    C094 :                             ;               JMP (JUMP_TABLE3,X)
(1)   27/    C094 :                             ;       upper_upper:
(1)   27/    C094 :                             ;               JMP (JUMP_TABLE4,X)
(1)   27/    C094 :                             ;After jump:
(1)   27/    C094 :                             ;TYA                                                    ;2
(1)   27/    C094 :                             ;TAX                                                    ;2
(1)   27/    C094 :                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 14 - 1/5/2022 12:19:0


(1)   27/    C094 :                             ;Method 4 - 28 cycles
(1)   27/    C094 :                             ;LDA (emu_PC,X)                 ;6
(1)   27/    C094 :                             ;TAY                                    ;2
(1)   27/    C094 :                             ;LDA JUMP_TABLE,Y               ;4
(1)   27/    C094 :                             ;PHA                                    ;3
(1)   27/    C094 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)   27/    C094 :                             ;PHA                                    ;3
(1)   27/    C094 :                             ;RTS                                    ;6
(1)   27/    C094 :                             
(1)   27/    C094 :                             ;Method 5 - 30 cycles
(1)   27/    C094 : A1 02                       LDA (emu_PC,X)                  ;6
(1)   27/    C096 : A8                          TAY                                             ;2
(1)   27/    C097 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)   27/    C09A : 95 0A                       STA emu_ptr,X                   ;4
(1)   27/    C09C : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)   27/    C09F : 95 0B                       STA emu_ptr+1,X                 ;4
(1)   27/    C0A1 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)   27/    C0A4 :                                                     
(1)   28/    C0A4 :                     
(1)   29/    C0A4 :                     	;0x5 - ORA ZP
(1)   30/    C0A4 :                     	ORA_ZP:
(1)   31/    C0A4 : (MACRO)             		OP_MACRO 5, "ORA", "ZP", "ORA_ZP"
(1)   31/    C0A4 :                             ;TODO
(1)   32/    C0A4 : (MACRO)             		NEXT_MACRO
(1)   32/    C0A4 :                                             
(1)   32/    C0A4 :  (MACRO-2)                  halt
(1)   32/    C0A4 : 00                          BRK
(1)   32/    C0A5 : 00                          BRK
(1)   32/    C0A6 :                             
(1)   32/    C0A6 :                             ;Method 1 - 60 cycles
(1)   32/    C0A6 :                             ;Jump table must be page aligned!!!
(1)   32/    C0A6 :                             ;LDA (emu_PC,X)                 ;6
(1)   32/    C0A6 :                             ;ASL                                    ;2
(1)   32/    C0A6 :                             ;STA emu_ptr,X                  ;4
(1)   32/    C0A6 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   32/    C0A6 :                             ;ADC #0                                 ;2
(1)   32/    C0A6 :                             ;STA emu_ptr+1,X                ;4
(1)   32/    C0A6 :                             ;LDA (emu_ptr,X)                ;6
(1)   32/    C0A6 :                             ;STA emu_ptr2,X                 ;4
(1)   32/    C0A6 :                             ;INC emu_ptr,X                  ;6
(1)   32/    C0A6 :                             ;BCC .skip                              ;2
(1)   32/    C0A6 :                             ;       INC emu_ptr+1,X         ;6
(1)   32/    C0A6 :                             ;.skip:
(1)   32/    C0A6 :                             ;LDA (emu_ptr,X)                ;6
(1)   32/    C0A6 :                             ;STA emu_ptr2+1,X               ;4
(1)   32/    C0A6 :                             ;JMP (emu_ptr2,X)               ;6
(1)   32/    C0A6 :                             
(1)   32/    C0A6 :                             ;Method 2 - 46 cycles
(1)   32/    C0A6 :                             ;Jump table must be page aligned!!!
(1)   32/    C0A6 :                             ;LDA (emu_PC,X)                 ;6
(1)   32/    C0A6 :                             ;STZ emu_ptr+1,X                ;4
(1)   32/    C0A6 :                             ;ASL                                    ;2
(1)   32/    C0A6 :                             ;ROL emu_ptr+1,X                ;6
(1)   32/    C0A6 :                             ;ASL                                    ;2
(1)   32/    C0A6 :                             ;ROL emu_ptr+1,X                ;6
(1)   32/    C0A6 :                             ;STA emu_ptr,X                  ;4                              
(1)   32/    C0A6 :                             ;LDA emu_ptr+1,X                ;4
(1)   32/    C0A6 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   32/    C0A6 :                             ;STA emu_ptr+1,X                ;4
(1)   32/    C0A6 :                             ;JMP (emu_ptr2,X)               ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 15 - 1/5/2022 12:19:0


(1)   32/    C0A6 :                             
(1)   32/    C0A6 :                             ;Method 3 - 30 cycles
(1)   32/    C0A6 :                             ;TXA                                                    ;2
(1)   32/    C0A6 :                             ;TAY                                                    ;2
(1)   32/    C0A6 :                             ;LDA (emu_PC,X)                                 ;6
(1)   32/    C0A6 :                             ;ASL                                                    ;2
(1)   32/    C0A6 :                             ;BCS upper                                              ;2
(1)   32/    C0A6 :                             ;lower:
(1)   32/    C0A6 :                             ;       ASL                                                     ;2
(1)   32/    C0A6 :                             ;       TAX                                                     ;2
(1)   32/    C0A6 :                             ;       BCS upper_lower                         ;2
(1)   32/    C0A6 :                             ;       lower_lower:
(1)   32/    C0A6 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   32/    C0A6 :                             ;       upper_lower:
(1)   32/    C0A6 :                             ;               JMP (JUMP_TABLE2,X)
(1)   32/    C0A6 :                             ;upper:
(1)   32/    C0A6 :                             ;       ASL
(1)   32/    C0A6 :                             ;       TAX
(1)   32/    C0A6 :                             ;       BCS upper_upper
(1)   32/    C0A6 :                             ;       lower_upper:
(1)   32/    C0A6 :                             ;               JMP (JUMP_TABLE3,X)
(1)   32/    C0A6 :                             ;       upper_upper:
(1)   32/    C0A6 :                             ;               JMP (JUMP_TABLE4,X)
(1)   32/    C0A6 :                             ;After jump:
(1)   32/    C0A6 :                             ;TYA                                                    ;2
(1)   32/    C0A6 :                             ;TAX                                                    ;2
(1)   32/    C0A6 :                             
(1)   32/    C0A6 :                             ;Method 4 - 28 cycles
(1)   32/    C0A6 :                             ;LDA (emu_PC,X)                 ;6
(1)   32/    C0A6 :                             ;TAY                                    ;2
(1)   32/    C0A6 :                             ;LDA JUMP_TABLE,Y               ;4
(1)   32/    C0A6 :                             ;PHA                                    ;3
(1)   32/    C0A6 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)   32/    C0A6 :                             ;PHA                                    ;3
(1)   32/    C0A6 :                             ;RTS                                    ;6
(1)   32/    C0A6 :                             
(1)   32/    C0A6 :                             ;Method 5 - 30 cycles
(1)   32/    C0A6 : A1 02                       LDA (emu_PC,X)                  ;6
(1)   32/    C0A8 : A8                          TAY                                             ;2
(1)   32/    C0A9 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)   32/    C0AC : 95 0A                       STA emu_ptr,X                   ;4
(1)   32/    C0AE : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)   32/    C0B1 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)   32/    C0B3 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)   32/    C0B6 :                                                     
(1)   33/    C0B6 :                     
(1)   34/    C0B6 :                     	;0x6 - ASL ZP
(1)   35/    C0B6 :                     	ASL_ZP:
(1)   36/    C0B6 : (MACRO)             		OP_MACRO 6, "ASL", "ZP", "ASL_ZP"
(1)   36/    C0B6 :                             ;TODO
(1)   37/    C0B6 : (MACRO)             		NEXT_MACRO
(1)   37/    C0B6 :                                             
(1)   37/    C0B6 :  (MACRO-2)                  halt
(1)   37/    C0B6 : 00                          BRK
(1)   37/    C0B7 : 00                          BRK
(1)   37/    C0B8 :                             
(1)   37/    C0B8 :                             ;Method 1 - 60 cycles
(1)   37/    C0B8 :                             ;Jump table must be page aligned!!!
(1)   37/    C0B8 :                             ;LDA (emu_PC,X)                 ;6
(1)   37/    C0B8 :                             ;ASL                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 16 - 1/5/2022 12:19:0


(1)   37/    C0B8 :                             ;STA emu_ptr,X                  ;4
(1)   37/    C0B8 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   37/    C0B8 :                             ;ADC #0                                 ;2
(1)   37/    C0B8 :                             ;STA emu_ptr+1,X                ;4
(1)   37/    C0B8 :                             ;LDA (emu_ptr,X)                ;6
(1)   37/    C0B8 :                             ;STA emu_ptr2,X                 ;4
(1)   37/    C0B8 :                             ;INC emu_ptr,X                  ;6
(1)   37/    C0B8 :                             ;BCC .skip                              ;2
(1)   37/    C0B8 :                             ;       INC emu_ptr+1,X         ;6
(1)   37/    C0B8 :                             ;.skip:
(1)   37/    C0B8 :                             ;LDA (emu_ptr,X)                ;6
(1)   37/    C0B8 :                             ;STA emu_ptr2+1,X               ;4
(1)   37/    C0B8 :                             ;JMP (emu_ptr2,X)               ;6
(1)   37/    C0B8 :                             
(1)   37/    C0B8 :                             ;Method 2 - 46 cycles
(1)   37/    C0B8 :                             ;Jump table must be page aligned!!!
(1)   37/    C0B8 :                             ;LDA (emu_PC,X)                 ;6
(1)   37/    C0B8 :                             ;STZ emu_ptr+1,X                ;4
(1)   37/    C0B8 :                             ;ASL                                    ;2
(1)   37/    C0B8 :                             ;ROL emu_ptr+1,X                ;6
(1)   37/    C0B8 :                             ;ASL                                    ;2
(1)   37/    C0B8 :                             ;ROL emu_ptr+1,X                ;6
(1)   37/    C0B8 :                             ;STA emu_ptr,X                  ;4                              
(1)   37/    C0B8 :                             ;LDA emu_ptr+1,X                ;4
(1)   37/    C0B8 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   37/    C0B8 :                             ;STA emu_ptr+1,X                ;4
(1)   37/    C0B8 :                             ;JMP (emu_ptr2,X)               ;6
(1)   37/    C0B8 :                             
(1)   37/    C0B8 :                             ;Method 3 - 30 cycles
(1)   37/    C0B8 :                             ;TXA                                                    ;2
(1)   37/    C0B8 :                             ;TAY                                                    ;2
(1)   37/    C0B8 :                             ;LDA (emu_PC,X)                                 ;6
(1)   37/    C0B8 :                             ;ASL                                                    ;2
(1)   37/    C0B8 :                             ;BCS upper                                              ;2
(1)   37/    C0B8 :                             ;lower:
(1)   37/    C0B8 :                             ;       ASL                                                     ;2
(1)   37/    C0B8 :                             ;       TAX                                                     ;2
(1)   37/    C0B8 :                             ;       BCS upper_lower                         ;2
(1)   37/    C0B8 :                             ;       lower_lower:
(1)   37/    C0B8 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   37/    C0B8 :                             ;       upper_lower:
(1)   37/    C0B8 :                             ;               JMP (JUMP_TABLE2,X)
(1)   37/    C0B8 :                             ;upper:
(1)   37/    C0B8 :                             ;       ASL
(1)   37/    C0B8 :                             ;       TAX
(1)   37/    C0B8 :                             ;       BCS upper_upper
(1)   37/    C0B8 :                             ;       lower_upper:
(1)   37/    C0B8 :                             ;               JMP (JUMP_TABLE3,X)
(1)   37/    C0B8 :                             ;       upper_upper:
(1)   37/    C0B8 :                             ;               JMP (JUMP_TABLE4,X)
(1)   37/    C0B8 :                             ;After jump:
(1)   37/    C0B8 :                             ;TYA                                                    ;2
(1)   37/    C0B8 :                             ;TAX                                                    ;2
(1)   37/    C0B8 :                             
(1)   37/    C0B8 :                             ;Method 4 - 28 cycles
(1)   37/    C0B8 :                             ;LDA (emu_PC,X)                 ;6
(1)   37/    C0B8 :                             ;TAY                                    ;2
(1)   37/    C0B8 :                             ;LDA JUMP_TABLE,Y               ;4
(1)   37/    C0B8 :                             ;PHA                                    ;3
(1)   37/    C0B8 :                             ;LDA JUMP_TABLE2,Y              ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 17 - 1/5/2022 12:19:0


(1)   37/    C0B8 :                             ;PHA                                    ;3
(1)   37/    C0B8 :                             ;RTS                                    ;6
(1)   37/    C0B8 :                             
(1)   37/    C0B8 :                             ;Method 5 - 30 cycles
(1)   37/    C0B8 : A1 02                       LDA (emu_PC,X)                  ;6
(1)   37/    C0BA : A8                          TAY                                             ;2
(1)   37/    C0BB : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)   37/    C0BE : 95 0A                       STA emu_ptr,X                   ;4
(1)   37/    C0C0 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)   37/    C0C3 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)   37/    C0C5 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)   37/    C0C8 :                                                     
(1)   38/    C0C8 :                     
(1)   39/    C0C8 :                     	;0x7 - NOP
(1)   40/    C0C8 :                     	NOP_0x7:
(1)   41/    C0C8 : (MACRO)             		OP_MACRO 7, "NOP", "IMP", "NOP_0x7"
(1)   41/    C0C8 :                             ;TODO
(1)   42/    C0C8 : (MACRO)             		NEXT_MACRO
(1)   42/    C0C8 :                                             
(1)   42/    C0C8 :  (MACRO-2)                  halt
(1)   42/    C0C8 : 00                          BRK
(1)   42/    C0C9 : 00                          BRK
(1)   42/    C0CA :                             
(1)   42/    C0CA :                             ;Method 1 - 60 cycles
(1)   42/    C0CA :                             ;Jump table must be page aligned!!!
(1)   42/    C0CA :                             ;LDA (emu_PC,X)                 ;6
(1)   42/    C0CA :                             ;ASL                                    ;2
(1)   42/    C0CA :                             ;STA emu_ptr,X                  ;4
(1)   42/    C0CA :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   42/    C0CA :                             ;ADC #0                                 ;2
(1)   42/    C0CA :                             ;STA emu_ptr+1,X                ;4
(1)   42/    C0CA :                             ;LDA (emu_ptr,X)                ;6
(1)   42/    C0CA :                             ;STA emu_ptr2,X                 ;4
(1)   42/    C0CA :                             ;INC emu_ptr,X                  ;6
(1)   42/    C0CA :                             ;BCC .skip                              ;2
(1)   42/    C0CA :                             ;       INC emu_ptr+1,X         ;6
(1)   42/    C0CA :                             ;.skip:
(1)   42/    C0CA :                             ;LDA (emu_ptr,X)                ;6
(1)   42/    C0CA :                             ;STA emu_ptr2+1,X               ;4
(1)   42/    C0CA :                             ;JMP (emu_ptr2,X)               ;6
(1)   42/    C0CA :                             
(1)   42/    C0CA :                             ;Method 2 - 46 cycles
(1)   42/    C0CA :                             ;Jump table must be page aligned!!!
(1)   42/    C0CA :                             ;LDA (emu_PC,X)                 ;6
(1)   42/    C0CA :                             ;STZ emu_ptr+1,X                ;4
(1)   42/    C0CA :                             ;ASL                                    ;2
(1)   42/    C0CA :                             ;ROL emu_ptr+1,X                ;6
(1)   42/    C0CA :                             ;ASL                                    ;2
(1)   42/    C0CA :                             ;ROL emu_ptr+1,X                ;6
(1)   42/    C0CA :                             ;STA emu_ptr,X                  ;4                              
(1)   42/    C0CA :                             ;LDA emu_ptr+1,X                ;4
(1)   42/    C0CA :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   42/    C0CA :                             ;STA emu_ptr+1,X                ;4
(1)   42/    C0CA :                             ;JMP (emu_ptr2,X)               ;6
(1)   42/    C0CA :                             
(1)   42/    C0CA :                             ;Method 3 - 30 cycles
(1)   42/    C0CA :                             ;TXA                                                    ;2
(1)   42/    C0CA :                             ;TAY                                                    ;2
(1)   42/    C0CA :                             ;LDA (emu_PC,X)                                 ;6
(1)   42/    C0CA :                             ;ASL                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 18 - 1/5/2022 12:19:0


(1)   42/    C0CA :                             ;BCS upper                                              ;2
(1)   42/    C0CA :                             ;lower:
(1)   42/    C0CA :                             ;       ASL                                                     ;2
(1)   42/    C0CA :                             ;       TAX                                                     ;2
(1)   42/    C0CA :                             ;       BCS upper_lower                         ;2
(1)   42/    C0CA :                             ;       lower_lower:
(1)   42/    C0CA :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   42/    C0CA :                             ;       upper_lower:
(1)   42/    C0CA :                             ;               JMP (JUMP_TABLE2,X)
(1)   42/    C0CA :                             ;upper:
(1)   42/    C0CA :                             ;       ASL
(1)   42/    C0CA :                             ;       TAX
(1)   42/    C0CA :                             ;       BCS upper_upper
(1)   42/    C0CA :                             ;       lower_upper:
(1)   42/    C0CA :                             ;               JMP (JUMP_TABLE3,X)
(1)   42/    C0CA :                             ;       upper_upper:
(1)   42/    C0CA :                             ;               JMP (JUMP_TABLE4,X)
(1)   42/    C0CA :                             ;After jump:
(1)   42/    C0CA :                             ;TYA                                                    ;2
(1)   42/    C0CA :                             ;TAX                                                    ;2
(1)   42/    C0CA :                             
(1)   42/    C0CA :                             ;Method 4 - 28 cycles
(1)   42/    C0CA :                             ;LDA (emu_PC,X)                 ;6
(1)   42/    C0CA :                             ;TAY                                    ;2
(1)   42/    C0CA :                             ;LDA JUMP_TABLE,Y               ;4
(1)   42/    C0CA :                             ;PHA                                    ;3
(1)   42/    C0CA :                             ;LDA JUMP_TABLE2,Y              ;4
(1)   42/    C0CA :                             ;PHA                                    ;3
(1)   42/    C0CA :                             ;RTS                                    ;6
(1)   42/    C0CA :                             
(1)   42/    C0CA :                             ;Method 5 - 30 cycles
(1)   42/    C0CA : A1 02                       LDA (emu_PC,X)                  ;6
(1)   42/    C0CC : A8                          TAY                                             ;2
(1)   42/    C0CD : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)   42/    C0D0 : 95 0A                       STA emu_ptr,X                   ;4
(1)   42/    C0D2 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)   42/    C0D5 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)   42/    C0D7 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)   42/    C0DA :                                                     
(1)   43/    C0DA :                     
(1)   44/    C0DA :                     	;0x8 - PHP IMP
(1)   45/    C0DA :                     	PHP_IMP:
(1)   46/    C0DA : (MACRO)             		OP_MACRO 8, "PHP", "IMP", "PHP_IMP"
(1)   46/    C0DA :                             ;TODO
(1)   47/    C0DA : (MACRO)             		NEXT_MACRO
(1)   47/    C0DA :                                             
(1)   47/    C0DA :  (MACRO-2)                  halt
(1)   47/    C0DA : 00                          BRK
(1)   47/    C0DB : 00                          BRK
(1)   47/    C0DC :                             
(1)   47/    C0DC :                             ;Method 1 - 60 cycles
(1)   47/    C0DC :                             ;Jump table must be page aligned!!!
(1)   47/    C0DC :                             ;LDA (emu_PC,X)                 ;6
(1)   47/    C0DC :                             ;ASL                                    ;2
(1)   47/    C0DC :                             ;STA emu_ptr,X                  ;4
(1)   47/    C0DC :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   47/    C0DC :                             ;ADC #0                                 ;2
(1)   47/    C0DC :                             ;STA emu_ptr+1,X                ;4
(1)   47/    C0DC :                             ;LDA (emu_ptr,X)                ;6
(1)   47/    C0DC :                             ;STA emu_ptr2,X                 ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 19 - 1/5/2022 12:19:0


(1)   47/    C0DC :                             ;INC emu_ptr,X                  ;6
(1)   47/    C0DC :                             ;BCC .skip                              ;2
(1)   47/    C0DC :                             ;       INC emu_ptr+1,X         ;6
(1)   47/    C0DC :                             ;.skip:
(1)   47/    C0DC :                             ;LDA (emu_ptr,X)                ;6
(1)   47/    C0DC :                             ;STA emu_ptr2+1,X               ;4
(1)   47/    C0DC :                             ;JMP (emu_ptr2,X)               ;6
(1)   47/    C0DC :                             
(1)   47/    C0DC :                             ;Method 2 - 46 cycles
(1)   47/    C0DC :                             ;Jump table must be page aligned!!!
(1)   47/    C0DC :                             ;LDA (emu_PC,X)                 ;6
(1)   47/    C0DC :                             ;STZ emu_ptr+1,X                ;4
(1)   47/    C0DC :                             ;ASL                                    ;2
(1)   47/    C0DC :                             ;ROL emu_ptr+1,X                ;6
(1)   47/    C0DC :                             ;ASL                                    ;2
(1)   47/    C0DC :                             ;ROL emu_ptr+1,X                ;6
(1)   47/    C0DC :                             ;STA emu_ptr,X                  ;4                              
(1)   47/    C0DC :                             ;LDA emu_ptr+1,X                ;4
(1)   47/    C0DC :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   47/    C0DC :                             ;STA emu_ptr+1,X                ;4
(1)   47/    C0DC :                             ;JMP (emu_ptr2,X)               ;6
(1)   47/    C0DC :                             
(1)   47/    C0DC :                             ;Method 3 - 30 cycles
(1)   47/    C0DC :                             ;TXA                                                    ;2
(1)   47/    C0DC :                             ;TAY                                                    ;2
(1)   47/    C0DC :                             ;LDA (emu_PC,X)                                 ;6
(1)   47/    C0DC :                             ;ASL                                                    ;2
(1)   47/    C0DC :                             ;BCS upper                                              ;2
(1)   47/    C0DC :                             ;lower:
(1)   47/    C0DC :                             ;       ASL                                                     ;2
(1)   47/    C0DC :                             ;       TAX                                                     ;2
(1)   47/    C0DC :                             ;       BCS upper_lower                         ;2
(1)   47/    C0DC :                             ;       lower_lower:
(1)   47/    C0DC :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   47/    C0DC :                             ;       upper_lower:
(1)   47/    C0DC :                             ;               JMP (JUMP_TABLE2,X)
(1)   47/    C0DC :                             ;upper:
(1)   47/    C0DC :                             ;       ASL
(1)   47/    C0DC :                             ;       TAX
(1)   47/    C0DC :                             ;       BCS upper_upper
(1)   47/    C0DC :                             ;       lower_upper:
(1)   47/    C0DC :                             ;               JMP (JUMP_TABLE3,X)
(1)   47/    C0DC :                             ;       upper_upper:
(1)   47/    C0DC :                             ;               JMP (JUMP_TABLE4,X)
(1)   47/    C0DC :                             ;After jump:
(1)   47/    C0DC :                             ;TYA                                                    ;2
(1)   47/    C0DC :                             ;TAX                                                    ;2
(1)   47/    C0DC :                             
(1)   47/    C0DC :                             ;Method 4 - 28 cycles
(1)   47/    C0DC :                             ;LDA (emu_PC,X)                 ;6
(1)   47/    C0DC :                             ;TAY                                    ;2
(1)   47/    C0DC :                             ;LDA JUMP_TABLE,Y               ;4
(1)   47/    C0DC :                             ;PHA                                    ;3
(1)   47/    C0DC :                             ;LDA JUMP_TABLE2,Y              ;4
(1)   47/    C0DC :                             ;PHA                                    ;3
(1)   47/    C0DC :                             ;RTS                                    ;6
(1)   47/    C0DC :                             
(1)   47/    C0DC :                             ;Method 5 - 30 cycles
(1)   47/    C0DC : A1 02                       LDA (emu_PC,X)                  ;6
(1)   47/    C0DE : A8                          TAY                                             ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 20 - 1/5/2022 12:19:0


(1)   47/    C0DF : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)   47/    C0E2 : 95 0A                       STA emu_ptr,X                   ;4
(1)   47/    C0E4 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)   47/    C0E7 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)   47/    C0E9 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)   47/    C0EC :                                                     
(1)   48/    C0EC :                     
(1)   49/    C0EC :                     	;0x9 - ORA IMMED
(1)   50/    C0EC :                     	ORA_IMMED:
(1)   51/    C0EC : (MACRO)             		OP_MACRO 9, "ORA", "IMMED", "ORA_IMMED"
(1)   51/    C0EC :                             ;TODO
(1)   52/    C0EC : (MACRO)             		NEXT_MACRO
(1)   52/    C0EC :                                             
(1)   52/    C0EC :  (MACRO-2)                  halt
(1)   52/    C0EC : 00                          BRK
(1)   52/    C0ED : 00                          BRK
(1)   52/    C0EE :                             
(1)   52/    C0EE :                             ;Method 1 - 60 cycles
(1)   52/    C0EE :                             ;Jump table must be page aligned!!!
(1)   52/    C0EE :                             ;LDA (emu_PC,X)                 ;6
(1)   52/    C0EE :                             ;ASL                                    ;2
(1)   52/    C0EE :                             ;STA emu_ptr,X                  ;4
(1)   52/    C0EE :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   52/    C0EE :                             ;ADC #0                                 ;2
(1)   52/    C0EE :                             ;STA emu_ptr+1,X                ;4
(1)   52/    C0EE :                             ;LDA (emu_ptr,X)                ;6
(1)   52/    C0EE :                             ;STA emu_ptr2,X                 ;4
(1)   52/    C0EE :                             ;INC emu_ptr,X                  ;6
(1)   52/    C0EE :                             ;BCC .skip                              ;2
(1)   52/    C0EE :                             ;       INC emu_ptr+1,X         ;6
(1)   52/    C0EE :                             ;.skip:
(1)   52/    C0EE :                             ;LDA (emu_ptr,X)                ;6
(1)   52/    C0EE :                             ;STA emu_ptr2+1,X               ;4
(1)   52/    C0EE :                             ;JMP (emu_ptr2,X)               ;6
(1)   52/    C0EE :                             
(1)   52/    C0EE :                             ;Method 2 - 46 cycles
(1)   52/    C0EE :                             ;Jump table must be page aligned!!!
(1)   52/    C0EE :                             ;LDA (emu_PC,X)                 ;6
(1)   52/    C0EE :                             ;STZ emu_ptr+1,X                ;4
(1)   52/    C0EE :                             ;ASL                                    ;2
(1)   52/    C0EE :                             ;ROL emu_ptr+1,X                ;6
(1)   52/    C0EE :                             ;ASL                                    ;2
(1)   52/    C0EE :                             ;ROL emu_ptr+1,X                ;6
(1)   52/    C0EE :                             ;STA emu_ptr,X                  ;4                              
(1)   52/    C0EE :                             ;LDA emu_ptr+1,X                ;4
(1)   52/    C0EE :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   52/    C0EE :                             ;STA emu_ptr+1,X                ;4
(1)   52/    C0EE :                             ;JMP (emu_ptr2,X)               ;6
(1)   52/    C0EE :                             
(1)   52/    C0EE :                             ;Method 3 - 30 cycles
(1)   52/    C0EE :                             ;TXA                                                    ;2
(1)   52/    C0EE :                             ;TAY                                                    ;2
(1)   52/    C0EE :                             ;LDA (emu_PC,X)                                 ;6
(1)   52/    C0EE :                             ;ASL                                                    ;2
(1)   52/    C0EE :                             ;BCS upper                                              ;2
(1)   52/    C0EE :                             ;lower:
(1)   52/    C0EE :                             ;       ASL                                                     ;2
(1)   52/    C0EE :                             ;       TAX                                                     ;2
(1)   52/    C0EE :                             ;       BCS upper_lower                         ;2
(1)   52/    C0EE :                             ;       lower_lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 21 - 1/5/2022 12:19:0


(1)   52/    C0EE :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   52/    C0EE :                             ;       upper_lower:
(1)   52/    C0EE :                             ;               JMP (JUMP_TABLE2,X)
(1)   52/    C0EE :                             ;upper:
(1)   52/    C0EE :                             ;       ASL
(1)   52/    C0EE :                             ;       TAX
(1)   52/    C0EE :                             ;       BCS upper_upper
(1)   52/    C0EE :                             ;       lower_upper:
(1)   52/    C0EE :                             ;               JMP (JUMP_TABLE3,X)
(1)   52/    C0EE :                             ;       upper_upper:
(1)   52/    C0EE :                             ;               JMP (JUMP_TABLE4,X)
(1)   52/    C0EE :                             ;After jump:
(1)   52/    C0EE :                             ;TYA                                                    ;2
(1)   52/    C0EE :                             ;TAX                                                    ;2
(1)   52/    C0EE :                             
(1)   52/    C0EE :                             ;Method 4 - 28 cycles
(1)   52/    C0EE :                             ;LDA (emu_PC,X)                 ;6
(1)   52/    C0EE :                             ;TAY                                    ;2
(1)   52/    C0EE :                             ;LDA JUMP_TABLE,Y               ;4
(1)   52/    C0EE :                             ;PHA                                    ;3
(1)   52/    C0EE :                             ;LDA JUMP_TABLE2,Y              ;4
(1)   52/    C0EE :                             ;PHA                                    ;3
(1)   52/    C0EE :                             ;RTS                                    ;6
(1)   52/    C0EE :                             
(1)   52/    C0EE :                             ;Method 5 - 30 cycles
(1)   52/    C0EE : A1 02                       LDA (emu_PC,X)                  ;6
(1)   52/    C0F0 : A8                          TAY                                             ;2
(1)   52/    C0F1 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)   52/    C0F4 : 95 0A                       STA emu_ptr,X                   ;4
(1)   52/    C0F6 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)   52/    C0F9 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)   52/    C0FB : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)   52/    C0FE :                                                     
(1)   53/    C0FE :                     
(1)   54/    C0FE :                     	;0xA - ASL A
(1)   55/    C0FE :                     	ASL_A:
(1)   56/    C0FE : (MACRO)             		OP_MACRO 10, "ASL", "A", "ASL_A"
(1)   56/    C0FE :                             ;TODO
(1)   57/    C0FE : (MACRO)             		NEXT_MACRO
(1)   57/    C0FE :                                             
(1)   57/    C0FE :  (MACRO-2)                  halt
(1)   57/    C0FE : 00                          BRK
(1)   57/    C0FF : 00                          BRK
(1)   57/    C100 :                             
(1)   57/    C100 :                             ;Method 1 - 60 cycles
(1)   57/    C100 :                             ;Jump table must be page aligned!!!
(1)   57/    C100 :                             ;LDA (emu_PC,X)                 ;6
(1)   57/    C100 :                             ;ASL                                    ;2
(1)   57/    C100 :                             ;STA emu_ptr,X                  ;4
(1)   57/    C100 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   57/    C100 :                             ;ADC #0                                 ;2
(1)   57/    C100 :                             ;STA emu_ptr+1,X                ;4
(1)   57/    C100 :                             ;LDA (emu_ptr,X)                ;6
(1)   57/    C100 :                             ;STA emu_ptr2,X                 ;4
(1)   57/    C100 :                             ;INC emu_ptr,X                  ;6
(1)   57/    C100 :                             ;BCC .skip                              ;2
(1)   57/    C100 :                             ;       INC emu_ptr+1,X         ;6
(1)   57/    C100 :                             ;.skip:
(1)   57/    C100 :                             ;LDA (emu_ptr,X)                ;6
(1)   57/    C100 :                             ;STA emu_ptr2+1,X               ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 22 - 1/5/2022 12:19:0


(1)   57/    C100 :                             ;JMP (emu_ptr2,X)               ;6
(1)   57/    C100 :                             
(1)   57/    C100 :                             ;Method 2 - 46 cycles
(1)   57/    C100 :                             ;Jump table must be page aligned!!!
(1)   57/    C100 :                             ;LDA (emu_PC,X)                 ;6
(1)   57/    C100 :                             ;STZ emu_ptr+1,X                ;4
(1)   57/    C100 :                             ;ASL                                    ;2
(1)   57/    C100 :                             ;ROL emu_ptr+1,X                ;6
(1)   57/    C100 :                             ;ASL                                    ;2
(1)   57/    C100 :                             ;ROL emu_ptr+1,X                ;6
(1)   57/    C100 :                             ;STA emu_ptr,X                  ;4                              
(1)   57/    C100 :                             ;LDA emu_ptr+1,X                ;4
(1)   57/    C100 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   57/    C100 :                             ;STA emu_ptr+1,X                ;4
(1)   57/    C100 :                             ;JMP (emu_ptr2,X)               ;6
(1)   57/    C100 :                             
(1)   57/    C100 :                             ;Method 3 - 30 cycles
(1)   57/    C100 :                             ;TXA                                                    ;2
(1)   57/    C100 :                             ;TAY                                                    ;2
(1)   57/    C100 :                             ;LDA (emu_PC,X)                                 ;6
(1)   57/    C100 :                             ;ASL                                                    ;2
(1)   57/    C100 :                             ;BCS upper                                              ;2
(1)   57/    C100 :                             ;lower:
(1)   57/    C100 :                             ;       ASL                                                     ;2
(1)   57/    C100 :                             ;       TAX                                                     ;2
(1)   57/    C100 :                             ;       BCS upper_lower                         ;2
(1)   57/    C100 :                             ;       lower_lower:
(1)   57/    C100 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   57/    C100 :                             ;       upper_lower:
(1)   57/    C100 :                             ;               JMP (JUMP_TABLE2,X)
(1)   57/    C100 :                             ;upper:
(1)   57/    C100 :                             ;       ASL
(1)   57/    C100 :                             ;       TAX
(1)   57/    C100 :                             ;       BCS upper_upper
(1)   57/    C100 :                             ;       lower_upper:
(1)   57/    C100 :                             ;               JMP (JUMP_TABLE3,X)
(1)   57/    C100 :                             ;       upper_upper:
(1)   57/    C100 :                             ;               JMP (JUMP_TABLE4,X)
(1)   57/    C100 :                             ;After jump:
(1)   57/    C100 :                             ;TYA                                                    ;2
(1)   57/    C100 :                             ;TAX                                                    ;2
(1)   57/    C100 :                             
(1)   57/    C100 :                             ;Method 4 - 28 cycles
(1)   57/    C100 :                             ;LDA (emu_PC,X)                 ;6
(1)   57/    C100 :                             ;TAY                                    ;2
(1)   57/    C100 :                             ;LDA JUMP_TABLE,Y               ;4
(1)   57/    C100 :                             ;PHA                                    ;3
(1)   57/    C100 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)   57/    C100 :                             ;PHA                                    ;3
(1)   57/    C100 :                             ;RTS                                    ;6
(1)   57/    C100 :                             
(1)   57/    C100 :                             ;Method 5 - 30 cycles
(1)   57/    C100 : A1 02                       LDA (emu_PC,X)                  ;6
(1)   57/    C102 : A8                          TAY                                             ;2
(1)   57/    C103 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)   57/    C106 : 95 0A                       STA emu_ptr,X                   ;4
(1)   57/    C108 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)   57/    C10B : 95 0B                       STA emu_ptr+1,X                 ;4
(1)   57/    C10D : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)   57/    C110 :                                                     
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 23 - 1/5/2022 12:19:0


(1)   58/    C110 :                     
(1)   59/    C110 :                     	;0xB - NOP
(1)   60/    C110 :                     	NOP_0xB:
(1)   61/    C110 : (MACRO)             		OP_MACRO 11, "NOP", "IMP", "NOP_0xB"
(1)   61/    C110 :                             ;TODO
(1)   62/    C110 : (MACRO)             		NEXT_MACRO
(1)   62/    C110 :                                             
(1)   62/    C110 :  (MACRO-2)                  halt
(1)   62/    C110 : 00                          BRK
(1)   62/    C111 : 00                          BRK
(1)   62/    C112 :                             
(1)   62/    C112 :                             ;Method 1 - 60 cycles
(1)   62/    C112 :                             ;Jump table must be page aligned!!!
(1)   62/    C112 :                             ;LDA (emu_PC,X)                 ;6
(1)   62/    C112 :                             ;ASL                                    ;2
(1)   62/    C112 :                             ;STA emu_ptr,X                  ;4
(1)   62/    C112 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   62/    C112 :                             ;ADC #0                                 ;2
(1)   62/    C112 :                             ;STA emu_ptr+1,X                ;4
(1)   62/    C112 :                             ;LDA (emu_ptr,X)                ;6
(1)   62/    C112 :                             ;STA emu_ptr2,X                 ;4
(1)   62/    C112 :                             ;INC emu_ptr,X                  ;6
(1)   62/    C112 :                             ;BCC .skip                              ;2
(1)   62/    C112 :                             ;       INC emu_ptr+1,X         ;6
(1)   62/    C112 :                             ;.skip:
(1)   62/    C112 :                             ;LDA (emu_ptr,X)                ;6
(1)   62/    C112 :                             ;STA emu_ptr2+1,X               ;4
(1)   62/    C112 :                             ;JMP (emu_ptr2,X)               ;6
(1)   62/    C112 :                             
(1)   62/    C112 :                             ;Method 2 - 46 cycles
(1)   62/    C112 :                             ;Jump table must be page aligned!!!
(1)   62/    C112 :                             ;LDA (emu_PC,X)                 ;6
(1)   62/    C112 :                             ;STZ emu_ptr+1,X                ;4
(1)   62/    C112 :                             ;ASL                                    ;2
(1)   62/    C112 :                             ;ROL emu_ptr+1,X                ;6
(1)   62/    C112 :                             ;ASL                                    ;2
(1)   62/    C112 :                             ;ROL emu_ptr+1,X                ;6
(1)   62/    C112 :                             ;STA emu_ptr,X                  ;4                              
(1)   62/    C112 :                             ;LDA emu_ptr+1,X                ;4
(1)   62/    C112 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   62/    C112 :                             ;STA emu_ptr+1,X                ;4
(1)   62/    C112 :                             ;JMP (emu_ptr2,X)               ;6
(1)   62/    C112 :                             
(1)   62/    C112 :                             ;Method 3 - 30 cycles
(1)   62/    C112 :                             ;TXA                                                    ;2
(1)   62/    C112 :                             ;TAY                                                    ;2
(1)   62/    C112 :                             ;LDA (emu_PC,X)                                 ;6
(1)   62/    C112 :                             ;ASL                                                    ;2
(1)   62/    C112 :                             ;BCS upper                                              ;2
(1)   62/    C112 :                             ;lower:
(1)   62/    C112 :                             ;       ASL                                                     ;2
(1)   62/    C112 :                             ;       TAX                                                     ;2
(1)   62/    C112 :                             ;       BCS upper_lower                         ;2
(1)   62/    C112 :                             ;       lower_lower:
(1)   62/    C112 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   62/    C112 :                             ;       upper_lower:
(1)   62/    C112 :                             ;               JMP (JUMP_TABLE2,X)
(1)   62/    C112 :                             ;upper:
(1)   62/    C112 :                             ;       ASL
(1)   62/    C112 :                             ;       TAX
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 24 - 1/5/2022 12:19:0


(1)   62/    C112 :                             ;       BCS upper_upper
(1)   62/    C112 :                             ;       lower_upper:
(1)   62/    C112 :                             ;               JMP (JUMP_TABLE3,X)
(1)   62/    C112 :                             ;       upper_upper:
(1)   62/    C112 :                             ;               JMP (JUMP_TABLE4,X)
(1)   62/    C112 :                             ;After jump:
(1)   62/    C112 :                             ;TYA                                                    ;2
(1)   62/    C112 :                             ;TAX                                                    ;2
(1)   62/    C112 :                             
(1)   62/    C112 :                             ;Method 4 - 28 cycles
(1)   62/    C112 :                             ;LDA (emu_PC,X)                 ;6
(1)   62/    C112 :                             ;TAY                                    ;2
(1)   62/    C112 :                             ;LDA JUMP_TABLE,Y               ;4
(1)   62/    C112 :                             ;PHA                                    ;3
(1)   62/    C112 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)   62/    C112 :                             ;PHA                                    ;3
(1)   62/    C112 :                             ;RTS                                    ;6
(1)   62/    C112 :                             
(1)   62/    C112 :                             ;Method 5 - 30 cycles
(1)   62/    C112 : A1 02                       LDA (emu_PC,X)                  ;6
(1)   62/    C114 : A8                          TAY                                             ;2
(1)   62/    C115 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)   62/    C118 : 95 0A                       STA emu_ptr,X                   ;4
(1)   62/    C11A : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)   62/    C11D : 95 0B                       STA emu_ptr+1,X                 ;4
(1)   62/    C11F : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)   62/    C122 :                                                     
(1)   63/    C122 :                     
(1)   64/    C122 :                     	;0xC - NOP
(1)   65/    C122 :                     	NOP_0xC:
(1)   66/    C122 : (MACRO)             		OP_MACRO 12, "NOP", "IMP", "NOP_0xC"
(1)   66/    C122 :                             ;TODO
(1)   67/    C122 : (MACRO)             		NEXT_MACRO
(1)   67/    C122 :                                             
(1)   67/    C122 :  (MACRO-2)                  halt
(1)   67/    C122 : 00                          BRK
(1)   67/    C123 : 00                          BRK
(1)   67/    C124 :                             
(1)   67/    C124 :                             ;Method 1 - 60 cycles
(1)   67/    C124 :                             ;Jump table must be page aligned!!!
(1)   67/    C124 :                             ;LDA (emu_PC,X)                 ;6
(1)   67/    C124 :                             ;ASL                                    ;2
(1)   67/    C124 :                             ;STA emu_ptr,X                  ;4
(1)   67/    C124 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   67/    C124 :                             ;ADC #0                                 ;2
(1)   67/    C124 :                             ;STA emu_ptr+1,X                ;4
(1)   67/    C124 :                             ;LDA (emu_ptr,X)                ;6
(1)   67/    C124 :                             ;STA emu_ptr2,X                 ;4
(1)   67/    C124 :                             ;INC emu_ptr,X                  ;6
(1)   67/    C124 :                             ;BCC .skip                              ;2
(1)   67/    C124 :                             ;       INC emu_ptr+1,X         ;6
(1)   67/    C124 :                             ;.skip:
(1)   67/    C124 :                             ;LDA (emu_ptr,X)                ;6
(1)   67/    C124 :                             ;STA emu_ptr2+1,X               ;4
(1)   67/    C124 :                             ;JMP (emu_ptr2,X)               ;6
(1)   67/    C124 :                             
(1)   67/    C124 :                             ;Method 2 - 46 cycles
(1)   67/    C124 :                             ;Jump table must be page aligned!!!
(1)   67/    C124 :                             ;LDA (emu_PC,X)                 ;6
(1)   67/    C124 :                             ;STZ emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 25 - 1/5/2022 12:19:0


(1)   67/    C124 :                             ;ASL                                    ;2
(1)   67/    C124 :                             ;ROL emu_ptr+1,X                ;6
(1)   67/    C124 :                             ;ASL                                    ;2
(1)   67/    C124 :                             ;ROL emu_ptr+1,X                ;6
(1)   67/    C124 :                             ;STA emu_ptr,X                  ;4                              
(1)   67/    C124 :                             ;LDA emu_ptr+1,X                ;4
(1)   67/    C124 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   67/    C124 :                             ;STA emu_ptr+1,X                ;4
(1)   67/    C124 :                             ;JMP (emu_ptr2,X)               ;6
(1)   67/    C124 :                             
(1)   67/    C124 :                             ;Method 3 - 30 cycles
(1)   67/    C124 :                             ;TXA                                                    ;2
(1)   67/    C124 :                             ;TAY                                                    ;2
(1)   67/    C124 :                             ;LDA (emu_PC,X)                                 ;6
(1)   67/    C124 :                             ;ASL                                                    ;2
(1)   67/    C124 :                             ;BCS upper                                              ;2
(1)   67/    C124 :                             ;lower:
(1)   67/    C124 :                             ;       ASL                                                     ;2
(1)   67/    C124 :                             ;       TAX                                                     ;2
(1)   67/    C124 :                             ;       BCS upper_lower                         ;2
(1)   67/    C124 :                             ;       lower_lower:
(1)   67/    C124 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   67/    C124 :                             ;       upper_lower:
(1)   67/    C124 :                             ;               JMP (JUMP_TABLE2,X)
(1)   67/    C124 :                             ;upper:
(1)   67/    C124 :                             ;       ASL
(1)   67/    C124 :                             ;       TAX
(1)   67/    C124 :                             ;       BCS upper_upper
(1)   67/    C124 :                             ;       lower_upper:
(1)   67/    C124 :                             ;               JMP (JUMP_TABLE3,X)
(1)   67/    C124 :                             ;       upper_upper:
(1)   67/    C124 :                             ;               JMP (JUMP_TABLE4,X)
(1)   67/    C124 :                             ;After jump:
(1)   67/    C124 :                             ;TYA                                                    ;2
(1)   67/    C124 :                             ;TAX                                                    ;2
(1)   67/    C124 :                             
(1)   67/    C124 :                             ;Method 4 - 28 cycles
(1)   67/    C124 :                             ;LDA (emu_PC,X)                 ;6
(1)   67/    C124 :                             ;TAY                                    ;2
(1)   67/    C124 :                             ;LDA JUMP_TABLE,Y               ;4
(1)   67/    C124 :                             ;PHA                                    ;3
(1)   67/    C124 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)   67/    C124 :                             ;PHA                                    ;3
(1)   67/    C124 :                             ;RTS                                    ;6
(1)   67/    C124 :                             
(1)   67/    C124 :                             ;Method 5 - 30 cycles
(1)   67/    C124 : A1 02                       LDA (emu_PC,X)                  ;6
(1)   67/    C126 : A8                          TAY                                             ;2
(1)   67/    C127 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)   67/    C12A : 95 0A                       STA emu_ptr,X                   ;4
(1)   67/    C12C : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)   67/    C12F : 95 0B                       STA emu_ptr+1,X                 ;4
(1)   67/    C131 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)   67/    C134 :                                                     
(1)   68/    C134 :                     
(1)   69/    C134 :                     	;0xD - ORA ABS
(1)   70/    C134 :                     	ORA_ABS:
(1)   71/    C134 : (MACRO)             		OP_MACRO 13, "ORA", "ABS", "ORA_ABS"
(1)   71/    C134 :                             ;TODO
(1)   72/    C134 : (MACRO)             		NEXT_MACRO
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 26 - 1/5/2022 12:19:0


(1)   72/    C134 :                                             
(1)   72/    C134 :  (MACRO-2)                  halt
(1)   72/    C134 : 00                          BRK
(1)   72/    C135 : 00                          BRK
(1)   72/    C136 :                             
(1)   72/    C136 :                             ;Method 1 - 60 cycles
(1)   72/    C136 :                             ;Jump table must be page aligned!!!
(1)   72/    C136 :                             ;LDA (emu_PC,X)                 ;6
(1)   72/    C136 :                             ;ASL                                    ;2
(1)   72/    C136 :                             ;STA emu_ptr,X                  ;4
(1)   72/    C136 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   72/    C136 :                             ;ADC #0                                 ;2
(1)   72/    C136 :                             ;STA emu_ptr+1,X                ;4
(1)   72/    C136 :                             ;LDA (emu_ptr,X)                ;6
(1)   72/    C136 :                             ;STA emu_ptr2,X                 ;4
(1)   72/    C136 :                             ;INC emu_ptr,X                  ;6
(1)   72/    C136 :                             ;BCC .skip                              ;2
(1)   72/    C136 :                             ;       INC emu_ptr+1,X         ;6
(1)   72/    C136 :                             ;.skip:
(1)   72/    C136 :                             ;LDA (emu_ptr,X)                ;6
(1)   72/    C136 :                             ;STA emu_ptr2+1,X               ;4
(1)   72/    C136 :                             ;JMP (emu_ptr2,X)               ;6
(1)   72/    C136 :                             
(1)   72/    C136 :                             ;Method 2 - 46 cycles
(1)   72/    C136 :                             ;Jump table must be page aligned!!!
(1)   72/    C136 :                             ;LDA (emu_PC,X)                 ;6
(1)   72/    C136 :                             ;STZ emu_ptr+1,X                ;4
(1)   72/    C136 :                             ;ASL                                    ;2
(1)   72/    C136 :                             ;ROL emu_ptr+1,X                ;6
(1)   72/    C136 :                             ;ASL                                    ;2
(1)   72/    C136 :                             ;ROL emu_ptr+1,X                ;6
(1)   72/    C136 :                             ;STA emu_ptr,X                  ;4                              
(1)   72/    C136 :                             ;LDA emu_ptr+1,X                ;4
(1)   72/    C136 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   72/    C136 :                             ;STA emu_ptr+1,X                ;4
(1)   72/    C136 :                             ;JMP (emu_ptr2,X)               ;6
(1)   72/    C136 :                             
(1)   72/    C136 :                             ;Method 3 - 30 cycles
(1)   72/    C136 :                             ;TXA                                                    ;2
(1)   72/    C136 :                             ;TAY                                                    ;2
(1)   72/    C136 :                             ;LDA (emu_PC,X)                                 ;6
(1)   72/    C136 :                             ;ASL                                                    ;2
(1)   72/    C136 :                             ;BCS upper                                              ;2
(1)   72/    C136 :                             ;lower:
(1)   72/    C136 :                             ;       ASL                                                     ;2
(1)   72/    C136 :                             ;       TAX                                                     ;2
(1)   72/    C136 :                             ;       BCS upper_lower                         ;2
(1)   72/    C136 :                             ;       lower_lower:
(1)   72/    C136 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   72/    C136 :                             ;       upper_lower:
(1)   72/    C136 :                             ;               JMP (JUMP_TABLE2,X)
(1)   72/    C136 :                             ;upper:
(1)   72/    C136 :                             ;       ASL
(1)   72/    C136 :                             ;       TAX
(1)   72/    C136 :                             ;       BCS upper_upper
(1)   72/    C136 :                             ;       lower_upper:
(1)   72/    C136 :                             ;               JMP (JUMP_TABLE3,X)
(1)   72/    C136 :                             ;       upper_upper:
(1)   72/    C136 :                             ;               JMP (JUMP_TABLE4,X)
(1)   72/    C136 :                             ;After jump:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 27 - 1/5/2022 12:19:0


(1)   72/    C136 :                             ;TYA                                                    ;2
(1)   72/    C136 :                             ;TAX                                                    ;2
(1)   72/    C136 :                             
(1)   72/    C136 :                             ;Method 4 - 28 cycles
(1)   72/    C136 :                             ;LDA (emu_PC,X)                 ;6
(1)   72/    C136 :                             ;TAY                                    ;2
(1)   72/    C136 :                             ;LDA JUMP_TABLE,Y               ;4
(1)   72/    C136 :                             ;PHA                                    ;3
(1)   72/    C136 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)   72/    C136 :                             ;PHA                                    ;3
(1)   72/    C136 :                             ;RTS                                    ;6
(1)   72/    C136 :                             
(1)   72/    C136 :                             ;Method 5 - 30 cycles
(1)   72/    C136 : A1 02                       LDA (emu_PC,X)                  ;6
(1)   72/    C138 : A8                          TAY                                             ;2
(1)   72/    C139 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)   72/    C13C : 95 0A                       STA emu_ptr,X                   ;4
(1)   72/    C13E : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)   72/    C141 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)   72/    C143 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)   72/    C146 :                                                     
(1)   73/    C146 :                     
(1)   74/    C146 :                     	;0xE - ASL ABS
(1)   75/    C146 :                     	ASL_ABS:
(1)   76/    C146 : (MACRO)             		OP_MACRO 14, "ASL", "ABS", "ASL_ABS"
(1)   76/    C146 :                             ;TODO
(1)   77/    C146 : (MACRO)             		NEXT_MACRO
(1)   77/    C146 :                                             
(1)   77/    C146 :  (MACRO-2)                  halt
(1)   77/    C146 : 00                          BRK
(1)   77/    C147 : 00                          BRK
(1)   77/    C148 :                             
(1)   77/    C148 :                             ;Method 1 - 60 cycles
(1)   77/    C148 :                             ;Jump table must be page aligned!!!
(1)   77/    C148 :                             ;LDA (emu_PC,X)                 ;6
(1)   77/    C148 :                             ;ASL                                    ;2
(1)   77/    C148 :                             ;STA emu_ptr,X                  ;4
(1)   77/    C148 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   77/    C148 :                             ;ADC #0                                 ;2
(1)   77/    C148 :                             ;STA emu_ptr+1,X                ;4
(1)   77/    C148 :                             ;LDA (emu_ptr,X)                ;6
(1)   77/    C148 :                             ;STA emu_ptr2,X                 ;4
(1)   77/    C148 :                             ;INC emu_ptr,X                  ;6
(1)   77/    C148 :                             ;BCC .skip                              ;2
(1)   77/    C148 :                             ;       INC emu_ptr+1,X         ;6
(1)   77/    C148 :                             ;.skip:
(1)   77/    C148 :                             ;LDA (emu_ptr,X)                ;6
(1)   77/    C148 :                             ;STA emu_ptr2+1,X               ;4
(1)   77/    C148 :                             ;JMP (emu_ptr2,X)               ;6
(1)   77/    C148 :                             
(1)   77/    C148 :                             ;Method 2 - 46 cycles
(1)   77/    C148 :                             ;Jump table must be page aligned!!!
(1)   77/    C148 :                             ;LDA (emu_PC,X)                 ;6
(1)   77/    C148 :                             ;STZ emu_ptr+1,X                ;4
(1)   77/    C148 :                             ;ASL                                    ;2
(1)   77/    C148 :                             ;ROL emu_ptr+1,X                ;6
(1)   77/    C148 :                             ;ASL                                    ;2
(1)   77/    C148 :                             ;ROL emu_ptr+1,X                ;6
(1)   77/    C148 :                             ;STA emu_ptr,X                  ;4                              
(1)   77/    C148 :                             ;LDA emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 28 - 1/5/2022 12:19:0


(1)   77/    C148 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   77/    C148 :                             ;STA emu_ptr+1,X                ;4
(1)   77/    C148 :                             ;JMP (emu_ptr2,X)               ;6
(1)   77/    C148 :                             
(1)   77/    C148 :                             ;Method 3 - 30 cycles
(1)   77/    C148 :                             ;TXA                                                    ;2
(1)   77/    C148 :                             ;TAY                                                    ;2
(1)   77/    C148 :                             ;LDA (emu_PC,X)                                 ;6
(1)   77/    C148 :                             ;ASL                                                    ;2
(1)   77/    C148 :                             ;BCS upper                                              ;2
(1)   77/    C148 :                             ;lower:
(1)   77/    C148 :                             ;       ASL                                                     ;2
(1)   77/    C148 :                             ;       TAX                                                     ;2
(1)   77/    C148 :                             ;       BCS upper_lower                         ;2
(1)   77/    C148 :                             ;       lower_lower:
(1)   77/    C148 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   77/    C148 :                             ;       upper_lower:
(1)   77/    C148 :                             ;               JMP (JUMP_TABLE2,X)
(1)   77/    C148 :                             ;upper:
(1)   77/    C148 :                             ;       ASL
(1)   77/    C148 :                             ;       TAX
(1)   77/    C148 :                             ;       BCS upper_upper
(1)   77/    C148 :                             ;       lower_upper:
(1)   77/    C148 :                             ;               JMP (JUMP_TABLE3,X)
(1)   77/    C148 :                             ;       upper_upper:
(1)   77/    C148 :                             ;               JMP (JUMP_TABLE4,X)
(1)   77/    C148 :                             ;After jump:
(1)   77/    C148 :                             ;TYA                                                    ;2
(1)   77/    C148 :                             ;TAX                                                    ;2
(1)   77/    C148 :                             
(1)   77/    C148 :                             ;Method 4 - 28 cycles
(1)   77/    C148 :                             ;LDA (emu_PC,X)                 ;6
(1)   77/    C148 :                             ;TAY                                    ;2
(1)   77/    C148 :                             ;LDA JUMP_TABLE,Y               ;4
(1)   77/    C148 :                             ;PHA                                    ;3
(1)   77/    C148 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)   77/    C148 :                             ;PHA                                    ;3
(1)   77/    C148 :                             ;RTS                                    ;6
(1)   77/    C148 :                             
(1)   77/    C148 :                             ;Method 5 - 30 cycles
(1)   77/    C148 : A1 02                       LDA (emu_PC,X)                  ;6
(1)   77/    C14A : A8                          TAY                                             ;2
(1)   77/    C14B : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)   77/    C14E : 95 0A                       STA emu_ptr,X                   ;4
(1)   77/    C150 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)   77/    C153 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)   77/    C155 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)   77/    C158 :                                                     
(1)   78/    C158 :                     
(1)   79/    C158 :                     	;0xF - NOP
(1)   80/    C158 :                     	NOP_0xF:
(1)   81/    C158 : (MACRO)             		OP_MACRO 15, "NOP", "IMP", "NOP_0xF"
(1)   81/    C158 :                             ;TODO
(1)   82/    C158 : (MACRO)             		NEXT_MACRO
(1)   82/    C158 :                                             
(1)   82/    C158 :  (MACRO-2)                  halt
(1)   82/    C158 : 00                          BRK
(1)   82/    C159 : 00                          BRK
(1)   82/    C15A :                             
(1)   82/    C15A :                             ;Method 1 - 60 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 29 - 1/5/2022 12:19:0


(1)   82/    C15A :                             ;Jump table must be page aligned!!!
(1)   82/    C15A :                             ;LDA (emu_PC,X)                 ;6
(1)   82/    C15A :                             ;ASL                                    ;2
(1)   82/    C15A :                             ;STA emu_ptr,X                  ;4
(1)   82/    C15A :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   82/    C15A :                             ;ADC #0                                 ;2
(1)   82/    C15A :                             ;STA emu_ptr+1,X                ;4
(1)   82/    C15A :                             ;LDA (emu_ptr,X)                ;6
(1)   82/    C15A :                             ;STA emu_ptr2,X                 ;4
(1)   82/    C15A :                             ;INC emu_ptr,X                  ;6
(1)   82/    C15A :                             ;BCC .skip                              ;2
(1)   82/    C15A :                             ;       INC emu_ptr+1,X         ;6
(1)   82/    C15A :                             ;.skip:
(1)   82/    C15A :                             ;LDA (emu_ptr,X)                ;6
(1)   82/    C15A :                             ;STA emu_ptr2+1,X               ;4
(1)   82/    C15A :                             ;JMP (emu_ptr2,X)               ;6
(1)   82/    C15A :                             
(1)   82/    C15A :                             ;Method 2 - 46 cycles
(1)   82/    C15A :                             ;Jump table must be page aligned!!!
(1)   82/    C15A :                             ;LDA (emu_PC,X)                 ;6
(1)   82/    C15A :                             ;STZ emu_ptr+1,X                ;4
(1)   82/    C15A :                             ;ASL                                    ;2
(1)   82/    C15A :                             ;ROL emu_ptr+1,X                ;6
(1)   82/    C15A :                             ;ASL                                    ;2
(1)   82/    C15A :                             ;ROL emu_ptr+1,X                ;6
(1)   82/    C15A :                             ;STA emu_ptr,X                  ;4                              
(1)   82/    C15A :                             ;LDA emu_ptr+1,X                ;4
(1)   82/    C15A :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   82/    C15A :                             ;STA emu_ptr+1,X                ;4
(1)   82/    C15A :                             ;JMP (emu_ptr2,X)               ;6
(1)   82/    C15A :                             
(1)   82/    C15A :                             ;Method 3 - 30 cycles
(1)   82/    C15A :                             ;TXA                                                    ;2
(1)   82/    C15A :                             ;TAY                                                    ;2
(1)   82/    C15A :                             ;LDA (emu_PC,X)                                 ;6
(1)   82/    C15A :                             ;ASL                                                    ;2
(1)   82/    C15A :                             ;BCS upper                                              ;2
(1)   82/    C15A :                             ;lower:
(1)   82/    C15A :                             ;       ASL                                                     ;2
(1)   82/    C15A :                             ;       TAX                                                     ;2
(1)   82/    C15A :                             ;       BCS upper_lower                         ;2
(1)   82/    C15A :                             ;       lower_lower:
(1)   82/    C15A :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   82/    C15A :                             ;       upper_lower:
(1)   82/    C15A :                             ;               JMP (JUMP_TABLE2,X)
(1)   82/    C15A :                             ;upper:
(1)   82/    C15A :                             ;       ASL
(1)   82/    C15A :                             ;       TAX
(1)   82/    C15A :                             ;       BCS upper_upper
(1)   82/    C15A :                             ;       lower_upper:
(1)   82/    C15A :                             ;               JMP (JUMP_TABLE3,X)
(1)   82/    C15A :                             ;       upper_upper:
(1)   82/    C15A :                             ;               JMP (JUMP_TABLE4,X)
(1)   82/    C15A :                             ;After jump:
(1)   82/    C15A :                             ;TYA                                                    ;2
(1)   82/    C15A :                             ;TAX                                                    ;2
(1)   82/    C15A :                             
(1)   82/    C15A :                             ;Method 4 - 28 cycles
(1)   82/    C15A :                             ;LDA (emu_PC,X)                 ;6
(1)   82/    C15A :                             ;TAY                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 30 - 1/5/2022 12:19:0


(1)   82/    C15A :                             ;LDA JUMP_TABLE,Y               ;4
(1)   82/    C15A :                             ;PHA                                    ;3
(1)   82/    C15A :                             ;LDA JUMP_TABLE2,Y              ;4
(1)   82/    C15A :                             ;PHA                                    ;3
(1)   82/    C15A :                             ;RTS                                    ;6
(1)   82/    C15A :                             
(1)   82/    C15A :                             ;Method 5 - 30 cycles
(1)   82/    C15A : A1 02                       LDA (emu_PC,X)                  ;6
(1)   82/    C15C : A8                          TAY                                             ;2
(1)   82/    C15D : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)   82/    C160 : 95 0A                       STA emu_ptr,X                   ;4
(1)   82/    C162 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)   82/    C165 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)   82/    C167 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)   82/    C16A :                                                     
(1)   83/    C16A :                     
(1)   84/    C16A :                     	;0x10 - BPL REL
(1)   85/    C16A :                     	BPL_REL:
(1)   86/    C16A : (MACRO)             		OP_MACRO 16, "BPL", "REL", "BPL_REL"
(1)   86/    C16A :                             ;TODO
(1)   87/    C16A : (MACRO)             		NEXT_MACRO
(1)   87/    C16A :                                             
(1)   87/    C16A :  (MACRO-2)                  halt
(1)   87/    C16A : 00                          BRK
(1)   87/    C16B : 00                          BRK
(1)   87/    C16C :                             
(1)   87/    C16C :                             ;Method 1 - 60 cycles
(1)   87/    C16C :                             ;Jump table must be page aligned!!!
(1)   87/    C16C :                             ;LDA (emu_PC,X)                 ;6
(1)   87/    C16C :                             ;ASL                                    ;2
(1)   87/    C16C :                             ;STA emu_ptr,X                  ;4
(1)   87/    C16C :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   87/    C16C :                             ;ADC #0                                 ;2
(1)   87/    C16C :                             ;STA emu_ptr+1,X                ;4
(1)   87/    C16C :                             ;LDA (emu_ptr,X)                ;6
(1)   87/    C16C :                             ;STA emu_ptr2,X                 ;4
(1)   87/    C16C :                             ;INC emu_ptr,X                  ;6
(1)   87/    C16C :                             ;BCC .skip                              ;2
(1)   87/    C16C :                             ;       INC emu_ptr+1,X         ;6
(1)   87/    C16C :                             ;.skip:
(1)   87/    C16C :                             ;LDA (emu_ptr,X)                ;6
(1)   87/    C16C :                             ;STA emu_ptr2+1,X               ;4
(1)   87/    C16C :                             ;JMP (emu_ptr2,X)               ;6
(1)   87/    C16C :                             
(1)   87/    C16C :                             ;Method 2 - 46 cycles
(1)   87/    C16C :                             ;Jump table must be page aligned!!!
(1)   87/    C16C :                             ;LDA (emu_PC,X)                 ;6
(1)   87/    C16C :                             ;STZ emu_ptr+1,X                ;4
(1)   87/    C16C :                             ;ASL                                    ;2
(1)   87/    C16C :                             ;ROL emu_ptr+1,X                ;6
(1)   87/    C16C :                             ;ASL                                    ;2
(1)   87/    C16C :                             ;ROL emu_ptr+1,X                ;6
(1)   87/    C16C :                             ;STA emu_ptr,X                  ;4                              
(1)   87/    C16C :                             ;LDA emu_ptr+1,X                ;4
(1)   87/    C16C :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   87/    C16C :                             ;STA emu_ptr+1,X                ;4
(1)   87/    C16C :                             ;JMP (emu_ptr2,X)               ;6
(1)   87/    C16C :                             
(1)   87/    C16C :                             ;Method 3 - 30 cycles
(1)   87/    C16C :                             ;TXA                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 31 - 1/5/2022 12:19:0


(1)   87/    C16C :                             ;TAY                                                    ;2
(1)   87/    C16C :                             ;LDA (emu_PC,X)                                 ;6
(1)   87/    C16C :                             ;ASL                                                    ;2
(1)   87/    C16C :                             ;BCS upper                                              ;2
(1)   87/    C16C :                             ;lower:
(1)   87/    C16C :                             ;       ASL                                                     ;2
(1)   87/    C16C :                             ;       TAX                                                     ;2
(1)   87/    C16C :                             ;       BCS upper_lower                         ;2
(1)   87/    C16C :                             ;       lower_lower:
(1)   87/    C16C :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   87/    C16C :                             ;       upper_lower:
(1)   87/    C16C :                             ;               JMP (JUMP_TABLE2,X)
(1)   87/    C16C :                             ;upper:
(1)   87/    C16C :                             ;       ASL
(1)   87/    C16C :                             ;       TAX
(1)   87/    C16C :                             ;       BCS upper_upper
(1)   87/    C16C :                             ;       lower_upper:
(1)   87/    C16C :                             ;               JMP (JUMP_TABLE3,X)
(1)   87/    C16C :                             ;       upper_upper:
(1)   87/    C16C :                             ;               JMP (JUMP_TABLE4,X)
(1)   87/    C16C :                             ;After jump:
(1)   87/    C16C :                             ;TYA                                                    ;2
(1)   87/    C16C :                             ;TAX                                                    ;2
(1)   87/    C16C :                             
(1)   87/    C16C :                             ;Method 4 - 28 cycles
(1)   87/    C16C :                             ;LDA (emu_PC,X)                 ;6
(1)   87/    C16C :                             ;TAY                                    ;2
(1)   87/    C16C :                             ;LDA JUMP_TABLE,Y               ;4
(1)   87/    C16C :                             ;PHA                                    ;3
(1)   87/    C16C :                             ;LDA JUMP_TABLE2,Y              ;4
(1)   87/    C16C :                             ;PHA                                    ;3
(1)   87/    C16C :                             ;RTS                                    ;6
(1)   87/    C16C :                             
(1)   87/    C16C :                             ;Method 5 - 30 cycles
(1)   87/    C16C : A1 02                       LDA (emu_PC,X)                  ;6
(1)   87/    C16E : A8                          TAY                                             ;2
(1)   87/    C16F : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)   87/    C172 : 95 0A                       STA emu_ptr,X                   ;4
(1)   87/    C174 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)   87/    C177 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)   87/    C179 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)   87/    C17C :                                                     
(1)   88/    C17C :                     
(1)   89/    C17C :                     	;0x11 - ORA IY
(1)   90/    C17C :                     	ORA_IY:
(1)   91/    C17C : (MACRO)             		OP_MACRO 17, "ORA", "IY", "ORA_IY"
(1)   91/    C17C :                             ;TODO
(1)   92/    C17C : (MACRO)             		NEXT_MACRO
(1)   92/    C17C :                                             
(1)   92/    C17C :  (MACRO-2)                  halt
(1)   92/    C17C : 00                          BRK
(1)   92/    C17D : 00                          BRK
(1)   92/    C17E :                             
(1)   92/    C17E :                             ;Method 1 - 60 cycles
(1)   92/    C17E :                             ;Jump table must be page aligned!!!
(1)   92/    C17E :                             ;LDA (emu_PC,X)                 ;6
(1)   92/    C17E :                             ;ASL                                    ;2
(1)   92/    C17E :                             ;STA emu_ptr,X                  ;4
(1)   92/    C17E :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   92/    C17E :                             ;ADC #0                                 ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 32 - 1/5/2022 12:19:0


(1)   92/    C17E :                             ;STA emu_ptr+1,X                ;4
(1)   92/    C17E :                             ;LDA (emu_ptr,X)                ;6
(1)   92/    C17E :                             ;STA emu_ptr2,X                 ;4
(1)   92/    C17E :                             ;INC emu_ptr,X                  ;6
(1)   92/    C17E :                             ;BCC .skip                              ;2
(1)   92/    C17E :                             ;       INC emu_ptr+1,X         ;6
(1)   92/    C17E :                             ;.skip:
(1)   92/    C17E :                             ;LDA (emu_ptr,X)                ;6
(1)   92/    C17E :                             ;STA emu_ptr2+1,X               ;4
(1)   92/    C17E :                             ;JMP (emu_ptr2,X)               ;6
(1)   92/    C17E :                             
(1)   92/    C17E :                             ;Method 2 - 46 cycles
(1)   92/    C17E :                             ;Jump table must be page aligned!!!
(1)   92/    C17E :                             ;LDA (emu_PC,X)                 ;6
(1)   92/    C17E :                             ;STZ emu_ptr+1,X                ;4
(1)   92/    C17E :                             ;ASL                                    ;2
(1)   92/    C17E :                             ;ROL emu_ptr+1,X                ;6
(1)   92/    C17E :                             ;ASL                                    ;2
(1)   92/    C17E :                             ;ROL emu_ptr+1,X                ;6
(1)   92/    C17E :                             ;STA emu_ptr,X                  ;4                              
(1)   92/    C17E :                             ;LDA emu_ptr+1,X                ;4
(1)   92/    C17E :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   92/    C17E :                             ;STA emu_ptr+1,X                ;4
(1)   92/    C17E :                             ;JMP (emu_ptr2,X)               ;6
(1)   92/    C17E :                             
(1)   92/    C17E :                             ;Method 3 - 30 cycles
(1)   92/    C17E :                             ;TXA                                                    ;2
(1)   92/    C17E :                             ;TAY                                                    ;2
(1)   92/    C17E :                             ;LDA (emu_PC,X)                                 ;6
(1)   92/    C17E :                             ;ASL                                                    ;2
(1)   92/    C17E :                             ;BCS upper                                              ;2
(1)   92/    C17E :                             ;lower:
(1)   92/    C17E :                             ;       ASL                                                     ;2
(1)   92/    C17E :                             ;       TAX                                                     ;2
(1)   92/    C17E :                             ;       BCS upper_lower                         ;2
(1)   92/    C17E :                             ;       lower_lower:
(1)   92/    C17E :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   92/    C17E :                             ;       upper_lower:
(1)   92/    C17E :                             ;               JMP (JUMP_TABLE2,X)
(1)   92/    C17E :                             ;upper:
(1)   92/    C17E :                             ;       ASL
(1)   92/    C17E :                             ;       TAX
(1)   92/    C17E :                             ;       BCS upper_upper
(1)   92/    C17E :                             ;       lower_upper:
(1)   92/    C17E :                             ;               JMP (JUMP_TABLE3,X)
(1)   92/    C17E :                             ;       upper_upper:
(1)   92/    C17E :                             ;               JMP (JUMP_TABLE4,X)
(1)   92/    C17E :                             ;After jump:
(1)   92/    C17E :                             ;TYA                                                    ;2
(1)   92/    C17E :                             ;TAX                                                    ;2
(1)   92/    C17E :                             
(1)   92/    C17E :                             ;Method 4 - 28 cycles
(1)   92/    C17E :                             ;LDA (emu_PC,X)                 ;6
(1)   92/    C17E :                             ;TAY                                    ;2
(1)   92/    C17E :                             ;LDA JUMP_TABLE,Y               ;4
(1)   92/    C17E :                             ;PHA                                    ;3
(1)   92/    C17E :                             ;LDA JUMP_TABLE2,Y              ;4
(1)   92/    C17E :                             ;PHA                                    ;3
(1)   92/    C17E :                             ;RTS                                    ;6
(1)   92/    C17E :                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 33 - 1/5/2022 12:19:0


(1)   92/    C17E :                             ;Method 5 - 30 cycles
(1)   92/    C17E : A1 02                       LDA (emu_PC,X)                  ;6
(1)   92/    C180 : A8                          TAY                                             ;2
(1)   92/    C181 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)   92/    C184 : 95 0A                       STA emu_ptr,X                   ;4
(1)   92/    C186 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)   92/    C189 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)   92/    C18B : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)   92/    C18E :                                                     
(1)   93/    C18E :                     
(1)   94/    C18E :                     	;0x12 - NOP
(1)   95/    C18E :                     	NOP_0x12:
(1)   96/    C18E : (MACRO)             		OP_MACRO 18, "NOP", "IMP", "NOP_0x12"
(1)   96/    C18E :                             ;TODO
(1)   97/    C18E : (MACRO)             		NEXT_MACRO
(1)   97/    C18E :                                             
(1)   97/    C18E :  (MACRO-2)                  halt
(1)   97/    C18E : 00                          BRK
(1)   97/    C18F : 00                          BRK
(1)   97/    C190 :                             
(1)   97/    C190 :                             ;Method 1 - 60 cycles
(1)   97/    C190 :                             ;Jump table must be page aligned!!!
(1)   97/    C190 :                             ;LDA (emu_PC,X)                 ;6
(1)   97/    C190 :                             ;ASL                                    ;2
(1)   97/    C190 :                             ;STA emu_ptr,X                  ;4
(1)   97/    C190 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   97/    C190 :                             ;ADC #0                                 ;2
(1)   97/    C190 :                             ;STA emu_ptr+1,X                ;4
(1)   97/    C190 :                             ;LDA (emu_ptr,X)                ;6
(1)   97/    C190 :                             ;STA emu_ptr2,X                 ;4
(1)   97/    C190 :                             ;INC emu_ptr,X                  ;6
(1)   97/    C190 :                             ;BCC .skip                              ;2
(1)   97/    C190 :                             ;       INC emu_ptr+1,X         ;6
(1)   97/    C190 :                             ;.skip:
(1)   97/    C190 :                             ;LDA (emu_ptr,X)                ;6
(1)   97/    C190 :                             ;STA emu_ptr2+1,X               ;4
(1)   97/    C190 :                             ;JMP (emu_ptr2,X)               ;6
(1)   97/    C190 :                             
(1)   97/    C190 :                             ;Method 2 - 46 cycles
(1)   97/    C190 :                             ;Jump table must be page aligned!!!
(1)   97/    C190 :                             ;LDA (emu_PC,X)                 ;6
(1)   97/    C190 :                             ;STZ emu_ptr+1,X                ;4
(1)   97/    C190 :                             ;ASL                                    ;2
(1)   97/    C190 :                             ;ROL emu_ptr+1,X                ;6
(1)   97/    C190 :                             ;ASL                                    ;2
(1)   97/    C190 :                             ;ROL emu_ptr+1,X                ;6
(1)   97/    C190 :                             ;STA emu_ptr,X                  ;4                              
(1)   97/    C190 :                             ;LDA emu_ptr+1,X                ;4
(1)   97/    C190 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   97/    C190 :                             ;STA emu_ptr+1,X                ;4
(1)   97/    C190 :                             ;JMP (emu_ptr2,X)               ;6
(1)   97/    C190 :                             
(1)   97/    C190 :                             ;Method 3 - 30 cycles
(1)   97/    C190 :                             ;TXA                                                    ;2
(1)   97/    C190 :                             ;TAY                                                    ;2
(1)   97/    C190 :                             ;LDA (emu_PC,X)                                 ;6
(1)   97/    C190 :                             ;ASL                                                    ;2
(1)   97/    C190 :                             ;BCS upper                                              ;2
(1)   97/    C190 :                             ;lower:
(1)   97/    C190 :                             ;       ASL                                                     ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 34 - 1/5/2022 12:19:0


(1)   97/    C190 :                             ;       TAX                                                     ;2
(1)   97/    C190 :                             ;       BCS upper_lower                         ;2
(1)   97/    C190 :                             ;       lower_lower:
(1)   97/    C190 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   97/    C190 :                             ;       upper_lower:
(1)   97/    C190 :                             ;               JMP (JUMP_TABLE2,X)
(1)   97/    C190 :                             ;upper:
(1)   97/    C190 :                             ;       ASL
(1)   97/    C190 :                             ;       TAX
(1)   97/    C190 :                             ;       BCS upper_upper
(1)   97/    C190 :                             ;       lower_upper:
(1)   97/    C190 :                             ;               JMP (JUMP_TABLE3,X)
(1)   97/    C190 :                             ;       upper_upper:
(1)   97/    C190 :                             ;               JMP (JUMP_TABLE4,X)
(1)   97/    C190 :                             ;After jump:
(1)   97/    C190 :                             ;TYA                                                    ;2
(1)   97/    C190 :                             ;TAX                                                    ;2
(1)   97/    C190 :                             
(1)   97/    C190 :                             ;Method 4 - 28 cycles
(1)   97/    C190 :                             ;LDA (emu_PC,X)                 ;6
(1)   97/    C190 :                             ;TAY                                    ;2
(1)   97/    C190 :                             ;LDA JUMP_TABLE,Y               ;4
(1)   97/    C190 :                             ;PHA                                    ;3
(1)   97/    C190 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)   97/    C190 :                             ;PHA                                    ;3
(1)   97/    C190 :                             ;RTS                                    ;6
(1)   97/    C190 :                             
(1)   97/    C190 :                             ;Method 5 - 30 cycles
(1)   97/    C190 : A1 02                       LDA (emu_PC,X)                  ;6
(1)   97/    C192 : A8                          TAY                                             ;2
(1)   97/    C193 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)   97/    C196 : 95 0A                       STA emu_ptr,X                   ;4
(1)   97/    C198 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)   97/    C19B : 95 0B                       STA emu_ptr+1,X                 ;4
(1)   97/    C19D : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)   97/    C1A0 :                                                     
(1)   98/    C1A0 :                     
(1)   99/    C1A0 :                     	;0x13 - NOP
(1)  100/    C1A0 :                     	NOP_0x13:
(1)  101/    C1A0 : (MACRO)             		OP_MACRO 19, "NOP", "IMP", "NOP_0x13"
(1)  101/    C1A0 :                             ;TODO
(1)  102/    C1A0 : (MACRO)             		NEXT_MACRO
(1)  102/    C1A0 :                                             
(1)  102/    C1A0 :  (MACRO-2)                  halt
(1)  102/    C1A0 : 00                          BRK
(1)  102/    C1A1 : 00                          BRK
(1)  102/    C1A2 :                             
(1)  102/    C1A2 :                             ;Method 1 - 60 cycles
(1)  102/    C1A2 :                             ;Jump table must be page aligned!!!
(1)  102/    C1A2 :                             ;LDA (emu_PC,X)                 ;6
(1)  102/    C1A2 :                             ;ASL                                    ;2
(1)  102/    C1A2 :                             ;STA emu_ptr,X                  ;4
(1)  102/    C1A2 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  102/    C1A2 :                             ;ADC #0                                 ;2
(1)  102/    C1A2 :                             ;STA emu_ptr+1,X                ;4
(1)  102/    C1A2 :                             ;LDA (emu_ptr,X)                ;6
(1)  102/    C1A2 :                             ;STA emu_ptr2,X                 ;4
(1)  102/    C1A2 :                             ;INC emu_ptr,X                  ;6
(1)  102/    C1A2 :                             ;BCC .skip                              ;2
(1)  102/    C1A2 :                             ;       INC emu_ptr+1,X         ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 35 - 1/5/2022 12:19:0


(1)  102/    C1A2 :                             ;.skip:
(1)  102/    C1A2 :                             ;LDA (emu_ptr,X)                ;6
(1)  102/    C1A2 :                             ;STA emu_ptr2+1,X               ;4
(1)  102/    C1A2 :                             ;JMP (emu_ptr2,X)               ;6
(1)  102/    C1A2 :                             
(1)  102/    C1A2 :                             ;Method 2 - 46 cycles
(1)  102/    C1A2 :                             ;Jump table must be page aligned!!!
(1)  102/    C1A2 :                             ;LDA (emu_PC,X)                 ;6
(1)  102/    C1A2 :                             ;STZ emu_ptr+1,X                ;4
(1)  102/    C1A2 :                             ;ASL                                    ;2
(1)  102/    C1A2 :                             ;ROL emu_ptr+1,X                ;6
(1)  102/    C1A2 :                             ;ASL                                    ;2
(1)  102/    C1A2 :                             ;ROL emu_ptr+1,X                ;6
(1)  102/    C1A2 :                             ;STA emu_ptr,X                  ;4                              
(1)  102/    C1A2 :                             ;LDA emu_ptr+1,X                ;4
(1)  102/    C1A2 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  102/    C1A2 :                             ;STA emu_ptr+1,X                ;4
(1)  102/    C1A2 :                             ;JMP (emu_ptr2,X)               ;6
(1)  102/    C1A2 :                             
(1)  102/    C1A2 :                             ;Method 3 - 30 cycles
(1)  102/    C1A2 :                             ;TXA                                                    ;2
(1)  102/    C1A2 :                             ;TAY                                                    ;2
(1)  102/    C1A2 :                             ;LDA (emu_PC,X)                                 ;6
(1)  102/    C1A2 :                             ;ASL                                                    ;2
(1)  102/    C1A2 :                             ;BCS upper                                              ;2
(1)  102/    C1A2 :                             ;lower:
(1)  102/    C1A2 :                             ;       ASL                                                     ;2
(1)  102/    C1A2 :                             ;       TAX                                                     ;2
(1)  102/    C1A2 :                             ;       BCS upper_lower                         ;2
(1)  102/    C1A2 :                             ;       lower_lower:
(1)  102/    C1A2 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  102/    C1A2 :                             ;       upper_lower:
(1)  102/    C1A2 :                             ;               JMP (JUMP_TABLE2,X)
(1)  102/    C1A2 :                             ;upper:
(1)  102/    C1A2 :                             ;       ASL
(1)  102/    C1A2 :                             ;       TAX
(1)  102/    C1A2 :                             ;       BCS upper_upper
(1)  102/    C1A2 :                             ;       lower_upper:
(1)  102/    C1A2 :                             ;               JMP (JUMP_TABLE3,X)
(1)  102/    C1A2 :                             ;       upper_upper:
(1)  102/    C1A2 :                             ;               JMP (JUMP_TABLE4,X)
(1)  102/    C1A2 :                             ;After jump:
(1)  102/    C1A2 :                             ;TYA                                                    ;2
(1)  102/    C1A2 :                             ;TAX                                                    ;2
(1)  102/    C1A2 :                             
(1)  102/    C1A2 :                             ;Method 4 - 28 cycles
(1)  102/    C1A2 :                             ;LDA (emu_PC,X)                 ;6
(1)  102/    C1A2 :                             ;TAY                                    ;2
(1)  102/    C1A2 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  102/    C1A2 :                             ;PHA                                    ;3
(1)  102/    C1A2 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  102/    C1A2 :                             ;PHA                                    ;3
(1)  102/    C1A2 :                             ;RTS                                    ;6
(1)  102/    C1A2 :                             
(1)  102/    C1A2 :                             ;Method 5 - 30 cycles
(1)  102/    C1A2 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  102/    C1A4 : A8                          TAY                                             ;2
(1)  102/    C1A5 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  102/    C1A8 : 95 0A                       STA emu_ptr,X                   ;4
(1)  102/    C1AA : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 36 - 1/5/2022 12:19:0


(1)  102/    C1AD : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  102/    C1AF : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  102/    C1B2 :                                                     
(1)  103/    C1B2 :                     
(1)  104/    C1B2 :                     	;0x14 - NOP
(1)  105/    C1B2 :                     	NOP_0x14:
(1)  106/    C1B2 : (MACRO)             		OP_MACRO 20, "NOP", "IMP", "NOP_0x14"
(1)  106/    C1B2 :                             ;TODO
(1)  107/    C1B2 : (MACRO)             		NEXT_MACRO
(1)  107/    C1B2 :                                             
(1)  107/    C1B2 :  (MACRO-2)                  halt
(1)  107/    C1B2 : 00                          BRK
(1)  107/    C1B3 : 00                          BRK
(1)  107/    C1B4 :                             
(1)  107/    C1B4 :                             ;Method 1 - 60 cycles
(1)  107/    C1B4 :                             ;Jump table must be page aligned!!!
(1)  107/    C1B4 :                             ;LDA (emu_PC,X)                 ;6
(1)  107/    C1B4 :                             ;ASL                                    ;2
(1)  107/    C1B4 :                             ;STA emu_ptr,X                  ;4
(1)  107/    C1B4 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  107/    C1B4 :                             ;ADC #0                                 ;2
(1)  107/    C1B4 :                             ;STA emu_ptr+1,X                ;4
(1)  107/    C1B4 :                             ;LDA (emu_ptr,X)                ;6
(1)  107/    C1B4 :                             ;STA emu_ptr2,X                 ;4
(1)  107/    C1B4 :                             ;INC emu_ptr,X                  ;6
(1)  107/    C1B4 :                             ;BCC .skip                              ;2
(1)  107/    C1B4 :                             ;       INC emu_ptr+1,X         ;6
(1)  107/    C1B4 :                             ;.skip:
(1)  107/    C1B4 :                             ;LDA (emu_ptr,X)                ;6
(1)  107/    C1B4 :                             ;STA emu_ptr2+1,X               ;4
(1)  107/    C1B4 :                             ;JMP (emu_ptr2,X)               ;6
(1)  107/    C1B4 :                             
(1)  107/    C1B4 :                             ;Method 2 - 46 cycles
(1)  107/    C1B4 :                             ;Jump table must be page aligned!!!
(1)  107/    C1B4 :                             ;LDA (emu_PC,X)                 ;6
(1)  107/    C1B4 :                             ;STZ emu_ptr+1,X                ;4
(1)  107/    C1B4 :                             ;ASL                                    ;2
(1)  107/    C1B4 :                             ;ROL emu_ptr+1,X                ;6
(1)  107/    C1B4 :                             ;ASL                                    ;2
(1)  107/    C1B4 :                             ;ROL emu_ptr+1,X                ;6
(1)  107/    C1B4 :                             ;STA emu_ptr,X                  ;4                              
(1)  107/    C1B4 :                             ;LDA emu_ptr+1,X                ;4
(1)  107/    C1B4 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  107/    C1B4 :                             ;STA emu_ptr+1,X                ;4
(1)  107/    C1B4 :                             ;JMP (emu_ptr2,X)               ;6
(1)  107/    C1B4 :                             
(1)  107/    C1B4 :                             ;Method 3 - 30 cycles
(1)  107/    C1B4 :                             ;TXA                                                    ;2
(1)  107/    C1B4 :                             ;TAY                                                    ;2
(1)  107/    C1B4 :                             ;LDA (emu_PC,X)                                 ;6
(1)  107/    C1B4 :                             ;ASL                                                    ;2
(1)  107/    C1B4 :                             ;BCS upper                                              ;2
(1)  107/    C1B4 :                             ;lower:
(1)  107/    C1B4 :                             ;       ASL                                                     ;2
(1)  107/    C1B4 :                             ;       TAX                                                     ;2
(1)  107/    C1B4 :                             ;       BCS upper_lower                         ;2
(1)  107/    C1B4 :                             ;       lower_lower:
(1)  107/    C1B4 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  107/    C1B4 :                             ;       upper_lower:
(1)  107/    C1B4 :                             ;               JMP (JUMP_TABLE2,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 37 - 1/5/2022 12:19:0


(1)  107/    C1B4 :                             ;upper:
(1)  107/    C1B4 :                             ;       ASL
(1)  107/    C1B4 :                             ;       TAX
(1)  107/    C1B4 :                             ;       BCS upper_upper
(1)  107/    C1B4 :                             ;       lower_upper:
(1)  107/    C1B4 :                             ;               JMP (JUMP_TABLE3,X)
(1)  107/    C1B4 :                             ;       upper_upper:
(1)  107/    C1B4 :                             ;               JMP (JUMP_TABLE4,X)
(1)  107/    C1B4 :                             ;After jump:
(1)  107/    C1B4 :                             ;TYA                                                    ;2
(1)  107/    C1B4 :                             ;TAX                                                    ;2
(1)  107/    C1B4 :                             
(1)  107/    C1B4 :                             ;Method 4 - 28 cycles
(1)  107/    C1B4 :                             ;LDA (emu_PC,X)                 ;6
(1)  107/    C1B4 :                             ;TAY                                    ;2
(1)  107/    C1B4 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  107/    C1B4 :                             ;PHA                                    ;3
(1)  107/    C1B4 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  107/    C1B4 :                             ;PHA                                    ;3
(1)  107/    C1B4 :                             ;RTS                                    ;6
(1)  107/    C1B4 :                             
(1)  107/    C1B4 :                             ;Method 5 - 30 cycles
(1)  107/    C1B4 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  107/    C1B6 : A8                          TAY                                             ;2
(1)  107/    C1B7 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  107/    C1BA : 95 0A                       STA emu_ptr,X                   ;4
(1)  107/    C1BC : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  107/    C1BF : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  107/    C1C1 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  107/    C1C4 :                                                     
(1)  108/    C1C4 :                     
(1)  109/    C1C4 :                     	;0x15 - ORA ZPX
(1)  110/    C1C4 :                     	ORA_ZPX:
(1)  111/    C1C4 : (MACRO)             		OP_MACRO 21, "ORA", "ZPX", "ORA_ZPX"
(1)  111/    C1C4 :                             ;TODO
(1)  112/    C1C4 : (MACRO)             		NEXT_MACRO
(1)  112/    C1C4 :                                             
(1)  112/    C1C4 :  (MACRO-2)                  halt
(1)  112/    C1C4 : 00                          BRK
(1)  112/    C1C5 : 00                          BRK
(1)  112/    C1C6 :                             
(1)  112/    C1C6 :                             ;Method 1 - 60 cycles
(1)  112/    C1C6 :                             ;Jump table must be page aligned!!!
(1)  112/    C1C6 :                             ;LDA (emu_PC,X)                 ;6
(1)  112/    C1C6 :                             ;ASL                                    ;2
(1)  112/    C1C6 :                             ;STA emu_ptr,X                  ;4
(1)  112/    C1C6 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  112/    C1C6 :                             ;ADC #0                                 ;2
(1)  112/    C1C6 :                             ;STA emu_ptr+1,X                ;4
(1)  112/    C1C6 :                             ;LDA (emu_ptr,X)                ;6
(1)  112/    C1C6 :                             ;STA emu_ptr2,X                 ;4
(1)  112/    C1C6 :                             ;INC emu_ptr,X                  ;6
(1)  112/    C1C6 :                             ;BCC .skip                              ;2
(1)  112/    C1C6 :                             ;       INC emu_ptr+1,X         ;6
(1)  112/    C1C6 :                             ;.skip:
(1)  112/    C1C6 :                             ;LDA (emu_ptr,X)                ;6
(1)  112/    C1C6 :                             ;STA emu_ptr2+1,X               ;4
(1)  112/    C1C6 :                             ;JMP (emu_ptr2,X)               ;6
(1)  112/    C1C6 :                             
(1)  112/    C1C6 :                             ;Method 2 - 46 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 38 - 1/5/2022 12:19:0


(1)  112/    C1C6 :                             ;Jump table must be page aligned!!!
(1)  112/    C1C6 :                             ;LDA (emu_PC,X)                 ;6
(1)  112/    C1C6 :                             ;STZ emu_ptr+1,X                ;4
(1)  112/    C1C6 :                             ;ASL                                    ;2
(1)  112/    C1C6 :                             ;ROL emu_ptr+1,X                ;6
(1)  112/    C1C6 :                             ;ASL                                    ;2
(1)  112/    C1C6 :                             ;ROL emu_ptr+1,X                ;6
(1)  112/    C1C6 :                             ;STA emu_ptr,X                  ;4                              
(1)  112/    C1C6 :                             ;LDA emu_ptr+1,X                ;4
(1)  112/    C1C6 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  112/    C1C6 :                             ;STA emu_ptr+1,X                ;4
(1)  112/    C1C6 :                             ;JMP (emu_ptr2,X)               ;6
(1)  112/    C1C6 :                             
(1)  112/    C1C6 :                             ;Method 3 - 30 cycles
(1)  112/    C1C6 :                             ;TXA                                                    ;2
(1)  112/    C1C6 :                             ;TAY                                                    ;2
(1)  112/    C1C6 :                             ;LDA (emu_PC,X)                                 ;6
(1)  112/    C1C6 :                             ;ASL                                                    ;2
(1)  112/    C1C6 :                             ;BCS upper                                              ;2
(1)  112/    C1C6 :                             ;lower:
(1)  112/    C1C6 :                             ;       ASL                                                     ;2
(1)  112/    C1C6 :                             ;       TAX                                                     ;2
(1)  112/    C1C6 :                             ;       BCS upper_lower                         ;2
(1)  112/    C1C6 :                             ;       lower_lower:
(1)  112/    C1C6 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  112/    C1C6 :                             ;       upper_lower:
(1)  112/    C1C6 :                             ;               JMP (JUMP_TABLE2,X)
(1)  112/    C1C6 :                             ;upper:
(1)  112/    C1C6 :                             ;       ASL
(1)  112/    C1C6 :                             ;       TAX
(1)  112/    C1C6 :                             ;       BCS upper_upper
(1)  112/    C1C6 :                             ;       lower_upper:
(1)  112/    C1C6 :                             ;               JMP (JUMP_TABLE3,X)
(1)  112/    C1C6 :                             ;       upper_upper:
(1)  112/    C1C6 :                             ;               JMP (JUMP_TABLE4,X)
(1)  112/    C1C6 :                             ;After jump:
(1)  112/    C1C6 :                             ;TYA                                                    ;2
(1)  112/    C1C6 :                             ;TAX                                                    ;2
(1)  112/    C1C6 :                             
(1)  112/    C1C6 :                             ;Method 4 - 28 cycles
(1)  112/    C1C6 :                             ;LDA (emu_PC,X)                 ;6
(1)  112/    C1C6 :                             ;TAY                                    ;2
(1)  112/    C1C6 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  112/    C1C6 :                             ;PHA                                    ;3
(1)  112/    C1C6 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  112/    C1C6 :                             ;PHA                                    ;3
(1)  112/    C1C6 :                             ;RTS                                    ;6
(1)  112/    C1C6 :                             
(1)  112/    C1C6 :                             ;Method 5 - 30 cycles
(1)  112/    C1C6 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  112/    C1C8 : A8                          TAY                                             ;2
(1)  112/    C1C9 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  112/    C1CC : 95 0A                       STA emu_ptr,X                   ;4
(1)  112/    C1CE : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  112/    C1D1 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  112/    C1D3 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  112/    C1D6 :                                                     
(1)  113/    C1D6 :                     
(1)  114/    C1D6 :                     	;0x16 - ASL ZPX
(1)  115/    C1D6 :                     	ASL_ZPX:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 39 - 1/5/2022 12:19:0


(1)  116/    C1D6 : (MACRO)             		OP_MACRO 22, "ASL", "ZPX", "ASL_ZPX"
(1)  116/    C1D6 :                             ;TODO
(1)  117/    C1D6 : (MACRO)             		NEXT_MACRO
(1)  117/    C1D6 :                                             
(1)  117/    C1D6 :  (MACRO-2)                  halt
(1)  117/    C1D6 : 00                          BRK
(1)  117/    C1D7 : 00                          BRK
(1)  117/    C1D8 :                             
(1)  117/    C1D8 :                             ;Method 1 - 60 cycles
(1)  117/    C1D8 :                             ;Jump table must be page aligned!!!
(1)  117/    C1D8 :                             ;LDA (emu_PC,X)                 ;6
(1)  117/    C1D8 :                             ;ASL                                    ;2
(1)  117/    C1D8 :                             ;STA emu_ptr,X                  ;4
(1)  117/    C1D8 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  117/    C1D8 :                             ;ADC #0                                 ;2
(1)  117/    C1D8 :                             ;STA emu_ptr+1,X                ;4
(1)  117/    C1D8 :                             ;LDA (emu_ptr,X)                ;6
(1)  117/    C1D8 :                             ;STA emu_ptr2,X                 ;4
(1)  117/    C1D8 :                             ;INC emu_ptr,X                  ;6
(1)  117/    C1D8 :                             ;BCC .skip                              ;2
(1)  117/    C1D8 :                             ;       INC emu_ptr+1,X         ;6
(1)  117/    C1D8 :                             ;.skip:
(1)  117/    C1D8 :                             ;LDA (emu_ptr,X)                ;6
(1)  117/    C1D8 :                             ;STA emu_ptr2+1,X               ;4
(1)  117/    C1D8 :                             ;JMP (emu_ptr2,X)               ;6
(1)  117/    C1D8 :                             
(1)  117/    C1D8 :                             ;Method 2 - 46 cycles
(1)  117/    C1D8 :                             ;Jump table must be page aligned!!!
(1)  117/    C1D8 :                             ;LDA (emu_PC,X)                 ;6
(1)  117/    C1D8 :                             ;STZ emu_ptr+1,X                ;4
(1)  117/    C1D8 :                             ;ASL                                    ;2
(1)  117/    C1D8 :                             ;ROL emu_ptr+1,X                ;6
(1)  117/    C1D8 :                             ;ASL                                    ;2
(1)  117/    C1D8 :                             ;ROL emu_ptr+1,X                ;6
(1)  117/    C1D8 :                             ;STA emu_ptr,X                  ;4                              
(1)  117/    C1D8 :                             ;LDA emu_ptr+1,X                ;4
(1)  117/    C1D8 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  117/    C1D8 :                             ;STA emu_ptr+1,X                ;4
(1)  117/    C1D8 :                             ;JMP (emu_ptr2,X)               ;6
(1)  117/    C1D8 :                             
(1)  117/    C1D8 :                             ;Method 3 - 30 cycles
(1)  117/    C1D8 :                             ;TXA                                                    ;2
(1)  117/    C1D8 :                             ;TAY                                                    ;2
(1)  117/    C1D8 :                             ;LDA (emu_PC,X)                                 ;6
(1)  117/    C1D8 :                             ;ASL                                                    ;2
(1)  117/    C1D8 :                             ;BCS upper                                              ;2
(1)  117/    C1D8 :                             ;lower:
(1)  117/    C1D8 :                             ;       ASL                                                     ;2
(1)  117/    C1D8 :                             ;       TAX                                                     ;2
(1)  117/    C1D8 :                             ;       BCS upper_lower                         ;2
(1)  117/    C1D8 :                             ;       lower_lower:
(1)  117/    C1D8 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  117/    C1D8 :                             ;       upper_lower:
(1)  117/    C1D8 :                             ;               JMP (JUMP_TABLE2,X)
(1)  117/    C1D8 :                             ;upper:
(1)  117/    C1D8 :                             ;       ASL
(1)  117/    C1D8 :                             ;       TAX
(1)  117/    C1D8 :                             ;       BCS upper_upper
(1)  117/    C1D8 :                             ;       lower_upper:
(1)  117/    C1D8 :                             ;               JMP (JUMP_TABLE3,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 40 - 1/5/2022 12:19:0


(1)  117/    C1D8 :                             ;       upper_upper:
(1)  117/    C1D8 :                             ;               JMP (JUMP_TABLE4,X)
(1)  117/    C1D8 :                             ;After jump:
(1)  117/    C1D8 :                             ;TYA                                                    ;2
(1)  117/    C1D8 :                             ;TAX                                                    ;2
(1)  117/    C1D8 :                             
(1)  117/    C1D8 :                             ;Method 4 - 28 cycles
(1)  117/    C1D8 :                             ;LDA (emu_PC,X)                 ;6
(1)  117/    C1D8 :                             ;TAY                                    ;2
(1)  117/    C1D8 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  117/    C1D8 :                             ;PHA                                    ;3
(1)  117/    C1D8 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  117/    C1D8 :                             ;PHA                                    ;3
(1)  117/    C1D8 :                             ;RTS                                    ;6
(1)  117/    C1D8 :                             
(1)  117/    C1D8 :                             ;Method 5 - 30 cycles
(1)  117/    C1D8 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  117/    C1DA : A8                          TAY                                             ;2
(1)  117/    C1DB : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  117/    C1DE : 95 0A                       STA emu_ptr,X                   ;4
(1)  117/    C1E0 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  117/    C1E3 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  117/    C1E5 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  117/    C1E8 :                                                     
(1)  118/    C1E8 :                     
(1)  119/    C1E8 :                     	;0x17 - NOP
(1)  120/    C1E8 :                     	NOP_0x17:
(1)  121/    C1E8 : (MACRO)             		OP_MACRO 23, "NOP", "IMP", "NOP_0x17"
(1)  121/    C1E8 :                             ;TODO
(1)  122/    C1E8 : (MACRO)             		NEXT_MACRO
(1)  122/    C1E8 :                                             
(1)  122/    C1E8 :  (MACRO-2)                  halt
(1)  122/    C1E8 : 00                          BRK
(1)  122/    C1E9 : 00                          BRK
(1)  122/    C1EA :                             
(1)  122/    C1EA :                             ;Method 1 - 60 cycles
(1)  122/    C1EA :                             ;Jump table must be page aligned!!!
(1)  122/    C1EA :                             ;LDA (emu_PC,X)                 ;6
(1)  122/    C1EA :                             ;ASL                                    ;2
(1)  122/    C1EA :                             ;STA emu_ptr,X                  ;4
(1)  122/    C1EA :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  122/    C1EA :                             ;ADC #0                                 ;2
(1)  122/    C1EA :                             ;STA emu_ptr+1,X                ;4
(1)  122/    C1EA :                             ;LDA (emu_ptr,X)                ;6
(1)  122/    C1EA :                             ;STA emu_ptr2,X                 ;4
(1)  122/    C1EA :                             ;INC emu_ptr,X                  ;6
(1)  122/    C1EA :                             ;BCC .skip                              ;2
(1)  122/    C1EA :                             ;       INC emu_ptr+1,X         ;6
(1)  122/    C1EA :                             ;.skip:
(1)  122/    C1EA :                             ;LDA (emu_ptr,X)                ;6
(1)  122/    C1EA :                             ;STA emu_ptr2+1,X               ;4
(1)  122/    C1EA :                             ;JMP (emu_ptr2,X)               ;6
(1)  122/    C1EA :                             
(1)  122/    C1EA :                             ;Method 2 - 46 cycles
(1)  122/    C1EA :                             ;Jump table must be page aligned!!!
(1)  122/    C1EA :                             ;LDA (emu_PC,X)                 ;6
(1)  122/    C1EA :                             ;STZ emu_ptr+1,X                ;4
(1)  122/    C1EA :                             ;ASL                                    ;2
(1)  122/    C1EA :                             ;ROL emu_ptr+1,X                ;6
(1)  122/    C1EA :                             ;ASL                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 41 - 1/5/2022 12:19:0


(1)  122/    C1EA :                             ;ROL emu_ptr+1,X                ;6
(1)  122/    C1EA :                             ;STA emu_ptr,X                  ;4                              
(1)  122/    C1EA :                             ;LDA emu_ptr+1,X                ;4
(1)  122/    C1EA :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  122/    C1EA :                             ;STA emu_ptr+1,X                ;4
(1)  122/    C1EA :                             ;JMP (emu_ptr2,X)               ;6
(1)  122/    C1EA :                             
(1)  122/    C1EA :                             ;Method 3 - 30 cycles
(1)  122/    C1EA :                             ;TXA                                                    ;2
(1)  122/    C1EA :                             ;TAY                                                    ;2
(1)  122/    C1EA :                             ;LDA (emu_PC,X)                                 ;6
(1)  122/    C1EA :                             ;ASL                                                    ;2
(1)  122/    C1EA :                             ;BCS upper                                              ;2
(1)  122/    C1EA :                             ;lower:
(1)  122/    C1EA :                             ;       ASL                                                     ;2
(1)  122/    C1EA :                             ;       TAX                                                     ;2
(1)  122/    C1EA :                             ;       BCS upper_lower                         ;2
(1)  122/    C1EA :                             ;       lower_lower:
(1)  122/    C1EA :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  122/    C1EA :                             ;       upper_lower:
(1)  122/    C1EA :                             ;               JMP (JUMP_TABLE2,X)
(1)  122/    C1EA :                             ;upper:
(1)  122/    C1EA :                             ;       ASL
(1)  122/    C1EA :                             ;       TAX
(1)  122/    C1EA :                             ;       BCS upper_upper
(1)  122/    C1EA :                             ;       lower_upper:
(1)  122/    C1EA :                             ;               JMP (JUMP_TABLE3,X)
(1)  122/    C1EA :                             ;       upper_upper:
(1)  122/    C1EA :                             ;               JMP (JUMP_TABLE4,X)
(1)  122/    C1EA :                             ;After jump:
(1)  122/    C1EA :                             ;TYA                                                    ;2
(1)  122/    C1EA :                             ;TAX                                                    ;2
(1)  122/    C1EA :                             
(1)  122/    C1EA :                             ;Method 4 - 28 cycles
(1)  122/    C1EA :                             ;LDA (emu_PC,X)                 ;6
(1)  122/    C1EA :                             ;TAY                                    ;2
(1)  122/    C1EA :                             ;LDA JUMP_TABLE,Y               ;4
(1)  122/    C1EA :                             ;PHA                                    ;3
(1)  122/    C1EA :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  122/    C1EA :                             ;PHA                                    ;3
(1)  122/    C1EA :                             ;RTS                                    ;6
(1)  122/    C1EA :                             
(1)  122/    C1EA :                             ;Method 5 - 30 cycles
(1)  122/    C1EA : A1 02                       LDA (emu_PC,X)                  ;6
(1)  122/    C1EC : A8                          TAY                                             ;2
(1)  122/    C1ED : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  122/    C1F0 : 95 0A                       STA emu_ptr,X                   ;4
(1)  122/    C1F2 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  122/    C1F5 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  122/    C1F7 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  122/    C1FA :                                                     
(1)  123/    C1FA :                     
(1)  124/    C1FA :                     	;0x18 - CLC IMP
(1)  125/    C1FA :                     	CLC_IMP:
(1)  126/    C1FA : (MACRO)             		OP_MACRO 24, "CLC", "IMP", "CLC_IMP"
(1)  126/    C1FA :                             ;TODO
(1)  127/    C1FA : (MACRO)             		NEXT_MACRO
(1)  127/    C1FA :                                             
(1)  127/    C1FA :  (MACRO-2)                  halt
(1)  127/    C1FA : 00                          BRK
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 42 - 1/5/2022 12:19:0


(1)  127/    C1FB : 00                          BRK
(1)  127/    C1FC :                             
(1)  127/    C1FC :                             ;Method 1 - 60 cycles
(1)  127/    C1FC :                             ;Jump table must be page aligned!!!
(1)  127/    C1FC :                             ;LDA (emu_PC,X)                 ;6
(1)  127/    C1FC :                             ;ASL                                    ;2
(1)  127/    C1FC :                             ;STA emu_ptr,X                  ;4
(1)  127/    C1FC :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  127/    C1FC :                             ;ADC #0                                 ;2
(1)  127/    C1FC :                             ;STA emu_ptr+1,X                ;4
(1)  127/    C1FC :                             ;LDA (emu_ptr,X)                ;6
(1)  127/    C1FC :                             ;STA emu_ptr2,X                 ;4
(1)  127/    C1FC :                             ;INC emu_ptr,X                  ;6
(1)  127/    C1FC :                             ;BCC .skip                              ;2
(1)  127/    C1FC :                             ;       INC emu_ptr+1,X         ;6
(1)  127/    C1FC :                             ;.skip:
(1)  127/    C1FC :                             ;LDA (emu_ptr,X)                ;6
(1)  127/    C1FC :                             ;STA emu_ptr2+1,X               ;4
(1)  127/    C1FC :                             ;JMP (emu_ptr2,X)               ;6
(1)  127/    C1FC :                             
(1)  127/    C1FC :                             ;Method 2 - 46 cycles
(1)  127/    C1FC :                             ;Jump table must be page aligned!!!
(1)  127/    C1FC :                             ;LDA (emu_PC,X)                 ;6
(1)  127/    C1FC :                             ;STZ emu_ptr+1,X                ;4
(1)  127/    C1FC :                             ;ASL                                    ;2
(1)  127/    C1FC :                             ;ROL emu_ptr+1,X                ;6
(1)  127/    C1FC :                             ;ASL                                    ;2
(1)  127/    C1FC :                             ;ROL emu_ptr+1,X                ;6
(1)  127/    C1FC :                             ;STA emu_ptr,X                  ;4                              
(1)  127/    C1FC :                             ;LDA emu_ptr+1,X                ;4
(1)  127/    C1FC :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  127/    C1FC :                             ;STA emu_ptr+1,X                ;4
(1)  127/    C1FC :                             ;JMP (emu_ptr2,X)               ;6
(1)  127/    C1FC :                             
(1)  127/    C1FC :                             ;Method 3 - 30 cycles
(1)  127/    C1FC :                             ;TXA                                                    ;2
(1)  127/    C1FC :                             ;TAY                                                    ;2
(1)  127/    C1FC :                             ;LDA (emu_PC,X)                                 ;6
(1)  127/    C1FC :                             ;ASL                                                    ;2
(1)  127/    C1FC :                             ;BCS upper                                              ;2
(1)  127/    C1FC :                             ;lower:
(1)  127/    C1FC :                             ;       ASL                                                     ;2
(1)  127/    C1FC :                             ;       TAX                                                     ;2
(1)  127/    C1FC :                             ;       BCS upper_lower                         ;2
(1)  127/    C1FC :                             ;       lower_lower:
(1)  127/    C1FC :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  127/    C1FC :                             ;       upper_lower:
(1)  127/    C1FC :                             ;               JMP (JUMP_TABLE2,X)
(1)  127/    C1FC :                             ;upper:
(1)  127/    C1FC :                             ;       ASL
(1)  127/    C1FC :                             ;       TAX
(1)  127/    C1FC :                             ;       BCS upper_upper
(1)  127/    C1FC :                             ;       lower_upper:
(1)  127/    C1FC :                             ;               JMP (JUMP_TABLE3,X)
(1)  127/    C1FC :                             ;       upper_upper:
(1)  127/    C1FC :                             ;               JMP (JUMP_TABLE4,X)
(1)  127/    C1FC :                             ;After jump:
(1)  127/    C1FC :                             ;TYA                                                    ;2
(1)  127/    C1FC :                             ;TAX                                                    ;2
(1)  127/    C1FC :                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 43 - 1/5/2022 12:19:0


(1)  127/    C1FC :                             ;Method 4 - 28 cycles
(1)  127/    C1FC :                             ;LDA (emu_PC,X)                 ;6
(1)  127/    C1FC :                             ;TAY                                    ;2
(1)  127/    C1FC :                             ;LDA JUMP_TABLE,Y               ;4
(1)  127/    C1FC :                             ;PHA                                    ;3
(1)  127/    C1FC :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  127/    C1FC :                             ;PHA                                    ;3
(1)  127/    C1FC :                             ;RTS                                    ;6
(1)  127/    C1FC :                             
(1)  127/    C1FC :                             ;Method 5 - 30 cycles
(1)  127/    C1FC : A1 02                       LDA (emu_PC,X)                  ;6
(1)  127/    C1FE : A8                          TAY                                             ;2
(1)  127/    C1FF : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  127/    C202 : 95 0A                       STA emu_ptr,X                   ;4
(1)  127/    C204 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  127/    C207 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  127/    C209 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  127/    C20C :                                                     
(1)  128/    C20C :                     
(1)  129/    C20C :                     	;0x19 - ORA ABSY
(1)  130/    C20C :                     	ORA_ABSY:
(1)  131/    C20C : (MACRO)             		OP_MACRO 25, "ORA", "ABSY", "ORA_ABSY"
(1)  131/    C20C :                             ;TODO
(1)  132/    C20C : (MACRO)             		NEXT_MACRO
(1)  132/    C20C :                                             
(1)  132/    C20C :  (MACRO-2)                  halt
(1)  132/    C20C : 00                          BRK
(1)  132/    C20D : 00                          BRK
(1)  132/    C20E :                             
(1)  132/    C20E :                             ;Method 1 - 60 cycles
(1)  132/    C20E :                             ;Jump table must be page aligned!!!
(1)  132/    C20E :                             ;LDA (emu_PC,X)                 ;6
(1)  132/    C20E :                             ;ASL                                    ;2
(1)  132/    C20E :                             ;STA emu_ptr,X                  ;4
(1)  132/    C20E :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  132/    C20E :                             ;ADC #0                                 ;2
(1)  132/    C20E :                             ;STA emu_ptr+1,X                ;4
(1)  132/    C20E :                             ;LDA (emu_ptr,X)                ;6
(1)  132/    C20E :                             ;STA emu_ptr2,X                 ;4
(1)  132/    C20E :                             ;INC emu_ptr,X                  ;6
(1)  132/    C20E :                             ;BCC .skip                              ;2
(1)  132/    C20E :                             ;       INC emu_ptr+1,X         ;6
(1)  132/    C20E :                             ;.skip:
(1)  132/    C20E :                             ;LDA (emu_ptr,X)                ;6
(1)  132/    C20E :                             ;STA emu_ptr2+1,X               ;4
(1)  132/    C20E :                             ;JMP (emu_ptr2,X)               ;6
(1)  132/    C20E :                             
(1)  132/    C20E :                             ;Method 2 - 46 cycles
(1)  132/    C20E :                             ;Jump table must be page aligned!!!
(1)  132/    C20E :                             ;LDA (emu_PC,X)                 ;6
(1)  132/    C20E :                             ;STZ emu_ptr+1,X                ;4
(1)  132/    C20E :                             ;ASL                                    ;2
(1)  132/    C20E :                             ;ROL emu_ptr+1,X                ;6
(1)  132/    C20E :                             ;ASL                                    ;2
(1)  132/    C20E :                             ;ROL emu_ptr+1,X                ;6
(1)  132/    C20E :                             ;STA emu_ptr,X                  ;4                              
(1)  132/    C20E :                             ;LDA emu_ptr+1,X                ;4
(1)  132/    C20E :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  132/    C20E :                             ;STA emu_ptr+1,X                ;4
(1)  132/    C20E :                             ;JMP (emu_ptr2,X)               ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 44 - 1/5/2022 12:19:0


(1)  132/    C20E :                             
(1)  132/    C20E :                             ;Method 3 - 30 cycles
(1)  132/    C20E :                             ;TXA                                                    ;2
(1)  132/    C20E :                             ;TAY                                                    ;2
(1)  132/    C20E :                             ;LDA (emu_PC,X)                                 ;6
(1)  132/    C20E :                             ;ASL                                                    ;2
(1)  132/    C20E :                             ;BCS upper                                              ;2
(1)  132/    C20E :                             ;lower:
(1)  132/    C20E :                             ;       ASL                                                     ;2
(1)  132/    C20E :                             ;       TAX                                                     ;2
(1)  132/    C20E :                             ;       BCS upper_lower                         ;2
(1)  132/    C20E :                             ;       lower_lower:
(1)  132/    C20E :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  132/    C20E :                             ;       upper_lower:
(1)  132/    C20E :                             ;               JMP (JUMP_TABLE2,X)
(1)  132/    C20E :                             ;upper:
(1)  132/    C20E :                             ;       ASL
(1)  132/    C20E :                             ;       TAX
(1)  132/    C20E :                             ;       BCS upper_upper
(1)  132/    C20E :                             ;       lower_upper:
(1)  132/    C20E :                             ;               JMP (JUMP_TABLE3,X)
(1)  132/    C20E :                             ;       upper_upper:
(1)  132/    C20E :                             ;               JMP (JUMP_TABLE4,X)
(1)  132/    C20E :                             ;After jump:
(1)  132/    C20E :                             ;TYA                                                    ;2
(1)  132/    C20E :                             ;TAX                                                    ;2
(1)  132/    C20E :                             
(1)  132/    C20E :                             ;Method 4 - 28 cycles
(1)  132/    C20E :                             ;LDA (emu_PC,X)                 ;6
(1)  132/    C20E :                             ;TAY                                    ;2
(1)  132/    C20E :                             ;LDA JUMP_TABLE,Y               ;4
(1)  132/    C20E :                             ;PHA                                    ;3
(1)  132/    C20E :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  132/    C20E :                             ;PHA                                    ;3
(1)  132/    C20E :                             ;RTS                                    ;6
(1)  132/    C20E :                             
(1)  132/    C20E :                             ;Method 5 - 30 cycles
(1)  132/    C20E : A1 02                       LDA (emu_PC,X)                  ;6
(1)  132/    C210 : A8                          TAY                                             ;2
(1)  132/    C211 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  132/    C214 : 95 0A                       STA emu_ptr,X                   ;4
(1)  132/    C216 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  132/    C219 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  132/    C21B : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  132/    C21E :                                                     
(1)  133/    C21E :                     
(1)  134/    C21E :                     	;0x1A - NOP
(1)  135/    C21E :                     	NOP_0x1A:
(1)  136/    C21E : (MACRO)             		OP_MACRO 26, "NOP", "IMP", "NOP_0x1A"
(1)  136/    C21E :                             ;TODO
(1)  137/    C21E : (MACRO)             		NEXT_MACRO
(1)  137/    C21E :                                             
(1)  137/    C21E :  (MACRO-2)                  halt
(1)  137/    C21E : 00                          BRK
(1)  137/    C21F : 00                          BRK
(1)  137/    C220 :                             
(1)  137/    C220 :                             ;Method 1 - 60 cycles
(1)  137/    C220 :                             ;Jump table must be page aligned!!!
(1)  137/    C220 :                             ;LDA (emu_PC,X)                 ;6
(1)  137/    C220 :                             ;ASL                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 45 - 1/5/2022 12:19:0


(1)  137/    C220 :                             ;STA emu_ptr,X                  ;4
(1)  137/    C220 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  137/    C220 :                             ;ADC #0                                 ;2
(1)  137/    C220 :                             ;STA emu_ptr+1,X                ;4
(1)  137/    C220 :                             ;LDA (emu_ptr,X)                ;6
(1)  137/    C220 :                             ;STA emu_ptr2,X                 ;4
(1)  137/    C220 :                             ;INC emu_ptr,X                  ;6
(1)  137/    C220 :                             ;BCC .skip                              ;2
(1)  137/    C220 :                             ;       INC emu_ptr+1,X         ;6
(1)  137/    C220 :                             ;.skip:
(1)  137/    C220 :                             ;LDA (emu_ptr,X)                ;6
(1)  137/    C220 :                             ;STA emu_ptr2+1,X               ;4
(1)  137/    C220 :                             ;JMP (emu_ptr2,X)               ;6
(1)  137/    C220 :                             
(1)  137/    C220 :                             ;Method 2 - 46 cycles
(1)  137/    C220 :                             ;Jump table must be page aligned!!!
(1)  137/    C220 :                             ;LDA (emu_PC,X)                 ;6
(1)  137/    C220 :                             ;STZ emu_ptr+1,X                ;4
(1)  137/    C220 :                             ;ASL                                    ;2
(1)  137/    C220 :                             ;ROL emu_ptr+1,X                ;6
(1)  137/    C220 :                             ;ASL                                    ;2
(1)  137/    C220 :                             ;ROL emu_ptr+1,X                ;6
(1)  137/    C220 :                             ;STA emu_ptr,X                  ;4                              
(1)  137/    C220 :                             ;LDA emu_ptr+1,X                ;4
(1)  137/    C220 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  137/    C220 :                             ;STA emu_ptr+1,X                ;4
(1)  137/    C220 :                             ;JMP (emu_ptr2,X)               ;6
(1)  137/    C220 :                             
(1)  137/    C220 :                             ;Method 3 - 30 cycles
(1)  137/    C220 :                             ;TXA                                                    ;2
(1)  137/    C220 :                             ;TAY                                                    ;2
(1)  137/    C220 :                             ;LDA (emu_PC,X)                                 ;6
(1)  137/    C220 :                             ;ASL                                                    ;2
(1)  137/    C220 :                             ;BCS upper                                              ;2
(1)  137/    C220 :                             ;lower:
(1)  137/    C220 :                             ;       ASL                                                     ;2
(1)  137/    C220 :                             ;       TAX                                                     ;2
(1)  137/    C220 :                             ;       BCS upper_lower                         ;2
(1)  137/    C220 :                             ;       lower_lower:
(1)  137/    C220 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  137/    C220 :                             ;       upper_lower:
(1)  137/    C220 :                             ;               JMP (JUMP_TABLE2,X)
(1)  137/    C220 :                             ;upper:
(1)  137/    C220 :                             ;       ASL
(1)  137/    C220 :                             ;       TAX
(1)  137/    C220 :                             ;       BCS upper_upper
(1)  137/    C220 :                             ;       lower_upper:
(1)  137/    C220 :                             ;               JMP (JUMP_TABLE3,X)
(1)  137/    C220 :                             ;       upper_upper:
(1)  137/    C220 :                             ;               JMP (JUMP_TABLE4,X)
(1)  137/    C220 :                             ;After jump:
(1)  137/    C220 :                             ;TYA                                                    ;2
(1)  137/    C220 :                             ;TAX                                                    ;2
(1)  137/    C220 :                             
(1)  137/    C220 :                             ;Method 4 - 28 cycles
(1)  137/    C220 :                             ;LDA (emu_PC,X)                 ;6
(1)  137/    C220 :                             ;TAY                                    ;2
(1)  137/    C220 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  137/    C220 :                             ;PHA                                    ;3
(1)  137/    C220 :                             ;LDA JUMP_TABLE2,Y              ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 46 - 1/5/2022 12:19:0


(1)  137/    C220 :                             ;PHA                                    ;3
(1)  137/    C220 :                             ;RTS                                    ;6
(1)  137/    C220 :                             
(1)  137/    C220 :                             ;Method 5 - 30 cycles
(1)  137/    C220 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  137/    C222 : A8                          TAY                                             ;2
(1)  137/    C223 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  137/    C226 : 95 0A                       STA emu_ptr,X                   ;4
(1)  137/    C228 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  137/    C22B : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  137/    C22D : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  137/    C230 :                                                     
(1)  138/    C230 :                     
(1)  139/    C230 :                     	;0x1B - NOP
(1)  140/    C230 :                     	NOP_0x1B:
(1)  141/    C230 : (MACRO)             		OP_MACRO 27, "NOP", "IMP", "NOP_0x1B"
(1)  141/    C230 :                             ;TODO
(1)  142/    C230 : (MACRO)             		NEXT_MACRO
(1)  142/    C230 :                                             
(1)  142/    C230 :  (MACRO-2)                  halt
(1)  142/    C230 : 00                          BRK
(1)  142/    C231 : 00                          BRK
(1)  142/    C232 :                             
(1)  142/    C232 :                             ;Method 1 - 60 cycles
(1)  142/    C232 :                             ;Jump table must be page aligned!!!
(1)  142/    C232 :                             ;LDA (emu_PC,X)                 ;6
(1)  142/    C232 :                             ;ASL                                    ;2
(1)  142/    C232 :                             ;STA emu_ptr,X                  ;4
(1)  142/    C232 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  142/    C232 :                             ;ADC #0                                 ;2
(1)  142/    C232 :                             ;STA emu_ptr+1,X                ;4
(1)  142/    C232 :                             ;LDA (emu_ptr,X)                ;6
(1)  142/    C232 :                             ;STA emu_ptr2,X                 ;4
(1)  142/    C232 :                             ;INC emu_ptr,X                  ;6
(1)  142/    C232 :                             ;BCC .skip                              ;2
(1)  142/    C232 :                             ;       INC emu_ptr+1,X         ;6
(1)  142/    C232 :                             ;.skip:
(1)  142/    C232 :                             ;LDA (emu_ptr,X)                ;6
(1)  142/    C232 :                             ;STA emu_ptr2+1,X               ;4
(1)  142/    C232 :                             ;JMP (emu_ptr2,X)               ;6
(1)  142/    C232 :                             
(1)  142/    C232 :                             ;Method 2 - 46 cycles
(1)  142/    C232 :                             ;Jump table must be page aligned!!!
(1)  142/    C232 :                             ;LDA (emu_PC,X)                 ;6
(1)  142/    C232 :                             ;STZ emu_ptr+1,X                ;4
(1)  142/    C232 :                             ;ASL                                    ;2
(1)  142/    C232 :                             ;ROL emu_ptr+1,X                ;6
(1)  142/    C232 :                             ;ASL                                    ;2
(1)  142/    C232 :                             ;ROL emu_ptr+1,X                ;6
(1)  142/    C232 :                             ;STA emu_ptr,X                  ;4                              
(1)  142/    C232 :                             ;LDA emu_ptr+1,X                ;4
(1)  142/    C232 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  142/    C232 :                             ;STA emu_ptr+1,X                ;4
(1)  142/    C232 :                             ;JMP (emu_ptr2,X)               ;6
(1)  142/    C232 :                             
(1)  142/    C232 :                             ;Method 3 - 30 cycles
(1)  142/    C232 :                             ;TXA                                                    ;2
(1)  142/    C232 :                             ;TAY                                                    ;2
(1)  142/    C232 :                             ;LDA (emu_PC,X)                                 ;6
(1)  142/    C232 :                             ;ASL                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 47 - 1/5/2022 12:19:0


(1)  142/    C232 :                             ;BCS upper                                              ;2
(1)  142/    C232 :                             ;lower:
(1)  142/    C232 :                             ;       ASL                                                     ;2
(1)  142/    C232 :                             ;       TAX                                                     ;2
(1)  142/    C232 :                             ;       BCS upper_lower                         ;2
(1)  142/    C232 :                             ;       lower_lower:
(1)  142/    C232 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  142/    C232 :                             ;       upper_lower:
(1)  142/    C232 :                             ;               JMP (JUMP_TABLE2,X)
(1)  142/    C232 :                             ;upper:
(1)  142/    C232 :                             ;       ASL
(1)  142/    C232 :                             ;       TAX
(1)  142/    C232 :                             ;       BCS upper_upper
(1)  142/    C232 :                             ;       lower_upper:
(1)  142/    C232 :                             ;               JMP (JUMP_TABLE3,X)
(1)  142/    C232 :                             ;       upper_upper:
(1)  142/    C232 :                             ;               JMP (JUMP_TABLE4,X)
(1)  142/    C232 :                             ;After jump:
(1)  142/    C232 :                             ;TYA                                                    ;2
(1)  142/    C232 :                             ;TAX                                                    ;2
(1)  142/    C232 :                             
(1)  142/    C232 :                             ;Method 4 - 28 cycles
(1)  142/    C232 :                             ;LDA (emu_PC,X)                 ;6
(1)  142/    C232 :                             ;TAY                                    ;2
(1)  142/    C232 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  142/    C232 :                             ;PHA                                    ;3
(1)  142/    C232 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  142/    C232 :                             ;PHA                                    ;3
(1)  142/    C232 :                             ;RTS                                    ;6
(1)  142/    C232 :                             
(1)  142/    C232 :                             ;Method 5 - 30 cycles
(1)  142/    C232 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  142/    C234 : A8                          TAY                                             ;2
(1)  142/    C235 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  142/    C238 : 95 0A                       STA emu_ptr,X                   ;4
(1)  142/    C23A : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  142/    C23D : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  142/    C23F : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  142/    C242 :                                                     
(1)  143/    C242 :                     
(1)  144/    C242 :                     	;0x1C - NOP
(1)  145/    C242 :                     	NOP_0x1C:
(1)  146/    C242 : (MACRO)             		OP_MACRO 28, "NOP", "IMP", "NOP_0x1C"
(1)  146/    C242 :                             ;TODO
(1)  147/    C242 : (MACRO)             		NEXT_MACRO
(1)  147/    C242 :                                             
(1)  147/    C242 :  (MACRO-2)                  halt
(1)  147/    C242 : 00                          BRK
(1)  147/    C243 : 00                          BRK
(1)  147/    C244 :                             
(1)  147/    C244 :                             ;Method 1 - 60 cycles
(1)  147/    C244 :                             ;Jump table must be page aligned!!!
(1)  147/    C244 :                             ;LDA (emu_PC,X)                 ;6
(1)  147/    C244 :                             ;ASL                                    ;2
(1)  147/    C244 :                             ;STA emu_ptr,X                  ;4
(1)  147/    C244 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  147/    C244 :                             ;ADC #0                                 ;2
(1)  147/    C244 :                             ;STA emu_ptr+1,X                ;4
(1)  147/    C244 :                             ;LDA (emu_ptr,X)                ;6
(1)  147/    C244 :                             ;STA emu_ptr2,X                 ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 48 - 1/5/2022 12:19:0


(1)  147/    C244 :                             ;INC emu_ptr,X                  ;6
(1)  147/    C244 :                             ;BCC .skip                              ;2
(1)  147/    C244 :                             ;       INC emu_ptr+1,X         ;6
(1)  147/    C244 :                             ;.skip:
(1)  147/    C244 :                             ;LDA (emu_ptr,X)                ;6
(1)  147/    C244 :                             ;STA emu_ptr2+1,X               ;4
(1)  147/    C244 :                             ;JMP (emu_ptr2,X)               ;6
(1)  147/    C244 :                             
(1)  147/    C244 :                             ;Method 2 - 46 cycles
(1)  147/    C244 :                             ;Jump table must be page aligned!!!
(1)  147/    C244 :                             ;LDA (emu_PC,X)                 ;6
(1)  147/    C244 :                             ;STZ emu_ptr+1,X                ;4
(1)  147/    C244 :                             ;ASL                                    ;2
(1)  147/    C244 :                             ;ROL emu_ptr+1,X                ;6
(1)  147/    C244 :                             ;ASL                                    ;2
(1)  147/    C244 :                             ;ROL emu_ptr+1,X                ;6
(1)  147/    C244 :                             ;STA emu_ptr,X                  ;4                              
(1)  147/    C244 :                             ;LDA emu_ptr+1,X                ;4
(1)  147/    C244 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  147/    C244 :                             ;STA emu_ptr+1,X                ;4
(1)  147/    C244 :                             ;JMP (emu_ptr2,X)               ;6
(1)  147/    C244 :                             
(1)  147/    C244 :                             ;Method 3 - 30 cycles
(1)  147/    C244 :                             ;TXA                                                    ;2
(1)  147/    C244 :                             ;TAY                                                    ;2
(1)  147/    C244 :                             ;LDA (emu_PC,X)                                 ;6
(1)  147/    C244 :                             ;ASL                                                    ;2
(1)  147/    C244 :                             ;BCS upper                                              ;2
(1)  147/    C244 :                             ;lower:
(1)  147/    C244 :                             ;       ASL                                                     ;2
(1)  147/    C244 :                             ;       TAX                                                     ;2
(1)  147/    C244 :                             ;       BCS upper_lower                         ;2
(1)  147/    C244 :                             ;       lower_lower:
(1)  147/    C244 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  147/    C244 :                             ;       upper_lower:
(1)  147/    C244 :                             ;               JMP (JUMP_TABLE2,X)
(1)  147/    C244 :                             ;upper:
(1)  147/    C244 :                             ;       ASL
(1)  147/    C244 :                             ;       TAX
(1)  147/    C244 :                             ;       BCS upper_upper
(1)  147/    C244 :                             ;       lower_upper:
(1)  147/    C244 :                             ;               JMP (JUMP_TABLE3,X)
(1)  147/    C244 :                             ;       upper_upper:
(1)  147/    C244 :                             ;               JMP (JUMP_TABLE4,X)
(1)  147/    C244 :                             ;After jump:
(1)  147/    C244 :                             ;TYA                                                    ;2
(1)  147/    C244 :                             ;TAX                                                    ;2
(1)  147/    C244 :                             
(1)  147/    C244 :                             ;Method 4 - 28 cycles
(1)  147/    C244 :                             ;LDA (emu_PC,X)                 ;6
(1)  147/    C244 :                             ;TAY                                    ;2
(1)  147/    C244 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  147/    C244 :                             ;PHA                                    ;3
(1)  147/    C244 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  147/    C244 :                             ;PHA                                    ;3
(1)  147/    C244 :                             ;RTS                                    ;6
(1)  147/    C244 :                             
(1)  147/    C244 :                             ;Method 5 - 30 cycles
(1)  147/    C244 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  147/    C246 : A8                          TAY                                             ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 49 - 1/5/2022 12:19:0


(1)  147/    C247 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  147/    C24A : 95 0A                       STA emu_ptr,X                   ;4
(1)  147/    C24C : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  147/    C24F : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  147/    C251 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  147/    C254 :                                                     
(1)  148/    C254 :                     
(1)  149/    C254 :                     	;0x1D - ORA ABSX
(1)  150/    C254 :                     	ORA_ABSX:
(1)  151/    C254 : (MACRO)             		OP_MACRO 29, "ORA", "ABSX", "ORA_ABSX"
(1)  151/    C254 :                             ;TODO
(1)  152/    C254 : (MACRO)             		NEXT_MACRO
(1)  152/    C254 :                                             
(1)  152/    C254 :  (MACRO-2)                  halt
(1)  152/    C254 : 00                          BRK
(1)  152/    C255 : 00                          BRK
(1)  152/    C256 :                             
(1)  152/    C256 :                             ;Method 1 - 60 cycles
(1)  152/    C256 :                             ;Jump table must be page aligned!!!
(1)  152/    C256 :                             ;LDA (emu_PC,X)                 ;6
(1)  152/    C256 :                             ;ASL                                    ;2
(1)  152/    C256 :                             ;STA emu_ptr,X                  ;4
(1)  152/    C256 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  152/    C256 :                             ;ADC #0                                 ;2
(1)  152/    C256 :                             ;STA emu_ptr+1,X                ;4
(1)  152/    C256 :                             ;LDA (emu_ptr,X)                ;6
(1)  152/    C256 :                             ;STA emu_ptr2,X                 ;4
(1)  152/    C256 :                             ;INC emu_ptr,X                  ;6
(1)  152/    C256 :                             ;BCC .skip                              ;2
(1)  152/    C256 :                             ;       INC emu_ptr+1,X         ;6
(1)  152/    C256 :                             ;.skip:
(1)  152/    C256 :                             ;LDA (emu_ptr,X)                ;6
(1)  152/    C256 :                             ;STA emu_ptr2+1,X               ;4
(1)  152/    C256 :                             ;JMP (emu_ptr2,X)               ;6
(1)  152/    C256 :                             
(1)  152/    C256 :                             ;Method 2 - 46 cycles
(1)  152/    C256 :                             ;Jump table must be page aligned!!!
(1)  152/    C256 :                             ;LDA (emu_PC,X)                 ;6
(1)  152/    C256 :                             ;STZ emu_ptr+1,X                ;4
(1)  152/    C256 :                             ;ASL                                    ;2
(1)  152/    C256 :                             ;ROL emu_ptr+1,X                ;6
(1)  152/    C256 :                             ;ASL                                    ;2
(1)  152/    C256 :                             ;ROL emu_ptr+1,X                ;6
(1)  152/    C256 :                             ;STA emu_ptr,X                  ;4                              
(1)  152/    C256 :                             ;LDA emu_ptr+1,X                ;4
(1)  152/    C256 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  152/    C256 :                             ;STA emu_ptr+1,X                ;4
(1)  152/    C256 :                             ;JMP (emu_ptr2,X)               ;6
(1)  152/    C256 :                             
(1)  152/    C256 :                             ;Method 3 - 30 cycles
(1)  152/    C256 :                             ;TXA                                                    ;2
(1)  152/    C256 :                             ;TAY                                                    ;2
(1)  152/    C256 :                             ;LDA (emu_PC,X)                                 ;6
(1)  152/    C256 :                             ;ASL                                                    ;2
(1)  152/    C256 :                             ;BCS upper                                              ;2
(1)  152/    C256 :                             ;lower:
(1)  152/    C256 :                             ;       ASL                                                     ;2
(1)  152/    C256 :                             ;       TAX                                                     ;2
(1)  152/    C256 :                             ;       BCS upper_lower                         ;2
(1)  152/    C256 :                             ;       lower_lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 50 - 1/5/2022 12:19:0


(1)  152/    C256 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  152/    C256 :                             ;       upper_lower:
(1)  152/    C256 :                             ;               JMP (JUMP_TABLE2,X)
(1)  152/    C256 :                             ;upper:
(1)  152/    C256 :                             ;       ASL
(1)  152/    C256 :                             ;       TAX
(1)  152/    C256 :                             ;       BCS upper_upper
(1)  152/    C256 :                             ;       lower_upper:
(1)  152/    C256 :                             ;               JMP (JUMP_TABLE3,X)
(1)  152/    C256 :                             ;       upper_upper:
(1)  152/    C256 :                             ;               JMP (JUMP_TABLE4,X)
(1)  152/    C256 :                             ;After jump:
(1)  152/    C256 :                             ;TYA                                                    ;2
(1)  152/    C256 :                             ;TAX                                                    ;2
(1)  152/    C256 :                             
(1)  152/    C256 :                             ;Method 4 - 28 cycles
(1)  152/    C256 :                             ;LDA (emu_PC,X)                 ;6
(1)  152/    C256 :                             ;TAY                                    ;2
(1)  152/    C256 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  152/    C256 :                             ;PHA                                    ;3
(1)  152/    C256 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  152/    C256 :                             ;PHA                                    ;3
(1)  152/    C256 :                             ;RTS                                    ;6
(1)  152/    C256 :                             
(1)  152/    C256 :                             ;Method 5 - 30 cycles
(1)  152/    C256 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  152/    C258 : A8                          TAY                                             ;2
(1)  152/    C259 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  152/    C25C : 95 0A                       STA emu_ptr,X                   ;4
(1)  152/    C25E : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  152/    C261 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  152/    C263 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  152/    C266 :                                                     
(1)  153/    C266 :                     
(1)  154/    C266 :                     	;0x1E - ASL ABSX
(1)  155/    C266 :                     	ASL_ABSX:
(1)  156/    C266 : (MACRO)             		OP_MACRO 30, "ASL", "ABSX", "ASL_ABSX"
(1)  156/    C266 :                             ;TODO
(1)  157/    C266 : (MACRO)             		NEXT_MACRO
(1)  157/    C266 :                                             
(1)  157/    C266 :  (MACRO-2)                  halt
(1)  157/    C266 : 00                          BRK
(1)  157/    C267 : 00                          BRK
(1)  157/    C268 :                             
(1)  157/    C268 :                             ;Method 1 - 60 cycles
(1)  157/    C268 :                             ;Jump table must be page aligned!!!
(1)  157/    C268 :                             ;LDA (emu_PC,X)                 ;6
(1)  157/    C268 :                             ;ASL                                    ;2
(1)  157/    C268 :                             ;STA emu_ptr,X                  ;4
(1)  157/    C268 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  157/    C268 :                             ;ADC #0                                 ;2
(1)  157/    C268 :                             ;STA emu_ptr+1,X                ;4
(1)  157/    C268 :                             ;LDA (emu_ptr,X)                ;6
(1)  157/    C268 :                             ;STA emu_ptr2,X                 ;4
(1)  157/    C268 :                             ;INC emu_ptr,X                  ;6
(1)  157/    C268 :                             ;BCC .skip                              ;2
(1)  157/    C268 :                             ;       INC emu_ptr+1,X         ;6
(1)  157/    C268 :                             ;.skip:
(1)  157/    C268 :                             ;LDA (emu_ptr,X)                ;6
(1)  157/    C268 :                             ;STA emu_ptr2+1,X               ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 51 - 1/5/2022 12:19:0


(1)  157/    C268 :                             ;JMP (emu_ptr2,X)               ;6
(1)  157/    C268 :                             
(1)  157/    C268 :                             ;Method 2 - 46 cycles
(1)  157/    C268 :                             ;Jump table must be page aligned!!!
(1)  157/    C268 :                             ;LDA (emu_PC,X)                 ;6
(1)  157/    C268 :                             ;STZ emu_ptr+1,X                ;4
(1)  157/    C268 :                             ;ASL                                    ;2
(1)  157/    C268 :                             ;ROL emu_ptr+1,X                ;6
(1)  157/    C268 :                             ;ASL                                    ;2
(1)  157/    C268 :                             ;ROL emu_ptr+1,X                ;6
(1)  157/    C268 :                             ;STA emu_ptr,X                  ;4                              
(1)  157/    C268 :                             ;LDA emu_ptr+1,X                ;4
(1)  157/    C268 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  157/    C268 :                             ;STA emu_ptr+1,X                ;4
(1)  157/    C268 :                             ;JMP (emu_ptr2,X)               ;6
(1)  157/    C268 :                             
(1)  157/    C268 :                             ;Method 3 - 30 cycles
(1)  157/    C268 :                             ;TXA                                                    ;2
(1)  157/    C268 :                             ;TAY                                                    ;2
(1)  157/    C268 :                             ;LDA (emu_PC,X)                                 ;6
(1)  157/    C268 :                             ;ASL                                                    ;2
(1)  157/    C268 :                             ;BCS upper                                              ;2
(1)  157/    C268 :                             ;lower:
(1)  157/    C268 :                             ;       ASL                                                     ;2
(1)  157/    C268 :                             ;       TAX                                                     ;2
(1)  157/    C268 :                             ;       BCS upper_lower                         ;2
(1)  157/    C268 :                             ;       lower_lower:
(1)  157/    C268 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  157/    C268 :                             ;       upper_lower:
(1)  157/    C268 :                             ;               JMP (JUMP_TABLE2,X)
(1)  157/    C268 :                             ;upper:
(1)  157/    C268 :                             ;       ASL
(1)  157/    C268 :                             ;       TAX
(1)  157/    C268 :                             ;       BCS upper_upper
(1)  157/    C268 :                             ;       lower_upper:
(1)  157/    C268 :                             ;               JMP (JUMP_TABLE3,X)
(1)  157/    C268 :                             ;       upper_upper:
(1)  157/    C268 :                             ;               JMP (JUMP_TABLE4,X)
(1)  157/    C268 :                             ;After jump:
(1)  157/    C268 :                             ;TYA                                                    ;2
(1)  157/    C268 :                             ;TAX                                                    ;2
(1)  157/    C268 :                             
(1)  157/    C268 :                             ;Method 4 - 28 cycles
(1)  157/    C268 :                             ;LDA (emu_PC,X)                 ;6
(1)  157/    C268 :                             ;TAY                                    ;2
(1)  157/    C268 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  157/    C268 :                             ;PHA                                    ;3
(1)  157/    C268 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  157/    C268 :                             ;PHA                                    ;3
(1)  157/    C268 :                             ;RTS                                    ;6
(1)  157/    C268 :                             
(1)  157/    C268 :                             ;Method 5 - 30 cycles
(1)  157/    C268 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  157/    C26A : A8                          TAY                                             ;2
(1)  157/    C26B : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  157/    C26E : 95 0A                       STA emu_ptr,X                   ;4
(1)  157/    C270 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  157/    C273 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  157/    C275 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  157/    C278 :                                                     
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 52 - 1/5/2022 12:19:0


(1)  158/    C278 :                     
(1)  159/    C278 :                     	;0x1F - NOP
(1)  160/    C278 :                     	NOP_0x1F:
(1)  161/    C278 : (MACRO)             		OP_MACRO 31, "NOP", "IMP", "NOP_0x1F"
(1)  161/    C278 :                             ;TODO
(1)  162/    C278 : (MACRO)             		NEXT_MACRO
(1)  162/    C278 :                                             
(1)  162/    C278 :  (MACRO-2)                  halt
(1)  162/    C278 : 00                          BRK
(1)  162/    C279 : 00                          BRK
(1)  162/    C27A :                             
(1)  162/    C27A :                             ;Method 1 - 60 cycles
(1)  162/    C27A :                             ;Jump table must be page aligned!!!
(1)  162/    C27A :                             ;LDA (emu_PC,X)                 ;6
(1)  162/    C27A :                             ;ASL                                    ;2
(1)  162/    C27A :                             ;STA emu_ptr,X                  ;4
(1)  162/    C27A :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  162/    C27A :                             ;ADC #0                                 ;2
(1)  162/    C27A :                             ;STA emu_ptr+1,X                ;4
(1)  162/    C27A :                             ;LDA (emu_ptr,X)                ;6
(1)  162/    C27A :                             ;STA emu_ptr2,X                 ;4
(1)  162/    C27A :                             ;INC emu_ptr,X                  ;6
(1)  162/    C27A :                             ;BCC .skip                              ;2
(1)  162/    C27A :                             ;       INC emu_ptr+1,X         ;6
(1)  162/    C27A :                             ;.skip:
(1)  162/    C27A :                             ;LDA (emu_ptr,X)                ;6
(1)  162/    C27A :                             ;STA emu_ptr2+1,X               ;4
(1)  162/    C27A :                             ;JMP (emu_ptr2,X)               ;6
(1)  162/    C27A :                             
(1)  162/    C27A :                             ;Method 2 - 46 cycles
(1)  162/    C27A :                             ;Jump table must be page aligned!!!
(1)  162/    C27A :                             ;LDA (emu_PC,X)                 ;6
(1)  162/    C27A :                             ;STZ emu_ptr+1,X                ;4
(1)  162/    C27A :                             ;ASL                                    ;2
(1)  162/    C27A :                             ;ROL emu_ptr+1,X                ;6
(1)  162/    C27A :                             ;ASL                                    ;2
(1)  162/    C27A :                             ;ROL emu_ptr+1,X                ;6
(1)  162/    C27A :                             ;STA emu_ptr,X                  ;4                              
(1)  162/    C27A :                             ;LDA emu_ptr+1,X                ;4
(1)  162/    C27A :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  162/    C27A :                             ;STA emu_ptr+1,X                ;4
(1)  162/    C27A :                             ;JMP (emu_ptr2,X)               ;6
(1)  162/    C27A :                             
(1)  162/    C27A :                             ;Method 3 - 30 cycles
(1)  162/    C27A :                             ;TXA                                                    ;2
(1)  162/    C27A :                             ;TAY                                                    ;2
(1)  162/    C27A :                             ;LDA (emu_PC,X)                                 ;6
(1)  162/    C27A :                             ;ASL                                                    ;2
(1)  162/    C27A :                             ;BCS upper                                              ;2
(1)  162/    C27A :                             ;lower:
(1)  162/    C27A :                             ;       ASL                                                     ;2
(1)  162/    C27A :                             ;       TAX                                                     ;2
(1)  162/    C27A :                             ;       BCS upper_lower                         ;2
(1)  162/    C27A :                             ;       lower_lower:
(1)  162/    C27A :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  162/    C27A :                             ;       upper_lower:
(1)  162/    C27A :                             ;               JMP (JUMP_TABLE2,X)
(1)  162/    C27A :                             ;upper:
(1)  162/    C27A :                             ;       ASL
(1)  162/    C27A :                             ;       TAX
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 53 - 1/5/2022 12:19:0


(1)  162/    C27A :                             ;       BCS upper_upper
(1)  162/    C27A :                             ;       lower_upper:
(1)  162/    C27A :                             ;               JMP (JUMP_TABLE3,X)
(1)  162/    C27A :                             ;       upper_upper:
(1)  162/    C27A :                             ;               JMP (JUMP_TABLE4,X)
(1)  162/    C27A :                             ;After jump:
(1)  162/    C27A :                             ;TYA                                                    ;2
(1)  162/    C27A :                             ;TAX                                                    ;2
(1)  162/    C27A :                             
(1)  162/    C27A :                             ;Method 4 - 28 cycles
(1)  162/    C27A :                             ;LDA (emu_PC,X)                 ;6
(1)  162/    C27A :                             ;TAY                                    ;2
(1)  162/    C27A :                             ;LDA JUMP_TABLE,Y               ;4
(1)  162/    C27A :                             ;PHA                                    ;3
(1)  162/    C27A :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  162/    C27A :                             ;PHA                                    ;3
(1)  162/    C27A :                             ;RTS                                    ;6
(1)  162/    C27A :                             
(1)  162/    C27A :                             ;Method 5 - 30 cycles
(1)  162/    C27A : A1 02                       LDA (emu_PC,X)                  ;6
(1)  162/    C27C : A8                          TAY                                             ;2
(1)  162/    C27D : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  162/    C280 : 95 0A                       STA emu_ptr,X                   ;4
(1)  162/    C282 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  162/    C285 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  162/    C287 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  162/    C28A :                                                     
(1)  163/    C28A :                     
(1)  164/    C28A :                     	;0x20 - JSR ABS
(1)  165/    C28A :                     	JSR_ABS:
(1)  166/    C28A : (MACRO)             		OP_MACRO 32, "JSR", "ABS", "JSR_ABS"
(1)  166/    C28A :                             ;TODO
(1)  167/    C28A : (MACRO)             		NEXT_MACRO
(1)  167/    C28A :                                             
(1)  167/    C28A :  (MACRO-2)                  halt
(1)  167/    C28A : 00                          BRK
(1)  167/    C28B : 00                          BRK
(1)  167/    C28C :                             
(1)  167/    C28C :                             ;Method 1 - 60 cycles
(1)  167/    C28C :                             ;Jump table must be page aligned!!!
(1)  167/    C28C :                             ;LDA (emu_PC,X)                 ;6
(1)  167/    C28C :                             ;ASL                                    ;2
(1)  167/    C28C :                             ;STA emu_ptr,X                  ;4
(1)  167/    C28C :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  167/    C28C :                             ;ADC #0                                 ;2
(1)  167/    C28C :                             ;STA emu_ptr+1,X                ;4
(1)  167/    C28C :                             ;LDA (emu_ptr,X)                ;6
(1)  167/    C28C :                             ;STA emu_ptr2,X                 ;4
(1)  167/    C28C :                             ;INC emu_ptr,X                  ;6
(1)  167/    C28C :                             ;BCC .skip                              ;2
(1)  167/    C28C :                             ;       INC emu_ptr+1,X         ;6
(1)  167/    C28C :                             ;.skip:
(1)  167/    C28C :                             ;LDA (emu_ptr,X)                ;6
(1)  167/    C28C :                             ;STA emu_ptr2+1,X               ;4
(1)  167/    C28C :                             ;JMP (emu_ptr2,X)               ;6
(1)  167/    C28C :                             
(1)  167/    C28C :                             ;Method 2 - 46 cycles
(1)  167/    C28C :                             ;Jump table must be page aligned!!!
(1)  167/    C28C :                             ;LDA (emu_PC,X)                 ;6
(1)  167/    C28C :                             ;STZ emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 54 - 1/5/2022 12:19:0


(1)  167/    C28C :                             ;ASL                                    ;2
(1)  167/    C28C :                             ;ROL emu_ptr+1,X                ;6
(1)  167/    C28C :                             ;ASL                                    ;2
(1)  167/    C28C :                             ;ROL emu_ptr+1,X                ;6
(1)  167/    C28C :                             ;STA emu_ptr,X                  ;4                              
(1)  167/    C28C :                             ;LDA emu_ptr+1,X                ;4
(1)  167/    C28C :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  167/    C28C :                             ;STA emu_ptr+1,X                ;4
(1)  167/    C28C :                             ;JMP (emu_ptr2,X)               ;6
(1)  167/    C28C :                             
(1)  167/    C28C :                             ;Method 3 - 30 cycles
(1)  167/    C28C :                             ;TXA                                                    ;2
(1)  167/    C28C :                             ;TAY                                                    ;2
(1)  167/    C28C :                             ;LDA (emu_PC,X)                                 ;6
(1)  167/    C28C :                             ;ASL                                                    ;2
(1)  167/    C28C :                             ;BCS upper                                              ;2
(1)  167/    C28C :                             ;lower:
(1)  167/    C28C :                             ;       ASL                                                     ;2
(1)  167/    C28C :                             ;       TAX                                                     ;2
(1)  167/    C28C :                             ;       BCS upper_lower                         ;2
(1)  167/    C28C :                             ;       lower_lower:
(1)  167/    C28C :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  167/    C28C :                             ;       upper_lower:
(1)  167/    C28C :                             ;               JMP (JUMP_TABLE2,X)
(1)  167/    C28C :                             ;upper:
(1)  167/    C28C :                             ;       ASL
(1)  167/    C28C :                             ;       TAX
(1)  167/    C28C :                             ;       BCS upper_upper
(1)  167/    C28C :                             ;       lower_upper:
(1)  167/    C28C :                             ;               JMP (JUMP_TABLE3,X)
(1)  167/    C28C :                             ;       upper_upper:
(1)  167/    C28C :                             ;               JMP (JUMP_TABLE4,X)
(1)  167/    C28C :                             ;After jump:
(1)  167/    C28C :                             ;TYA                                                    ;2
(1)  167/    C28C :                             ;TAX                                                    ;2
(1)  167/    C28C :                             
(1)  167/    C28C :                             ;Method 4 - 28 cycles
(1)  167/    C28C :                             ;LDA (emu_PC,X)                 ;6
(1)  167/    C28C :                             ;TAY                                    ;2
(1)  167/    C28C :                             ;LDA JUMP_TABLE,Y               ;4
(1)  167/    C28C :                             ;PHA                                    ;3
(1)  167/    C28C :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  167/    C28C :                             ;PHA                                    ;3
(1)  167/    C28C :                             ;RTS                                    ;6
(1)  167/    C28C :                             
(1)  167/    C28C :                             ;Method 5 - 30 cycles
(1)  167/    C28C : A1 02                       LDA (emu_PC,X)                  ;6
(1)  167/    C28E : A8                          TAY                                             ;2
(1)  167/    C28F : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  167/    C292 : 95 0A                       STA emu_ptr,X                   ;4
(1)  167/    C294 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  167/    C297 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  167/    C299 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  167/    C29C :                                                     
(1)  168/    C29C :                     
(1)  169/    C29C :                     	;0x21 - AND IX
(1)  170/    C29C :                     	AND_IX:
(1)  171/    C29C : (MACRO)             		OP_MACRO 33, "AND", "IX", "AND_IX"
(1)  171/    C29C :                             ;TODO
(1)  172/    C29C : (MACRO)             		NEXT_MACRO
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 55 - 1/5/2022 12:19:0


(1)  172/    C29C :                                             
(1)  172/    C29C :  (MACRO-2)                  halt
(1)  172/    C29C : 00                          BRK
(1)  172/    C29D : 00                          BRK
(1)  172/    C29E :                             
(1)  172/    C29E :                             ;Method 1 - 60 cycles
(1)  172/    C29E :                             ;Jump table must be page aligned!!!
(1)  172/    C29E :                             ;LDA (emu_PC,X)                 ;6
(1)  172/    C29E :                             ;ASL                                    ;2
(1)  172/    C29E :                             ;STA emu_ptr,X                  ;4
(1)  172/    C29E :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  172/    C29E :                             ;ADC #0                                 ;2
(1)  172/    C29E :                             ;STA emu_ptr+1,X                ;4
(1)  172/    C29E :                             ;LDA (emu_ptr,X)                ;6
(1)  172/    C29E :                             ;STA emu_ptr2,X                 ;4
(1)  172/    C29E :                             ;INC emu_ptr,X                  ;6
(1)  172/    C29E :                             ;BCC .skip                              ;2
(1)  172/    C29E :                             ;       INC emu_ptr+1,X         ;6
(1)  172/    C29E :                             ;.skip:
(1)  172/    C29E :                             ;LDA (emu_ptr,X)                ;6
(1)  172/    C29E :                             ;STA emu_ptr2+1,X               ;4
(1)  172/    C29E :                             ;JMP (emu_ptr2,X)               ;6
(1)  172/    C29E :                             
(1)  172/    C29E :                             ;Method 2 - 46 cycles
(1)  172/    C29E :                             ;Jump table must be page aligned!!!
(1)  172/    C29E :                             ;LDA (emu_PC,X)                 ;6
(1)  172/    C29E :                             ;STZ emu_ptr+1,X                ;4
(1)  172/    C29E :                             ;ASL                                    ;2
(1)  172/    C29E :                             ;ROL emu_ptr+1,X                ;6
(1)  172/    C29E :                             ;ASL                                    ;2
(1)  172/    C29E :                             ;ROL emu_ptr+1,X                ;6
(1)  172/    C29E :                             ;STA emu_ptr,X                  ;4                              
(1)  172/    C29E :                             ;LDA emu_ptr+1,X                ;4
(1)  172/    C29E :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  172/    C29E :                             ;STA emu_ptr+1,X                ;4
(1)  172/    C29E :                             ;JMP (emu_ptr2,X)               ;6
(1)  172/    C29E :                             
(1)  172/    C29E :                             ;Method 3 - 30 cycles
(1)  172/    C29E :                             ;TXA                                                    ;2
(1)  172/    C29E :                             ;TAY                                                    ;2
(1)  172/    C29E :                             ;LDA (emu_PC,X)                                 ;6
(1)  172/    C29E :                             ;ASL                                                    ;2
(1)  172/    C29E :                             ;BCS upper                                              ;2
(1)  172/    C29E :                             ;lower:
(1)  172/    C29E :                             ;       ASL                                                     ;2
(1)  172/    C29E :                             ;       TAX                                                     ;2
(1)  172/    C29E :                             ;       BCS upper_lower                         ;2
(1)  172/    C29E :                             ;       lower_lower:
(1)  172/    C29E :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  172/    C29E :                             ;       upper_lower:
(1)  172/    C29E :                             ;               JMP (JUMP_TABLE2,X)
(1)  172/    C29E :                             ;upper:
(1)  172/    C29E :                             ;       ASL
(1)  172/    C29E :                             ;       TAX
(1)  172/    C29E :                             ;       BCS upper_upper
(1)  172/    C29E :                             ;       lower_upper:
(1)  172/    C29E :                             ;               JMP (JUMP_TABLE3,X)
(1)  172/    C29E :                             ;       upper_upper:
(1)  172/    C29E :                             ;               JMP (JUMP_TABLE4,X)
(1)  172/    C29E :                             ;After jump:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 56 - 1/5/2022 12:19:0


(1)  172/    C29E :                             ;TYA                                                    ;2
(1)  172/    C29E :                             ;TAX                                                    ;2
(1)  172/    C29E :                             
(1)  172/    C29E :                             ;Method 4 - 28 cycles
(1)  172/    C29E :                             ;LDA (emu_PC,X)                 ;6
(1)  172/    C29E :                             ;TAY                                    ;2
(1)  172/    C29E :                             ;LDA JUMP_TABLE,Y               ;4
(1)  172/    C29E :                             ;PHA                                    ;3
(1)  172/    C29E :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  172/    C29E :                             ;PHA                                    ;3
(1)  172/    C29E :                             ;RTS                                    ;6
(1)  172/    C29E :                             
(1)  172/    C29E :                             ;Method 5 - 30 cycles
(1)  172/    C29E : A1 02                       LDA (emu_PC,X)                  ;6
(1)  172/    C2A0 : A8                          TAY                                             ;2
(1)  172/    C2A1 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  172/    C2A4 : 95 0A                       STA emu_ptr,X                   ;4
(1)  172/    C2A6 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  172/    C2A9 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  172/    C2AB : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  172/    C2AE :                                                     
(1)  173/    C2AE :                     
(1)  174/    C2AE :                     	;0x22 - NOP
(1)  175/    C2AE :                     	NOP_0x22:
(1)  176/    C2AE : (MACRO)             		OP_MACRO 34, "NOP", "IMP", "NOP_0x22"
(1)  176/    C2AE :                             ;TODO
(1)  177/    C2AE : (MACRO)             		NEXT_MACRO
(1)  177/    C2AE :                                             
(1)  177/    C2AE :  (MACRO-2)                  halt
(1)  177/    C2AE : 00                          BRK
(1)  177/    C2AF : 00                          BRK
(1)  177/    C2B0 :                             
(1)  177/    C2B0 :                             ;Method 1 - 60 cycles
(1)  177/    C2B0 :                             ;Jump table must be page aligned!!!
(1)  177/    C2B0 :                             ;LDA (emu_PC,X)                 ;6
(1)  177/    C2B0 :                             ;ASL                                    ;2
(1)  177/    C2B0 :                             ;STA emu_ptr,X                  ;4
(1)  177/    C2B0 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  177/    C2B0 :                             ;ADC #0                                 ;2
(1)  177/    C2B0 :                             ;STA emu_ptr+1,X                ;4
(1)  177/    C2B0 :                             ;LDA (emu_ptr,X)                ;6
(1)  177/    C2B0 :                             ;STA emu_ptr2,X                 ;4
(1)  177/    C2B0 :                             ;INC emu_ptr,X                  ;6
(1)  177/    C2B0 :                             ;BCC .skip                              ;2
(1)  177/    C2B0 :                             ;       INC emu_ptr+1,X         ;6
(1)  177/    C2B0 :                             ;.skip:
(1)  177/    C2B0 :                             ;LDA (emu_ptr,X)                ;6
(1)  177/    C2B0 :                             ;STA emu_ptr2+1,X               ;4
(1)  177/    C2B0 :                             ;JMP (emu_ptr2,X)               ;6
(1)  177/    C2B0 :                             
(1)  177/    C2B0 :                             ;Method 2 - 46 cycles
(1)  177/    C2B0 :                             ;Jump table must be page aligned!!!
(1)  177/    C2B0 :                             ;LDA (emu_PC,X)                 ;6
(1)  177/    C2B0 :                             ;STZ emu_ptr+1,X                ;4
(1)  177/    C2B0 :                             ;ASL                                    ;2
(1)  177/    C2B0 :                             ;ROL emu_ptr+1,X                ;6
(1)  177/    C2B0 :                             ;ASL                                    ;2
(1)  177/    C2B0 :                             ;ROL emu_ptr+1,X                ;6
(1)  177/    C2B0 :                             ;STA emu_ptr,X                  ;4                              
(1)  177/    C2B0 :                             ;LDA emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 57 - 1/5/2022 12:19:0


(1)  177/    C2B0 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  177/    C2B0 :                             ;STA emu_ptr+1,X                ;4
(1)  177/    C2B0 :                             ;JMP (emu_ptr2,X)               ;6
(1)  177/    C2B0 :                             
(1)  177/    C2B0 :                             ;Method 3 - 30 cycles
(1)  177/    C2B0 :                             ;TXA                                                    ;2
(1)  177/    C2B0 :                             ;TAY                                                    ;2
(1)  177/    C2B0 :                             ;LDA (emu_PC,X)                                 ;6
(1)  177/    C2B0 :                             ;ASL                                                    ;2
(1)  177/    C2B0 :                             ;BCS upper                                              ;2
(1)  177/    C2B0 :                             ;lower:
(1)  177/    C2B0 :                             ;       ASL                                                     ;2
(1)  177/    C2B0 :                             ;       TAX                                                     ;2
(1)  177/    C2B0 :                             ;       BCS upper_lower                         ;2
(1)  177/    C2B0 :                             ;       lower_lower:
(1)  177/    C2B0 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  177/    C2B0 :                             ;       upper_lower:
(1)  177/    C2B0 :                             ;               JMP (JUMP_TABLE2,X)
(1)  177/    C2B0 :                             ;upper:
(1)  177/    C2B0 :                             ;       ASL
(1)  177/    C2B0 :                             ;       TAX
(1)  177/    C2B0 :                             ;       BCS upper_upper
(1)  177/    C2B0 :                             ;       lower_upper:
(1)  177/    C2B0 :                             ;               JMP (JUMP_TABLE3,X)
(1)  177/    C2B0 :                             ;       upper_upper:
(1)  177/    C2B0 :                             ;               JMP (JUMP_TABLE4,X)
(1)  177/    C2B0 :                             ;After jump:
(1)  177/    C2B0 :                             ;TYA                                                    ;2
(1)  177/    C2B0 :                             ;TAX                                                    ;2
(1)  177/    C2B0 :                             
(1)  177/    C2B0 :                             ;Method 4 - 28 cycles
(1)  177/    C2B0 :                             ;LDA (emu_PC,X)                 ;6
(1)  177/    C2B0 :                             ;TAY                                    ;2
(1)  177/    C2B0 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  177/    C2B0 :                             ;PHA                                    ;3
(1)  177/    C2B0 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  177/    C2B0 :                             ;PHA                                    ;3
(1)  177/    C2B0 :                             ;RTS                                    ;6
(1)  177/    C2B0 :                             
(1)  177/    C2B0 :                             ;Method 5 - 30 cycles
(1)  177/    C2B0 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  177/    C2B2 : A8                          TAY                                             ;2
(1)  177/    C2B3 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  177/    C2B6 : 95 0A                       STA emu_ptr,X                   ;4
(1)  177/    C2B8 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  177/    C2BB : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  177/    C2BD : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  177/    C2C0 :                                                     
(1)  178/    C2C0 :                     
(1)  179/    C2C0 :                     	;0x23 - NOP
(1)  180/    C2C0 :                     	NOP_0x23:
(1)  181/    C2C0 : (MACRO)             		OP_MACRO 35, "NOP", "IMP", "NOP_0x23"
(1)  181/    C2C0 :                             ;TODO
(1)  182/    C2C0 : (MACRO)             		NEXT_MACRO
(1)  182/    C2C0 :                                             
(1)  182/    C2C0 :  (MACRO-2)                  halt
(1)  182/    C2C0 : 00                          BRK
(1)  182/    C2C1 : 00                          BRK
(1)  182/    C2C2 :                             
(1)  182/    C2C2 :                             ;Method 1 - 60 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 58 - 1/5/2022 12:19:0


(1)  182/    C2C2 :                             ;Jump table must be page aligned!!!
(1)  182/    C2C2 :                             ;LDA (emu_PC,X)                 ;6
(1)  182/    C2C2 :                             ;ASL                                    ;2
(1)  182/    C2C2 :                             ;STA emu_ptr,X                  ;4
(1)  182/    C2C2 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  182/    C2C2 :                             ;ADC #0                                 ;2
(1)  182/    C2C2 :                             ;STA emu_ptr+1,X                ;4
(1)  182/    C2C2 :                             ;LDA (emu_ptr,X)                ;6
(1)  182/    C2C2 :                             ;STA emu_ptr2,X                 ;4
(1)  182/    C2C2 :                             ;INC emu_ptr,X                  ;6
(1)  182/    C2C2 :                             ;BCC .skip                              ;2
(1)  182/    C2C2 :                             ;       INC emu_ptr+1,X         ;6
(1)  182/    C2C2 :                             ;.skip:
(1)  182/    C2C2 :                             ;LDA (emu_ptr,X)                ;6
(1)  182/    C2C2 :                             ;STA emu_ptr2+1,X               ;4
(1)  182/    C2C2 :                             ;JMP (emu_ptr2,X)               ;6
(1)  182/    C2C2 :                             
(1)  182/    C2C2 :                             ;Method 2 - 46 cycles
(1)  182/    C2C2 :                             ;Jump table must be page aligned!!!
(1)  182/    C2C2 :                             ;LDA (emu_PC,X)                 ;6
(1)  182/    C2C2 :                             ;STZ emu_ptr+1,X                ;4
(1)  182/    C2C2 :                             ;ASL                                    ;2
(1)  182/    C2C2 :                             ;ROL emu_ptr+1,X                ;6
(1)  182/    C2C2 :                             ;ASL                                    ;2
(1)  182/    C2C2 :                             ;ROL emu_ptr+1,X                ;6
(1)  182/    C2C2 :                             ;STA emu_ptr,X                  ;4                              
(1)  182/    C2C2 :                             ;LDA emu_ptr+1,X                ;4
(1)  182/    C2C2 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  182/    C2C2 :                             ;STA emu_ptr+1,X                ;4
(1)  182/    C2C2 :                             ;JMP (emu_ptr2,X)               ;6
(1)  182/    C2C2 :                             
(1)  182/    C2C2 :                             ;Method 3 - 30 cycles
(1)  182/    C2C2 :                             ;TXA                                                    ;2
(1)  182/    C2C2 :                             ;TAY                                                    ;2
(1)  182/    C2C2 :                             ;LDA (emu_PC,X)                                 ;6
(1)  182/    C2C2 :                             ;ASL                                                    ;2
(1)  182/    C2C2 :                             ;BCS upper                                              ;2
(1)  182/    C2C2 :                             ;lower:
(1)  182/    C2C2 :                             ;       ASL                                                     ;2
(1)  182/    C2C2 :                             ;       TAX                                                     ;2
(1)  182/    C2C2 :                             ;       BCS upper_lower                         ;2
(1)  182/    C2C2 :                             ;       lower_lower:
(1)  182/    C2C2 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  182/    C2C2 :                             ;       upper_lower:
(1)  182/    C2C2 :                             ;               JMP (JUMP_TABLE2,X)
(1)  182/    C2C2 :                             ;upper:
(1)  182/    C2C2 :                             ;       ASL
(1)  182/    C2C2 :                             ;       TAX
(1)  182/    C2C2 :                             ;       BCS upper_upper
(1)  182/    C2C2 :                             ;       lower_upper:
(1)  182/    C2C2 :                             ;               JMP (JUMP_TABLE3,X)
(1)  182/    C2C2 :                             ;       upper_upper:
(1)  182/    C2C2 :                             ;               JMP (JUMP_TABLE4,X)
(1)  182/    C2C2 :                             ;After jump:
(1)  182/    C2C2 :                             ;TYA                                                    ;2
(1)  182/    C2C2 :                             ;TAX                                                    ;2
(1)  182/    C2C2 :                             
(1)  182/    C2C2 :                             ;Method 4 - 28 cycles
(1)  182/    C2C2 :                             ;LDA (emu_PC,X)                 ;6
(1)  182/    C2C2 :                             ;TAY                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 59 - 1/5/2022 12:19:0


(1)  182/    C2C2 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  182/    C2C2 :                             ;PHA                                    ;3
(1)  182/    C2C2 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  182/    C2C2 :                             ;PHA                                    ;3
(1)  182/    C2C2 :                             ;RTS                                    ;6
(1)  182/    C2C2 :                             
(1)  182/    C2C2 :                             ;Method 5 - 30 cycles
(1)  182/    C2C2 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  182/    C2C4 : A8                          TAY                                             ;2
(1)  182/    C2C5 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  182/    C2C8 : 95 0A                       STA emu_ptr,X                   ;4
(1)  182/    C2CA : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  182/    C2CD : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  182/    C2CF : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  182/    C2D2 :                                                     
(1)  183/    C2D2 :                     
(1)  184/    C2D2 :                     	;0x24 - BIT ZP
(1)  185/    C2D2 :                     	BIT_ZP:
(1)  186/    C2D2 : (MACRO)             		OP_MACRO 36, "BIT", "ZP", "BIT_ZP"
(1)  186/    C2D2 :                             ;TODO
(1)  187/    C2D2 : (MACRO)             		NEXT_MACRO
(1)  187/    C2D2 :                                             
(1)  187/    C2D2 :  (MACRO-2)                  halt
(1)  187/    C2D2 : 00                          BRK
(1)  187/    C2D3 : 00                          BRK
(1)  187/    C2D4 :                             
(1)  187/    C2D4 :                             ;Method 1 - 60 cycles
(1)  187/    C2D4 :                             ;Jump table must be page aligned!!!
(1)  187/    C2D4 :                             ;LDA (emu_PC,X)                 ;6
(1)  187/    C2D4 :                             ;ASL                                    ;2
(1)  187/    C2D4 :                             ;STA emu_ptr,X                  ;4
(1)  187/    C2D4 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  187/    C2D4 :                             ;ADC #0                                 ;2
(1)  187/    C2D4 :                             ;STA emu_ptr+1,X                ;4
(1)  187/    C2D4 :                             ;LDA (emu_ptr,X)                ;6
(1)  187/    C2D4 :                             ;STA emu_ptr2,X                 ;4
(1)  187/    C2D4 :                             ;INC emu_ptr,X                  ;6
(1)  187/    C2D4 :                             ;BCC .skip                              ;2
(1)  187/    C2D4 :                             ;       INC emu_ptr+1,X         ;6
(1)  187/    C2D4 :                             ;.skip:
(1)  187/    C2D4 :                             ;LDA (emu_ptr,X)                ;6
(1)  187/    C2D4 :                             ;STA emu_ptr2+1,X               ;4
(1)  187/    C2D4 :                             ;JMP (emu_ptr2,X)               ;6
(1)  187/    C2D4 :                             
(1)  187/    C2D4 :                             ;Method 2 - 46 cycles
(1)  187/    C2D4 :                             ;Jump table must be page aligned!!!
(1)  187/    C2D4 :                             ;LDA (emu_PC,X)                 ;6
(1)  187/    C2D4 :                             ;STZ emu_ptr+1,X                ;4
(1)  187/    C2D4 :                             ;ASL                                    ;2
(1)  187/    C2D4 :                             ;ROL emu_ptr+1,X                ;6
(1)  187/    C2D4 :                             ;ASL                                    ;2
(1)  187/    C2D4 :                             ;ROL emu_ptr+1,X                ;6
(1)  187/    C2D4 :                             ;STA emu_ptr,X                  ;4                              
(1)  187/    C2D4 :                             ;LDA emu_ptr+1,X                ;4
(1)  187/    C2D4 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  187/    C2D4 :                             ;STA emu_ptr+1,X                ;4
(1)  187/    C2D4 :                             ;JMP (emu_ptr2,X)               ;6
(1)  187/    C2D4 :                             
(1)  187/    C2D4 :                             ;Method 3 - 30 cycles
(1)  187/    C2D4 :                             ;TXA                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 60 - 1/5/2022 12:19:0


(1)  187/    C2D4 :                             ;TAY                                                    ;2
(1)  187/    C2D4 :                             ;LDA (emu_PC,X)                                 ;6
(1)  187/    C2D4 :                             ;ASL                                                    ;2
(1)  187/    C2D4 :                             ;BCS upper                                              ;2
(1)  187/    C2D4 :                             ;lower:
(1)  187/    C2D4 :                             ;       ASL                                                     ;2
(1)  187/    C2D4 :                             ;       TAX                                                     ;2
(1)  187/    C2D4 :                             ;       BCS upper_lower                         ;2
(1)  187/    C2D4 :                             ;       lower_lower:
(1)  187/    C2D4 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  187/    C2D4 :                             ;       upper_lower:
(1)  187/    C2D4 :                             ;               JMP (JUMP_TABLE2,X)
(1)  187/    C2D4 :                             ;upper:
(1)  187/    C2D4 :                             ;       ASL
(1)  187/    C2D4 :                             ;       TAX
(1)  187/    C2D4 :                             ;       BCS upper_upper
(1)  187/    C2D4 :                             ;       lower_upper:
(1)  187/    C2D4 :                             ;               JMP (JUMP_TABLE3,X)
(1)  187/    C2D4 :                             ;       upper_upper:
(1)  187/    C2D4 :                             ;               JMP (JUMP_TABLE4,X)
(1)  187/    C2D4 :                             ;After jump:
(1)  187/    C2D4 :                             ;TYA                                                    ;2
(1)  187/    C2D4 :                             ;TAX                                                    ;2
(1)  187/    C2D4 :                             
(1)  187/    C2D4 :                             ;Method 4 - 28 cycles
(1)  187/    C2D4 :                             ;LDA (emu_PC,X)                 ;6
(1)  187/    C2D4 :                             ;TAY                                    ;2
(1)  187/    C2D4 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  187/    C2D4 :                             ;PHA                                    ;3
(1)  187/    C2D4 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  187/    C2D4 :                             ;PHA                                    ;3
(1)  187/    C2D4 :                             ;RTS                                    ;6
(1)  187/    C2D4 :                             
(1)  187/    C2D4 :                             ;Method 5 - 30 cycles
(1)  187/    C2D4 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  187/    C2D6 : A8                          TAY                                             ;2
(1)  187/    C2D7 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  187/    C2DA : 95 0A                       STA emu_ptr,X                   ;4
(1)  187/    C2DC : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  187/    C2DF : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  187/    C2E1 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  187/    C2E4 :                                                     
(1)  188/    C2E4 :                     
(1)  189/    C2E4 :                     	;0x25 - AND ZP
(1)  190/    C2E4 :                     	AND_ZP:
(1)  191/    C2E4 : (MACRO)             		OP_MACRO 37, "AND", "ZP", "AND_ZP"
(1)  191/    C2E4 :                             ;TODO
(1)  192/    C2E4 : (MACRO)             		NEXT_MACRO
(1)  192/    C2E4 :                                             
(1)  192/    C2E4 :  (MACRO-2)                  halt
(1)  192/    C2E4 : 00                          BRK
(1)  192/    C2E5 : 00                          BRK
(1)  192/    C2E6 :                             
(1)  192/    C2E6 :                             ;Method 1 - 60 cycles
(1)  192/    C2E6 :                             ;Jump table must be page aligned!!!
(1)  192/    C2E6 :                             ;LDA (emu_PC,X)                 ;6
(1)  192/    C2E6 :                             ;ASL                                    ;2
(1)  192/    C2E6 :                             ;STA emu_ptr,X                  ;4
(1)  192/    C2E6 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  192/    C2E6 :                             ;ADC #0                                 ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 61 - 1/5/2022 12:19:0


(1)  192/    C2E6 :                             ;STA emu_ptr+1,X                ;4
(1)  192/    C2E6 :                             ;LDA (emu_ptr,X)                ;6
(1)  192/    C2E6 :                             ;STA emu_ptr2,X                 ;4
(1)  192/    C2E6 :                             ;INC emu_ptr,X                  ;6
(1)  192/    C2E6 :                             ;BCC .skip                              ;2
(1)  192/    C2E6 :                             ;       INC emu_ptr+1,X         ;6
(1)  192/    C2E6 :                             ;.skip:
(1)  192/    C2E6 :                             ;LDA (emu_ptr,X)                ;6
(1)  192/    C2E6 :                             ;STA emu_ptr2+1,X               ;4
(1)  192/    C2E6 :                             ;JMP (emu_ptr2,X)               ;6
(1)  192/    C2E6 :                             
(1)  192/    C2E6 :                             ;Method 2 - 46 cycles
(1)  192/    C2E6 :                             ;Jump table must be page aligned!!!
(1)  192/    C2E6 :                             ;LDA (emu_PC,X)                 ;6
(1)  192/    C2E6 :                             ;STZ emu_ptr+1,X                ;4
(1)  192/    C2E6 :                             ;ASL                                    ;2
(1)  192/    C2E6 :                             ;ROL emu_ptr+1,X                ;6
(1)  192/    C2E6 :                             ;ASL                                    ;2
(1)  192/    C2E6 :                             ;ROL emu_ptr+1,X                ;6
(1)  192/    C2E6 :                             ;STA emu_ptr,X                  ;4                              
(1)  192/    C2E6 :                             ;LDA emu_ptr+1,X                ;4
(1)  192/    C2E6 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  192/    C2E6 :                             ;STA emu_ptr+1,X                ;4
(1)  192/    C2E6 :                             ;JMP (emu_ptr2,X)               ;6
(1)  192/    C2E6 :                             
(1)  192/    C2E6 :                             ;Method 3 - 30 cycles
(1)  192/    C2E6 :                             ;TXA                                                    ;2
(1)  192/    C2E6 :                             ;TAY                                                    ;2
(1)  192/    C2E6 :                             ;LDA (emu_PC,X)                                 ;6
(1)  192/    C2E6 :                             ;ASL                                                    ;2
(1)  192/    C2E6 :                             ;BCS upper                                              ;2
(1)  192/    C2E6 :                             ;lower:
(1)  192/    C2E6 :                             ;       ASL                                                     ;2
(1)  192/    C2E6 :                             ;       TAX                                                     ;2
(1)  192/    C2E6 :                             ;       BCS upper_lower                         ;2
(1)  192/    C2E6 :                             ;       lower_lower:
(1)  192/    C2E6 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  192/    C2E6 :                             ;       upper_lower:
(1)  192/    C2E6 :                             ;               JMP (JUMP_TABLE2,X)
(1)  192/    C2E6 :                             ;upper:
(1)  192/    C2E6 :                             ;       ASL
(1)  192/    C2E6 :                             ;       TAX
(1)  192/    C2E6 :                             ;       BCS upper_upper
(1)  192/    C2E6 :                             ;       lower_upper:
(1)  192/    C2E6 :                             ;               JMP (JUMP_TABLE3,X)
(1)  192/    C2E6 :                             ;       upper_upper:
(1)  192/    C2E6 :                             ;               JMP (JUMP_TABLE4,X)
(1)  192/    C2E6 :                             ;After jump:
(1)  192/    C2E6 :                             ;TYA                                                    ;2
(1)  192/    C2E6 :                             ;TAX                                                    ;2
(1)  192/    C2E6 :                             
(1)  192/    C2E6 :                             ;Method 4 - 28 cycles
(1)  192/    C2E6 :                             ;LDA (emu_PC,X)                 ;6
(1)  192/    C2E6 :                             ;TAY                                    ;2
(1)  192/    C2E6 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  192/    C2E6 :                             ;PHA                                    ;3
(1)  192/    C2E6 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  192/    C2E6 :                             ;PHA                                    ;3
(1)  192/    C2E6 :                             ;RTS                                    ;6
(1)  192/    C2E6 :                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 62 - 1/5/2022 12:19:0


(1)  192/    C2E6 :                             ;Method 5 - 30 cycles
(1)  192/    C2E6 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  192/    C2E8 : A8                          TAY                                             ;2
(1)  192/    C2E9 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  192/    C2EC : 95 0A                       STA emu_ptr,X                   ;4
(1)  192/    C2EE : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  192/    C2F1 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  192/    C2F3 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  192/    C2F6 :                                                     
(1)  193/    C2F6 :                     
(1)  194/    C2F6 :                     	;0x26 - ROL ZP
(1)  195/    C2F6 :                     	ROL_ZP:
(1)  196/    C2F6 : (MACRO)             		OP_MACRO 38, "ROL", "ZP", "ROL_ZP"
(1)  196/    C2F6 :                             ;TODO
(1)  197/    C2F6 : (MACRO)             		NEXT_MACRO
(1)  197/    C2F6 :                                             
(1)  197/    C2F6 :  (MACRO-2)                  halt
(1)  197/    C2F6 : 00                          BRK
(1)  197/    C2F7 : 00                          BRK
(1)  197/    C2F8 :                             
(1)  197/    C2F8 :                             ;Method 1 - 60 cycles
(1)  197/    C2F8 :                             ;Jump table must be page aligned!!!
(1)  197/    C2F8 :                             ;LDA (emu_PC,X)                 ;6
(1)  197/    C2F8 :                             ;ASL                                    ;2
(1)  197/    C2F8 :                             ;STA emu_ptr,X                  ;4
(1)  197/    C2F8 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  197/    C2F8 :                             ;ADC #0                                 ;2
(1)  197/    C2F8 :                             ;STA emu_ptr+1,X                ;4
(1)  197/    C2F8 :                             ;LDA (emu_ptr,X)                ;6
(1)  197/    C2F8 :                             ;STA emu_ptr2,X                 ;4
(1)  197/    C2F8 :                             ;INC emu_ptr,X                  ;6
(1)  197/    C2F8 :                             ;BCC .skip                              ;2
(1)  197/    C2F8 :                             ;       INC emu_ptr+1,X         ;6
(1)  197/    C2F8 :                             ;.skip:
(1)  197/    C2F8 :                             ;LDA (emu_ptr,X)                ;6
(1)  197/    C2F8 :                             ;STA emu_ptr2+1,X               ;4
(1)  197/    C2F8 :                             ;JMP (emu_ptr2,X)               ;6
(1)  197/    C2F8 :                             
(1)  197/    C2F8 :                             ;Method 2 - 46 cycles
(1)  197/    C2F8 :                             ;Jump table must be page aligned!!!
(1)  197/    C2F8 :                             ;LDA (emu_PC,X)                 ;6
(1)  197/    C2F8 :                             ;STZ emu_ptr+1,X                ;4
(1)  197/    C2F8 :                             ;ASL                                    ;2
(1)  197/    C2F8 :                             ;ROL emu_ptr+1,X                ;6
(1)  197/    C2F8 :                             ;ASL                                    ;2
(1)  197/    C2F8 :                             ;ROL emu_ptr+1,X                ;6
(1)  197/    C2F8 :                             ;STA emu_ptr,X                  ;4                              
(1)  197/    C2F8 :                             ;LDA emu_ptr+1,X                ;4
(1)  197/    C2F8 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  197/    C2F8 :                             ;STA emu_ptr+1,X                ;4
(1)  197/    C2F8 :                             ;JMP (emu_ptr2,X)               ;6
(1)  197/    C2F8 :                             
(1)  197/    C2F8 :                             ;Method 3 - 30 cycles
(1)  197/    C2F8 :                             ;TXA                                                    ;2
(1)  197/    C2F8 :                             ;TAY                                                    ;2
(1)  197/    C2F8 :                             ;LDA (emu_PC,X)                                 ;6
(1)  197/    C2F8 :                             ;ASL                                                    ;2
(1)  197/    C2F8 :                             ;BCS upper                                              ;2
(1)  197/    C2F8 :                             ;lower:
(1)  197/    C2F8 :                             ;       ASL                                                     ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 63 - 1/5/2022 12:19:0


(1)  197/    C2F8 :                             ;       TAX                                                     ;2
(1)  197/    C2F8 :                             ;       BCS upper_lower                         ;2
(1)  197/    C2F8 :                             ;       lower_lower:
(1)  197/    C2F8 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  197/    C2F8 :                             ;       upper_lower:
(1)  197/    C2F8 :                             ;               JMP (JUMP_TABLE2,X)
(1)  197/    C2F8 :                             ;upper:
(1)  197/    C2F8 :                             ;       ASL
(1)  197/    C2F8 :                             ;       TAX
(1)  197/    C2F8 :                             ;       BCS upper_upper
(1)  197/    C2F8 :                             ;       lower_upper:
(1)  197/    C2F8 :                             ;               JMP (JUMP_TABLE3,X)
(1)  197/    C2F8 :                             ;       upper_upper:
(1)  197/    C2F8 :                             ;               JMP (JUMP_TABLE4,X)
(1)  197/    C2F8 :                             ;After jump:
(1)  197/    C2F8 :                             ;TYA                                                    ;2
(1)  197/    C2F8 :                             ;TAX                                                    ;2
(1)  197/    C2F8 :                             
(1)  197/    C2F8 :                             ;Method 4 - 28 cycles
(1)  197/    C2F8 :                             ;LDA (emu_PC,X)                 ;6
(1)  197/    C2F8 :                             ;TAY                                    ;2
(1)  197/    C2F8 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  197/    C2F8 :                             ;PHA                                    ;3
(1)  197/    C2F8 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  197/    C2F8 :                             ;PHA                                    ;3
(1)  197/    C2F8 :                             ;RTS                                    ;6
(1)  197/    C2F8 :                             
(1)  197/    C2F8 :                             ;Method 5 - 30 cycles
(1)  197/    C2F8 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  197/    C2FA : A8                          TAY                                             ;2
(1)  197/    C2FB : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  197/    C2FE : 95 0A                       STA emu_ptr,X                   ;4
(1)  197/    C300 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  197/    C303 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  197/    C305 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  197/    C308 :                                                     
(1)  198/    C308 :                     
(1)  199/    C308 :                     	;0x27 - NOP
(1)  200/    C308 :                     	NOP_0x27:
(1)  201/    C308 : (MACRO)             		OP_MACRO 39, "NOP", "IMP", "NOP_0x27"
(1)  201/    C308 :                             ;TODO
(1)  202/    C308 : (MACRO)             		NEXT_MACRO
(1)  202/    C308 :                                             
(1)  202/    C308 :  (MACRO-2)                  halt
(1)  202/    C308 : 00                          BRK
(1)  202/    C309 : 00                          BRK
(1)  202/    C30A :                             
(1)  202/    C30A :                             ;Method 1 - 60 cycles
(1)  202/    C30A :                             ;Jump table must be page aligned!!!
(1)  202/    C30A :                             ;LDA (emu_PC,X)                 ;6
(1)  202/    C30A :                             ;ASL                                    ;2
(1)  202/    C30A :                             ;STA emu_ptr,X                  ;4
(1)  202/    C30A :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  202/    C30A :                             ;ADC #0                                 ;2
(1)  202/    C30A :                             ;STA emu_ptr+1,X                ;4
(1)  202/    C30A :                             ;LDA (emu_ptr,X)                ;6
(1)  202/    C30A :                             ;STA emu_ptr2,X                 ;4
(1)  202/    C30A :                             ;INC emu_ptr,X                  ;6
(1)  202/    C30A :                             ;BCC .skip                              ;2
(1)  202/    C30A :                             ;       INC emu_ptr+1,X         ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 64 - 1/5/2022 12:19:0


(1)  202/    C30A :                             ;.skip:
(1)  202/    C30A :                             ;LDA (emu_ptr,X)                ;6
(1)  202/    C30A :                             ;STA emu_ptr2+1,X               ;4
(1)  202/    C30A :                             ;JMP (emu_ptr2,X)               ;6
(1)  202/    C30A :                             
(1)  202/    C30A :                             ;Method 2 - 46 cycles
(1)  202/    C30A :                             ;Jump table must be page aligned!!!
(1)  202/    C30A :                             ;LDA (emu_PC,X)                 ;6
(1)  202/    C30A :                             ;STZ emu_ptr+1,X                ;4
(1)  202/    C30A :                             ;ASL                                    ;2
(1)  202/    C30A :                             ;ROL emu_ptr+1,X                ;6
(1)  202/    C30A :                             ;ASL                                    ;2
(1)  202/    C30A :                             ;ROL emu_ptr+1,X                ;6
(1)  202/    C30A :                             ;STA emu_ptr,X                  ;4                              
(1)  202/    C30A :                             ;LDA emu_ptr+1,X                ;4
(1)  202/    C30A :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  202/    C30A :                             ;STA emu_ptr+1,X                ;4
(1)  202/    C30A :                             ;JMP (emu_ptr2,X)               ;6
(1)  202/    C30A :                             
(1)  202/    C30A :                             ;Method 3 - 30 cycles
(1)  202/    C30A :                             ;TXA                                                    ;2
(1)  202/    C30A :                             ;TAY                                                    ;2
(1)  202/    C30A :                             ;LDA (emu_PC,X)                                 ;6
(1)  202/    C30A :                             ;ASL                                                    ;2
(1)  202/    C30A :                             ;BCS upper                                              ;2
(1)  202/    C30A :                             ;lower:
(1)  202/    C30A :                             ;       ASL                                                     ;2
(1)  202/    C30A :                             ;       TAX                                                     ;2
(1)  202/    C30A :                             ;       BCS upper_lower                         ;2
(1)  202/    C30A :                             ;       lower_lower:
(1)  202/    C30A :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  202/    C30A :                             ;       upper_lower:
(1)  202/    C30A :                             ;               JMP (JUMP_TABLE2,X)
(1)  202/    C30A :                             ;upper:
(1)  202/    C30A :                             ;       ASL
(1)  202/    C30A :                             ;       TAX
(1)  202/    C30A :                             ;       BCS upper_upper
(1)  202/    C30A :                             ;       lower_upper:
(1)  202/    C30A :                             ;               JMP (JUMP_TABLE3,X)
(1)  202/    C30A :                             ;       upper_upper:
(1)  202/    C30A :                             ;               JMP (JUMP_TABLE4,X)
(1)  202/    C30A :                             ;After jump:
(1)  202/    C30A :                             ;TYA                                                    ;2
(1)  202/    C30A :                             ;TAX                                                    ;2
(1)  202/    C30A :                             
(1)  202/    C30A :                             ;Method 4 - 28 cycles
(1)  202/    C30A :                             ;LDA (emu_PC,X)                 ;6
(1)  202/    C30A :                             ;TAY                                    ;2
(1)  202/    C30A :                             ;LDA JUMP_TABLE,Y               ;4
(1)  202/    C30A :                             ;PHA                                    ;3
(1)  202/    C30A :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  202/    C30A :                             ;PHA                                    ;3
(1)  202/    C30A :                             ;RTS                                    ;6
(1)  202/    C30A :                             
(1)  202/    C30A :                             ;Method 5 - 30 cycles
(1)  202/    C30A : A1 02                       LDA (emu_PC,X)                  ;6
(1)  202/    C30C : A8                          TAY                                             ;2
(1)  202/    C30D : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  202/    C310 : 95 0A                       STA emu_ptr,X                   ;4
(1)  202/    C312 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 65 - 1/5/2022 12:19:0


(1)  202/    C315 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  202/    C317 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  202/    C31A :                                                     
(1)  203/    C31A :                     
(1)  204/    C31A :                     	;0x28 - PLP IMP
(1)  205/    C31A :                     	PLP_IMP:
(1)  206/    C31A : (MACRO)             		OP_MACRO 40, "PLP", "IMP", "PLP_IMP"
(1)  206/    C31A :                             ;TODO
(1)  207/    C31A : (MACRO)             		NEXT_MACRO
(1)  207/    C31A :                                             
(1)  207/    C31A :  (MACRO-2)                  halt
(1)  207/    C31A : 00                          BRK
(1)  207/    C31B : 00                          BRK
(1)  207/    C31C :                             
(1)  207/    C31C :                             ;Method 1 - 60 cycles
(1)  207/    C31C :                             ;Jump table must be page aligned!!!
(1)  207/    C31C :                             ;LDA (emu_PC,X)                 ;6
(1)  207/    C31C :                             ;ASL                                    ;2
(1)  207/    C31C :                             ;STA emu_ptr,X                  ;4
(1)  207/    C31C :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  207/    C31C :                             ;ADC #0                                 ;2
(1)  207/    C31C :                             ;STA emu_ptr+1,X                ;4
(1)  207/    C31C :                             ;LDA (emu_ptr,X)                ;6
(1)  207/    C31C :                             ;STA emu_ptr2,X                 ;4
(1)  207/    C31C :                             ;INC emu_ptr,X                  ;6
(1)  207/    C31C :                             ;BCC .skip                              ;2
(1)  207/    C31C :                             ;       INC emu_ptr+1,X         ;6
(1)  207/    C31C :                             ;.skip:
(1)  207/    C31C :                             ;LDA (emu_ptr,X)                ;6
(1)  207/    C31C :                             ;STA emu_ptr2+1,X               ;4
(1)  207/    C31C :                             ;JMP (emu_ptr2,X)               ;6
(1)  207/    C31C :                             
(1)  207/    C31C :                             ;Method 2 - 46 cycles
(1)  207/    C31C :                             ;Jump table must be page aligned!!!
(1)  207/    C31C :                             ;LDA (emu_PC,X)                 ;6
(1)  207/    C31C :                             ;STZ emu_ptr+1,X                ;4
(1)  207/    C31C :                             ;ASL                                    ;2
(1)  207/    C31C :                             ;ROL emu_ptr+1,X                ;6
(1)  207/    C31C :                             ;ASL                                    ;2
(1)  207/    C31C :                             ;ROL emu_ptr+1,X                ;6
(1)  207/    C31C :                             ;STA emu_ptr,X                  ;4                              
(1)  207/    C31C :                             ;LDA emu_ptr+1,X                ;4
(1)  207/    C31C :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  207/    C31C :                             ;STA emu_ptr+1,X                ;4
(1)  207/    C31C :                             ;JMP (emu_ptr2,X)               ;6
(1)  207/    C31C :                             
(1)  207/    C31C :                             ;Method 3 - 30 cycles
(1)  207/    C31C :                             ;TXA                                                    ;2
(1)  207/    C31C :                             ;TAY                                                    ;2
(1)  207/    C31C :                             ;LDA (emu_PC,X)                                 ;6
(1)  207/    C31C :                             ;ASL                                                    ;2
(1)  207/    C31C :                             ;BCS upper                                              ;2
(1)  207/    C31C :                             ;lower:
(1)  207/    C31C :                             ;       ASL                                                     ;2
(1)  207/    C31C :                             ;       TAX                                                     ;2
(1)  207/    C31C :                             ;       BCS upper_lower                         ;2
(1)  207/    C31C :                             ;       lower_lower:
(1)  207/    C31C :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  207/    C31C :                             ;       upper_lower:
(1)  207/    C31C :                             ;               JMP (JUMP_TABLE2,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 66 - 1/5/2022 12:19:0


(1)  207/    C31C :                             ;upper:
(1)  207/    C31C :                             ;       ASL
(1)  207/    C31C :                             ;       TAX
(1)  207/    C31C :                             ;       BCS upper_upper
(1)  207/    C31C :                             ;       lower_upper:
(1)  207/    C31C :                             ;               JMP (JUMP_TABLE3,X)
(1)  207/    C31C :                             ;       upper_upper:
(1)  207/    C31C :                             ;               JMP (JUMP_TABLE4,X)
(1)  207/    C31C :                             ;After jump:
(1)  207/    C31C :                             ;TYA                                                    ;2
(1)  207/    C31C :                             ;TAX                                                    ;2
(1)  207/    C31C :                             
(1)  207/    C31C :                             ;Method 4 - 28 cycles
(1)  207/    C31C :                             ;LDA (emu_PC,X)                 ;6
(1)  207/    C31C :                             ;TAY                                    ;2
(1)  207/    C31C :                             ;LDA JUMP_TABLE,Y               ;4
(1)  207/    C31C :                             ;PHA                                    ;3
(1)  207/    C31C :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  207/    C31C :                             ;PHA                                    ;3
(1)  207/    C31C :                             ;RTS                                    ;6
(1)  207/    C31C :                             
(1)  207/    C31C :                             ;Method 5 - 30 cycles
(1)  207/    C31C : A1 02                       LDA (emu_PC,X)                  ;6
(1)  207/    C31E : A8                          TAY                                             ;2
(1)  207/    C31F : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  207/    C322 : 95 0A                       STA emu_ptr,X                   ;4
(1)  207/    C324 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  207/    C327 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  207/    C329 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  207/    C32C :                                                     
(1)  208/    C32C :                     
(1)  209/    C32C :                     	;0x29 - AND IMMED
(1)  210/    C32C :                     	AND_IMMED:
(1)  211/    C32C : (MACRO)             		OP_MACRO 41, "AND", "IMMED", "AND_IMMED"
(1)  211/    C32C :                             ;TODO
(1)  212/    C32C : (MACRO)             		NEXT_MACRO
(1)  212/    C32C :                                             
(1)  212/    C32C :  (MACRO-2)                  halt
(1)  212/    C32C : 00                          BRK
(1)  212/    C32D : 00                          BRK
(1)  212/    C32E :                             
(1)  212/    C32E :                             ;Method 1 - 60 cycles
(1)  212/    C32E :                             ;Jump table must be page aligned!!!
(1)  212/    C32E :                             ;LDA (emu_PC,X)                 ;6
(1)  212/    C32E :                             ;ASL                                    ;2
(1)  212/    C32E :                             ;STA emu_ptr,X                  ;4
(1)  212/    C32E :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  212/    C32E :                             ;ADC #0                                 ;2
(1)  212/    C32E :                             ;STA emu_ptr+1,X                ;4
(1)  212/    C32E :                             ;LDA (emu_ptr,X)                ;6
(1)  212/    C32E :                             ;STA emu_ptr2,X                 ;4
(1)  212/    C32E :                             ;INC emu_ptr,X                  ;6
(1)  212/    C32E :                             ;BCC .skip                              ;2
(1)  212/    C32E :                             ;       INC emu_ptr+1,X         ;6
(1)  212/    C32E :                             ;.skip:
(1)  212/    C32E :                             ;LDA (emu_ptr,X)                ;6
(1)  212/    C32E :                             ;STA emu_ptr2+1,X               ;4
(1)  212/    C32E :                             ;JMP (emu_ptr2,X)               ;6
(1)  212/    C32E :                             
(1)  212/    C32E :                             ;Method 2 - 46 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 67 - 1/5/2022 12:19:0


(1)  212/    C32E :                             ;Jump table must be page aligned!!!
(1)  212/    C32E :                             ;LDA (emu_PC,X)                 ;6
(1)  212/    C32E :                             ;STZ emu_ptr+1,X                ;4
(1)  212/    C32E :                             ;ASL                                    ;2
(1)  212/    C32E :                             ;ROL emu_ptr+1,X                ;6
(1)  212/    C32E :                             ;ASL                                    ;2
(1)  212/    C32E :                             ;ROL emu_ptr+1,X                ;6
(1)  212/    C32E :                             ;STA emu_ptr,X                  ;4                              
(1)  212/    C32E :                             ;LDA emu_ptr+1,X                ;4
(1)  212/    C32E :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  212/    C32E :                             ;STA emu_ptr+1,X                ;4
(1)  212/    C32E :                             ;JMP (emu_ptr2,X)               ;6
(1)  212/    C32E :                             
(1)  212/    C32E :                             ;Method 3 - 30 cycles
(1)  212/    C32E :                             ;TXA                                                    ;2
(1)  212/    C32E :                             ;TAY                                                    ;2
(1)  212/    C32E :                             ;LDA (emu_PC,X)                                 ;6
(1)  212/    C32E :                             ;ASL                                                    ;2
(1)  212/    C32E :                             ;BCS upper                                              ;2
(1)  212/    C32E :                             ;lower:
(1)  212/    C32E :                             ;       ASL                                                     ;2
(1)  212/    C32E :                             ;       TAX                                                     ;2
(1)  212/    C32E :                             ;       BCS upper_lower                         ;2
(1)  212/    C32E :                             ;       lower_lower:
(1)  212/    C32E :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  212/    C32E :                             ;       upper_lower:
(1)  212/    C32E :                             ;               JMP (JUMP_TABLE2,X)
(1)  212/    C32E :                             ;upper:
(1)  212/    C32E :                             ;       ASL
(1)  212/    C32E :                             ;       TAX
(1)  212/    C32E :                             ;       BCS upper_upper
(1)  212/    C32E :                             ;       lower_upper:
(1)  212/    C32E :                             ;               JMP (JUMP_TABLE3,X)
(1)  212/    C32E :                             ;       upper_upper:
(1)  212/    C32E :                             ;               JMP (JUMP_TABLE4,X)
(1)  212/    C32E :                             ;After jump:
(1)  212/    C32E :                             ;TYA                                                    ;2
(1)  212/    C32E :                             ;TAX                                                    ;2
(1)  212/    C32E :                             
(1)  212/    C32E :                             ;Method 4 - 28 cycles
(1)  212/    C32E :                             ;LDA (emu_PC,X)                 ;6
(1)  212/    C32E :                             ;TAY                                    ;2
(1)  212/    C32E :                             ;LDA JUMP_TABLE,Y               ;4
(1)  212/    C32E :                             ;PHA                                    ;3
(1)  212/    C32E :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  212/    C32E :                             ;PHA                                    ;3
(1)  212/    C32E :                             ;RTS                                    ;6
(1)  212/    C32E :                             
(1)  212/    C32E :                             ;Method 5 - 30 cycles
(1)  212/    C32E : A1 02                       LDA (emu_PC,X)                  ;6
(1)  212/    C330 : A8                          TAY                                             ;2
(1)  212/    C331 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  212/    C334 : 95 0A                       STA emu_ptr,X                   ;4
(1)  212/    C336 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  212/    C339 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  212/    C33B : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  212/    C33E :                                                     
(1)  213/    C33E :                     
(1)  214/    C33E :                     	;0x2A - ROL A
(1)  215/    C33E :                     	ROL_A:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 68 - 1/5/2022 12:19:0


(1)  216/    C33E : (MACRO)             		OP_MACRO 42, "ROL", "A", "ROL_A"
(1)  216/    C33E :                             ;TODO
(1)  217/    C33E : (MACRO)             		NEXT_MACRO
(1)  217/    C33E :                                             
(1)  217/    C33E :  (MACRO-2)                  halt
(1)  217/    C33E : 00                          BRK
(1)  217/    C33F : 00                          BRK
(1)  217/    C340 :                             
(1)  217/    C340 :                             ;Method 1 - 60 cycles
(1)  217/    C340 :                             ;Jump table must be page aligned!!!
(1)  217/    C340 :                             ;LDA (emu_PC,X)                 ;6
(1)  217/    C340 :                             ;ASL                                    ;2
(1)  217/    C340 :                             ;STA emu_ptr,X                  ;4
(1)  217/    C340 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  217/    C340 :                             ;ADC #0                                 ;2
(1)  217/    C340 :                             ;STA emu_ptr+1,X                ;4
(1)  217/    C340 :                             ;LDA (emu_ptr,X)                ;6
(1)  217/    C340 :                             ;STA emu_ptr2,X                 ;4
(1)  217/    C340 :                             ;INC emu_ptr,X                  ;6
(1)  217/    C340 :                             ;BCC .skip                              ;2
(1)  217/    C340 :                             ;       INC emu_ptr+1,X         ;6
(1)  217/    C340 :                             ;.skip:
(1)  217/    C340 :                             ;LDA (emu_ptr,X)                ;6
(1)  217/    C340 :                             ;STA emu_ptr2+1,X               ;4
(1)  217/    C340 :                             ;JMP (emu_ptr2,X)               ;6
(1)  217/    C340 :                             
(1)  217/    C340 :                             ;Method 2 - 46 cycles
(1)  217/    C340 :                             ;Jump table must be page aligned!!!
(1)  217/    C340 :                             ;LDA (emu_PC,X)                 ;6
(1)  217/    C340 :                             ;STZ emu_ptr+1,X                ;4
(1)  217/    C340 :                             ;ASL                                    ;2
(1)  217/    C340 :                             ;ROL emu_ptr+1,X                ;6
(1)  217/    C340 :                             ;ASL                                    ;2
(1)  217/    C340 :                             ;ROL emu_ptr+1,X                ;6
(1)  217/    C340 :                             ;STA emu_ptr,X                  ;4                              
(1)  217/    C340 :                             ;LDA emu_ptr+1,X                ;4
(1)  217/    C340 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  217/    C340 :                             ;STA emu_ptr+1,X                ;4
(1)  217/    C340 :                             ;JMP (emu_ptr2,X)               ;6
(1)  217/    C340 :                             
(1)  217/    C340 :                             ;Method 3 - 30 cycles
(1)  217/    C340 :                             ;TXA                                                    ;2
(1)  217/    C340 :                             ;TAY                                                    ;2
(1)  217/    C340 :                             ;LDA (emu_PC,X)                                 ;6
(1)  217/    C340 :                             ;ASL                                                    ;2
(1)  217/    C340 :                             ;BCS upper                                              ;2
(1)  217/    C340 :                             ;lower:
(1)  217/    C340 :                             ;       ASL                                                     ;2
(1)  217/    C340 :                             ;       TAX                                                     ;2
(1)  217/    C340 :                             ;       BCS upper_lower                         ;2
(1)  217/    C340 :                             ;       lower_lower:
(1)  217/    C340 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  217/    C340 :                             ;       upper_lower:
(1)  217/    C340 :                             ;               JMP (JUMP_TABLE2,X)
(1)  217/    C340 :                             ;upper:
(1)  217/    C340 :                             ;       ASL
(1)  217/    C340 :                             ;       TAX
(1)  217/    C340 :                             ;       BCS upper_upper
(1)  217/    C340 :                             ;       lower_upper:
(1)  217/    C340 :                             ;               JMP (JUMP_TABLE3,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 69 - 1/5/2022 12:19:0


(1)  217/    C340 :                             ;       upper_upper:
(1)  217/    C340 :                             ;               JMP (JUMP_TABLE4,X)
(1)  217/    C340 :                             ;After jump:
(1)  217/    C340 :                             ;TYA                                                    ;2
(1)  217/    C340 :                             ;TAX                                                    ;2
(1)  217/    C340 :                             
(1)  217/    C340 :                             ;Method 4 - 28 cycles
(1)  217/    C340 :                             ;LDA (emu_PC,X)                 ;6
(1)  217/    C340 :                             ;TAY                                    ;2
(1)  217/    C340 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  217/    C340 :                             ;PHA                                    ;3
(1)  217/    C340 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  217/    C340 :                             ;PHA                                    ;3
(1)  217/    C340 :                             ;RTS                                    ;6
(1)  217/    C340 :                             
(1)  217/    C340 :                             ;Method 5 - 30 cycles
(1)  217/    C340 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  217/    C342 : A8                          TAY                                             ;2
(1)  217/    C343 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  217/    C346 : 95 0A                       STA emu_ptr,X                   ;4
(1)  217/    C348 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  217/    C34B : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  217/    C34D : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  217/    C350 :                                                     
(1)  218/    C350 :                     
(1)  219/    C350 :                     	;0x2B - NOP
(1)  220/    C350 :                     	NOP_0x2B:
(1)  221/    C350 : (MACRO)             		OP_MACRO 43, "NOP", "IMP", "NOP_0x2B"
(1)  221/    C350 :                             ;TODO
(1)  222/    C350 : (MACRO)             		NEXT_MACRO
(1)  222/    C350 :                                             
(1)  222/    C350 :  (MACRO-2)                  halt
(1)  222/    C350 : 00                          BRK
(1)  222/    C351 : 00                          BRK
(1)  222/    C352 :                             
(1)  222/    C352 :                             ;Method 1 - 60 cycles
(1)  222/    C352 :                             ;Jump table must be page aligned!!!
(1)  222/    C352 :                             ;LDA (emu_PC,X)                 ;6
(1)  222/    C352 :                             ;ASL                                    ;2
(1)  222/    C352 :                             ;STA emu_ptr,X                  ;4
(1)  222/    C352 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  222/    C352 :                             ;ADC #0                                 ;2
(1)  222/    C352 :                             ;STA emu_ptr+1,X                ;4
(1)  222/    C352 :                             ;LDA (emu_ptr,X)                ;6
(1)  222/    C352 :                             ;STA emu_ptr2,X                 ;4
(1)  222/    C352 :                             ;INC emu_ptr,X                  ;6
(1)  222/    C352 :                             ;BCC .skip                              ;2
(1)  222/    C352 :                             ;       INC emu_ptr+1,X         ;6
(1)  222/    C352 :                             ;.skip:
(1)  222/    C352 :                             ;LDA (emu_ptr,X)                ;6
(1)  222/    C352 :                             ;STA emu_ptr2+1,X               ;4
(1)  222/    C352 :                             ;JMP (emu_ptr2,X)               ;6
(1)  222/    C352 :                             
(1)  222/    C352 :                             ;Method 2 - 46 cycles
(1)  222/    C352 :                             ;Jump table must be page aligned!!!
(1)  222/    C352 :                             ;LDA (emu_PC,X)                 ;6
(1)  222/    C352 :                             ;STZ emu_ptr+1,X                ;4
(1)  222/    C352 :                             ;ASL                                    ;2
(1)  222/    C352 :                             ;ROL emu_ptr+1,X                ;6
(1)  222/    C352 :                             ;ASL                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 70 - 1/5/2022 12:19:0


(1)  222/    C352 :                             ;ROL emu_ptr+1,X                ;6
(1)  222/    C352 :                             ;STA emu_ptr,X                  ;4                              
(1)  222/    C352 :                             ;LDA emu_ptr+1,X                ;4
(1)  222/    C352 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  222/    C352 :                             ;STA emu_ptr+1,X                ;4
(1)  222/    C352 :                             ;JMP (emu_ptr2,X)               ;6
(1)  222/    C352 :                             
(1)  222/    C352 :                             ;Method 3 - 30 cycles
(1)  222/    C352 :                             ;TXA                                                    ;2
(1)  222/    C352 :                             ;TAY                                                    ;2
(1)  222/    C352 :                             ;LDA (emu_PC,X)                                 ;6
(1)  222/    C352 :                             ;ASL                                                    ;2
(1)  222/    C352 :                             ;BCS upper                                              ;2
(1)  222/    C352 :                             ;lower:
(1)  222/    C352 :                             ;       ASL                                                     ;2
(1)  222/    C352 :                             ;       TAX                                                     ;2
(1)  222/    C352 :                             ;       BCS upper_lower                         ;2
(1)  222/    C352 :                             ;       lower_lower:
(1)  222/    C352 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  222/    C352 :                             ;       upper_lower:
(1)  222/    C352 :                             ;               JMP (JUMP_TABLE2,X)
(1)  222/    C352 :                             ;upper:
(1)  222/    C352 :                             ;       ASL
(1)  222/    C352 :                             ;       TAX
(1)  222/    C352 :                             ;       BCS upper_upper
(1)  222/    C352 :                             ;       lower_upper:
(1)  222/    C352 :                             ;               JMP (JUMP_TABLE3,X)
(1)  222/    C352 :                             ;       upper_upper:
(1)  222/    C352 :                             ;               JMP (JUMP_TABLE4,X)
(1)  222/    C352 :                             ;After jump:
(1)  222/    C352 :                             ;TYA                                                    ;2
(1)  222/    C352 :                             ;TAX                                                    ;2
(1)  222/    C352 :                             
(1)  222/    C352 :                             ;Method 4 - 28 cycles
(1)  222/    C352 :                             ;LDA (emu_PC,X)                 ;6
(1)  222/    C352 :                             ;TAY                                    ;2
(1)  222/    C352 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  222/    C352 :                             ;PHA                                    ;3
(1)  222/    C352 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  222/    C352 :                             ;PHA                                    ;3
(1)  222/    C352 :                             ;RTS                                    ;6
(1)  222/    C352 :                             
(1)  222/    C352 :                             ;Method 5 - 30 cycles
(1)  222/    C352 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  222/    C354 : A8                          TAY                                             ;2
(1)  222/    C355 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  222/    C358 : 95 0A                       STA emu_ptr,X                   ;4
(1)  222/    C35A : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  222/    C35D : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  222/    C35F : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  222/    C362 :                                                     
(1)  223/    C362 :                     
(1)  224/    C362 :                     	;0x2C - BIT ABS
(1)  225/    C362 :                     	BIT_ABS:
(1)  226/    C362 : (MACRO)             		OP_MACRO 44, "BIT", "ABS", "BIT_ABS"
(1)  226/    C362 :                             ;TODO
(1)  227/    C362 : (MACRO)             		NEXT_MACRO
(1)  227/    C362 :                                             
(1)  227/    C362 :  (MACRO-2)                  halt
(1)  227/    C362 : 00                          BRK
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 71 - 1/5/2022 12:19:0


(1)  227/    C363 : 00                          BRK
(1)  227/    C364 :                             
(1)  227/    C364 :                             ;Method 1 - 60 cycles
(1)  227/    C364 :                             ;Jump table must be page aligned!!!
(1)  227/    C364 :                             ;LDA (emu_PC,X)                 ;6
(1)  227/    C364 :                             ;ASL                                    ;2
(1)  227/    C364 :                             ;STA emu_ptr,X                  ;4
(1)  227/    C364 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  227/    C364 :                             ;ADC #0                                 ;2
(1)  227/    C364 :                             ;STA emu_ptr+1,X                ;4
(1)  227/    C364 :                             ;LDA (emu_ptr,X)                ;6
(1)  227/    C364 :                             ;STA emu_ptr2,X                 ;4
(1)  227/    C364 :                             ;INC emu_ptr,X                  ;6
(1)  227/    C364 :                             ;BCC .skip                              ;2
(1)  227/    C364 :                             ;       INC emu_ptr+1,X         ;6
(1)  227/    C364 :                             ;.skip:
(1)  227/    C364 :                             ;LDA (emu_ptr,X)                ;6
(1)  227/    C364 :                             ;STA emu_ptr2+1,X               ;4
(1)  227/    C364 :                             ;JMP (emu_ptr2,X)               ;6
(1)  227/    C364 :                             
(1)  227/    C364 :                             ;Method 2 - 46 cycles
(1)  227/    C364 :                             ;Jump table must be page aligned!!!
(1)  227/    C364 :                             ;LDA (emu_PC,X)                 ;6
(1)  227/    C364 :                             ;STZ emu_ptr+1,X                ;4
(1)  227/    C364 :                             ;ASL                                    ;2
(1)  227/    C364 :                             ;ROL emu_ptr+1,X                ;6
(1)  227/    C364 :                             ;ASL                                    ;2
(1)  227/    C364 :                             ;ROL emu_ptr+1,X                ;6
(1)  227/    C364 :                             ;STA emu_ptr,X                  ;4                              
(1)  227/    C364 :                             ;LDA emu_ptr+1,X                ;4
(1)  227/    C364 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  227/    C364 :                             ;STA emu_ptr+1,X                ;4
(1)  227/    C364 :                             ;JMP (emu_ptr2,X)               ;6
(1)  227/    C364 :                             
(1)  227/    C364 :                             ;Method 3 - 30 cycles
(1)  227/    C364 :                             ;TXA                                                    ;2
(1)  227/    C364 :                             ;TAY                                                    ;2
(1)  227/    C364 :                             ;LDA (emu_PC,X)                                 ;6
(1)  227/    C364 :                             ;ASL                                                    ;2
(1)  227/    C364 :                             ;BCS upper                                              ;2
(1)  227/    C364 :                             ;lower:
(1)  227/    C364 :                             ;       ASL                                                     ;2
(1)  227/    C364 :                             ;       TAX                                                     ;2
(1)  227/    C364 :                             ;       BCS upper_lower                         ;2
(1)  227/    C364 :                             ;       lower_lower:
(1)  227/    C364 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  227/    C364 :                             ;       upper_lower:
(1)  227/    C364 :                             ;               JMP (JUMP_TABLE2,X)
(1)  227/    C364 :                             ;upper:
(1)  227/    C364 :                             ;       ASL
(1)  227/    C364 :                             ;       TAX
(1)  227/    C364 :                             ;       BCS upper_upper
(1)  227/    C364 :                             ;       lower_upper:
(1)  227/    C364 :                             ;               JMP (JUMP_TABLE3,X)
(1)  227/    C364 :                             ;       upper_upper:
(1)  227/    C364 :                             ;               JMP (JUMP_TABLE4,X)
(1)  227/    C364 :                             ;After jump:
(1)  227/    C364 :                             ;TYA                                                    ;2
(1)  227/    C364 :                             ;TAX                                                    ;2
(1)  227/    C364 :                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 72 - 1/5/2022 12:19:0


(1)  227/    C364 :                             ;Method 4 - 28 cycles
(1)  227/    C364 :                             ;LDA (emu_PC,X)                 ;6
(1)  227/    C364 :                             ;TAY                                    ;2
(1)  227/    C364 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  227/    C364 :                             ;PHA                                    ;3
(1)  227/    C364 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  227/    C364 :                             ;PHA                                    ;3
(1)  227/    C364 :                             ;RTS                                    ;6
(1)  227/    C364 :                             
(1)  227/    C364 :                             ;Method 5 - 30 cycles
(1)  227/    C364 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  227/    C366 : A8                          TAY                                             ;2
(1)  227/    C367 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  227/    C36A : 95 0A                       STA emu_ptr,X                   ;4
(1)  227/    C36C : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  227/    C36F : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  227/    C371 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  227/    C374 :                                                     
(1)  228/    C374 :                     
(1)  229/    C374 :                     	;0x2D - AND ABS
(1)  230/    C374 :                     	AND_ABS:
(1)  231/    C374 : (MACRO)             		OP_MACRO 45, "AND", "ABS", "AND_ABS"
(1)  231/    C374 :                             ;TODO
(1)  232/    C374 : (MACRO)             		NEXT_MACRO
(1)  232/    C374 :                                             
(1)  232/    C374 :  (MACRO-2)                  halt
(1)  232/    C374 : 00                          BRK
(1)  232/    C375 : 00                          BRK
(1)  232/    C376 :                             
(1)  232/    C376 :                             ;Method 1 - 60 cycles
(1)  232/    C376 :                             ;Jump table must be page aligned!!!
(1)  232/    C376 :                             ;LDA (emu_PC,X)                 ;6
(1)  232/    C376 :                             ;ASL                                    ;2
(1)  232/    C376 :                             ;STA emu_ptr,X                  ;4
(1)  232/    C376 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  232/    C376 :                             ;ADC #0                                 ;2
(1)  232/    C376 :                             ;STA emu_ptr+1,X                ;4
(1)  232/    C376 :                             ;LDA (emu_ptr,X)                ;6
(1)  232/    C376 :                             ;STA emu_ptr2,X                 ;4
(1)  232/    C376 :                             ;INC emu_ptr,X                  ;6
(1)  232/    C376 :                             ;BCC .skip                              ;2
(1)  232/    C376 :                             ;       INC emu_ptr+1,X         ;6
(1)  232/    C376 :                             ;.skip:
(1)  232/    C376 :                             ;LDA (emu_ptr,X)                ;6
(1)  232/    C376 :                             ;STA emu_ptr2+1,X               ;4
(1)  232/    C376 :                             ;JMP (emu_ptr2,X)               ;6
(1)  232/    C376 :                             
(1)  232/    C376 :                             ;Method 2 - 46 cycles
(1)  232/    C376 :                             ;Jump table must be page aligned!!!
(1)  232/    C376 :                             ;LDA (emu_PC,X)                 ;6
(1)  232/    C376 :                             ;STZ emu_ptr+1,X                ;4
(1)  232/    C376 :                             ;ASL                                    ;2
(1)  232/    C376 :                             ;ROL emu_ptr+1,X                ;6
(1)  232/    C376 :                             ;ASL                                    ;2
(1)  232/    C376 :                             ;ROL emu_ptr+1,X                ;6
(1)  232/    C376 :                             ;STA emu_ptr,X                  ;4                              
(1)  232/    C376 :                             ;LDA emu_ptr+1,X                ;4
(1)  232/    C376 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  232/    C376 :                             ;STA emu_ptr+1,X                ;4
(1)  232/    C376 :                             ;JMP (emu_ptr2,X)               ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 73 - 1/5/2022 12:19:0


(1)  232/    C376 :                             
(1)  232/    C376 :                             ;Method 3 - 30 cycles
(1)  232/    C376 :                             ;TXA                                                    ;2
(1)  232/    C376 :                             ;TAY                                                    ;2
(1)  232/    C376 :                             ;LDA (emu_PC,X)                                 ;6
(1)  232/    C376 :                             ;ASL                                                    ;2
(1)  232/    C376 :                             ;BCS upper                                              ;2
(1)  232/    C376 :                             ;lower:
(1)  232/    C376 :                             ;       ASL                                                     ;2
(1)  232/    C376 :                             ;       TAX                                                     ;2
(1)  232/    C376 :                             ;       BCS upper_lower                         ;2
(1)  232/    C376 :                             ;       lower_lower:
(1)  232/    C376 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  232/    C376 :                             ;       upper_lower:
(1)  232/    C376 :                             ;               JMP (JUMP_TABLE2,X)
(1)  232/    C376 :                             ;upper:
(1)  232/    C376 :                             ;       ASL
(1)  232/    C376 :                             ;       TAX
(1)  232/    C376 :                             ;       BCS upper_upper
(1)  232/    C376 :                             ;       lower_upper:
(1)  232/    C376 :                             ;               JMP (JUMP_TABLE3,X)
(1)  232/    C376 :                             ;       upper_upper:
(1)  232/    C376 :                             ;               JMP (JUMP_TABLE4,X)
(1)  232/    C376 :                             ;After jump:
(1)  232/    C376 :                             ;TYA                                                    ;2
(1)  232/    C376 :                             ;TAX                                                    ;2
(1)  232/    C376 :                             
(1)  232/    C376 :                             ;Method 4 - 28 cycles
(1)  232/    C376 :                             ;LDA (emu_PC,X)                 ;6
(1)  232/    C376 :                             ;TAY                                    ;2
(1)  232/    C376 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  232/    C376 :                             ;PHA                                    ;3
(1)  232/    C376 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  232/    C376 :                             ;PHA                                    ;3
(1)  232/    C376 :                             ;RTS                                    ;6
(1)  232/    C376 :                             
(1)  232/    C376 :                             ;Method 5 - 30 cycles
(1)  232/    C376 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  232/    C378 : A8                          TAY                                             ;2
(1)  232/    C379 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  232/    C37C : 95 0A                       STA emu_ptr,X                   ;4
(1)  232/    C37E : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  232/    C381 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  232/    C383 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  232/    C386 :                                                     
(1)  233/    C386 :                     
(1)  234/    C386 :                     	;0x2E - ROL ABS
(1)  235/    C386 :                     	ROL_ABS:
(1)  236/    C386 : (MACRO)             		OP_MACRO 46, "ROL", "ABS", "ROL_ABS"
(1)  236/    C386 :                             ;TODO
(1)  237/    C386 : (MACRO)             		NEXT_MACRO
(1)  237/    C386 :                                             
(1)  237/    C386 :  (MACRO-2)                  halt
(1)  237/    C386 : 00                          BRK
(1)  237/    C387 : 00                          BRK
(1)  237/    C388 :                             
(1)  237/    C388 :                             ;Method 1 - 60 cycles
(1)  237/    C388 :                             ;Jump table must be page aligned!!!
(1)  237/    C388 :                             ;LDA (emu_PC,X)                 ;6
(1)  237/    C388 :                             ;ASL                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 74 - 1/5/2022 12:19:0


(1)  237/    C388 :                             ;STA emu_ptr,X                  ;4
(1)  237/    C388 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  237/    C388 :                             ;ADC #0                                 ;2
(1)  237/    C388 :                             ;STA emu_ptr+1,X                ;4
(1)  237/    C388 :                             ;LDA (emu_ptr,X)                ;6
(1)  237/    C388 :                             ;STA emu_ptr2,X                 ;4
(1)  237/    C388 :                             ;INC emu_ptr,X                  ;6
(1)  237/    C388 :                             ;BCC .skip                              ;2
(1)  237/    C388 :                             ;       INC emu_ptr+1,X         ;6
(1)  237/    C388 :                             ;.skip:
(1)  237/    C388 :                             ;LDA (emu_ptr,X)                ;6
(1)  237/    C388 :                             ;STA emu_ptr2+1,X               ;4
(1)  237/    C388 :                             ;JMP (emu_ptr2,X)               ;6
(1)  237/    C388 :                             
(1)  237/    C388 :                             ;Method 2 - 46 cycles
(1)  237/    C388 :                             ;Jump table must be page aligned!!!
(1)  237/    C388 :                             ;LDA (emu_PC,X)                 ;6
(1)  237/    C388 :                             ;STZ emu_ptr+1,X                ;4
(1)  237/    C388 :                             ;ASL                                    ;2
(1)  237/    C388 :                             ;ROL emu_ptr+1,X                ;6
(1)  237/    C388 :                             ;ASL                                    ;2
(1)  237/    C388 :                             ;ROL emu_ptr+1,X                ;6
(1)  237/    C388 :                             ;STA emu_ptr,X                  ;4                              
(1)  237/    C388 :                             ;LDA emu_ptr+1,X                ;4
(1)  237/    C388 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  237/    C388 :                             ;STA emu_ptr+1,X                ;4
(1)  237/    C388 :                             ;JMP (emu_ptr2,X)               ;6
(1)  237/    C388 :                             
(1)  237/    C388 :                             ;Method 3 - 30 cycles
(1)  237/    C388 :                             ;TXA                                                    ;2
(1)  237/    C388 :                             ;TAY                                                    ;2
(1)  237/    C388 :                             ;LDA (emu_PC,X)                                 ;6
(1)  237/    C388 :                             ;ASL                                                    ;2
(1)  237/    C388 :                             ;BCS upper                                              ;2
(1)  237/    C388 :                             ;lower:
(1)  237/    C388 :                             ;       ASL                                                     ;2
(1)  237/    C388 :                             ;       TAX                                                     ;2
(1)  237/    C388 :                             ;       BCS upper_lower                         ;2
(1)  237/    C388 :                             ;       lower_lower:
(1)  237/    C388 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  237/    C388 :                             ;       upper_lower:
(1)  237/    C388 :                             ;               JMP (JUMP_TABLE2,X)
(1)  237/    C388 :                             ;upper:
(1)  237/    C388 :                             ;       ASL
(1)  237/    C388 :                             ;       TAX
(1)  237/    C388 :                             ;       BCS upper_upper
(1)  237/    C388 :                             ;       lower_upper:
(1)  237/    C388 :                             ;               JMP (JUMP_TABLE3,X)
(1)  237/    C388 :                             ;       upper_upper:
(1)  237/    C388 :                             ;               JMP (JUMP_TABLE4,X)
(1)  237/    C388 :                             ;After jump:
(1)  237/    C388 :                             ;TYA                                                    ;2
(1)  237/    C388 :                             ;TAX                                                    ;2
(1)  237/    C388 :                             
(1)  237/    C388 :                             ;Method 4 - 28 cycles
(1)  237/    C388 :                             ;LDA (emu_PC,X)                 ;6
(1)  237/    C388 :                             ;TAY                                    ;2
(1)  237/    C388 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  237/    C388 :                             ;PHA                                    ;3
(1)  237/    C388 :                             ;LDA JUMP_TABLE2,Y              ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 75 - 1/5/2022 12:19:0


(1)  237/    C388 :                             ;PHA                                    ;3
(1)  237/    C388 :                             ;RTS                                    ;6
(1)  237/    C388 :                             
(1)  237/    C388 :                             ;Method 5 - 30 cycles
(1)  237/    C388 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  237/    C38A : A8                          TAY                                             ;2
(1)  237/    C38B : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  237/    C38E : 95 0A                       STA emu_ptr,X                   ;4
(1)  237/    C390 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  237/    C393 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  237/    C395 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  237/    C398 :                                                     
(1)  238/    C398 :                     
(1)  239/    C398 :                     	;0x2F - NOP
(1)  240/    C398 :                     	NOP_0x2F:
(1)  241/    C398 : (MACRO)             		OP_MACRO 47, "NOP", "IMP", "NOP_0x2F"
(1)  241/    C398 :                             ;TODO
(1)  242/    C398 : (MACRO)             		NEXT_MACRO
(1)  242/    C398 :                                             
(1)  242/    C398 :  (MACRO-2)                  halt
(1)  242/    C398 : 00                          BRK
(1)  242/    C399 : 00                          BRK
(1)  242/    C39A :                             
(1)  242/    C39A :                             ;Method 1 - 60 cycles
(1)  242/    C39A :                             ;Jump table must be page aligned!!!
(1)  242/    C39A :                             ;LDA (emu_PC,X)                 ;6
(1)  242/    C39A :                             ;ASL                                    ;2
(1)  242/    C39A :                             ;STA emu_ptr,X                  ;4
(1)  242/    C39A :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  242/    C39A :                             ;ADC #0                                 ;2
(1)  242/    C39A :                             ;STA emu_ptr+1,X                ;4
(1)  242/    C39A :                             ;LDA (emu_ptr,X)                ;6
(1)  242/    C39A :                             ;STA emu_ptr2,X                 ;4
(1)  242/    C39A :                             ;INC emu_ptr,X                  ;6
(1)  242/    C39A :                             ;BCC .skip                              ;2
(1)  242/    C39A :                             ;       INC emu_ptr+1,X         ;6
(1)  242/    C39A :                             ;.skip:
(1)  242/    C39A :                             ;LDA (emu_ptr,X)                ;6
(1)  242/    C39A :                             ;STA emu_ptr2+1,X               ;4
(1)  242/    C39A :                             ;JMP (emu_ptr2,X)               ;6
(1)  242/    C39A :                             
(1)  242/    C39A :                             ;Method 2 - 46 cycles
(1)  242/    C39A :                             ;Jump table must be page aligned!!!
(1)  242/    C39A :                             ;LDA (emu_PC,X)                 ;6
(1)  242/    C39A :                             ;STZ emu_ptr+1,X                ;4
(1)  242/    C39A :                             ;ASL                                    ;2
(1)  242/    C39A :                             ;ROL emu_ptr+1,X                ;6
(1)  242/    C39A :                             ;ASL                                    ;2
(1)  242/    C39A :                             ;ROL emu_ptr+1,X                ;6
(1)  242/    C39A :                             ;STA emu_ptr,X                  ;4                              
(1)  242/    C39A :                             ;LDA emu_ptr+1,X                ;4
(1)  242/    C39A :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  242/    C39A :                             ;STA emu_ptr+1,X                ;4
(1)  242/    C39A :                             ;JMP (emu_ptr2,X)               ;6
(1)  242/    C39A :                             
(1)  242/    C39A :                             ;Method 3 - 30 cycles
(1)  242/    C39A :                             ;TXA                                                    ;2
(1)  242/    C39A :                             ;TAY                                                    ;2
(1)  242/    C39A :                             ;LDA (emu_PC,X)                                 ;6
(1)  242/    C39A :                             ;ASL                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 76 - 1/5/2022 12:19:0


(1)  242/    C39A :                             ;BCS upper                                              ;2
(1)  242/    C39A :                             ;lower:
(1)  242/    C39A :                             ;       ASL                                                     ;2
(1)  242/    C39A :                             ;       TAX                                                     ;2
(1)  242/    C39A :                             ;       BCS upper_lower                         ;2
(1)  242/    C39A :                             ;       lower_lower:
(1)  242/    C39A :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  242/    C39A :                             ;       upper_lower:
(1)  242/    C39A :                             ;               JMP (JUMP_TABLE2,X)
(1)  242/    C39A :                             ;upper:
(1)  242/    C39A :                             ;       ASL
(1)  242/    C39A :                             ;       TAX
(1)  242/    C39A :                             ;       BCS upper_upper
(1)  242/    C39A :                             ;       lower_upper:
(1)  242/    C39A :                             ;               JMP (JUMP_TABLE3,X)
(1)  242/    C39A :                             ;       upper_upper:
(1)  242/    C39A :                             ;               JMP (JUMP_TABLE4,X)
(1)  242/    C39A :                             ;After jump:
(1)  242/    C39A :                             ;TYA                                                    ;2
(1)  242/    C39A :                             ;TAX                                                    ;2
(1)  242/    C39A :                             
(1)  242/    C39A :                             ;Method 4 - 28 cycles
(1)  242/    C39A :                             ;LDA (emu_PC,X)                 ;6
(1)  242/    C39A :                             ;TAY                                    ;2
(1)  242/    C39A :                             ;LDA JUMP_TABLE,Y               ;4
(1)  242/    C39A :                             ;PHA                                    ;3
(1)  242/    C39A :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  242/    C39A :                             ;PHA                                    ;3
(1)  242/    C39A :                             ;RTS                                    ;6
(1)  242/    C39A :                             
(1)  242/    C39A :                             ;Method 5 - 30 cycles
(1)  242/    C39A : A1 02                       LDA (emu_PC,X)                  ;6
(1)  242/    C39C : A8                          TAY                                             ;2
(1)  242/    C39D : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  242/    C3A0 : 95 0A                       STA emu_ptr,X                   ;4
(1)  242/    C3A2 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  242/    C3A5 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  242/    C3A7 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  242/    C3AA :                                                     
(1)  243/    C3AA :                     
(1)  244/    C3AA :                     	;0x30 - BMI REL
(1)  245/    C3AA :                     	BMI_REL:
(1)  246/    C3AA : (MACRO)             		OP_MACRO 48, "BMI", "REL", "BMI_REL"
(1)  246/    C3AA :                             ;TODO
(1)  247/    C3AA : (MACRO)             		NEXT_MACRO
(1)  247/    C3AA :                                             
(1)  247/    C3AA :  (MACRO-2)                  halt
(1)  247/    C3AA : 00                          BRK
(1)  247/    C3AB : 00                          BRK
(1)  247/    C3AC :                             
(1)  247/    C3AC :                             ;Method 1 - 60 cycles
(1)  247/    C3AC :                             ;Jump table must be page aligned!!!
(1)  247/    C3AC :                             ;LDA (emu_PC,X)                 ;6
(1)  247/    C3AC :                             ;ASL                                    ;2
(1)  247/    C3AC :                             ;STA emu_ptr,X                  ;4
(1)  247/    C3AC :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  247/    C3AC :                             ;ADC #0                                 ;2
(1)  247/    C3AC :                             ;STA emu_ptr+1,X                ;4
(1)  247/    C3AC :                             ;LDA (emu_ptr,X)                ;6
(1)  247/    C3AC :                             ;STA emu_ptr2,X                 ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 77 - 1/5/2022 12:19:0


(1)  247/    C3AC :                             ;INC emu_ptr,X                  ;6
(1)  247/    C3AC :                             ;BCC .skip                              ;2
(1)  247/    C3AC :                             ;       INC emu_ptr+1,X         ;6
(1)  247/    C3AC :                             ;.skip:
(1)  247/    C3AC :                             ;LDA (emu_ptr,X)                ;6
(1)  247/    C3AC :                             ;STA emu_ptr2+1,X               ;4
(1)  247/    C3AC :                             ;JMP (emu_ptr2,X)               ;6
(1)  247/    C3AC :                             
(1)  247/    C3AC :                             ;Method 2 - 46 cycles
(1)  247/    C3AC :                             ;Jump table must be page aligned!!!
(1)  247/    C3AC :                             ;LDA (emu_PC,X)                 ;6
(1)  247/    C3AC :                             ;STZ emu_ptr+1,X                ;4
(1)  247/    C3AC :                             ;ASL                                    ;2
(1)  247/    C3AC :                             ;ROL emu_ptr+1,X                ;6
(1)  247/    C3AC :                             ;ASL                                    ;2
(1)  247/    C3AC :                             ;ROL emu_ptr+1,X                ;6
(1)  247/    C3AC :                             ;STA emu_ptr,X                  ;4                              
(1)  247/    C3AC :                             ;LDA emu_ptr+1,X                ;4
(1)  247/    C3AC :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  247/    C3AC :                             ;STA emu_ptr+1,X                ;4
(1)  247/    C3AC :                             ;JMP (emu_ptr2,X)               ;6
(1)  247/    C3AC :                             
(1)  247/    C3AC :                             ;Method 3 - 30 cycles
(1)  247/    C3AC :                             ;TXA                                                    ;2
(1)  247/    C3AC :                             ;TAY                                                    ;2
(1)  247/    C3AC :                             ;LDA (emu_PC,X)                                 ;6
(1)  247/    C3AC :                             ;ASL                                                    ;2
(1)  247/    C3AC :                             ;BCS upper                                              ;2
(1)  247/    C3AC :                             ;lower:
(1)  247/    C3AC :                             ;       ASL                                                     ;2
(1)  247/    C3AC :                             ;       TAX                                                     ;2
(1)  247/    C3AC :                             ;       BCS upper_lower                         ;2
(1)  247/    C3AC :                             ;       lower_lower:
(1)  247/    C3AC :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  247/    C3AC :                             ;       upper_lower:
(1)  247/    C3AC :                             ;               JMP (JUMP_TABLE2,X)
(1)  247/    C3AC :                             ;upper:
(1)  247/    C3AC :                             ;       ASL
(1)  247/    C3AC :                             ;       TAX
(1)  247/    C3AC :                             ;       BCS upper_upper
(1)  247/    C3AC :                             ;       lower_upper:
(1)  247/    C3AC :                             ;               JMP (JUMP_TABLE3,X)
(1)  247/    C3AC :                             ;       upper_upper:
(1)  247/    C3AC :                             ;               JMP (JUMP_TABLE4,X)
(1)  247/    C3AC :                             ;After jump:
(1)  247/    C3AC :                             ;TYA                                                    ;2
(1)  247/    C3AC :                             ;TAX                                                    ;2
(1)  247/    C3AC :                             
(1)  247/    C3AC :                             ;Method 4 - 28 cycles
(1)  247/    C3AC :                             ;LDA (emu_PC,X)                 ;6
(1)  247/    C3AC :                             ;TAY                                    ;2
(1)  247/    C3AC :                             ;LDA JUMP_TABLE,Y               ;4
(1)  247/    C3AC :                             ;PHA                                    ;3
(1)  247/    C3AC :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  247/    C3AC :                             ;PHA                                    ;3
(1)  247/    C3AC :                             ;RTS                                    ;6
(1)  247/    C3AC :                             
(1)  247/    C3AC :                             ;Method 5 - 30 cycles
(1)  247/    C3AC : A1 02                       LDA (emu_PC,X)                  ;6
(1)  247/    C3AE : A8                          TAY                                             ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 78 - 1/5/2022 12:19:0


(1)  247/    C3AF : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  247/    C3B2 : 95 0A                       STA emu_ptr,X                   ;4
(1)  247/    C3B4 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  247/    C3B7 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  247/    C3B9 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  247/    C3BC :                                                     
(1)  248/    C3BC :                     
(1)  249/    C3BC :                     	;0x31 - AND IY
(1)  250/    C3BC :                     	AND_IY:
(1)  251/    C3BC : (MACRO)             		OP_MACRO 49, "AND", "IY", "AND_IY"
(1)  251/    C3BC :                             ;TODO
(1)  252/    C3BC : (MACRO)             		NEXT_MACRO
(1)  252/    C3BC :                                             
(1)  252/    C3BC :  (MACRO-2)                  halt
(1)  252/    C3BC : 00                          BRK
(1)  252/    C3BD : 00                          BRK
(1)  252/    C3BE :                             
(1)  252/    C3BE :                             ;Method 1 - 60 cycles
(1)  252/    C3BE :                             ;Jump table must be page aligned!!!
(1)  252/    C3BE :                             ;LDA (emu_PC,X)                 ;6
(1)  252/    C3BE :                             ;ASL                                    ;2
(1)  252/    C3BE :                             ;STA emu_ptr,X                  ;4
(1)  252/    C3BE :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  252/    C3BE :                             ;ADC #0                                 ;2
(1)  252/    C3BE :                             ;STA emu_ptr+1,X                ;4
(1)  252/    C3BE :                             ;LDA (emu_ptr,X)                ;6
(1)  252/    C3BE :                             ;STA emu_ptr2,X                 ;4
(1)  252/    C3BE :                             ;INC emu_ptr,X                  ;6
(1)  252/    C3BE :                             ;BCC .skip                              ;2
(1)  252/    C3BE :                             ;       INC emu_ptr+1,X         ;6
(1)  252/    C3BE :                             ;.skip:
(1)  252/    C3BE :                             ;LDA (emu_ptr,X)                ;6
(1)  252/    C3BE :                             ;STA emu_ptr2+1,X               ;4
(1)  252/    C3BE :                             ;JMP (emu_ptr2,X)               ;6
(1)  252/    C3BE :                             
(1)  252/    C3BE :                             ;Method 2 - 46 cycles
(1)  252/    C3BE :                             ;Jump table must be page aligned!!!
(1)  252/    C3BE :                             ;LDA (emu_PC,X)                 ;6
(1)  252/    C3BE :                             ;STZ emu_ptr+1,X                ;4
(1)  252/    C3BE :                             ;ASL                                    ;2
(1)  252/    C3BE :                             ;ROL emu_ptr+1,X                ;6
(1)  252/    C3BE :                             ;ASL                                    ;2
(1)  252/    C3BE :                             ;ROL emu_ptr+1,X                ;6
(1)  252/    C3BE :                             ;STA emu_ptr,X                  ;4                              
(1)  252/    C3BE :                             ;LDA emu_ptr+1,X                ;4
(1)  252/    C3BE :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  252/    C3BE :                             ;STA emu_ptr+1,X                ;4
(1)  252/    C3BE :                             ;JMP (emu_ptr2,X)               ;6
(1)  252/    C3BE :                             
(1)  252/    C3BE :                             ;Method 3 - 30 cycles
(1)  252/    C3BE :                             ;TXA                                                    ;2
(1)  252/    C3BE :                             ;TAY                                                    ;2
(1)  252/    C3BE :                             ;LDA (emu_PC,X)                                 ;6
(1)  252/    C3BE :                             ;ASL                                                    ;2
(1)  252/    C3BE :                             ;BCS upper                                              ;2
(1)  252/    C3BE :                             ;lower:
(1)  252/    C3BE :                             ;       ASL                                                     ;2
(1)  252/    C3BE :                             ;       TAX                                                     ;2
(1)  252/    C3BE :                             ;       BCS upper_lower                         ;2
(1)  252/    C3BE :                             ;       lower_lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 79 - 1/5/2022 12:19:0


(1)  252/    C3BE :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  252/    C3BE :                             ;       upper_lower:
(1)  252/    C3BE :                             ;               JMP (JUMP_TABLE2,X)
(1)  252/    C3BE :                             ;upper:
(1)  252/    C3BE :                             ;       ASL
(1)  252/    C3BE :                             ;       TAX
(1)  252/    C3BE :                             ;       BCS upper_upper
(1)  252/    C3BE :                             ;       lower_upper:
(1)  252/    C3BE :                             ;               JMP (JUMP_TABLE3,X)
(1)  252/    C3BE :                             ;       upper_upper:
(1)  252/    C3BE :                             ;               JMP (JUMP_TABLE4,X)
(1)  252/    C3BE :                             ;After jump:
(1)  252/    C3BE :                             ;TYA                                                    ;2
(1)  252/    C3BE :                             ;TAX                                                    ;2
(1)  252/    C3BE :                             
(1)  252/    C3BE :                             ;Method 4 - 28 cycles
(1)  252/    C3BE :                             ;LDA (emu_PC,X)                 ;6
(1)  252/    C3BE :                             ;TAY                                    ;2
(1)  252/    C3BE :                             ;LDA JUMP_TABLE,Y               ;4
(1)  252/    C3BE :                             ;PHA                                    ;3
(1)  252/    C3BE :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  252/    C3BE :                             ;PHA                                    ;3
(1)  252/    C3BE :                             ;RTS                                    ;6
(1)  252/    C3BE :                             
(1)  252/    C3BE :                             ;Method 5 - 30 cycles
(1)  252/    C3BE : A1 02                       LDA (emu_PC,X)                  ;6
(1)  252/    C3C0 : A8                          TAY                                             ;2
(1)  252/    C3C1 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  252/    C3C4 : 95 0A                       STA emu_ptr,X                   ;4
(1)  252/    C3C6 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  252/    C3C9 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  252/    C3CB : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  252/    C3CE :                                                     
(1)  253/    C3CE :                     
(1)  254/    C3CE :                     	;0x32 - NOP
(1)  255/    C3CE :                     	NOP_0x32:
(1)  256/    C3CE : (MACRO)             		OP_MACRO 50, "NOP", "IMP", "NOP_0x32"
(1)  256/    C3CE :                             ;TODO
(1)  257/    C3CE : (MACRO)             		NEXT_MACRO
(1)  257/    C3CE :                                             
(1)  257/    C3CE :  (MACRO-2)                  halt
(1)  257/    C3CE : 00                          BRK
(1)  257/    C3CF : 00                          BRK
(1)  257/    C3D0 :                             
(1)  257/    C3D0 :                             ;Method 1 - 60 cycles
(1)  257/    C3D0 :                             ;Jump table must be page aligned!!!
(1)  257/    C3D0 :                             ;LDA (emu_PC,X)                 ;6
(1)  257/    C3D0 :                             ;ASL                                    ;2
(1)  257/    C3D0 :                             ;STA emu_ptr,X                  ;4
(1)  257/    C3D0 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  257/    C3D0 :                             ;ADC #0                                 ;2
(1)  257/    C3D0 :                             ;STA emu_ptr+1,X                ;4
(1)  257/    C3D0 :                             ;LDA (emu_ptr,X)                ;6
(1)  257/    C3D0 :                             ;STA emu_ptr2,X                 ;4
(1)  257/    C3D0 :                             ;INC emu_ptr,X                  ;6
(1)  257/    C3D0 :                             ;BCC .skip                              ;2
(1)  257/    C3D0 :                             ;       INC emu_ptr+1,X         ;6
(1)  257/    C3D0 :                             ;.skip:
(1)  257/    C3D0 :                             ;LDA (emu_ptr,X)                ;6
(1)  257/    C3D0 :                             ;STA emu_ptr2+1,X               ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 80 - 1/5/2022 12:19:0


(1)  257/    C3D0 :                             ;JMP (emu_ptr2,X)               ;6
(1)  257/    C3D0 :                             
(1)  257/    C3D0 :                             ;Method 2 - 46 cycles
(1)  257/    C3D0 :                             ;Jump table must be page aligned!!!
(1)  257/    C3D0 :                             ;LDA (emu_PC,X)                 ;6
(1)  257/    C3D0 :                             ;STZ emu_ptr+1,X                ;4
(1)  257/    C3D0 :                             ;ASL                                    ;2
(1)  257/    C3D0 :                             ;ROL emu_ptr+1,X                ;6
(1)  257/    C3D0 :                             ;ASL                                    ;2
(1)  257/    C3D0 :                             ;ROL emu_ptr+1,X                ;6
(1)  257/    C3D0 :                             ;STA emu_ptr,X                  ;4                              
(1)  257/    C3D0 :                             ;LDA emu_ptr+1,X                ;4
(1)  257/    C3D0 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  257/    C3D0 :                             ;STA emu_ptr+1,X                ;4
(1)  257/    C3D0 :                             ;JMP (emu_ptr2,X)               ;6
(1)  257/    C3D0 :                             
(1)  257/    C3D0 :                             ;Method 3 - 30 cycles
(1)  257/    C3D0 :                             ;TXA                                                    ;2
(1)  257/    C3D0 :                             ;TAY                                                    ;2
(1)  257/    C3D0 :                             ;LDA (emu_PC,X)                                 ;6
(1)  257/    C3D0 :                             ;ASL                                                    ;2
(1)  257/    C3D0 :                             ;BCS upper                                              ;2
(1)  257/    C3D0 :                             ;lower:
(1)  257/    C3D0 :                             ;       ASL                                                     ;2
(1)  257/    C3D0 :                             ;       TAX                                                     ;2
(1)  257/    C3D0 :                             ;       BCS upper_lower                         ;2
(1)  257/    C3D0 :                             ;       lower_lower:
(1)  257/    C3D0 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  257/    C3D0 :                             ;       upper_lower:
(1)  257/    C3D0 :                             ;               JMP (JUMP_TABLE2,X)
(1)  257/    C3D0 :                             ;upper:
(1)  257/    C3D0 :                             ;       ASL
(1)  257/    C3D0 :                             ;       TAX
(1)  257/    C3D0 :                             ;       BCS upper_upper
(1)  257/    C3D0 :                             ;       lower_upper:
(1)  257/    C3D0 :                             ;               JMP (JUMP_TABLE3,X)
(1)  257/    C3D0 :                             ;       upper_upper:
(1)  257/    C3D0 :                             ;               JMP (JUMP_TABLE4,X)
(1)  257/    C3D0 :                             ;After jump:
(1)  257/    C3D0 :                             ;TYA                                                    ;2
(1)  257/    C3D0 :                             ;TAX                                                    ;2
(1)  257/    C3D0 :                             
(1)  257/    C3D0 :                             ;Method 4 - 28 cycles
(1)  257/    C3D0 :                             ;LDA (emu_PC,X)                 ;6
(1)  257/    C3D0 :                             ;TAY                                    ;2
(1)  257/    C3D0 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  257/    C3D0 :                             ;PHA                                    ;3
(1)  257/    C3D0 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  257/    C3D0 :                             ;PHA                                    ;3
(1)  257/    C3D0 :                             ;RTS                                    ;6
(1)  257/    C3D0 :                             
(1)  257/    C3D0 :                             ;Method 5 - 30 cycles
(1)  257/    C3D0 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  257/    C3D2 : A8                          TAY                                             ;2
(1)  257/    C3D3 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  257/    C3D6 : 95 0A                       STA emu_ptr,X                   ;4
(1)  257/    C3D8 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  257/    C3DB : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  257/    C3DD : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  257/    C3E0 :                                                     
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 81 - 1/5/2022 12:19:0


(1)  258/    C3E0 :                     
(1)  259/    C3E0 :                     	;0x33 - NOP
(1)  260/    C3E0 :                     	NOP_0x33:
(1)  261/    C3E0 : (MACRO)             		OP_MACRO 51, "NOP", "IMP", "NOP_0x33"
(1)  261/    C3E0 :                             ;TODO
(1)  262/    C3E0 : (MACRO)             		NEXT_MACRO
(1)  262/    C3E0 :                                             
(1)  262/    C3E0 :  (MACRO-2)                  halt
(1)  262/    C3E0 : 00                          BRK
(1)  262/    C3E1 : 00                          BRK
(1)  262/    C3E2 :                             
(1)  262/    C3E2 :                             ;Method 1 - 60 cycles
(1)  262/    C3E2 :                             ;Jump table must be page aligned!!!
(1)  262/    C3E2 :                             ;LDA (emu_PC,X)                 ;6
(1)  262/    C3E2 :                             ;ASL                                    ;2
(1)  262/    C3E2 :                             ;STA emu_ptr,X                  ;4
(1)  262/    C3E2 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  262/    C3E2 :                             ;ADC #0                                 ;2
(1)  262/    C3E2 :                             ;STA emu_ptr+1,X                ;4
(1)  262/    C3E2 :                             ;LDA (emu_ptr,X)                ;6
(1)  262/    C3E2 :                             ;STA emu_ptr2,X                 ;4
(1)  262/    C3E2 :                             ;INC emu_ptr,X                  ;6
(1)  262/    C3E2 :                             ;BCC .skip                              ;2
(1)  262/    C3E2 :                             ;       INC emu_ptr+1,X         ;6
(1)  262/    C3E2 :                             ;.skip:
(1)  262/    C3E2 :                             ;LDA (emu_ptr,X)                ;6
(1)  262/    C3E2 :                             ;STA emu_ptr2+1,X               ;4
(1)  262/    C3E2 :                             ;JMP (emu_ptr2,X)               ;6
(1)  262/    C3E2 :                             
(1)  262/    C3E2 :                             ;Method 2 - 46 cycles
(1)  262/    C3E2 :                             ;Jump table must be page aligned!!!
(1)  262/    C3E2 :                             ;LDA (emu_PC,X)                 ;6
(1)  262/    C3E2 :                             ;STZ emu_ptr+1,X                ;4
(1)  262/    C3E2 :                             ;ASL                                    ;2
(1)  262/    C3E2 :                             ;ROL emu_ptr+1,X                ;6
(1)  262/    C3E2 :                             ;ASL                                    ;2
(1)  262/    C3E2 :                             ;ROL emu_ptr+1,X                ;6
(1)  262/    C3E2 :                             ;STA emu_ptr,X                  ;4                              
(1)  262/    C3E2 :                             ;LDA emu_ptr+1,X                ;4
(1)  262/    C3E2 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  262/    C3E2 :                             ;STA emu_ptr+1,X                ;4
(1)  262/    C3E2 :                             ;JMP (emu_ptr2,X)               ;6
(1)  262/    C3E2 :                             
(1)  262/    C3E2 :                             ;Method 3 - 30 cycles
(1)  262/    C3E2 :                             ;TXA                                                    ;2
(1)  262/    C3E2 :                             ;TAY                                                    ;2
(1)  262/    C3E2 :                             ;LDA (emu_PC,X)                                 ;6
(1)  262/    C3E2 :                             ;ASL                                                    ;2
(1)  262/    C3E2 :                             ;BCS upper                                              ;2
(1)  262/    C3E2 :                             ;lower:
(1)  262/    C3E2 :                             ;       ASL                                                     ;2
(1)  262/    C3E2 :                             ;       TAX                                                     ;2
(1)  262/    C3E2 :                             ;       BCS upper_lower                         ;2
(1)  262/    C3E2 :                             ;       lower_lower:
(1)  262/    C3E2 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  262/    C3E2 :                             ;       upper_lower:
(1)  262/    C3E2 :                             ;               JMP (JUMP_TABLE2,X)
(1)  262/    C3E2 :                             ;upper:
(1)  262/    C3E2 :                             ;       ASL
(1)  262/    C3E2 :                             ;       TAX
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 82 - 1/5/2022 12:19:0


(1)  262/    C3E2 :                             ;       BCS upper_upper
(1)  262/    C3E2 :                             ;       lower_upper:
(1)  262/    C3E2 :                             ;               JMP (JUMP_TABLE3,X)
(1)  262/    C3E2 :                             ;       upper_upper:
(1)  262/    C3E2 :                             ;               JMP (JUMP_TABLE4,X)
(1)  262/    C3E2 :                             ;After jump:
(1)  262/    C3E2 :                             ;TYA                                                    ;2
(1)  262/    C3E2 :                             ;TAX                                                    ;2
(1)  262/    C3E2 :                             
(1)  262/    C3E2 :                             ;Method 4 - 28 cycles
(1)  262/    C3E2 :                             ;LDA (emu_PC,X)                 ;6
(1)  262/    C3E2 :                             ;TAY                                    ;2
(1)  262/    C3E2 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  262/    C3E2 :                             ;PHA                                    ;3
(1)  262/    C3E2 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  262/    C3E2 :                             ;PHA                                    ;3
(1)  262/    C3E2 :                             ;RTS                                    ;6
(1)  262/    C3E2 :                             
(1)  262/    C3E2 :                             ;Method 5 - 30 cycles
(1)  262/    C3E2 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  262/    C3E4 : A8                          TAY                                             ;2
(1)  262/    C3E5 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  262/    C3E8 : 95 0A                       STA emu_ptr,X                   ;4
(1)  262/    C3EA : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  262/    C3ED : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  262/    C3EF : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  262/    C3F2 :                                                     
(1)  263/    C3F2 :                     
(1)  264/    C3F2 :                     	;0x34 - NOP
(1)  265/    C3F2 :                     	NOP_0x34:
(1)  266/    C3F2 : (MACRO)             		OP_MACRO 52, "NOP", "IMP", "NOP_0x34"
(1)  266/    C3F2 :                             ;TODO
(1)  267/    C3F2 : (MACRO)             		NEXT_MACRO
(1)  267/    C3F2 :                                             
(1)  267/    C3F2 :  (MACRO-2)                  halt
(1)  267/    C3F2 : 00                          BRK
(1)  267/    C3F3 : 00                          BRK
(1)  267/    C3F4 :                             
(1)  267/    C3F4 :                             ;Method 1 - 60 cycles
(1)  267/    C3F4 :                             ;Jump table must be page aligned!!!
(1)  267/    C3F4 :                             ;LDA (emu_PC,X)                 ;6
(1)  267/    C3F4 :                             ;ASL                                    ;2
(1)  267/    C3F4 :                             ;STA emu_ptr,X                  ;4
(1)  267/    C3F4 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  267/    C3F4 :                             ;ADC #0                                 ;2
(1)  267/    C3F4 :                             ;STA emu_ptr+1,X                ;4
(1)  267/    C3F4 :                             ;LDA (emu_ptr,X)                ;6
(1)  267/    C3F4 :                             ;STA emu_ptr2,X                 ;4
(1)  267/    C3F4 :                             ;INC emu_ptr,X                  ;6
(1)  267/    C3F4 :                             ;BCC .skip                              ;2
(1)  267/    C3F4 :                             ;       INC emu_ptr+1,X         ;6
(1)  267/    C3F4 :                             ;.skip:
(1)  267/    C3F4 :                             ;LDA (emu_ptr,X)                ;6
(1)  267/    C3F4 :                             ;STA emu_ptr2+1,X               ;4
(1)  267/    C3F4 :                             ;JMP (emu_ptr2,X)               ;6
(1)  267/    C3F4 :                             
(1)  267/    C3F4 :                             ;Method 2 - 46 cycles
(1)  267/    C3F4 :                             ;Jump table must be page aligned!!!
(1)  267/    C3F4 :                             ;LDA (emu_PC,X)                 ;6
(1)  267/    C3F4 :                             ;STZ emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 83 - 1/5/2022 12:19:0


(1)  267/    C3F4 :                             ;ASL                                    ;2
(1)  267/    C3F4 :                             ;ROL emu_ptr+1,X                ;6
(1)  267/    C3F4 :                             ;ASL                                    ;2
(1)  267/    C3F4 :                             ;ROL emu_ptr+1,X                ;6
(1)  267/    C3F4 :                             ;STA emu_ptr,X                  ;4                              
(1)  267/    C3F4 :                             ;LDA emu_ptr+1,X                ;4
(1)  267/    C3F4 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  267/    C3F4 :                             ;STA emu_ptr+1,X                ;4
(1)  267/    C3F4 :                             ;JMP (emu_ptr2,X)               ;6
(1)  267/    C3F4 :                             
(1)  267/    C3F4 :                             ;Method 3 - 30 cycles
(1)  267/    C3F4 :                             ;TXA                                                    ;2
(1)  267/    C3F4 :                             ;TAY                                                    ;2
(1)  267/    C3F4 :                             ;LDA (emu_PC,X)                                 ;6
(1)  267/    C3F4 :                             ;ASL                                                    ;2
(1)  267/    C3F4 :                             ;BCS upper                                              ;2
(1)  267/    C3F4 :                             ;lower:
(1)  267/    C3F4 :                             ;       ASL                                                     ;2
(1)  267/    C3F4 :                             ;       TAX                                                     ;2
(1)  267/    C3F4 :                             ;       BCS upper_lower                         ;2
(1)  267/    C3F4 :                             ;       lower_lower:
(1)  267/    C3F4 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  267/    C3F4 :                             ;       upper_lower:
(1)  267/    C3F4 :                             ;               JMP (JUMP_TABLE2,X)
(1)  267/    C3F4 :                             ;upper:
(1)  267/    C3F4 :                             ;       ASL
(1)  267/    C3F4 :                             ;       TAX
(1)  267/    C3F4 :                             ;       BCS upper_upper
(1)  267/    C3F4 :                             ;       lower_upper:
(1)  267/    C3F4 :                             ;               JMP (JUMP_TABLE3,X)
(1)  267/    C3F4 :                             ;       upper_upper:
(1)  267/    C3F4 :                             ;               JMP (JUMP_TABLE4,X)
(1)  267/    C3F4 :                             ;After jump:
(1)  267/    C3F4 :                             ;TYA                                                    ;2
(1)  267/    C3F4 :                             ;TAX                                                    ;2
(1)  267/    C3F4 :                             
(1)  267/    C3F4 :                             ;Method 4 - 28 cycles
(1)  267/    C3F4 :                             ;LDA (emu_PC,X)                 ;6
(1)  267/    C3F4 :                             ;TAY                                    ;2
(1)  267/    C3F4 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  267/    C3F4 :                             ;PHA                                    ;3
(1)  267/    C3F4 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  267/    C3F4 :                             ;PHA                                    ;3
(1)  267/    C3F4 :                             ;RTS                                    ;6
(1)  267/    C3F4 :                             
(1)  267/    C3F4 :                             ;Method 5 - 30 cycles
(1)  267/    C3F4 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  267/    C3F6 : A8                          TAY                                             ;2
(1)  267/    C3F7 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  267/    C3FA : 95 0A                       STA emu_ptr,X                   ;4
(1)  267/    C3FC : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  267/    C3FF : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  267/    C401 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  267/    C404 :                                                     
(1)  268/    C404 :                     
(1)  269/    C404 :                     	;0x35 - AND ZPX
(1)  270/    C404 :                     	AND_ZPX:
(1)  271/    C404 : (MACRO)             		OP_MACRO 53, "AND", "ZPX", "AND_ZPX"
(1)  271/    C404 :                             ;TODO
(1)  272/    C404 : (MACRO)             		NEXT_MACRO
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 84 - 1/5/2022 12:19:0


(1)  272/    C404 :                                             
(1)  272/    C404 :  (MACRO-2)                  halt
(1)  272/    C404 : 00                          BRK
(1)  272/    C405 : 00                          BRK
(1)  272/    C406 :                             
(1)  272/    C406 :                             ;Method 1 - 60 cycles
(1)  272/    C406 :                             ;Jump table must be page aligned!!!
(1)  272/    C406 :                             ;LDA (emu_PC,X)                 ;6
(1)  272/    C406 :                             ;ASL                                    ;2
(1)  272/    C406 :                             ;STA emu_ptr,X                  ;4
(1)  272/    C406 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  272/    C406 :                             ;ADC #0                                 ;2
(1)  272/    C406 :                             ;STA emu_ptr+1,X                ;4
(1)  272/    C406 :                             ;LDA (emu_ptr,X)                ;6
(1)  272/    C406 :                             ;STA emu_ptr2,X                 ;4
(1)  272/    C406 :                             ;INC emu_ptr,X                  ;6
(1)  272/    C406 :                             ;BCC .skip                              ;2
(1)  272/    C406 :                             ;       INC emu_ptr+1,X         ;6
(1)  272/    C406 :                             ;.skip:
(1)  272/    C406 :                             ;LDA (emu_ptr,X)                ;6
(1)  272/    C406 :                             ;STA emu_ptr2+1,X               ;4
(1)  272/    C406 :                             ;JMP (emu_ptr2,X)               ;6
(1)  272/    C406 :                             
(1)  272/    C406 :                             ;Method 2 - 46 cycles
(1)  272/    C406 :                             ;Jump table must be page aligned!!!
(1)  272/    C406 :                             ;LDA (emu_PC,X)                 ;6
(1)  272/    C406 :                             ;STZ emu_ptr+1,X                ;4
(1)  272/    C406 :                             ;ASL                                    ;2
(1)  272/    C406 :                             ;ROL emu_ptr+1,X                ;6
(1)  272/    C406 :                             ;ASL                                    ;2
(1)  272/    C406 :                             ;ROL emu_ptr+1,X                ;6
(1)  272/    C406 :                             ;STA emu_ptr,X                  ;4                              
(1)  272/    C406 :                             ;LDA emu_ptr+1,X                ;4
(1)  272/    C406 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  272/    C406 :                             ;STA emu_ptr+1,X                ;4
(1)  272/    C406 :                             ;JMP (emu_ptr2,X)               ;6
(1)  272/    C406 :                             
(1)  272/    C406 :                             ;Method 3 - 30 cycles
(1)  272/    C406 :                             ;TXA                                                    ;2
(1)  272/    C406 :                             ;TAY                                                    ;2
(1)  272/    C406 :                             ;LDA (emu_PC,X)                                 ;6
(1)  272/    C406 :                             ;ASL                                                    ;2
(1)  272/    C406 :                             ;BCS upper                                              ;2
(1)  272/    C406 :                             ;lower:
(1)  272/    C406 :                             ;       ASL                                                     ;2
(1)  272/    C406 :                             ;       TAX                                                     ;2
(1)  272/    C406 :                             ;       BCS upper_lower                         ;2
(1)  272/    C406 :                             ;       lower_lower:
(1)  272/    C406 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  272/    C406 :                             ;       upper_lower:
(1)  272/    C406 :                             ;               JMP (JUMP_TABLE2,X)
(1)  272/    C406 :                             ;upper:
(1)  272/    C406 :                             ;       ASL
(1)  272/    C406 :                             ;       TAX
(1)  272/    C406 :                             ;       BCS upper_upper
(1)  272/    C406 :                             ;       lower_upper:
(1)  272/    C406 :                             ;               JMP (JUMP_TABLE3,X)
(1)  272/    C406 :                             ;       upper_upper:
(1)  272/    C406 :                             ;               JMP (JUMP_TABLE4,X)
(1)  272/    C406 :                             ;After jump:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 85 - 1/5/2022 12:19:0


(1)  272/    C406 :                             ;TYA                                                    ;2
(1)  272/    C406 :                             ;TAX                                                    ;2
(1)  272/    C406 :                             
(1)  272/    C406 :                             ;Method 4 - 28 cycles
(1)  272/    C406 :                             ;LDA (emu_PC,X)                 ;6
(1)  272/    C406 :                             ;TAY                                    ;2
(1)  272/    C406 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  272/    C406 :                             ;PHA                                    ;3
(1)  272/    C406 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  272/    C406 :                             ;PHA                                    ;3
(1)  272/    C406 :                             ;RTS                                    ;6
(1)  272/    C406 :                             
(1)  272/    C406 :                             ;Method 5 - 30 cycles
(1)  272/    C406 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  272/    C408 : A8                          TAY                                             ;2
(1)  272/    C409 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  272/    C40C : 95 0A                       STA emu_ptr,X                   ;4
(1)  272/    C40E : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  272/    C411 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  272/    C413 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  272/    C416 :                                                     
(1)  273/    C416 :                     
(1)  274/    C416 :                     	;0x36 - ROL ZPX
(1)  275/    C416 :                     	ROL_ZPX:
(1)  276/    C416 : (MACRO)             		OP_MACRO 54, "ROL", "ZPX", "ROL_ZPX"
(1)  276/    C416 :                             ;TODO
(1)  277/    C416 : (MACRO)             		NEXT_MACRO
(1)  277/    C416 :                                             
(1)  277/    C416 :  (MACRO-2)                  halt
(1)  277/    C416 : 00                          BRK
(1)  277/    C417 : 00                          BRK
(1)  277/    C418 :                             
(1)  277/    C418 :                             ;Method 1 - 60 cycles
(1)  277/    C418 :                             ;Jump table must be page aligned!!!
(1)  277/    C418 :                             ;LDA (emu_PC,X)                 ;6
(1)  277/    C418 :                             ;ASL                                    ;2
(1)  277/    C418 :                             ;STA emu_ptr,X                  ;4
(1)  277/    C418 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  277/    C418 :                             ;ADC #0                                 ;2
(1)  277/    C418 :                             ;STA emu_ptr+1,X                ;4
(1)  277/    C418 :                             ;LDA (emu_ptr,X)                ;6
(1)  277/    C418 :                             ;STA emu_ptr2,X                 ;4
(1)  277/    C418 :                             ;INC emu_ptr,X                  ;6
(1)  277/    C418 :                             ;BCC .skip                              ;2
(1)  277/    C418 :                             ;       INC emu_ptr+1,X         ;6
(1)  277/    C418 :                             ;.skip:
(1)  277/    C418 :                             ;LDA (emu_ptr,X)                ;6
(1)  277/    C418 :                             ;STA emu_ptr2+1,X               ;4
(1)  277/    C418 :                             ;JMP (emu_ptr2,X)               ;6
(1)  277/    C418 :                             
(1)  277/    C418 :                             ;Method 2 - 46 cycles
(1)  277/    C418 :                             ;Jump table must be page aligned!!!
(1)  277/    C418 :                             ;LDA (emu_PC,X)                 ;6
(1)  277/    C418 :                             ;STZ emu_ptr+1,X                ;4
(1)  277/    C418 :                             ;ASL                                    ;2
(1)  277/    C418 :                             ;ROL emu_ptr+1,X                ;6
(1)  277/    C418 :                             ;ASL                                    ;2
(1)  277/    C418 :                             ;ROL emu_ptr+1,X                ;6
(1)  277/    C418 :                             ;STA emu_ptr,X                  ;4                              
(1)  277/    C418 :                             ;LDA emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 86 - 1/5/2022 12:19:0


(1)  277/    C418 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  277/    C418 :                             ;STA emu_ptr+1,X                ;4
(1)  277/    C418 :                             ;JMP (emu_ptr2,X)               ;6
(1)  277/    C418 :                             
(1)  277/    C418 :                             ;Method 3 - 30 cycles
(1)  277/    C418 :                             ;TXA                                                    ;2
(1)  277/    C418 :                             ;TAY                                                    ;2
(1)  277/    C418 :                             ;LDA (emu_PC,X)                                 ;6
(1)  277/    C418 :                             ;ASL                                                    ;2
(1)  277/    C418 :                             ;BCS upper                                              ;2
(1)  277/    C418 :                             ;lower:
(1)  277/    C418 :                             ;       ASL                                                     ;2
(1)  277/    C418 :                             ;       TAX                                                     ;2
(1)  277/    C418 :                             ;       BCS upper_lower                         ;2
(1)  277/    C418 :                             ;       lower_lower:
(1)  277/    C418 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  277/    C418 :                             ;       upper_lower:
(1)  277/    C418 :                             ;               JMP (JUMP_TABLE2,X)
(1)  277/    C418 :                             ;upper:
(1)  277/    C418 :                             ;       ASL
(1)  277/    C418 :                             ;       TAX
(1)  277/    C418 :                             ;       BCS upper_upper
(1)  277/    C418 :                             ;       lower_upper:
(1)  277/    C418 :                             ;               JMP (JUMP_TABLE3,X)
(1)  277/    C418 :                             ;       upper_upper:
(1)  277/    C418 :                             ;               JMP (JUMP_TABLE4,X)
(1)  277/    C418 :                             ;After jump:
(1)  277/    C418 :                             ;TYA                                                    ;2
(1)  277/    C418 :                             ;TAX                                                    ;2
(1)  277/    C418 :                             
(1)  277/    C418 :                             ;Method 4 - 28 cycles
(1)  277/    C418 :                             ;LDA (emu_PC,X)                 ;6
(1)  277/    C418 :                             ;TAY                                    ;2
(1)  277/    C418 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  277/    C418 :                             ;PHA                                    ;3
(1)  277/    C418 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  277/    C418 :                             ;PHA                                    ;3
(1)  277/    C418 :                             ;RTS                                    ;6
(1)  277/    C418 :                             
(1)  277/    C418 :                             ;Method 5 - 30 cycles
(1)  277/    C418 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  277/    C41A : A8                          TAY                                             ;2
(1)  277/    C41B : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  277/    C41E : 95 0A                       STA emu_ptr,X                   ;4
(1)  277/    C420 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  277/    C423 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  277/    C425 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  277/    C428 :                                                     
(1)  278/    C428 :                     
(1)  279/    C428 :                     	;0x37 - NOP
(1)  280/    C428 :                     	NOP_0x37:
(1)  281/    C428 : (MACRO)             		OP_MACRO 55, "NOP", "IMP", "NOP_0x37"
(1)  281/    C428 :                             ;TODO
(1)  282/    C428 : (MACRO)             		NEXT_MACRO
(1)  282/    C428 :                                             
(1)  282/    C428 :  (MACRO-2)                  halt
(1)  282/    C428 : 00                          BRK
(1)  282/    C429 : 00                          BRK
(1)  282/    C42A :                             
(1)  282/    C42A :                             ;Method 1 - 60 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 87 - 1/5/2022 12:19:0


(1)  282/    C42A :                             ;Jump table must be page aligned!!!
(1)  282/    C42A :                             ;LDA (emu_PC,X)                 ;6
(1)  282/    C42A :                             ;ASL                                    ;2
(1)  282/    C42A :                             ;STA emu_ptr,X                  ;4
(1)  282/    C42A :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  282/    C42A :                             ;ADC #0                                 ;2
(1)  282/    C42A :                             ;STA emu_ptr+1,X                ;4
(1)  282/    C42A :                             ;LDA (emu_ptr,X)                ;6
(1)  282/    C42A :                             ;STA emu_ptr2,X                 ;4
(1)  282/    C42A :                             ;INC emu_ptr,X                  ;6
(1)  282/    C42A :                             ;BCC .skip                              ;2
(1)  282/    C42A :                             ;       INC emu_ptr+1,X         ;6
(1)  282/    C42A :                             ;.skip:
(1)  282/    C42A :                             ;LDA (emu_ptr,X)                ;6
(1)  282/    C42A :                             ;STA emu_ptr2+1,X               ;4
(1)  282/    C42A :                             ;JMP (emu_ptr2,X)               ;6
(1)  282/    C42A :                             
(1)  282/    C42A :                             ;Method 2 - 46 cycles
(1)  282/    C42A :                             ;Jump table must be page aligned!!!
(1)  282/    C42A :                             ;LDA (emu_PC,X)                 ;6
(1)  282/    C42A :                             ;STZ emu_ptr+1,X                ;4
(1)  282/    C42A :                             ;ASL                                    ;2
(1)  282/    C42A :                             ;ROL emu_ptr+1,X                ;6
(1)  282/    C42A :                             ;ASL                                    ;2
(1)  282/    C42A :                             ;ROL emu_ptr+1,X                ;6
(1)  282/    C42A :                             ;STA emu_ptr,X                  ;4                              
(1)  282/    C42A :                             ;LDA emu_ptr+1,X                ;4
(1)  282/    C42A :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  282/    C42A :                             ;STA emu_ptr+1,X                ;4
(1)  282/    C42A :                             ;JMP (emu_ptr2,X)               ;6
(1)  282/    C42A :                             
(1)  282/    C42A :                             ;Method 3 - 30 cycles
(1)  282/    C42A :                             ;TXA                                                    ;2
(1)  282/    C42A :                             ;TAY                                                    ;2
(1)  282/    C42A :                             ;LDA (emu_PC,X)                                 ;6
(1)  282/    C42A :                             ;ASL                                                    ;2
(1)  282/    C42A :                             ;BCS upper                                              ;2
(1)  282/    C42A :                             ;lower:
(1)  282/    C42A :                             ;       ASL                                                     ;2
(1)  282/    C42A :                             ;       TAX                                                     ;2
(1)  282/    C42A :                             ;       BCS upper_lower                         ;2
(1)  282/    C42A :                             ;       lower_lower:
(1)  282/    C42A :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  282/    C42A :                             ;       upper_lower:
(1)  282/    C42A :                             ;               JMP (JUMP_TABLE2,X)
(1)  282/    C42A :                             ;upper:
(1)  282/    C42A :                             ;       ASL
(1)  282/    C42A :                             ;       TAX
(1)  282/    C42A :                             ;       BCS upper_upper
(1)  282/    C42A :                             ;       lower_upper:
(1)  282/    C42A :                             ;               JMP (JUMP_TABLE3,X)
(1)  282/    C42A :                             ;       upper_upper:
(1)  282/    C42A :                             ;               JMP (JUMP_TABLE4,X)
(1)  282/    C42A :                             ;After jump:
(1)  282/    C42A :                             ;TYA                                                    ;2
(1)  282/    C42A :                             ;TAX                                                    ;2
(1)  282/    C42A :                             
(1)  282/    C42A :                             ;Method 4 - 28 cycles
(1)  282/    C42A :                             ;LDA (emu_PC,X)                 ;6
(1)  282/    C42A :                             ;TAY                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 88 - 1/5/2022 12:19:0


(1)  282/    C42A :                             ;LDA JUMP_TABLE,Y               ;4
(1)  282/    C42A :                             ;PHA                                    ;3
(1)  282/    C42A :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  282/    C42A :                             ;PHA                                    ;3
(1)  282/    C42A :                             ;RTS                                    ;6
(1)  282/    C42A :                             
(1)  282/    C42A :                             ;Method 5 - 30 cycles
(1)  282/    C42A : A1 02                       LDA (emu_PC,X)                  ;6
(1)  282/    C42C : A8                          TAY                                             ;2
(1)  282/    C42D : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  282/    C430 : 95 0A                       STA emu_ptr,X                   ;4
(1)  282/    C432 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  282/    C435 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  282/    C437 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  282/    C43A :                                                     
(1)  283/    C43A :                     
(1)  284/    C43A :                     	;0x38 - SEC IMP
(1)  285/    C43A :                     	SEC_IMP:
(1)  286/    C43A : (MACRO)             		OP_MACRO 56, "SEC", "IMP", "SEC_IMP"
(1)  286/    C43A :                             ;TODO
(1)  287/    C43A : (MACRO)             		NEXT_MACRO
(1)  287/    C43A :                                             
(1)  287/    C43A :  (MACRO-2)                  halt
(1)  287/    C43A : 00                          BRK
(1)  287/    C43B : 00                          BRK
(1)  287/    C43C :                             
(1)  287/    C43C :                             ;Method 1 - 60 cycles
(1)  287/    C43C :                             ;Jump table must be page aligned!!!
(1)  287/    C43C :                             ;LDA (emu_PC,X)                 ;6
(1)  287/    C43C :                             ;ASL                                    ;2
(1)  287/    C43C :                             ;STA emu_ptr,X                  ;4
(1)  287/    C43C :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  287/    C43C :                             ;ADC #0                                 ;2
(1)  287/    C43C :                             ;STA emu_ptr+1,X                ;4
(1)  287/    C43C :                             ;LDA (emu_ptr,X)                ;6
(1)  287/    C43C :                             ;STA emu_ptr2,X                 ;4
(1)  287/    C43C :                             ;INC emu_ptr,X                  ;6
(1)  287/    C43C :                             ;BCC .skip                              ;2
(1)  287/    C43C :                             ;       INC emu_ptr+1,X         ;6
(1)  287/    C43C :                             ;.skip:
(1)  287/    C43C :                             ;LDA (emu_ptr,X)                ;6
(1)  287/    C43C :                             ;STA emu_ptr2+1,X               ;4
(1)  287/    C43C :                             ;JMP (emu_ptr2,X)               ;6
(1)  287/    C43C :                             
(1)  287/    C43C :                             ;Method 2 - 46 cycles
(1)  287/    C43C :                             ;Jump table must be page aligned!!!
(1)  287/    C43C :                             ;LDA (emu_PC,X)                 ;6
(1)  287/    C43C :                             ;STZ emu_ptr+1,X                ;4
(1)  287/    C43C :                             ;ASL                                    ;2
(1)  287/    C43C :                             ;ROL emu_ptr+1,X                ;6
(1)  287/    C43C :                             ;ASL                                    ;2
(1)  287/    C43C :                             ;ROL emu_ptr+1,X                ;6
(1)  287/    C43C :                             ;STA emu_ptr,X                  ;4                              
(1)  287/    C43C :                             ;LDA emu_ptr+1,X                ;4
(1)  287/    C43C :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  287/    C43C :                             ;STA emu_ptr+1,X                ;4
(1)  287/    C43C :                             ;JMP (emu_ptr2,X)               ;6
(1)  287/    C43C :                             
(1)  287/    C43C :                             ;Method 3 - 30 cycles
(1)  287/    C43C :                             ;TXA                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 89 - 1/5/2022 12:19:0


(1)  287/    C43C :                             ;TAY                                                    ;2
(1)  287/    C43C :                             ;LDA (emu_PC,X)                                 ;6
(1)  287/    C43C :                             ;ASL                                                    ;2
(1)  287/    C43C :                             ;BCS upper                                              ;2
(1)  287/    C43C :                             ;lower:
(1)  287/    C43C :                             ;       ASL                                                     ;2
(1)  287/    C43C :                             ;       TAX                                                     ;2
(1)  287/    C43C :                             ;       BCS upper_lower                         ;2
(1)  287/    C43C :                             ;       lower_lower:
(1)  287/    C43C :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  287/    C43C :                             ;       upper_lower:
(1)  287/    C43C :                             ;               JMP (JUMP_TABLE2,X)
(1)  287/    C43C :                             ;upper:
(1)  287/    C43C :                             ;       ASL
(1)  287/    C43C :                             ;       TAX
(1)  287/    C43C :                             ;       BCS upper_upper
(1)  287/    C43C :                             ;       lower_upper:
(1)  287/    C43C :                             ;               JMP (JUMP_TABLE3,X)
(1)  287/    C43C :                             ;       upper_upper:
(1)  287/    C43C :                             ;               JMP (JUMP_TABLE4,X)
(1)  287/    C43C :                             ;After jump:
(1)  287/    C43C :                             ;TYA                                                    ;2
(1)  287/    C43C :                             ;TAX                                                    ;2
(1)  287/    C43C :                             
(1)  287/    C43C :                             ;Method 4 - 28 cycles
(1)  287/    C43C :                             ;LDA (emu_PC,X)                 ;6
(1)  287/    C43C :                             ;TAY                                    ;2
(1)  287/    C43C :                             ;LDA JUMP_TABLE,Y               ;4
(1)  287/    C43C :                             ;PHA                                    ;3
(1)  287/    C43C :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  287/    C43C :                             ;PHA                                    ;3
(1)  287/    C43C :                             ;RTS                                    ;6
(1)  287/    C43C :                             
(1)  287/    C43C :                             ;Method 5 - 30 cycles
(1)  287/    C43C : A1 02                       LDA (emu_PC,X)                  ;6
(1)  287/    C43E : A8                          TAY                                             ;2
(1)  287/    C43F : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  287/    C442 : 95 0A                       STA emu_ptr,X                   ;4
(1)  287/    C444 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  287/    C447 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  287/    C449 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  287/    C44C :                                                     
(1)  288/    C44C :                     
(1)  289/    C44C :                     	;0x39 - AND ABSY
(1)  290/    C44C :                     	AND_ABSY:
(1)  291/    C44C : (MACRO)             		OP_MACRO 57, "AND", "ABSY", "AND_ABSY"
(1)  291/    C44C :                             ;TODO
(1)  292/    C44C : (MACRO)             		NEXT_MACRO
(1)  292/    C44C :                                             
(1)  292/    C44C :  (MACRO-2)                  halt
(1)  292/    C44C : 00                          BRK
(1)  292/    C44D : 00                          BRK
(1)  292/    C44E :                             
(1)  292/    C44E :                             ;Method 1 - 60 cycles
(1)  292/    C44E :                             ;Jump table must be page aligned!!!
(1)  292/    C44E :                             ;LDA (emu_PC,X)                 ;6
(1)  292/    C44E :                             ;ASL                                    ;2
(1)  292/    C44E :                             ;STA emu_ptr,X                  ;4
(1)  292/    C44E :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  292/    C44E :                             ;ADC #0                                 ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 90 - 1/5/2022 12:19:0


(1)  292/    C44E :                             ;STA emu_ptr+1,X                ;4
(1)  292/    C44E :                             ;LDA (emu_ptr,X)                ;6
(1)  292/    C44E :                             ;STA emu_ptr2,X                 ;4
(1)  292/    C44E :                             ;INC emu_ptr,X                  ;6
(1)  292/    C44E :                             ;BCC .skip                              ;2
(1)  292/    C44E :                             ;       INC emu_ptr+1,X         ;6
(1)  292/    C44E :                             ;.skip:
(1)  292/    C44E :                             ;LDA (emu_ptr,X)                ;6
(1)  292/    C44E :                             ;STA emu_ptr2+1,X               ;4
(1)  292/    C44E :                             ;JMP (emu_ptr2,X)               ;6
(1)  292/    C44E :                             
(1)  292/    C44E :                             ;Method 2 - 46 cycles
(1)  292/    C44E :                             ;Jump table must be page aligned!!!
(1)  292/    C44E :                             ;LDA (emu_PC,X)                 ;6
(1)  292/    C44E :                             ;STZ emu_ptr+1,X                ;4
(1)  292/    C44E :                             ;ASL                                    ;2
(1)  292/    C44E :                             ;ROL emu_ptr+1,X                ;6
(1)  292/    C44E :                             ;ASL                                    ;2
(1)  292/    C44E :                             ;ROL emu_ptr+1,X                ;6
(1)  292/    C44E :                             ;STA emu_ptr,X                  ;4                              
(1)  292/    C44E :                             ;LDA emu_ptr+1,X                ;4
(1)  292/    C44E :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  292/    C44E :                             ;STA emu_ptr+1,X                ;4
(1)  292/    C44E :                             ;JMP (emu_ptr2,X)               ;6
(1)  292/    C44E :                             
(1)  292/    C44E :                             ;Method 3 - 30 cycles
(1)  292/    C44E :                             ;TXA                                                    ;2
(1)  292/    C44E :                             ;TAY                                                    ;2
(1)  292/    C44E :                             ;LDA (emu_PC,X)                                 ;6
(1)  292/    C44E :                             ;ASL                                                    ;2
(1)  292/    C44E :                             ;BCS upper                                              ;2
(1)  292/    C44E :                             ;lower:
(1)  292/    C44E :                             ;       ASL                                                     ;2
(1)  292/    C44E :                             ;       TAX                                                     ;2
(1)  292/    C44E :                             ;       BCS upper_lower                         ;2
(1)  292/    C44E :                             ;       lower_lower:
(1)  292/    C44E :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  292/    C44E :                             ;       upper_lower:
(1)  292/    C44E :                             ;               JMP (JUMP_TABLE2,X)
(1)  292/    C44E :                             ;upper:
(1)  292/    C44E :                             ;       ASL
(1)  292/    C44E :                             ;       TAX
(1)  292/    C44E :                             ;       BCS upper_upper
(1)  292/    C44E :                             ;       lower_upper:
(1)  292/    C44E :                             ;               JMP (JUMP_TABLE3,X)
(1)  292/    C44E :                             ;       upper_upper:
(1)  292/    C44E :                             ;               JMP (JUMP_TABLE4,X)
(1)  292/    C44E :                             ;After jump:
(1)  292/    C44E :                             ;TYA                                                    ;2
(1)  292/    C44E :                             ;TAX                                                    ;2
(1)  292/    C44E :                             
(1)  292/    C44E :                             ;Method 4 - 28 cycles
(1)  292/    C44E :                             ;LDA (emu_PC,X)                 ;6
(1)  292/    C44E :                             ;TAY                                    ;2
(1)  292/    C44E :                             ;LDA JUMP_TABLE,Y               ;4
(1)  292/    C44E :                             ;PHA                                    ;3
(1)  292/    C44E :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  292/    C44E :                             ;PHA                                    ;3
(1)  292/    C44E :                             ;RTS                                    ;6
(1)  292/    C44E :                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 91 - 1/5/2022 12:19:0


(1)  292/    C44E :                             ;Method 5 - 30 cycles
(1)  292/    C44E : A1 02                       LDA (emu_PC,X)                  ;6
(1)  292/    C450 : A8                          TAY                                             ;2
(1)  292/    C451 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  292/    C454 : 95 0A                       STA emu_ptr,X                   ;4
(1)  292/    C456 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  292/    C459 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  292/    C45B : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  292/    C45E :                                                     
(1)  293/    C45E :                     
(1)  294/    C45E :                     	;0x3A - NOP
(1)  295/    C45E :                     	NOP_0x3A:
(1)  296/    C45E : (MACRO)             		OP_MACRO 58, "NOP", "IMP", "NOP_0x3A"
(1)  296/    C45E :                             ;TODO
(1)  297/    C45E : (MACRO)             		NEXT_MACRO
(1)  297/    C45E :                                             
(1)  297/    C45E :  (MACRO-2)                  halt
(1)  297/    C45E : 00                          BRK
(1)  297/    C45F : 00                          BRK
(1)  297/    C460 :                             
(1)  297/    C460 :                             ;Method 1 - 60 cycles
(1)  297/    C460 :                             ;Jump table must be page aligned!!!
(1)  297/    C460 :                             ;LDA (emu_PC,X)                 ;6
(1)  297/    C460 :                             ;ASL                                    ;2
(1)  297/    C460 :                             ;STA emu_ptr,X                  ;4
(1)  297/    C460 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  297/    C460 :                             ;ADC #0                                 ;2
(1)  297/    C460 :                             ;STA emu_ptr+1,X                ;4
(1)  297/    C460 :                             ;LDA (emu_ptr,X)                ;6
(1)  297/    C460 :                             ;STA emu_ptr2,X                 ;4
(1)  297/    C460 :                             ;INC emu_ptr,X                  ;6
(1)  297/    C460 :                             ;BCC .skip                              ;2
(1)  297/    C460 :                             ;       INC emu_ptr+1,X         ;6
(1)  297/    C460 :                             ;.skip:
(1)  297/    C460 :                             ;LDA (emu_ptr,X)                ;6
(1)  297/    C460 :                             ;STA emu_ptr2+1,X               ;4
(1)  297/    C460 :                             ;JMP (emu_ptr2,X)               ;6
(1)  297/    C460 :                             
(1)  297/    C460 :                             ;Method 2 - 46 cycles
(1)  297/    C460 :                             ;Jump table must be page aligned!!!
(1)  297/    C460 :                             ;LDA (emu_PC,X)                 ;6
(1)  297/    C460 :                             ;STZ emu_ptr+1,X                ;4
(1)  297/    C460 :                             ;ASL                                    ;2
(1)  297/    C460 :                             ;ROL emu_ptr+1,X                ;6
(1)  297/    C460 :                             ;ASL                                    ;2
(1)  297/    C460 :                             ;ROL emu_ptr+1,X                ;6
(1)  297/    C460 :                             ;STA emu_ptr,X                  ;4                              
(1)  297/    C460 :                             ;LDA emu_ptr+1,X                ;4
(1)  297/    C460 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  297/    C460 :                             ;STA emu_ptr+1,X                ;4
(1)  297/    C460 :                             ;JMP (emu_ptr2,X)               ;6
(1)  297/    C460 :                             
(1)  297/    C460 :                             ;Method 3 - 30 cycles
(1)  297/    C460 :                             ;TXA                                                    ;2
(1)  297/    C460 :                             ;TAY                                                    ;2
(1)  297/    C460 :                             ;LDA (emu_PC,X)                                 ;6
(1)  297/    C460 :                             ;ASL                                                    ;2
(1)  297/    C460 :                             ;BCS upper                                              ;2
(1)  297/    C460 :                             ;lower:
(1)  297/    C460 :                             ;       ASL                                                     ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 92 - 1/5/2022 12:19:0


(1)  297/    C460 :                             ;       TAX                                                     ;2
(1)  297/    C460 :                             ;       BCS upper_lower                         ;2
(1)  297/    C460 :                             ;       lower_lower:
(1)  297/    C460 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  297/    C460 :                             ;       upper_lower:
(1)  297/    C460 :                             ;               JMP (JUMP_TABLE2,X)
(1)  297/    C460 :                             ;upper:
(1)  297/    C460 :                             ;       ASL
(1)  297/    C460 :                             ;       TAX
(1)  297/    C460 :                             ;       BCS upper_upper
(1)  297/    C460 :                             ;       lower_upper:
(1)  297/    C460 :                             ;               JMP (JUMP_TABLE3,X)
(1)  297/    C460 :                             ;       upper_upper:
(1)  297/    C460 :                             ;               JMP (JUMP_TABLE4,X)
(1)  297/    C460 :                             ;After jump:
(1)  297/    C460 :                             ;TYA                                                    ;2
(1)  297/    C460 :                             ;TAX                                                    ;2
(1)  297/    C460 :                             
(1)  297/    C460 :                             ;Method 4 - 28 cycles
(1)  297/    C460 :                             ;LDA (emu_PC,X)                 ;6
(1)  297/    C460 :                             ;TAY                                    ;2
(1)  297/    C460 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  297/    C460 :                             ;PHA                                    ;3
(1)  297/    C460 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  297/    C460 :                             ;PHA                                    ;3
(1)  297/    C460 :                             ;RTS                                    ;6
(1)  297/    C460 :                             
(1)  297/    C460 :                             ;Method 5 - 30 cycles
(1)  297/    C460 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  297/    C462 : A8                          TAY                                             ;2
(1)  297/    C463 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  297/    C466 : 95 0A                       STA emu_ptr,X                   ;4
(1)  297/    C468 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  297/    C46B : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  297/    C46D : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  297/    C470 :                                                     
(1)  298/    C470 :                     
(1)  299/    C470 :                     	;0x3B - NOP
(1)  300/    C470 :                     	NOP_0x3B:
(1)  301/    C470 : (MACRO)             		OP_MACRO 59, "NOP", "IMP", "NOP_0x3B"
(1)  301/    C470 :                             ;TODO
(1)  302/    C470 : (MACRO)             		NEXT_MACRO
(1)  302/    C470 :                                             
(1)  302/    C470 :  (MACRO-2)                  halt
(1)  302/    C470 : 00                          BRK
(1)  302/    C471 : 00                          BRK
(1)  302/    C472 :                             
(1)  302/    C472 :                             ;Method 1 - 60 cycles
(1)  302/    C472 :                             ;Jump table must be page aligned!!!
(1)  302/    C472 :                             ;LDA (emu_PC,X)                 ;6
(1)  302/    C472 :                             ;ASL                                    ;2
(1)  302/    C472 :                             ;STA emu_ptr,X                  ;4
(1)  302/    C472 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  302/    C472 :                             ;ADC #0                                 ;2
(1)  302/    C472 :                             ;STA emu_ptr+1,X                ;4
(1)  302/    C472 :                             ;LDA (emu_ptr,X)                ;6
(1)  302/    C472 :                             ;STA emu_ptr2,X                 ;4
(1)  302/    C472 :                             ;INC emu_ptr,X                  ;6
(1)  302/    C472 :                             ;BCC .skip                              ;2
(1)  302/    C472 :                             ;       INC emu_ptr+1,X         ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 93 - 1/5/2022 12:19:0


(1)  302/    C472 :                             ;.skip:
(1)  302/    C472 :                             ;LDA (emu_ptr,X)                ;6
(1)  302/    C472 :                             ;STA emu_ptr2+1,X               ;4
(1)  302/    C472 :                             ;JMP (emu_ptr2,X)               ;6
(1)  302/    C472 :                             
(1)  302/    C472 :                             ;Method 2 - 46 cycles
(1)  302/    C472 :                             ;Jump table must be page aligned!!!
(1)  302/    C472 :                             ;LDA (emu_PC,X)                 ;6
(1)  302/    C472 :                             ;STZ emu_ptr+1,X                ;4
(1)  302/    C472 :                             ;ASL                                    ;2
(1)  302/    C472 :                             ;ROL emu_ptr+1,X                ;6
(1)  302/    C472 :                             ;ASL                                    ;2
(1)  302/    C472 :                             ;ROL emu_ptr+1,X                ;6
(1)  302/    C472 :                             ;STA emu_ptr,X                  ;4                              
(1)  302/    C472 :                             ;LDA emu_ptr+1,X                ;4
(1)  302/    C472 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  302/    C472 :                             ;STA emu_ptr+1,X                ;4
(1)  302/    C472 :                             ;JMP (emu_ptr2,X)               ;6
(1)  302/    C472 :                             
(1)  302/    C472 :                             ;Method 3 - 30 cycles
(1)  302/    C472 :                             ;TXA                                                    ;2
(1)  302/    C472 :                             ;TAY                                                    ;2
(1)  302/    C472 :                             ;LDA (emu_PC,X)                                 ;6
(1)  302/    C472 :                             ;ASL                                                    ;2
(1)  302/    C472 :                             ;BCS upper                                              ;2
(1)  302/    C472 :                             ;lower:
(1)  302/    C472 :                             ;       ASL                                                     ;2
(1)  302/    C472 :                             ;       TAX                                                     ;2
(1)  302/    C472 :                             ;       BCS upper_lower                         ;2
(1)  302/    C472 :                             ;       lower_lower:
(1)  302/    C472 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  302/    C472 :                             ;       upper_lower:
(1)  302/    C472 :                             ;               JMP (JUMP_TABLE2,X)
(1)  302/    C472 :                             ;upper:
(1)  302/    C472 :                             ;       ASL
(1)  302/    C472 :                             ;       TAX
(1)  302/    C472 :                             ;       BCS upper_upper
(1)  302/    C472 :                             ;       lower_upper:
(1)  302/    C472 :                             ;               JMP (JUMP_TABLE3,X)
(1)  302/    C472 :                             ;       upper_upper:
(1)  302/    C472 :                             ;               JMP (JUMP_TABLE4,X)
(1)  302/    C472 :                             ;After jump:
(1)  302/    C472 :                             ;TYA                                                    ;2
(1)  302/    C472 :                             ;TAX                                                    ;2
(1)  302/    C472 :                             
(1)  302/    C472 :                             ;Method 4 - 28 cycles
(1)  302/    C472 :                             ;LDA (emu_PC,X)                 ;6
(1)  302/    C472 :                             ;TAY                                    ;2
(1)  302/    C472 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  302/    C472 :                             ;PHA                                    ;3
(1)  302/    C472 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  302/    C472 :                             ;PHA                                    ;3
(1)  302/    C472 :                             ;RTS                                    ;6
(1)  302/    C472 :                             
(1)  302/    C472 :                             ;Method 5 - 30 cycles
(1)  302/    C472 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  302/    C474 : A8                          TAY                                             ;2
(1)  302/    C475 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  302/    C478 : 95 0A                       STA emu_ptr,X                   ;4
(1)  302/    C47A : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 94 - 1/5/2022 12:19:0


(1)  302/    C47D : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  302/    C47F : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  302/    C482 :                                                     
(1)  303/    C482 :                     
(1)  304/    C482 :                     	;0x3C - NOP
(1)  305/    C482 :                     	NOP_0x3C:
(1)  306/    C482 : (MACRO)             		OP_MACRO 60, "NOP", "IMP", "NOP_0x3C"
(1)  306/    C482 :                             ;TODO
(1)  307/    C482 : (MACRO)             		NEXT_MACRO
(1)  307/    C482 :                                             
(1)  307/    C482 :  (MACRO-2)                  halt
(1)  307/    C482 : 00                          BRK
(1)  307/    C483 : 00                          BRK
(1)  307/    C484 :                             
(1)  307/    C484 :                             ;Method 1 - 60 cycles
(1)  307/    C484 :                             ;Jump table must be page aligned!!!
(1)  307/    C484 :                             ;LDA (emu_PC,X)                 ;6
(1)  307/    C484 :                             ;ASL                                    ;2
(1)  307/    C484 :                             ;STA emu_ptr,X                  ;4
(1)  307/    C484 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  307/    C484 :                             ;ADC #0                                 ;2
(1)  307/    C484 :                             ;STA emu_ptr+1,X                ;4
(1)  307/    C484 :                             ;LDA (emu_ptr,X)                ;6
(1)  307/    C484 :                             ;STA emu_ptr2,X                 ;4
(1)  307/    C484 :                             ;INC emu_ptr,X                  ;6
(1)  307/    C484 :                             ;BCC .skip                              ;2
(1)  307/    C484 :                             ;       INC emu_ptr+1,X         ;6
(1)  307/    C484 :                             ;.skip:
(1)  307/    C484 :                             ;LDA (emu_ptr,X)                ;6
(1)  307/    C484 :                             ;STA emu_ptr2+1,X               ;4
(1)  307/    C484 :                             ;JMP (emu_ptr2,X)               ;6
(1)  307/    C484 :                             
(1)  307/    C484 :                             ;Method 2 - 46 cycles
(1)  307/    C484 :                             ;Jump table must be page aligned!!!
(1)  307/    C484 :                             ;LDA (emu_PC,X)                 ;6
(1)  307/    C484 :                             ;STZ emu_ptr+1,X                ;4
(1)  307/    C484 :                             ;ASL                                    ;2
(1)  307/    C484 :                             ;ROL emu_ptr+1,X                ;6
(1)  307/    C484 :                             ;ASL                                    ;2
(1)  307/    C484 :                             ;ROL emu_ptr+1,X                ;6
(1)  307/    C484 :                             ;STA emu_ptr,X                  ;4                              
(1)  307/    C484 :                             ;LDA emu_ptr+1,X                ;4
(1)  307/    C484 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  307/    C484 :                             ;STA emu_ptr+1,X                ;4
(1)  307/    C484 :                             ;JMP (emu_ptr2,X)               ;6
(1)  307/    C484 :                             
(1)  307/    C484 :                             ;Method 3 - 30 cycles
(1)  307/    C484 :                             ;TXA                                                    ;2
(1)  307/    C484 :                             ;TAY                                                    ;2
(1)  307/    C484 :                             ;LDA (emu_PC,X)                                 ;6
(1)  307/    C484 :                             ;ASL                                                    ;2
(1)  307/    C484 :                             ;BCS upper                                              ;2
(1)  307/    C484 :                             ;lower:
(1)  307/    C484 :                             ;       ASL                                                     ;2
(1)  307/    C484 :                             ;       TAX                                                     ;2
(1)  307/    C484 :                             ;       BCS upper_lower                         ;2
(1)  307/    C484 :                             ;       lower_lower:
(1)  307/    C484 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  307/    C484 :                             ;       upper_lower:
(1)  307/    C484 :                             ;               JMP (JUMP_TABLE2,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 95 - 1/5/2022 12:19:0


(1)  307/    C484 :                             ;upper:
(1)  307/    C484 :                             ;       ASL
(1)  307/    C484 :                             ;       TAX
(1)  307/    C484 :                             ;       BCS upper_upper
(1)  307/    C484 :                             ;       lower_upper:
(1)  307/    C484 :                             ;               JMP (JUMP_TABLE3,X)
(1)  307/    C484 :                             ;       upper_upper:
(1)  307/    C484 :                             ;               JMP (JUMP_TABLE4,X)
(1)  307/    C484 :                             ;After jump:
(1)  307/    C484 :                             ;TYA                                                    ;2
(1)  307/    C484 :                             ;TAX                                                    ;2
(1)  307/    C484 :                             
(1)  307/    C484 :                             ;Method 4 - 28 cycles
(1)  307/    C484 :                             ;LDA (emu_PC,X)                 ;6
(1)  307/    C484 :                             ;TAY                                    ;2
(1)  307/    C484 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  307/    C484 :                             ;PHA                                    ;3
(1)  307/    C484 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  307/    C484 :                             ;PHA                                    ;3
(1)  307/    C484 :                             ;RTS                                    ;6
(1)  307/    C484 :                             
(1)  307/    C484 :                             ;Method 5 - 30 cycles
(1)  307/    C484 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  307/    C486 : A8                          TAY                                             ;2
(1)  307/    C487 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  307/    C48A : 95 0A                       STA emu_ptr,X                   ;4
(1)  307/    C48C : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  307/    C48F : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  307/    C491 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  307/    C494 :                                                     
(1)  308/    C494 :                     
(1)  309/    C494 :                     	;0x3D - AND ABSX
(1)  310/    C494 :                     	AND_ABSX:
(1)  311/    C494 : (MACRO)             		OP_MACRO 61, "AND", "ABSX", "AND_ABSX"
(1)  311/    C494 :                             ;TODO
(1)  312/    C494 : (MACRO)             		NEXT_MACRO
(1)  312/    C494 :                                             
(1)  312/    C494 :  (MACRO-2)                  halt
(1)  312/    C494 : 00                          BRK
(1)  312/    C495 : 00                          BRK
(1)  312/    C496 :                             
(1)  312/    C496 :                             ;Method 1 - 60 cycles
(1)  312/    C496 :                             ;Jump table must be page aligned!!!
(1)  312/    C496 :                             ;LDA (emu_PC,X)                 ;6
(1)  312/    C496 :                             ;ASL                                    ;2
(1)  312/    C496 :                             ;STA emu_ptr,X                  ;4
(1)  312/    C496 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  312/    C496 :                             ;ADC #0                                 ;2
(1)  312/    C496 :                             ;STA emu_ptr+1,X                ;4
(1)  312/    C496 :                             ;LDA (emu_ptr,X)                ;6
(1)  312/    C496 :                             ;STA emu_ptr2,X                 ;4
(1)  312/    C496 :                             ;INC emu_ptr,X                  ;6
(1)  312/    C496 :                             ;BCC .skip                              ;2
(1)  312/    C496 :                             ;       INC emu_ptr+1,X         ;6
(1)  312/    C496 :                             ;.skip:
(1)  312/    C496 :                             ;LDA (emu_ptr,X)                ;6
(1)  312/    C496 :                             ;STA emu_ptr2+1,X               ;4
(1)  312/    C496 :                             ;JMP (emu_ptr2,X)               ;6
(1)  312/    C496 :                             
(1)  312/    C496 :                             ;Method 2 - 46 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 96 - 1/5/2022 12:19:0


(1)  312/    C496 :                             ;Jump table must be page aligned!!!
(1)  312/    C496 :                             ;LDA (emu_PC,X)                 ;6
(1)  312/    C496 :                             ;STZ emu_ptr+1,X                ;4
(1)  312/    C496 :                             ;ASL                                    ;2
(1)  312/    C496 :                             ;ROL emu_ptr+1,X                ;6
(1)  312/    C496 :                             ;ASL                                    ;2
(1)  312/    C496 :                             ;ROL emu_ptr+1,X                ;6
(1)  312/    C496 :                             ;STA emu_ptr,X                  ;4                              
(1)  312/    C496 :                             ;LDA emu_ptr+1,X                ;4
(1)  312/    C496 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  312/    C496 :                             ;STA emu_ptr+1,X                ;4
(1)  312/    C496 :                             ;JMP (emu_ptr2,X)               ;6
(1)  312/    C496 :                             
(1)  312/    C496 :                             ;Method 3 - 30 cycles
(1)  312/    C496 :                             ;TXA                                                    ;2
(1)  312/    C496 :                             ;TAY                                                    ;2
(1)  312/    C496 :                             ;LDA (emu_PC,X)                                 ;6
(1)  312/    C496 :                             ;ASL                                                    ;2
(1)  312/    C496 :                             ;BCS upper                                              ;2
(1)  312/    C496 :                             ;lower:
(1)  312/    C496 :                             ;       ASL                                                     ;2
(1)  312/    C496 :                             ;       TAX                                                     ;2
(1)  312/    C496 :                             ;       BCS upper_lower                         ;2
(1)  312/    C496 :                             ;       lower_lower:
(1)  312/    C496 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  312/    C496 :                             ;       upper_lower:
(1)  312/    C496 :                             ;               JMP (JUMP_TABLE2,X)
(1)  312/    C496 :                             ;upper:
(1)  312/    C496 :                             ;       ASL
(1)  312/    C496 :                             ;       TAX
(1)  312/    C496 :                             ;       BCS upper_upper
(1)  312/    C496 :                             ;       lower_upper:
(1)  312/    C496 :                             ;               JMP (JUMP_TABLE3,X)
(1)  312/    C496 :                             ;       upper_upper:
(1)  312/    C496 :                             ;               JMP (JUMP_TABLE4,X)
(1)  312/    C496 :                             ;After jump:
(1)  312/    C496 :                             ;TYA                                                    ;2
(1)  312/    C496 :                             ;TAX                                                    ;2
(1)  312/    C496 :                             
(1)  312/    C496 :                             ;Method 4 - 28 cycles
(1)  312/    C496 :                             ;LDA (emu_PC,X)                 ;6
(1)  312/    C496 :                             ;TAY                                    ;2
(1)  312/    C496 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  312/    C496 :                             ;PHA                                    ;3
(1)  312/    C496 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  312/    C496 :                             ;PHA                                    ;3
(1)  312/    C496 :                             ;RTS                                    ;6
(1)  312/    C496 :                             
(1)  312/    C496 :                             ;Method 5 - 30 cycles
(1)  312/    C496 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  312/    C498 : A8                          TAY                                             ;2
(1)  312/    C499 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  312/    C49C : 95 0A                       STA emu_ptr,X                   ;4
(1)  312/    C49E : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  312/    C4A1 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  312/    C4A3 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  312/    C4A6 :                                                     
(1)  313/    C4A6 :                     
(1)  314/    C4A6 :                     	;0x3E - ROL ABSX
(1)  315/    C4A6 :                     	ROL_ABSX:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 97 - 1/5/2022 12:19:0


(1)  316/    C4A6 : (MACRO)             		OP_MACRO 62, "ROL", "ABSX", "ROL_ABSX"
(1)  316/    C4A6 :                             ;TODO
(1)  317/    C4A6 : (MACRO)             		NEXT_MACRO
(1)  317/    C4A6 :                                             
(1)  317/    C4A6 :  (MACRO-2)                  halt
(1)  317/    C4A6 : 00                          BRK
(1)  317/    C4A7 : 00                          BRK
(1)  317/    C4A8 :                             
(1)  317/    C4A8 :                             ;Method 1 - 60 cycles
(1)  317/    C4A8 :                             ;Jump table must be page aligned!!!
(1)  317/    C4A8 :                             ;LDA (emu_PC,X)                 ;6
(1)  317/    C4A8 :                             ;ASL                                    ;2
(1)  317/    C4A8 :                             ;STA emu_ptr,X                  ;4
(1)  317/    C4A8 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  317/    C4A8 :                             ;ADC #0                                 ;2
(1)  317/    C4A8 :                             ;STA emu_ptr+1,X                ;4
(1)  317/    C4A8 :                             ;LDA (emu_ptr,X)                ;6
(1)  317/    C4A8 :                             ;STA emu_ptr2,X                 ;4
(1)  317/    C4A8 :                             ;INC emu_ptr,X                  ;6
(1)  317/    C4A8 :                             ;BCC .skip                              ;2
(1)  317/    C4A8 :                             ;       INC emu_ptr+1,X         ;6
(1)  317/    C4A8 :                             ;.skip:
(1)  317/    C4A8 :                             ;LDA (emu_ptr,X)                ;6
(1)  317/    C4A8 :                             ;STA emu_ptr2+1,X               ;4
(1)  317/    C4A8 :                             ;JMP (emu_ptr2,X)               ;6
(1)  317/    C4A8 :                             
(1)  317/    C4A8 :                             ;Method 2 - 46 cycles
(1)  317/    C4A8 :                             ;Jump table must be page aligned!!!
(1)  317/    C4A8 :                             ;LDA (emu_PC,X)                 ;6
(1)  317/    C4A8 :                             ;STZ emu_ptr+1,X                ;4
(1)  317/    C4A8 :                             ;ASL                                    ;2
(1)  317/    C4A8 :                             ;ROL emu_ptr+1,X                ;6
(1)  317/    C4A8 :                             ;ASL                                    ;2
(1)  317/    C4A8 :                             ;ROL emu_ptr+1,X                ;6
(1)  317/    C4A8 :                             ;STA emu_ptr,X                  ;4                              
(1)  317/    C4A8 :                             ;LDA emu_ptr+1,X                ;4
(1)  317/    C4A8 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  317/    C4A8 :                             ;STA emu_ptr+1,X                ;4
(1)  317/    C4A8 :                             ;JMP (emu_ptr2,X)               ;6
(1)  317/    C4A8 :                             
(1)  317/    C4A8 :                             ;Method 3 - 30 cycles
(1)  317/    C4A8 :                             ;TXA                                                    ;2
(1)  317/    C4A8 :                             ;TAY                                                    ;2
(1)  317/    C4A8 :                             ;LDA (emu_PC,X)                                 ;6
(1)  317/    C4A8 :                             ;ASL                                                    ;2
(1)  317/    C4A8 :                             ;BCS upper                                              ;2
(1)  317/    C4A8 :                             ;lower:
(1)  317/    C4A8 :                             ;       ASL                                                     ;2
(1)  317/    C4A8 :                             ;       TAX                                                     ;2
(1)  317/    C4A8 :                             ;       BCS upper_lower                         ;2
(1)  317/    C4A8 :                             ;       lower_lower:
(1)  317/    C4A8 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  317/    C4A8 :                             ;       upper_lower:
(1)  317/    C4A8 :                             ;               JMP (JUMP_TABLE2,X)
(1)  317/    C4A8 :                             ;upper:
(1)  317/    C4A8 :                             ;       ASL
(1)  317/    C4A8 :                             ;       TAX
(1)  317/    C4A8 :                             ;       BCS upper_upper
(1)  317/    C4A8 :                             ;       lower_upper:
(1)  317/    C4A8 :                             ;               JMP (JUMP_TABLE3,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 98 - 1/5/2022 12:19:0


(1)  317/    C4A8 :                             ;       upper_upper:
(1)  317/    C4A8 :                             ;               JMP (JUMP_TABLE4,X)
(1)  317/    C4A8 :                             ;After jump:
(1)  317/    C4A8 :                             ;TYA                                                    ;2
(1)  317/    C4A8 :                             ;TAX                                                    ;2
(1)  317/    C4A8 :                             
(1)  317/    C4A8 :                             ;Method 4 - 28 cycles
(1)  317/    C4A8 :                             ;LDA (emu_PC,X)                 ;6
(1)  317/    C4A8 :                             ;TAY                                    ;2
(1)  317/    C4A8 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  317/    C4A8 :                             ;PHA                                    ;3
(1)  317/    C4A8 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  317/    C4A8 :                             ;PHA                                    ;3
(1)  317/    C4A8 :                             ;RTS                                    ;6
(1)  317/    C4A8 :                             
(1)  317/    C4A8 :                             ;Method 5 - 30 cycles
(1)  317/    C4A8 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  317/    C4AA : A8                          TAY                                             ;2
(1)  317/    C4AB : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  317/    C4AE : 95 0A                       STA emu_ptr,X                   ;4
(1)  317/    C4B0 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  317/    C4B3 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  317/    C4B5 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  317/    C4B8 :                                                     
(1)  318/    C4B8 :                     
(1)  319/    C4B8 :                     	;0x3F - NOP
(1)  320/    C4B8 :                     	NOP_0x3F:
(1)  321/    C4B8 : (MACRO)             		OP_MACRO 63, "NOP", "IMP", "NOP_0x3F"
(1)  321/    C4B8 :                             ;TODO
(1)  322/    C4B8 : (MACRO)             		NEXT_MACRO
(1)  322/    C4B8 :                                             
(1)  322/    C4B8 :  (MACRO-2)                  halt
(1)  322/    C4B8 : 00                          BRK
(1)  322/    C4B9 : 00                          BRK
(1)  322/    C4BA :                             
(1)  322/    C4BA :                             ;Method 1 - 60 cycles
(1)  322/    C4BA :                             ;Jump table must be page aligned!!!
(1)  322/    C4BA :                             ;LDA (emu_PC,X)                 ;6
(1)  322/    C4BA :                             ;ASL                                    ;2
(1)  322/    C4BA :                             ;STA emu_ptr,X                  ;4
(1)  322/    C4BA :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  322/    C4BA :                             ;ADC #0                                 ;2
(1)  322/    C4BA :                             ;STA emu_ptr+1,X                ;4
(1)  322/    C4BA :                             ;LDA (emu_ptr,X)                ;6
(1)  322/    C4BA :                             ;STA emu_ptr2,X                 ;4
(1)  322/    C4BA :                             ;INC emu_ptr,X                  ;6
(1)  322/    C4BA :                             ;BCC .skip                              ;2
(1)  322/    C4BA :                             ;       INC emu_ptr+1,X         ;6
(1)  322/    C4BA :                             ;.skip:
(1)  322/    C4BA :                             ;LDA (emu_ptr,X)                ;6
(1)  322/    C4BA :                             ;STA emu_ptr2+1,X               ;4
(1)  322/    C4BA :                             ;JMP (emu_ptr2,X)               ;6
(1)  322/    C4BA :                             
(1)  322/    C4BA :                             ;Method 2 - 46 cycles
(1)  322/    C4BA :                             ;Jump table must be page aligned!!!
(1)  322/    C4BA :                             ;LDA (emu_PC,X)                 ;6
(1)  322/    C4BA :                             ;STZ emu_ptr+1,X                ;4
(1)  322/    C4BA :                             ;ASL                                    ;2
(1)  322/    C4BA :                             ;ROL emu_ptr+1,X                ;6
(1)  322/    C4BA :                             ;ASL                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 99 - 1/5/2022 12:19:0


(1)  322/    C4BA :                             ;ROL emu_ptr+1,X                ;6
(1)  322/    C4BA :                             ;STA emu_ptr,X                  ;4                              
(1)  322/    C4BA :                             ;LDA emu_ptr+1,X                ;4
(1)  322/    C4BA :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  322/    C4BA :                             ;STA emu_ptr+1,X                ;4
(1)  322/    C4BA :                             ;JMP (emu_ptr2,X)               ;6
(1)  322/    C4BA :                             
(1)  322/    C4BA :                             ;Method 3 - 30 cycles
(1)  322/    C4BA :                             ;TXA                                                    ;2
(1)  322/    C4BA :                             ;TAY                                                    ;2
(1)  322/    C4BA :                             ;LDA (emu_PC,X)                                 ;6
(1)  322/    C4BA :                             ;ASL                                                    ;2
(1)  322/    C4BA :                             ;BCS upper                                              ;2
(1)  322/    C4BA :                             ;lower:
(1)  322/    C4BA :                             ;       ASL                                                     ;2
(1)  322/    C4BA :                             ;       TAX                                                     ;2
(1)  322/    C4BA :                             ;       BCS upper_lower                         ;2
(1)  322/    C4BA :                             ;       lower_lower:
(1)  322/    C4BA :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  322/    C4BA :                             ;       upper_lower:
(1)  322/    C4BA :                             ;               JMP (JUMP_TABLE2,X)
(1)  322/    C4BA :                             ;upper:
(1)  322/    C4BA :                             ;       ASL
(1)  322/    C4BA :                             ;       TAX
(1)  322/    C4BA :                             ;       BCS upper_upper
(1)  322/    C4BA :                             ;       lower_upper:
(1)  322/    C4BA :                             ;               JMP (JUMP_TABLE3,X)
(1)  322/    C4BA :                             ;       upper_upper:
(1)  322/    C4BA :                             ;               JMP (JUMP_TABLE4,X)
(1)  322/    C4BA :                             ;After jump:
(1)  322/    C4BA :                             ;TYA                                                    ;2
(1)  322/    C4BA :                             ;TAX                                                    ;2
(1)  322/    C4BA :                             
(1)  322/    C4BA :                             ;Method 4 - 28 cycles
(1)  322/    C4BA :                             ;LDA (emu_PC,X)                 ;6
(1)  322/    C4BA :                             ;TAY                                    ;2
(1)  322/    C4BA :                             ;LDA JUMP_TABLE,Y               ;4
(1)  322/    C4BA :                             ;PHA                                    ;3
(1)  322/    C4BA :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  322/    C4BA :                             ;PHA                                    ;3
(1)  322/    C4BA :                             ;RTS                                    ;6
(1)  322/    C4BA :                             
(1)  322/    C4BA :                             ;Method 5 - 30 cycles
(1)  322/    C4BA : A1 02                       LDA (emu_PC,X)                  ;6
(1)  322/    C4BC : A8                          TAY                                             ;2
(1)  322/    C4BD : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  322/    C4C0 : 95 0A                       STA emu_ptr,X                   ;4
(1)  322/    C4C2 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  322/    C4C5 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  322/    C4C7 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  322/    C4CA :                                                     
(1)  323/    C4CA :                     
(1)  324/    C4CA :                     	;0x40 - RTI IMP
(1)  325/    C4CA :                     	RTI_IMP:
(1)  326/    C4CA : (MACRO)             		OP_MACRO 64, "RTI", "IMP", "RTI_IMP"
(1)  326/    C4CA :                             ;TODO
(1)  327/    C4CA : (MACRO)             		NEXT_MACRO
(1)  327/    C4CA :                                             
(1)  327/    C4CA :  (MACRO-2)                  halt
(1)  327/    C4CA : 00                          BRK
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 100 - 1/5/2022 12:19:0


(1)  327/    C4CB : 00                          BRK
(1)  327/    C4CC :                             
(1)  327/    C4CC :                             ;Method 1 - 60 cycles
(1)  327/    C4CC :                             ;Jump table must be page aligned!!!
(1)  327/    C4CC :                             ;LDA (emu_PC,X)                 ;6
(1)  327/    C4CC :                             ;ASL                                    ;2
(1)  327/    C4CC :                             ;STA emu_ptr,X                  ;4
(1)  327/    C4CC :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  327/    C4CC :                             ;ADC #0                                 ;2
(1)  327/    C4CC :                             ;STA emu_ptr+1,X                ;4
(1)  327/    C4CC :                             ;LDA (emu_ptr,X)                ;6
(1)  327/    C4CC :                             ;STA emu_ptr2,X                 ;4
(1)  327/    C4CC :                             ;INC emu_ptr,X                  ;6
(1)  327/    C4CC :                             ;BCC .skip                              ;2
(1)  327/    C4CC :                             ;       INC emu_ptr+1,X         ;6
(1)  327/    C4CC :                             ;.skip:
(1)  327/    C4CC :                             ;LDA (emu_ptr,X)                ;6
(1)  327/    C4CC :                             ;STA emu_ptr2+1,X               ;4
(1)  327/    C4CC :                             ;JMP (emu_ptr2,X)               ;6
(1)  327/    C4CC :                             
(1)  327/    C4CC :                             ;Method 2 - 46 cycles
(1)  327/    C4CC :                             ;Jump table must be page aligned!!!
(1)  327/    C4CC :                             ;LDA (emu_PC,X)                 ;6
(1)  327/    C4CC :                             ;STZ emu_ptr+1,X                ;4
(1)  327/    C4CC :                             ;ASL                                    ;2
(1)  327/    C4CC :                             ;ROL emu_ptr+1,X                ;6
(1)  327/    C4CC :                             ;ASL                                    ;2
(1)  327/    C4CC :                             ;ROL emu_ptr+1,X                ;6
(1)  327/    C4CC :                             ;STA emu_ptr,X                  ;4                              
(1)  327/    C4CC :                             ;LDA emu_ptr+1,X                ;4
(1)  327/    C4CC :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  327/    C4CC :                             ;STA emu_ptr+1,X                ;4
(1)  327/    C4CC :                             ;JMP (emu_ptr2,X)               ;6
(1)  327/    C4CC :                             
(1)  327/    C4CC :                             ;Method 3 - 30 cycles
(1)  327/    C4CC :                             ;TXA                                                    ;2
(1)  327/    C4CC :                             ;TAY                                                    ;2
(1)  327/    C4CC :                             ;LDA (emu_PC,X)                                 ;6
(1)  327/    C4CC :                             ;ASL                                                    ;2
(1)  327/    C4CC :                             ;BCS upper                                              ;2
(1)  327/    C4CC :                             ;lower:
(1)  327/    C4CC :                             ;       ASL                                                     ;2
(1)  327/    C4CC :                             ;       TAX                                                     ;2
(1)  327/    C4CC :                             ;       BCS upper_lower                         ;2
(1)  327/    C4CC :                             ;       lower_lower:
(1)  327/    C4CC :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  327/    C4CC :                             ;       upper_lower:
(1)  327/    C4CC :                             ;               JMP (JUMP_TABLE2,X)
(1)  327/    C4CC :                             ;upper:
(1)  327/    C4CC :                             ;       ASL
(1)  327/    C4CC :                             ;       TAX
(1)  327/    C4CC :                             ;       BCS upper_upper
(1)  327/    C4CC :                             ;       lower_upper:
(1)  327/    C4CC :                             ;               JMP (JUMP_TABLE3,X)
(1)  327/    C4CC :                             ;       upper_upper:
(1)  327/    C4CC :                             ;               JMP (JUMP_TABLE4,X)
(1)  327/    C4CC :                             ;After jump:
(1)  327/    C4CC :                             ;TYA                                                    ;2
(1)  327/    C4CC :                             ;TAX                                                    ;2
(1)  327/    C4CC :                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 101 - 1/5/2022 12:19:0


(1)  327/    C4CC :                             ;Method 4 - 28 cycles
(1)  327/    C4CC :                             ;LDA (emu_PC,X)                 ;6
(1)  327/    C4CC :                             ;TAY                                    ;2
(1)  327/    C4CC :                             ;LDA JUMP_TABLE,Y               ;4
(1)  327/    C4CC :                             ;PHA                                    ;3
(1)  327/    C4CC :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  327/    C4CC :                             ;PHA                                    ;3
(1)  327/    C4CC :                             ;RTS                                    ;6
(1)  327/    C4CC :                             
(1)  327/    C4CC :                             ;Method 5 - 30 cycles
(1)  327/    C4CC : A1 02                       LDA (emu_PC,X)                  ;6
(1)  327/    C4CE : A8                          TAY                                             ;2
(1)  327/    C4CF : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  327/    C4D2 : 95 0A                       STA emu_ptr,X                   ;4
(1)  327/    C4D4 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  327/    C4D7 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  327/    C4D9 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  327/    C4DC :                                                     
(1)  328/    C4DC :                     
(1)  329/    C4DC :                     	;0x41 - EOR IX
(1)  330/    C4DC :                     	EOR_IX:
(1)  331/    C4DC : (MACRO)             		OP_MACRO 65, "EOR", "IX", "EOR_IX"
(1)  331/    C4DC :                             ;TODO
(1)  332/    C4DC : (MACRO)             		NEXT_MACRO
(1)  332/    C4DC :                                             
(1)  332/    C4DC :  (MACRO-2)                  halt
(1)  332/    C4DC : 00                          BRK
(1)  332/    C4DD : 00                          BRK
(1)  332/    C4DE :                             
(1)  332/    C4DE :                             ;Method 1 - 60 cycles
(1)  332/    C4DE :                             ;Jump table must be page aligned!!!
(1)  332/    C4DE :                             ;LDA (emu_PC,X)                 ;6
(1)  332/    C4DE :                             ;ASL                                    ;2
(1)  332/    C4DE :                             ;STA emu_ptr,X                  ;4
(1)  332/    C4DE :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  332/    C4DE :                             ;ADC #0                                 ;2
(1)  332/    C4DE :                             ;STA emu_ptr+1,X                ;4
(1)  332/    C4DE :                             ;LDA (emu_ptr,X)                ;6
(1)  332/    C4DE :                             ;STA emu_ptr2,X                 ;4
(1)  332/    C4DE :                             ;INC emu_ptr,X                  ;6
(1)  332/    C4DE :                             ;BCC .skip                              ;2
(1)  332/    C4DE :                             ;       INC emu_ptr+1,X         ;6
(1)  332/    C4DE :                             ;.skip:
(1)  332/    C4DE :                             ;LDA (emu_ptr,X)                ;6
(1)  332/    C4DE :                             ;STA emu_ptr2+1,X               ;4
(1)  332/    C4DE :                             ;JMP (emu_ptr2,X)               ;6
(1)  332/    C4DE :                             
(1)  332/    C4DE :                             ;Method 2 - 46 cycles
(1)  332/    C4DE :                             ;Jump table must be page aligned!!!
(1)  332/    C4DE :                             ;LDA (emu_PC,X)                 ;6
(1)  332/    C4DE :                             ;STZ emu_ptr+1,X                ;4
(1)  332/    C4DE :                             ;ASL                                    ;2
(1)  332/    C4DE :                             ;ROL emu_ptr+1,X                ;6
(1)  332/    C4DE :                             ;ASL                                    ;2
(1)  332/    C4DE :                             ;ROL emu_ptr+1,X                ;6
(1)  332/    C4DE :                             ;STA emu_ptr,X                  ;4                              
(1)  332/    C4DE :                             ;LDA emu_ptr+1,X                ;4
(1)  332/    C4DE :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  332/    C4DE :                             ;STA emu_ptr+1,X                ;4
(1)  332/    C4DE :                             ;JMP (emu_ptr2,X)               ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 102 - 1/5/2022 12:19:0


(1)  332/    C4DE :                             
(1)  332/    C4DE :                             ;Method 3 - 30 cycles
(1)  332/    C4DE :                             ;TXA                                                    ;2
(1)  332/    C4DE :                             ;TAY                                                    ;2
(1)  332/    C4DE :                             ;LDA (emu_PC,X)                                 ;6
(1)  332/    C4DE :                             ;ASL                                                    ;2
(1)  332/    C4DE :                             ;BCS upper                                              ;2
(1)  332/    C4DE :                             ;lower:
(1)  332/    C4DE :                             ;       ASL                                                     ;2
(1)  332/    C4DE :                             ;       TAX                                                     ;2
(1)  332/    C4DE :                             ;       BCS upper_lower                         ;2
(1)  332/    C4DE :                             ;       lower_lower:
(1)  332/    C4DE :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  332/    C4DE :                             ;       upper_lower:
(1)  332/    C4DE :                             ;               JMP (JUMP_TABLE2,X)
(1)  332/    C4DE :                             ;upper:
(1)  332/    C4DE :                             ;       ASL
(1)  332/    C4DE :                             ;       TAX
(1)  332/    C4DE :                             ;       BCS upper_upper
(1)  332/    C4DE :                             ;       lower_upper:
(1)  332/    C4DE :                             ;               JMP (JUMP_TABLE3,X)
(1)  332/    C4DE :                             ;       upper_upper:
(1)  332/    C4DE :                             ;               JMP (JUMP_TABLE4,X)
(1)  332/    C4DE :                             ;After jump:
(1)  332/    C4DE :                             ;TYA                                                    ;2
(1)  332/    C4DE :                             ;TAX                                                    ;2
(1)  332/    C4DE :                             
(1)  332/    C4DE :                             ;Method 4 - 28 cycles
(1)  332/    C4DE :                             ;LDA (emu_PC,X)                 ;6
(1)  332/    C4DE :                             ;TAY                                    ;2
(1)  332/    C4DE :                             ;LDA JUMP_TABLE,Y               ;4
(1)  332/    C4DE :                             ;PHA                                    ;3
(1)  332/    C4DE :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  332/    C4DE :                             ;PHA                                    ;3
(1)  332/    C4DE :                             ;RTS                                    ;6
(1)  332/    C4DE :                             
(1)  332/    C4DE :                             ;Method 5 - 30 cycles
(1)  332/    C4DE : A1 02                       LDA (emu_PC,X)                  ;6
(1)  332/    C4E0 : A8                          TAY                                             ;2
(1)  332/    C4E1 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  332/    C4E4 : 95 0A                       STA emu_ptr,X                   ;4
(1)  332/    C4E6 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  332/    C4E9 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  332/    C4EB : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  332/    C4EE :                                                     
(1)  333/    C4EE :                     
(1)  334/    C4EE :                     	;0x42 - NOP
(1)  335/    C4EE :                     	NOP_0x42:
(1)  336/    C4EE : (MACRO)             		OP_MACRO 66, "NOP", "IMP", "NOP_0x42"
(1)  336/    C4EE :                             ;TODO
(1)  337/    C4EE : (MACRO)             		NEXT_MACRO
(1)  337/    C4EE :                                             
(1)  337/    C4EE :  (MACRO-2)                  halt
(1)  337/    C4EE : 00                          BRK
(1)  337/    C4EF : 00                          BRK
(1)  337/    C4F0 :                             
(1)  337/    C4F0 :                             ;Method 1 - 60 cycles
(1)  337/    C4F0 :                             ;Jump table must be page aligned!!!
(1)  337/    C4F0 :                             ;LDA (emu_PC,X)                 ;6
(1)  337/    C4F0 :                             ;ASL                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 103 - 1/5/2022 12:19:0


(1)  337/    C4F0 :                             ;STA emu_ptr,X                  ;4
(1)  337/    C4F0 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  337/    C4F0 :                             ;ADC #0                                 ;2
(1)  337/    C4F0 :                             ;STA emu_ptr+1,X                ;4
(1)  337/    C4F0 :                             ;LDA (emu_ptr,X)                ;6
(1)  337/    C4F0 :                             ;STA emu_ptr2,X                 ;4
(1)  337/    C4F0 :                             ;INC emu_ptr,X                  ;6
(1)  337/    C4F0 :                             ;BCC .skip                              ;2
(1)  337/    C4F0 :                             ;       INC emu_ptr+1,X         ;6
(1)  337/    C4F0 :                             ;.skip:
(1)  337/    C4F0 :                             ;LDA (emu_ptr,X)                ;6
(1)  337/    C4F0 :                             ;STA emu_ptr2+1,X               ;4
(1)  337/    C4F0 :                             ;JMP (emu_ptr2,X)               ;6
(1)  337/    C4F0 :                             
(1)  337/    C4F0 :                             ;Method 2 - 46 cycles
(1)  337/    C4F0 :                             ;Jump table must be page aligned!!!
(1)  337/    C4F0 :                             ;LDA (emu_PC,X)                 ;6
(1)  337/    C4F0 :                             ;STZ emu_ptr+1,X                ;4
(1)  337/    C4F0 :                             ;ASL                                    ;2
(1)  337/    C4F0 :                             ;ROL emu_ptr+1,X                ;6
(1)  337/    C4F0 :                             ;ASL                                    ;2
(1)  337/    C4F0 :                             ;ROL emu_ptr+1,X                ;6
(1)  337/    C4F0 :                             ;STA emu_ptr,X                  ;4                              
(1)  337/    C4F0 :                             ;LDA emu_ptr+1,X                ;4
(1)  337/    C4F0 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  337/    C4F0 :                             ;STA emu_ptr+1,X                ;4
(1)  337/    C4F0 :                             ;JMP (emu_ptr2,X)               ;6
(1)  337/    C4F0 :                             
(1)  337/    C4F0 :                             ;Method 3 - 30 cycles
(1)  337/    C4F0 :                             ;TXA                                                    ;2
(1)  337/    C4F0 :                             ;TAY                                                    ;2
(1)  337/    C4F0 :                             ;LDA (emu_PC,X)                                 ;6
(1)  337/    C4F0 :                             ;ASL                                                    ;2
(1)  337/    C4F0 :                             ;BCS upper                                              ;2
(1)  337/    C4F0 :                             ;lower:
(1)  337/    C4F0 :                             ;       ASL                                                     ;2
(1)  337/    C4F0 :                             ;       TAX                                                     ;2
(1)  337/    C4F0 :                             ;       BCS upper_lower                         ;2
(1)  337/    C4F0 :                             ;       lower_lower:
(1)  337/    C4F0 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  337/    C4F0 :                             ;       upper_lower:
(1)  337/    C4F0 :                             ;               JMP (JUMP_TABLE2,X)
(1)  337/    C4F0 :                             ;upper:
(1)  337/    C4F0 :                             ;       ASL
(1)  337/    C4F0 :                             ;       TAX
(1)  337/    C4F0 :                             ;       BCS upper_upper
(1)  337/    C4F0 :                             ;       lower_upper:
(1)  337/    C4F0 :                             ;               JMP (JUMP_TABLE3,X)
(1)  337/    C4F0 :                             ;       upper_upper:
(1)  337/    C4F0 :                             ;               JMP (JUMP_TABLE4,X)
(1)  337/    C4F0 :                             ;After jump:
(1)  337/    C4F0 :                             ;TYA                                                    ;2
(1)  337/    C4F0 :                             ;TAX                                                    ;2
(1)  337/    C4F0 :                             
(1)  337/    C4F0 :                             ;Method 4 - 28 cycles
(1)  337/    C4F0 :                             ;LDA (emu_PC,X)                 ;6
(1)  337/    C4F0 :                             ;TAY                                    ;2
(1)  337/    C4F0 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  337/    C4F0 :                             ;PHA                                    ;3
(1)  337/    C4F0 :                             ;LDA JUMP_TABLE2,Y              ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 104 - 1/5/2022 12:19:0


(1)  337/    C4F0 :                             ;PHA                                    ;3
(1)  337/    C4F0 :                             ;RTS                                    ;6
(1)  337/    C4F0 :                             
(1)  337/    C4F0 :                             ;Method 5 - 30 cycles
(1)  337/    C4F0 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  337/    C4F2 : A8                          TAY                                             ;2
(1)  337/    C4F3 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  337/    C4F6 : 95 0A                       STA emu_ptr,X                   ;4
(1)  337/    C4F8 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  337/    C4FB : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  337/    C4FD : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  337/    C500 :                                                     
(1)  338/    C500 :                     
(1)  339/    C500 :                     	;0x43 - NOP
(1)  340/    C500 :                     	NOP_0x43:
(1)  341/    C500 : (MACRO)             		OP_MACRO 67, "NOP", "IMP", "NOP_0x43"
(1)  341/    C500 :                             ;TODO
(1)  342/    C500 : (MACRO)             		NEXT_MACRO
(1)  342/    C500 :                                             
(1)  342/    C500 :  (MACRO-2)                  halt
(1)  342/    C500 : 00                          BRK
(1)  342/    C501 : 00                          BRK
(1)  342/    C502 :                             
(1)  342/    C502 :                             ;Method 1 - 60 cycles
(1)  342/    C502 :                             ;Jump table must be page aligned!!!
(1)  342/    C502 :                             ;LDA (emu_PC,X)                 ;6
(1)  342/    C502 :                             ;ASL                                    ;2
(1)  342/    C502 :                             ;STA emu_ptr,X                  ;4
(1)  342/    C502 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  342/    C502 :                             ;ADC #0                                 ;2
(1)  342/    C502 :                             ;STA emu_ptr+1,X                ;4
(1)  342/    C502 :                             ;LDA (emu_ptr,X)                ;6
(1)  342/    C502 :                             ;STA emu_ptr2,X                 ;4
(1)  342/    C502 :                             ;INC emu_ptr,X                  ;6
(1)  342/    C502 :                             ;BCC .skip                              ;2
(1)  342/    C502 :                             ;       INC emu_ptr+1,X         ;6
(1)  342/    C502 :                             ;.skip:
(1)  342/    C502 :                             ;LDA (emu_ptr,X)                ;6
(1)  342/    C502 :                             ;STA emu_ptr2+1,X               ;4
(1)  342/    C502 :                             ;JMP (emu_ptr2,X)               ;6
(1)  342/    C502 :                             
(1)  342/    C502 :                             ;Method 2 - 46 cycles
(1)  342/    C502 :                             ;Jump table must be page aligned!!!
(1)  342/    C502 :                             ;LDA (emu_PC,X)                 ;6
(1)  342/    C502 :                             ;STZ emu_ptr+1,X                ;4
(1)  342/    C502 :                             ;ASL                                    ;2
(1)  342/    C502 :                             ;ROL emu_ptr+1,X                ;6
(1)  342/    C502 :                             ;ASL                                    ;2
(1)  342/    C502 :                             ;ROL emu_ptr+1,X                ;6
(1)  342/    C502 :                             ;STA emu_ptr,X                  ;4                              
(1)  342/    C502 :                             ;LDA emu_ptr+1,X                ;4
(1)  342/    C502 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  342/    C502 :                             ;STA emu_ptr+1,X                ;4
(1)  342/    C502 :                             ;JMP (emu_ptr2,X)               ;6
(1)  342/    C502 :                             
(1)  342/    C502 :                             ;Method 3 - 30 cycles
(1)  342/    C502 :                             ;TXA                                                    ;2
(1)  342/    C502 :                             ;TAY                                                    ;2
(1)  342/    C502 :                             ;LDA (emu_PC,X)                                 ;6
(1)  342/    C502 :                             ;ASL                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 105 - 1/5/2022 12:19:0


(1)  342/    C502 :                             ;BCS upper                                              ;2
(1)  342/    C502 :                             ;lower:
(1)  342/    C502 :                             ;       ASL                                                     ;2
(1)  342/    C502 :                             ;       TAX                                                     ;2
(1)  342/    C502 :                             ;       BCS upper_lower                         ;2
(1)  342/    C502 :                             ;       lower_lower:
(1)  342/    C502 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  342/    C502 :                             ;       upper_lower:
(1)  342/    C502 :                             ;               JMP (JUMP_TABLE2,X)
(1)  342/    C502 :                             ;upper:
(1)  342/    C502 :                             ;       ASL
(1)  342/    C502 :                             ;       TAX
(1)  342/    C502 :                             ;       BCS upper_upper
(1)  342/    C502 :                             ;       lower_upper:
(1)  342/    C502 :                             ;               JMP (JUMP_TABLE3,X)
(1)  342/    C502 :                             ;       upper_upper:
(1)  342/    C502 :                             ;               JMP (JUMP_TABLE4,X)
(1)  342/    C502 :                             ;After jump:
(1)  342/    C502 :                             ;TYA                                                    ;2
(1)  342/    C502 :                             ;TAX                                                    ;2
(1)  342/    C502 :                             
(1)  342/    C502 :                             ;Method 4 - 28 cycles
(1)  342/    C502 :                             ;LDA (emu_PC,X)                 ;6
(1)  342/    C502 :                             ;TAY                                    ;2
(1)  342/    C502 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  342/    C502 :                             ;PHA                                    ;3
(1)  342/    C502 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  342/    C502 :                             ;PHA                                    ;3
(1)  342/    C502 :                             ;RTS                                    ;6
(1)  342/    C502 :                             
(1)  342/    C502 :                             ;Method 5 - 30 cycles
(1)  342/    C502 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  342/    C504 : A8                          TAY                                             ;2
(1)  342/    C505 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  342/    C508 : 95 0A                       STA emu_ptr,X                   ;4
(1)  342/    C50A : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  342/    C50D : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  342/    C50F : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  342/    C512 :                                                     
(1)  343/    C512 :                     
(1)  344/    C512 :                     	;0x44 - NOP
(1)  345/    C512 :                     	NOP_0x44:
(1)  346/    C512 : (MACRO)             		OP_MACRO 68, "NOP", "IMP", "NOP_0x44"
(1)  346/    C512 :                             ;TODO
(1)  347/    C512 : (MACRO)             		NEXT_MACRO
(1)  347/    C512 :                                             
(1)  347/    C512 :  (MACRO-2)                  halt
(1)  347/    C512 : 00                          BRK
(1)  347/    C513 : 00                          BRK
(1)  347/    C514 :                             
(1)  347/    C514 :                             ;Method 1 - 60 cycles
(1)  347/    C514 :                             ;Jump table must be page aligned!!!
(1)  347/    C514 :                             ;LDA (emu_PC,X)                 ;6
(1)  347/    C514 :                             ;ASL                                    ;2
(1)  347/    C514 :                             ;STA emu_ptr,X                  ;4
(1)  347/    C514 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  347/    C514 :                             ;ADC #0                                 ;2
(1)  347/    C514 :                             ;STA emu_ptr+1,X                ;4
(1)  347/    C514 :                             ;LDA (emu_ptr,X)                ;6
(1)  347/    C514 :                             ;STA emu_ptr2,X                 ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 106 - 1/5/2022 12:19:0


(1)  347/    C514 :                             ;INC emu_ptr,X                  ;6
(1)  347/    C514 :                             ;BCC .skip                              ;2
(1)  347/    C514 :                             ;       INC emu_ptr+1,X         ;6
(1)  347/    C514 :                             ;.skip:
(1)  347/    C514 :                             ;LDA (emu_ptr,X)                ;6
(1)  347/    C514 :                             ;STA emu_ptr2+1,X               ;4
(1)  347/    C514 :                             ;JMP (emu_ptr2,X)               ;6
(1)  347/    C514 :                             
(1)  347/    C514 :                             ;Method 2 - 46 cycles
(1)  347/    C514 :                             ;Jump table must be page aligned!!!
(1)  347/    C514 :                             ;LDA (emu_PC,X)                 ;6
(1)  347/    C514 :                             ;STZ emu_ptr+1,X                ;4
(1)  347/    C514 :                             ;ASL                                    ;2
(1)  347/    C514 :                             ;ROL emu_ptr+1,X                ;6
(1)  347/    C514 :                             ;ASL                                    ;2
(1)  347/    C514 :                             ;ROL emu_ptr+1,X                ;6
(1)  347/    C514 :                             ;STA emu_ptr,X                  ;4                              
(1)  347/    C514 :                             ;LDA emu_ptr+1,X                ;4
(1)  347/    C514 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  347/    C514 :                             ;STA emu_ptr+1,X                ;4
(1)  347/    C514 :                             ;JMP (emu_ptr2,X)               ;6
(1)  347/    C514 :                             
(1)  347/    C514 :                             ;Method 3 - 30 cycles
(1)  347/    C514 :                             ;TXA                                                    ;2
(1)  347/    C514 :                             ;TAY                                                    ;2
(1)  347/    C514 :                             ;LDA (emu_PC,X)                                 ;6
(1)  347/    C514 :                             ;ASL                                                    ;2
(1)  347/    C514 :                             ;BCS upper                                              ;2
(1)  347/    C514 :                             ;lower:
(1)  347/    C514 :                             ;       ASL                                                     ;2
(1)  347/    C514 :                             ;       TAX                                                     ;2
(1)  347/    C514 :                             ;       BCS upper_lower                         ;2
(1)  347/    C514 :                             ;       lower_lower:
(1)  347/    C514 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  347/    C514 :                             ;       upper_lower:
(1)  347/    C514 :                             ;               JMP (JUMP_TABLE2,X)
(1)  347/    C514 :                             ;upper:
(1)  347/    C514 :                             ;       ASL
(1)  347/    C514 :                             ;       TAX
(1)  347/    C514 :                             ;       BCS upper_upper
(1)  347/    C514 :                             ;       lower_upper:
(1)  347/    C514 :                             ;               JMP (JUMP_TABLE3,X)
(1)  347/    C514 :                             ;       upper_upper:
(1)  347/    C514 :                             ;               JMP (JUMP_TABLE4,X)
(1)  347/    C514 :                             ;After jump:
(1)  347/    C514 :                             ;TYA                                                    ;2
(1)  347/    C514 :                             ;TAX                                                    ;2
(1)  347/    C514 :                             
(1)  347/    C514 :                             ;Method 4 - 28 cycles
(1)  347/    C514 :                             ;LDA (emu_PC,X)                 ;6
(1)  347/    C514 :                             ;TAY                                    ;2
(1)  347/    C514 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  347/    C514 :                             ;PHA                                    ;3
(1)  347/    C514 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  347/    C514 :                             ;PHA                                    ;3
(1)  347/    C514 :                             ;RTS                                    ;6
(1)  347/    C514 :                             
(1)  347/    C514 :                             ;Method 5 - 30 cycles
(1)  347/    C514 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  347/    C516 : A8                          TAY                                             ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 107 - 1/5/2022 12:19:0


(1)  347/    C517 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  347/    C51A : 95 0A                       STA emu_ptr,X                   ;4
(1)  347/    C51C : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  347/    C51F : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  347/    C521 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  347/    C524 :                                                     
(1)  348/    C524 :                     
(1)  349/    C524 :                     	;0x45 - EOR ZP
(1)  350/    C524 :                     	EOR_ZP:
(1)  351/    C524 : (MACRO)             		OP_MACRO 69, "EOR", "ZP", "EOR_ZP"
(1)  351/    C524 :                             ;TODO
(1)  352/    C524 : (MACRO)             		NEXT_MACRO
(1)  352/    C524 :                                             
(1)  352/    C524 :  (MACRO-2)                  halt
(1)  352/    C524 : 00                          BRK
(1)  352/    C525 : 00                          BRK
(1)  352/    C526 :                             
(1)  352/    C526 :                             ;Method 1 - 60 cycles
(1)  352/    C526 :                             ;Jump table must be page aligned!!!
(1)  352/    C526 :                             ;LDA (emu_PC,X)                 ;6
(1)  352/    C526 :                             ;ASL                                    ;2
(1)  352/    C526 :                             ;STA emu_ptr,X                  ;4
(1)  352/    C526 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  352/    C526 :                             ;ADC #0                                 ;2
(1)  352/    C526 :                             ;STA emu_ptr+1,X                ;4
(1)  352/    C526 :                             ;LDA (emu_ptr,X)                ;6
(1)  352/    C526 :                             ;STA emu_ptr2,X                 ;4
(1)  352/    C526 :                             ;INC emu_ptr,X                  ;6
(1)  352/    C526 :                             ;BCC .skip                              ;2
(1)  352/    C526 :                             ;       INC emu_ptr+1,X         ;6
(1)  352/    C526 :                             ;.skip:
(1)  352/    C526 :                             ;LDA (emu_ptr,X)                ;6
(1)  352/    C526 :                             ;STA emu_ptr2+1,X               ;4
(1)  352/    C526 :                             ;JMP (emu_ptr2,X)               ;6
(1)  352/    C526 :                             
(1)  352/    C526 :                             ;Method 2 - 46 cycles
(1)  352/    C526 :                             ;Jump table must be page aligned!!!
(1)  352/    C526 :                             ;LDA (emu_PC,X)                 ;6
(1)  352/    C526 :                             ;STZ emu_ptr+1,X                ;4
(1)  352/    C526 :                             ;ASL                                    ;2
(1)  352/    C526 :                             ;ROL emu_ptr+1,X                ;6
(1)  352/    C526 :                             ;ASL                                    ;2
(1)  352/    C526 :                             ;ROL emu_ptr+1,X                ;6
(1)  352/    C526 :                             ;STA emu_ptr,X                  ;4                              
(1)  352/    C526 :                             ;LDA emu_ptr+1,X                ;4
(1)  352/    C526 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  352/    C526 :                             ;STA emu_ptr+1,X                ;4
(1)  352/    C526 :                             ;JMP (emu_ptr2,X)               ;6
(1)  352/    C526 :                             
(1)  352/    C526 :                             ;Method 3 - 30 cycles
(1)  352/    C526 :                             ;TXA                                                    ;2
(1)  352/    C526 :                             ;TAY                                                    ;2
(1)  352/    C526 :                             ;LDA (emu_PC,X)                                 ;6
(1)  352/    C526 :                             ;ASL                                                    ;2
(1)  352/    C526 :                             ;BCS upper                                              ;2
(1)  352/    C526 :                             ;lower:
(1)  352/    C526 :                             ;       ASL                                                     ;2
(1)  352/    C526 :                             ;       TAX                                                     ;2
(1)  352/    C526 :                             ;       BCS upper_lower                         ;2
(1)  352/    C526 :                             ;       lower_lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 108 - 1/5/2022 12:19:0


(1)  352/    C526 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  352/    C526 :                             ;       upper_lower:
(1)  352/    C526 :                             ;               JMP (JUMP_TABLE2,X)
(1)  352/    C526 :                             ;upper:
(1)  352/    C526 :                             ;       ASL
(1)  352/    C526 :                             ;       TAX
(1)  352/    C526 :                             ;       BCS upper_upper
(1)  352/    C526 :                             ;       lower_upper:
(1)  352/    C526 :                             ;               JMP (JUMP_TABLE3,X)
(1)  352/    C526 :                             ;       upper_upper:
(1)  352/    C526 :                             ;               JMP (JUMP_TABLE4,X)
(1)  352/    C526 :                             ;After jump:
(1)  352/    C526 :                             ;TYA                                                    ;2
(1)  352/    C526 :                             ;TAX                                                    ;2
(1)  352/    C526 :                             
(1)  352/    C526 :                             ;Method 4 - 28 cycles
(1)  352/    C526 :                             ;LDA (emu_PC,X)                 ;6
(1)  352/    C526 :                             ;TAY                                    ;2
(1)  352/    C526 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  352/    C526 :                             ;PHA                                    ;3
(1)  352/    C526 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  352/    C526 :                             ;PHA                                    ;3
(1)  352/    C526 :                             ;RTS                                    ;6
(1)  352/    C526 :                             
(1)  352/    C526 :                             ;Method 5 - 30 cycles
(1)  352/    C526 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  352/    C528 : A8                          TAY                                             ;2
(1)  352/    C529 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  352/    C52C : 95 0A                       STA emu_ptr,X                   ;4
(1)  352/    C52E : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  352/    C531 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  352/    C533 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  352/    C536 :                                                     
(1)  353/    C536 :                     
(1)  354/    C536 :                     	;0x46 - LSR ZP
(1)  355/    C536 :                     	LSR_ZP:
(1)  356/    C536 : (MACRO)             		OP_MACRO 70, "LSR", "ZP", "LSR_ZP"
(1)  356/    C536 :                             ;TODO
(1)  357/    C536 : (MACRO)             		NEXT_MACRO
(1)  357/    C536 :                                             
(1)  357/    C536 :  (MACRO-2)                  halt
(1)  357/    C536 : 00                          BRK
(1)  357/    C537 : 00                          BRK
(1)  357/    C538 :                             
(1)  357/    C538 :                             ;Method 1 - 60 cycles
(1)  357/    C538 :                             ;Jump table must be page aligned!!!
(1)  357/    C538 :                             ;LDA (emu_PC,X)                 ;6
(1)  357/    C538 :                             ;ASL                                    ;2
(1)  357/    C538 :                             ;STA emu_ptr,X                  ;4
(1)  357/    C538 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  357/    C538 :                             ;ADC #0                                 ;2
(1)  357/    C538 :                             ;STA emu_ptr+1,X                ;4
(1)  357/    C538 :                             ;LDA (emu_ptr,X)                ;6
(1)  357/    C538 :                             ;STA emu_ptr2,X                 ;4
(1)  357/    C538 :                             ;INC emu_ptr,X                  ;6
(1)  357/    C538 :                             ;BCC .skip                              ;2
(1)  357/    C538 :                             ;       INC emu_ptr+1,X         ;6
(1)  357/    C538 :                             ;.skip:
(1)  357/    C538 :                             ;LDA (emu_ptr,X)                ;6
(1)  357/    C538 :                             ;STA emu_ptr2+1,X               ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 109 - 1/5/2022 12:19:0


(1)  357/    C538 :                             ;JMP (emu_ptr2,X)               ;6
(1)  357/    C538 :                             
(1)  357/    C538 :                             ;Method 2 - 46 cycles
(1)  357/    C538 :                             ;Jump table must be page aligned!!!
(1)  357/    C538 :                             ;LDA (emu_PC,X)                 ;6
(1)  357/    C538 :                             ;STZ emu_ptr+1,X                ;4
(1)  357/    C538 :                             ;ASL                                    ;2
(1)  357/    C538 :                             ;ROL emu_ptr+1,X                ;6
(1)  357/    C538 :                             ;ASL                                    ;2
(1)  357/    C538 :                             ;ROL emu_ptr+1,X                ;6
(1)  357/    C538 :                             ;STA emu_ptr,X                  ;4                              
(1)  357/    C538 :                             ;LDA emu_ptr+1,X                ;4
(1)  357/    C538 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  357/    C538 :                             ;STA emu_ptr+1,X                ;4
(1)  357/    C538 :                             ;JMP (emu_ptr2,X)               ;6
(1)  357/    C538 :                             
(1)  357/    C538 :                             ;Method 3 - 30 cycles
(1)  357/    C538 :                             ;TXA                                                    ;2
(1)  357/    C538 :                             ;TAY                                                    ;2
(1)  357/    C538 :                             ;LDA (emu_PC,X)                                 ;6
(1)  357/    C538 :                             ;ASL                                                    ;2
(1)  357/    C538 :                             ;BCS upper                                              ;2
(1)  357/    C538 :                             ;lower:
(1)  357/    C538 :                             ;       ASL                                                     ;2
(1)  357/    C538 :                             ;       TAX                                                     ;2
(1)  357/    C538 :                             ;       BCS upper_lower                         ;2
(1)  357/    C538 :                             ;       lower_lower:
(1)  357/    C538 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  357/    C538 :                             ;       upper_lower:
(1)  357/    C538 :                             ;               JMP (JUMP_TABLE2,X)
(1)  357/    C538 :                             ;upper:
(1)  357/    C538 :                             ;       ASL
(1)  357/    C538 :                             ;       TAX
(1)  357/    C538 :                             ;       BCS upper_upper
(1)  357/    C538 :                             ;       lower_upper:
(1)  357/    C538 :                             ;               JMP (JUMP_TABLE3,X)
(1)  357/    C538 :                             ;       upper_upper:
(1)  357/    C538 :                             ;               JMP (JUMP_TABLE4,X)
(1)  357/    C538 :                             ;After jump:
(1)  357/    C538 :                             ;TYA                                                    ;2
(1)  357/    C538 :                             ;TAX                                                    ;2
(1)  357/    C538 :                             
(1)  357/    C538 :                             ;Method 4 - 28 cycles
(1)  357/    C538 :                             ;LDA (emu_PC,X)                 ;6
(1)  357/    C538 :                             ;TAY                                    ;2
(1)  357/    C538 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  357/    C538 :                             ;PHA                                    ;3
(1)  357/    C538 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  357/    C538 :                             ;PHA                                    ;3
(1)  357/    C538 :                             ;RTS                                    ;6
(1)  357/    C538 :                             
(1)  357/    C538 :                             ;Method 5 - 30 cycles
(1)  357/    C538 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  357/    C53A : A8                          TAY                                             ;2
(1)  357/    C53B : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  357/    C53E : 95 0A                       STA emu_ptr,X                   ;4
(1)  357/    C540 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  357/    C543 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  357/    C545 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  357/    C548 :                                                     
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 110 - 1/5/2022 12:19:0


(1)  358/    C548 :                     
(1)  359/    C548 :                     	;0x47 - NOP
(1)  360/    C548 :                     	NOP_0x47:
(1)  361/    C548 : (MACRO)             		OP_MACRO 71, "NOP", "IMP", "NOP_0x47"
(1)  361/    C548 :                             ;TODO
(1)  362/    C548 : (MACRO)             		NEXT_MACRO
(1)  362/    C548 :                                             
(1)  362/    C548 :  (MACRO-2)                  halt
(1)  362/    C548 : 00                          BRK
(1)  362/    C549 : 00                          BRK
(1)  362/    C54A :                             
(1)  362/    C54A :                             ;Method 1 - 60 cycles
(1)  362/    C54A :                             ;Jump table must be page aligned!!!
(1)  362/    C54A :                             ;LDA (emu_PC,X)                 ;6
(1)  362/    C54A :                             ;ASL                                    ;2
(1)  362/    C54A :                             ;STA emu_ptr,X                  ;4
(1)  362/    C54A :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  362/    C54A :                             ;ADC #0                                 ;2
(1)  362/    C54A :                             ;STA emu_ptr+1,X                ;4
(1)  362/    C54A :                             ;LDA (emu_ptr,X)                ;6
(1)  362/    C54A :                             ;STA emu_ptr2,X                 ;4
(1)  362/    C54A :                             ;INC emu_ptr,X                  ;6
(1)  362/    C54A :                             ;BCC .skip                              ;2
(1)  362/    C54A :                             ;       INC emu_ptr+1,X         ;6
(1)  362/    C54A :                             ;.skip:
(1)  362/    C54A :                             ;LDA (emu_ptr,X)                ;6
(1)  362/    C54A :                             ;STA emu_ptr2+1,X               ;4
(1)  362/    C54A :                             ;JMP (emu_ptr2,X)               ;6
(1)  362/    C54A :                             
(1)  362/    C54A :                             ;Method 2 - 46 cycles
(1)  362/    C54A :                             ;Jump table must be page aligned!!!
(1)  362/    C54A :                             ;LDA (emu_PC,X)                 ;6
(1)  362/    C54A :                             ;STZ emu_ptr+1,X                ;4
(1)  362/    C54A :                             ;ASL                                    ;2
(1)  362/    C54A :                             ;ROL emu_ptr+1,X                ;6
(1)  362/    C54A :                             ;ASL                                    ;2
(1)  362/    C54A :                             ;ROL emu_ptr+1,X                ;6
(1)  362/    C54A :                             ;STA emu_ptr,X                  ;4                              
(1)  362/    C54A :                             ;LDA emu_ptr+1,X                ;4
(1)  362/    C54A :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  362/    C54A :                             ;STA emu_ptr+1,X                ;4
(1)  362/    C54A :                             ;JMP (emu_ptr2,X)               ;6
(1)  362/    C54A :                             
(1)  362/    C54A :                             ;Method 3 - 30 cycles
(1)  362/    C54A :                             ;TXA                                                    ;2
(1)  362/    C54A :                             ;TAY                                                    ;2
(1)  362/    C54A :                             ;LDA (emu_PC,X)                                 ;6
(1)  362/    C54A :                             ;ASL                                                    ;2
(1)  362/    C54A :                             ;BCS upper                                              ;2
(1)  362/    C54A :                             ;lower:
(1)  362/    C54A :                             ;       ASL                                                     ;2
(1)  362/    C54A :                             ;       TAX                                                     ;2
(1)  362/    C54A :                             ;       BCS upper_lower                         ;2
(1)  362/    C54A :                             ;       lower_lower:
(1)  362/    C54A :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  362/    C54A :                             ;       upper_lower:
(1)  362/    C54A :                             ;               JMP (JUMP_TABLE2,X)
(1)  362/    C54A :                             ;upper:
(1)  362/    C54A :                             ;       ASL
(1)  362/    C54A :                             ;       TAX
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 111 - 1/5/2022 12:19:0


(1)  362/    C54A :                             ;       BCS upper_upper
(1)  362/    C54A :                             ;       lower_upper:
(1)  362/    C54A :                             ;               JMP (JUMP_TABLE3,X)
(1)  362/    C54A :                             ;       upper_upper:
(1)  362/    C54A :                             ;               JMP (JUMP_TABLE4,X)
(1)  362/    C54A :                             ;After jump:
(1)  362/    C54A :                             ;TYA                                                    ;2
(1)  362/    C54A :                             ;TAX                                                    ;2
(1)  362/    C54A :                             
(1)  362/    C54A :                             ;Method 4 - 28 cycles
(1)  362/    C54A :                             ;LDA (emu_PC,X)                 ;6
(1)  362/    C54A :                             ;TAY                                    ;2
(1)  362/    C54A :                             ;LDA JUMP_TABLE,Y               ;4
(1)  362/    C54A :                             ;PHA                                    ;3
(1)  362/    C54A :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  362/    C54A :                             ;PHA                                    ;3
(1)  362/    C54A :                             ;RTS                                    ;6
(1)  362/    C54A :                             
(1)  362/    C54A :                             ;Method 5 - 30 cycles
(1)  362/    C54A : A1 02                       LDA (emu_PC,X)                  ;6
(1)  362/    C54C : A8                          TAY                                             ;2
(1)  362/    C54D : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  362/    C550 : 95 0A                       STA emu_ptr,X                   ;4
(1)  362/    C552 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  362/    C555 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  362/    C557 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  362/    C55A :                                                     
(1)  363/    C55A :                     
(1)  364/    C55A :                     	;0x48 - PHA IMP
(1)  365/    C55A :                     	PHA_IMP:
(1)  366/    C55A : (MACRO)             		OP_MACRO 72, "PHA", "IMP", "PHA_IMP"
(1)  366/    C55A :                             ;TODO
(1)  367/    C55A : (MACRO)             		NEXT_MACRO
(1)  367/    C55A :                                             
(1)  367/    C55A :  (MACRO-2)                  halt
(1)  367/    C55A : 00                          BRK
(1)  367/    C55B : 00                          BRK
(1)  367/    C55C :                             
(1)  367/    C55C :                             ;Method 1 - 60 cycles
(1)  367/    C55C :                             ;Jump table must be page aligned!!!
(1)  367/    C55C :                             ;LDA (emu_PC,X)                 ;6
(1)  367/    C55C :                             ;ASL                                    ;2
(1)  367/    C55C :                             ;STA emu_ptr,X                  ;4
(1)  367/    C55C :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  367/    C55C :                             ;ADC #0                                 ;2
(1)  367/    C55C :                             ;STA emu_ptr+1,X                ;4
(1)  367/    C55C :                             ;LDA (emu_ptr,X)                ;6
(1)  367/    C55C :                             ;STA emu_ptr2,X                 ;4
(1)  367/    C55C :                             ;INC emu_ptr,X                  ;6
(1)  367/    C55C :                             ;BCC .skip                              ;2
(1)  367/    C55C :                             ;       INC emu_ptr+1,X         ;6
(1)  367/    C55C :                             ;.skip:
(1)  367/    C55C :                             ;LDA (emu_ptr,X)                ;6
(1)  367/    C55C :                             ;STA emu_ptr2+1,X               ;4
(1)  367/    C55C :                             ;JMP (emu_ptr2,X)               ;6
(1)  367/    C55C :                             
(1)  367/    C55C :                             ;Method 2 - 46 cycles
(1)  367/    C55C :                             ;Jump table must be page aligned!!!
(1)  367/    C55C :                             ;LDA (emu_PC,X)                 ;6
(1)  367/    C55C :                             ;STZ emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 112 - 1/5/2022 12:19:0


(1)  367/    C55C :                             ;ASL                                    ;2
(1)  367/    C55C :                             ;ROL emu_ptr+1,X                ;6
(1)  367/    C55C :                             ;ASL                                    ;2
(1)  367/    C55C :                             ;ROL emu_ptr+1,X                ;6
(1)  367/    C55C :                             ;STA emu_ptr,X                  ;4                              
(1)  367/    C55C :                             ;LDA emu_ptr+1,X                ;4
(1)  367/    C55C :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  367/    C55C :                             ;STA emu_ptr+1,X                ;4
(1)  367/    C55C :                             ;JMP (emu_ptr2,X)               ;6
(1)  367/    C55C :                             
(1)  367/    C55C :                             ;Method 3 - 30 cycles
(1)  367/    C55C :                             ;TXA                                                    ;2
(1)  367/    C55C :                             ;TAY                                                    ;2
(1)  367/    C55C :                             ;LDA (emu_PC,X)                                 ;6
(1)  367/    C55C :                             ;ASL                                                    ;2
(1)  367/    C55C :                             ;BCS upper                                              ;2
(1)  367/    C55C :                             ;lower:
(1)  367/    C55C :                             ;       ASL                                                     ;2
(1)  367/    C55C :                             ;       TAX                                                     ;2
(1)  367/    C55C :                             ;       BCS upper_lower                         ;2
(1)  367/    C55C :                             ;       lower_lower:
(1)  367/    C55C :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  367/    C55C :                             ;       upper_lower:
(1)  367/    C55C :                             ;               JMP (JUMP_TABLE2,X)
(1)  367/    C55C :                             ;upper:
(1)  367/    C55C :                             ;       ASL
(1)  367/    C55C :                             ;       TAX
(1)  367/    C55C :                             ;       BCS upper_upper
(1)  367/    C55C :                             ;       lower_upper:
(1)  367/    C55C :                             ;               JMP (JUMP_TABLE3,X)
(1)  367/    C55C :                             ;       upper_upper:
(1)  367/    C55C :                             ;               JMP (JUMP_TABLE4,X)
(1)  367/    C55C :                             ;After jump:
(1)  367/    C55C :                             ;TYA                                                    ;2
(1)  367/    C55C :                             ;TAX                                                    ;2
(1)  367/    C55C :                             
(1)  367/    C55C :                             ;Method 4 - 28 cycles
(1)  367/    C55C :                             ;LDA (emu_PC,X)                 ;6
(1)  367/    C55C :                             ;TAY                                    ;2
(1)  367/    C55C :                             ;LDA JUMP_TABLE,Y               ;4
(1)  367/    C55C :                             ;PHA                                    ;3
(1)  367/    C55C :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  367/    C55C :                             ;PHA                                    ;3
(1)  367/    C55C :                             ;RTS                                    ;6
(1)  367/    C55C :                             
(1)  367/    C55C :                             ;Method 5 - 30 cycles
(1)  367/    C55C : A1 02                       LDA (emu_PC,X)                  ;6
(1)  367/    C55E : A8                          TAY                                             ;2
(1)  367/    C55F : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  367/    C562 : 95 0A                       STA emu_ptr,X                   ;4
(1)  367/    C564 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  367/    C567 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  367/    C569 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  367/    C56C :                                                     
(1)  368/    C56C :                     
(1)  369/    C56C :                     	;0x49 - EOR IMMED
(1)  370/    C56C :                     	EOR_IMMED:
(1)  371/    C56C : (MACRO)             		OP_MACRO 73, "EOR", "IMMED", "EOR_IMMED"
(1)  371/    C56C :                             ;TODO
(1)  372/    C56C : (MACRO)             		NEXT_MACRO
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 113 - 1/5/2022 12:19:0


(1)  372/    C56C :                                             
(1)  372/    C56C :  (MACRO-2)                  halt
(1)  372/    C56C : 00                          BRK
(1)  372/    C56D : 00                          BRK
(1)  372/    C56E :                             
(1)  372/    C56E :                             ;Method 1 - 60 cycles
(1)  372/    C56E :                             ;Jump table must be page aligned!!!
(1)  372/    C56E :                             ;LDA (emu_PC,X)                 ;6
(1)  372/    C56E :                             ;ASL                                    ;2
(1)  372/    C56E :                             ;STA emu_ptr,X                  ;4
(1)  372/    C56E :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  372/    C56E :                             ;ADC #0                                 ;2
(1)  372/    C56E :                             ;STA emu_ptr+1,X                ;4
(1)  372/    C56E :                             ;LDA (emu_ptr,X)                ;6
(1)  372/    C56E :                             ;STA emu_ptr2,X                 ;4
(1)  372/    C56E :                             ;INC emu_ptr,X                  ;6
(1)  372/    C56E :                             ;BCC .skip                              ;2
(1)  372/    C56E :                             ;       INC emu_ptr+1,X         ;6
(1)  372/    C56E :                             ;.skip:
(1)  372/    C56E :                             ;LDA (emu_ptr,X)                ;6
(1)  372/    C56E :                             ;STA emu_ptr2+1,X               ;4
(1)  372/    C56E :                             ;JMP (emu_ptr2,X)               ;6
(1)  372/    C56E :                             
(1)  372/    C56E :                             ;Method 2 - 46 cycles
(1)  372/    C56E :                             ;Jump table must be page aligned!!!
(1)  372/    C56E :                             ;LDA (emu_PC,X)                 ;6
(1)  372/    C56E :                             ;STZ emu_ptr+1,X                ;4
(1)  372/    C56E :                             ;ASL                                    ;2
(1)  372/    C56E :                             ;ROL emu_ptr+1,X                ;6
(1)  372/    C56E :                             ;ASL                                    ;2
(1)  372/    C56E :                             ;ROL emu_ptr+1,X                ;6
(1)  372/    C56E :                             ;STA emu_ptr,X                  ;4                              
(1)  372/    C56E :                             ;LDA emu_ptr+1,X                ;4
(1)  372/    C56E :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  372/    C56E :                             ;STA emu_ptr+1,X                ;4
(1)  372/    C56E :                             ;JMP (emu_ptr2,X)               ;6
(1)  372/    C56E :                             
(1)  372/    C56E :                             ;Method 3 - 30 cycles
(1)  372/    C56E :                             ;TXA                                                    ;2
(1)  372/    C56E :                             ;TAY                                                    ;2
(1)  372/    C56E :                             ;LDA (emu_PC,X)                                 ;6
(1)  372/    C56E :                             ;ASL                                                    ;2
(1)  372/    C56E :                             ;BCS upper                                              ;2
(1)  372/    C56E :                             ;lower:
(1)  372/    C56E :                             ;       ASL                                                     ;2
(1)  372/    C56E :                             ;       TAX                                                     ;2
(1)  372/    C56E :                             ;       BCS upper_lower                         ;2
(1)  372/    C56E :                             ;       lower_lower:
(1)  372/    C56E :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  372/    C56E :                             ;       upper_lower:
(1)  372/    C56E :                             ;               JMP (JUMP_TABLE2,X)
(1)  372/    C56E :                             ;upper:
(1)  372/    C56E :                             ;       ASL
(1)  372/    C56E :                             ;       TAX
(1)  372/    C56E :                             ;       BCS upper_upper
(1)  372/    C56E :                             ;       lower_upper:
(1)  372/    C56E :                             ;               JMP (JUMP_TABLE3,X)
(1)  372/    C56E :                             ;       upper_upper:
(1)  372/    C56E :                             ;               JMP (JUMP_TABLE4,X)
(1)  372/    C56E :                             ;After jump:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 114 - 1/5/2022 12:19:0


(1)  372/    C56E :                             ;TYA                                                    ;2
(1)  372/    C56E :                             ;TAX                                                    ;2
(1)  372/    C56E :                             
(1)  372/    C56E :                             ;Method 4 - 28 cycles
(1)  372/    C56E :                             ;LDA (emu_PC,X)                 ;6
(1)  372/    C56E :                             ;TAY                                    ;2
(1)  372/    C56E :                             ;LDA JUMP_TABLE,Y               ;4
(1)  372/    C56E :                             ;PHA                                    ;3
(1)  372/    C56E :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  372/    C56E :                             ;PHA                                    ;3
(1)  372/    C56E :                             ;RTS                                    ;6
(1)  372/    C56E :                             
(1)  372/    C56E :                             ;Method 5 - 30 cycles
(1)  372/    C56E : A1 02                       LDA (emu_PC,X)                  ;6
(1)  372/    C570 : A8                          TAY                                             ;2
(1)  372/    C571 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  372/    C574 : 95 0A                       STA emu_ptr,X                   ;4
(1)  372/    C576 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  372/    C579 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  372/    C57B : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  372/    C57E :                                                     
(1)  373/    C57E :                     
(1)  374/    C57E :                     	;0x4A - LSR A
(1)  375/    C57E :                     	LSR_A:
(1)  376/    C57E : (MACRO)             		OP_MACRO 74, "LSR", "A", "LSR_A"
(1)  376/    C57E :                             ;TODO
(1)  377/    C57E : (MACRO)             		NEXT_MACRO
(1)  377/    C57E :                                             
(1)  377/    C57E :  (MACRO-2)                  halt
(1)  377/    C57E : 00                          BRK
(1)  377/    C57F : 00                          BRK
(1)  377/    C580 :                             
(1)  377/    C580 :                             ;Method 1 - 60 cycles
(1)  377/    C580 :                             ;Jump table must be page aligned!!!
(1)  377/    C580 :                             ;LDA (emu_PC,X)                 ;6
(1)  377/    C580 :                             ;ASL                                    ;2
(1)  377/    C580 :                             ;STA emu_ptr,X                  ;4
(1)  377/    C580 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  377/    C580 :                             ;ADC #0                                 ;2
(1)  377/    C580 :                             ;STA emu_ptr+1,X                ;4
(1)  377/    C580 :                             ;LDA (emu_ptr,X)                ;6
(1)  377/    C580 :                             ;STA emu_ptr2,X                 ;4
(1)  377/    C580 :                             ;INC emu_ptr,X                  ;6
(1)  377/    C580 :                             ;BCC .skip                              ;2
(1)  377/    C580 :                             ;       INC emu_ptr+1,X         ;6
(1)  377/    C580 :                             ;.skip:
(1)  377/    C580 :                             ;LDA (emu_ptr,X)                ;6
(1)  377/    C580 :                             ;STA emu_ptr2+1,X               ;4
(1)  377/    C580 :                             ;JMP (emu_ptr2,X)               ;6
(1)  377/    C580 :                             
(1)  377/    C580 :                             ;Method 2 - 46 cycles
(1)  377/    C580 :                             ;Jump table must be page aligned!!!
(1)  377/    C580 :                             ;LDA (emu_PC,X)                 ;6
(1)  377/    C580 :                             ;STZ emu_ptr+1,X                ;4
(1)  377/    C580 :                             ;ASL                                    ;2
(1)  377/    C580 :                             ;ROL emu_ptr+1,X                ;6
(1)  377/    C580 :                             ;ASL                                    ;2
(1)  377/    C580 :                             ;ROL emu_ptr+1,X                ;6
(1)  377/    C580 :                             ;STA emu_ptr,X                  ;4                              
(1)  377/    C580 :                             ;LDA emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 115 - 1/5/2022 12:19:0


(1)  377/    C580 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  377/    C580 :                             ;STA emu_ptr+1,X                ;4
(1)  377/    C580 :                             ;JMP (emu_ptr2,X)               ;6
(1)  377/    C580 :                             
(1)  377/    C580 :                             ;Method 3 - 30 cycles
(1)  377/    C580 :                             ;TXA                                                    ;2
(1)  377/    C580 :                             ;TAY                                                    ;2
(1)  377/    C580 :                             ;LDA (emu_PC,X)                                 ;6
(1)  377/    C580 :                             ;ASL                                                    ;2
(1)  377/    C580 :                             ;BCS upper                                              ;2
(1)  377/    C580 :                             ;lower:
(1)  377/    C580 :                             ;       ASL                                                     ;2
(1)  377/    C580 :                             ;       TAX                                                     ;2
(1)  377/    C580 :                             ;       BCS upper_lower                         ;2
(1)  377/    C580 :                             ;       lower_lower:
(1)  377/    C580 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  377/    C580 :                             ;       upper_lower:
(1)  377/    C580 :                             ;               JMP (JUMP_TABLE2,X)
(1)  377/    C580 :                             ;upper:
(1)  377/    C580 :                             ;       ASL
(1)  377/    C580 :                             ;       TAX
(1)  377/    C580 :                             ;       BCS upper_upper
(1)  377/    C580 :                             ;       lower_upper:
(1)  377/    C580 :                             ;               JMP (JUMP_TABLE3,X)
(1)  377/    C580 :                             ;       upper_upper:
(1)  377/    C580 :                             ;               JMP (JUMP_TABLE4,X)
(1)  377/    C580 :                             ;After jump:
(1)  377/    C580 :                             ;TYA                                                    ;2
(1)  377/    C580 :                             ;TAX                                                    ;2
(1)  377/    C580 :                             
(1)  377/    C580 :                             ;Method 4 - 28 cycles
(1)  377/    C580 :                             ;LDA (emu_PC,X)                 ;6
(1)  377/    C580 :                             ;TAY                                    ;2
(1)  377/    C580 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  377/    C580 :                             ;PHA                                    ;3
(1)  377/    C580 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  377/    C580 :                             ;PHA                                    ;3
(1)  377/    C580 :                             ;RTS                                    ;6
(1)  377/    C580 :                             
(1)  377/    C580 :                             ;Method 5 - 30 cycles
(1)  377/    C580 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  377/    C582 : A8                          TAY                                             ;2
(1)  377/    C583 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  377/    C586 : 95 0A                       STA emu_ptr,X                   ;4
(1)  377/    C588 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  377/    C58B : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  377/    C58D : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  377/    C590 :                                                     
(1)  378/    C590 :                     
(1)  379/    C590 :                     	;0x4B - NOP
(1)  380/    C590 :                     	NOP_0x4B:
(1)  381/    C590 : (MACRO)             		OP_MACRO 75, "NOP", "IMP", "NOP_0x4B"
(1)  381/    C590 :                             ;TODO
(1)  382/    C590 : (MACRO)             		NEXT_MACRO
(1)  382/    C590 :                                             
(1)  382/    C590 :  (MACRO-2)                  halt
(1)  382/    C590 : 00                          BRK
(1)  382/    C591 : 00                          BRK
(1)  382/    C592 :                             
(1)  382/    C592 :                             ;Method 1 - 60 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 116 - 1/5/2022 12:19:0


(1)  382/    C592 :                             ;Jump table must be page aligned!!!
(1)  382/    C592 :                             ;LDA (emu_PC,X)                 ;6
(1)  382/    C592 :                             ;ASL                                    ;2
(1)  382/    C592 :                             ;STA emu_ptr,X                  ;4
(1)  382/    C592 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  382/    C592 :                             ;ADC #0                                 ;2
(1)  382/    C592 :                             ;STA emu_ptr+1,X                ;4
(1)  382/    C592 :                             ;LDA (emu_ptr,X)                ;6
(1)  382/    C592 :                             ;STA emu_ptr2,X                 ;4
(1)  382/    C592 :                             ;INC emu_ptr,X                  ;6
(1)  382/    C592 :                             ;BCC .skip                              ;2
(1)  382/    C592 :                             ;       INC emu_ptr+1,X         ;6
(1)  382/    C592 :                             ;.skip:
(1)  382/    C592 :                             ;LDA (emu_ptr,X)                ;6
(1)  382/    C592 :                             ;STA emu_ptr2+1,X               ;4
(1)  382/    C592 :                             ;JMP (emu_ptr2,X)               ;6
(1)  382/    C592 :                             
(1)  382/    C592 :                             ;Method 2 - 46 cycles
(1)  382/    C592 :                             ;Jump table must be page aligned!!!
(1)  382/    C592 :                             ;LDA (emu_PC,X)                 ;6
(1)  382/    C592 :                             ;STZ emu_ptr+1,X                ;4
(1)  382/    C592 :                             ;ASL                                    ;2
(1)  382/    C592 :                             ;ROL emu_ptr+1,X                ;6
(1)  382/    C592 :                             ;ASL                                    ;2
(1)  382/    C592 :                             ;ROL emu_ptr+1,X                ;6
(1)  382/    C592 :                             ;STA emu_ptr,X                  ;4                              
(1)  382/    C592 :                             ;LDA emu_ptr+1,X                ;4
(1)  382/    C592 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  382/    C592 :                             ;STA emu_ptr+1,X                ;4
(1)  382/    C592 :                             ;JMP (emu_ptr2,X)               ;6
(1)  382/    C592 :                             
(1)  382/    C592 :                             ;Method 3 - 30 cycles
(1)  382/    C592 :                             ;TXA                                                    ;2
(1)  382/    C592 :                             ;TAY                                                    ;2
(1)  382/    C592 :                             ;LDA (emu_PC,X)                                 ;6
(1)  382/    C592 :                             ;ASL                                                    ;2
(1)  382/    C592 :                             ;BCS upper                                              ;2
(1)  382/    C592 :                             ;lower:
(1)  382/    C592 :                             ;       ASL                                                     ;2
(1)  382/    C592 :                             ;       TAX                                                     ;2
(1)  382/    C592 :                             ;       BCS upper_lower                         ;2
(1)  382/    C592 :                             ;       lower_lower:
(1)  382/    C592 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  382/    C592 :                             ;       upper_lower:
(1)  382/    C592 :                             ;               JMP (JUMP_TABLE2,X)
(1)  382/    C592 :                             ;upper:
(1)  382/    C592 :                             ;       ASL
(1)  382/    C592 :                             ;       TAX
(1)  382/    C592 :                             ;       BCS upper_upper
(1)  382/    C592 :                             ;       lower_upper:
(1)  382/    C592 :                             ;               JMP (JUMP_TABLE3,X)
(1)  382/    C592 :                             ;       upper_upper:
(1)  382/    C592 :                             ;               JMP (JUMP_TABLE4,X)
(1)  382/    C592 :                             ;After jump:
(1)  382/    C592 :                             ;TYA                                                    ;2
(1)  382/    C592 :                             ;TAX                                                    ;2
(1)  382/    C592 :                             
(1)  382/    C592 :                             ;Method 4 - 28 cycles
(1)  382/    C592 :                             ;LDA (emu_PC,X)                 ;6
(1)  382/    C592 :                             ;TAY                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 117 - 1/5/2022 12:19:0


(1)  382/    C592 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  382/    C592 :                             ;PHA                                    ;3
(1)  382/    C592 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  382/    C592 :                             ;PHA                                    ;3
(1)  382/    C592 :                             ;RTS                                    ;6
(1)  382/    C592 :                             
(1)  382/    C592 :                             ;Method 5 - 30 cycles
(1)  382/    C592 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  382/    C594 : A8                          TAY                                             ;2
(1)  382/    C595 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  382/    C598 : 95 0A                       STA emu_ptr,X                   ;4
(1)  382/    C59A : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  382/    C59D : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  382/    C59F : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  382/    C5A2 :                                                     
(1)  383/    C5A2 :                     
(1)  384/    C5A2 :                     	;0x4C - JMP ABS
(1)  385/    C5A2 :                     	JMP_ABS:
(1)  386/    C5A2 : (MACRO)             		OP_MACRO 76, "JMP", "ABS", "JMP_ABS"
(1)  386/    C5A2 :                             ;TODO
(1)  387/    C5A2 : (MACRO)             		NEXT_MACRO
(1)  387/    C5A2 :                                             
(1)  387/    C5A2 :  (MACRO-2)                  halt
(1)  387/    C5A2 : 00                          BRK
(1)  387/    C5A3 : 00                          BRK
(1)  387/    C5A4 :                             
(1)  387/    C5A4 :                             ;Method 1 - 60 cycles
(1)  387/    C5A4 :                             ;Jump table must be page aligned!!!
(1)  387/    C5A4 :                             ;LDA (emu_PC,X)                 ;6
(1)  387/    C5A4 :                             ;ASL                                    ;2
(1)  387/    C5A4 :                             ;STA emu_ptr,X                  ;4
(1)  387/    C5A4 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  387/    C5A4 :                             ;ADC #0                                 ;2
(1)  387/    C5A4 :                             ;STA emu_ptr+1,X                ;4
(1)  387/    C5A4 :                             ;LDA (emu_ptr,X)                ;6
(1)  387/    C5A4 :                             ;STA emu_ptr2,X                 ;4
(1)  387/    C5A4 :                             ;INC emu_ptr,X                  ;6
(1)  387/    C5A4 :                             ;BCC .skip                              ;2
(1)  387/    C5A4 :                             ;       INC emu_ptr+1,X         ;6
(1)  387/    C5A4 :                             ;.skip:
(1)  387/    C5A4 :                             ;LDA (emu_ptr,X)                ;6
(1)  387/    C5A4 :                             ;STA emu_ptr2+1,X               ;4
(1)  387/    C5A4 :                             ;JMP (emu_ptr2,X)               ;6
(1)  387/    C5A4 :                             
(1)  387/    C5A4 :                             ;Method 2 - 46 cycles
(1)  387/    C5A4 :                             ;Jump table must be page aligned!!!
(1)  387/    C5A4 :                             ;LDA (emu_PC,X)                 ;6
(1)  387/    C5A4 :                             ;STZ emu_ptr+1,X                ;4
(1)  387/    C5A4 :                             ;ASL                                    ;2
(1)  387/    C5A4 :                             ;ROL emu_ptr+1,X                ;6
(1)  387/    C5A4 :                             ;ASL                                    ;2
(1)  387/    C5A4 :                             ;ROL emu_ptr+1,X                ;6
(1)  387/    C5A4 :                             ;STA emu_ptr,X                  ;4                              
(1)  387/    C5A4 :                             ;LDA emu_ptr+1,X                ;4
(1)  387/    C5A4 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  387/    C5A4 :                             ;STA emu_ptr+1,X                ;4
(1)  387/    C5A4 :                             ;JMP (emu_ptr2,X)               ;6
(1)  387/    C5A4 :                             
(1)  387/    C5A4 :                             ;Method 3 - 30 cycles
(1)  387/    C5A4 :                             ;TXA                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 118 - 1/5/2022 12:19:0


(1)  387/    C5A4 :                             ;TAY                                                    ;2
(1)  387/    C5A4 :                             ;LDA (emu_PC,X)                                 ;6
(1)  387/    C5A4 :                             ;ASL                                                    ;2
(1)  387/    C5A4 :                             ;BCS upper                                              ;2
(1)  387/    C5A4 :                             ;lower:
(1)  387/    C5A4 :                             ;       ASL                                                     ;2
(1)  387/    C5A4 :                             ;       TAX                                                     ;2
(1)  387/    C5A4 :                             ;       BCS upper_lower                         ;2
(1)  387/    C5A4 :                             ;       lower_lower:
(1)  387/    C5A4 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  387/    C5A4 :                             ;       upper_lower:
(1)  387/    C5A4 :                             ;               JMP (JUMP_TABLE2,X)
(1)  387/    C5A4 :                             ;upper:
(1)  387/    C5A4 :                             ;       ASL
(1)  387/    C5A4 :                             ;       TAX
(1)  387/    C5A4 :                             ;       BCS upper_upper
(1)  387/    C5A4 :                             ;       lower_upper:
(1)  387/    C5A4 :                             ;               JMP (JUMP_TABLE3,X)
(1)  387/    C5A4 :                             ;       upper_upper:
(1)  387/    C5A4 :                             ;               JMP (JUMP_TABLE4,X)
(1)  387/    C5A4 :                             ;After jump:
(1)  387/    C5A4 :                             ;TYA                                                    ;2
(1)  387/    C5A4 :                             ;TAX                                                    ;2
(1)  387/    C5A4 :                             
(1)  387/    C5A4 :                             ;Method 4 - 28 cycles
(1)  387/    C5A4 :                             ;LDA (emu_PC,X)                 ;6
(1)  387/    C5A4 :                             ;TAY                                    ;2
(1)  387/    C5A4 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  387/    C5A4 :                             ;PHA                                    ;3
(1)  387/    C5A4 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  387/    C5A4 :                             ;PHA                                    ;3
(1)  387/    C5A4 :                             ;RTS                                    ;6
(1)  387/    C5A4 :                             
(1)  387/    C5A4 :                             ;Method 5 - 30 cycles
(1)  387/    C5A4 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  387/    C5A6 : A8                          TAY                                             ;2
(1)  387/    C5A7 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  387/    C5AA : 95 0A                       STA emu_ptr,X                   ;4
(1)  387/    C5AC : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  387/    C5AF : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  387/    C5B1 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  387/    C5B4 :                                                     
(1)  388/    C5B4 :                     
(1)  389/    C5B4 :                     	;0x4D - EOR ABS
(1)  390/    C5B4 :                     	EOR_ABS:
(1)  391/    C5B4 : (MACRO)             		OP_MACRO 77, "EOR", "ABS", "EOR_ABS"
(1)  391/    C5B4 :                             ;TODO
(1)  392/    C5B4 : (MACRO)             		NEXT_MACRO
(1)  392/    C5B4 :                                             
(1)  392/    C5B4 :  (MACRO-2)                  halt
(1)  392/    C5B4 : 00                          BRK
(1)  392/    C5B5 : 00                          BRK
(1)  392/    C5B6 :                             
(1)  392/    C5B6 :                             ;Method 1 - 60 cycles
(1)  392/    C5B6 :                             ;Jump table must be page aligned!!!
(1)  392/    C5B6 :                             ;LDA (emu_PC,X)                 ;6
(1)  392/    C5B6 :                             ;ASL                                    ;2
(1)  392/    C5B6 :                             ;STA emu_ptr,X                  ;4
(1)  392/    C5B6 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  392/    C5B6 :                             ;ADC #0                                 ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 119 - 1/5/2022 12:19:0


(1)  392/    C5B6 :                             ;STA emu_ptr+1,X                ;4
(1)  392/    C5B6 :                             ;LDA (emu_ptr,X)                ;6
(1)  392/    C5B6 :                             ;STA emu_ptr2,X                 ;4
(1)  392/    C5B6 :                             ;INC emu_ptr,X                  ;6
(1)  392/    C5B6 :                             ;BCC .skip                              ;2
(1)  392/    C5B6 :                             ;       INC emu_ptr+1,X         ;6
(1)  392/    C5B6 :                             ;.skip:
(1)  392/    C5B6 :                             ;LDA (emu_ptr,X)                ;6
(1)  392/    C5B6 :                             ;STA emu_ptr2+1,X               ;4
(1)  392/    C5B6 :                             ;JMP (emu_ptr2,X)               ;6
(1)  392/    C5B6 :                             
(1)  392/    C5B6 :                             ;Method 2 - 46 cycles
(1)  392/    C5B6 :                             ;Jump table must be page aligned!!!
(1)  392/    C5B6 :                             ;LDA (emu_PC,X)                 ;6
(1)  392/    C5B6 :                             ;STZ emu_ptr+1,X                ;4
(1)  392/    C5B6 :                             ;ASL                                    ;2
(1)  392/    C5B6 :                             ;ROL emu_ptr+1,X                ;6
(1)  392/    C5B6 :                             ;ASL                                    ;2
(1)  392/    C5B6 :                             ;ROL emu_ptr+1,X                ;6
(1)  392/    C5B6 :                             ;STA emu_ptr,X                  ;4                              
(1)  392/    C5B6 :                             ;LDA emu_ptr+1,X                ;4
(1)  392/    C5B6 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  392/    C5B6 :                             ;STA emu_ptr+1,X                ;4
(1)  392/    C5B6 :                             ;JMP (emu_ptr2,X)               ;6
(1)  392/    C5B6 :                             
(1)  392/    C5B6 :                             ;Method 3 - 30 cycles
(1)  392/    C5B6 :                             ;TXA                                                    ;2
(1)  392/    C5B6 :                             ;TAY                                                    ;2
(1)  392/    C5B6 :                             ;LDA (emu_PC,X)                                 ;6
(1)  392/    C5B6 :                             ;ASL                                                    ;2
(1)  392/    C5B6 :                             ;BCS upper                                              ;2
(1)  392/    C5B6 :                             ;lower:
(1)  392/    C5B6 :                             ;       ASL                                                     ;2
(1)  392/    C5B6 :                             ;       TAX                                                     ;2
(1)  392/    C5B6 :                             ;       BCS upper_lower                         ;2
(1)  392/    C5B6 :                             ;       lower_lower:
(1)  392/    C5B6 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  392/    C5B6 :                             ;       upper_lower:
(1)  392/    C5B6 :                             ;               JMP (JUMP_TABLE2,X)
(1)  392/    C5B6 :                             ;upper:
(1)  392/    C5B6 :                             ;       ASL
(1)  392/    C5B6 :                             ;       TAX
(1)  392/    C5B6 :                             ;       BCS upper_upper
(1)  392/    C5B6 :                             ;       lower_upper:
(1)  392/    C5B6 :                             ;               JMP (JUMP_TABLE3,X)
(1)  392/    C5B6 :                             ;       upper_upper:
(1)  392/    C5B6 :                             ;               JMP (JUMP_TABLE4,X)
(1)  392/    C5B6 :                             ;After jump:
(1)  392/    C5B6 :                             ;TYA                                                    ;2
(1)  392/    C5B6 :                             ;TAX                                                    ;2
(1)  392/    C5B6 :                             
(1)  392/    C5B6 :                             ;Method 4 - 28 cycles
(1)  392/    C5B6 :                             ;LDA (emu_PC,X)                 ;6
(1)  392/    C5B6 :                             ;TAY                                    ;2
(1)  392/    C5B6 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  392/    C5B6 :                             ;PHA                                    ;3
(1)  392/    C5B6 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  392/    C5B6 :                             ;PHA                                    ;3
(1)  392/    C5B6 :                             ;RTS                                    ;6
(1)  392/    C5B6 :                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 120 - 1/5/2022 12:19:0


(1)  392/    C5B6 :                             ;Method 5 - 30 cycles
(1)  392/    C5B6 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  392/    C5B8 : A8                          TAY                                             ;2
(1)  392/    C5B9 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  392/    C5BC : 95 0A                       STA emu_ptr,X                   ;4
(1)  392/    C5BE : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  392/    C5C1 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  392/    C5C3 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  392/    C5C6 :                                                     
(1)  393/    C5C6 :                     
(1)  394/    C5C6 :                     	;0x4E - LSR ABS
(1)  395/    C5C6 :                     	LSR_ABS:
(1)  396/    C5C6 : (MACRO)             		OP_MACRO 78, "LSR", "ABS", "LSR_ABS"
(1)  396/    C5C6 :                             ;TODO
(1)  397/    C5C6 : (MACRO)             		NEXT_MACRO
(1)  397/    C5C6 :                                             
(1)  397/    C5C6 :  (MACRO-2)                  halt
(1)  397/    C5C6 : 00                          BRK
(1)  397/    C5C7 : 00                          BRK
(1)  397/    C5C8 :                             
(1)  397/    C5C8 :                             ;Method 1 - 60 cycles
(1)  397/    C5C8 :                             ;Jump table must be page aligned!!!
(1)  397/    C5C8 :                             ;LDA (emu_PC,X)                 ;6
(1)  397/    C5C8 :                             ;ASL                                    ;2
(1)  397/    C5C8 :                             ;STA emu_ptr,X                  ;4
(1)  397/    C5C8 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  397/    C5C8 :                             ;ADC #0                                 ;2
(1)  397/    C5C8 :                             ;STA emu_ptr+1,X                ;4
(1)  397/    C5C8 :                             ;LDA (emu_ptr,X)                ;6
(1)  397/    C5C8 :                             ;STA emu_ptr2,X                 ;4
(1)  397/    C5C8 :                             ;INC emu_ptr,X                  ;6
(1)  397/    C5C8 :                             ;BCC .skip                              ;2
(1)  397/    C5C8 :                             ;       INC emu_ptr+1,X         ;6
(1)  397/    C5C8 :                             ;.skip:
(1)  397/    C5C8 :                             ;LDA (emu_ptr,X)                ;6
(1)  397/    C5C8 :                             ;STA emu_ptr2+1,X               ;4
(1)  397/    C5C8 :                             ;JMP (emu_ptr2,X)               ;6
(1)  397/    C5C8 :                             
(1)  397/    C5C8 :                             ;Method 2 - 46 cycles
(1)  397/    C5C8 :                             ;Jump table must be page aligned!!!
(1)  397/    C5C8 :                             ;LDA (emu_PC,X)                 ;6
(1)  397/    C5C8 :                             ;STZ emu_ptr+1,X                ;4
(1)  397/    C5C8 :                             ;ASL                                    ;2
(1)  397/    C5C8 :                             ;ROL emu_ptr+1,X                ;6
(1)  397/    C5C8 :                             ;ASL                                    ;2
(1)  397/    C5C8 :                             ;ROL emu_ptr+1,X                ;6
(1)  397/    C5C8 :                             ;STA emu_ptr,X                  ;4                              
(1)  397/    C5C8 :                             ;LDA emu_ptr+1,X                ;4
(1)  397/    C5C8 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  397/    C5C8 :                             ;STA emu_ptr+1,X                ;4
(1)  397/    C5C8 :                             ;JMP (emu_ptr2,X)               ;6
(1)  397/    C5C8 :                             
(1)  397/    C5C8 :                             ;Method 3 - 30 cycles
(1)  397/    C5C8 :                             ;TXA                                                    ;2
(1)  397/    C5C8 :                             ;TAY                                                    ;2
(1)  397/    C5C8 :                             ;LDA (emu_PC,X)                                 ;6
(1)  397/    C5C8 :                             ;ASL                                                    ;2
(1)  397/    C5C8 :                             ;BCS upper                                              ;2
(1)  397/    C5C8 :                             ;lower:
(1)  397/    C5C8 :                             ;       ASL                                                     ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 121 - 1/5/2022 12:19:0


(1)  397/    C5C8 :                             ;       TAX                                                     ;2
(1)  397/    C5C8 :                             ;       BCS upper_lower                         ;2
(1)  397/    C5C8 :                             ;       lower_lower:
(1)  397/    C5C8 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  397/    C5C8 :                             ;       upper_lower:
(1)  397/    C5C8 :                             ;               JMP (JUMP_TABLE2,X)
(1)  397/    C5C8 :                             ;upper:
(1)  397/    C5C8 :                             ;       ASL
(1)  397/    C5C8 :                             ;       TAX
(1)  397/    C5C8 :                             ;       BCS upper_upper
(1)  397/    C5C8 :                             ;       lower_upper:
(1)  397/    C5C8 :                             ;               JMP (JUMP_TABLE3,X)
(1)  397/    C5C8 :                             ;       upper_upper:
(1)  397/    C5C8 :                             ;               JMP (JUMP_TABLE4,X)
(1)  397/    C5C8 :                             ;After jump:
(1)  397/    C5C8 :                             ;TYA                                                    ;2
(1)  397/    C5C8 :                             ;TAX                                                    ;2
(1)  397/    C5C8 :                             
(1)  397/    C5C8 :                             ;Method 4 - 28 cycles
(1)  397/    C5C8 :                             ;LDA (emu_PC,X)                 ;6
(1)  397/    C5C8 :                             ;TAY                                    ;2
(1)  397/    C5C8 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  397/    C5C8 :                             ;PHA                                    ;3
(1)  397/    C5C8 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  397/    C5C8 :                             ;PHA                                    ;3
(1)  397/    C5C8 :                             ;RTS                                    ;6
(1)  397/    C5C8 :                             
(1)  397/    C5C8 :                             ;Method 5 - 30 cycles
(1)  397/    C5C8 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  397/    C5CA : A8                          TAY                                             ;2
(1)  397/    C5CB : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  397/    C5CE : 95 0A                       STA emu_ptr,X                   ;4
(1)  397/    C5D0 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  397/    C5D3 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  397/    C5D5 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  397/    C5D8 :                                                     
(1)  398/    C5D8 :                     
(1)  399/    C5D8 :                     	;0x4F - NOP
(1)  400/    C5D8 :                     	NOP_0x4F:
(1)  401/    C5D8 : (MACRO)             		OP_MACRO 79, "NOP", "IMP", "NOP_0x4F"
(1)  401/    C5D8 :                             ;TODO
(1)  402/    C5D8 : (MACRO)             		NEXT_MACRO
(1)  402/    C5D8 :                                             
(1)  402/    C5D8 :  (MACRO-2)                  halt
(1)  402/    C5D8 : 00                          BRK
(1)  402/    C5D9 : 00                          BRK
(1)  402/    C5DA :                             
(1)  402/    C5DA :                             ;Method 1 - 60 cycles
(1)  402/    C5DA :                             ;Jump table must be page aligned!!!
(1)  402/    C5DA :                             ;LDA (emu_PC,X)                 ;6
(1)  402/    C5DA :                             ;ASL                                    ;2
(1)  402/    C5DA :                             ;STA emu_ptr,X                  ;4
(1)  402/    C5DA :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  402/    C5DA :                             ;ADC #0                                 ;2
(1)  402/    C5DA :                             ;STA emu_ptr+1,X                ;4
(1)  402/    C5DA :                             ;LDA (emu_ptr,X)                ;6
(1)  402/    C5DA :                             ;STA emu_ptr2,X                 ;4
(1)  402/    C5DA :                             ;INC emu_ptr,X                  ;6
(1)  402/    C5DA :                             ;BCC .skip                              ;2
(1)  402/    C5DA :                             ;       INC emu_ptr+1,X         ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 122 - 1/5/2022 12:19:0


(1)  402/    C5DA :                             ;.skip:
(1)  402/    C5DA :                             ;LDA (emu_ptr,X)                ;6
(1)  402/    C5DA :                             ;STA emu_ptr2+1,X               ;4
(1)  402/    C5DA :                             ;JMP (emu_ptr2,X)               ;6
(1)  402/    C5DA :                             
(1)  402/    C5DA :                             ;Method 2 - 46 cycles
(1)  402/    C5DA :                             ;Jump table must be page aligned!!!
(1)  402/    C5DA :                             ;LDA (emu_PC,X)                 ;6
(1)  402/    C5DA :                             ;STZ emu_ptr+1,X                ;4
(1)  402/    C5DA :                             ;ASL                                    ;2
(1)  402/    C5DA :                             ;ROL emu_ptr+1,X                ;6
(1)  402/    C5DA :                             ;ASL                                    ;2
(1)  402/    C5DA :                             ;ROL emu_ptr+1,X                ;6
(1)  402/    C5DA :                             ;STA emu_ptr,X                  ;4                              
(1)  402/    C5DA :                             ;LDA emu_ptr+1,X                ;4
(1)  402/    C5DA :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  402/    C5DA :                             ;STA emu_ptr+1,X                ;4
(1)  402/    C5DA :                             ;JMP (emu_ptr2,X)               ;6
(1)  402/    C5DA :                             
(1)  402/    C5DA :                             ;Method 3 - 30 cycles
(1)  402/    C5DA :                             ;TXA                                                    ;2
(1)  402/    C5DA :                             ;TAY                                                    ;2
(1)  402/    C5DA :                             ;LDA (emu_PC,X)                                 ;6
(1)  402/    C5DA :                             ;ASL                                                    ;2
(1)  402/    C5DA :                             ;BCS upper                                              ;2
(1)  402/    C5DA :                             ;lower:
(1)  402/    C5DA :                             ;       ASL                                                     ;2
(1)  402/    C5DA :                             ;       TAX                                                     ;2
(1)  402/    C5DA :                             ;       BCS upper_lower                         ;2
(1)  402/    C5DA :                             ;       lower_lower:
(1)  402/    C5DA :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  402/    C5DA :                             ;       upper_lower:
(1)  402/    C5DA :                             ;               JMP (JUMP_TABLE2,X)
(1)  402/    C5DA :                             ;upper:
(1)  402/    C5DA :                             ;       ASL
(1)  402/    C5DA :                             ;       TAX
(1)  402/    C5DA :                             ;       BCS upper_upper
(1)  402/    C5DA :                             ;       lower_upper:
(1)  402/    C5DA :                             ;               JMP (JUMP_TABLE3,X)
(1)  402/    C5DA :                             ;       upper_upper:
(1)  402/    C5DA :                             ;               JMP (JUMP_TABLE4,X)
(1)  402/    C5DA :                             ;After jump:
(1)  402/    C5DA :                             ;TYA                                                    ;2
(1)  402/    C5DA :                             ;TAX                                                    ;2
(1)  402/    C5DA :                             
(1)  402/    C5DA :                             ;Method 4 - 28 cycles
(1)  402/    C5DA :                             ;LDA (emu_PC,X)                 ;6
(1)  402/    C5DA :                             ;TAY                                    ;2
(1)  402/    C5DA :                             ;LDA JUMP_TABLE,Y               ;4
(1)  402/    C5DA :                             ;PHA                                    ;3
(1)  402/    C5DA :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  402/    C5DA :                             ;PHA                                    ;3
(1)  402/    C5DA :                             ;RTS                                    ;6
(1)  402/    C5DA :                             
(1)  402/    C5DA :                             ;Method 5 - 30 cycles
(1)  402/    C5DA : A1 02                       LDA (emu_PC,X)                  ;6
(1)  402/    C5DC : A8                          TAY                                             ;2
(1)  402/    C5DD : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  402/    C5E0 : 95 0A                       STA emu_ptr,X                   ;4
(1)  402/    C5E2 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 123 - 1/5/2022 12:19:0


(1)  402/    C5E5 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  402/    C5E7 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  402/    C5EA :                                                     
(1)  403/    C5EA :                     
(1)  404/    C5EA :                     	;0x50 - BVC REL
(1)  405/    C5EA :                     	BVC_REL:
(1)  406/    C5EA : (MACRO)             		OP_MACRO 80, "BVC", "REL", "BVC_REL"
(1)  406/    C5EA :                             ;TODO
(1)  407/    C5EA : (MACRO)             		NEXT_MACRO
(1)  407/    C5EA :                                             
(1)  407/    C5EA :  (MACRO-2)                  halt
(1)  407/    C5EA : 00                          BRK
(1)  407/    C5EB : 00                          BRK
(1)  407/    C5EC :                             
(1)  407/    C5EC :                             ;Method 1 - 60 cycles
(1)  407/    C5EC :                             ;Jump table must be page aligned!!!
(1)  407/    C5EC :                             ;LDA (emu_PC,X)                 ;6
(1)  407/    C5EC :                             ;ASL                                    ;2
(1)  407/    C5EC :                             ;STA emu_ptr,X                  ;4
(1)  407/    C5EC :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  407/    C5EC :                             ;ADC #0                                 ;2
(1)  407/    C5EC :                             ;STA emu_ptr+1,X                ;4
(1)  407/    C5EC :                             ;LDA (emu_ptr,X)                ;6
(1)  407/    C5EC :                             ;STA emu_ptr2,X                 ;4
(1)  407/    C5EC :                             ;INC emu_ptr,X                  ;6
(1)  407/    C5EC :                             ;BCC .skip                              ;2
(1)  407/    C5EC :                             ;       INC emu_ptr+1,X         ;6
(1)  407/    C5EC :                             ;.skip:
(1)  407/    C5EC :                             ;LDA (emu_ptr,X)                ;6
(1)  407/    C5EC :                             ;STA emu_ptr2+1,X               ;4
(1)  407/    C5EC :                             ;JMP (emu_ptr2,X)               ;6
(1)  407/    C5EC :                             
(1)  407/    C5EC :                             ;Method 2 - 46 cycles
(1)  407/    C5EC :                             ;Jump table must be page aligned!!!
(1)  407/    C5EC :                             ;LDA (emu_PC,X)                 ;6
(1)  407/    C5EC :                             ;STZ emu_ptr+1,X                ;4
(1)  407/    C5EC :                             ;ASL                                    ;2
(1)  407/    C5EC :                             ;ROL emu_ptr+1,X                ;6
(1)  407/    C5EC :                             ;ASL                                    ;2
(1)  407/    C5EC :                             ;ROL emu_ptr+1,X                ;6
(1)  407/    C5EC :                             ;STA emu_ptr,X                  ;4                              
(1)  407/    C5EC :                             ;LDA emu_ptr+1,X                ;4
(1)  407/    C5EC :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  407/    C5EC :                             ;STA emu_ptr+1,X                ;4
(1)  407/    C5EC :                             ;JMP (emu_ptr2,X)               ;6
(1)  407/    C5EC :                             
(1)  407/    C5EC :                             ;Method 3 - 30 cycles
(1)  407/    C5EC :                             ;TXA                                                    ;2
(1)  407/    C5EC :                             ;TAY                                                    ;2
(1)  407/    C5EC :                             ;LDA (emu_PC,X)                                 ;6
(1)  407/    C5EC :                             ;ASL                                                    ;2
(1)  407/    C5EC :                             ;BCS upper                                              ;2
(1)  407/    C5EC :                             ;lower:
(1)  407/    C5EC :                             ;       ASL                                                     ;2
(1)  407/    C5EC :                             ;       TAX                                                     ;2
(1)  407/    C5EC :                             ;       BCS upper_lower                         ;2
(1)  407/    C5EC :                             ;       lower_lower:
(1)  407/    C5EC :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  407/    C5EC :                             ;       upper_lower:
(1)  407/    C5EC :                             ;               JMP (JUMP_TABLE2,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 124 - 1/5/2022 12:19:0


(1)  407/    C5EC :                             ;upper:
(1)  407/    C5EC :                             ;       ASL
(1)  407/    C5EC :                             ;       TAX
(1)  407/    C5EC :                             ;       BCS upper_upper
(1)  407/    C5EC :                             ;       lower_upper:
(1)  407/    C5EC :                             ;               JMP (JUMP_TABLE3,X)
(1)  407/    C5EC :                             ;       upper_upper:
(1)  407/    C5EC :                             ;               JMP (JUMP_TABLE4,X)
(1)  407/    C5EC :                             ;After jump:
(1)  407/    C5EC :                             ;TYA                                                    ;2
(1)  407/    C5EC :                             ;TAX                                                    ;2
(1)  407/    C5EC :                             
(1)  407/    C5EC :                             ;Method 4 - 28 cycles
(1)  407/    C5EC :                             ;LDA (emu_PC,X)                 ;6
(1)  407/    C5EC :                             ;TAY                                    ;2
(1)  407/    C5EC :                             ;LDA JUMP_TABLE,Y               ;4
(1)  407/    C5EC :                             ;PHA                                    ;3
(1)  407/    C5EC :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  407/    C5EC :                             ;PHA                                    ;3
(1)  407/    C5EC :                             ;RTS                                    ;6
(1)  407/    C5EC :                             
(1)  407/    C5EC :                             ;Method 5 - 30 cycles
(1)  407/    C5EC : A1 02                       LDA (emu_PC,X)                  ;6
(1)  407/    C5EE : A8                          TAY                                             ;2
(1)  407/    C5EF : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  407/    C5F2 : 95 0A                       STA emu_ptr,X                   ;4
(1)  407/    C5F4 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  407/    C5F7 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  407/    C5F9 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  407/    C5FC :                                                     
(1)  408/    C5FC :                     
(1)  409/    C5FC :                     	;0x51 - EOR IY
(1)  410/    C5FC :                     	EOR_IY:
(1)  411/    C5FC : (MACRO)             		OP_MACRO 81, "EOR", "IY", "EOR_IY"
(1)  411/    C5FC :                             ;TODO
(1)  412/    C5FC : (MACRO)             		NEXT_MACRO
(1)  412/    C5FC :                                             
(1)  412/    C5FC :  (MACRO-2)                  halt
(1)  412/    C5FC : 00                          BRK
(1)  412/    C5FD : 00                          BRK
(1)  412/    C5FE :                             
(1)  412/    C5FE :                             ;Method 1 - 60 cycles
(1)  412/    C5FE :                             ;Jump table must be page aligned!!!
(1)  412/    C5FE :                             ;LDA (emu_PC,X)                 ;6
(1)  412/    C5FE :                             ;ASL                                    ;2
(1)  412/    C5FE :                             ;STA emu_ptr,X                  ;4
(1)  412/    C5FE :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  412/    C5FE :                             ;ADC #0                                 ;2
(1)  412/    C5FE :                             ;STA emu_ptr+1,X                ;4
(1)  412/    C5FE :                             ;LDA (emu_ptr,X)                ;6
(1)  412/    C5FE :                             ;STA emu_ptr2,X                 ;4
(1)  412/    C5FE :                             ;INC emu_ptr,X                  ;6
(1)  412/    C5FE :                             ;BCC .skip                              ;2
(1)  412/    C5FE :                             ;       INC emu_ptr+1,X         ;6
(1)  412/    C5FE :                             ;.skip:
(1)  412/    C5FE :                             ;LDA (emu_ptr,X)                ;6
(1)  412/    C5FE :                             ;STA emu_ptr2+1,X               ;4
(1)  412/    C5FE :                             ;JMP (emu_ptr2,X)               ;6
(1)  412/    C5FE :                             
(1)  412/    C5FE :                             ;Method 2 - 46 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 125 - 1/5/2022 12:19:0


(1)  412/    C5FE :                             ;Jump table must be page aligned!!!
(1)  412/    C5FE :                             ;LDA (emu_PC,X)                 ;6
(1)  412/    C5FE :                             ;STZ emu_ptr+1,X                ;4
(1)  412/    C5FE :                             ;ASL                                    ;2
(1)  412/    C5FE :                             ;ROL emu_ptr+1,X                ;6
(1)  412/    C5FE :                             ;ASL                                    ;2
(1)  412/    C5FE :                             ;ROL emu_ptr+1,X                ;6
(1)  412/    C5FE :                             ;STA emu_ptr,X                  ;4                              
(1)  412/    C5FE :                             ;LDA emu_ptr+1,X                ;4
(1)  412/    C5FE :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  412/    C5FE :                             ;STA emu_ptr+1,X                ;4
(1)  412/    C5FE :                             ;JMP (emu_ptr2,X)               ;6
(1)  412/    C5FE :                             
(1)  412/    C5FE :                             ;Method 3 - 30 cycles
(1)  412/    C5FE :                             ;TXA                                                    ;2
(1)  412/    C5FE :                             ;TAY                                                    ;2
(1)  412/    C5FE :                             ;LDA (emu_PC,X)                                 ;6
(1)  412/    C5FE :                             ;ASL                                                    ;2
(1)  412/    C5FE :                             ;BCS upper                                              ;2
(1)  412/    C5FE :                             ;lower:
(1)  412/    C5FE :                             ;       ASL                                                     ;2
(1)  412/    C5FE :                             ;       TAX                                                     ;2
(1)  412/    C5FE :                             ;       BCS upper_lower                         ;2
(1)  412/    C5FE :                             ;       lower_lower:
(1)  412/    C5FE :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  412/    C5FE :                             ;       upper_lower:
(1)  412/    C5FE :                             ;               JMP (JUMP_TABLE2,X)
(1)  412/    C5FE :                             ;upper:
(1)  412/    C5FE :                             ;       ASL
(1)  412/    C5FE :                             ;       TAX
(1)  412/    C5FE :                             ;       BCS upper_upper
(1)  412/    C5FE :                             ;       lower_upper:
(1)  412/    C5FE :                             ;               JMP (JUMP_TABLE3,X)
(1)  412/    C5FE :                             ;       upper_upper:
(1)  412/    C5FE :                             ;               JMP (JUMP_TABLE4,X)
(1)  412/    C5FE :                             ;After jump:
(1)  412/    C5FE :                             ;TYA                                                    ;2
(1)  412/    C5FE :                             ;TAX                                                    ;2
(1)  412/    C5FE :                             
(1)  412/    C5FE :                             ;Method 4 - 28 cycles
(1)  412/    C5FE :                             ;LDA (emu_PC,X)                 ;6
(1)  412/    C5FE :                             ;TAY                                    ;2
(1)  412/    C5FE :                             ;LDA JUMP_TABLE,Y               ;4
(1)  412/    C5FE :                             ;PHA                                    ;3
(1)  412/    C5FE :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  412/    C5FE :                             ;PHA                                    ;3
(1)  412/    C5FE :                             ;RTS                                    ;6
(1)  412/    C5FE :                             
(1)  412/    C5FE :                             ;Method 5 - 30 cycles
(1)  412/    C5FE : A1 02                       LDA (emu_PC,X)                  ;6
(1)  412/    C600 : A8                          TAY                                             ;2
(1)  412/    C601 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  412/    C604 : 95 0A                       STA emu_ptr,X                   ;4
(1)  412/    C606 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  412/    C609 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  412/    C60B : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  412/    C60E :                                                     
(1)  413/    C60E :                     
(1)  414/    C60E :                     	;0x52 - NOP
(1)  415/    C60E :                     	NOP_0x52:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 126 - 1/5/2022 12:19:0


(1)  416/    C60E : (MACRO)             		OP_MACRO 82, "NOP", "IMP", "NOP_0x52"
(1)  416/    C60E :                             ;TODO
(1)  417/    C60E : (MACRO)             		NEXT_MACRO
(1)  417/    C60E :                                             
(1)  417/    C60E :  (MACRO-2)                  halt
(1)  417/    C60E : 00                          BRK
(1)  417/    C60F : 00                          BRK
(1)  417/    C610 :                             
(1)  417/    C610 :                             ;Method 1 - 60 cycles
(1)  417/    C610 :                             ;Jump table must be page aligned!!!
(1)  417/    C610 :                             ;LDA (emu_PC,X)                 ;6
(1)  417/    C610 :                             ;ASL                                    ;2
(1)  417/    C610 :                             ;STA emu_ptr,X                  ;4
(1)  417/    C610 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  417/    C610 :                             ;ADC #0                                 ;2
(1)  417/    C610 :                             ;STA emu_ptr+1,X                ;4
(1)  417/    C610 :                             ;LDA (emu_ptr,X)                ;6
(1)  417/    C610 :                             ;STA emu_ptr2,X                 ;4
(1)  417/    C610 :                             ;INC emu_ptr,X                  ;6
(1)  417/    C610 :                             ;BCC .skip                              ;2
(1)  417/    C610 :                             ;       INC emu_ptr+1,X         ;6
(1)  417/    C610 :                             ;.skip:
(1)  417/    C610 :                             ;LDA (emu_ptr,X)                ;6
(1)  417/    C610 :                             ;STA emu_ptr2+1,X               ;4
(1)  417/    C610 :                             ;JMP (emu_ptr2,X)               ;6
(1)  417/    C610 :                             
(1)  417/    C610 :                             ;Method 2 - 46 cycles
(1)  417/    C610 :                             ;Jump table must be page aligned!!!
(1)  417/    C610 :                             ;LDA (emu_PC,X)                 ;6
(1)  417/    C610 :                             ;STZ emu_ptr+1,X                ;4
(1)  417/    C610 :                             ;ASL                                    ;2
(1)  417/    C610 :                             ;ROL emu_ptr+1,X                ;6
(1)  417/    C610 :                             ;ASL                                    ;2
(1)  417/    C610 :                             ;ROL emu_ptr+1,X                ;6
(1)  417/    C610 :                             ;STA emu_ptr,X                  ;4                              
(1)  417/    C610 :                             ;LDA emu_ptr+1,X                ;4
(1)  417/    C610 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  417/    C610 :                             ;STA emu_ptr+1,X                ;4
(1)  417/    C610 :                             ;JMP (emu_ptr2,X)               ;6
(1)  417/    C610 :                             
(1)  417/    C610 :                             ;Method 3 - 30 cycles
(1)  417/    C610 :                             ;TXA                                                    ;2
(1)  417/    C610 :                             ;TAY                                                    ;2
(1)  417/    C610 :                             ;LDA (emu_PC,X)                                 ;6
(1)  417/    C610 :                             ;ASL                                                    ;2
(1)  417/    C610 :                             ;BCS upper                                              ;2
(1)  417/    C610 :                             ;lower:
(1)  417/    C610 :                             ;       ASL                                                     ;2
(1)  417/    C610 :                             ;       TAX                                                     ;2
(1)  417/    C610 :                             ;       BCS upper_lower                         ;2
(1)  417/    C610 :                             ;       lower_lower:
(1)  417/    C610 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  417/    C610 :                             ;       upper_lower:
(1)  417/    C610 :                             ;               JMP (JUMP_TABLE2,X)
(1)  417/    C610 :                             ;upper:
(1)  417/    C610 :                             ;       ASL
(1)  417/    C610 :                             ;       TAX
(1)  417/    C610 :                             ;       BCS upper_upper
(1)  417/    C610 :                             ;       lower_upper:
(1)  417/    C610 :                             ;               JMP (JUMP_TABLE3,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 127 - 1/5/2022 12:19:0


(1)  417/    C610 :                             ;       upper_upper:
(1)  417/    C610 :                             ;               JMP (JUMP_TABLE4,X)
(1)  417/    C610 :                             ;After jump:
(1)  417/    C610 :                             ;TYA                                                    ;2
(1)  417/    C610 :                             ;TAX                                                    ;2
(1)  417/    C610 :                             
(1)  417/    C610 :                             ;Method 4 - 28 cycles
(1)  417/    C610 :                             ;LDA (emu_PC,X)                 ;6
(1)  417/    C610 :                             ;TAY                                    ;2
(1)  417/    C610 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  417/    C610 :                             ;PHA                                    ;3
(1)  417/    C610 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  417/    C610 :                             ;PHA                                    ;3
(1)  417/    C610 :                             ;RTS                                    ;6
(1)  417/    C610 :                             
(1)  417/    C610 :                             ;Method 5 - 30 cycles
(1)  417/    C610 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  417/    C612 : A8                          TAY                                             ;2
(1)  417/    C613 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  417/    C616 : 95 0A                       STA emu_ptr,X                   ;4
(1)  417/    C618 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  417/    C61B : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  417/    C61D : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  417/    C620 :                                                     
(1)  418/    C620 :                     
(1)  419/    C620 :                     	;0x53 - NOP
(1)  420/    C620 :                     	NOP_0x53:
(1)  421/    C620 : (MACRO)             		OP_MACRO 83, "NOP", "IMP", "NOP_0x53"
(1)  421/    C620 :                             ;TODO
(1)  422/    C620 : (MACRO)             		NEXT_MACRO
(1)  422/    C620 :                                             
(1)  422/    C620 :  (MACRO-2)                  halt
(1)  422/    C620 : 00                          BRK
(1)  422/    C621 : 00                          BRK
(1)  422/    C622 :                             
(1)  422/    C622 :                             ;Method 1 - 60 cycles
(1)  422/    C622 :                             ;Jump table must be page aligned!!!
(1)  422/    C622 :                             ;LDA (emu_PC,X)                 ;6
(1)  422/    C622 :                             ;ASL                                    ;2
(1)  422/    C622 :                             ;STA emu_ptr,X                  ;4
(1)  422/    C622 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  422/    C622 :                             ;ADC #0                                 ;2
(1)  422/    C622 :                             ;STA emu_ptr+1,X                ;4
(1)  422/    C622 :                             ;LDA (emu_ptr,X)                ;6
(1)  422/    C622 :                             ;STA emu_ptr2,X                 ;4
(1)  422/    C622 :                             ;INC emu_ptr,X                  ;6
(1)  422/    C622 :                             ;BCC .skip                              ;2
(1)  422/    C622 :                             ;       INC emu_ptr+1,X         ;6
(1)  422/    C622 :                             ;.skip:
(1)  422/    C622 :                             ;LDA (emu_ptr,X)                ;6
(1)  422/    C622 :                             ;STA emu_ptr2+1,X               ;4
(1)  422/    C622 :                             ;JMP (emu_ptr2,X)               ;6
(1)  422/    C622 :                             
(1)  422/    C622 :                             ;Method 2 - 46 cycles
(1)  422/    C622 :                             ;Jump table must be page aligned!!!
(1)  422/    C622 :                             ;LDA (emu_PC,X)                 ;6
(1)  422/    C622 :                             ;STZ emu_ptr+1,X                ;4
(1)  422/    C622 :                             ;ASL                                    ;2
(1)  422/    C622 :                             ;ROL emu_ptr+1,X                ;6
(1)  422/    C622 :                             ;ASL                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 128 - 1/5/2022 12:19:0


(1)  422/    C622 :                             ;ROL emu_ptr+1,X                ;6
(1)  422/    C622 :                             ;STA emu_ptr,X                  ;4                              
(1)  422/    C622 :                             ;LDA emu_ptr+1,X                ;4
(1)  422/    C622 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  422/    C622 :                             ;STA emu_ptr+1,X                ;4
(1)  422/    C622 :                             ;JMP (emu_ptr2,X)               ;6
(1)  422/    C622 :                             
(1)  422/    C622 :                             ;Method 3 - 30 cycles
(1)  422/    C622 :                             ;TXA                                                    ;2
(1)  422/    C622 :                             ;TAY                                                    ;2
(1)  422/    C622 :                             ;LDA (emu_PC,X)                                 ;6
(1)  422/    C622 :                             ;ASL                                                    ;2
(1)  422/    C622 :                             ;BCS upper                                              ;2
(1)  422/    C622 :                             ;lower:
(1)  422/    C622 :                             ;       ASL                                                     ;2
(1)  422/    C622 :                             ;       TAX                                                     ;2
(1)  422/    C622 :                             ;       BCS upper_lower                         ;2
(1)  422/    C622 :                             ;       lower_lower:
(1)  422/    C622 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  422/    C622 :                             ;       upper_lower:
(1)  422/    C622 :                             ;               JMP (JUMP_TABLE2,X)
(1)  422/    C622 :                             ;upper:
(1)  422/    C622 :                             ;       ASL
(1)  422/    C622 :                             ;       TAX
(1)  422/    C622 :                             ;       BCS upper_upper
(1)  422/    C622 :                             ;       lower_upper:
(1)  422/    C622 :                             ;               JMP (JUMP_TABLE3,X)
(1)  422/    C622 :                             ;       upper_upper:
(1)  422/    C622 :                             ;               JMP (JUMP_TABLE4,X)
(1)  422/    C622 :                             ;After jump:
(1)  422/    C622 :                             ;TYA                                                    ;2
(1)  422/    C622 :                             ;TAX                                                    ;2
(1)  422/    C622 :                             
(1)  422/    C622 :                             ;Method 4 - 28 cycles
(1)  422/    C622 :                             ;LDA (emu_PC,X)                 ;6
(1)  422/    C622 :                             ;TAY                                    ;2
(1)  422/    C622 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  422/    C622 :                             ;PHA                                    ;3
(1)  422/    C622 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  422/    C622 :                             ;PHA                                    ;3
(1)  422/    C622 :                             ;RTS                                    ;6
(1)  422/    C622 :                             
(1)  422/    C622 :                             ;Method 5 - 30 cycles
(1)  422/    C622 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  422/    C624 : A8                          TAY                                             ;2
(1)  422/    C625 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  422/    C628 : 95 0A                       STA emu_ptr,X                   ;4
(1)  422/    C62A : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  422/    C62D : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  422/    C62F : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  422/    C632 :                                                     
(1)  423/    C632 :                     
(1)  424/    C632 :                     	;0x54 - NOP
(1)  425/    C632 :                     	NOP_0x54:
(1)  426/    C632 : (MACRO)             		OP_MACRO 84, "NOP", "IMP", "NOP_0x54"
(1)  426/    C632 :                             ;TODO
(1)  427/    C632 : (MACRO)             		NEXT_MACRO
(1)  427/    C632 :                                             
(1)  427/    C632 :  (MACRO-2)                  halt
(1)  427/    C632 : 00                          BRK
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 129 - 1/5/2022 12:19:0


(1)  427/    C633 : 00                          BRK
(1)  427/    C634 :                             
(1)  427/    C634 :                             ;Method 1 - 60 cycles
(1)  427/    C634 :                             ;Jump table must be page aligned!!!
(1)  427/    C634 :                             ;LDA (emu_PC,X)                 ;6
(1)  427/    C634 :                             ;ASL                                    ;2
(1)  427/    C634 :                             ;STA emu_ptr,X                  ;4
(1)  427/    C634 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  427/    C634 :                             ;ADC #0                                 ;2
(1)  427/    C634 :                             ;STA emu_ptr+1,X                ;4
(1)  427/    C634 :                             ;LDA (emu_ptr,X)                ;6
(1)  427/    C634 :                             ;STA emu_ptr2,X                 ;4
(1)  427/    C634 :                             ;INC emu_ptr,X                  ;6
(1)  427/    C634 :                             ;BCC .skip                              ;2
(1)  427/    C634 :                             ;       INC emu_ptr+1,X         ;6
(1)  427/    C634 :                             ;.skip:
(1)  427/    C634 :                             ;LDA (emu_ptr,X)                ;6
(1)  427/    C634 :                             ;STA emu_ptr2+1,X               ;4
(1)  427/    C634 :                             ;JMP (emu_ptr2,X)               ;6
(1)  427/    C634 :                             
(1)  427/    C634 :                             ;Method 2 - 46 cycles
(1)  427/    C634 :                             ;Jump table must be page aligned!!!
(1)  427/    C634 :                             ;LDA (emu_PC,X)                 ;6
(1)  427/    C634 :                             ;STZ emu_ptr+1,X                ;4
(1)  427/    C634 :                             ;ASL                                    ;2
(1)  427/    C634 :                             ;ROL emu_ptr+1,X                ;6
(1)  427/    C634 :                             ;ASL                                    ;2
(1)  427/    C634 :                             ;ROL emu_ptr+1,X                ;6
(1)  427/    C634 :                             ;STA emu_ptr,X                  ;4                              
(1)  427/    C634 :                             ;LDA emu_ptr+1,X                ;4
(1)  427/    C634 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  427/    C634 :                             ;STA emu_ptr+1,X                ;4
(1)  427/    C634 :                             ;JMP (emu_ptr2,X)               ;6
(1)  427/    C634 :                             
(1)  427/    C634 :                             ;Method 3 - 30 cycles
(1)  427/    C634 :                             ;TXA                                                    ;2
(1)  427/    C634 :                             ;TAY                                                    ;2
(1)  427/    C634 :                             ;LDA (emu_PC,X)                                 ;6
(1)  427/    C634 :                             ;ASL                                                    ;2
(1)  427/    C634 :                             ;BCS upper                                              ;2
(1)  427/    C634 :                             ;lower:
(1)  427/    C634 :                             ;       ASL                                                     ;2
(1)  427/    C634 :                             ;       TAX                                                     ;2
(1)  427/    C634 :                             ;       BCS upper_lower                         ;2
(1)  427/    C634 :                             ;       lower_lower:
(1)  427/    C634 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  427/    C634 :                             ;       upper_lower:
(1)  427/    C634 :                             ;               JMP (JUMP_TABLE2,X)
(1)  427/    C634 :                             ;upper:
(1)  427/    C634 :                             ;       ASL
(1)  427/    C634 :                             ;       TAX
(1)  427/    C634 :                             ;       BCS upper_upper
(1)  427/    C634 :                             ;       lower_upper:
(1)  427/    C634 :                             ;               JMP (JUMP_TABLE3,X)
(1)  427/    C634 :                             ;       upper_upper:
(1)  427/    C634 :                             ;               JMP (JUMP_TABLE4,X)
(1)  427/    C634 :                             ;After jump:
(1)  427/    C634 :                             ;TYA                                                    ;2
(1)  427/    C634 :                             ;TAX                                                    ;2
(1)  427/    C634 :                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 130 - 1/5/2022 12:19:0


(1)  427/    C634 :                             ;Method 4 - 28 cycles
(1)  427/    C634 :                             ;LDA (emu_PC,X)                 ;6
(1)  427/    C634 :                             ;TAY                                    ;2
(1)  427/    C634 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  427/    C634 :                             ;PHA                                    ;3
(1)  427/    C634 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  427/    C634 :                             ;PHA                                    ;3
(1)  427/    C634 :                             ;RTS                                    ;6
(1)  427/    C634 :                             
(1)  427/    C634 :                             ;Method 5 - 30 cycles
(1)  427/    C634 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  427/    C636 : A8                          TAY                                             ;2
(1)  427/    C637 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  427/    C63A : 95 0A                       STA emu_ptr,X                   ;4
(1)  427/    C63C : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  427/    C63F : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  427/    C641 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  427/    C644 :                                                     
(1)  428/    C644 :                     
(1)  429/    C644 :                     	;0x55 - EOR ZPX
(1)  430/    C644 :                     	EOR_ZPX:
(1)  431/    C644 : (MACRO)             		OP_MACRO 85, "EOR", "ZPX", "EOR_ZPX"
(1)  431/    C644 :                             ;TODO
(1)  432/    C644 : (MACRO)             		NEXT_MACRO
(1)  432/    C644 :                                             
(1)  432/    C644 :  (MACRO-2)                  halt
(1)  432/    C644 : 00                          BRK
(1)  432/    C645 : 00                          BRK
(1)  432/    C646 :                             
(1)  432/    C646 :                             ;Method 1 - 60 cycles
(1)  432/    C646 :                             ;Jump table must be page aligned!!!
(1)  432/    C646 :                             ;LDA (emu_PC,X)                 ;6
(1)  432/    C646 :                             ;ASL                                    ;2
(1)  432/    C646 :                             ;STA emu_ptr,X                  ;4
(1)  432/    C646 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  432/    C646 :                             ;ADC #0                                 ;2
(1)  432/    C646 :                             ;STA emu_ptr+1,X                ;4
(1)  432/    C646 :                             ;LDA (emu_ptr,X)                ;6
(1)  432/    C646 :                             ;STA emu_ptr2,X                 ;4
(1)  432/    C646 :                             ;INC emu_ptr,X                  ;6
(1)  432/    C646 :                             ;BCC .skip                              ;2
(1)  432/    C646 :                             ;       INC emu_ptr+1,X         ;6
(1)  432/    C646 :                             ;.skip:
(1)  432/    C646 :                             ;LDA (emu_ptr,X)                ;6
(1)  432/    C646 :                             ;STA emu_ptr2+1,X               ;4
(1)  432/    C646 :                             ;JMP (emu_ptr2,X)               ;6
(1)  432/    C646 :                             
(1)  432/    C646 :                             ;Method 2 - 46 cycles
(1)  432/    C646 :                             ;Jump table must be page aligned!!!
(1)  432/    C646 :                             ;LDA (emu_PC,X)                 ;6
(1)  432/    C646 :                             ;STZ emu_ptr+1,X                ;4
(1)  432/    C646 :                             ;ASL                                    ;2
(1)  432/    C646 :                             ;ROL emu_ptr+1,X                ;6
(1)  432/    C646 :                             ;ASL                                    ;2
(1)  432/    C646 :                             ;ROL emu_ptr+1,X                ;6
(1)  432/    C646 :                             ;STA emu_ptr,X                  ;4                              
(1)  432/    C646 :                             ;LDA emu_ptr+1,X                ;4
(1)  432/    C646 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  432/    C646 :                             ;STA emu_ptr+1,X                ;4
(1)  432/    C646 :                             ;JMP (emu_ptr2,X)               ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 131 - 1/5/2022 12:19:0


(1)  432/    C646 :                             
(1)  432/    C646 :                             ;Method 3 - 30 cycles
(1)  432/    C646 :                             ;TXA                                                    ;2
(1)  432/    C646 :                             ;TAY                                                    ;2
(1)  432/    C646 :                             ;LDA (emu_PC,X)                                 ;6
(1)  432/    C646 :                             ;ASL                                                    ;2
(1)  432/    C646 :                             ;BCS upper                                              ;2
(1)  432/    C646 :                             ;lower:
(1)  432/    C646 :                             ;       ASL                                                     ;2
(1)  432/    C646 :                             ;       TAX                                                     ;2
(1)  432/    C646 :                             ;       BCS upper_lower                         ;2
(1)  432/    C646 :                             ;       lower_lower:
(1)  432/    C646 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  432/    C646 :                             ;       upper_lower:
(1)  432/    C646 :                             ;               JMP (JUMP_TABLE2,X)
(1)  432/    C646 :                             ;upper:
(1)  432/    C646 :                             ;       ASL
(1)  432/    C646 :                             ;       TAX
(1)  432/    C646 :                             ;       BCS upper_upper
(1)  432/    C646 :                             ;       lower_upper:
(1)  432/    C646 :                             ;               JMP (JUMP_TABLE3,X)
(1)  432/    C646 :                             ;       upper_upper:
(1)  432/    C646 :                             ;               JMP (JUMP_TABLE4,X)
(1)  432/    C646 :                             ;After jump:
(1)  432/    C646 :                             ;TYA                                                    ;2
(1)  432/    C646 :                             ;TAX                                                    ;2
(1)  432/    C646 :                             
(1)  432/    C646 :                             ;Method 4 - 28 cycles
(1)  432/    C646 :                             ;LDA (emu_PC,X)                 ;6
(1)  432/    C646 :                             ;TAY                                    ;2
(1)  432/    C646 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  432/    C646 :                             ;PHA                                    ;3
(1)  432/    C646 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  432/    C646 :                             ;PHA                                    ;3
(1)  432/    C646 :                             ;RTS                                    ;6
(1)  432/    C646 :                             
(1)  432/    C646 :                             ;Method 5 - 30 cycles
(1)  432/    C646 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  432/    C648 : A8                          TAY                                             ;2
(1)  432/    C649 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  432/    C64C : 95 0A                       STA emu_ptr,X                   ;4
(1)  432/    C64E : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  432/    C651 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  432/    C653 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  432/    C656 :                                                     
(1)  433/    C656 :                     
(1)  434/    C656 :                     	;0x56 - LSR ZPX
(1)  435/    C656 :                     	LSR_ZPX:
(1)  436/    C656 : (MACRO)             		OP_MACRO 86, "LSR", "ZPX", "LSR_ZPX"
(1)  436/    C656 :                             ;TODO
(1)  437/    C656 : (MACRO)             		NEXT_MACRO
(1)  437/    C656 :                                             
(1)  437/    C656 :  (MACRO-2)                  halt
(1)  437/    C656 : 00                          BRK
(1)  437/    C657 : 00                          BRK
(1)  437/    C658 :                             
(1)  437/    C658 :                             ;Method 1 - 60 cycles
(1)  437/    C658 :                             ;Jump table must be page aligned!!!
(1)  437/    C658 :                             ;LDA (emu_PC,X)                 ;6
(1)  437/    C658 :                             ;ASL                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 132 - 1/5/2022 12:19:0


(1)  437/    C658 :                             ;STA emu_ptr,X                  ;4
(1)  437/    C658 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  437/    C658 :                             ;ADC #0                                 ;2
(1)  437/    C658 :                             ;STA emu_ptr+1,X                ;4
(1)  437/    C658 :                             ;LDA (emu_ptr,X)                ;6
(1)  437/    C658 :                             ;STA emu_ptr2,X                 ;4
(1)  437/    C658 :                             ;INC emu_ptr,X                  ;6
(1)  437/    C658 :                             ;BCC .skip                              ;2
(1)  437/    C658 :                             ;       INC emu_ptr+1,X         ;6
(1)  437/    C658 :                             ;.skip:
(1)  437/    C658 :                             ;LDA (emu_ptr,X)                ;6
(1)  437/    C658 :                             ;STA emu_ptr2+1,X               ;4
(1)  437/    C658 :                             ;JMP (emu_ptr2,X)               ;6
(1)  437/    C658 :                             
(1)  437/    C658 :                             ;Method 2 - 46 cycles
(1)  437/    C658 :                             ;Jump table must be page aligned!!!
(1)  437/    C658 :                             ;LDA (emu_PC,X)                 ;6
(1)  437/    C658 :                             ;STZ emu_ptr+1,X                ;4
(1)  437/    C658 :                             ;ASL                                    ;2
(1)  437/    C658 :                             ;ROL emu_ptr+1,X                ;6
(1)  437/    C658 :                             ;ASL                                    ;2
(1)  437/    C658 :                             ;ROL emu_ptr+1,X                ;6
(1)  437/    C658 :                             ;STA emu_ptr,X                  ;4                              
(1)  437/    C658 :                             ;LDA emu_ptr+1,X                ;4
(1)  437/    C658 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  437/    C658 :                             ;STA emu_ptr+1,X                ;4
(1)  437/    C658 :                             ;JMP (emu_ptr2,X)               ;6
(1)  437/    C658 :                             
(1)  437/    C658 :                             ;Method 3 - 30 cycles
(1)  437/    C658 :                             ;TXA                                                    ;2
(1)  437/    C658 :                             ;TAY                                                    ;2
(1)  437/    C658 :                             ;LDA (emu_PC,X)                                 ;6
(1)  437/    C658 :                             ;ASL                                                    ;2
(1)  437/    C658 :                             ;BCS upper                                              ;2
(1)  437/    C658 :                             ;lower:
(1)  437/    C658 :                             ;       ASL                                                     ;2
(1)  437/    C658 :                             ;       TAX                                                     ;2
(1)  437/    C658 :                             ;       BCS upper_lower                         ;2
(1)  437/    C658 :                             ;       lower_lower:
(1)  437/    C658 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  437/    C658 :                             ;       upper_lower:
(1)  437/    C658 :                             ;               JMP (JUMP_TABLE2,X)
(1)  437/    C658 :                             ;upper:
(1)  437/    C658 :                             ;       ASL
(1)  437/    C658 :                             ;       TAX
(1)  437/    C658 :                             ;       BCS upper_upper
(1)  437/    C658 :                             ;       lower_upper:
(1)  437/    C658 :                             ;               JMP (JUMP_TABLE3,X)
(1)  437/    C658 :                             ;       upper_upper:
(1)  437/    C658 :                             ;               JMP (JUMP_TABLE4,X)
(1)  437/    C658 :                             ;After jump:
(1)  437/    C658 :                             ;TYA                                                    ;2
(1)  437/    C658 :                             ;TAX                                                    ;2
(1)  437/    C658 :                             
(1)  437/    C658 :                             ;Method 4 - 28 cycles
(1)  437/    C658 :                             ;LDA (emu_PC,X)                 ;6
(1)  437/    C658 :                             ;TAY                                    ;2
(1)  437/    C658 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  437/    C658 :                             ;PHA                                    ;3
(1)  437/    C658 :                             ;LDA JUMP_TABLE2,Y              ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 133 - 1/5/2022 12:19:0


(1)  437/    C658 :                             ;PHA                                    ;3
(1)  437/    C658 :                             ;RTS                                    ;6
(1)  437/    C658 :                             
(1)  437/    C658 :                             ;Method 5 - 30 cycles
(1)  437/    C658 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  437/    C65A : A8                          TAY                                             ;2
(1)  437/    C65B : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  437/    C65E : 95 0A                       STA emu_ptr,X                   ;4
(1)  437/    C660 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  437/    C663 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  437/    C665 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  437/    C668 :                                                     
(1)  438/    C668 :                     
(1)  439/    C668 :                     	;0x57 - NOP
(1)  440/    C668 :                     	NOP_0x57:
(1)  441/    C668 : (MACRO)             		OP_MACRO 87, "NOP", "IMP", "NOP_0x57"
(1)  441/    C668 :                             ;TODO
(1)  442/    C668 : (MACRO)             		NEXT_MACRO
(1)  442/    C668 :                                             
(1)  442/    C668 :  (MACRO-2)                  halt
(1)  442/    C668 : 00                          BRK
(1)  442/    C669 : 00                          BRK
(1)  442/    C66A :                             
(1)  442/    C66A :                             ;Method 1 - 60 cycles
(1)  442/    C66A :                             ;Jump table must be page aligned!!!
(1)  442/    C66A :                             ;LDA (emu_PC,X)                 ;6
(1)  442/    C66A :                             ;ASL                                    ;2
(1)  442/    C66A :                             ;STA emu_ptr,X                  ;4
(1)  442/    C66A :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  442/    C66A :                             ;ADC #0                                 ;2
(1)  442/    C66A :                             ;STA emu_ptr+1,X                ;4
(1)  442/    C66A :                             ;LDA (emu_ptr,X)                ;6
(1)  442/    C66A :                             ;STA emu_ptr2,X                 ;4
(1)  442/    C66A :                             ;INC emu_ptr,X                  ;6
(1)  442/    C66A :                             ;BCC .skip                              ;2
(1)  442/    C66A :                             ;       INC emu_ptr+1,X         ;6
(1)  442/    C66A :                             ;.skip:
(1)  442/    C66A :                             ;LDA (emu_ptr,X)                ;6
(1)  442/    C66A :                             ;STA emu_ptr2+1,X               ;4
(1)  442/    C66A :                             ;JMP (emu_ptr2,X)               ;6
(1)  442/    C66A :                             
(1)  442/    C66A :                             ;Method 2 - 46 cycles
(1)  442/    C66A :                             ;Jump table must be page aligned!!!
(1)  442/    C66A :                             ;LDA (emu_PC,X)                 ;6
(1)  442/    C66A :                             ;STZ emu_ptr+1,X                ;4
(1)  442/    C66A :                             ;ASL                                    ;2
(1)  442/    C66A :                             ;ROL emu_ptr+1,X                ;6
(1)  442/    C66A :                             ;ASL                                    ;2
(1)  442/    C66A :                             ;ROL emu_ptr+1,X                ;6
(1)  442/    C66A :                             ;STA emu_ptr,X                  ;4                              
(1)  442/    C66A :                             ;LDA emu_ptr+1,X                ;4
(1)  442/    C66A :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  442/    C66A :                             ;STA emu_ptr+1,X                ;4
(1)  442/    C66A :                             ;JMP (emu_ptr2,X)               ;6
(1)  442/    C66A :                             
(1)  442/    C66A :                             ;Method 3 - 30 cycles
(1)  442/    C66A :                             ;TXA                                                    ;2
(1)  442/    C66A :                             ;TAY                                                    ;2
(1)  442/    C66A :                             ;LDA (emu_PC,X)                                 ;6
(1)  442/    C66A :                             ;ASL                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 134 - 1/5/2022 12:19:0


(1)  442/    C66A :                             ;BCS upper                                              ;2
(1)  442/    C66A :                             ;lower:
(1)  442/    C66A :                             ;       ASL                                                     ;2
(1)  442/    C66A :                             ;       TAX                                                     ;2
(1)  442/    C66A :                             ;       BCS upper_lower                         ;2
(1)  442/    C66A :                             ;       lower_lower:
(1)  442/    C66A :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  442/    C66A :                             ;       upper_lower:
(1)  442/    C66A :                             ;               JMP (JUMP_TABLE2,X)
(1)  442/    C66A :                             ;upper:
(1)  442/    C66A :                             ;       ASL
(1)  442/    C66A :                             ;       TAX
(1)  442/    C66A :                             ;       BCS upper_upper
(1)  442/    C66A :                             ;       lower_upper:
(1)  442/    C66A :                             ;               JMP (JUMP_TABLE3,X)
(1)  442/    C66A :                             ;       upper_upper:
(1)  442/    C66A :                             ;               JMP (JUMP_TABLE4,X)
(1)  442/    C66A :                             ;After jump:
(1)  442/    C66A :                             ;TYA                                                    ;2
(1)  442/    C66A :                             ;TAX                                                    ;2
(1)  442/    C66A :                             
(1)  442/    C66A :                             ;Method 4 - 28 cycles
(1)  442/    C66A :                             ;LDA (emu_PC,X)                 ;6
(1)  442/    C66A :                             ;TAY                                    ;2
(1)  442/    C66A :                             ;LDA JUMP_TABLE,Y               ;4
(1)  442/    C66A :                             ;PHA                                    ;3
(1)  442/    C66A :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  442/    C66A :                             ;PHA                                    ;3
(1)  442/    C66A :                             ;RTS                                    ;6
(1)  442/    C66A :                             
(1)  442/    C66A :                             ;Method 5 - 30 cycles
(1)  442/    C66A : A1 02                       LDA (emu_PC,X)                  ;6
(1)  442/    C66C : A8                          TAY                                             ;2
(1)  442/    C66D : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  442/    C670 : 95 0A                       STA emu_ptr,X                   ;4
(1)  442/    C672 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  442/    C675 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  442/    C677 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  442/    C67A :                                                     
(1)  443/    C67A :                     
(1)  444/    C67A :                     	;0x58 - CLI IMP
(1)  445/    C67A :                     	CLI_IMP:
(1)  446/    C67A : (MACRO)             		OP_MACRO 88, "CLI", "IMP", "CLI_IMP"
(1)  446/    C67A :                             ;TODO
(1)  447/    C67A : (MACRO)             		NEXT_MACRO
(1)  447/    C67A :                                             
(1)  447/    C67A :  (MACRO-2)                  halt
(1)  447/    C67A : 00                          BRK
(1)  447/    C67B : 00                          BRK
(1)  447/    C67C :                             
(1)  447/    C67C :                             ;Method 1 - 60 cycles
(1)  447/    C67C :                             ;Jump table must be page aligned!!!
(1)  447/    C67C :                             ;LDA (emu_PC,X)                 ;6
(1)  447/    C67C :                             ;ASL                                    ;2
(1)  447/    C67C :                             ;STA emu_ptr,X                  ;4
(1)  447/    C67C :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  447/    C67C :                             ;ADC #0                                 ;2
(1)  447/    C67C :                             ;STA emu_ptr+1,X                ;4
(1)  447/    C67C :                             ;LDA (emu_ptr,X)                ;6
(1)  447/    C67C :                             ;STA emu_ptr2,X                 ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 135 - 1/5/2022 12:19:0


(1)  447/    C67C :                             ;INC emu_ptr,X                  ;6
(1)  447/    C67C :                             ;BCC .skip                              ;2
(1)  447/    C67C :                             ;       INC emu_ptr+1,X         ;6
(1)  447/    C67C :                             ;.skip:
(1)  447/    C67C :                             ;LDA (emu_ptr,X)                ;6
(1)  447/    C67C :                             ;STA emu_ptr2+1,X               ;4
(1)  447/    C67C :                             ;JMP (emu_ptr2,X)               ;6
(1)  447/    C67C :                             
(1)  447/    C67C :                             ;Method 2 - 46 cycles
(1)  447/    C67C :                             ;Jump table must be page aligned!!!
(1)  447/    C67C :                             ;LDA (emu_PC,X)                 ;6
(1)  447/    C67C :                             ;STZ emu_ptr+1,X                ;4
(1)  447/    C67C :                             ;ASL                                    ;2
(1)  447/    C67C :                             ;ROL emu_ptr+1,X                ;6
(1)  447/    C67C :                             ;ASL                                    ;2
(1)  447/    C67C :                             ;ROL emu_ptr+1,X                ;6
(1)  447/    C67C :                             ;STA emu_ptr,X                  ;4                              
(1)  447/    C67C :                             ;LDA emu_ptr+1,X                ;4
(1)  447/    C67C :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  447/    C67C :                             ;STA emu_ptr+1,X                ;4
(1)  447/    C67C :                             ;JMP (emu_ptr2,X)               ;6
(1)  447/    C67C :                             
(1)  447/    C67C :                             ;Method 3 - 30 cycles
(1)  447/    C67C :                             ;TXA                                                    ;2
(1)  447/    C67C :                             ;TAY                                                    ;2
(1)  447/    C67C :                             ;LDA (emu_PC,X)                                 ;6
(1)  447/    C67C :                             ;ASL                                                    ;2
(1)  447/    C67C :                             ;BCS upper                                              ;2
(1)  447/    C67C :                             ;lower:
(1)  447/    C67C :                             ;       ASL                                                     ;2
(1)  447/    C67C :                             ;       TAX                                                     ;2
(1)  447/    C67C :                             ;       BCS upper_lower                         ;2
(1)  447/    C67C :                             ;       lower_lower:
(1)  447/    C67C :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  447/    C67C :                             ;       upper_lower:
(1)  447/    C67C :                             ;               JMP (JUMP_TABLE2,X)
(1)  447/    C67C :                             ;upper:
(1)  447/    C67C :                             ;       ASL
(1)  447/    C67C :                             ;       TAX
(1)  447/    C67C :                             ;       BCS upper_upper
(1)  447/    C67C :                             ;       lower_upper:
(1)  447/    C67C :                             ;               JMP (JUMP_TABLE3,X)
(1)  447/    C67C :                             ;       upper_upper:
(1)  447/    C67C :                             ;               JMP (JUMP_TABLE4,X)
(1)  447/    C67C :                             ;After jump:
(1)  447/    C67C :                             ;TYA                                                    ;2
(1)  447/    C67C :                             ;TAX                                                    ;2
(1)  447/    C67C :                             
(1)  447/    C67C :                             ;Method 4 - 28 cycles
(1)  447/    C67C :                             ;LDA (emu_PC,X)                 ;6
(1)  447/    C67C :                             ;TAY                                    ;2
(1)  447/    C67C :                             ;LDA JUMP_TABLE,Y               ;4
(1)  447/    C67C :                             ;PHA                                    ;3
(1)  447/    C67C :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  447/    C67C :                             ;PHA                                    ;3
(1)  447/    C67C :                             ;RTS                                    ;6
(1)  447/    C67C :                             
(1)  447/    C67C :                             ;Method 5 - 30 cycles
(1)  447/    C67C : A1 02                       LDA (emu_PC,X)                  ;6
(1)  447/    C67E : A8                          TAY                                             ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 136 - 1/5/2022 12:19:0


(1)  447/    C67F : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  447/    C682 : 95 0A                       STA emu_ptr,X                   ;4
(1)  447/    C684 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  447/    C687 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  447/    C689 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  447/    C68C :                                                     
(1)  448/    C68C :                     
(1)  449/    C68C :                     	;0x59 - EOR ABSY
(1)  450/    C68C :                     	EOR_ABSY:
(1)  451/    C68C : (MACRO)             		OP_MACRO 89, "EOR", "ABSY", "EOR_ABSY"
(1)  451/    C68C :                             ;TODO
(1)  452/    C68C : (MACRO)             		NEXT_MACRO
(1)  452/    C68C :                                             
(1)  452/    C68C :  (MACRO-2)                  halt
(1)  452/    C68C : 00                          BRK
(1)  452/    C68D : 00                          BRK
(1)  452/    C68E :                             
(1)  452/    C68E :                             ;Method 1 - 60 cycles
(1)  452/    C68E :                             ;Jump table must be page aligned!!!
(1)  452/    C68E :                             ;LDA (emu_PC,X)                 ;6
(1)  452/    C68E :                             ;ASL                                    ;2
(1)  452/    C68E :                             ;STA emu_ptr,X                  ;4
(1)  452/    C68E :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  452/    C68E :                             ;ADC #0                                 ;2
(1)  452/    C68E :                             ;STA emu_ptr+1,X                ;4
(1)  452/    C68E :                             ;LDA (emu_ptr,X)                ;6
(1)  452/    C68E :                             ;STA emu_ptr2,X                 ;4
(1)  452/    C68E :                             ;INC emu_ptr,X                  ;6
(1)  452/    C68E :                             ;BCC .skip                              ;2
(1)  452/    C68E :                             ;       INC emu_ptr+1,X         ;6
(1)  452/    C68E :                             ;.skip:
(1)  452/    C68E :                             ;LDA (emu_ptr,X)                ;6
(1)  452/    C68E :                             ;STA emu_ptr2+1,X               ;4
(1)  452/    C68E :                             ;JMP (emu_ptr2,X)               ;6
(1)  452/    C68E :                             
(1)  452/    C68E :                             ;Method 2 - 46 cycles
(1)  452/    C68E :                             ;Jump table must be page aligned!!!
(1)  452/    C68E :                             ;LDA (emu_PC,X)                 ;6
(1)  452/    C68E :                             ;STZ emu_ptr+1,X                ;4
(1)  452/    C68E :                             ;ASL                                    ;2
(1)  452/    C68E :                             ;ROL emu_ptr+1,X                ;6
(1)  452/    C68E :                             ;ASL                                    ;2
(1)  452/    C68E :                             ;ROL emu_ptr+1,X                ;6
(1)  452/    C68E :                             ;STA emu_ptr,X                  ;4                              
(1)  452/    C68E :                             ;LDA emu_ptr+1,X                ;4
(1)  452/    C68E :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  452/    C68E :                             ;STA emu_ptr+1,X                ;4
(1)  452/    C68E :                             ;JMP (emu_ptr2,X)               ;6
(1)  452/    C68E :                             
(1)  452/    C68E :                             ;Method 3 - 30 cycles
(1)  452/    C68E :                             ;TXA                                                    ;2
(1)  452/    C68E :                             ;TAY                                                    ;2
(1)  452/    C68E :                             ;LDA (emu_PC,X)                                 ;6
(1)  452/    C68E :                             ;ASL                                                    ;2
(1)  452/    C68E :                             ;BCS upper                                              ;2
(1)  452/    C68E :                             ;lower:
(1)  452/    C68E :                             ;       ASL                                                     ;2
(1)  452/    C68E :                             ;       TAX                                                     ;2
(1)  452/    C68E :                             ;       BCS upper_lower                         ;2
(1)  452/    C68E :                             ;       lower_lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 137 - 1/5/2022 12:19:0


(1)  452/    C68E :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  452/    C68E :                             ;       upper_lower:
(1)  452/    C68E :                             ;               JMP (JUMP_TABLE2,X)
(1)  452/    C68E :                             ;upper:
(1)  452/    C68E :                             ;       ASL
(1)  452/    C68E :                             ;       TAX
(1)  452/    C68E :                             ;       BCS upper_upper
(1)  452/    C68E :                             ;       lower_upper:
(1)  452/    C68E :                             ;               JMP (JUMP_TABLE3,X)
(1)  452/    C68E :                             ;       upper_upper:
(1)  452/    C68E :                             ;               JMP (JUMP_TABLE4,X)
(1)  452/    C68E :                             ;After jump:
(1)  452/    C68E :                             ;TYA                                                    ;2
(1)  452/    C68E :                             ;TAX                                                    ;2
(1)  452/    C68E :                             
(1)  452/    C68E :                             ;Method 4 - 28 cycles
(1)  452/    C68E :                             ;LDA (emu_PC,X)                 ;6
(1)  452/    C68E :                             ;TAY                                    ;2
(1)  452/    C68E :                             ;LDA JUMP_TABLE,Y               ;4
(1)  452/    C68E :                             ;PHA                                    ;3
(1)  452/    C68E :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  452/    C68E :                             ;PHA                                    ;3
(1)  452/    C68E :                             ;RTS                                    ;6
(1)  452/    C68E :                             
(1)  452/    C68E :                             ;Method 5 - 30 cycles
(1)  452/    C68E : A1 02                       LDA (emu_PC,X)                  ;6
(1)  452/    C690 : A8                          TAY                                             ;2
(1)  452/    C691 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  452/    C694 : 95 0A                       STA emu_ptr,X                   ;4
(1)  452/    C696 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  452/    C699 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  452/    C69B : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  452/    C69E :                                                     
(1)  453/    C69E :                     
(1)  454/    C69E :                     	;0x5A - NOP
(1)  455/    C69E :                     	NOP_0x5A:
(1)  456/    C69E : (MACRO)             		OP_MACRO 90, "NOP", "IMP", "NOP_0x5A"
(1)  456/    C69E :                             ;TODO
(1)  457/    C69E : (MACRO)             		NEXT_MACRO
(1)  457/    C69E :                                             
(1)  457/    C69E :  (MACRO-2)                  halt
(1)  457/    C69E : 00                          BRK
(1)  457/    C69F : 00                          BRK
(1)  457/    C6A0 :                             
(1)  457/    C6A0 :                             ;Method 1 - 60 cycles
(1)  457/    C6A0 :                             ;Jump table must be page aligned!!!
(1)  457/    C6A0 :                             ;LDA (emu_PC,X)                 ;6
(1)  457/    C6A0 :                             ;ASL                                    ;2
(1)  457/    C6A0 :                             ;STA emu_ptr,X                  ;4
(1)  457/    C6A0 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  457/    C6A0 :                             ;ADC #0                                 ;2
(1)  457/    C6A0 :                             ;STA emu_ptr+1,X                ;4
(1)  457/    C6A0 :                             ;LDA (emu_ptr,X)                ;6
(1)  457/    C6A0 :                             ;STA emu_ptr2,X                 ;4
(1)  457/    C6A0 :                             ;INC emu_ptr,X                  ;6
(1)  457/    C6A0 :                             ;BCC .skip                              ;2
(1)  457/    C6A0 :                             ;       INC emu_ptr+1,X         ;6
(1)  457/    C6A0 :                             ;.skip:
(1)  457/    C6A0 :                             ;LDA (emu_ptr,X)                ;6
(1)  457/    C6A0 :                             ;STA emu_ptr2+1,X               ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 138 - 1/5/2022 12:19:0


(1)  457/    C6A0 :                             ;JMP (emu_ptr2,X)               ;6
(1)  457/    C6A0 :                             
(1)  457/    C6A0 :                             ;Method 2 - 46 cycles
(1)  457/    C6A0 :                             ;Jump table must be page aligned!!!
(1)  457/    C6A0 :                             ;LDA (emu_PC,X)                 ;6
(1)  457/    C6A0 :                             ;STZ emu_ptr+1,X                ;4
(1)  457/    C6A0 :                             ;ASL                                    ;2
(1)  457/    C6A0 :                             ;ROL emu_ptr+1,X                ;6
(1)  457/    C6A0 :                             ;ASL                                    ;2
(1)  457/    C6A0 :                             ;ROL emu_ptr+1,X                ;6
(1)  457/    C6A0 :                             ;STA emu_ptr,X                  ;4                              
(1)  457/    C6A0 :                             ;LDA emu_ptr+1,X                ;4
(1)  457/    C6A0 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  457/    C6A0 :                             ;STA emu_ptr+1,X                ;4
(1)  457/    C6A0 :                             ;JMP (emu_ptr2,X)               ;6
(1)  457/    C6A0 :                             
(1)  457/    C6A0 :                             ;Method 3 - 30 cycles
(1)  457/    C6A0 :                             ;TXA                                                    ;2
(1)  457/    C6A0 :                             ;TAY                                                    ;2
(1)  457/    C6A0 :                             ;LDA (emu_PC,X)                                 ;6
(1)  457/    C6A0 :                             ;ASL                                                    ;2
(1)  457/    C6A0 :                             ;BCS upper                                              ;2
(1)  457/    C6A0 :                             ;lower:
(1)  457/    C6A0 :                             ;       ASL                                                     ;2
(1)  457/    C6A0 :                             ;       TAX                                                     ;2
(1)  457/    C6A0 :                             ;       BCS upper_lower                         ;2
(1)  457/    C6A0 :                             ;       lower_lower:
(1)  457/    C6A0 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  457/    C6A0 :                             ;       upper_lower:
(1)  457/    C6A0 :                             ;               JMP (JUMP_TABLE2,X)
(1)  457/    C6A0 :                             ;upper:
(1)  457/    C6A0 :                             ;       ASL
(1)  457/    C6A0 :                             ;       TAX
(1)  457/    C6A0 :                             ;       BCS upper_upper
(1)  457/    C6A0 :                             ;       lower_upper:
(1)  457/    C6A0 :                             ;               JMP (JUMP_TABLE3,X)
(1)  457/    C6A0 :                             ;       upper_upper:
(1)  457/    C6A0 :                             ;               JMP (JUMP_TABLE4,X)
(1)  457/    C6A0 :                             ;After jump:
(1)  457/    C6A0 :                             ;TYA                                                    ;2
(1)  457/    C6A0 :                             ;TAX                                                    ;2
(1)  457/    C6A0 :                             
(1)  457/    C6A0 :                             ;Method 4 - 28 cycles
(1)  457/    C6A0 :                             ;LDA (emu_PC,X)                 ;6
(1)  457/    C6A0 :                             ;TAY                                    ;2
(1)  457/    C6A0 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  457/    C6A0 :                             ;PHA                                    ;3
(1)  457/    C6A0 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  457/    C6A0 :                             ;PHA                                    ;3
(1)  457/    C6A0 :                             ;RTS                                    ;6
(1)  457/    C6A0 :                             
(1)  457/    C6A0 :                             ;Method 5 - 30 cycles
(1)  457/    C6A0 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  457/    C6A2 : A8                          TAY                                             ;2
(1)  457/    C6A3 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  457/    C6A6 : 95 0A                       STA emu_ptr,X                   ;4
(1)  457/    C6A8 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  457/    C6AB : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  457/    C6AD : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  457/    C6B0 :                                                     
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 139 - 1/5/2022 12:19:0


(1)  458/    C6B0 :                     
(1)  459/    C6B0 :                     	;0x5B - NOP
(1)  460/    C6B0 :                     	NOP_0x5B:
(1)  461/    C6B0 : (MACRO)             		OP_MACRO 91, "NOP", "IMP", "NOP_0x5B"
(1)  461/    C6B0 :                             ;TODO
(1)  462/    C6B0 : (MACRO)             		NEXT_MACRO
(1)  462/    C6B0 :                                             
(1)  462/    C6B0 :  (MACRO-2)                  halt
(1)  462/    C6B0 : 00                          BRK
(1)  462/    C6B1 : 00                          BRK
(1)  462/    C6B2 :                             
(1)  462/    C6B2 :                             ;Method 1 - 60 cycles
(1)  462/    C6B2 :                             ;Jump table must be page aligned!!!
(1)  462/    C6B2 :                             ;LDA (emu_PC,X)                 ;6
(1)  462/    C6B2 :                             ;ASL                                    ;2
(1)  462/    C6B2 :                             ;STA emu_ptr,X                  ;4
(1)  462/    C6B2 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  462/    C6B2 :                             ;ADC #0                                 ;2
(1)  462/    C6B2 :                             ;STA emu_ptr+1,X                ;4
(1)  462/    C6B2 :                             ;LDA (emu_ptr,X)                ;6
(1)  462/    C6B2 :                             ;STA emu_ptr2,X                 ;4
(1)  462/    C6B2 :                             ;INC emu_ptr,X                  ;6
(1)  462/    C6B2 :                             ;BCC .skip                              ;2
(1)  462/    C6B2 :                             ;       INC emu_ptr+1,X         ;6
(1)  462/    C6B2 :                             ;.skip:
(1)  462/    C6B2 :                             ;LDA (emu_ptr,X)                ;6
(1)  462/    C6B2 :                             ;STA emu_ptr2+1,X               ;4
(1)  462/    C6B2 :                             ;JMP (emu_ptr2,X)               ;6
(1)  462/    C6B2 :                             
(1)  462/    C6B2 :                             ;Method 2 - 46 cycles
(1)  462/    C6B2 :                             ;Jump table must be page aligned!!!
(1)  462/    C6B2 :                             ;LDA (emu_PC,X)                 ;6
(1)  462/    C6B2 :                             ;STZ emu_ptr+1,X                ;4
(1)  462/    C6B2 :                             ;ASL                                    ;2
(1)  462/    C6B2 :                             ;ROL emu_ptr+1,X                ;6
(1)  462/    C6B2 :                             ;ASL                                    ;2
(1)  462/    C6B2 :                             ;ROL emu_ptr+1,X                ;6
(1)  462/    C6B2 :                             ;STA emu_ptr,X                  ;4                              
(1)  462/    C6B2 :                             ;LDA emu_ptr+1,X                ;4
(1)  462/    C6B2 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  462/    C6B2 :                             ;STA emu_ptr+1,X                ;4
(1)  462/    C6B2 :                             ;JMP (emu_ptr2,X)               ;6
(1)  462/    C6B2 :                             
(1)  462/    C6B2 :                             ;Method 3 - 30 cycles
(1)  462/    C6B2 :                             ;TXA                                                    ;2
(1)  462/    C6B2 :                             ;TAY                                                    ;2
(1)  462/    C6B2 :                             ;LDA (emu_PC,X)                                 ;6
(1)  462/    C6B2 :                             ;ASL                                                    ;2
(1)  462/    C6B2 :                             ;BCS upper                                              ;2
(1)  462/    C6B2 :                             ;lower:
(1)  462/    C6B2 :                             ;       ASL                                                     ;2
(1)  462/    C6B2 :                             ;       TAX                                                     ;2
(1)  462/    C6B2 :                             ;       BCS upper_lower                         ;2
(1)  462/    C6B2 :                             ;       lower_lower:
(1)  462/    C6B2 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  462/    C6B2 :                             ;       upper_lower:
(1)  462/    C6B2 :                             ;               JMP (JUMP_TABLE2,X)
(1)  462/    C6B2 :                             ;upper:
(1)  462/    C6B2 :                             ;       ASL
(1)  462/    C6B2 :                             ;       TAX
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 140 - 1/5/2022 12:19:0


(1)  462/    C6B2 :                             ;       BCS upper_upper
(1)  462/    C6B2 :                             ;       lower_upper:
(1)  462/    C6B2 :                             ;               JMP (JUMP_TABLE3,X)
(1)  462/    C6B2 :                             ;       upper_upper:
(1)  462/    C6B2 :                             ;               JMP (JUMP_TABLE4,X)
(1)  462/    C6B2 :                             ;After jump:
(1)  462/    C6B2 :                             ;TYA                                                    ;2
(1)  462/    C6B2 :                             ;TAX                                                    ;2
(1)  462/    C6B2 :                             
(1)  462/    C6B2 :                             ;Method 4 - 28 cycles
(1)  462/    C6B2 :                             ;LDA (emu_PC,X)                 ;6
(1)  462/    C6B2 :                             ;TAY                                    ;2
(1)  462/    C6B2 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  462/    C6B2 :                             ;PHA                                    ;3
(1)  462/    C6B2 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  462/    C6B2 :                             ;PHA                                    ;3
(1)  462/    C6B2 :                             ;RTS                                    ;6
(1)  462/    C6B2 :                             
(1)  462/    C6B2 :                             ;Method 5 - 30 cycles
(1)  462/    C6B2 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  462/    C6B4 : A8                          TAY                                             ;2
(1)  462/    C6B5 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  462/    C6B8 : 95 0A                       STA emu_ptr,X                   ;4
(1)  462/    C6BA : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  462/    C6BD : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  462/    C6BF : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  462/    C6C2 :                                                     
(1)  463/    C6C2 :                     
(1)  464/    C6C2 :                     	;0x5C - NOP
(1)  465/    C6C2 :                     	NOP_0x5C:
(1)  466/    C6C2 : (MACRO)             		OP_MACRO 92, "NOP", "IMP", "NOP_0x5C"
(1)  466/    C6C2 :                             ;TODO
(1)  467/    C6C2 : (MACRO)             		NEXT_MACRO
(1)  467/    C6C2 :                                             
(1)  467/    C6C2 :  (MACRO-2)                  halt
(1)  467/    C6C2 : 00                          BRK
(1)  467/    C6C3 : 00                          BRK
(1)  467/    C6C4 :                             
(1)  467/    C6C4 :                             ;Method 1 - 60 cycles
(1)  467/    C6C4 :                             ;Jump table must be page aligned!!!
(1)  467/    C6C4 :                             ;LDA (emu_PC,X)                 ;6
(1)  467/    C6C4 :                             ;ASL                                    ;2
(1)  467/    C6C4 :                             ;STA emu_ptr,X                  ;4
(1)  467/    C6C4 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  467/    C6C4 :                             ;ADC #0                                 ;2
(1)  467/    C6C4 :                             ;STA emu_ptr+1,X                ;4
(1)  467/    C6C4 :                             ;LDA (emu_ptr,X)                ;6
(1)  467/    C6C4 :                             ;STA emu_ptr2,X                 ;4
(1)  467/    C6C4 :                             ;INC emu_ptr,X                  ;6
(1)  467/    C6C4 :                             ;BCC .skip                              ;2
(1)  467/    C6C4 :                             ;       INC emu_ptr+1,X         ;6
(1)  467/    C6C4 :                             ;.skip:
(1)  467/    C6C4 :                             ;LDA (emu_ptr,X)                ;6
(1)  467/    C6C4 :                             ;STA emu_ptr2+1,X               ;4
(1)  467/    C6C4 :                             ;JMP (emu_ptr2,X)               ;6
(1)  467/    C6C4 :                             
(1)  467/    C6C4 :                             ;Method 2 - 46 cycles
(1)  467/    C6C4 :                             ;Jump table must be page aligned!!!
(1)  467/    C6C4 :                             ;LDA (emu_PC,X)                 ;6
(1)  467/    C6C4 :                             ;STZ emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 141 - 1/5/2022 12:19:0


(1)  467/    C6C4 :                             ;ASL                                    ;2
(1)  467/    C6C4 :                             ;ROL emu_ptr+1,X                ;6
(1)  467/    C6C4 :                             ;ASL                                    ;2
(1)  467/    C6C4 :                             ;ROL emu_ptr+1,X                ;6
(1)  467/    C6C4 :                             ;STA emu_ptr,X                  ;4                              
(1)  467/    C6C4 :                             ;LDA emu_ptr+1,X                ;4
(1)  467/    C6C4 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  467/    C6C4 :                             ;STA emu_ptr+1,X                ;4
(1)  467/    C6C4 :                             ;JMP (emu_ptr2,X)               ;6
(1)  467/    C6C4 :                             
(1)  467/    C6C4 :                             ;Method 3 - 30 cycles
(1)  467/    C6C4 :                             ;TXA                                                    ;2
(1)  467/    C6C4 :                             ;TAY                                                    ;2
(1)  467/    C6C4 :                             ;LDA (emu_PC,X)                                 ;6
(1)  467/    C6C4 :                             ;ASL                                                    ;2
(1)  467/    C6C4 :                             ;BCS upper                                              ;2
(1)  467/    C6C4 :                             ;lower:
(1)  467/    C6C4 :                             ;       ASL                                                     ;2
(1)  467/    C6C4 :                             ;       TAX                                                     ;2
(1)  467/    C6C4 :                             ;       BCS upper_lower                         ;2
(1)  467/    C6C4 :                             ;       lower_lower:
(1)  467/    C6C4 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  467/    C6C4 :                             ;       upper_lower:
(1)  467/    C6C4 :                             ;               JMP (JUMP_TABLE2,X)
(1)  467/    C6C4 :                             ;upper:
(1)  467/    C6C4 :                             ;       ASL
(1)  467/    C6C4 :                             ;       TAX
(1)  467/    C6C4 :                             ;       BCS upper_upper
(1)  467/    C6C4 :                             ;       lower_upper:
(1)  467/    C6C4 :                             ;               JMP (JUMP_TABLE3,X)
(1)  467/    C6C4 :                             ;       upper_upper:
(1)  467/    C6C4 :                             ;               JMP (JUMP_TABLE4,X)
(1)  467/    C6C4 :                             ;After jump:
(1)  467/    C6C4 :                             ;TYA                                                    ;2
(1)  467/    C6C4 :                             ;TAX                                                    ;2
(1)  467/    C6C4 :                             
(1)  467/    C6C4 :                             ;Method 4 - 28 cycles
(1)  467/    C6C4 :                             ;LDA (emu_PC,X)                 ;6
(1)  467/    C6C4 :                             ;TAY                                    ;2
(1)  467/    C6C4 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  467/    C6C4 :                             ;PHA                                    ;3
(1)  467/    C6C4 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  467/    C6C4 :                             ;PHA                                    ;3
(1)  467/    C6C4 :                             ;RTS                                    ;6
(1)  467/    C6C4 :                             
(1)  467/    C6C4 :                             ;Method 5 - 30 cycles
(1)  467/    C6C4 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  467/    C6C6 : A8                          TAY                                             ;2
(1)  467/    C6C7 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  467/    C6CA : 95 0A                       STA emu_ptr,X                   ;4
(1)  467/    C6CC : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  467/    C6CF : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  467/    C6D1 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  467/    C6D4 :                                                     
(1)  468/    C6D4 :                     
(1)  469/    C6D4 :                     	;0x5D - EOR ABSX
(1)  470/    C6D4 :                     	EOR_ABSX:
(1)  471/    C6D4 : (MACRO)             		OP_MACRO 93, "EOR", "ABSX", "EOR_ABSX"
(1)  471/    C6D4 :                             ;TODO
(1)  472/    C6D4 : (MACRO)             		NEXT_MACRO
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 142 - 1/5/2022 12:19:0


(1)  472/    C6D4 :                                             
(1)  472/    C6D4 :  (MACRO-2)                  halt
(1)  472/    C6D4 : 00                          BRK
(1)  472/    C6D5 : 00                          BRK
(1)  472/    C6D6 :                             
(1)  472/    C6D6 :                             ;Method 1 - 60 cycles
(1)  472/    C6D6 :                             ;Jump table must be page aligned!!!
(1)  472/    C6D6 :                             ;LDA (emu_PC,X)                 ;6
(1)  472/    C6D6 :                             ;ASL                                    ;2
(1)  472/    C6D6 :                             ;STA emu_ptr,X                  ;4
(1)  472/    C6D6 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  472/    C6D6 :                             ;ADC #0                                 ;2
(1)  472/    C6D6 :                             ;STA emu_ptr+1,X                ;4
(1)  472/    C6D6 :                             ;LDA (emu_ptr,X)                ;6
(1)  472/    C6D6 :                             ;STA emu_ptr2,X                 ;4
(1)  472/    C6D6 :                             ;INC emu_ptr,X                  ;6
(1)  472/    C6D6 :                             ;BCC .skip                              ;2
(1)  472/    C6D6 :                             ;       INC emu_ptr+1,X         ;6
(1)  472/    C6D6 :                             ;.skip:
(1)  472/    C6D6 :                             ;LDA (emu_ptr,X)                ;6
(1)  472/    C6D6 :                             ;STA emu_ptr2+1,X               ;4
(1)  472/    C6D6 :                             ;JMP (emu_ptr2,X)               ;6
(1)  472/    C6D6 :                             
(1)  472/    C6D6 :                             ;Method 2 - 46 cycles
(1)  472/    C6D6 :                             ;Jump table must be page aligned!!!
(1)  472/    C6D6 :                             ;LDA (emu_PC,X)                 ;6
(1)  472/    C6D6 :                             ;STZ emu_ptr+1,X                ;4
(1)  472/    C6D6 :                             ;ASL                                    ;2
(1)  472/    C6D6 :                             ;ROL emu_ptr+1,X                ;6
(1)  472/    C6D6 :                             ;ASL                                    ;2
(1)  472/    C6D6 :                             ;ROL emu_ptr+1,X                ;6
(1)  472/    C6D6 :                             ;STA emu_ptr,X                  ;4                              
(1)  472/    C6D6 :                             ;LDA emu_ptr+1,X                ;4
(1)  472/    C6D6 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  472/    C6D6 :                             ;STA emu_ptr+1,X                ;4
(1)  472/    C6D6 :                             ;JMP (emu_ptr2,X)               ;6
(1)  472/    C6D6 :                             
(1)  472/    C6D6 :                             ;Method 3 - 30 cycles
(1)  472/    C6D6 :                             ;TXA                                                    ;2
(1)  472/    C6D6 :                             ;TAY                                                    ;2
(1)  472/    C6D6 :                             ;LDA (emu_PC,X)                                 ;6
(1)  472/    C6D6 :                             ;ASL                                                    ;2
(1)  472/    C6D6 :                             ;BCS upper                                              ;2
(1)  472/    C6D6 :                             ;lower:
(1)  472/    C6D6 :                             ;       ASL                                                     ;2
(1)  472/    C6D6 :                             ;       TAX                                                     ;2
(1)  472/    C6D6 :                             ;       BCS upper_lower                         ;2
(1)  472/    C6D6 :                             ;       lower_lower:
(1)  472/    C6D6 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  472/    C6D6 :                             ;       upper_lower:
(1)  472/    C6D6 :                             ;               JMP (JUMP_TABLE2,X)
(1)  472/    C6D6 :                             ;upper:
(1)  472/    C6D6 :                             ;       ASL
(1)  472/    C6D6 :                             ;       TAX
(1)  472/    C6D6 :                             ;       BCS upper_upper
(1)  472/    C6D6 :                             ;       lower_upper:
(1)  472/    C6D6 :                             ;               JMP (JUMP_TABLE3,X)
(1)  472/    C6D6 :                             ;       upper_upper:
(1)  472/    C6D6 :                             ;               JMP (JUMP_TABLE4,X)
(1)  472/    C6D6 :                             ;After jump:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 143 - 1/5/2022 12:19:0


(1)  472/    C6D6 :                             ;TYA                                                    ;2
(1)  472/    C6D6 :                             ;TAX                                                    ;2
(1)  472/    C6D6 :                             
(1)  472/    C6D6 :                             ;Method 4 - 28 cycles
(1)  472/    C6D6 :                             ;LDA (emu_PC,X)                 ;6
(1)  472/    C6D6 :                             ;TAY                                    ;2
(1)  472/    C6D6 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  472/    C6D6 :                             ;PHA                                    ;3
(1)  472/    C6D6 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  472/    C6D6 :                             ;PHA                                    ;3
(1)  472/    C6D6 :                             ;RTS                                    ;6
(1)  472/    C6D6 :                             
(1)  472/    C6D6 :                             ;Method 5 - 30 cycles
(1)  472/    C6D6 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  472/    C6D8 : A8                          TAY                                             ;2
(1)  472/    C6D9 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  472/    C6DC : 95 0A                       STA emu_ptr,X                   ;4
(1)  472/    C6DE : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  472/    C6E1 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  472/    C6E3 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  472/    C6E6 :                                                     
(1)  473/    C6E6 :                     
(1)  474/    C6E6 :                     	;0x5E - LSR ABSX
(1)  475/    C6E6 :                     	LSR_ABSX:
(1)  476/    C6E6 : (MACRO)             		OP_MACRO 94, "LSR", "ABSX", "LSR_ABSX"
(1)  476/    C6E6 :                             ;TODO
(1)  477/    C6E6 : (MACRO)             		NEXT_MACRO
(1)  477/    C6E6 :                                             
(1)  477/    C6E6 :  (MACRO-2)                  halt
(1)  477/    C6E6 : 00                          BRK
(1)  477/    C6E7 : 00                          BRK
(1)  477/    C6E8 :                             
(1)  477/    C6E8 :                             ;Method 1 - 60 cycles
(1)  477/    C6E8 :                             ;Jump table must be page aligned!!!
(1)  477/    C6E8 :                             ;LDA (emu_PC,X)                 ;6
(1)  477/    C6E8 :                             ;ASL                                    ;2
(1)  477/    C6E8 :                             ;STA emu_ptr,X                  ;4
(1)  477/    C6E8 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  477/    C6E8 :                             ;ADC #0                                 ;2
(1)  477/    C6E8 :                             ;STA emu_ptr+1,X                ;4
(1)  477/    C6E8 :                             ;LDA (emu_ptr,X)                ;6
(1)  477/    C6E8 :                             ;STA emu_ptr2,X                 ;4
(1)  477/    C6E8 :                             ;INC emu_ptr,X                  ;6
(1)  477/    C6E8 :                             ;BCC .skip                              ;2
(1)  477/    C6E8 :                             ;       INC emu_ptr+1,X         ;6
(1)  477/    C6E8 :                             ;.skip:
(1)  477/    C6E8 :                             ;LDA (emu_ptr,X)                ;6
(1)  477/    C6E8 :                             ;STA emu_ptr2+1,X               ;4
(1)  477/    C6E8 :                             ;JMP (emu_ptr2,X)               ;6
(1)  477/    C6E8 :                             
(1)  477/    C6E8 :                             ;Method 2 - 46 cycles
(1)  477/    C6E8 :                             ;Jump table must be page aligned!!!
(1)  477/    C6E8 :                             ;LDA (emu_PC,X)                 ;6
(1)  477/    C6E8 :                             ;STZ emu_ptr+1,X                ;4
(1)  477/    C6E8 :                             ;ASL                                    ;2
(1)  477/    C6E8 :                             ;ROL emu_ptr+1,X                ;6
(1)  477/    C6E8 :                             ;ASL                                    ;2
(1)  477/    C6E8 :                             ;ROL emu_ptr+1,X                ;6
(1)  477/    C6E8 :                             ;STA emu_ptr,X                  ;4                              
(1)  477/    C6E8 :                             ;LDA emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 144 - 1/5/2022 12:19:0


(1)  477/    C6E8 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  477/    C6E8 :                             ;STA emu_ptr+1,X                ;4
(1)  477/    C6E8 :                             ;JMP (emu_ptr2,X)               ;6
(1)  477/    C6E8 :                             
(1)  477/    C6E8 :                             ;Method 3 - 30 cycles
(1)  477/    C6E8 :                             ;TXA                                                    ;2
(1)  477/    C6E8 :                             ;TAY                                                    ;2
(1)  477/    C6E8 :                             ;LDA (emu_PC,X)                                 ;6
(1)  477/    C6E8 :                             ;ASL                                                    ;2
(1)  477/    C6E8 :                             ;BCS upper                                              ;2
(1)  477/    C6E8 :                             ;lower:
(1)  477/    C6E8 :                             ;       ASL                                                     ;2
(1)  477/    C6E8 :                             ;       TAX                                                     ;2
(1)  477/    C6E8 :                             ;       BCS upper_lower                         ;2
(1)  477/    C6E8 :                             ;       lower_lower:
(1)  477/    C6E8 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  477/    C6E8 :                             ;       upper_lower:
(1)  477/    C6E8 :                             ;               JMP (JUMP_TABLE2,X)
(1)  477/    C6E8 :                             ;upper:
(1)  477/    C6E8 :                             ;       ASL
(1)  477/    C6E8 :                             ;       TAX
(1)  477/    C6E8 :                             ;       BCS upper_upper
(1)  477/    C6E8 :                             ;       lower_upper:
(1)  477/    C6E8 :                             ;               JMP (JUMP_TABLE3,X)
(1)  477/    C6E8 :                             ;       upper_upper:
(1)  477/    C6E8 :                             ;               JMP (JUMP_TABLE4,X)
(1)  477/    C6E8 :                             ;After jump:
(1)  477/    C6E8 :                             ;TYA                                                    ;2
(1)  477/    C6E8 :                             ;TAX                                                    ;2
(1)  477/    C6E8 :                             
(1)  477/    C6E8 :                             ;Method 4 - 28 cycles
(1)  477/    C6E8 :                             ;LDA (emu_PC,X)                 ;6
(1)  477/    C6E8 :                             ;TAY                                    ;2
(1)  477/    C6E8 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  477/    C6E8 :                             ;PHA                                    ;3
(1)  477/    C6E8 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  477/    C6E8 :                             ;PHA                                    ;3
(1)  477/    C6E8 :                             ;RTS                                    ;6
(1)  477/    C6E8 :                             
(1)  477/    C6E8 :                             ;Method 5 - 30 cycles
(1)  477/    C6E8 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  477/    C6EA : A8                          TAY                                             ;2
(1)  477/    C6EB : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  477/    C6EE : 95 0A                       STA emu_ptr,X                   ;4
(1)  477/    C6F0 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  477/    C6F3 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  477/    C6F5 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  477/    C6F8 :                                                     
(1)  478/    C6F8 :                     
(1)  479/    C6F8 :                     	;0x5F - NOP
(1)  480/    C6F8 :                     	NOP_0x5F:
(1)  481/    C6F8 : (MACRO)             		OP_MACRO 95, "NOP", "IMP", "NOP_0x5F"
(1)  481/    C6F8 :                             ;TODO
(1)  482/    C6F8 : (MACRO)             		NEXT_MACRO
(1)  482/    C6F8 :                                             
(1)  482/    C6F8 :  (MACRO-2)                  halt
(1)  482/    C6F8 : 00                          BRK
(1)  482/    C6F9 : 00                          BRK
(1)  482/    C6FA :                             
(1)  482/    C6FA :                             ;Method 1 - 60 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 145 - 1/5/2022 12:19:0


(1)  482/    C6FA :                             ;Jump table must be page aligned!!!
(1)  482/    C6FA :                             ;LDA (emu_PC,X)                 ;6
(1)  482/    C6FA :                             ;ASL                                    ;2
(1)  482/    C6FA :                             ;STA emu_ptr,X                  ;4
(1)  482/    C6FA :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  482/    C6FA :                             ;ADC #0                                 ;2
(1)  482/    C6FA :                             ;STA emu_ptr+1,X                ;4
(1)  482/    C6FA :                             ;LDA (emu_ptr,X)                ;6
(1)  482/    C6FA :                             ;STA emu_ptr2,X                 ;4
(1)  482/    C6FA :                             ;INC emu_ptr,X                  ;6
(1)  482/    C6FA :                             ;BCC .skip                              ;2
(1)  482/    C6FA :                             ;       INC emu_ptr+1,X         ;6
(1)  482/    C6FA :                             ;.skip:
(1)  482/    C6FA :                             ;LDA (emu_ptr,X)                ;6
(1)  482/    C6FA :                             ;STA emu_ptr2+1,X               ;4
(1)  482/    C6FA :                             ;JMP (emu_ptr2,X)               ;6
(1)  482/    C6FA :                             
(1)  482/    C6FA :                             ;Method 2 - 46 cycles
(1)  482/    C6FA :                             ;Jump table must be page aligned!!!
(1)  482/    C6FA :                             ;LDA (emu_PC,X)                 ;6
(1)  482/    C6FA :                             ;STZ emu_ptr+1,X                ;4
(1)  482/    C6FA :                             ;ASL                                    ;2
(1)  482/    C6FA :                             ;ROL emu_ptr+1,X                ;6
(1)  482/    C6FA :                             ;ASL                                    ;2
(1)  482/    C6FA :                             ;ROL emu_ptr+1,X                ;6
(1)  482/    C6FA :                             ;STA emu_ptr,X                  ;4                              
(1)  482/    C6FA :                             ;LDA emu_ptr+1,X                ;4
(1)  482/    C6FA :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  482/    C6FA :                             ;STA emu_ptr+1,X                ;4
(1)  482/    C6FA :                             ;JMP (emu_ptr2,X)               ;6
(1)  482/    C6FA :                             
(1)  482/    C6FA :                             ;Method 3 - 30 cycles
(1)  482/    C6FA :                             ;TXA                                                    ;2
(1)  482/    C6FA :                             ;TAY                                                    ;2
(1)  482/    C6FA :                             ;LDA (emu_PC,X)                                 ;6
(1)  482/    C6FA :                             ;ASL                                                    ;2
(1)  482/    C6FA :                             ;BCS upper                                              ;2
(1)  482/    C6FA :                             ;lower:
(1)  482/    C6FA :                             ;       ASL                                                     ;2
(1)  482/    C6FA :                             ;       TAX                                                     ;2
(1)  482/    C6FA :                             ;       BCS upper_lower                         ;2
(1)  482/    C6FA :                             ;       lower_lower:
(1)  482/    C6FA :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  482/    C6FA :                             ;       upper_lower:
(1)  482/    C6FA :                             ;               JMP (JUMP_TABLE2,X)
(1)  482/    C6FA :                             ;upper:
(1)  482/    C6FA :                             ;       ASL
(1)  482/    C6FA :                             ;       TAX
(1)  482/    C6FA :                             ;       BCS upper_upper
(1)  482/    C6FA :                             ;       lower_upper:
(1)  482/    C6FA :                             ;               JMP (JUMP_TABLE3,X)
(1)  482/    C6FA :                             ;       upper_upper:
(1)  482/    C6FA :                             ;               JMP (JUMP_TABLE4,X)
(1)  482/    C6FA :                             ;After jump:
(1)  482/    C6FA :                             ;TYA                                                    ;2
(1)  482/    C6FA :                             ;TAX                                                    ;2
(1)  482/    C6FA :                             
(1)  482/    C6FA :                             ;Method 4 - 28 cycles
(1)  482/    C6FA :                             ;LDA (emu_PC,X)                 ;6
(1)  482/    C6FA :                             ;TAY                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 146 - 1/5/2022 12:19:0


(1)  482/    C6FA :                             ;LDA JUMP_TABLE,Y               ;4
(1)  482/    C6FA :                             ;PHA                                    ;3
(1)  482/    C6FA :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  482/    C6FA :                             ;PHA                                    ;3
(1)  482/    C6FA :                             ;RTS                                    ;6
(1)  482/    C6FA :                             
(1)  482/    C6FA :                             ;Method 5 - 30 cycles
(1)  482/    C6FA : A1 02                       LDA (emu_PC,X)                  ;6
(1)  482/    C6FC : A8                          TAY                                             ;2
(1)  482/    C6FD : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  482/    C700 : 95 0A                       STA emu_ptr,X                   ;4
(1)  482/    C702 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  482/    C705 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  482/    C707 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  482/    C70A :                                                     
(1)  483/    C70A :                     
(1)  484/    C70A :                     	;0x60 - RTS IMP
(1)  485/    C70A :                     	RTS_IMP:
(1)  486/    C70A : (MACRO)             		OP_MACRO 96, "RTS", "IMP", "RTS_IMP"
(1)  486/    C70A :                             ;TODO
(1)  487/    C70A : (MACRO)             		NEXT_MACRO
(1)  487/    C70A :                                             
(1)  487/    C70A :  (MACRO-2)                  halt
(1)  487/    C70A : 00                          BRK
(1)  487/    C70B : 00                          BRK
(1)  487/    C70C :                             
(1)  487/    C70C :                             ;Method 1 - 60 cycles
(1)  487/    C70C :                             ;Jump table must be page aligned!!!
(1)  487/    C70C :                             ;LDA (emu_PC,X)                 ;6
(1)  487/    C70C :                             ;ASL                                    ;2
(1)  487/    C70C :                             ;STA emu_ptr,X                  ;4
(1)  487/    C70C :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  487/    C70C :                             ;ADC #0                                 ;2
(1)  487/    C70C :                             ;STA emu_ptr+1,X                ;4
(1)  487/    C70C :                             ;LDA (emu_ptr,X)                ;6
(1)  487/    C70C :                             ;STA emu_ptr2,X                 ;4
(1)  487/    C70C :                             ;INC emu_ptr,X                  ;6
(1)  487/    C70C :                             ;BCC .skip                              ;2
(1)  487/    C70C :                             ;       INC emu_ptr+1,X         ;6
(1)  487/    C70C :                             ;.skip:
(1)  487/    C70C :                             ;LDA (emu_ptr,X)                ;6
(1)  487/    C70C :                             ;STA emu_ptr2+1,X               ;4
(1)  487/    C70C :                             ;JMP (emu_ptr2,X)               ;6
(1)  487/    C70C :                             
(1)  487/    C70C :                             ;Method 2 - 46 cycles
(1)  487/    C70C :                             ;Jump table must be page aligned!!!
(1)  487/    C70C :                             ;LDA (emu_PC,X)                 ;6
(1)  487/    C70C :                             ;STZ emu_ptr+1,X                ;4
(1)  487/    C70C :                             ;ASL                                    ;2
(1)  487/    C70C :                             ;ROL emu_ptr+1,X                ;6
(1)  487/    C70C :                             ;ASL                                    ;2
(1)  487/    C70C :                             ;ROL emu_ptr+1,X                ;6
(1)  487/    C70C :                             ;STA emu_ptr,X                  ;4                              
(1)  487/    C70C :                             ;LDA emu_ptr+1,X                ;4
(1)  487/    C70C :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  487/    C70C :                             ;STA emu_ptr+1,X                ;4
(1)  487/    C70C :                             ;JMP (emu_ptr2,X)               ;6
(1)  487/    C70C :                             
(1)  487/    C70C :                             ;Method 3 - 30 cycles
(1)  487/    C70C :                             ;TXA                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 147 - 1/5/2022 12:19:0


(1)  487/    C70C :                             ;TAY                                                    ;2
(1)  487/    C70C :                             ;LDA (emu_PC,X)                                 ;6
(1)  487/    C70C :                             ;ASL                                                    ;2
(1)  487/    C70C :                             ;BCS upper                                              ;2
(1)  487/    C70C :                             ;lower:
(1)  487/    C70C :                             ;       ASL                                                     ;2
(1)  487/    C70C :                             ;       TAX                                                     ;2
(1)  487/    C70C :                             ;       BCS upper_lower                         ;2
(1)  487/    C70C :                             ;       lower_lower:
(1)  487/    C70C :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  487/    C70C :                             ;       upper_lower:
(1)  487/    C70C :                             ;               JMP (JUMP_TABLE2,X)
(1)  487/    C70C :                             ;upper:
(1)  487/    C70C :                             ;       ASL
(1)  487/    C70C :                             ;       TAX
(1)  487/    C70C :                             ;       BCS upper_upper
(1)  487/    C70C :                             ;       lower_upper:
(1)  487/    C70C :                             ;               JMP (JUMP_TABLE3,X)
(1)  487/    C70C :                             ;       upper_upper:
(1)  487/    C70C :                             ;               JMP (JUMP_TABLE4,X)
(1)  487/    C70C :                             ;After jump:
(1)  487/    C70C :                             ;TYA                                                    ;2
(1)  487/    C70C :                             ;TAX                                                    ;2
(1)  487/    C70C :                             
(1)  487/    C70C :                             ;Method 4 - 28 cycles
(1)  487/    C70C :                             ;LDA (emu_PC,X)                 ;6
(1)  487/    C70C :                             ;TAY                                    ;2
(1)  487/    C70C :                             ;LDA JUMP_TABLE,Y               ;4
(1)  487/    C70C :                             ;PHA                                    ;3
(1)  487/    C70C :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  487/    C70C :                             ;PHA                                    ;3
(1)  487/    C70C :                             ;RTS                                    ;6
(1)  487/    C70C :                             
(1)  487/    C70C :                             ;Method 5 - 30 cycles
(1)  487/    C70C : A1 02                       LDA (emu_PC,X)                  ;6
(1)  487/    C70E : A8                          TAY                                             ;2
(1)  487/    C70F : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  487/    C712 : 95 0A                       STA emu_ptr,X                   ;4
(1)  487/    C714 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  487/    C717 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  487/    C719 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  487/    C71C :                                                     
(1)  488/    C71C :                     
(1)  489/    C71C :                     	;0x61 - ADC IX
(1)  490/    C71C :                     	ADC_IX:
(1)  491/    C71C : (MACRO)             		OP_MACRO 97, "ADC", "IX", "ADC_IX"
(1)  491/    C71C :                             ;TODO
(1)  492/    C71C : (MACRO)             		NEXT_MACRO
(1)  492/    C71C :                                             
(1)  492/    C71C :  (MACRO-2)                  halt
(1)  492/    C71C : 00                          BRK
(1)  492/    C71D : 00                          BRK
(1)  492/    C71E :                             
(1)  492/    C71E :                             ;Method 1 - 60 cycles
(1)  492/    C71E :                             ;Jump table must be page aligned!!!
(1)  492/    C71E :                             ;LDA (emu_PC,X)                 ;6
(1)  492/    C71E :                             ;ASL                                    ;2
(1)  492/    C71E :                             ;STA emu_ptr,X                  ;4
(1)  492/    C71E :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  492/    C71E :                             ;ADC #0                                 ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 148 - 1/5/2022 12:19:0


(1)  492/    C71E :                             ;STA emu_ptr+1,X                ;4
(1)  492/    C71E :                             ;LDA (emu_ptr,X)                ;6
(1)  492/    C71E :                             ;STA emu_ptr2,X                 ;4
(1)  492/    C71E :                             ;INC emu_ptr,X                  ;6
(1)  492/    C71E :                             ;BCC .skip                              ;2
(1)  492/    C71E :                             ;       INC emu_ptr+1,X         ;6
(1)  492/    C71E :                             ;.skip:
(1)  492/    C71E :                             ;LDA (emu_ptr,X)                ;6
(1)  492/    C71E :                             ;STA emu_ptr2+1,X               ;4
(1)  492/    C71E :                             ;JMP (emu_ptr2,X)               ;6
(1)  492/    C71E :                             
(1)  492/    C71E :                             ;Method 2 - 46 cycles
(1)  492/    C71E :                             ;Jump table must be page aligned!!!
(1)  492/    C71E :                             ;LDA (emu_PC,X)                 ;6
(1)  492/    C71E :                             ;STZ emu_ptr+1,X                ;4
(1)  492/    C71E :                             ;ASL                                    ;2
(1)  492/    C71E :                             ;ROL emu_ptr+1,X                ;6
(1)  492/    C71E :                             ;ASL                                    ;2
(1)  492/    C71E :                             ;ROL emu_ptr+1,X                ;6
(1)  492/    C71E :                             ;STA emu_ptr,X                  ;4                              
(1)  492/    C71E :                             ;LDA emu_ptr+1,X                ;4
(1)  492/    C71E :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  492/    C71E :                             ;STA emu_ptr+1,X                ;4
(1)  492/    C71E :                             ;JMP (emu_ptr2,X)               ;6
(1)  492/    C71E :                             
(1)  492/    C71E :                             ;Method 3 - 30 cycles
(1)  492/    C71E :                             ;TXA                                                    ;2
(1)  492/    C71E :                             ;TAY                                                    ;2
(1)  492/    C71E :                             ;LDA (emu_PC,X)                                 ;6
(1)  492/    C71E :                             ;ASL                                                    ;2
(1)  492/    C71E :                             ;BCS upper                                              ;2
(1)  492/    C71E :                             ;lower:
(1)  492/    C71E :                             ;       ASL                                                     ;2
(1)  492/    C71E :                             ;       TAX                                                     ;2
(1)  492/    C71E :                             ;       BCS upper_lower                         ;2
(1)  492/    C71E :                             ;       lower_lower:
(1)  492/    C71E :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  492/    C71E :                             ;       upper_lower:
(1)  492/    C71E :                             ;               JMP (JUMP_TABLE2,X)
(1)  492/    C71E :                             ;upper:
(1)  492/    C71E :                             ;       ASL
(1)  492/    C71E :                             ;       TAX
(1)  492/    C71E :                             ;       BCS upper_upper
(1)  492/    C71E :                             ;       lower_upper:
(1)  492/    C71E :                             ;               JMP (JUMP_TABLE3,X)
(1)  492/    C71E :                             ;       upper_upper:
(1)  492/    C71E :                             ;               JMP (JUMP_TABLE4,X)
(1)  492/    C71E :                             ;After jump:
(1)  492/    C71E :                             ;TYA                                                    ;2
(1)  492/    C71E :                             ;TAX                                                    ;2
(1)  492/    C71E :                             
(1)  492/    C71E :                             ;Method 4 - 28 cycles
(1)  492/    C71E :                             ;LDA (emu_PC,X)                 ;6
(1)  492/    C71E :                             ;TAY                                    ;2
(1)  492/    C71E :                             ;LDA JUMP_TABLE,Y               ;4
(1)  492/    C71E :                             ;PHA                                    ;3
(1)  492/    C71E :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  492/    C71E :                             ;PHA                                    ;3
(1)  492/    C71E :                             ;RTS                                    ;6
(1)  492/    C71E :                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 149 - 1/5/2022 12:19:0


(1)  492/    C71E :                             ;Method 5 - 30 cycles
(1)  492/    C71E : A1 02                       LDA (emu_PC,X)                  ;6
(1)  492/    C720 : A8                          TAY                                             ;2
(1)  492/    C721 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  492/    C724 : 95 0A                       STA emu_ptr,X                   ;4
(1)  492/    C726 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  492/    C729 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  492/    C72B : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  492/    C72E :                                                     
(1)  493/    C72E :                     
(1)  494/    C72E :                     	;0x62 - NOP
(1)  495/    C72E :                     	NOP_0x62:
(1)  496/    C72E : (MACRO)             		OP_MACRO 98, "NOP", "IMP", "NOP_0x62"
(1)  496/    C72E :                             ;TODO
(1)  497/    C72E : (MACRO)             		NEXT_MACRO
(1)  497/    C72E :                                             
(1)  497/    C72E :  (MACRO-2)                  halt
(1)  497/    C72E : 00                          BRK
(1)  497/    C72F : 00                          BRK
(1)  497/    C730 :                             
(1)  497/    C730 :                             ;Method 1 - 60 cycles
(1)  497/    C730 :                             ;Jump table must be page aligned!!!
(1)  497/    C730 :                             ;LDA (emu_PC,X)                 ;6
(1)  497/    C730 :                             ;ASL                                    ;2
(1)  497/    C730 :                             ;STA emu_ptr,X                  ;4
(1)  497/    C730 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  497/    C730 :                             ;ADC #0                                 ;2
(1)  497/    C730 :                             ;STA emu_ptr+1,X                ;4
(1)  497/    C730 :                             ;LDA (emu_ptr,X)                ;6
(1)  497/    C730 :                             ;STA emu_ptr2,X                 ;4
(1)  497/    C730 :                             ;INC emu_ptr,X                  ;6
(1)  497/    C730 :                             ;BCC .skip                              ;2
(1)  497/    C730 :                             ;       INC emu_ptr+1,X         ;6
(1)  497/    C730 :                             ;.skip:
(1)  497/    C730 :                             ;LDA (emu_ptr,X)                ;6
(1)  497/    C730 :                             ;STA emu_ptr2+1,X               ;4
(1)  497/    C730 :                             ;JMP (emu_ptr2,X)               ;6
(1)  497/    C730 :                             
(1)  497/    C730 :                             ;Method 2 - 46 cycles
(1)  497/    C730 :                             ;Jump table must be page aligned!!!
(1)  497/    C730 :                             ;LDA (emu_PC,X)                 ;6
(1)  497/    C730 :                             ;STZ emu_ptr+1,X                ;4
(1)  497/    C730 :                             ;ASL                                    ;2
(1)  497/    C730 :                             ;ROL emu_ptr+1,X                ;6
(1)  497/    C730 :                             ;ASL                                    ;2
(1)  497/    C730 :                             ;ROL emu_ptr+1,X                ;6
(1)  497/    C730 :                             ;STA emu_ptr,X                  ;4                              
(1)  497/    C730 :                             ;LDA emu_ptr+1,X                ;4
(1)  497/    C730 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  497/    C730 :                             ;STA emu_ptr+1,X                ;4
(1)  497/    C730 :                             ;JMP (emu_ptr2,X)               ;6
(1)  497/    C730 :                             
(1)  497/    C730 :                             ;Method 3 - 30 cycles
(1)  497/    C730 :                             ;TXA                                                    ;2
(1)  497/    C730 :                             ;TAY                                                    ;2
(1)  497/    C730 :                             ;LDA (emu_PC,X)                                 ;6
(1)  497/    C730 :                             ;ASL                                                    ;2
(1)  497/    C730 :                             ;BCS upper                                              ;2
(1)  497/    C730 :                             ;lower:
(1)  497/    C730 :                             ;       ASL                                                     ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 150 - 1/5/2022 12:19:0


(1)  497/    C730 :                             ;       TAX                                                     ;2
(1)  497/    C730 :                             ;       BCS upper_lower                         ;2
(1)  497/    C730 :                             ;       lower_lower:
(1)  497/    C730 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  497/    C730 :                             ;       upper_lower:
(1)  497/    C730 :                             ;               JMP (JUMP_TABLE2,X)
(1)  497/    C730 :                             ;upper:
(1)  497/    C730 :                             ;       ASL
(1)  497/    C730 :                             ;       TAX
(1)  497/    C730 :                             ;       BCS upper_upper
(1)  497/    C730 :                             ;       lower_upper:
(1)  497/    C730 :                             ;               JMP (JUMP_TABLE3,X)
(1)  497/    C730 :                             ;       upper_upper:
(1)  497/    C730 :                             ;               JMP (JUMP_TABLE4,X)
(1)  497/    C730 :                             ;After jump:
(1)  497/    C730 :                             ;TYA                                                    ;2
(1)  497/    C730 :                             ;TAX                                                    ;2
(1)  497/    C730 :                             
(1)  497/    C730 :                             ;Method 4 - 28 cycles
(1)  497/    C730 :                             ;LDA (emu_PC,X)                 ;6
(1)  497/    C730 :                             ;TAY                                    ;2
(1)  497/    C730 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  497/    C730 :                             ;PHA                                    ;3
(1)  497/    C730 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  497/    C730 :                             ;PHA                                    ;3
(1)  497/    C730 :                             ;RTS                                    ;6
(1)  497/    C730 :                             
(1)  497/    C730 :                             ;Method 5 - 30 cycles
(1)  497/    C730 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  497/    C732 : A8                          TAY                                             ;2
(1)  497/    C733 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  497/    C736 : 95 0A                       STA emu_ptr,X                   ;4
(1)  497/    C738 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  497/    C73B : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  497/    C73D : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  497/    C740 :                                                     
(1)  498/    C740 :                     
(1)  499/    C740 :                     	;0x63 - NOP
(1)  500/    C740 :                     	NOP_0x63:
(1)  501/    C740 : (MACRO)             		OP_MACRO 99, "NOP", "IMP", "NOP_0x63"
(1)  501/    C740 :                             ;TODO
(1)  502/    C740 : (MACRO)             		NEXT_MACRO
(1)  502/    C740 :                                             
(1)  502/    C740 :  (MACRO-2)                  halt
(1)  502/    C740 : 00                          BRK
(1)  502/    C741 : 00                          BRK
(1)  502/    C742 :                             
(1)  502/    C742 :                             ;Method 1 - 60 cycles
(1)  502/    C742 :                             ;Jump table must be page aligned!!!
(1)  502/    C742 :                             ;LDA (emu_PC,X)                 ;6
(1)  502/    C742 :                             ;ASL                                    ;2
(1)  502/    C742 :                             ;STA emu_ptr,X                  ;4
(1)  502/    C742 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  502/    C742 :                             ;ADC #0                                 ;2
(1)  502/    C742 :                             ;STA emu_ptr+1,X                ;4
(1)  502/    C742 :                             ;LDA (emu_ptr,X)                ;6
(1)  502/    C742 :                             ;STA emu_ptr2,X                 ;4
(1)  502/    C742 :                             ;INC emu_ptr,X                  ;6
(1)  502/    C742 :                             ;BCC .skip                              ;2
(1)  502/    C742 :                             ;       INC emu_ptr+1,X         ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 151 - 1/5/2022 12:19:0


(1)  502/    C742 :                             ;.skip:
(1)  502/    C742 :                             ;LDA (emu_ptr,X)                ;6
(1)  502/    C742 :                             ;STA emu_ptr2+1,X               ;4
(1)  502/    C742 :                             ;JMP (emu_ptr2,X)               ;6
(1)  502/    C742 :                             
(1)  502/    C742 :                             ;Method 2 - 46 cycles
(1)  502/    C742 :                             ;Jump table must be page aligned!!!
(1)  502/    C742 :                             ;LDA (emu_PC,X)                 ;6
(1)  502/    C742 :                             ;STZ emu_ptr+1,X                ;4
(1)  502/    C742 :                             ;ASL                                    ;2
(1)  502/    C742 :                             ;ROL emu_ptr+1,X                ;6
(1)  502/    C742 :                             ;ASL                                    ;2
(1)  502/    C742 :                             ;ROL emu_ptr+1,X                ;6
(1)  502/    C742 :                             ;STA emu_ptr,X                  ;4                              
(1)  502/    C742 :                             ;LDA emu_ptr+1,X                ;4
(1)  502/    C742 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  502/    C742 :                             ;STA emu_ptr+1,X                ;4
(1)  502/    C742 :                             ;JMP (emu_ptr2,X)               ;6
(1)  502/    C742 :                             
(1)  502/    C742 :                             ;Method 3 - 30 cycles
(1)  502/    C742 :                             ;TXA                                                    ;2
(1)  502/    C742 :                             ;TAY                                                    ;2
(1)  502/    C742 :                             ;LDA (emu_PC,X)                                 ;6
(1)  502/    C742 :                             ;ASL                                                    ;2
(1)  502/    C742 :                             ;BCS upper                                              ;2
(1)  502/    C742 :                             ;lower:
(1)  502/    C742 :                             ;       ASL                                                     ;2
(1)  502/    C742 :                             ;       TAX                                                     ;2
(1)  502/    C742 :                             ;       BCS upper_lower                         ;2
(1)  502/    C742 :                             ;       lower_lower:
(1)  502/    C742 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  502/    C742 :                             ;       upper_lower:
(1)  502/    C742 :                             ;               JMP (JUMP_TABLE2,X)
(1)  502/    C742 :                             ;upper:
(1)  502/    C742 :                             ;       ASL
(1)  502/    C742 :                             ;       TAX
(1)  502/    C742 :                             ;       BCS upper_upper
(1)  502/    C742 :                             ;       lower_upper:
(1)  502/    C742 :                             ;               JMP (JUMP_TABLE3,X)
(1)  502/    C742 :                             ;       upper_upper:
(1)  502/    C742 :                             ;               JMP (JUMP_TABLE4,X)
(1)  502/    C742 :                             ;After jump:
(1)  502/    C742 :                             ;TYA                                                    ;2
(1)  502/    C742 :                             ;TAX                                                    ;2
(1)  502/    C742 :                             
(1)  502/    C742 :                             ;Method 4 - 28 cycles
(1)  502/    C742 :                             ;LDA (emu_PC,X)                 ;6
(1)  502/    C742 :                             ;TAY                                    ;2
(1)  502/    C742 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  502/    C742 :                             ;PHA                                    ;3
(1)  502/    C742 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  502/    C742 :                             ;PHA                                    ;3
(1)  502/    C742 :                             ;RTS                                    ;6
(1)  502/    C742 :                             
(1)  502/    C742 :                             ;Method 5 - 30 cycles
(1)  502/    C742 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  502/    C744 : A8                          TAY                                             ;2
(1)  502/    C745 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  502/    C748 : 95 0A                       STA emu_ptr,X                   ;4
(1)  502/    C74A : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 152 - 1/5/2022 12:19:0


(1)  502/    C74D : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  502/    C74F : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  502/    C752 :                                                     
(1)  503/    C752 :                     
(1)  504/    C752 :                     	;0x64 - NOP
(1)  505/    C752 :                     	NOP_0x64:
(1)  506/    C752 : (MACRO)             		OP_MACRO 100, "NOP", "IMP", "NOP_0x64"
(1)  506/    C752 :                             ;TODO
(1)  507/    C752 : (MACRO)             		NEXT_MACRO
(1)  507/    C752 :                                             
(1)  507/    C752 :  (MACRO-2)                  halt
(1)  507/    C752 : 00                          BRK
(1)  507/    C753 : 00                          BRK
(1)  507/    C754 :                             
(1)  507/    C754 :                             ;Method 1 - 60 cycles
(1)  507/    C754 :                             ;Jump table must be page aligned!!!
(1)  507/    C754 :                             ;LDA (emu_PC,X)                 ;6
(1)  507/    C754 :                             ;ASL                                    ;2
(1)  507/    C754 :                             ;STA emu_ptr,X                  ;4
(1)  507/    C754 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  507/    C754 :                             ;ADC #0                                 ;2
(1)  507/    C754 :                             ;STA emu_ptr+1,X                ;4
(1)  507/    C754 :                             ;LDA (emu_ptr,X)                ;6
(1)  507/    C754 :                             ;STA emu_ptr2,X                 ;4
(1)  507/    C754 :                             ;INC emu_ptr,X                  ;6
(1)  507/    C754 :                             ;BCC .skip                              ;2
(1)  507/    C754 :                             ;       INC emu_ptr+1,X         ;6
(1)  507/    C754 :                             ;.skip:
(1)  507/    C754 :                             ;LDA (emu_ptr,X)                ;6
(1)  507/    C754 :                             ;STA emu_ptr2+1,X               ;4
(1)  507/    C754 :                             ;JMP (emu_ptr2,X)               ;6
(1)  507/    C754 :                             
(1)  507/    C754 :                             ;Method 2 - 46 cycles
(1)  507/    C754 :                             ;Jump table must be page aligned!!!
(1)  507/    C754 :                             ;LDA (emu_PC,X)                 ;6
(1)  507/    C754 :                             ;STZ emu_ptr+1,X                ;4
(1)  507/    C754 :                             ;ASL                                    ;2
(1)  507/    C754 :                             ;ROL emu_ptr+1,X                ;6
(1)  507/    C754 :                             ;ASL                                    ;2
(1)  507/    C754 :                             ;ROL emu_ptr+1,X                ;6
(1)  507/    C754 :                             ;STA emu_ptr,X                  ;4                              
(1)  507/    C754 :                             ;LDA emu_ptr+1,X                ;4
(1)  507/    C754 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  507/    C754 :                             ;STA emu_ptr+1,X                ;4
(1)  507/    C754 :                             ;JMP (emu_ptr2,X)               ;6
(1)  507/    C754 :                             
(1)  507/    C754 :                             ;Method 3 - 30 cycles
(1)  507/    C754 :                             ;TXA                                                    ;2
(1)  507/    C754 :                             ;TAY                                                    ;2
(1)  507/    C754 :                             ;LDA (emu_PC,X)                                 ;6
(1)  507/    C754 :                             ;ASL                                                    ;2
(1)  507/    C754 :                             ;BCS upper                                              ;2
(1)  507/    C754 :                             ;lower:
(1)  507/    C754 :                             ;       ASL                                                     ;2
(1)  507/    C754 :                             ;       TAX                                                     ;2
(1)  507/    C754 :                             ;       BCS upper_lower                         ;2
(1)  507/    C754 :                             ;       lower_lower:
(1)  507/    C754 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  507/    C754 :                             ;       upper_lower:
(1)  507/    C754 :                             ;               JMP (JUMP_TABLE2,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 153 - 1/5/2022 12:19:0


(1)  507/    C754 :                             ;upper:
(1)  507/    C754 :                             ;       ASL
(1)  507/    C754 :                             ;       TAX
(1)  507/    C754 :                             ;       BCS upper_upper
(1)  507/    C754 :                             ;       lower_upper:
(1)  507/    C754 :                             ;               JMP (JUMP_TABLE3,X)
(1)  507/    C754 :                             ;       upper_upper:
(1)  507/    C754 :                             ;               JMP (JUMP_TABLE4,X)
(1)  507/    C754 :                             ;After jump:
(1)  507/    C754 :                             ;TYA                                                    ;2
(1)  507/    C754 :                             ;TAX                                                    ;2
(1)  507/    C754 :                             
(1)  507/    C754 :                             ;Method 4 - 28 cycles
(1)  507/    C754 :                             ;LDA (emu_PC,X)                 ;6
(1)  507/    C754 :                             ;TAY                                    ;2
(1)  507/    C754 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  507/    C754 :                             ;PHA                                    ;3
(1)  507/    C754 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  507/    C754 :                             ;PHA                                    ;3
(1)  507/    C754 :                             ;RTS                                    ;6
(1)  507/    C754 :                             
(1)  507/    C754 :                             ;Method 5 - 30 cycles
(1)  507/    C754 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  507/    C756 : A8                          TAY                                             ;2
(1)  507/    C757 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  507/    C75A : 95 0A                       STA emu_ptr,X                   ;4
(1)  507/    C75C : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  507/    C75F : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  507/    C761 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  507/    C764 :                                                     
(1)  508/    C764 :                     
(1)  509/    C764 :                     	;0x65 - ADC ZP
(1)  510/    C764 :                     	ADC_ZP:
(1)  511/    C764 : (MACRO)             		OP_MACRO 101, "ADC", "ZP", "ADC_ZP"
(1)  511/    C764 :                             ;TODO
(1)  512/    C764 : (MACRO)             		NEXT_MACRO
(1)  512/    C764 :                                             
(1)  512/    C764 :  (MACRO-2)                  halt
(1)  512/    C764 : 00                          BRK
(1)  512/    C765 : 00                          BRK
(1)  512/    C766 :                             
(1)  512/    C766 :                             ;Method 1 - 60 cycles
(1)  512/    C766 :                             ;Jump table must be page aligned!!!
(1)  512/    C766 :                             ;LDA (emu_PC,X)                 ;6
(1)  512/    C766 :                             ;ASL                                    ;2
(1)  512/    C766 :                             ;STA emu_ptr,X                  ;4
(1)  512/    C766 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  512/    C766 :                             ;ADC #0                                 ;2
(1)  512/    C766 :                             ;STA emu_ptr+1,X                ;4
(1)  512/    C766 :                             ;LDA (emu_ptr,X)                ;6
(1)  512/    C766 :                             ;STA emu_ptr2,X                 ;4
(1)  512/    C766 :                             ;INC emu_ptr,X                  ;6
(1)  512/    C766 :                             ;BCC .skip                              ;2
(1)  512/    C766 :                             ;       INC emu_ptr+1,X         ;6
(1)  512/    C766 :                             ;.skip:
(1)  512/    C766 :                             ;LDA (emu_ptr,X)                ;6
(1)  512/    C766 :                             ;STA emu_ptr2+1,X               ;4
(1)  512/    C766 :                             ;JMP (emu_ptr2,X)               ;6
(1)  512/    C766 :                             
(1)  512/    C766 :                             ;Method 2 - 46 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 154 - 1/5/2022 12:19:0


(1)  512/    C766 :                             ;Jump table must be page aligned!!!
(1)  512/    C766 :                             ;LDA (emu_PC,X)                 ;6
(1)  512/    C766 :                             ;STZ emu_ptr+1,X                ;4
(1)  512/    C766 :                             ;ASL                                    ;2
(1)  512/    C766 :                             ;ROL emu_ptr+1,X                ;6
(1)  512/    C766 :                             ;ASL                                    ;2
(1)  512/    C766 :                             ;ROL emu_ptr+1,X                ;6
(1)  512/    C766 :                             ;STA emu_ptr,X                  ;4                              
(1)  512/    C766 :                             ;LDA emu_ptr+1,X                ;4
(1)  512/    C766 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  512/    C766 :                             ;STA emu_ptr+1,X                ;4
(1)  512/    C766 :                             ;JMP (emu_ptr2,X)               ;6
(1)  512/    C766 :                             
(1)  512/    C766 :                             ;Method 3 - 30 cycles
(1)  512/    C766 :                             ;TXA                                                    ;2
(1)  512/    C766 :                             ;TAY                                                    ;2
(1)  512/    C766 :                             ;LDA (emu_PC,X)                                 ;6
(1)  512/    C766 :                             ;ASL                                                    ;2
(1)  512/    C766 :                             ;BCS upper                                              ;2
(1)  512/    C766 :                             ;lower:
(1)  512/    C766 :                             ;       ASL                                                     ;2
(1)  512/    C766 :                             ;       TAX                                                     ;2
(1)  512/    C766 :                             ;       BCS upper_lower                         ;2
(1)  512/    C766 :                             ;       lower_lower:
(1)  512/    C766 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  512/    C766 :                             ;       upper_lower:
(1)  512/    C766 :                             ;               JMP (JUMP_TABLE2,X)
(1)  512/    C766 :                             ;upper:
(1)  512/    C766 :                             ;       ASL
(1)  512/    C766 :                             ;       TAX
(1)  512/    C766 :                             ;       BCS upper_upper
(1)  512/    C766 :                             ;       lower_upper:
(1)  512/    C766 :                             ;               JMP (JUMP_TABLE3,X)
(1)  512/    C766 :                             ;       upper_upper:
(1)  512/    C766 :                             ;               JMP (JUMP_TABLE4,X)
(1)  512/    C766 :                             ;After jump:
(1)  512/    C766 :                             ;TYA                                                    ;2
(1)  512/    C766 :                             ;TAX                                                    ;2
(1)  512/    C766 :                             
(1)  512/    C766 :                             ;Method 4 - 28 cycles
(1)  512/    C766 :                             ;LDA (emu_PC,X)                 ;6
(1)  512/    C766 :                             ;TAY                                    ;2
(1)  512/    C766 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  512/    C766 :                             ;PHA                                    ;3
(1)  512/    C766 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  512/    C766 :                             ;PHA                                    ;3
(1)  512/    C766 :                             ;RTS                                    ;6
(1)  512/    C766 :                             
(1)  512/    C766 :                             ;Method 5 - 30 cycles
(1)  512/    C766 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  512/    C768 : A8                          TAY                                             ;2
(1)  512/    C769 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  512/    C76C : 95 0A                       STA emu_ptr,X                   ;4
(1)  512/    C76E : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  512/    C771 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  512/    C773 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  512/    C776 :                                                     
(1)  513/    C776 :                     
(1)  514/    C776 :                     	;0x66 - ROR ZP
(1)  515/    C776 :                     	ROR_ZP:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 155 - 1/5/2022 12:19:0


(1)  516/    C776 : (MACRO)             		OP_MACRO 102, "ROR", "ZP", "ROR_ZP"
(1)  516/    C776 :                             ;TODO
(1)  517/    C776 : (MACRO)             		NEXT_MACRO
(1)  517/    C776 :                                             
(1)  517/    C776 :  (MACRO-2)                  halt
(1)  517/    C776 : 00                          BRK
(1)  517/    C777 : 00                          BRK
(1)  517/    C778 :                             
(1)  517/    C778 :                             ;Method 1 - 60 cycles
(1)  517/    C778 :                             ;Jump table must be page aligned!!!
(1)  517/    C778 :                             ;LDA (emu_PC,X)                 ;6
(1)  517/    C778 :                             ;ASL                                    ;2
(1)  517/    C778 :                             ;STA emu_ptr,X                  ;4
(1)  517/    C778 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  517/    C778 :                             ;ADC #0                                 ;2
(1)  517/    C778 :                             ;STA emu_ptr+1,X                ;4
(1)  517/    C778 :                             ;LDA (emu_ptr,X)                ;6
(1)  517/    C778 :                             ;STA emu_ptr2,X                 ;4
(1)  517/    C778 :                             ;INC emu_ptr,X                  ;6
(1)  517/    C778 :                             ;BCC .skip                              ;2
(1)  517/    C778 :                             ;       INC emu_ptr+1,X         ;6
(1)  517/    C778 :                             ;.skip:
(1)  517/    C778 :                             ;LDA (emu_ptr,X)                ;6
(1)  517/    C778 :                             ;STA emu_ptr2+1,X               ;4
(1)  517/    C778 :                             ;JMP (emu_ptr2,X)               ;6
(1)  517/    C778 :                             
(1)  517/    C778 :                             ;Method 2 - 46 cycles
(1)  517/    C778 :                             ;Jump table must be page aligned!!!
(1)  517/    C778 :                             ;LDA (emu_PC,X)                 ;6
(1)  517/    C778 :                             ;STZ emu_ptr+1,X                ;4
(1)  517/    C778 :                             ;ASL                                    ;2
(1)  517/    C778 :                             ;ROL emu_ptr+1,X                ;6
(1)  517/    C778 :                             ;ASL                                    ;2
(1)  517/    C778 :                             ;ROL emu_ptr+1,X                ;6
(1)  517/    C778 :                             ;STA emu_ptr,X                  ;4                              
(1)  517/    C778 :                             ;LDA emu_ptr+1,X                ;4
(1)  517/    C778 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  517/    C778 :                             ;STA emu_ptr+1,X                ;4
(1)  517/    C778 :                             ;JMP (emu_ptr2,X)               ;6
(1)  517/    C778 :                             
(1)  517/    C778 :                             ;Method 3 - 30 cycles
(1)  517/    C778 :                             ;TXA                                                    ;2
(1)  517/    C778 :                             ;TAY                                                    ;2
(1)  517/    C778 :                             ;LDA (emu_PC,X)                                 ;6
(1)  517/    C778 :                             ;ASL                                                    ;2
(1)  517/    C778 :                             ;BCS upper                                              ;2
(1)  517/    C778 :                             ;lower:
(1)  517/    C778 :                             ;       ASL                                                     ;2
(1)  517/    C778 :                             ;       TAX                                                     ;2
(1)  517/    C778 :                             ;       BCS upper_lower                         ;2
(1)  517/    C778 :                             ;       lower_lower:
(1)  517/    C778 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  517/    C778 :                             ;       upper_lower:
(1)  517/    C778 :                             ;               JMP (JUMP_TABLE2,X)
(1)  517/    C778 :                             ;upper:
(1)  517/    C778 :                             ;       ASL
(1)  517/    C778 :                             ;       TAX
(1)  517/    C778 :                             ;       BCS upper_upper
(1)  517/    C778 :                             ;       lower_upper:
(1)  517/    C778 :                             ;               JMP (JUMP_TABLE3,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 156 - 1/5/2022 12:19:0


(1)  517/    C778 :                             ;       upper_upper:
(1)  517/    C778 :                             ;               JMP (JUMP_TABLE4,X)
(1)  517/    C778 :                             ;After jump:
(1)  517/    C778 :                             ;TYA                                                    ;2
(1)  517/    C778 :                             ;TAX                                                    ;2
(1)  517/    C778 :                             
(1)  517/    C778 :                             ;Method 4 - 28 cycles
(1)  517/    C778 :                             ;LDA (emu_PC,X)                 ;6
(1)  517/    C778 :                             ;TAY                                    ;2
(1)  517/    C778 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  517/    C778 :                             ;PHA                                    ;3
(1)  517/    C778 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  517/    C778 :                             ;PHA                                    ;3
(1)  517/    C778 :                             ;RTS                                    ;6
(1)  517/    C778 :                             
(1)  517/    C778 :                             ;Method 5 - 30 cycles
(1)  517/    C778 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  517/    C77A : A8                          TAY                                             ;2
(1)  517/    C77B : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  517/    C77E : 95 0A                       STA emu_ptr,X                   ;4
(1)  517/    C780 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  517/    C783 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  517/    C785 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  517/    C788 :                                                     
(1)  518/    C788 :                     
(1)  519/    C788 :                     	;0x67 - NOP
(1)  520/    C788 :                     	NOP_0x67:
(1)  521/    C788 : (MACRO)             		OP_MACRO 103, "NOP", "IMP", "NOP_0x67"
(1)  521/    C788 :                             ;TODO
(1)  522/    C788 : (MACRO)             		NEXT_MACRO
(1)  522/    C788 :                                             
(1)  522/    C788 :  (MACRO-2)                  halt
(1)  522/    C788 : 00                          BRK
(1)  522/    C789 : 00                          BRK
(1)  522/    C78A :                             
(1)  522/    C78A :                             ;Method 1 - 60 cycles
(1)  522/    C78A :                             ;Jump table must be page aligned!!!
(1)  522/    C78A :                             ;LDA (emu_PC,X)                 ;6
(1)  522/    C78A :                             ;ASL                                    ;2
(1)  522/    C78A :                             ;STA emu_ptr,X                  ;4
(1)  522/    C78A :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  522/    C78A :                             ;ADC #0                                 ;2
(1)  522/    C78A :                             ;STA emu_ptr+1,X                ;4
(1)  522/    C78A :                             ;LDA (emu_ptr,X)                ;6
(1)  522/    C78A :                             ;STA emu_ptr2,X                 ;4
(1)  522/    C78A :                             ;INC emu_ptr,X                  ;6
(1)  522/    C78A :                             ;BCC .skip                              ;2
(1)  522/    C78A :                             ;       INC emu_ptr+1,X         ;6
(1)  522/    C78A :                             ;.skip:
(1)  522/    C78A :                             ;LDA (emu_ptr,X)                ;6
(1)  522/    C78A :                             ;STA emu_ptr2+1,X               ;4
(1)  522/    C78A :                             ;JMP (emu_ptr2,X)               ;6
(1)  522/    C78A :                             
(1)  522/    C78A :                             ;Method 2 - 46 cycles
(1)  522/    C78A :                             ;Jump table must be page aligned!!!
(1)  522/    C78A :                             ;LDA (emu_PC,X)                 ;6
(1)  522/    C78A :                             ;STZ emu_ptr+1,X                ;4
(1)  522/    C78A :                             ;ASL                                    ;2
(1)  522/    C78A :                             ;ROL emu_ptr+1,X                ;6
(1)  522/    C78A :                             ;ASL                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 157 - 1/5/2022 12:19:0


(1)  522/    C78A :                             ;ROL emu_ptr+1,X                ;6
(1)  522/    C78A :                             ;STA emu_ptr,X                  ;4                              
(1)  522/    C78A :                             ;LDA emu_ptr+1,X                ;4
(1)  522/    C78A :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  522/    C78A :                             ;STA emu_ptr+1,X                ;4
(1)  522/    C78A :                             ;JMP (emu_ptr2,X)               ;6
(1)  522/    C78A :                             
(1)  522/    C78A :                             ;Method 3 - 30 cycles
(1)  522/    C78A :                             ;TXA                                                    ;2
(1)  522/    C78A :                             ;TAY                                                    ;2
(1)  522/    C78A :                             ;LDA (emu_PC,X)                                 ;6
(1)  522/    C78A :                             ;ASL                                                    ;2
(1)  522/    C78A :                             ;BCS upper                                              ;2
(1)  522/    C78A :                             ;lower:
(1)  522/    C78A :                             ;       ASL                                                     ;2
(1)  522/    C78A :                             ;       TAX                                                     ;2
(1)  522/    C78A :                             ;       BCS upper_lower                         ;2
(1)  522/    C78A :                             ;       lower_lower:
(1)  522/    C78A :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  522/    C78A :                             ;       upper_lower:
(1)  522/    C78A :                             ;               JMP (JUMP_TABLE2,X)
(1)  522/    C78A :                             ;upper:
(1)  522/    C78A :                             ;       ASL
(1)  522/    C78A :                             ;       TAX
(1)  522/    C78A :                             ;       BCS upper_upper
(1)  522/    C78A :                             ;       lower_upper:
(1)  522/    C78A :                             ;               JMP (JUMP_TABLE3,X)
(1)  522/    C78A :                             ;       upper_upper:
(1)  522/    C78A :                             ;               JMP (JUMP_TABLE4,X)
(1)  522/    C78A :                             ;After jump:
(1)  522/    C78A :                             ;TYA                                                    ;2
(1)  522/    C78A :                             ;TAX                                                    ;2
(1)  522/    C78A :                             
(1)  522/    C78A :                             ;Method 4 - 28 cycles
(1)  522/    C78A :                             ;LDA (emu_PC,X)                 ;6
(1)  522/    C78A :                             ;TAY                                    ;2
(1)  522/    C78A :                             ;LDA JUMP_TABLE,Y               ;4
(1)  522/    C78A :                             ;PHA                                    ;3
(1)  522/    C78A :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  522/    C78A :                             ;PHA                                    ;3
(1)  522/    C78A :                             ;RTS                                    ;6
(1)  522/    C78A :                             
(1)  522/    C78A :                             ;Method 5 - 30 cycles
(1)  522/    C78A : A1 02                       LDA (emu_PC,X)                  ;6
(1)  522/    C78C : A8                          TAY                                             ;2
(1)  522/    C78D : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  522/    C790 : 95 0A                       STA emu_ptr,X                   ;4
(1)  522/    C792 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  522/    C795 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  522/    C797 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  522/    C79A :                                                     
(1)  523/    C79A :                     
(1)  524/    C79A :                     	;0x68 - PLA IMP
(1)  525/    C79A :                     	PLA_IMP:
(1)  526/    C79A : (MACRO)             		OP_MACRO 104, "PLA", "IMP", "PLA_IMP"
(1)  526/    C79A :                             ;TODO
(1)  527/    C79A : (MACRO)             		NEXT_MACRO
(1)  527/    C79A :                                             
(1)  527/    C79A :  (MACRO-2)                  halt
(1)  527/    C79A : 00                          BRK
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 158 - 1/5/2022 12:19:0


(1)  527/    C79B : 00                          BRK
(1)  527/    C79C :                             
(1)  527/    C79C :                             ;Method 1 - 60 cycles
(1)  527/    C79C :                             ;Jump table must be page aligned!!!
(1)  527/    C79C :                             ;LDA (emu_PC,X)                 ;6
(1)  527/    C79C :                             ;ASL                                    ;2
(1)  527/    C79C :                             ;STA emu_ptr,X                  ;4
(1)  527/    C79C :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  527/    C79C :                             ;ADC #0                                 ;2
(1)  527/    C79C :                             ;STA emu_ptr+1,X                ;4
(1)  527/    C79C :                             ;LDA (emu_ptr,X)                ;6
(1)  527/    C79C :                             ;STA emu_ptr2,X                 ;4
(1)  527/    C79C :                             ;INC emu_ptr,X                  ;6
(1)  527/    C79C :                             ;BCC .skip                              ;2
(1)  527/    C79C :                             ;       INC emu_ptr+1,X         ;6
(1)  527/    C79C :                             ;.skip:
(1)  527/    C79C :                             ;LDA (emu_ptr,X)                ;6
(1)  527/    C79C :                             ;STA emu_ptr2+1,X               ;4
(1)  527/    C79C :                             ;JMP (emu_ptr2,X)               ;6
(1)  527/    C79C :                             
(1)  527/    C79C :                             ;Method 2 - 46 cycles
(1)  527/    C79C :                             ;Jump table must be page aligned!!!
(1)  527/    C79C :                             ;LDA (emu_PC,X)                 ;6
(1)  527/    C79C :                             ;STZ emu_ptr+1,X                ;4
(1)  527/    C79C :                             ;ASL                                    ;2
(1)  527/    C79C :                             ;ROL emu_ptr+1,X                ;6
(1)  527/    C79C :                             ;ASL                                    ;2
(1)  527/    C79C :                             ;ROL emu_ptr+1,X                ;6
(1)  527/    C79C :                             ;STA emu_ptr,X                  ;4                              
(1)  527/    C79C :                             ;LDA emu_ptr+1,X                ;4
(1)  527/    C79C :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  527/    C79C :                             ;STA emu_ptr+1,X                ;4
(1)  527/    C79C :                             ;JMP (emu_ptr2,X)               ;6
(1)  527/    C79C :                             
(1)  527/    C79C :                             ;Method 3 - 30 cycles
(1)  527/    C79C :                             ;TXA                                                    ;2
(1)  527/    C79C :                             ;TAY                                                    ;2
(1)  527/    C79C :                             ;LDA (emu_PC,X)                                 ;6
(1)  527/    C79C :                             ;ASL                                                    ;2
(1)  527/    C79C :                             ;BCS upper                                              ;2
(1)  527/    C79C :                             ;lower:
(1)  527/    C79C :                             ;       ASL                                                     ;2
(1)  527/    C79C :                             ;       TAX                                                     ;2
(1)  527/    C79C :                             ;       BCS upper_lower                         ;2
(1)  527/    C79C :                             ;       lower_lower:
(1)  527/    C79C :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  527/    C79C :                             ;       upper_lower:
(1)  527/    C79C :                             ;               JMP (JUMP_TABLE2,X)
(1)  527/    C79C :                             ;upper:
(1)  527/    C79C :                             ;       ASL
(1)  527/    C79C :                             ;       TAX
(1)  527/    C79C :                             ;       BCS upper_upper
(1)  527/    C79C :                             ;       lower_upper:
(1)  527/    C79C :                             ;               JMP (JUMP_TABLE3,X)
(1)  527/    C79C :                             ;       upper_upper:
(1)  527/    C79C :                             ;               JMP (JUMP_TABLE4,X)
(1)  527/    C79C :                             ;After jump:
(1)  527/    C79C :                             ;TYA                                                    ;2
(1)  527/    C79C :                             ;TAX                                                    ;2
(1)  527/    C79C :                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 159 - 1/5/2022 12:19:0


(1)  527/    C79C :                             ;Method 4 - 28 cycles
(1)  527/    C79C :                             ;LDA (emu_PC,X)                 ;6
(1)  527/    C79C :                             ;TAY                                    ;2
(1)  527/    C79C :                             ;LDA JUMP_TABLE,Y               ;4
(1)  527/    C79C :                             ;PHA                                    ;3
(1)  527/    C79C :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  527/    C79C :                             ;PHA                                    ;3
(1)  527/    C79C :                             ;RTS                                    ;6
(1)  527/    C79C :                             
(1)  527/    C79C :                             ;Method 5 - 30 cycles
(1)  527/    C79C : A1 02                       LDA (emu_PC,X)                  ;6
(1)  527/    C79E : A8                          TAY                                             ;2
(1)  527/    C79F : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  527/    C7A2 : 95 0A                       STA emu_ptr,X                   ;4
(1)  527/    C7A4 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  527/    C7A7 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  527/    C7A9 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  527/    C7AC :                                                     
(1)  528/    C7AC :                     
(1)  529/    C7AC :                     	;0x69 - ADC IMMED
(1)  530/    C7AC :                     	ADC_IMMED:
(1)  531/    C7AC : (MACRO)             		OP_MACRO 105, "ADC", "IMMED", "ADC_IMMED"
(1)  531/    C7AC :                             ;TODO
(1)  532/    C7AC : (MACRO)             		NEXT_MACRO
(1)  532/    C7AC :                                             
(1)  532/    C7AC :  (MACRO-2)                  halt
(1)  532/    C7AC : 00                          BRK
(1)  532/    C7AD : 00                          BRK
(1)  532/    C7AE :                             
(1)  532/    C7AE :                             ;Method 1 - 60 cycles
(1)  532/    C7AE :                             ;Jump table must be page aligned!!!
(1)  532/    C7AE :                             ;LDA (emu_PC,X)                 ;6
(1)  532/    C7AE :                             ;ASL                                    ;2
(1)  532/    C7AE :                             ;STA emu_ptr,X                  ;4
(1)  532/    C7AE :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  532/    C7AE :                             ;ADC #0                                 ;2
(1)  532/    C7AE :                             ;STA emu_ptr+1,X                ;4
(1)  532/    C7AE :                             ;LDA (emu_ptr,X)                ;6
(1)  532/    C7AE :                             ;STA emu_ptr2,X                 ;4
(1)  532/    C7AE :                             ;INC emu_ptr,X                  ;6
(1)  532/    C7AE :                             ;BCC .skip                              ;2
(1)  532/    C7AE :                             ;       INC emu_ptr+1,X         ;6
(1)  532/    C7AE :                             ;.skip:
(1)  532/    C7AE :                             ;LDA (emu_ptr,X)                ;6
(1)  532/    C7AE :                             ;STA emu_ptr2+1,X               ;4
(1)  532/    C7AE :                             ;JMP (emu_ptr2,X)               ;6
(1)  532/    C7AE :                             
(1)  532/    C7AE :                             ;Method 2 - 46 cycles
(1)  532/    C7AE :                             ;Jump table must be page aligned!!!
(1)  532/    C7AE :                             ;LDA (emu_PC,X)                 ;6
(1)  532/    C7AE :                             ;STZ emu_ptr+1,X                ;4
(1)  532/    C7AE :                             ;ASL                                    ;2
(1)  532/    C7AE :                             ;ROL emu_ptr+1,X                ;6
(1)  532/    C7AE :                             ;ASL                                    ;2
(1)  532/    C7AE :                             ;ROL emu_ptr+1,X                ;6
(1)  532/    C7AE :                             ;STA emu_ptr,X                  ;4                              
(1)  532/    C7AE :                             ;LDA emu_ptr+1,X                ;4
(1)  532/    C7AE :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  532/    C7AE :                             ;STA emu_ptr+1,X                ;4
(1)  532/    C7AE :                             ;JMP (emu_ptr2,X)               ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 160 - 1/5/2022 12:19:0


(1)  532/    C7AE :                             
(1)  532/    C7AE :                             ;Method 3 - 30 cycles
(1)  532/    C7AE :                             ;TXA                                                    ;2
(1)  532/    C7AE :                             ;TAY                                                    ;2
(1)  532/    C7AE :                             ;LDA (emu_PC,X)                                 ;6
(1)  532/    C7AE :                             ;ASL                                                    ;2
(1)  532/    C7AE :                             ;BCS upper                                              ;2
(1)  532/    C7AE :                             ;lower:
(1)  532/    C7AE :                             ;       ASL                                                     ;2
(1)  532/    C7AE :                             ;       TAX                                                     ;2
(1)  532/    C7AE :                             ;       BCS upper_lower                         ;2
(1)  532/    C7AE :                             ;       lower_lower:
(1)  532/    C7AE :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  532/    C7AE :                             ;       upper_lower:
(1)  532/    C7AE :                             ;               JMP (JUMP_TABLE2,X)
(1)  532/    C7AE :                             ;upper:
(1)  532/    C7AE :                             ;       ASL
(1)  532/    C7AE :                             ;       TAX
(1)  532/    C7AE :                             ;       BCS upper_upper
(1)  532/    C7AE :                             ;       lower_upper:
(1)  532/    C7AE :                             ;               JMP (JUMP_TABLE3,X)
(1)  532/    C7AE :                             ;       upper_upper:
(1)  532/    C7AE :                             ;               JMP (JUMP_TABLE4,X)
(1)  532/    C7AE :                             ;After jump:
(1)  532/    C7AE :                             ;TYA                                                    ;2
(1)  532/    C7AE :                             ;TAX                                                    ;2
(1)  532/    C7AE :                             
(1)  532/    C7AE :                             ;Method 4 - 28 cycles
(1)  532/    C7AE :                             ;LDA (emu_PC,X)                 ;6
(1)  532/    C7AE :                             ;TAY                                    ;2
(1)  532/    C7AE :                             ;LDA JUMP_TABLE,Y               ;4
(1)  532/    C7AE :                             ;PHA                                    ;3
(1)  532/    C7AE :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  532/    C7AE :                             ;PHA                                    ;3
(1)  532/    C7AE :                             ;RTS                                    ;6
(1)  532/    C7AE :                             
(1)  532/    C7AE :                             ;Method 5 - 30 cycles
(1)  532/    C7AE : A1 02                       LDA (emu_PC,X)                  ;6
(1)  532/    C7B0 : A8                          TAY                                             ;2
(1)  532/    C7B1 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  532/    C7B4 : 95 0A                       STA emu_ptr,X                   ;4
(1)  532/    C7B6 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  532/    C7B9 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  532/    C7BB : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  532/    C7BE :                                                     
(1)  533/    C7BE :                     
(1)  534/    C7BE :                     	;0x6A - ROR A
(1)  535/    C7BE :                     	ROR_A:
(1)  536/    C7BE : (MACRO)             		OP_MACRO 106, "ROR", "A", "ROR_A"
(1)  536/    C7BE :                             ;TODO
(1)  537/    C7BE : (MACRO)             		NEXT_MACRO
(1)  537/    C7BE :                                             
(1)  537/    C7BE :  (MACRO-2)                  halt
(1)  537/    C7BE : 00                          BRK
(1)  537/    C7BF : 00                          BRK
(1)  537/    C7C0 :                             
(1)  537/    C7C0 :                             ;Method 1 - 60 cycles
(1)  537/    C7C0 :                             ;Jump table must be page aligned!!!
(1)  537/    C7C0 :                             ;LDA (emu_PC,X)                 ;6
(1)  537/    C7C0 :                             ;ASL                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 161 - 1/5/2022 12:19:0


(1)  537/    C7C0 :                             ;STA emu_ptr,X                  ;4
(1)  537/    C7C0 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  537/    C7C0 :                             ;ADC #0                                 ;2
(1)  537/    C7C0 :                             ;STA emu_ptr+1,X                ;4
(1)  537/    C7C0 :                             ;LDA (emu_ptr,X)                ;6
(1)  537/    C7C0 :                             ;STA emu_ptr2,X                 ;4
(1)  537/    C7C0 :                             ;INC emu_ptr,X                  ;6
(1)  537/    C7C0 :                             ;BCC .skip                              ;2
(1)  537/    C7C0 :                             ;       INC emu_ptr+1,X         ;6
(1)  537/    C7C0 :                             ;.skip:
(1)  537/    C7C0 :                             ;LDA (emu_ptr,X)                ;6
(1)  537/    C7C0 :                             ;STA emu_ptr2+1,X               ;4
(1)  537/    C7C0 :                             ;JMP (emu_ptr2,X)               ;6
(1)  537/    C7C0 :                             
(1)  537/    C7C0 :                             ;Method 2 - 46 cycles
(1)  537/    C7C0 :                             ;Jump table must be page aligned!!!
(1)  537/    C7C0 :                             ;LDA (emu_PC,X)                 ;6
(1)  537/    C7C0 :                             ;STZ emu_ptr+1,X                ;4
(1)  537/    C7C0 :                             ;ASL                                    ;2
(1)  537/    C7C0 :                             ;ROL emu_ptr+1,X                ;6
(1)  537/    C7C0 :                             ;ASL                                    ;2
(1)  537/    C7C0 :                             ;ROL emu_ptr+1,X                ;6
(1)  537/    C7C0 :                             ;STA emu_ptr,X                  ;4                              
(1)  537/    C7C0 :                             ;LDA emu_ptr+1,X                ;4
(1)  537/    C7C0 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  537/    C7C0 :                             ;STA emu_ptr+1,X                ;4
(1)  537/    C7C0 :                             ;JMP (emu_ptr2,X)               ;6
(1)  537/    C7C0 :                             
(1)  537/    C7C0 :                             ;Method 3 - 30 cycles
(1)  537/    C7C0 :                             ;TXA                                                    ;2
(1)  537/    C7C0 :                             ;TAY                                                    ;2
(1)  537/    C7C0 :                             ;LDA (emu_PC,X)                                 ;6
(1)  537/    C7C0 :                             ;ASL                                                    ;2
(1)  537/    C7C0 :                             ;BCS upper                                              ;2
(1)  537/    C7C0 :                             ;lower:
(1)  537/    C7C0 :                             ;       ASL                                                     ;2
(1)  537/    C7C0 :                             ;       TAX                                                     ;2
(1)  537/    C7C0 :                             ;       BCS upper_lower                         ;2
(1)  537/    C7C0 :                             ;       lower_lower:
(1)  537/    C7C0 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  537/    C7C0 :                             ;       upper_lower:
(1)  537/    C7C0 :                             ;               JMP (JUMP_TABLE2,X)
(1)  537/    C7C0 :                             ;upper:
(1)  537/    C7C0 :                             ;       ASL
(1)  537/    C7C0 :                             ;       TAX
(1)  537/    C7C0 :                             ;       BCS upper_upper
(1)  537/    C7C0 :                             ;       lower_upper:
(1)  537/    C7C0 :                             ;               JMP (JUMP_TABLE3,X)
(1)  537/    C7C0 :                             ;       upper_upper:
(1)  537/    C7C0 :                             ;               JMP (JUMP_TABLE4,X)
(1)  537/    C7C0 :                             ;After jump:
(1)  537/    C7C0 :                             ;TYA                                                    ;2
(1)  537/    C7C0 :                             ;TAX                                                    ;2
(1)  537/    C7C0 :                             
(1)  537/    C7C0 :                             ;Method 4 - 28 cycles
(1)  537/    C7C0 :                             ;LDA (emu_PC,X)                 ;6
(1)  537/    C7C0 :                             ;TAY                                    ;2
(1)  537/    C7C0 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  537/    C7C0 :                             ;PHA                                    ;3
(1)  537/    C7C0 :                             ;LDA JUMP_TABLE2,Y              ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 162 - 1/5/2022 12:19:0


(1)  537/    C7C0 :                             ;PHA                                    ;3
(1)  537/    C7C0 :                             ;RTS                                    ;6
(1)  537/    C7C0 :                             
(1)  537/    C7C0 :                             ;Method 5 - 30 cycles
(1)  537/    C7C0 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  537/    C7C2 : A8                          TAY                                             ;2
(1)  537/    C7C3 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  537/    C7C6 : 95 0A                       STA emu_ptr,X                   ;4
(1)  537/    C7C8 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  537/    C7CB : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  537/    C7CD : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  537/    C7D0 :                                                     
(1)  538/    C7D0 :                     
(1)  539/    C7D0 :                     	;0x6B - NOP
(1)  540/    C7D0 :                     	NOP_0x6B:
(1)  541/    C7D0 : (MACRO)             		OP_MACRO 107, "NOP", "IMP", "NOP_0x6B"
(1)  541/    C7D0 :                             ;TODO
(1)  542/    C7D0 : (MACRO)             		NEXT_MACRO
(1)  542/    C7D0 :                                             
(1)  542/    C7D0 :  (MACRO-2)                  halt
(1)  542/    C7D0 : 00                          BRK
(1)  542/    C7D1 : 00                          BRK
(1)  542/    C7D2 :                             
(1)  542/    C7D2 :                             ;Method 1 - 60 cycles
(1)  542/    C7D2 :                             ;Jump table must be page aligned!!!
(1)  542/    C7D2 :                             ;LDA (emu_PC,X)                 ;6
(1)  542/    C7D2 :                             ;ASL                                    ;2
(1)  542/    C7D2 :                             ;STA emu_ptr,X                  ;4
(1)  542/    C7D2 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  542/    C7D2 :                             ;ADC #0                                 ;2
(1)  542/    C7D2 :                             ;STA emu_ptr+1,X                ;4
(1)  542/    C7D2 :                             ;LDA (emu_ptr,X)                ;6
(1)  542/    C7D2 :                             ;STA emu_ptr2,X                 ;4
(1)  542/    C7D2 :                             ;INC emu_ptr,X                  ;6
(1)  542/    C7D2 :                             ;BCC .skip                              ;2
(1)  542/    C7D2 :                             ;       INC emu_ptr+1,X         ;6
(1)  542/    C7D2 :                             ;.skip:
(1)  542/    C7D2 :                             ;LDA (emu_ptr,X)                ;6
(1)  542/    C7D2 :                             ;STA emu_ptr2+1,X               ;4
(1)  542/    C7D2 :                             ;JMP (emu_ptr2,X)               ;6
(1)  542/    C7D2 :                             
(1)  542/    C7D2 :                             ;Method 2 - 46 cycles
(1)  542/    C7D2 :                             ;Jump table must be page aligned!!!
(1)  542/    C7D2 :                             ;LDA (emu_PC,X)                 ;6
(1)  542/    C7D2 :                             ;STZ emu_ptr+1,X                ;4
(1)  542/    C7D2 :                             ;ASL                                    ;2
(1)  542/    C7D2 :                             ;ROL emu_ptr+1,X                ;6
(1)  542/    C7D2 :                             ;ASL                                    ;2
(1)  542/    C7D2 :                             ;ROL emu_ptr+1,X                ;6
(1)  542/    C7D2 :                             ;STA emu_ptr,X                  ;4                              
(1)  542/    C7D2 :                             ;LDA emu_ptr+1,X                ;4
(1)  542/    C7D2 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  542/    C7D2 :                             ;STA emu_ptr+1,X                ;4
(1)  542/    C7D2 :                             ;JMP (emu_ptr2,X)               ;6
(1)  542/    C7D2 :                             
(1)  542/    C7D2 :                             ;Method 3 - 30 cycles
(1)  542/    C7D2 :                             ;TXA                                                    ;2
(1)  542/    C7D2 :                             ;TAY                                                    ;2
(1)  542/    C7D2 :                             ;LDA (emu_PC,X)                                 ;6
(1)  542/    C7D2 :                             ;ASL                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 163 - 1/5/2022 12:19:0


(1)  542/    C7D2 :                             ;BCS upper                                              ;2
(1)  542/    C7D2 :                             ;lower:
(1)  542/    C7D2 :                             ;       ASL                                                     ;2
(1)  542/    C7D2 :                             ;       TAX                                                     ;2
(1)  542/    C7D2 :                             ;       BCS upper_lower                         ;2
(1)  542/    C7D2 :                             ;       lower_lower:
(1)  542/    C7D2 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  542/    C7D2 :                             ;       upper_lower:
(1)  542/    C7D2 :                             ;               JMP (JUMP_TABLE2,X)
(1)  542/    C7D2 :                             ;upper:
(1)  542/    C7D2 :                             ;       ASL
(1)  542/    C7D2 :                             ;       TAX
(1)  542/    C7D2 :                             ;       BCS upper_upper
(1)  542/    C7D2 :                             ;       lower_upper:
(1)  542/    C7D2 :                             ;               JMP (JUMP_TABLE3,X)
(1)  542/    C7D2 :                             ;       upper_upper:
(1)  542/    C7D2 :                             ;               JMP (JUMP_TABLE4,X)
(1)  542/    C7D2 :                             ;After jump:
(1)  542/    C7D2 :                             ;TYA                                                    ;2
(1)  542/    C7D2 :                             ;TAX                                                    ;2
(1)  542/    C7D2 :                             
(1)  542/    C7D2 :                             ;Method 4 - 28 cycles
(1)  542/    C7D2 :                             ;LDA (emu_PC,X)                 ;6
(1)  542/    C7D2 :                             ;TAY                                    ;2
(1)  542/    C7D2 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  542/    C7D2 :                             ;PHA                                    ;3
(1)  542/    C7D2 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  542/    C7D2 :                             ;PHA                                    ;3
(1)  542/    C7D2 :                             ;RTS                                    ;6
(1)  542/    C7D2 :                             
(1)  542/    C7D2 :                             ;Method 5 - 30 cycles
(1)  542/    C7D2 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  542/    C7D4 : A8                          TAY                                             ;2
(1)  542/    C7D5 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  542/    C7D8 : 95 0A                       STA emu_ptr,X                   ;4
(1)  542/    C7DA : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  542/    C7DD : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  542/    C7DF : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  542/    C7E2 :                                                     
(1)  543/    C7E2 :                     
(1)  544/    C7E2 :                     	;0x6C - JMP I
(1)  545/    C7E2 :                     	JMP_I:
(1)  546/    C7E2 : (MACRO)             		OP_MACRO 108, "JMP", "I", "JMP_I"
(1)  546/    C7E2 :                             ;TODO
(1)  547/    C7E2 : (MACRO)             		NEXT_MACRO
(1)  547/    C7E2 :                                             
(1)  547/    C7E2 :  (MACRO-2)                  halt
(1)  547/    C7E2 : 00                          BRK
(1)  547/    C7E3 : 00                          BRK
(1)  547/    C7E4 :                             
(1)  547/    C7E4 :                             ;Method 1 - 60 cycles
(1)  547/    C7E4 :                             ;Jump table must be page aligned!!!
(1)  547/    C7E4 :                             ;LDA (emu_PC,X)                 ;6
(1)  547/    C7E4 :                             ;ASL                                    ;2
(1)  547/    C7E4 :                             ;STA emu_ptr,X                  ;4
(1)  547/    C7E4 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  547/    C7E4 :                             ;ADC #0                                 ;2
(1)  547/    C7E4 :                             ;STA emu_ptr+1,X                ;4
(1)  547/    C7E4 :                             ;LDA (emu_ptr,X)                ;6
(1)  547/    C7E4 :                             ;STA emu_ptr2,X                 ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 164 - 1/5/2022 12:19:0


(1)  547/    C7E4 :                             ;INC emu_ptr,X                  ;6
(1)  547/    C7E4 :                             ;BCC .skip                              ;2
(1)  547/    C7E4 :                             ;       INC emu_ptr+1,X         ;6
(1)  547/    C7E4 :                             ;.skip:
(1)  547/    C7E4 :                             ;LDA (emu_ptr,X)                ;6
(1)  547/    C7E4 :                             ;STA emu_ptr2+1,X               ;4
(1)  547/    C7E4 :                             ;JMP (emu_ptr2,X)               ;6
(1)  547/    C7E4 :                             
(1)  547/    C7E4 :                             ;Method 2 - 46 cycles
(1)  547/    C7E4 :                             ;Jump table must be page aligned!!!
(1)  547/    C7E4 :                             ;LDA (emu_PC,X)                 ;6
(1)  547/    C7E4 :                             ;STZ emu_ptr+1,X                ;4
(1)  547/    C7E4 :                             ;ASL                                    ;2
(1)  547/    C7E4 :                             ;ROL emu_ptr+1,X                ;6
(1)  547/    C7E4 :                             ;ASL                                    ;2
(1)  547/    C7E4 :                             ;ROL emu_ptr+1,X                ;6
(1)  547/    C7E4 :                             ;STA emu_ptr,X                  ;4                              
(1)  547/    C7E4 :                             ;LDA emu_ptr+1,X                ;4
(1)  547/    C7E4 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  547/    C7E4 :                             ;STA emu_ptr+1,X                ;4
(1)  547/    C7E4 :                             ;JMP (emu_ptr2,X)               ;6
(1)  547/    C7E4 :                             
(1)  547/    C7E4 :                             ;Method 3 - 30 cycles
(1)  547/    C7E4 :                             ;TXA                                                    ;2
(1)  547/    C7E4 :                             ;TAY                                                    ;2
(1)  547/    C7E4 :                             ;LDA (emu_PC,X)                                 ;6
(1)  547/    C7E4 :                             ;ASL                                                    ;2
(1)  547/    C7E4 :                             ;BCS upper                                              ;2
(1)  547/    C7E4 :                             ;lower:
(1)  547/    C7E4 :                             ;       ASL                                                     ;2
(1)  547/    C7E4 :                             ;       TAX                                                     ;2
(1)  547/    C7E4 :                             ;       BCS upper_lower                         ;2
(1)  547/    C7E4 :                             ;       lower_lower:
(1)  547/    C7E4 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  547/    C7E4 :                             ;       upper_lower:
(1)  547/    C7E4 :                             ;               JMP (JUMP_TABLE2,X)
(1)  547/    C7E4 :                             ;upper:
(1)  547/    C7E4 :                             ;       ASL
(1)  547/    C7E4 :                             ;       TAX
(1)  547/    C7E4 :                             ;       BCS upper_upper
(1)  547/    C7E4 :                             ;       lower_upper:
(1)  547/    C7E4 :                             ;               JMP (JUMP_TABLE3,X)
(1)  547/    C7E4 :                             ;       upper_upper:
(1)  547/    C7E4 :                             ;               JMP (JUMP_TABLE4,X)
(1)  547/    C7E4 :                             ;After jump:
(1)  547/    C7E4 :                             ;TYA                                                    ;2
(1)  547/    C7E4 :                             ;TAX                                                    ;2
(1)  547/    C7E4 :                             
(1)  547/    C7E4 :                             ;Method 4 - 28 cycles
(1)  547/    C7E4 :                             ;LDA (emu_PC,X)                 ;6
(1)  547/    C7E4 :                             ;TAY                                    ;2
(1)  547/    C7E4 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  547/    C7E4 :                             ;PHA                                    ;3
(1)  547/    C7E4 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  547/    C7E4 :                             ;PHA                                    ;3
(1)  547/    C7E4 :                             ;RTS                                    ;6
(1)  547/    C7E4 :                             
(1)  547/    C7E4 :                             ;Method 5 - 30 cycles
(1)  547/    C7E4 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  547/    C7E6 : A8                          TAY                                             ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 165 - 1/5/2022 12:19:0


(1)  547/    C7E7 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  547/    C7EA : 95 0A                       STA emu_ptr,X                   ;4
(1)  547/    C7EC : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  547/    C7EF : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  547/    C7F1 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  547/    C7F4 :                                                     
(1)  548/    C7F4 :                     
(1)  549/    C7F4 :                     	;0x6D - ADC ABS
(1)  550/    C7F4 :                     	ADC_ABS:
(1)  551/    C7F4 : (MACRO)             		OP_MACRO 109, "ADC", "ABS", "ADC_ABS"
(1)  551/    C7F4 :                             ;TODO
(1)  552/    C7F4 : (MACRO)             		NEXT_MACRO
(1)  552/    C7F4 :                                             
(1)  552/    C7F4 :  (MACRO-2)                  halt
(1)  552/    C7F4 : 00                          BRK
(1)  552/    C7F5 : 00                          BRK
(1)  552/    C7F6 :                             
(1)  552/    C7F6 :                             ;Method 1 - 60 cycles
(1)  552/    C7F6 :                             ;Jump table must be page aligned!!!
(1)  552/    C7F6 :                             ;LDA (emu_PC,X)                 ;6
(1)  552/    C7F6 :                             ;ASL                                    ;2
(1)  552/    C7F6 :                             ;STA emu_ptr,X                  ;4
(1)  552/    C7F6 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  552/    C7F6 :                             ;ADC #0                                 ;2
(1)  552/    C7F6 :                             ;STA emu_ptr+1,X                ;4
(1)  552/    C7F6 :                             ;LDA (emu_ptr,X)                ;6
(1)  552/    C7F6 :                             ;STA emu_ptr2,X                 ;4
(1)  552/    C7F6 :                             ;INC emu_ptr,X                  ;6
(1)  552/    C7F6 :                             ;BCC .skip                              ;2
(1)  552/    C7F6 :                             ;       INC emu_ptr+1,X         ;6
(1)  552/    C7F6 :                             ;.skip:
(1)  552/    C7F6 :                             ;LDA (emu_ptr,X)                ;6
(1)  552/    C7F6 :                             ;STA emu_ptr2+1,X               ;4
(1)  552/    C7F6 :                             ;JMP (emu_ptr2,X)               ;6
(1)  552/    C7F6 :                             
(1)  552/    C7F6 :                             ;Method 2 - 46 cycles
(1)  552/    C7F6 :                             ;Jump table must be page aligned!!!
(1)  552/    C7F6 :                             ;LDA (emu_PC,X)                 ;6
(1)  552/    C7F6 :                             ;STZ emu_ptr+1,X                ;4
(1)  552/    C7F6 :                             ;ASL                                    ;2
(1)  552/    C7F6 :                             ;ROL emu_ptr+1,X                ;6
(1)  552/    C7F6 :                             ;ASL                                    ;2
(1)  552/    C7F6 :                             ;ROL emu_ptr+1,X                ;6
(1)  552/    C7F6 :                             ;STA emu_ptr,X                  ;4                              
(1)  552/    C7F6 :                             ;LDA emu_ptr+1,X                ;4
(1)  552/    C7F6 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  552/    C7F6 :                             ;STA emu_ptr+1,X                ;4
(1)  552/    C7F6 :                             ;JMP (emu_ptr2,X)               ;6
(1)  552/    C7F6 :                             
(1)  552/    C7F6 :                             ;Method 3 - 30 cycles
(1)  552/    C7F6 :                             ;TXA                                                    ;2
(1)  552/    C7F6 :                             ;TAY                                                    ;2
(1)  552/    C7F6 :                             ;LDA (emu_PC,X)                                 ;6
(1)  552/    C7F6 :                             ;ASL                                                    ;2
(1)  552/    C7F6 :                             ;BCS upper                                              ;2
(1)  552/    C7F6 :                             ;lower:
(1)  552/    C7F6 :                             ;       ASL                                                     ;2
(1)  552/    C7F6 :                             ;       TAX                                                     ;2
(1)  552/    C7F6 :                             ;       BCS upper_lower                         ;2
(1)  552/    C7F6 :                             ;       lower_lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 166 - 1/5/2022 12:19:0


(1)  552/    C7F6 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  552/    C7F6 :                             ;       upper_lower:
(1)  552/    C7F6 :                             ;               JMP (JUMP_TABLE2,X)
(1)  552/    C7F6 :                             ;upper:
(1)  552/    C7F6 :                             ;       ASL
(1)  552/    C7F6 :                             ;       TAX
(1)  552/    C7F6 :                             ;       BCS upper_upper
(1)  552/    C7F6 :                             ;       lower_upper:
(1)  552/    C7F6 :                             ;               JMP (JUMP_TABLE3,X)
(1)  552/    C7F6 :                             ;       upper_upper:
(1)  552/    C7F6 :                             ;               JMP (JUMP_TABLE4,X)
(1)  552/    C7F6 :                             ;After jump:
(1)  552/    C7F6 :                             ;TYA                                                    ;2
(1)  552/    C7F6 :                             ;TAX                                                    ;2
(1)  552/    C7F6 :                             
(1)  552/    C7F6 :                             ;Method 4 - 28 cycles
(1)  552/    C7F6 :                             ;LDA (emu_PC,X)                 ;6
(1)  552/    C7F6 :                             ;TAY                                    ;2
(1)  552/    C7F6 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  552/    C7F6 :                             ;PHA                                    ;3
(1)  552/    C7F6 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  552/    C7F6 :                             ;PHA                                    ;3
(1)  552/    C7F6 :                             ;RTS                                    ;6
(1)  552/    C7F6 :                             
(1)  552/    C7F6 :                             ;Method 5 - 30 cycles
(1)  552/    C7F6 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  552/    C7F8 : A8                          TAY                                             ;2
(1)  552/    C7F9 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  552/    C7FC : 95 0A                       STA emu_ptr,X                   ;4
(1)  552/    C7FE : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  552/    C801 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  552/    C803 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  552/    C806 :                                                     
(1)  553/    C806 :                     
(1)  554/    C806 :                     	;0x6E - ROR ABS
(1)  555/    C806 :                     	ROR_ABS:
(1)  556/    C806 : (MACRO)             		OP_MACRO 110, "ROR", "ABS", "ROR_ABS"
(1)  556/    C806 :                             ;TODO
(1)  557/    C806 : (MACRO)             		NEXT_MACRO
(1)  557/    C806 :                                             
(1)  557/    C806 :  (MACRO-2)                  halt
(1)  557/    C806 : 00                          BRK
(1)  557/    C807 : 00                          BRK
(1)  557/    C808 :                             
(1)  557/    C808 :                             ;Method 1 - 60 cycles
(1)  557/    C808 :                             ;Jump table must be page aligned!!!
(1)  557/    C808 :                             ;LDA (emu_PC,X)                 ;6
(1)  557/    C808 :                             ;ASL                                    ;2
(1)  557/    C808 :                             ;STA emu_ptr,X                  ;4
(1)  557/    C808 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  557/    C808 :                             ;ADC #0                                 ;2
(1)  557/    C808 :                             ;STA emu_ptr+1,X                ;4
(1)  557/    C808 :                             ;LDA (emu_ptr,X)                ;6
(1)  557/    C808 :                             ;STA emu_ptr2,X                 ;4
(1)  557/    C808 :                             ;INC emu_ptr,X                  ;6
(1)  557/    C808 :                             ;BCC .skip                              ;2
(1)  557/    C808 :                             ;       INC emu_ptr+1,X         ;6
(1)  557/    C808 :                             ;.skip:
(1)  557/    C808 :                             ;LDA (emu_ptr,X)                ;6
(1)  557/    C808 :                             ;STA emu_ptr2+1,X               ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 167 - 1/5/2022 12:19:0


(1)  557/    C808 :                             ;JMP (emu_ptr2,X)               ;6
(1)  557/    C808 :                             
(1)  557/    C808 :                             ;Method 2 - 46 cycles
(1)  557/    C808 :                             ;Jump table must be page aligned!!!
(1)  557/    C808 :                             ;LDA (emu_PC,X)                 ;6
(1)  557/    C808 :                             ;STZ emu_ptr+1,X                ;4
(1)  557/    C808 :                             ;ASL                                    ;2
(1)  557/    C808 :                             ;ROL emu_ptr+1,X                ;6
(1)  557/    C808 :                             ;ASL                                    ;2
(1)  557/    C808 :                             ;ROL emu_ptr+1,X                ;6
(1)  557/    C808 :                             ;STA emu_ptr,X                  ;4                              
(1)  557/    C808 :                             ;LDA emu_ptr+1,X                ;4
(1)  557/    C808 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  557/    C808 :                             ;STA emu_ptr+1,X                ;4
(1)  557/    C808 :                             ;JMP (emu_ptr2,X)               ;6
(1)  557/    C808 :                             
(1)  557/    C808 :                             ;Method 3 - 30 cycles
(1)  557/    C808 :                             ;TXA                                                    ;2
(1)  557/    C808 :                             ;TAY                                                    ;2
(1)  557/    C808 :                             ;LDA (emu_PC,X)                                 ;6
(1)  557/    C808 :                             ;ASL                                                    ;2
(1)  557/    C808 :                             ;BCS upper                                              ;2
(1)  557/    C808 :                             ;lower:
(1)  557/    C808 :                             ;       ASL                                                     ;2
(1)  557/    C808 :                             ;       TAX                                                     ;2
(1)  557/    C808 :                             ;       BCS upper_lower                         ;2
(1)  557/    C808 :                             ;       lower_lower:
(1)  557/    C808 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  557/    C808 :                             ;       upper_lower:
(1)  557/    C808 :                             ;               JMP (JUMP_TABLE2,X)
(1)  557/    C808 :                             ;upper:
(1)  557/    C808 :                             ;       ASL
(1)  557/    C808 :                             ;       TAX
(1)  557/    C808 :                             ;       BCS upper_upper
(1)  557/    C808 :                             ;       lower_upper:
(1)  557/    C808 :                             ;               JMP (JUMP_TABLE3,X)
(1)  557/    C808 :                             ;       upper_upper:
(1)  557/    C808 :                             ;               JMP (JUMP_TABLE4,X)
(1)  557/    C808 :                             ;After jump:
(1)  557/    C808 :                             ;TYA                                                    ;2
(1)  557/    C808 :                             ;TAX                                                    ;2
(1)  557/    C808 :                             
(1)  557/    C808 :                             ;Method 4 - 28 cycles
(1)  557/    C808 :                             ;LDA (emu_PC,X)                 ;6
(1)  557/    C808 :                             ;TAY                                    ;2
(1)  557/    C808 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  557/    C808 :                             ;PHA                                    ;3
(1)  557/    C808 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  557/    C808 :                             ;PHA                                    ;3
(1)  557/    C808 :                             ;RTS                                    ;6
(1)  557/    C808 :                             
(1)  557/    C808 :                             ;Method 5 - 30 cycles
(1)  557/    C808 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  557/    C80A : A8                          TAY                                             ;2
(1)  557/    C80B : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  557/    C80E : 95 0A                       STA emu_ptr,X                   ;4
(1)  557/    C810 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  557/    C813 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  557/    C815 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  557/    C818 :                                                     
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 168 - 1/5/2022 12:19:0


(1)  558/    C818 :                     
(1)  559/    C818 :                     	;0x6F - NOP
(1)  560/    C818 :                     	NOP_0x6F:
(1)  561/    C818 : (MACRO)             		OP_MACRO 111, "NOP", "IMP", "NOP_0x6F"
(1)  561/    C818 :                             ;TODO
(1)  562/    C818 : (MACRO)             		NEXT_MACRO
(1)  562/    C818 :                                             
(1)  562/    C818 :  (MACRO-2)                  halt
(1)  562/    C818 : 00                          BRK
(1)  562/    C819 : 00                          BRK
(1)  562/    C81A :                             
(1)  562/    C81A :                             ;Method 1 - 60 cycles
(1)  562/    C81A :                             ;Jump table must be page aligned!!!
(1)  562/    C81A :                             ;LDA (emu_PC,X)                 ;6
(1)  562/    C81A :                             ;ASL                                    ;2
(1)  562/    C81A :                             ;STA emu_ptr,X                  ;4
(1)  562/    C81A :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  562/    C81A :                             ;ADC #0                                 ;2
(1)  562/    C81A :                             ;STA emu_ptr+1,X                ;4
(1)  562/    C81A :                             ;LDA (emu_ptr,X)                ;6
(1)  562/    C81A :                             ;STA emu_ptr2,X                 ;4
(1)  562/    C81A :                             ;INC emu_ptr,X                  ;6
(1)  562/    C81A :                             ;BCC .skip                              ;2
(1)  562/    C81A :                             ;       INC emu_ptr+1,X         ;6
(1)  562/    C81A :                             ;.skip:
(1)  562/    C81A :                             ;LDA (emu_ptr,X)                ;6
(1)  562/    C81A :                             ;STA emu_ptr2+1,X               ;4
(1)  562/    C81A :                             ;JMP (emu_ptr2,X)               ;6
(1)  562/    C81A :                             
(1)  562/    C81A :                             ;Method 2 - 46 cycles
(1)  562/    C81A :                             ;Jump table must be page aligned!!!
(1)  562/    C81A :                             ;LDA (emu_PC,X)                 ;6
(1)  562/    C81A :                             ;STZ emu_ptr+1,X                ;4
(1)  562/    C81A :                             ;ASL                                    ;2
(1)  562/    C81A :                             ;ROL emu_ptr+1,X                ;6
(1)  562/    C81A :                             ;ASL                                    ;2
(1)  562/    C81A :                             ;ROL emu_ptr+1,X                ;6
(1)  562/    C81A :                             ;STA emu_ptr,X                  ;4                              
(1)  562/    C81A :                             ;LDA emu_ptr+1,X                ;4
(1)  562/    C81A :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  562/    C81A :                             ;STA emu_ptr+1,X                ;4
(1)  562/    C81A :                             ;JMP (emu_ptr2,X)               ;6
(1)  562/    C81A :                             
(1)  562/    C81A :                             ;Method 3 - 30 cycles
(1)  562/    C81A :                             ;TXA                                                    ;2
(1)  562/    C81A :                             ;TAY                                                    ;2
(1)  562/    C81A :                             ;LDA (emu_PC,X)                                 ;6
(1)  562/    C81A :                             ;ASL                                                    ;2
(1)  562/    C81A :                             ;BCS upper                                              ;2
(1)  562/    C81A :                             ;lower:
(1)  562/    C81A :                             ;       ASL                                                     ;2
(1)  562/    C81A :                             ;       TAX                                                     ;2
(1)  562/    C81A :                             ;       BCS upper_lower                         ;2
(1)  562/    C81A :                             ;       lower_lower:
(1)  562/    C81A :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  562/    C81A :                             ;       upper_lower:
(1)  562/    C81A :                             ;               JMP (JUMP_TABLE2,X)
(1)  562/    C81A :                             ;upper:
(1)  562/    C81A :                             ;       ASL
(1)  562/    C81A :                             ;       TAX
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 169 - 1/5/2022 12:19:0


(1)  562/    C81A :                             ;       BCS upper_upper
(1)  562/    C81A :                             ;       lower_upper:
(1)  562/    C81A :                             ;               JMP (JUMP_TABLE3,X)
(1)  562/    C81A :                             ;       upper_upper:
(1)  562/    C81A :                             ;               JMP (JUMP_TABLE4,X)
(1)  562/    C81A :                             ;After jump:
(1)  562/    C81A :                             ;TYA                                                    ;2
(1)  562/    C81A :                             ;TAX                                                    ;2
(1)  562/    C81A :                             
(1)  562/    C81A :                             ;Method 4 - 28 cycles
(1)  562/    C81A :                             ;LDA (emu_PC,X)                 ;6
(1)  562/    C81A :                             ;TAY                                    ;2
(1)  562/    C81A :                             ;LDA JUMP_TABLE,Y               ;4
(1)  562/    C81A :                             ;PHA                                    ;3
(1)  562/    C81A :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  562/    C81A :                             ;PHA                                    ;3
(1)  562/    C81A :                             ;RTS                                    ;6
(1)  562/    C81A :                             
(1)  562/    C81A :                             ;Method 5 - 30 cycles
(1)  562/    C81A : A1 02                       LDA (emu_PC,X)                  ;6
(1)  562/    C81C : A8                          TAY                                             ;2
(1)  562/    C81D : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  562/    C820 : 95 0A                       STA emu_ptr,X                   ;4
(1)  562/    C822 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  562/    C825 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  562/    C827 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  562/    C82A :                                                     
(1)  563/    C82A :                     
(1)  564/    C82A :                     	;0x70 - BVS REL
(1)  565/    C82A :                     	BVS_REL:
(1)  566/    C82A : (MACRO)             		OP_MACRO 112, "BVS", "REL", "BVS_REL"
(1)  566/    C82A :                             ;TODO
(1)  567/    C82A : (MACRO)             		NEXT_MACRO
(1)  567/    C82A :                                             
(1)  567/    C82A :  (MACRO-2)                  halt
(1)  567/    C82A : 00                          BRK
(1)  567/    C82B : 00                          BRK
(1)  567/    C82C :                             
(1)  567/    C82C :                             ;Method 1 - 60 cycles
(1)  567/    C82C :                             ;Jump table must be page aligned!!!
(1)  567/    C82C :                             ;LDA (emu_PC,X)                 ;6
(1)  567/    C82C :                             ;ASL                                    ;2
(1)  567/    C82C :                             ;STA emu_ptr,X                  ;4
(1)  567/    C82C :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  567/    C82C :                             ;ADC #0                                 ;2
(1)  567/    C82C :                             ;STA emu_ptr+1,X                ;4
(1)  567/    C82C :                             ;LDA (emu_ptr,X)                ;6
(1)  567/    C82C :                             ;STA emu_ptr2,X                 ;4
(1)  567/    C82C :                             ;INC emu_ptr,X                  ;6
(1)  567/    C82C :                             ;BCC .skip                              ;2
(1)  567/    C82C :                             ;       INC emu_ptr+1,X         ;6
(1)  567/    C82C :                             ;.skip:
(1)  567/    C82C :                             ;LDA (emu_ptr,X)                ;6
(1)  567/    C82C :                             ;STA emu_ptr2+1,X               ;4
(1)  567/    C82C :                             ;JMP (emu_ptr2,X)               ;6
(1)  567/    C82C :                             
(1)  567/    C82C :                             ;Method 2 - 46 cycles
(1)  567/    C82C :                             ;Jump table must be page aligned!!!
(1)  567/    C82C :                             ;LDA (emu_PC,X)                 ;6
(1)  567/    C82C :                             ;STZ emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 170 - 1/5/2022 12:19:0


(1)  567/    C82C :                             ;ASL                                    ;2
(1)  567/    C82C :                             ;ROL emu_ptr+1,X                ;6
(1)  567/    C82C :                             ;ASL                                    ;2
(1)  567/    C82C :                             ;ROL emu_ptr+1,X                ;6
(1)  567/    C82C :                             ;STA emu_ptr,X                  ;4                              
(1)  567/    C82C :                             ;LDA emu_ptr+1,X                ;4
(1)  567/    C82C :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  567/    C82C :                             ;STA emu_ptr+1,X                ;4
(1)  567/    C82C :                             ;JMP (emu_ptr2,X)               ;6
(1)  567/    C82C :                             
(1)  567/    C82C :                             ;Method 3 - 30 cycles
(1)  567/    C82C :                             ;TXA                                                    ;2
(1)  567/    C82C :                             ;TAY                                                    ;2
(1)  567/    C82C :                             ;LDA (emu_PC,X)                                 ;6
(1)  567/    C82C :                             ;ASL                                                    ;2
(1)  567/    C82C :                             ;BCS upper                                              ;2
(1)  567/    C82C :                             ;lower:
(1)  567/    C82C :                             ;       ASL                                                     ;2
(1)  567/    C82C :                             ;       TAX                                                     ;2
(1)  567/    C82C :                             ;       BCS upper_lower                         ;2
(1)  567/    C82C :                             ;       lower_lower:
(1)  567/    C82C :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  567/    C82C :                             ;       upper_lower:
(1)  567/    C82C :                             ;               JMP (JUMP_TABLE2,X)
(1)  567/    C82C :                             ;upper:
(1)  567/    C82C :                             ;       ASL
(1)  567/    C82C :                             ;       TAX
(1)  567/    C82C :                             ;       BCS upper_upper
(1)  567/    C82C :                             ;       lower_upper:
(1)  567/    C82C :                             ;               JMP (JUMP_TABLE3,X)
(1)  567/    C82C :                             ;       upper_upper:
(1)  567/    C82C :                             ;               JMP (JUMP_TABLE4,X)
(1)  567/    C82C :                             ;After jump:
(1)  567/    C82C :                             ;TYA                                                    ;2
(1)  567/    C82C :                             ;TAX                                                    ;2
(1)  567/    C82C :                             
(1)  567/    C82C :                             ;Method 4 - 28 cycles
(1)  567/    C82C :                             ;LDA (emu_PC,X)                 ;6
(1)  567/    C82C :                             ;TAY                                    ;2
(1)  567/    C82C :                             ;LDA JUMP_TABLE,Y               ;4
(1)  567/    C82C :                             ;PHA                                    ;3
(1)  567/    C82C :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  567/    C82C :                             ;PHA                                    ;3
(1)  567/    C82C :                             ;RTS                                    ;6
(1)  567/    C82C :                             
(1)  567/    C82C :                             ;Method 5 - 30 cycles
(1)  567/    C82C : A1 02                       LDA (emu_PC,X)                  ;6
(1)  567/    C82E : A8                          TAY                                             ;2
(1)  567/    C82F : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  567/    C832 : 95 0A                       STA emu_ptr,X                   ;4
(1)  567/    C834 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  567/    C837 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  567/    C839 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  567/    C83C :                                                     
(1)  568/    C83C :                     
(1)  569/    C83C :                     	;0x71 - ADC IY
(1)  570/    C83C :                     	ADC_IY:
(1)  571/    C83C : (MACRO)             		OP_MACRO 113, "ADC", "IY", "ADC_IY"
(1)  571/    C83C :                             ;TODO
(1)  572/    C83C : (MACRO)             		NEXT_MACRO
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 171 - 1/5/2022 12:19:0


(1)  572/    C83C :                                             
(1)  572/    C83C :  (MACRO-2)                  halt
(1)  572/    C83C : 00                          BRK
(1)  572/    C83D : 00                          BRK
(1)  572/    C83E :                             
(1)  572/    C83E :                             ;Method 1 - 60 cycles
(1)  572/    C83E :                             ;Jump table must be page aligned!!!
(1)  572/    C83E :                             ;LDA (emu_PC,X)                 ;6
(1)  572/    C83E :                             ;ASL                                    ;2
(1)  572/    C83E :                             ;STA emu_ptr,X                  ;4
(1)  572/    C83E :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  572/    C83E :                             ;ADC #0                                 ;2
(1)  572/    C83E :                             ;STA emu_ptr+1,X                ;4
(1)  572/    C83E :                             ;LDA (emu_ptr,X)                ;6
(1)  572/    C83E :                             ;STA emu_ptr2,X                 ;4
(1)  572/    C83E :                             ;INC emu_ptr,X                  ;6
(1)  572/    C83E :                             ;BCC .skip                              ;2
(1)  572/    C83E :                             ;       INC emu_ptr+1,X         ;6
(1)  572/    C83E :                             ;.skip:
(1)  572/    C83E :                             ;LDA (emu_ptr,X)                ;6
(1)  572/    C83E :                             ;STA emu_ptr2+1,X               ;4
(1)  572/    C83E :                             ;JMP (emu_ptr2,X)               ;6
(1)  572/    C83E :                             
(1)  572/    C83E :                             ;Method 2 - 46 cycles
(1)  572/    C83E :                             ;Jump table must be page aligned!!!
(1)  572/    C83E :                             ;LDA (emu_PC,X)                 ;6
(1)  572/    C83E :                             ;STZ emu_ptr+1,X                ;4
(1)  572/    C83E :                             ;ASL                                    ;2
(1)  572/    C83E :                             ;ROL emu_ptr+1,X                ;6
(1)  572/    C83E :                             ;ASL                                    ;2
(1)  572/    C83E :                             ;ROL emu_ptr+1,X                ;6
(1)  572/    C83E :                             ;STA emu_ptr,X                  ;4                              
(1)  572/    C83E :                             ;LDA emu_ptr+1,X                ;4
(1)  572/    C83E :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  572/    C83E :                             ;STA emu_ptr+1,X                ;4
(1)  572/    C83E :                             ;JMP (emu_ptr2,X)               ;6
(1)  572/    C83E :                             
(1)  572/    C83E :                             ;Method 3 - 30 cycles
(1)  572/    C83E :                             ;TXA                                                    ;2
(1)  572/    C83E :                             ;TAY                                                    ;2
(1)  572/    C83E :                             ;LDA (emu_PC,X)                                 ;6
(1)  572/    C83E :                             ;ASL                                                    ;2
(1)  572/    C83E :                             ;BCS upper                                              ;2
(1)  572/    C83E :                             ;lower:
(1)  572/    C83E :                             ;       ASL                                                     ;2
(1)  572/    C83E :                             ;       TAX                                                     ;2
(1)  572/    C83E :                             ;       BCS upper_lower                         ;2
(1)  572/    C83E :                             ;       lower_lower:
(1)  572/    C83E :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  572/    C83E :                             ;       upper_lower:
(1)  572/    C83E :                             ;               JMP (JUMP_TABLE2,X)
(1)  572/    C83E :                             ;upper:
(1)  572/    C83E :                             ;       ASL
(1)  572/    C83E :                             ;       TAX
(1)  572/    C83E :                             ;       BCS upper_upper
(1)  572/    C83E :                             ;       lower_upper:
(1)  572/    C83E :                             ;               JMP (JUMP_TABLE3,X)
(1)  572/    C83E :                             ;       upper_upper:
(1)  572/    C83E :                             ;               JMP (JUMP_TABLE4,X)
(1)  572/    C83E :                             ;After jump:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 172 - 1/5/2022 12:19:0


(1)  572/    C83E :                             ;TYA                                                    ;2
(1)  572/    C83E :                             ;TAX                                                    ;2
(1)  572/    C83E :                             
(1)  572/    C83E :                             ;Method 4 - 28 cycles
(1)  572/    C83E :                             ;LDA (emu_PC,X)                 ;6
(1)  572/    C83E :                             ;TAY                                    ;2
(1)  572/    C83E :                             ;LDA JUMP_TABLE,Y               ;4
(1)  572/    C83E :                             ;PHA                                    ;3
(1)  572/    C83E :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  572/    C83E :                             ;PHA                                    ;3
(1)  572/    C83E :                             ;RTS                                    ;6
(1)  572/    C83E :                             
(1)  572/    C83E :                             ;Method 5 - 30 cycles
(1)  572/    C83E : A1 02                       LDA (emu_PC,X)                  ;6
(1)  572/    C840 : A8                          TAY                                             ;2
(1)  572/    C841 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  572/    C844 : 95 0A                       STA emu_ptr,X                   ;4
(1)  572/    C846 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  572/    C849 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  572/    C84B : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  572/    C84E :                                                     
(1)  573/    C84E :                     
(1)  574/    C84E :                     	;0x72 - NOP
(1)  575/    C84E :                     	NOP_0x72:
(1)  576/    C84E : (MACRO)             		OP_MACRO 114, "NOP", "IMP", "NOP_0x72"
(1)  576/    C84E :                             ;TODO
(1)  577/    C84E : (MACRO)             		NEXT_MACRO
(1)  577/    C84E :                                             
(1)  577/    C84E :  (MACRO-2)                  halt
(1)  577/    C84E : 00                          BRK
(1)  577/    C84F : 00                          BRK
(1)  577/    C850 :                             
(1)  577/    C850 :                             ;Method 1 - 60 cycles
(1)  577/    C850 :                             ;Jump table must be page aligned!!!
(1)  577/    C850 :                             ;LDA (emu_PC,X)                 ;6
(1)  577/    C850 :                             ;ASL                                    ;2
(1)  577/    C850 :                             ;STA emu_ptr,X                  ;4
(1)  577/    C850 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  577/    C850 :                             ;ADC #0                                 ;2
(1)  577/    C850 :                             ;STA emu_ptr+1,X                ;4
(1)  577/    C850 :                             ;LDA (emu_ptr,X)                ;6
(1)  577/    C850 :                             ;STA emu_ptr2,X                 ;4
(1)  577/    C850 :                             ;INC emu_ptr,X                  ;6
(1)  577/    C850 :                             ;BCC .skip                              ;2
(1)  577/    C850 :                             ;       INC emu_ptr+1,X         ;6
(1)  577/    C850 :                             ;.skip:
(1)  577/    C850 :                             ;LDA (emu_ptr,X)                ;6
(1)  577/    C850 :                             ;STA emu_ptr2+1,X               ;4
(1)  577/    C850 :                             ;JMP (emu_ptr2,X)               ;6
(1)  577/    C850 :                             
(1)  577/    C850 :                             ;Method 2 - 46 cycles
(1)  577/    C850 :                             ;Jump table must be page aligned!!!
(1)  577/    C850 :                             ;LDA (emu_PC,X)                 ;6
(1)  577/    C850 :                             ;STZ emu_ptr+1,X                ;4
(1)  577/    C850 :                             ;ASL                                    ;2
(1)  577/    C850 :                             ;ROL emu_ptr+1,X                ;6
(1)  577/    C850 :                             ;ASL                                    ;2
(1)  577/    C850 :                             ;ROL emu_ptr+1,X                ;6
(1)  577/    C850 :                             ;STA emu_ptr,X                  ;4                              
(1)  577/    C850 :                             ;LDA emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 173 - 1/5/2022 12:19:0


(1)  577/    C850 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  577/    C850 :                             ;STA emu_ptr+1,X                ;4
(1)  577/    C850 :                             ;JMP (emu_ptr2,X)               ;6
(1)  577/    C850 :                             
(1)  577/    C850 :                             ;Method 3 - 30 cycles
(1)  577/    C850 :                             ;TXA                                                    ;2
(1)  577/    C850 :                             ;TAY                                                    ;2
(1)  577/    C850 :                             ;LDA (emu_PC,X)                                 ;6
(1)  577/    C850 :                             ;ASL                                                    ;2
(1)  577/    C850 :                             ;BCS upper                                              ;2
(1)  577/    C850 :                             ;lower:
(1)  577/    C850 :                             ;       ASL                                                     ;2
(1)  577/    C850 :                             ;       TAX                                                     ;2
(1)  577/    C850 :                             ;       BCS upper_lower                         ;2
(1)  577/    C850 :                             ;       lower_lower:
(1)  577/    C850 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  577/    C850 :                             ;       upper_lower:
(1)  577/    C850 :                             ;               JMP (JUMP_TABLE2,X)
(1)  577/    C850 :                             ;upper:
(1)  577/    C850 :                             ;       ASL
(1)  577/    C850 :                             ;       TAX
(1)  577/    C850 :                             ;       BCS upper_upper
(1)  577/    C850 :                             ;       lower_upper:
(1)  577/    C850 :                             ;               JMP (JUMP_TABLE3,X)
(1)  577/    C850 :                             ;       upper_upper:
(1)  577/    C850 :                             ;               JMP (JUMP_TABLE4,X)
(1)  577/    C850 :                             ;After jump:
(1)  577/    C850 :                             ;TYA                                                    ;2
(1)  577/    C850 :                             ;TAX                                                    ;2
(1)  577/    C850 :                             
(1)  577/    C850 :                             ;Method 4 - 28 cycles
(1)  577/    C850 :                             ;LDA (emu_PC,X)                 ;6
(1)  577/    C850 :                             ;TAY                                    ;2
(1)  577/    C850 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  577/    C850 :                             ;PHA                                    ;3
(1)  577/    C850 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  577/    C850 :                             ;PHA                                    ;3
(1)  577/    C850 :                             ;RTS                                    ;6
(1)  577/    C850 :                             
(1)  577/    C850 :                             ;Method 5 - 30 cycles
(1)  577/    C850 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  577/    C852 : A8                          TAY                                             ;2
(1)  577/    C853 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  577/    C856 : 95 0A                       STA emu_ptr,X                   ;4
(1)  577/    C858 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  577/    C85B : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  577/    C85D : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  577/    C860 :                                                     
(1)  578/    C860 :                     
(1)  579/    C860 :                     	;0x73 - NOP
(1)  580/    C860 :                     	NOP_0x73:
(1)  581/    C860 : (MACRO)             		OP_MACRO 115, "NOP", "IMP", "NOP_0x73"
(1)  581/    C860 :                             ;TODO
(1)  582/    C860 : (MACRO)             		NEXT_MACRO
(1)  582/    C860 :                                             
(1)  582/    C860 :  (MACRO-2)                  halt
(1)  582/    C860 : 00                          BRK
(1)  582/    C861 : 00                          BRK
(1)  582/    C862 :                             
(1)  582/    C862 :                             ;Method 1 - 60 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 174 - 1/5/2022 12:19:0


(1)  582/    C862 :                             ;Jump table must be page aligned!!!
(1)  582/    C862 :                             ;LDA (emu_PC,X)                 ;6
(1)  582/    C862 :                             ;ASL                                    ;2
(1)  582/    C862 :                             ;STA emu_ptr,X                  ;4
(1)  582/    C862 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  582/    C862 :                             ;ADC #0                                 ;2
(1)  582/    C862 :                             ;STA emu_ptr+1,X                ;4
(1)  582/    C862 :                             ;LDA (emu_ptr,X)                ;6
(1)  582/    C862 :                             ;STA emu_ptr2,X                 ;4
(1)  582/    C862 :                             ;INC emu_ptr,X                  ;6
(1)  582/    C862 :                             ;BCC .skip                              ;2
(1)  582/    C862 :                             ;       INC emu_ptr+1,X         ;6
(1)  582/    C862 :                             ;.skip:
(1)  582/    C862 :                             ;LDA (emu_ptr,X)                ;6
(1)  582/    C862 :                             ;STA emu_ptr2+1,X               ;4
(1)  582/    C862 :                             ;JMP (emu_ptr2,X)               ;6
(1)  582/    C862 :                             
(1)  582/    C862 :                             ;Method 2 - 46 cycles
(1)  582/    C862 :                             ;Jump table must be page aligned!!!
(1)  582/    C862 :                             ;LDA (emu_PC,X)                 ;6
(1)  582/    C862 :                             ;STZ emu_ptr+1,X                ;4
(1)  582/    C862 :                             ;ASL                                    ;2
(1)  582/    C862 :                             ;ROL emu_ptr+1,X                ;6
(1)  582/    C862 :                             ;ASL                                    ;2
(1)  582/    C862 :                             ;ROL emu_ptr+1,X                ;6
(1)  582/    C862 :                             ;STA emu_ptr,X                  ;4                              
(1)  582/    C862 :                             ;LDA emu_ptr+1,X                ;4
(1)  582/    C862 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  582/    C862 :                             ;STA emu_ptr+1,X                ;4
(1)  582/    C862 :                             ;JMP (emu_ptr2,X)               ;6
(1)  582/    C862 :                             
(1)  582/    C862 :                             ;Method 3 - 30 cycles
(1)  582/    C862 :                             ;TXA                                                    ;2
(1)  582/    C862 :                             ;TAY                                                    ;2
(1)  582/    C862 :                             ;LDA (emu_PC,X)                                 ;6
(1)  582/    C862 :                             ;ASL                                                    ;2
(1)  582/    C862 :                             ;BCS upper                                              ;2
(1)  582/    C862 :                             ;lower:
(1)  582/    C862 :                             ;       ASL                                                     ;2
(1)  582/    C862 :                             ;       TAX                                                     ;2
(1)  582/    C862 :                             ;       BCS upper_lower                         ;2
(1)  582/    C862 :                             ;       lower_lower:
(1)  582/    C862 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  582/    C862 :                             ;       upper_lower:
(1)  582/    C862 :                             ;               JMP (JUMP_TABLE2,X)
(1)  582/    C862 :                             ;upper:
(1)  582/    C862 :                             ;       ASL
(1)  582/    C862 :                             ;       TAX
(1)  582/    C862 :                             ;       BCS upper_upper
(1)  582/    C862 :                             ;       lower_upper:
(1)  582/    C862 :                             ;               JMP (JUMP_TABLE3,X)
(1)  582/    C862 :                             ;       upper_upper:
(1)  582/    C862 :                             ;               JMP (JUMP_TABLE4,X)
(1)  582/    C862 :                             ;After jump:
(1)  582/    C862 :                             ;TYA                                                    ;2
(1)  582/    C862 :                             ;TAX                                                    ;2
(1)  582/    C862 :                             
(1)  582/    C862 :                             ;Method 4 - 28 cycles
(1)  582/    C862 :                             ;LDA (emu_PC,X)                 ;6
(1)  582/    C862 :                             ;TAY                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 175 - 1/5/2022 12:19:0


(1)  582/    C862 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  582/    C862 :                             ;PHA                                    ;3
(1)  582/    C862 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  582/    C862 :                             ;PHA                                    ;3
(1)  582/    C862 :                             ;RTS                                    ;6
(1)  582/    C862 :                             
(1)  582/    C862 :                             ;Method 5 - 30 cycles
(1)  582/    C862 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  582/    C864 : A8                          TAY                                             ;2
(1)  582/    C865 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  582/    C868 : 95 0A                       STA emu_ptr,X                   ;4
(1)  582/    C86A : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  582/    C86D : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  582/    C86F : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  582/    C872 :                                                     
(1)  583/    C872 :                     
(1)  584/    C872 :                     	;0x74 - NOP
(1)  585/    C872 :                     	NOP_0x74:
(1)  586/    C872 : (MACRO)             		OP_MACRO 116, "NOP", "IMP", "NOP_0x74"
(1)  586/    C872 :                             ;TODO
(1)  587/    C872 : (MACRO)             		NEXT_MACRO
(1)  587/    C872 :                                             
(1)  587/    C872 :  (MACRO-2)                  halt
(1)  587/    C872 : 00                          BRK
(1)  587/    C873 : 00                          BRK
(1)  587/    C874 :                             
(1)  587/    C874 :                             ;Method 1 - 60 cycles
(1)  587/    C874 :                             ;Jump table must be page aligned!!!
(1)  587/    C874 :                             ;LDA (emu_PC,X)                 ;6
(1)  587/    C874 :                             ;ASL                                    ;2
(1)  587/    C874 :                             ;STA emu_ptr,X                  ;4
(1)  587/    C874 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  587/    C874 :                             ;ADC #0                                 ;2
(1)  587/    C874 :                             ;STA emu_ptr+1,X                ;4
(1)  587/    C874 :                             ;LDA (emu_ptr,X)                ;6
(1)  587/    C874 :                             ;STA emu_ptr2,X                 ;4
(1)  587/    C874 :                             ;INC emu_ptr,X                  ;6
(1)  587/    C874 :                             ;BCC .skip                              ;2
(1)  587/    C874 :                             ;       INC emu_ptr+1,X         ;6
(1)  587/    C874 :                             ;.skip:
(1)  587/    C874 :                             ;LDA (emu_ptr,X)                ;6
(1)  587/    C874 :                             ;STA emu_ptr2+1,X               ;4
(1)  587/    C874 :                             ;JMP (emu_ptr2,X)               ;6
(1)  587/    C874 :                             
(1)  587/    C874 :                             ;Method 2 - 46 cycles
(1)  587/    C874 :                             ;Jump table must be page aligned!!!
(1)  587/    C874 :                             ;LDA (emu_PC,X)                 ;6
(1)  587/    C874 :                             ;STZ emu_ptr+1,X                ;4
(1)  587/    C874 :                             ;ASL                                    ;2
(1)  587/    C874 :                             ;ROL emu_ptr+1,X                ;6
(1)  587/    C874 :                             ;ASL                                    ;2
(1)  587/    C874 :                             ;ROL emu_ptr+1,X                ;6
(1)  587/    C874 :                             ;STA emu_ptr,X                  ;4                              
(1)  587/    C874 :                             ;LDA emu_ptr+1,X                ;4
(1)  587/    C874 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  587/    C874 :                             ;STA emu_ptr+1,X                ;4
(1)  587/    C874 :                             ;JMP (emu_ptr2,X)               ;6
(1)  587/    C874 :                             
(1)  587/    C874 :                             ;Method 3 - 30 cycles
(1)  587/    C874 :                             ;TXA                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 176 - 1/5/2022 12:19:0


(1)  587/    C874 :                             ;TAY                                                    ;2
(1)  587/    C874 :                             ;LDA (emu_PC,X)                                 ;6
(1)  587/    C874 :                             ;ASL                                                    ;2
(1)  587/    C874 :                             ;BCS upper                                              ;2
(1)  587/    C874 :                             ;lower:
(1)  587/    C874 :                             ;       ASL                                                     ;2
(1)  587/    C874 :                             ;       TAX                                                     ;2
(1)  587/    C874 :                             ;       BCS upper_lower                         ;2
(1)  587/    C874 :                             ;       lower_lower:
(1)  587/    C874 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  587/    C874 :                             ;       upper_lower:
(1)  587/    C874 :                             ;               JMP (JUMP_TABLE2,X)
(1)  587/    C874 :                             ;upper:
(1)  587/    C874 :                             ;       ASL
(1)  587/    C874 :                             ;       TAX
(1)  587/    C874 :                             ;       BCS upper_upper
(1)  587/    C874 :                             ;       lower_upper:
(1)  587/    C874 :                             ;               JMP (JUMP_TABLE3,X)
(1)  587/    C874 :                             ;       upper_upper:
(1)  587/    C874 :                             ;               JMP (JUMP_TABLE4,X)
(1)  587/    C874 :                             ;After jump:
(1)  587/    C874 :                             ;TYA                                                    ;2
(1)  587/    C874 :                             ;TAX                                                    ;2
(1)  587/    C874 :                             
(1)  587/    C874 :                             ;Method 4 - 28 cycles
(1)  587/    C874 :                             ;LDA (emu_PC,X)                 ;6
(1)  587/    C874 :                             ;TAY                                    ;2
(1)  587/    C874 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  587/    C874 :                             ;PHA                                    ;3
(1)  587/    C874 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  587/    C874 :                             ;PHA                                    ;3
(1)  587/    C874 :                             ;RTS                                    ;6
(1)  587/    C874 :                             
(1)  587/    C874 :                             ;Method 5 - 30 cycles
(1)  587/    C874 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  587/    C876 : A8                          TAY                                             ;2
(1)  587/    C877 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  587/    C87A : 95 0A                       STA emu_ptr,X                   ;4
(1)  587/    C87C : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  587/    C87F : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  587/    C881 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  587/    C884 :                                                     
(1)  588/    C884 :                     
(1)  589/    C884 :                     	;0x75 - ADC ZPX
(1)  590/    C884 :                     	ADC_ZPX:
(1)  591/    C884 : (MACRO)             		OP_MACRO 117, "ADC", "ZPX", "ADC_ZPX"
(1)  591/    C884 :                             ;TODO
(1)  592/    C884 : (MACRO)             		NEXT_MACRO
(1)  592/    C884 :                                             
(1)  592/    C884 :  (MACRO-2)                  halt
(1)  592/    C884 : 00                          BRK
(1)  592/    C885 : 00                          BRK
(1)  592/    C886 :                             
(1)  592/    C886 :                             ;Method 1 - 60 cycles
(1)  592/    C886 :                             ;Jump table must be page aligned!!!
(1)  592/    C886 :                             ;LDA (emu_PC,X)                 ;6
(1)  592/    C886 :                             ;ASL                                    ;2
(1)  592/    C886 :                             ;STA emu_ptr,X                  ;4
(1)  592/    C886 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  592/    C886 :                             ;ADC #0                                 ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 177 - 1/5/2022 12:19:0


(1)  592/    C886 :                             ;STA emu_ptr+1,X                ;4
(1)  592/    C886 :                             ;LDA (emu_ptr,X)                ;6
(1)  592/    C886 :                             ;STA emu_ptr2,X                 ;4
(1)  592/    C886 :                             ;INC emu_ptr,X                  ;6
(1)  592/    C886 :                             ;BCC .skip                              ;2
(1)  592/    C886 :                             ;       INC emu_ptr+1,X         ;6
(1)  592/    C886 :                             ;.skip:
(1)  592/    C886 :                             ;LDA (emu_ptr,X)                ;6
(1)  592/    C886 :                             ;STA emu_ptr2+1,X               ;4
(1)  592/    C886 :                             ;JMP (emu_ptr2,X)               ;6
(1)  592/    C886 :                             
(1)  592/    C886 :                             ;Method 2 - 46 cycles
(1)  592/    C886 :                             ;Jump table must be page aligned!!!
(1)  592/    C886 :                             ;LDA (emu_PC,X)                 ;6
(1)  592/    C886 :                             ;STZ emu_ptr+1,X                ;4
(1)  592/    C886 :                             ;ASL                                    ;2
(1)  592/    C886 :                             ;ROL emu_ptr+1,X                ;6
(1)  592/    C886 :                             ;ASL                                    ;2
(1)  592/    C886 :                             ;ROL emu_ptr+1,X                ;6
(1)  592/    C886 :                             ;STA emu_ptr,X                  ;4                              
(1)  592/    C886 :                             ;LDA emu_ptr+1,X                ;4
(1)  592/    C886 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  592/    C886 :                             ;STA emu_ptr+1,X                ;4
(1)  592/    C886 :                             ;JMP (emu_ptr2,X)               ;6
(1)  592/    C886 :                             
(1)  592/    C886 :                             ;Method 3 - 30 cycles
(1)  592/    C886 :                             ;TXA                                                    ;2
(1)  592/    C886 :                             ;TAY                                                    ;2
(1)  592/    C886 :                             ;LDA (emu_PC,X)                                 ;6
(1)  592/    C886 :                             ;ASL                                                    ;2
(1)  592/    C886 :                             ;BCS upper                                              ;2
(1)  592/    C886 :                             ;lower:
(1)  592/    C886 :                             ;       ASL                                                     ;2
(1)  592/    C886 :                             ;       TAX                                                     ;2
(1)  592/    C886 :                             ;       BCS upper_lower                         ;2
(1)  592/    C886 :                             ;       lower_lower:
(1)  592/    C886 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  592/    C886 :                             ;       upper_lower:
(1)  592/    C886 :                             ;               JMP (JUMP_TABLE2,X)
(1)  592/    C886 :                             ;upper:
(1)  592/    C886 :                             ;       ASL
(1)  592/    C886 :                             ;       TAX
(1)  592/    C886 :                             ;       BCS upper_upper
(1)  592/    C886 :                             ;       lower_upper:
(1)  592/    C886 :                             ;               JMP (JUMP_TABLE3,X)
(1)  592/    C886 :                             ;       upper_upper:
(1)  592/    C886 :                             ;               JMP (JUMP_TABLE4,X)
(1)  592/    C886 :                             ;After jump:
(1)  592/    C886 :                             ;TYA                                                    ;2
(1)  592/    C886 :                             ;TAX                                                    ;2
(1)  592/    C886 :                             
(1)  592/    C886 :                             ;Method 4 - 28 cycles
(1)  592/    C886 :                             ;LDA (emu_PC,X)                 ;6
(1)  592/    C886 :                             ;TAY                                    ;2
(1)  592/    C886 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  592/    C886 :                             ;PHA                                    ;3
(1)  592/    C886 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  592/    C886 :                             ;PHA                                    ;3
(1)  592/    C886 :                             ;RTS                                    ;6
(1)  592/    C886 :                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 178 - 1/5/2022 12:19:0


(1)  592/    C886 :                             ;Method 5 - 30 cycles
(1)  592/    C886 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  592/    C888 : A8                          TAY                                             ;2
(1)  592/    C889 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  592/    C88C : 95 0A                       STA emu_ptr,X                   ;4
(1)  592/    C88E : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  592/    C891 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  592/    C893 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  592/    C896 :                                                     
(1)  593/    C896 :                     
(1)  594/    C896 :                     	;0x76 - ROR ZPX
(1)  595/    C896 :                     	ROR_ZPX:
(1)  596/    C896 : (MACRO)             		OP_MACRO 118, "ROR", "ZPX", "ROR_ZPX"
(1)  596/    C896 :                             ;TODO
(1)  597/    C896 : (MACRO)             		NEXT_MACRO
(1)  597/    C896 :                                             
(1)  597/    C896 :  (MACRO-2)                  halt
(1)  597/    C896 : 00                          BRK
(1)  597/    C897 : 00                          BRK
(1)  597/    C898 :                             
(1)  597/    C898 :                             ;Method 1 - 60 cycles
(1)  597/    C898 :                             ;Jump table must be page aligned!!!
(1)  597/    C898 :                             ;LDA (emu_PC,X)                 ;6
(1)  597/    C898 :                             ;ASL                                    ;2
(1)  597/    C898 :                             ;STA emu_ptr,X                  ;4
(1)  597/    C898 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  597/    C898 :                             ;ADC #0                                 ;2
(1)  597/    C898 :                             ;STA emu_ptr+1,X                ;4
(1)  597/    C898 :                             ;LDA (emu_ptr,X)                ;6
(1)  597/    C898 :                             ;STA emu_ptr2,X                 ;4
(1)  597/    C898 :                             ;INC emu_ptr,X                  ;6
(1)  597/    C898 :                             ;BCC .skip                              ;2
(1)  597/    C898 :                             ;       INC emu_ptr+1,X         ;6
(1)  597/    C898 :                             ;.skip:
(1)  597/    C898 :                             ;LDA (emu_ptr,X)                ;6
(1)  597/    C898 :                             ;STA emu_ptr2+1,X               ;4
(1)  597/    C898 :                             ;JMP (emu_ptr2,X)               ;6
(1)  597/    C898 :                             
(1)  597/    C898 :                             ;Method 2 - 46 cycles
(1)  597/    C898 :                             ;Jump table must be page aligned!!!
(1)  597/    C898 :                             ;LDA (emu_PC,X)                 ;6
(1)  597/    C898 :                             ;STZ emu_ptr+1,X                ;4
(1)  597/    C898 :                             ;ASL                                    ;2
(1)  597/    C898 :                             ;ROL emu_ptr+1,X                ;6
(1)  597/    C898 :                             ;ASL                                    ;2
(1)  597/    C898 :                             ;ROL emu_ptr+1,X                ;6
(1)  597/    C898 :                             ;STA emu_ptr,X                  ;4                              
(1)  597/    C898 :                             ;LDA emu_ptr+1,X                ;4
(1)  597/    C898 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  597/    C898 :                             ;STA emu_ptr+1,X                ;4
(1)  597/    C898 :                             ;JMP (emu_ptr2,X)               ;6
(1)  597/    C898 :                             
(1)  597/    C898 :                             ;Method 3 - 30 cycles
(1)  597/    C898 :                             ;TXA                                                    ;2
(1)  597/    C898 :                             ;TAY                                                    ;2
(1)  597/    C898 :                             ;LDA (emu_PC,X)                                 ;6
(1)  597/    C898 :                             ;ASL                                                    ;2
(1)  597/    C898 :                             ;BCS upper                                              ;2
(1)  597/    C898 :                             ;lower:
(1)  597/    C898 :                             ;       ASL                                                     ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 179 - 1/5/2022 12:19:0


(1)  597/    C898 :                             ;       TAX                                                     ;2
(1)  597/    C898 :                             ;       BCS upper_lower                         ;2
(1)  597/    C898 :                             ;       lower_lower:
(1)  597/    C898 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  597/    C898 :                             ;       upper_lower:
(1)  597/    C898 :                             ;               JMP (JUMP_TABLE2,X)
(1)  597/    C898 :                             ;upper:
(1)  597/    C898 :                             ;       ASL
(1)  597/    C898 :                             ;       TAX
(1)  597/    C898 :                             ;       BCS upper_upper
(1)  597/    C898 :                             ;       lower_upper:
(1)  597/    C898 :                             ;               JMP (JUMP_TABLE3,X)
(1)  597/    C898 :                             ;       upper_upper:
(1)  597/    C898 :                             ;               JMP (JUMP_TABLE4,X)
(1)  597/    C898 :                             ;After jump:
(1)  597/    C898 :                             ;TYA                                                    ;2
(1)  597/    C898 :                             ;TAX                                                    ;2
(1)  597/    C898 :                             
(1)  597/    C898 :                             ;Method 4 - 28 cycles
(1)  597/    C898 :                             ;LDA (emu_PC,X)                 ;6
(1)  597/    C898 :                             ;TAY                                    ;2
(1)  597/    C898 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  597/    C898 :                             ;PHA                                    ;3
(1)  597/    C898 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  597/    C898 :                             ;PHA                                    ;3
(1)  597/    C898 :                             ;RTS                                    ;6
(1)  597/    C898 :                             
(1)  597/    C898 :                             ;Method 5 - 30 cycles
(1)  597/    C898 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  597/    C89A : A8                          TAY                                             ;2
(1)  597/    C89B : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  597/    C89E : 95 0A                       STA emu_ptr,X                   ;4
(1)  597/    C8A0 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  597/    C8A3 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  597/    C8A5 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  597/    C8A8 :                                                     
(1)  598/    C8A8 :                     
(1)  599/    C8A8 :                     	;0x77 - NOP
(1)  600/    C8A8 :                     	NOP_0x77:
(1)  601/    C8A8 : (MACRO)             		OP_MACRO 119, "NOP", "IMP", "NOP_0x77"
(1)  601/    C8A8 :                             ;TODO
(1)  602/    C8A8 : (MACRO)             		NEXT_MACRO
(1)  602/    C8A8 :                                             
(1)  602/    C8A8 :  (MACRO-2)                  halt
(1)  602/    C8A8 : 00                          BRK
(1)  602/    C8A9 : 00                          BRK
(1)  602/    C8AA :                             
(1)  602/    C8AA :                             ;Method 1 - 60 cycles
(1)  602/    C8AA :                             ;Jump table must be page aligned!!!
(1)  602/    C8AA :                             ;LDA (emu_PC,X)                 ;6
(1)  602/    C8AA :                             ;ASL                                    ;2
(1)  602/    C8AA :                             ;STA emu_ptr,X                  ;4
(1)  602/    C8AA :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  602/    C8AA :                             ;ADC #0                                 ;2
(1)  602/    C8AA :                             ;STA emu_ptr+1,X                ;4
(1)  602/    C8AA :                             ;LDA (emu_ptr,X)                ;6
(1)  602/    C8AA :                             ;STA emu_ptr2,X                 ;4
(1)  602/    C8AA :                             ;INC emu_ptr,X                  ;6
(1)  602/    C8AA :                             ;BCC .skip                              ;2
(1)  602/    C8AA :                             ;       INC emu_ptr+1,X         ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 180 - 1/5/2022 12:19:0


(1)  602/    C8AA :                             ;.skip:
(1)  602/    C8AA :                             ;LDA (emu_ptr,X)                ;6
(1)  602/    C8AA :                             ;STA emu_ptr2+1,X               ;4
(1)  602/    C8AA :                             ;JMP (emu_ptr2,X)               ;6
(1)  602/    C8AA :                             
(1)  602/    C8AA :                             ;Method 2 - 46 cycles
(1)  602/    C8AA :                             ;Jump table must be page aligned!!!
(1)  602/    C8AA :                             ;LDA (emu_PC,X)                 ;6
(1)  602/    C8AA :                             ;STZ emu_ptr+1,X                ;4
(1)  602/    C8AA :                             ;ASL                                    ;2
(1)  602/    C8AA :                             ;ROL emu_ptr+1,X                ;6
(1)  602/    C8AA :                             ;ASL                                    ;2
(1)  602/    C8AA :                             ;ROL emu_ptr+1,X                ;6
(1)  602/    C8AA :                             ;STA emu_ptr,X                  ;4                              
(1)  602/    C8AA :                             ;LDA emu_ptr+1,X                ;4
(1)  602/    C8AA :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  602/    C8AA :                             ;STA emu_ptr+1,X                ;4
(1)  602/    C8AA :                             ;JMP (emu_ptr2,X)               ;6
(1)  602/    C8AA :                             
(1)  602/    C8AA :                             ;Method 3 - 30 cycles
(1)  602/    C8AA :                             ;TXA                                                    ;2
(1)  602/    C8AA :                             ;TAY                                                    ;2
(1)  602/    C8AA :                             ;LDA (emu_PC,X)                                 ;6
(1)  602/    C8AA :                             ;ASL                                                    ;2
(1)  602/    C8AA :                             ;BCS upper                                              ;2
(1)  602/    C8AA :                             ;lower:
(1)  602/    C8AA :                             ;       ASL                                                     ;2
(1)  602/    C8AA :                             ;       TAX                                                     ;2
(1)  602/    C8AA :                             ;       BCS upper_lower                         ;2
(1)  602/    C8AA :                             ;       lower_lower:
(1)  602/    C8AA :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  602/    C8AA :                             ;       upper_lower:
(1)  602/    C8AA :                             ;               JMP (JUMP_TABLE2,X)
(1)  602/    C8AA :                             ;upper:
(1)  602/    C8AA :                             ;       ASL
(1)  602/    C8AA :                             ;       TAX
(1)  602/    C8AA :                             ;       BCS upper_upper
(1)  602/    C8AA :                             ;       lower_upper:
(1)  602/    C8AA :                             ;               JMP (JUMP_TABLE3,X)
(1)  602/    C8AA :                             ;       upper_upper:
(1)  602/    C8AA :                             ;               JMP (JUMP_TABLE4,X)
(1)  602/    C8AA :                             ;After jump:
(1)  602/    C8AA :                             ;TYA                                                    ;2
(1)  602/    C8AA :                             ;TAX                                                    ;2
(1)  602/    C8AA :                             
(1)  602/    C8AA :                             ;Method 4 - 28 cycles
(1)  602/    C8AA :                             ;LDA (emu_PC,X)                 ;6
(1)  602/    C8AA :                             ;TAY                                    ;2
(1)  602/    C8AA :                             ;LDA JUMP_TABLE,Y               ;4
(1)  602/    C8AA :                             ;PHA                                    ;3
(1)  602/    C8AA :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  602/    C8AA :                             ;PHA                                    ;3
(1)  602/    C8AA :                             ;RTS                                    ;6
(1)  602/    C8AA :                             
(1)  602/    C8AA :                             ;Method 5 - 30 cycles
(1)  602/    C8AA : A1 02                       LDA (emu_PC,X)                  ;6
(1)  602/    C8AC : A8                          TAY                                             ;2
(1)  602/    C8AD : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  602/    C8B0 : 95 0A                       STA emu_ptr,X                   ;4
(1)  602/    C8B2 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 181 - 1/5/2022 12:19:0


(1)  602/    C8B5 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  602/    C8B7 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  602/    C8BA :                                                     
(1)  603/    C8BA :                     
(1)  604/    C8BA :                     	;0x78 - SEI IMP
(1)  605/    C8BA :                     	SEI_IMP:
(1)  606/    C8BA : (MACRO)             		OP_MACRO 120, "SEI", "IMP", "SEI_IMP"
(1)  606/    C8BA :                             ;TODO
(1)  607/    C8BA : (MACRO)             		NEXT_MACRO
(1)  607/    C8BA :                                             
(1)  607/    C8BA :  (MACRO-2)                  halt
(1)  607/    C8BA : 00                          BRK
(1)  607/    C8BB : 00                          BRK
(1)  607/    C8BC :                             
(1)  607/    C8BC :                             ;Method 1 - 60 cycles
(1)  607/    C8BC :                             ;Jump table must be page aligned!!!
(1)  607/    C8BC :                             ;LDA (emu_PC,X)                 ;6
(1)  607/    C8BC :                             ;ASL                                    ;2
(1)  607/    C8BC :                             ;STA emu_ptr,X                  ;4
(1)  607/    C8BC :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  607/    C8BC :                             ;ADC #0                                 ;2
(1)  607/    C8BC :                             ;STA emu_ptr+1,X                ;4
(1)  607/    C8BC :                             ;LDA (emu_ptr,X)                ;6
(1)  607/    C8BC :                             ;STA emu_ptr2,X                 ;4
(1)  607/    C8BC :                             ;INC emu_ptr,X                  ;6
(1)  607/    C8BC :                             ;BCC .skip                              ;2
(1)  607/    C8BC :                             ;       INC emu_ptr+1,X         ;6
(1)  607/    C8BC :                             ;.skip:
(1)  607/    C8BC :                             ;LDA (emu_ptr,X)                ;6
(1)  607/    C8BC :                             ;STA emu_ptr2+1,X               ;4
(1)  607/    C8BC :                             ;JMP (emu_ptr2,X)               ;6
(1)  607/    C8BC :                             
(1)  607/    C8BC :                             ;Method 2 - 46 cycles
(1)  607/    C8BC :                             ;Jump table must be page aligned!!!
(1)  607/    C8BC :                             ;LDA (emu_PC,X)                 ;6
(1)  607/    C8BC :                             ;STZ emu_ptr+1,X                ;4
(1)  607/    C8BC :                             ;ASL                                    ;2
(1)  607/    C8BC :                             ;ROL emu_ptr+1,X                ;6
(1)  607/    C8BC :                             ;ASL                                    ;2
(1)  607/    C8BC :                             ;ROL emu_ptr+1,X                ;6
(1)  607/    C8BC :                             ;STA emu_ptr,X                  ;4                              
(1)  607/    C8BC :                             ;LDA emu_ptr+1,X                ;4
(1)  607/    C8BC :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  607/    C8BC :                             ;STA emu_ptr+1,X                ;4
(1)  607/    C8BC :                             ;JMP (emu_ptr2,X)               ;6
(1)  607/    C8BC :                             
(1)  607/    C8BC :                             ;Method 3 - 30 cycles
(1)  607/    C8BC :                             ;TXA                                                    ;2
(1)  607/    C8BC :                             ;TAY                                                    ;2
(1)  607/    C8BC :                             ;LDA (emu_PC,X)                                 ;6
(1)  607/    C8BC :                             ;ASL                                                    ;2
(1)  607/    C8BC :                             ;BCS upper                                              ;2
(1)  607/    C8BC :                             ;lower:
(1)  607/    C8BC :                             ;       ASL                                                     ;2
(1)  607/    C8BC :                             ;       TAX                                                     ;2
(1)  607/    C8BC :                             ;       BCS upper_lower                         ;2
(1)  607/    C8BC :                             ;       lower_lower:
(1)  607/    C8BC :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  607/    C8BC :                             ;       upper_lower:
(1)  607/    C8BC :                             ;               JMP (JUMP_TABLE2,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 182 - 1/5/2022 12:19:0


(1)  607/    C8BC :                             ;upper:
(1)  607/    C8BC :                             ;       ASL
(1)  607/    C8BC :                             ;       TAX
(1)  607/    C8BC :                             ;       BCS upper_upper
(1)  607/    C8BC :                             ;       lower_upper:
(1)  607/    C8BC :                             ;               JMP (JUMP_TABLE3,X)
(1)  607/    C8BC :                             ;       upper_upper:
(1)  607/    C8BC :                             ;               JMP (JUMP_TABLE4,X)
(1)  607/    C8BC :                             ;After jump:
(1)  607/    C8BC :                             ;TYA                                                    ;2
(1)  607/    C8BC :                             ;TAX                                                    ;2
(1)  607/    C8BC :                             
(1)  607/    C8BC :                             ;Method 4 - 28 cycles
(1)  607/    C8BC :                             ;LDA (emu_PC,X)                 ;6
(1)  607/    C8BC :                             ;TAY                                    ;2
(1)  607/    C8BC :                             ;LDA JUMP_TABLE,Y               ;4
(1)  607/    C8BC :                             ;PHA                                    ;3
(1)  607/    C8BC :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  607/    C8BC :                             ;PHA                                    ;3
(1)  607/    C8BC :                             ;RTS                                    ;6
(1)  607/    C8BC :                             
(1)  607/    C8BC :                             ;Method 5 - 30 cycles
(1)  607/    C8BC : A1 02                       LDA (emu_PC,X)                  ;6
(1)  607/    C8BE : A8                          TAY                                             ;2
(1)  607/    C8BF : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  607/    C8C2 : 95 0A                       STA emu_ptr,X                   ;4
(1)  607/    C8C4 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  607/    C8C7 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  607/    C8C9 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  607/    C8CC :                                                     
(1)  608/    C8CC :                     
(1)  609/    C8CC :                     	;0x79 - ADC ABSY
(1)  610/    C8CC :                     	ADC_ABSY:
(1)  611/    C8CC : (MACRO)             		OP_MACRO 121, "ADC", "ABSY", "ADC_ABSY"
(1)  611/    C8CC :                             ;TODO
(1)  612/    C8CC : (MACRO)             		NEXT_MACRO
(1)  612/    C8CC :                                             
(1)  612/    C8CC :  (MACRO-2)                  halt
(1)  612/    C8CC : 00                          BRK
(1)  612/    C8CD : 00                          BRK
(1)  612/    C8CE :                             
(1)  612/    C8CE :                             ;Method 1 - 60 cycles
(1)  612/    C8CE :                             ;Jump table must be page aligned!!!
(1)  612/    C8CE :                             ;LDA (emu_PC,X)                 ;6
(1)  612/    C8CE :                             ;ASL                                    ;2
(1)  612/    C8CE :                             ;STA emu_ptr,X                  ;4
(1)  612/    C8CE :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  612/    C8CE :                             ;ADC #0                                 ;2
(1)  612/    C8CE :                             ;STA emu_ptr+1,X                ;4
(1)  612/    C8CE :                             ;LDA (emu_ptr,X)                ;6
(1)  612/    C8CE :                             ;STA emu_ptr2,X                 ;4
(1)  612/    C8CE :                             ;INC emu_ptr,X                  ;6
(1)  612/    C8CE :                             ;BCC .skip                              ;2
(1)  612/    C8CE :                             ;       INC emu_ptr+1,X         ;6
(1)  612/    C8CE :                             ;.skip:
(1)  612/    C8CE :                             ;LDA (emu_ptr,X)                ;6
(1)  612/    C8CE :                             ;STA emu_ptr2+1,X               ;4
(1)  612/    C8CE :                             ;JMP (emu_ptr2,X)               ;6
(1)  612/    C8CE :                             
(1)  612/    C8CE :                             ;Method 2 - 46 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 183 - 1/5/2022 12:19:0


(1)  612/    C8CE :                             ;Jump table must be page aligned!!!
(1)  612/    C8CE :                             ;LDA (emu_PC,X)                 ;6
(1)  612/    C8CE :                             ;STZ emu_ptr+1,X                ;4
(1)  612/    C8CE :                             ;ASL                                    ;2
(1)  612/    C8CE :                             ;ROL emu_ptr+1,X                ;6
(1)  612/    C8CE :                             ;ASL                                    ;2
(1)  612/    C8CE :                             ;ROL emu_ptr+1,X                ;6
(1)  612/    C8CE :                             ;STA emu_ptr,X                  ;4                              
(1)  612/    C8CE :                             ;LDA emu_ptr+1,X                ;4
(1)  612/    C8CE :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  612/    C8CE :                             ;STA emu_ptr+1,X                ;4
(1)  612/    C8CE :                             ;JMP (emu_ptr2,X)               ;6
(1)  612/    C8CE :                             
(1)  612/    C8CE :                             ;Method 3 - 30 cycles
(1)  612/    C8CE :                             ;TXA                                                    ;2
(1)  612/    C8CE :                             ;TAY                                                    ;2
(1)  612/    C8CE :                             ;LDA (emu_PC,X)                                 ;6
(1)  612/    C8CE :                             ;ASL                                                    ;2
(1)  612/    C8CE :                             ;BCS upper                                              ;2
(1)  612/    C8CE :                             ;lower:
(1)  612/    C8CE :                             ;       ASL                                                     ;2
(1)  612/    C8CE :                             ;       TAX                                                     ;2
(1)  612/    C8CE :                             ;       BCS upper_lower                         ;2
(1)  612/    C8CE :                             ;       lower_lower:
(1)  612/    C8CE :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  612/    C8CE :                             ;       upper_lower:
(1)  612/    C8CE :                             ;               JMP (JUMP_TABLE2,X)
(1)  612/    C8CE :                             ;upper:
(1)  612/    C8CE :                             ;       ASL
(1)  612/    C8CE :                             ;       TAX
(1)  612/    C8CE :                             ;       BCS upper_upper
(1)  612/    C8CE :                             ;       lower_upper:
(1)  612/    C8CE :                             ;               JMP (JUMP_TABLE3,X)
(1)  612/    C8CE :                             ;       upper_upper:
(1)  612/    C8CE :                             ;               JMP (JUMP_TABLE4,X)
(1)  612/    C8CE :                             ;After jump:
(1)  612/    C8CE :                             ;TYA                                                    ;2
(1)  612/    C8CE :                             ;TAX                                                    ;2
(1)  612/    C8CE :                             
(1)  612/    C8CE :                             ;Method 4 - 28 cycles
(1)  612/    C8CE :                             ;LDA (emu_PC,X)                 ;6
(1)  612/    C8CE :                             ;TAY                                    ;2
(1)  612/    C8CE :                             ;LDA JUMP_TABLE,Y               ;4
(1)  612/    C8CE :                             ;PHA                                    ;3
(1)  612/    C8CE :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  612/    C8CE :                             ;PHA                                    ;3
(1)  612/    C8CE :                             ;RTS                                    ;6
(1)  612/    C8CE :                             
(1)  612/    C8CE :                             ;Method 5 - 30 cycles
(1)  612/    C8CE : A1 02                       LDA (emu_PC,X)                  ;6
(1)  612/    C8D0 : A8                          TAY                                             ;2
(1)  612/    C8D1 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  612/    C8D4 : 95 0A                       STA emu_ptr,X                   ;4
(1)  612/    C8D6 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  612/    C8D9 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  612/    C8DB : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  612/    C8DE :                                                     
(1)  613/    C8DE :                     
(1)  614/    C8DE :                     	;0x7A - NOP
(1)  615/    C8DE :                     	NOP_0x7A:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 184 - 1/5/2022 12:19:0


(1)  616/    C8DE : (MACRO)             		OP_MACRO 122, "NOP", "IMP", "NOP_0x7A"
(1)  616/    C8DE :                             ;TODO
(1)  617/    C8DE : (MACRO)             		NEXT_MACRO
(1)  617/    C8DE :                                             
(1)  617/    C8DE :  (MACRO-2)                  halt
(1)  617/    C8DE : 00                          BRK
(1)  617/    C8DF : 00                          BRK
(1)  617/    C8E0 :                             
(1)  617/    C8E0 :                             ;Method 1 - 60 cycles
(1)  617/    C8E0 :                             ;Jump table must be page aligned!!!
(1)  617/    C8E0 :                             ;LDA (emu_PC,X)                 ;6
(1)  617/    C8E0 :                             ;ASL                                    ;2
(1)  617/    C8E0 :                             ;STA emu_ptr,X                  ;4
(1)  617/    C8E0 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  617/    C8E0 :                             ;ADC #0                                 ;2
(1)  617/    C8E0 :                             ;STA emu_ptr+1,X                ;4
(1)  617/    C8E0 :                             ;LDA (emu_ptr,X)                ;6
(1)  617/    C8E0 :                             ;STA emu_ptr2,X                 ;4
(1)  617/    C8E0 :                             ;INC emu_ptr,X                  ;6
(1)  617/    C8E0 :                             ;BCC .skip                              ;2
(1)  617/    C8E0 :                             ;       INC emu_ptr+1,X         ;6
(1)  617/    C8E0 :                             ;.skip:
(1)  617/    C8E0 :                             ;LDA (emu_ptr,X)                ;6
(1)  617/    C8E0 :                             ;STA emu_ptr2+1,X               ;4
(1)  617/    C8E0 :                             ;JMP (emu_ptr2,X)               ;6
(1)  617/    C8E0 :                             
(1)  617/    C8E0 :                             ;Method 2 - 46 cycles
(1)  617/    C8E0 :                             ;Jump table must be page aligned!!!
(1)  617/    C8E0 :                             ;LDA (emu_PC,X)                 ;6
(1)  617/    C8E0 :                             ;STZ emu_ptr+1,X                ;4
(1)  617/    C8E0 :                             ;ASL                                    ;2
(1)  617/    C8E0 :                             ;ROL emu_ptr+1,X                ;6
(1)  617/    C8E0 :                             ;ASL                                    ;2
(1)  617/    C8E0 :                             ;ROL emu_ptr+1,X                ;6
(1)  617/    C8E0 :                             ;STA emu_ptr,X                  ;4                              
(1)  617/    C8E0 :                             ;LDA emu_ptr+1,X                ;4
(1)  617/    C8E0 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  617/    C8E0 :                             ;STA emu_ptr+1,X                ;4
(1)  617/    C8E0 :                             ;JMP (emu_ptr2,X)               ;6
(1)  617/    C8E0 :                             
(1)  617/    C8E0 :                             ;Method 3 - 30 cycles
(1)  617/    C8E0 :                             ;TXA                                                    ;2
(1)  617/    C8E0 :                             ;TAY                                                    ;2
(1)  617/    C8E0 :                             ;LDA (emu_PC,X)                                 ;6
(1)  617/    C8E0 :                             ;ASL                                                    ;2
(1)  617/    C8E0 :                             ;BCS upper                                              ;2
(1)  617/    C8E0 :                             ;lower:
(1)  617/    C8E0 :                             ;       ASL                                                     ;2
(1)  617/    C8E0 :                             ;       TAX                                                     ;2
(1)  617/    C8E0 :                             ;       BCS upper_lower                         ;2
(1)  617/    C8E0 :                             ;       lower_lower:
(1)  617/    C8E0 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  617/    C8E0 :                             ;       upper_lower:
(1)  617/    C8E0 :                             ;               JMP (JUMP_TABLE2,X)
(1)  617/    C8E0 :                             ;upper:
(1)  617/    C8E0 :                             ;       ASL
(1)  617/    C8E0 :                             ;       TAX
(1)  617/    C8E0 :                             ;       BCS upper_upper
(1)  617/    C8E0 :                             ;       lower_upper:
(1)  617/    C8E0 :                             ;               JMP (JUMP_TABLE3,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 185 - 1/5/2022 12:19:0


(1)  617/    C8E0 :                             ;       upper_upper:
(1)  617/    C8E0 :                             ;               JMP (JUMP_TABLE4,X)
(1)  617/    C8E0 :                             ;After jump:
(1)  617/    C8E0 :                             ;TYA                                                    ;2
(1)  617/    C8E0 :                             ;TAX                                                    ;2
(1)  617/    C8E0 :                             
(1)  617/    C8E0 :                             ;Method 4 - 28 cycles
(1)  617/    C8E0 :                             ;LDA (emu_PC,X)                 ;6
(1)  617/    C8E0 :                             ;TAY                                    ;2
(1)  617/    C8E0 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  617/    C8E0 :                             ;PHA                                    ;3
(1)  617/    C8E0 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  617/    C8E0 :                             ;PHA                                    ;3
(1)  617/    C8E0 :                             ;RTS                                    ;6
(1)  617/    C8E0 :                             
(1)  617/    C8E0 :                             ;Method 5 - 30 cycles
(1)  617/    C8E0 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  617/    C8E2 : A8                          TAY                                             ;2
(1)  617/    C8E3 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  617/    C8E6 : 95 0A                       STA emu_ptr,X                   ;4
(1)  617/    C8E8 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  617/    C8EB : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  617/    C8ED : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  617/    C8F0 :                                                     
(1)  618/    C8F0 :                     
(1)  619/    C8F0 :                     	;0x7B - NOP
(1)  620/    C8F0 :                     	NOP_0x7B:
(1)  621/    C8F0 : (MACRO)             		OP_MACRO 123, "NOP", "IMP", "NOP_0x7B"
(1)  621/    C8F0 :                             ;TODO
(1)  622/    C8F0 : (MACRO)             		NEXT_MACRO
(1)  622/    C8F0 :                                             
(1)  622/    C8F0 :  (MACRO-2)                  halt
(1)  622/    C8F0 : 00                          BRK
(1)  622/    C8F1 : 00                          BRK
(1)  622/    C8F2 :                             
(1)  622/    C8F2 :                             ;Method 1 - 60 cycles
(1)  622/    C8F2 :                             ;Jump table must be page aligned!!!
(1)  622/    C8F2 :                             ;LDA (emu_PC,X)                 ;6
(1)  622/    C8F2 :                             ;ASL                                    ;2
(1)  622/    C8F2 :                             ;STA emu_ptr,X                  ;4
(1)  622/    C8F2 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  622/    C8F2 :                             ;ADC #0                                 ;2
(1)  622/    C8F2 :                             ;STA emu_ptr+1,X                ;4
(1)  622/    C8F2 :                             ;LDA (emu_ptr,X)                ;6
(1)  622/    C8F2 :                             ;STA emu_ptr2,X                 ;4
(1)  622/    C8F2 :                             ;INC emu_ptr,X                  ;6
(1)  622/    C8F2 :                             ;BCC .skip                              ;2
(1)  622/    C8F2 :                             ;       INC emu_ptr+1,X         ;6
(1)  622/    C8F2 :                             ;.skip:
(1)  622/    C8F2 :                             ;LDA (emu_ptr,X)                ;6
(1)  622/    C8F2 :                             ;STA emu_ptr2+1,X               ;4
(1)  622/    C8F2 :                             ;JMP (emu_ptr2,X)               ;6
(1)  622/    C8F2 :                             
(1)  622/    C8F2 :                             ;Method 2 - 46 cycles
(1)  622/    C8F2 :                             ;Jump table must be page aligned!!!
(1)  622/    C8F2 :                             ;LDA (emu_PC,X)                 ;6
(1)  622/    C8F2 :                             ;STZ emu_ptr+1,X                ;4
(1)  622/    C8F2 :                             ;ASL                                    ;2
(1)  622/    C8F2 :                             ;ROL emu_ptr+1,X                ;6
(1)  622/    C8F2 :                             ;ASL                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 186 - 1/5/2022 12:19:0


(1)  622/    C8F2 :                             ;ROL emu_ptr+1,X                ;6
(1)  622/    C8F2 :                             ;STA emu_ptr,X                  ;4                              
(1)  622/    C8F2 :                             ;LDA emu_ptr+1,X                ;4
(1)  622/    C8F2 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  622/    C8F2 :                             ;STA emu_ptr+1,X                ;4
(1)  622/    C8F2 :                             ;JMP (emu_ptr2,X)               ;6
(1)  622/    C8F2 :                             
(1)  622/    C8F2 :                             ;Method 3 - 30 cycles
(1)  622/    C8F2 :                             ;TXA                                                    ;2
(1)  622/    C8F2 :                             ;TAY                                                    ;2
(1)  622/    C8F2 :                             ;LDA (emu_PC,X)                                 ;6
(1)  622/    C8F2 :                             ;ASL                                                    ;2
(1)  622/    C8F2 :                             ;BCS upper                                              ;2
(1)  622/    C8F2 :                             ;lower:
(1)  622/    C8F2 :                             ;       ASL                                                     ;2
(1)  622/    C8F2 :                             ;       TAX                                                     ;2
(1)  622/    C8F2 :                             ;       BCS upper_lower                         ;2
(1)  622/    C8F2 :                             ;       lower_lower:
(1)  622/    C8F2 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  622/    C8F2 :                             ;       upper_lower:
(1)  622/    C8F2 :                             ;               JMP (JUMP_TABLE2,X)
(1)  622/    C8F2 :                             ;upper:
(1)  622/    C8F2 :                             ;       ASL
(1)  622/    C8F2 :                             ;       TAX
(1)  622/    C8F2 :                             ;       BCS upper_upper
(1)  622/    C8F2 :                             ;       lower_upper:
(1)  622/    C8F2 :                             ;               JMP (JUMP_TABLE3,X)
(1)  622/    C8F2 :                             ;       upper_upper:
(1)  622/    C8F2 :                             ;               JMP (JUMP_TABLE4,X)
(1)  622/    C8F2 :                             ;After jump:
(1)  622/    C8F2 :                             ;TYA                                                    ;2
(1)  622/    C8F2 :                             ;TAX                                                    ;2
(1)  622/    C8F2 :                             
(1)  622/    C8F2 :                             ;Method 4 - 28 cycles
(1)  622/    C8F2 :                             ;LDA (emu_PC,X)                 ;6
(1)  622/    C8F2 :                             ;TAY                                    ;2
(1)  622/    C8F2 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  622/    C8F2 :                             ;PHA                                    ;3
(1)  622/    C8F2 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  622/    C8F2 :                             ;PHA                                    ;3
(1)  622/    C8F2 :                             ;RTS                                    ;6
(1)  622/    C8F2 :                             
(1)  622/    C8F2 :                             ;Method 5 - 30 cycles
(1)  622/    C8F2 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  622/    C8F4 : A8                          TAY                                             ;2
(1)  622/    C8F5 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  622/    C8F8 : 95 0A                       STA emu_ptr,X                   ;4
(1)  622/    C8FA : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  622/    C8FD : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  622/    C8FF : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  622/    C902 :                                                     
(1)  623/    C902 :                     
(1)  624/    C902 :                     	;0x7C - NOP
(1)  625/    C902 :                     	NOP_0x7C:
(1)  626/    C902 : (MACRO)             		OP_MACRO 124, "NOP", "IMP", "NOP_0x7C"
(1)  626/    C902 :                             ;TODO
(1)  627/    C902 : (MACRO)             		NEXT_MACRO
(1)  627/    C902 :                                             
(1)  627/    C902 :  (MACRO-2)                  halt
(1)  627/    C902 : 00                          BRK
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 187 - 1/5/2022 12:19:0


(1)  627/    C903 : 00                          BRK
(1)  627/    C904 :                             
(1)  627/    C904 :                             ;Method 1 - 60 cycles
(1)  627/    C904 :                             ;Jump table must be page aligned!!!
(1)  627/    C904 :                             ;LDA (emu_PC,X)                 ;6
(1)  627/    C904 :                             ;ASL                                    ;2
(1)  627/    C904 :                             ;STA emu_ptr,X                  ;4
(1)  627/    C904 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  627/    C904 :                             ;ADC #0                                 ;2
(1)  627/    C904 :                             ;STA emu_ptr+1,X                ;4
(1)  627/    C904 :                             ;LDA (emu_ptr,X)                ;6
(1)  627/    C904 :                             ;STA emu_ptr2,X                 ;4
(1)  627/    C904 :                             ;INC emu_ptr,X                  ;6
(1)  627/    C904 :                             ;BCC .skip                              ;2
(1)  627/    C904 :                             ;       INC emu_ptr+1,X         ;6
(1)  627/    C904 :                             ;.skip:
(1)  627/    C904 :                             ;LDA (emu_ptr,X)                ;6
(1)  627/    C904 :                             ;STA emu_ptr2+1,X               ;4
(1)  627/    C904 :                             ;JMP (emu_ptr2,X)               ;6
(1)  627/    C904 :                             
(1)  627/    C904 :                             ;Method 2 - 46 cycles
(1)  627/    C904 :                             ;Jump table must be page aligned!!!
(1)  627/    C904 :                             ;LDA (emu_PC,X)                 ;6
(1)  627/    C904 :                             ;STZ emu_ptr+1,X                ;4
(1)  627/    C904 :                             ;ASL                                    ;2
(1)  627/    C904 :                             ;ROL emu_ptr+1,X                ;6
(1)  627/    C904 :                             ;ASL                                    ;2
(1)  627/    C904 :                             ;ROL emu_ptr+1,X                ;6
(1)  627/    C904 :                             ;STA emu_ptr,X                  ;4                              
(1)  627/    C904 :                             ;LDA emu_ptr+1,X                ;4
(1)  627/    C904 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  627/    C904 :                             ;STA emu_ptr+1,X                ;4
(1)  627/    C904 :                             ;JMP (emu_ptr2,X)               ;6
(1)  627/    C904 :                             
(1)  627/    C904 :                             ;Method 3 - 30 cycles
(1)  627/    C904 :                             ;TXA                                                    ;2
(1)  627/    C904 :                             ;TAY                                                    ;2
(1)  627/    C904 :                             ;LDA (emu_PC,X)                                 ;6
(1)  627/    C904 :                             ;ASL                                                    ;2
(1)  627/    C904 :                             ;BCS upper                                              ;2
(1)  627/    C904 :                             ;lower:
(1)  627/    C904 :                             ;       ASL                                                     ;2
(1)  627/    C904 :                             ;       TAX                                                     ;2
(1)  627/    C904 :                             ;       BCS upper_lower                         ;2
(1)  627/    C904 :                             ;       lower_lower:
(1)  627/    C904 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  627/    C904 :                             ;       upper_lower:
(1)  627/    C904 :                             ;               JMP (JUMP_TABLE2,X)
(1)  627/    C904 :                             ;upper:
(1)  627/    C904 :                             ;       ASL
(1)  627/    C904 :                             ;       TAX
(1)  627/    C904 :                             ;       BCS upper_upper
(1)  627/    C904 :                             ;       lower_upper:
(1)  627/    C904 :                             ;               JMP (JUMP_TABLE3,X)
(1)  627/    C904 :                             ;       upper_upper:
(1)  627/    C904 :                             ;               JMP (JUMP_TABLE4,X)
(1)  627/    C904 :                             ;After jump:
(1)  627/    C904 :                             ;TYA                                                    ;2
(1)  627/    C904 :                             ;TAX                                                    ;2
(1)  627/    C904 :                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 188 - 1/5/2022 12:19:0


(1)  627/    C904 :                             ;Method 4 - 28 cycles
(1)  627/    C904 :                             ;LDA (emu_PC,X)                 ;6
(1)  627/    C904 :                             ;TAY                                    ;2
(1)  627/    C904 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  627/    C904 :                             ;PHA                                    ;3
(1)  627/    C904 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  627/    C904 :                             ;PHA                                    ;3
(1)  627/    C904 :                             ;RTS                                    ;6
(1)  627/    C904 :                             
(1)  627/    C904 :                             ;Method 5 - 30 cycles
(1)  627/    C904 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  627/    C906 : A8                          TAY                                             ;2
(1)  627/    C907 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  627/    C90A : 95 0A                       STA emu_ptr,X                   ;4
(1)  627/    C90C : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  627/    C90F : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  627/    C911 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  627/    C914 :                                                     
(1)  628/    C914 :                     
(1)  629/    C914 :                     	;0x7D - ADC ABSX
(1)  630/    C914 :                     	ADC_ABSX:
(1)  631/    C914 : (MACRO)             		OP_MACRO 125, "ADC", "ABSX", "ADC_ABSX"
(1)  631/    C914 :                             ;TODO
(1)  632/    C914 : (MACRO)             		NEXT_MACRO
(1)  632/    C914 :                                             
(1)  632/    C914 :  (MACRO-2)                  halt
(1)  632/    C914 : 00                          BRK
(1)  632/    C915 : 00                          BRK
(1)  632/    C916 :                             
(1)  632/    C916 :                             ;Method 1 - 60 cycles
(1)  632/    C916 :                             ;Jump table must be page aligned!!!
(1)  632/    C916 :                             ;LDA (emu_PC,X)                 ;6
(1)  632/    C916 :                             ;ASL                                    ;2
(1)  632/    C916 :                             ;STA emu_ptr,X                  ;4
(1)  632/    C916 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  632/    C916 :                             ;ADC #0                                 ;2
(1)  632/    C916 :                             ;STA emu_ptr+1,X                ;4
(1)  632/    C916 :                             ;LDA (emu_ptr,X)                ;6
(1)  632/    C916 :                             ;STA emu_ptr2,X                 ;4
(1)  632/    C916 :                             ;INC emu_ptr,X                  ;6
(1)  632/    C916 :                             ;BCC .skip                              ;2
(1)  632/    C916 :                             ;       INC emu_ptr+1,X         ;6
(1)  632/    C916 :                             ;.skip:
(1)  632/    C916 :                             ;LDA (emu_ptr,X)                ;6
(1)  632/    C916 :                             ;STA emu_ptr2+1,X               ;4
(1)  632/    C916 :                             ;JMP (emu_ptr2,X)               ;6
(1)  632/    C916 :                             
(1)  632/    C916 :                             ;Method 2 - 46 cycles
(1)  632/    C916 :                             ;Jump table must be page aligned!!!
(1)  632/    C916 :                             ;LDA (emu_PC,X)                 ;6
(1)  632/    C916 :                             ;STZ emu_ptr+1,X                ;4
(1)  632/    C916 :                             ;ASL                                    ;2
(1)  632/    C916 :                             ;ROL emu_ptr+1,X                ;6
(1)  632/    C916 :                             ;ASL                                    ;2
(1)  632/    C916 :                             ;ROL emu_ptr+1,X                ;6
(1)  632/    C916 :                             ;STA emu_ptr,X                  ;4                              
(1)  632/    C916 :                             ;LDA emu_ptr+1,X                ;4
(1)  632/    C916 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  632/    C916 :                             ;STA emu_ptr+1,X                ;4
(1)  632/    C916 :                             ;JMP (emu_ptr2,X)               ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 189 - 1/5/2022 12:19:0


(1)  632/    C916 :                             
(1)  632/    C916 :                             ;Method 3 - 30 cycles
(1)  632/    C916 :                             ;TXA                                                    ;2
(1)  632/    C916 :                             ;TAY                                                    ;2
(1)  632/    C916 :                             ;LDA (emu_PC,X)                                 ;6
(1)  632/    C916 :                             ;ASL                                                    ;2
(1)  632/    C916 :                             ;BCS upper                                              ;2
(1)  632/    C916 :                             ;lower:
(1)  632/    C916 :                             ;       ASL                                                     ;2
(1)  632/    C916 :                             ;       TAX                                                     ;2
(1)  632/    C916 :                             ;       BCS upper_lower                         ;2
(1)  632/    C916 :                             ;       lower_lower:
(1)  632/    C916 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  632/    C916 :                             ;       upper_lower:
(1)  632/    C916 :                             ;               JMP (JUMP_TABLE2,X)
(1)  632/    C916 :                             ;upper:
(1)  632/    C916 :                             ;       ASL
(1)  632/    C916 :                             ;       TAX
(1)  632/    C916 :                             ;       BCS upper_upper
(1)  632/    C916 :                             ;       lower_upper:
(1)  632/    C916 :                             ;               JMP (JUMP_TABLE3,X)
(1)  632/    C916 :                             ;       upper_upper:
(1)  632/    C916 :                             ;               JMP (JUMP_TABLE4,X)
(1)  632/    C916 :                             ;After jump:
(1)  632/    C916 :                             ;TYA                                                    ;2
(1)  632/    C916 :                             ;TAX                                                    ;2
(1)  632/    C916 :                             
(1)  632/    C916 :                             ;Method 4 - 28 cycles
(1)  632/    C916 :                             ;LDA (emu_PC,X)                 ;6
(1)  632/    C916 :                             ;TAY                                    ;2
(1)  632/    C916 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  632/    C916 :                             ;PHA                                    ;3
(1)  632/    C916 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  632/    C916 :                             ;PHA                                    ;3
(1)  632/    C916 :                             ;RTS                                    ;6
(1)  632/    C916 :                             
(1)  632/    C916 :                             ;Method 5 - 30 cycles
(1)  632/    C916 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  632/    C918 : A8                          TAY                                             ;2
(1)  632/    C919 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  632/    C91C : 95 0A                       STA emu_ptr,X                   ;4
(1)  632/    C91E : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  632/    C921 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  632/    C923 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  632/    C926 :                                                     
(1)  633/    C926 :                     
(1)  634/    C926 :                     	;0x7E - ROR ABSX
(1)  635/    C926 :                     	ROR_ABSX:
(1)  636/    C926 : (MACRO)             		OP_MACRO 126, "ROR", "ABSX", "ROR_ABSX"
(1)  636/    C926 :                             ;TODO
(1)  637/    C926 : (MACRO)             		NEXT_MACRO
(1)  637/    C926 :                                             
(1)  637/    C926 :  (MACRO-2)                  halt
(1)  637/    C926 : 00                          BRK
(1)  637/    C927 : 00                          BRK
(1)  637/    C928 :                             
(1)  637/    C928 :                             ;Method 1 - 60 cycles
(1)  637/    C928 :                             ;Jump table must be page aligned!!!
(1)  637/    C928 :                             ;LDA (emu_PC,X)                 ;6
(1)  637/    C928 :                             ;ASL                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 190 - 1/5/2022 12:19:0


(1)  637/    C928 :                             ;STA emu_ptr,X                  ;4
(1)  637/    C928 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  637/    C928 :                             ;ADC #0                                 ;2
(1)  637/    C928 :                             ;STA emu_ptr+1,X                ;4
(1)  637/    C928 :                             ;LDA (emu_ptr,X)                ;6
(1)  637/    C928 :                             ;STA emu_ptr2,X                 ;4
(1)  637/    C928 :                             ;INC emu_ptr,X                  ;6
(1)  637/    C928 :                             ;BCC .skip                              ;2
(1)  637/    C928 :                             ;       INC emu_ptr+1,X         ;6
(1)  637/    C928 :                             ;.skip:
(1)  637/    C928 :                             ;LDA (emu_ptr,X)                ;6
(1)  637/    C928 :                             ;STA emu_ptr2+1,X               ;4
(1)  637/    C928 :                             ;JMP (emu_ptr2,X)               ;6
(1)  637/    C928 :                             
(1)  637/    C928 :                             ;Method 2 - 46 cycles
(1)  637/    C928 :                             ;Jump table must be page aligned!!!
(1)  637/    C928 :                             ;LDA (emu_PC,X)                 ;6
(1)  637/    C928 :                             ;STZ emu_ptr+1,X                ;4
(1)  637/    C928 :                             ;ASL                                    ;2
(1)  637/    C928 :                             ;ROL emu_ptr+1,X                ;6
(1)  637/    C928 :                             ;ASL                                    ;2
(1)  637/    C928 :                             ;ROL emu_ptr+1,X                ;6
(1)  637/    C928 :                             ;STA emu_ptr,X                  ;4                              
(1)  637/    C928 :                             ;LDA emu_ptr+1,X                ;4
(1)  637/    C928 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  637/    C928 :                             ;STA emu_ptr+1,X                ;4
(1)  637/    C928 :                             ;JMP (emu_ptr2,X)               ;6
(1)  637/    C928 :                             
(1)  637/    C928 :                             ;Method 3 - 30 cycles
(1)  637/    C928 :                             ;TXA                                                    ;2
(1)  637/    C928 :                             ;TAY                                                    ;2
(1)  637/    C928 :                             ;LDA (emu_PC,X)                                 ;6
(1)  637/    C928 :                             ;ASL                                                    ;2
(1)  637/    C928 :                             ;BCS upper                                              ;2
(1)  637/    C928 :                             ;lower:
(1)  637/    C928 :                             ;       ASL                                                     ;2
(1)  637/    C928 :                             ;       TAX                                                     ;2
(1)  637/    C928 :                             ;       BCS upper_lower                         ;2
(1)  637/    C928 :                             ;       lower_lower:
(1)  637/    C928 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  637/    C928 :                             ;       upper_lower:
(1)  637/    C928 :                             ;               JMP (JUMP_TABLE2,X)
(1)  637/    C928 :                             ;upper:
(1)  637/    C928 :                             ;       ASL
(1)  637/    C928 :                             ;       TAX
(1)  637/    C928 :                             ;       BCS upper_upper
(1)  637/    C928 :                             ;       lower_upper:
(1)  637/    C928 :                             ;               JMP (JUMP_TABLE3,X)
(1)  637/    C928 :                             ;       upper_upper:
(1)  637/    C928 :                             ;               JMP (JUMP_TABLE4,X)
(1)  637/    C928 :                             ;After jump:
(1)  637/    C928 :                             ;TYA                                                    ;2
(1)  637/    C928 :                             ;TAX                                                    ;2
(1)  637/    C928 :                             
(1)  637/    C928 :                             ;Method 4 - 28 cycles
(1)  637/    C928 :                             ;LDA (emu_PC,X)                 ;6
(1)  637/    C928 :                             ;TAY                                    ;2
(1)  637/    C928 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  637/    C928 :                             ;PHA                                    ;3
(1)  637/    C928 :                             ;LDA JUMP_TABLE2,Y              ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 191 - 1/5/2022 12:19:0


(1)  637/    C928 :                             ;PHA                                    ;3
(1)  637/    C928 :                             ;RTS                                    ;6
(1)  637/    C928 :                             
(1)  637/    C928 :                             ;Method 5 - 30 cycles
(1)  637/    C928 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  637/    C92A : A8                          TAY                                             ;2
(1)  637/    C92B : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  637/    C92E : 95 0A                       STA emu_ptr,X                   ;4
(1)  637/    C930 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  637/    C933 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  637/    C935 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  637/    C938 :                                                     
(1)  638/    C938 :                     
(1)  639/    C938 :                     	;0x7F - NOP
(1)  640/    C938 :                     	NOP_0x7F:
(1)  641/    C938 : (MACRO)             		OP_MACRO 127, "NOP", "IMP", "NOP_0x7F"
(1)  641/    C938 :                             ;TODO
(1)  642/    C938 : (MACRO)             		NEXT_MACRO
(1)  642/    C938 :                                             
(1)  642/    C938 :  (MACRO-2)                  halt
(1)  642/    C938 : 00                          BRK
(1)  642/    C939 : 00                          BRK
(1)  642/    C93A :                             
(1)  642/    C93A :                             ;Method 1 - 60 cycles
(1)  642/    C93A :                             ;Jump table must be page aligned!!!
(1)  642/    C93A :                             ;LDA (emu_PC,X)                 ;6
(1)  642/    C93A :                             ;ASL                                    ;2
(1)  642/    C93A :                             ;STA emu_ptr,X                  ;4
(1)  642/    C93A :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  642/    C93A :                             ;ADC #0                                 ;2
(1)  642/    C93A :                             ;STA emu_ptr+1,X                ;4
(1)  642/    C93A :                             ;LDA (emu_ptr,X)                ;6
(1)  642/    C93A :                             ;STA emu_ptr2,X                 ;4
(1)  642/    C93A :                             ;INC emu_ptr,X                  ;6
(1)  642/    C93A :                             ;BCC .skip                              ;2
(1)  642/    C93A :                             ;       INC emu_ptr+1,X         ;6
(1)  642/    C93A :                             ;.skip:
(1)  642/    C93A :                             ;LDA (emu_ptr,X)                ;6
(1)  642/    C93A :                             ;STA emu_ptr2+1,X               ;4
(1)  642/    C93A :                             ;JMP (emu_ptr2,X)               ;6
(1)  642/    C93A :                             
(1)  642/    C93A :                             ;Method 2 - 46 cycles
(1)  642/    C93A :                             ;Jump table must be page aligned!!!
(1)  642/    C93A :                             ;LDA (emu_PC,X)                 ;6
(1)  642/    C93A :                             ;STZ emu_ptr+1,X                ;4
(1)  642/    C93A :                             ;ASL                                    ;2
(1)  642/    C93A :                             ;ROL emu_ptr+1,X                ;6
(1)  642/    C93A :                             ;ASL                                    ;2
(1)  642/    C93A :                             ;ROL emu_ptr+1,X                ;6
(1)  642/    C93A :                             ;STA emu_ptr,X                  ;4                              
(1)  642/    C93A :                             ;LDA emu_ptr+1,X                ;4
(1)  642/    C93A :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  642/    C93A :                             ;STA emu_ptr+1,X                ;4
(1)  642/    C93A :                             ;JMP (emu_ptr2,X)               ;6
(1)  642/    C93A :                             
(1)  642/    C93A :                             ;Method 3 - 30 cycles
(1)  642/    C93A :                             ;TXA                                                    ;2
(1)  642/    C93A :                             ;TAY                                                    ;2
(1)  642/    C93A :                             ;LDA (emu_PC,X)                                 ;6
(1)  642/    C93A :                             ;ASL                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 192 - 1/5/2022 12:19:0


(1)  642/    C93A :                             ;BCS upper                                              ;2
(1)  642/    C93A :                             ;lower:
(1)  642/    C93A :                             ;       ASL                                                     ;2
(1)  642/    C93A :                             ;       TAX                                                     ;2
(1)  642/    C93A :                             ;       BCS upper_lower                         ;2
(1)  642/    C93A :                             ;       lower_lower:
(1)  642/    C93A :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  642/    C93A :                             ;       upper_lower:
(1)  642/    C93A :                             ;               JMP (JUMP_TABLE2,X)
(1)  642/    C93A :                             ;upper:
(1)  642/    C93A :                             ;       ASL
(1)  642/    C93A :                             ;       TAX
(1)  642/    C93A :                             ;       BCS upper_upper
(1)  642/    C93A :                             ;       lower_upper:
(1)  642/    C93A :                             ;               JMP (JUMP_TABLE3,X)
(1)  642/    C93A :                             ;       upper_upper:
(1)  642/    C93A :                             ;               JMP (JUMP_TABLE4,X)
(1)  642/    C93A :                             ;After jump:
(1)  642/    C93A :                             ;TYA                                                    ;2
(1)  642/    C93A :                             ;TAX                                                    ;2
(1)  642/    C93A :                             
(1)  642/    C93A :                             ;Method 4 - 28 cycles
(1)  642/    C93A :                             ;LDA (emu_PC,X)                 ;6
(1)  642/    C93A :                             ;TAY                                    ;2
(1)  642/    C93A :                             ;LDA JUMP_TABLE,Y               ;4
(1)  642/    C93A :                             ;PHA                                    ;3
(1)  642/    C93A :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  642/    C93A :                             ;PHA                                    ;3
(1)  642/    C93A :                             ;RTS                                    ;6
(1)  642/    C93A :                             
(1)  642/    C93A :                             ;Method 5 - 30 cycles
(1)  642/    C93A : A1 02                       LDA (emu_PC,X)                  ;6
(1)  642/    C93C : A8                          TAY                                             ;2
(1)  642/    C93D : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  642/    C940 : 95 0A                       STA emu_ptr,X                   ;4
(1)  642/    C942 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  642/    C945 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  642/    C947 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  642/    C94A :                                                     
(1)  643/    C94A :                     
(1)  644/    C94A :                     	;0x80 - NOP
(1)  645/    C94A :                     	NOP_0x80:
(1)  646/    C94A : (MACRO)             		OP_MACRO 128, "NOP", "IMP", "NOP_0x80"
(1)  646/    C94A :                             ;TODO
(1)  647/    C94A : (MACRO)             		NEXT_MACRO
(1)  647/    C94A :                                             
(1)  647/    C94A :  (MACRO-2)                  halt
(1)  647/    C94A : 00                          BRK
(1)  647/    C94B : 00                          BRK
(1)  647/    C94C :                             
(1)  647/    C94C :                             ;Method 1 - 60 cycles
(1)  647/    C94C :                             ;Jump table must be page aligned!!!
(1)  647/    C94C :                             ;LDA (emu_PC,X)                 ;6
(1)  647/    C94C :                             ;ASL                                    ;2
(1)  647/    C94C :                             ;STA emu_ptr,X                  ;4
(1)  647/    C94C :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  647/    C94C :                             ;ADC #0                                 ;2
(1)  647/    C94C :                             ;STA emu_ptr+1,X                ;4
(1)  647/    C94C :                             ;LDA (emu_ptr,X)                ;6
(1)  647/    C94C :                             ;STA emu_ptr2,X                 ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 193 - 1/5/2022 12:19:0


(1)  647/    C94C :                             ;INC emu_ptr,X                  ;6
(1)  647/    C94C :                             ;BCC .skip                              ;2
(1)  647/    C94C :                             ;       INC emu_ptr+1,X         ;6
(1)  647/    C94C :                             ;.skip:
(1)  647/    C94C :                             ;LDA (emu_ptr,X)                ;6
(1)  647/    C94C :                             ;STA emu_ptr2+1,X               ;4
(1)  647/    C94C :                             ;JMP (emu_ptr2,X)               ;6
(1)  647/    C94C :                             
(1)  647/    C94C :                             ;Method 2 - 46 cycles
(1)  647/    C94C :                             ;Jump table must be page aligned!!!
(1)  647/    C94C :                             ;LDA (emu_PC,X)                 ;6
(1)  647/    C94C :                             ;STZ emu_ptr+1,X                ;4
(1)  647/    C94C :                             ;ASL                                    ;2
(1)  647/    C94C :                             ;ROL emu_ptr+1,X                ;6
(1)  647/    C94C :                             ;ASL                                    ;2
(1)  647/    C94C :                             ;ROL emu_ptr+1,X                ;6
(1)  647/    C94C :                             ;STA emu_ptr,X                  ;4                              
(1)  647/    C94C :                             ;LDA emu_ptr+1,X                ;4
(1)  647/    C94C :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  647/    C94C :                             ;STA emu_ptr+1,X                ;4
(1)  647/    C94C :                             ;JMP (emu_ptr2,X)               ;6
(1)  647/    C94C :                             
(1)  647/    C94C :                             ;Method 3 - 30 cycles
(1)  647/    C94C :                             ;TXA                                                    ;2
(1)  647/    C94C :                             ;TAY                                                    ;2
(1)  647/    C94C :                             ;LDA (emu_PC,X)                                 ;6
(1)  647/    C94C :                             ;ASL                                                    ;2
(1)  647/    C94C :                             ;BCS upper                                              ;2
(1)  647/    C94C :                             ;lower:
(1)  647/    C94C :                             ;       ASL                                                     ;2
(1)  647/    C94C :                             ;       TAX                                                     ;2
(1)  647/    C94C :                             ;       BCS upper_lower                         ;2
(1)  647/    C94C :                             ;       lower_lower:
(1)  647/    C94C :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  647/    C94C :                             ;       upper_lower:
(1)  647/    C94C :                             ;               JMP (JUMP_TABLE2,X)
(1)  647/    C94C :                             ;upper:
(1)  647/    C94C :                             ;       ASL
(1)  647/    C94C :                             ;       TAX
(1)  647/    C94C :                             ;       BCS upper_upper
(1)  647/    C94C :                             ;       lower_upper:
(1)  647/    C94C :                             ;               JMP (JUMP_TABLE3,X)
(1)  647/    C94C :                             ;       upper_upper:
(1)  647/    C94C :                             ;               JMP (JUMP_TABLE4,X)
(1)  647/    C94C :                             ;After jump:
(1)  647/    C94C :                             ;TYA                                                    ;2
(1)  647/    C94C :                             ;TAX                                                    ;2
(1)  647/    C94C :                             
(1)  647/    C94C :                             ;Method 4 - 28 cycles
(1)  647/    C94C :                             ;LDA (emu_PC,X)                 ;6
(1)  647/    C94C :                             ;TAY                                    ;2
(1)  647/    C94C :                             ;LDA JUMP_TABLE,Y               ;4
(1)  647/    C94C :                             ;PHA                                    ;3
(1)  647/    C94C :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  647/    C94C :                             ;PHA                                    ;3
(1)  647/    C94C :                             ;RTS                                    ;6
(1)  647/    C94C :                             
(1)  647/    C94C :                             ;Method 5 - 30 cycles
(1)  647/    C94C : A1 02                       LDA (emu_PC,X)                  ;6
(1)  647/    C94E : A8                          TAY                                             ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 194 - 1/5/2022 12:19:0


(1)  647/    C94F : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  647/    C952 : 95 0A                       STA emu_ptr,X                   ;4
(1)  647/    C954 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  647/    C957 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  647/    C959 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  647/    C95C :                                                     
(1)  648/    C95C :                     
(1)  649/    C95C :                     	;0x81 - STA IX
(1)  650/    C95C :                     	STA_IX:
(1)  651/    C95C : (MACRO)             		OP_MACRO 129, "STA", "IX", "STA_IX"
(1)  651/    C95C :                             ;TODO
(1)  652/    C95C : (MACRO)             		NEXT_MACRO
(1)  652/    C95C :                                             
(1)  652/    C95C :  (MACRO-2)                  halt
(1)  652/    C95C : 00                          BRK
(1)  652/    C95D : 00                          BRK
(1)  652/    C95E :                             
(1)  652/    C95E :                             ;Method 1 - 60 cycles
(1)  652/    C95E :                             ;Jump table must be page aligned!!!
(1)  652/    C95E :                             ;LDA (emu_PC,X)                 ;6
(1)  652/    C95E :                             ;ASL                                    ;2
(1)  652/    C95E :                             ;STA emu_ptr,X                  ;4
(1)  652/    C95E :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  652/    C95E :                             ;ADC #0                                 ;2
(1)  652/    C95E :                             ;STA emu_ptr+1,X                ;4
(1)  652/    C95E :                             ;LDA (emu_ptr,X)                ;6
(1)  652/    C95E :                             ;STA emu_ptr2,X                 ;4
(1)  652/    C95E :                             ;INC emu_ptr,X                  ;6
(1)  652/    C95E :                             ;BCC .skip                              ;2
(1)  652/    C95E :                             ;       INC emu_ptr+1,X         ;6
(1)  652/    C95E :                             ;.skip:
(1)  652/    C95E :                             ;LDA (emu_ptr,X)                ;6
(1)  652/    C95E :                             ;STA emu_ptr2+1,X               ;4
(1)  652/    C95E :                             ;JMP (emu_ptr2,X)               ;6
(1)  652/    C95E :                             
(1)  652/    C95E :                             ;Method 2 - 46 cycles
(1)  652/    C95E :                             ;Jump table must be page aligned!!!
(1)  652/    C95E :                             ;LDA (emu_PC,X)                 ;6
(1)  652/    C95E :                             ;STZ emu_ptr+1,X                ;4
(1)  652/    C95E :                             ;ASL                                    ;2
(1)  652/    C95E :                             ;ROL emu_ptr+1,X                ;6
(1)  652/    C95E :                             ;ASL                                    ;2
(1)  652/    C95E :                             ;ROL emu_ptr+1,X                ;6
(1)  652/    C95E :                             ;STA emu_ptr,X                  ;4                              
(1)  652/    C95E :                             ;LDA emu_ptr+1,X                ;4
(1)  652/    C95E :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  652/    C95E :                             ;STA emu_ptr+1,X                ;4
(1)  652/    C95E :                             ;JMP (emu_ptr2,X)               ;6
(1)  652/    C95E :                             
(1)  652/    C95E :                             ;Method 3 - 30 cycles
(1)  652/    C95E :                             ;TXA                                                    ;2
(1)  652/    C95E :                             ;TAY                                                    ;2
(1)  652/    C95E :                             ;LDA (emu_PC,X)                                 ;6
(1)  652/    C95E :                             ;ASL                                                    ;2
(1)  652/    C95E :                             ;BCS upper                                              ;2
(1)  652/    C95E :                             ;lower:
(1)  652/    C95E :                             ;       ASL                                                     ;2
(1)  652/    C95E :                             ;       TAX                                                     ;2
(1)  652/    C95E :                             ;       BCS upper_lower                         ;2
(1)  652/    C95E :                             ;       lower_lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 195 - 1/5/2022 12:19:0


(1)  652/    C95E :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  652/    C95E :                             ;       upper_lower:
(1)  652/    C95E :                             ;               JMP (JUMP_TABLE2,X)
(1)  652/    C95E :                             ;upper:
(1)  652/    C95E :                             ;       ASL
(1)  652/    C95E :                             ;       TAX
(1)  652/    C95E :                             ;       BCS upper_upper
(1)  652/    C95E :                             ;       lower_upper:
(1)  652/    C95E :                             ;               JMP (JUMP_TABLE3,X)
(1)  652/    C95E :                             ;       upper_upper:
(1)  652/    C95E :                             ;               JMP (JUMP_TABLE4,X)
(1)  652/    C95E :                             ;After jump:
(1)  652/    C95E :                             ;TYA                                                    ;2
(1)  652/    C95E :                             ;TAX                                                    ;2
(1)  652/    C95E :                             
(1)  652/    C95E :                             ;Method 4 - 28 cycles
(1)  652/    C95E :                             ;LDA (emu_PC,X)                 ;6
(1)  652/    C95E :                             ;TAY                                    ;2
(1)  652/    C95E :                             ;LDA JUMP_TABLE,Y               ;4
(1)  652/    C95E :                             ;PHA                                    ;3
(1)  652/    C95E :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  652/    C95E :                             ;PHA                                    ;3
(1)  652/    C95E :                             ;RTS                                    ;6
(1)  652/    C95E :                             
(1)  652/    C95E :                             ;Method 5 - 30 cycles
(1)  652/    C95E : A1 02                       LDA (emu_PC,X)                  ;6
(1)  652/    C960 : A8                          TAY                                             ;2
(1)  652/    C961 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  652/    C964 : 95 0A                       STA emu_ptr,X                   ;4
(1)  652/    C966 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  652/    C969 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  652/    C96B : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  652/    C96E :                                                     
(1)  653/    C96E :                     
(1)  654/    C96E :                     	;0x82 - NOP
(1)  655/    C96E :                     	NOP_0x82:
(1)  656/    C96E : (MACRO)             		OP_MACRO 130, "NOP", "IMP", "NOP_0x82"
(1)  656/    C96E :                             ;TODO
(1)  657/    C96E : (MACRO)             		NEXT_MACRO
(1)  657/    C96E :                                             
(1)  657/    C96E :  (MACRO-2)                  halt
(1)  657/    C96E : 00                          BRK
(1)  657/    C96F : 00                          BRK
(1)  657/    C970 :                             
(1)  657/    C970 :                             ;Method 1 - 60 cycles
(1)  657/    C970 :                             ;Jump table must be page aligned!!!
(1)  657/    C970 :                             ;LDA (emu_PC,X)                 ;6
(1)  657/    C970 :                             ;ASL                                    ;2
(1)  657/    C970 :                             ;STA emu_ptr,X                  ;4
(1)  657/    C970 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  657/    C970 :                             ;ADC #0                                 ;2
(1)  657/    C970 :                             ;STA emu_ptr+1,X                ;4
(1)  657/    C970 :                             ;LDA (emu_ptr,X)                ;6
(1)  657/    C970 :                             ;STA emu_ptr2,X                 ;4
(1)  657/    C970 :                             ;INC emu_ptr,X                  ;6
(1)  657/    C970 :                             ;BCC .skip                              ;2
(1)  657/    C970 :                             ;       INC emu_ptr+1,X         ;6
(1)  657/    C970 :                             ;.skip:
(1)  657/    C970 :                             ;LDA (emu_ptr,X)                ;6
(1)  657/    C970 :                             ;STA emu_ptr2+1,X               ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 196 - 1/5/2022 12:19:0


(1)  657/    C970 :                             ;JMP (emu_ptr2,X)               ;6
(1)  657/    C970 :                             
(1)  657/    C970 :                             ;Method 2 - 46 cycles
(1)  657/    C970 :                             ;Jump table must be page aligned!!!
(1)  657/    C970 :                             ;LDA (emu_PC,X)                 ;6
(1)  657/    C970 :                             ;STZ emu_ptr+1,X                ;4
(1)  657/    C970 :                             ;ASL                                    ;2
(1)  657/    C970 :                             ;ROL emu_ptr+1,X                ;6
(1)  657/    C970 :                             ;ASL                                    ;2
(1)  657/    C970 :                             ;ROL emu_ptr+1,X                ;6
(1)  657/    C970 :                             ;STA emu_ptr,X                  ;4                              
(1)  657/    C970 :                             ;LDA emu_ptr+1,X                ;4
(1)  657/    C970 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  657/    C970 :                             ;STA emu_ptr+1,X                ;4
(1)  657/    C970 :                             ;JMP (emu_ptr2,X)               ;6
(1)  657/    C970 :                             
(1)  657/    C970 :                             ;Method 3 - 30 cycles
(1)  657/    C970 :                             ;TXA                                                    ;2
(1)  657/    C970 :                             ;TAY                                                    ;2
(1)  657/    C970 :                             ;LDA (emu_PC,X)                                 ;6
(1)  657/    C970 :                             ;ASL                                                    ;2
(1)  657/    C970 :                             ;BCS upper                                              ;2
(1)  657/    C970 :                             ;lower:
(1)  657/    C970 :                             ;       ASL                                                     ;2
(1)  657/    C970 :                             ;       TAX                                                     ;2
(1)  657/    C970 :                             ;       BCS upper_lower                         ;2
(1)  657/    C970 :                             ;       lower_lower:
(1)  657/    C970 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  657/    C970 :                             ;       upper_lower:
(1)  657/    C970 :                             ;               JMP (JUMP_TABLE2,X)
(1)  657/    C970 :                             ;upper:
(1)  657/    C970 :                             ;       ASL
(1)  657/    C970 :                             ;       TAX
(1)  657/    C970 :                             ;       BCS upper_upper
(1)  657/    C970 :                             ;       lower_upper:
(1)  657/    C970 :                             ;               JMP (JUMP_TABLE3,X)
(1)  657/    C970 :                             ;       upper_upper:
(1)  657/    C970 :                             ;               JMP (JUMP_TABLE4,X)
(1)  657/    C970 :                             ;After jump:
(1)  657/    C970 :                             ;TYA                                                    ;2
(1)  657/    C970 :                             ;TAX                                                    ;2
(1)  657/    C970 :                             
(1)  657/    C970 :                             ;Method 4 - 28 cycles
(1)  657/    C970 :                             ;LDA (emu_PC,X)                 ;6
(1)  657/    C970 :                             ;TAY                                    ;2
(1)  657/    C970 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  657/    C970 :                             ;PHA                                    ;3
(1)  657/    C970 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  657/    C970 :                             ;PHA                                    ;3
(1)  657/    C970 :                             ;RTS                                    ;6
(1)  657/    C970 :                             
(1)  657/    C970 :                             ;Method 5 - 30 cycles
(1)  657/    C970 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  657/    C972 : A8                          TAY                                             ;2
(1)  657/    C973 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  657/    C976 : 95 0A                       STA emu_ptr,X                   ;4
(1)  657/    C978 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  657/    C97B : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  657/    C97D : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  657/    C980 :                                                     
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 197 - 1/5/2022 12:19:0


(1)  658/    C980 :                     
(1)  659/    C980 :                     	;0x83 - NOP
(1)  660/    C980 :                     	NOP_0x83:
(1)  661/    C980 : (MACRO)             		OP_MACRO 131, "NOP", "IMP", "NOP_0x83"
(1)  661/    C980 :                             ;TODO
(1)  662/    C980 : (MACRO)             		NEXT_MACRO
(1)  662/    C980 :                                             
(1)  662/    C980 :  (MACRO-2)                  halt
(1)  662/    C980 : 00                          BRK
(1)  662/    C981 : 00                          BRK
(1)  662/    C982 :                             
(1)  662/    C982 :                             ;Method 1 - 60 cycles
(1)  662/    C982 :                             ;Jump table must be page aligned!!!
(1)  662/    C982 :                             ;LDA (emu_PC,X)                 ;6
(1)  662/    C982 :                             ;ASL                                    ;2
(1)  662/    C982 :                             ;STA emu_ptr,X                  ;4
(1)  662/    C982 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  662/    C982 :                             ;ADC #0                                 ;2
(1)  662/    C982 :                             ;STA emu_ptr+1,X                ;4
(1)  662/    C982 :                             ;LDA (emu_ptr,X)                ;6
(1)  662/    C982 :                             ;STA emu_ptr2,X                 ;4
(1)  662/    C982 :                             ;INC emu_ptr,X                  ;6
(1)  662/    C982 :                             ;BCC .skip                              ;2
(1)  662/    C982 :                             ;       INC emu_ptr+1,X         ;6
(1)  662/    C982 :                             ;.skip:
(1)  662/    C982 :                             ;LDA (emu_ptr,X)                ;6
(1)  662/    C982 :                             ;STA emu_ptr2+1,X               ;4
(1)  662/    C982 :                             ;JMP (emu_ptr2,X)               ;6
(1)  662/    C982 :                             
(1)  662/    C982 :                             ;Method 2 - 46 cycles
(1)  662/    C982 :                             ;Jump table must be page aligned!!!
(1)  662/    C982 :                             ;LDA (emu_PC,X)                 ;6
(1)  662/    C982 :                             ;STZ emu_ptr+1,X                ;4
(1)  662/    C982 :                             ;ASL                                    ;2
(1)  662/    C982 :                             ;ROL emu_ptr+1,X                ;6
(1)  662/    C982 :                             ;ASL                                    ;2
(1)  662/    C982 :                             ;ROL emu_ptr+1,X                ;6
(1)  662/    C982 :                             ;STA emu_ptr,X                  ;4                              
(1)  662/    C982 :                             ;LDA emu_ptr+1,X                ;4
(1)  662/    C982 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  662/    C982 :                             ;STA emu_ptr+1,X                ;4
(1)  662/    C982 :                             ;JMP (emu_ptr2,X)               ;6
(1)  662/    C982 :                             
(1)  662/    C982 :                             ;Method 3 - 30 cycles
(1)  662/    C982 :                             ;TXA                                                    ;2
(1)  662/    C982 :                             ;TAY                                                    ;2
(1)  662/    C982 :                             ;LDA (emu_PC,X)                                 ;6
(1)  662/    C982 :                             ;ASL                                                    ;2
(1)  662/    C982 :                             ;BCS upper                                              ;2
(1)  662/    C982 :                             ;lower:
(1)  662/    C982 :                             ;       ASL                                                     ;2
(1)  662/    C982 :                             ;       TAX                                                     ;2
(1)  662/    C982 :                             ;       BCS upper_lower                         ;2
(1)  662/    C982 :                             ;       lower_lower:
(1)  662/    C982 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  662/    C982 :                             ;       upper_lower:
(1)  662/    C982 :                             ;               JMP (JUMP_TABLE2,X)
(1)  662/    C982 :                             ;upper:
(1)  662/    C982 :                             ;       ASL
(1)  662/    C982 :                             ;       TAX
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 198 - 1/5/2022 12:19:0


(1)  662/    C982 :                             ;       BCS upper_upper
(1)  662/    C982 :                             ;       lower_upper:
(1)  662/    C982 :                             ;               JMP (JUMP_TABLE3,X)
(1)  662/    C982 :                             ;       upper_upper:
(1)  662/    C982 :                             ;               JMP (JUMP_TABLE4,X)
(1)  662/    C982 :                             ;After jump:
(1)  662/    C982 :                             ;TYA                                                    ;2
(1)  662/    C982 :                             ;TAX                                                    ;2
(1)  662/    C982 :                             
(1)  662/    C982 :                             ;Method 4 - 28 cycles
(1)  662/    C982 :                             ;LDA (emu_PC,X)                 ;6
(1)  662/    C982 :                             ;TAY                                    ;2
(1)  662/    C982 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  662/    C982 :                             ;PHA                                    ;3
(1)  662/    C982 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  662/    C982 :                             ;PHA                                    ;3
(1)  662/    C982 :                             ;RTS                                    ;6
(1)  662/    C982 :                             
(1)  662/    C982 :                             ;Method 5 - 30 cycles
(1)  662/    C982 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  662/    C984 : A8                          TAY                                             ;2
(1)  662/    C985 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  662/    C988 : 95 0A                       STA emu_ptr,X                   ;4
(1)  662/    C98A : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  662/    C98D : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  662/    C98F : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  662/    C992 :                                                     
(1)  663/    C992 :                     
(1)  664/    C992 :                     	;0x84 - STY ZP
(1)  665/    C992 :                     	STY_ZP:
(1)  666/    C992 : (MACRO)             		OP_MACRO 132, "STY", "ZP", "STY_ZP"
(1)  666/    C992 :                             ;TODO
(1)  667/    C992 : (MACRO)             		NEXT_MACRO
(1)  667/    C992 :                                             
(1)  667/    C992 :  (MACRO-2)                  halt
(1)  667/    C992 : 00                          BRK
(1)  667/    C993 : 00                          BRK
(1)  667/    C994 :                             
(1)  667/    C994 :                             ;Method 1 - 60 cycles
(1)  667/    C994 :                             ;Jump table must be page aligned!!!
(1)  667/    C994 :                             ;LDA (emu_PC,X)                 ;6
(1)  667/    C994 :                             ;ASL                                    ;2
(1)  667/    C994 :                             ;STA emu_ptr,X                  ;4
(1)  667/    C994 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  667/    C994 :                             ;ADC #0                                 ;2
(1)  667/    C994 :                             ;STA emu_ptr+1,X                ;4
(1)  667/    C994 :                             ;LDA (emu_ptr,X)                ;6
(1)  667/    C994 :                             ;STA emu_ptr2,X                 ;4
(1)  667/    C994 :                             ;INC emu_ptr,X                  ;6
(1)  667/    C994 :                             ;BCC .skip                              ;2
(1)  667/    C994 :                             ;       INC emu_ptr+1,X         ;6
(1)  667/    C994 :                             ;.skip:
(1)  667/    C994 :                             ;LDA (emu_ptr,X)                ;6
(1)  667/    C994 :                             ;STA emu_ptr2+1,X               ;4
(1)  667/    C994 :                             ;JMP (emu_ptr2,X)               ;6
(1)  667/    C994 :                             
(1)  667/    C994 :                             ;Method 2 - 46 cycles
(1)  667/    C994 :                             ;Jump table must be page aligned!!!
(1)  667/    C994 :                             ;LDA (emu_PC,X)                 ;6
(1)  667/    C994 :                             ;STZ emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 199 - 1/5/2022 12:19:0


(1)  667/    C994 :                             ;ASL                                    ;2
(1)  667/    C994 :                             ;ROL emu_ptr+1,X                ;6
(1)  667/    C994 :                             ;ASL                                    ;2
(1)  667/    C994 :                             ;ROL emu_ptr+1,X                ;6
(1)  667/    C994 :                             ;STA emu_ptr,X                  ;4                              
(1)  667/    C994 :                             ;LDA emu_ptr+1,X                ;4
(1)  667/    C994 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  667/    C994 :                             ;STA emu_ptr+1,X                ;4
(1)  667/    C994 :                             ;JMP (emu_ptr2,X)               ;6
(1)  667/    C994 :                             
(1)  667/    C994 :                             ;Method 3 - 30 cycles
(1)  667/    C994 :                             ;TXA                                                    ;2
(1)  667/    C994 :                             ;TAY                                                    ;2
(1)  667/    C994 :                             ;LDA (emu_PC,X)                                 ;6
(1)  667/    C994 :                             ;ASL                                                    ;2
(1)  667/    C994 :                             ;BCS upper                                              ;2
(1)  667/    C994 :                             ;lower:
(1)  667/    C994 :                             ;       ASL                                                     ;2
(1)  667/    C994 :                             ;       TAX                                                     ;2
(1)  667/    C994 :                             ;       BCS upper_lower                         ;2
(1)  667/    C994 :                             ;       lower_lower:
(1)  667/    C994 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  667/    C994 :                             ;       upper_lower:
(1)  667/    C994 :                             ;               JMP (JUMP_TABLE2,X)
(1)  667/    C994 :                             ;upper:
(1)  667/    C994 :                             ;       ASL
(1)  667/    C994 :                             ;       TAX
(1)  667/    C994 :                             ;       BCS upper_upper
(1)  667/    C994 :                             ;       lower_upper:
(1)  667/    C994 :                             ;               JMP (JUMP_TABLE3,X)
(1)  667/    C994 :                             ;       upper_upper:
(1)  667/    C994 :                             ;               JMP (JUMP_TABLE4,X)
(1)  667/    C994 :                             ;After jump:
(1)  667/    C994 :                             ;TYA                                                    ;2
(1)  667/    C994 :                             ;TAX                                                    ;2
(1)  667/    C994 :                             
(1)  667/    C994 :                             ;Method 4 - 28 cycles
(1)  667/    C994 :                             ;LDA (emu_PC,X)                 ;6
(1)  667/    C994 :                             ;TAY                                    ;2
(1)  667/    C994 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  667/    C994 :                             ;PHA                                    ;3
(1)  667/    C994 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  667/    C994 :                             ;PHA                                    ;3
(1)  667/    C994 :                             ;RTS                                    ;6
(1)  667/    C994 :                             
(1)  667/    C994 :                             ;Method 5 - 30 cycles
(1)  667/    C994 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  667/    C996 : A8                          TAY                                             ;2
(1)  667/    C997 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  667/    C99A : 95 0A                       STA emu_ptr,X                   ;4
(1)  667/    C99C : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  667/    C99F : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  667/    C9A1 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  667/    C9A4 :                                                     
(1)  668/    C9A4 :                     
(1)  669/    C9A4 :                     	;0x85 - STA ZP
(1)  670/    C9A4 :                     	STA_ZP:
(1)  671/    C9A4 : (MACRO)             		OP_MACRO 133, "STA", "ZP", "STA_ZP"
(1)  671/    C9A4 :                             ;TODO
(1)  672/    C9A4 : (MACRO)             		NEXT_MACRO
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 200 - 1/5/2022 12:19:0


(1)  672/    C9A4 :                                             
(1)  672/    C9A4 :  (MACRO-2)                  halt
(1)  672/    C9A4 : 00                          BRK
(1)  672/    C9A5 : 00                          BRK
(1)  672/    C9A6 :                             
(1)  672/    C9A6 :                             ;Method 1 - 60 cycles
(1)  672/    C9A6 :                             ;Jump table must be page aligned!!!
(1)  672/    C9A6 :                             ;LDA (emu_PC,X)                 ;6
(1)  672/    C9A6 :                             ;ASL                                    ;2
(1)  672/    C9A6 :                             ;STA emu_ptr,X                  ;4
(1)  672/    C9A6 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  672/    C9A6 :                             ;ADC #0                                 ;2
(1)  672/    C9A6 :                             ;STA emu_ptr+1,X                ;4
(1)  672/    C9A6 :                             ;LDA (emu_ptr,X)                ;6
(1)  672/    C9A6 :                             ;STA emu_ptr2,X                 ;4
(1)  672/    C9A6 :                             ;INC emu_ptr,X                  ;6
(1)  672/    C9A6 :                             ;BCC .skip                              ;2
(1)  672/    C9A6 :                             ;       INC emu_ptr+1,X         ;6
(1)  672/    C9A6 :                             ;.skip:
(1)  672/    C9A6 :                             ;LDA (emu_ptr,X)                ;6
(1)  672/    C9A6 :                             ;STA emu_ptr2+1,X               ;4
(1)  672/    C9A6 :                             ;JMP (emu_ptr2,X)               ;6
(1)  672/    C9A6 :                             
(1)  672/    C9A6 :                             ;Method 2 - 46 cycles
(1)  672/    C9A6 :                             ;Jump table must be page aligned!!!
(1)  672/    C9A6 :                             ;LDA (emu_PC,X)                 ;6
(1)  672/    C9A6 :                             ;STZ emu_ptr+1,X                ;4
(1)  672/    C9A6 :                             ;ASL                                    ;2
(1)  672/    C9A6 :                             ;ROL emu_ptr+1,X                ;6
(1)  672/    C9A6 :                             ;ASL                                    ;2
(1)  672/    C9A6 :                             ;ROL emu_ptr+1,X                ;6
(1)  672/    C9A6 :                             ;STA emu_ptr,X                  ;4                              
(1)  672/    C9A6 :                             ;LDA emu_ptr+1,X                ;4
(1)  672/    C9A6 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  672/    C9A6 :                             ;STA emu_ptr+1,X                ;4
(1)  672/    C9A6 :                             ;JMP (emu_ptr2,X)               ;6
(1)  672/    C9A6 :                             
(1)  672/    C9A6 :                             ;Method 3 - 30 cycles
(1)  672/    C9A6 :                             ;TXA                                                    ;2
(1)  672/    C9A6 :                             ;TAY                                                    ;2
(1)  672/    C9A6 :                             ;LDA (emu_PC,X)                                 ;6
(1)  672/    C9A6 :                             ;ASL                                                    ;2
(1)  672/    C9A6 :                             ;BCS upper                                              ;2
(1)  672/    C9A6 :                             ;lower:
(1)  672/    C9A6 :                             ;       ASL                                                     ;2
(1)  672/    C9A6 :                             ;       TAX                                                     ;2
(1)  672/    C9A6 :                             ;       BCS upper_lower                         ;2
(1)  672/    C9A6 :                             ;       lower_lower:
(1)  672/    C9A6 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  672/    C9A6 :                             ;       upper_lower:
(1)  672/    C9A6 :                             ;               JMP (JUMP_TABLE2,X)
(1)  672/    C9A6 :                             ;upper:
(1)  672/    C9A6 :                             ;       ASL
(1)  672/    C9A6 :                             ;       TAX
(1)  672/    C9A6 :                             ;       BCS upper_upper
(1)  672/    C9A6 :                             ;       lower_upper:
(1)  672/    C9A6 :                             ;               JMP (JUMP_TABLE3,X)
(1)  672/    C9A6 :                             ;       upper_upper:
(1)  672/    C9A6 :                             ;               JMP (JUMP_TABLE4,X)
(1)  672/    C9A6 :                             ;After jump:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 201 - 1/5/2022 12:19:0


(1)  672/    C9A6 :                             ;TYA                                                    ;2
(1)  672/    C9A6 :                             ;TAX                                                    ;2
(1)  672/    C9A6 :                             
(1)  672/    C9A6 :                             ;Method 4 - 28 cycles
(1)  672/    C9A6 :                             ;LDA (emu_PC,X)                 ;6
(1)  672/    C9A6 :                             ;TAY                                    ;2
(1)  672/    C9A6 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  672/    C9A6 :                             ;PHA                                    ;3
(1)  672/    C9A6 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  672/    C9A6 :                             ;PHA                                    ;3
(1)  672/    C9A6 :                             ;RTS                                    ;6
(1)  672/    C9A6 :                             
(1)  672/    C9A6 :                             ;Method 5 - 30 cycles
(1)  672/    C9A6 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  672/    C9A8 : A8                          TAY                                             ;2
(1)  672/    C9A9 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  672/    C9AC : 95 0A                       STA emu_ptr,X                   ;4
(1)  672/    C9AE : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  672/    C9B1 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  672/    C9B3 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  672/    C9B6 :                                                     
(1)  673/    C9B6 :                     
(1)  674/    C9B6 :                     	;0x86 - STX ZP
(1)  675/    C9B6 :                     	STX_ZP:
(1)  676/    C9B6 : (MACRO)             		OP_MACRO 134, "STX", "ZP", "STX_ZP"
(1)  676/    C9B6 :                             ;TODO
(1)  677/    C9B6 : (MACRO)             		NEXT_MACRO
(1)  677/    C9B6 :                                             
(1)  677/    C9B6 :  (MACRO-2)                  halt
(1)  677/    C9B6 : 00                          BRK
(1)  677/    C9B7 : 00                          BRK
(1)  677/    C9B8 :                             
(1)  677/    C9B8 :                             ;Method 1 - 60 cycles
(1)  677/    C9B8 :                             ;Jump table must be page aligned!!!
(1)  677/    C9B8 :                             ;LDA (emu_PC,X)                 ;6
(1)  677/    C9B8 :                             ;ASL                                    ;2
(1)  677/    C9B8 :                             ;STA emu_ptr,X                  ;4
(1)  677/    C9B8 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  677/    C9B8 :                             ;ADC #0                                 ;2
(1)  677/    C9B8 :                             ;STA emu_ptr+1,X                ;4
(1)  677/    C9B8 :                             ;LDA (emu_ptr,X)                ;6
(1)  677/    C9B8 :                             ;STA emu_ptr2,X                 ;4
(1)  677/    C9B8 :                             ;INC emu_ptr,X                  ;6
(1)  677/    C9B8 :                             ;BCC .skip                              ;2
(1)  677/    C9B8 :                             ;       INC emu_ptr+1,X         ;6
(1)  677/    C9B8 :                             ;.skip:
(1)  677/    C9B8 :                             ;LDA (emu_ptr,X)                ;6
(1)  677/    C9B8 :                             ;STA emu_ptr2+1,X               ;4
(1)  677/    C9B8 :                             ;JMP (emu_ptr2,X)               ;6
(1)  677/    C9B8 :                             
(1)  677/    C9B8 :                             ;Method 2 - 46 cycles
(1)  677/    C9B8 :                             ;Jump table must be page aligned!!!
(1)  677/    C9B8 :                             ;LDA (emu_PC,X)                 ;6
(1)  677/    C9B8 :                             ;STZ emu_ptr+1,X                ;4
(1)  677/    C9B8 :                             ;ASL                                    ;2
(1)  677/    C9B8 :                             ;ROL emu_ptr+1,X                ;6
(1)  677/    C9B8 :                             ;ASL                                    ;2
(1)  677/    C9B8 :                             ;ROL emu_ptr+1,X                ;6
(1)  677/    C9B8 :                             ;STA emu_ptr,X                  ;4                              
(1)  677/    C9B8 :                             ;LDA emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 202 - 1/5/2022 12:19:0


(1)  677/    C9B8 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  677/    C9B8 :                             ;STA emu_ptr+1,X                ;4
(1)  677/    C9B8 :                             ;JMP (emu_ptr2,X)               ;6
(1)  677/    C9B8 :                             
(1)  677/    C9B8 :                             ;Method 3 - 30 cycles
(1)  677/    C9B8 :                             ;TXA                                                    ;2
(1)  677/    C9B8 :                             ;TAY                                                    ;2
(1)  677/    C9B8 :                             ;LDA (emu_PC,X)                                 ;6
(1)  677/    C9B8 :                             ;ASL                                                    ;2
(1)  677/    C9B8 :                             ;BCS upper                                              ;2
(1)  677/    C9B8 :                             ;lower:
(1)  677/    C9B8 :                             ;       ASL                                                     ;2
(1)  677/    C9B8 :                             ;       TAX                                                     ;2
(1)  677/    C9B8 :                             ;       BCS upper_lower                         ;2
(1)  677/    C9B8 :                             ;       lower_lower:
(1)  677/    C9B8 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  677/    C9B8 :                             ;       upper_lower:
(1)  677/    C9B8 :                             ;               JMP (JUMP_TABLE2,X)
(1)  677/    C9B8 :                             ;upper:
(1)  677/    C9B8 :                             ;       ASL
(1)  677/    C9B8 :                             ;       TAX
(1)  677/    C9B8 :                             ;       BCS upper_upper
(1)  677/    C9B8 :                             ;       lower_upper:
(1)  677/    C9B8 :                             ;               JMP (JUMP_TABLE3,X)
(1)  677/    C9B8 :                             ;       upper_upper:
(1)  677/    C9B8 :                             ;               JMP (JUMP_TABLE4,X)
(1)  677/    C9B8 :                             ;After jump:
(1)  677/    C9B8 :                             ;TYA                                                    ;2
(1)  677/    C9B8 :                             ;TAX                                                    ;2
(1)  677/    C9B8 :                             
(1)  677/    C9B8 :                             ;Method 4 - 28 cycles
(1)  677/    C9B8 :                             ;LDA (emu_PC,X)                 ;6
(1)  677/    C9B8 :                             ;TAY                                    ;2
(1)  677/    C9B8 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  677/    C9B8 :                             ;PHA                                    ;3
(1)  677/    C9B8 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  677/    C9B8 :                             ;PHA                                    ;3
(1)  677/    C9B8 :                             ;RTS                                    ;6
(1)  677/    C9B8 :                             
(1)  677/    C9B8 :                             ;Method 5 - 30 cycles
(1)  677/    C9B8 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  677/    C9BA : A8                          TAY                                             ;2
(1)  677/    C9BB : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  677/    C9BE : 95 0A                       STA emu_ptr,X                   ;4
(1)  677/    C9C0 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  677/    C9C3 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  677/    C9C5 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  677/    C9C8 :                                                     
(1)  678/    C9C8 :                     
(1)  679/    C9C8 :                     	;0x87 - NOP
(1)  680/    C9C8 :                     	NOP_0x87:
(1)  681/    C9C8 : (MACRO)             		OP_MACRO 135, "NOP", "IMP", "NOP_0x87"
(1)  681/    C9C8 :                             ;TODO
(1)  682/    C9C8 : (MACRO)             		NEXT_MACRO
(1)  682/    C9C8 :                                             
(1)  682/    C9C8 :  (MACRO-2)                  halt
(1)  682/    C9C8 : 00                          BRK
(1)  682/    C9C9 : 00                          BRK
(1)  682/    C9CA :                             
(1)  682/    C9CA :                             ;Method 1 - 60 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 203 - 1/5/2022 12:19:0


(1)  682/    C9CA :                             ;Jump table must be page aligned!!!
(1)  682/    C9CA :                             ;LDA (emu_PC,X)                 ;6
(1)  682/    C9CA :                             ;ASL                                    ;2
(1)  682/    C9CA :                             ;STA emu_ptr,X                  ;4
(1)  682/    C9CA :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  682/    C9CA :                             ;ADC #0                                 ;2
(1)  682/    C9CA :                             ;STA emu_ptr+1,X                ;4
(1)  682/    C9CA :                             ;LDA (emu_ptr,X)                ;6
(1)  682/    C9CA :                             ;STA emu_ptr2,X                 ;4
(1)  682/    C9CA :                             ;INC emu_ptr,X                  ;6
(1)  682/    C9CA :                             ;BCC .skip                              ;2
(1)  682/    C9CA :                             ;       INC emu_ptr+1,X         ;6
(1)  682/    C9CA :                             ;.skip:
(1)  682/    C9CA :                             ;LDA (emu_ptr,X)                ;6
(1)  682/    C9CA :                             ;STA emu_ptr2+1,X               ;4
(1)  682/    C9CA :                             ;JMP (emu_ptr2,X)               ;6
(1)  682/    C9CA :                             
(1)  682/    C9CA :                             ;Method 2 - 46 cycles
(1)  682/    C9CA :                             ;Jump table must be page aligned!!!
(1)  682/    C9CA :                             ;LDA (emu_PC,X)                 ;6
(1)  682/    C9CA :                             ;STZ emu_ptr+1,X                ;4
(1)  682/    C9CA :                             ;ASL                                    ;2
(1)  682/    C9CA :                             ;ROL emu_ptr+1,X                ;6
(1)  682/    C9CA :                             ;ASL                                    ;2
(1)  682/    C9CA :                             ;ROL emu_ptr+1,X                ;6
(1)  682/    C9CA :                             ;STA emu_ptr,X                  ;4                              
(1)  682/    C9CA :                             ;LDA emu_ptr+1,X                ;4
(1)  682/    C9CA :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  682/    C9CA :                             ;STA emu_ptr+1,X                ;4
(1)  682/    C9CA :                             ;JMP (emu_ptr2,X)               ;6
(1)  682/    C9CA :                             
(1)  682/    C9CA :                             ;Method 3 - 30 cycles
(1)  682/    C9CA :                             ;TXA                                                    ;2
(1)  682/    C9CA :                             ;TAY                                                    ;2
(1)  682/    C9CA :                             ;LDA (emu_PC,X)                                 ;6
(1)  682/    C9CA :                             ;ASL                                                    ;2
(1)  682/    C9CA :                             ;BCS upper                                              ;2
(1)  682/    C9CA :                             ;lower:
(1)  682/    C9CA :                             ;       ASL                                                     ;2
(1)  682/    C9CA :                             ;       TAX                                                     ;2
(1)  682/    C9CA :                             ;       BCS upper_lower                         ;2
(1)  682/    C9CA :                             ;       lower_lower:
(1)  682/    C9CA :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  682/    C9CA :                             ;       upper_lower:
(1)  682/    C9CA :                             ;               JMP (JUMP_TABLE2,X)
(1)  682/    C9CA :                             ;upper:
(1)  682/    C9CA :                             ;       ASL
(1)  682/    C9CA :                             ;       TAX
(1)  682/    C9CA :                             ;       BCS upper_upper
(1)  682/    C9CA :                             ;       lower_upper:
(1)  682/    C9CA :                             ;               JMP (JUMP_TABLE3,X)
(1)  682/    C9CA :                             ;       upper_upper:
(1)  682/    C9CA :                             ;               JMP (JUMP_TABLE4,X)
(1)  682/    C9CA :                             ;After jump:
(1)  682/    C9CA :                             ;TYA                                                    ;2
(1)  682/    C9CA :                             ;TAX                                                    ;2
(1)  682/    C9CA :                             
(1)  682/    C9CA :                             ;Method 4 - 28 cycles
(1)  682/    C9CA :                             ;LDA (emu_PC,X)                 ;6
(1)  682/    C9CA :                             ;TAY                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 204 - 1/5/2022 12:19:0


(1)  682/    C9CA :                             ;LDA JUMP_TABLE,Y               ;4
(1)  682/    C9CA :                             ;PHA                                    ;3
(1)  682/    C9CA :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  682/    C9CA :                             ;PHA                                    ;3
(1)  682/    C9CA :                             ;RTS                                    ;6
(1)  682/    C9CA :                             
(1)  682/    C9CA :                             ;Method 5 - 30 cycles
(1)  682/    C9CA : A1 02                       LDA (emu_PC,X)                  ;6
(1)  682/    C9CC : A8                          TAY                                             ;2
(1)  682/    C9CD : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  682/    C9D0 : 95 0A                       STA emu_ptr,X                   ;4
(1)  682/    C9D2 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  682/    C9D5 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  682/    C9D7 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  682/    C9DA :                                                     
(1)  683/    C9DA :                     
(1)  684/    C9DA :                     	;0x88 - DEY IMP
(1)  685/    C9DA :                     	DEY_IMP:
(1)  686/    C9DA : (MACRO)             		OP_MACRO 136, "DEY", "IMP", "DEY_IMP"
(1)  686/    C9DA :                             ;TODO
(1)  687/    C9DA : (MACRO)             		NEXT_MACRO
(1)  687/    C9DA :                                             
(1)  687/    C9DA :  (MACRO-2)                  halt
(1)  687/    C9DA : 00                          BRK
(1)  687/    C9DB : 00                          BRK
(1)  687/    C9DC :                             
(1)  687/    C9DC :                             ;Method 1 - 60 cycles
(1)  687/    C9DC :                             ;Jump table must be page aligned!!!
(1)  687/    C9DC :                             ;LDA (emu_PC,X)                 ;6
(1)  687/    C9DC :                             ;ASL                                    ;2
(1)  687/    C9DC :                             ;STA emu_ptr,X                  ;4
(1)  687/    C9DC :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  687/    C9DC :                             ;ADC #0                                 ;2
(1)  687/    C9DC :                             ;STA emu_ptr+1,X                ;4
(1)  687/    C9DC :                             ;LDA (emu_ptr,X)                ;6
(1)  687/    C9DC :                             ;STA emu_ptr2,X                 ;4
(1)  687/    C9DC :                             ;INC emu_ptr,X                  ;6
(1)  687/    C9DC :                             ;BCC .skip                              ;2
(1)  687/    C9DC :                             ;       INC emu_ptr+1,X         ;6
(1)  687/    C9DC :                             ;.skip:
(1)  687/    C9DC :                             ;LDA (emu_ptr,X)                ;6
(1)  687/    C9DC :                             ;STA emu_ptr2+1,X               ;4
(1)  687/    C9DC :                             ;JMP (emu_ptr2,X)               ;6
(1)  687/    C9DC :                             
(1)  687/    C9DC :                             ;Method 2 - 46 cycles
(1)  687/    C9DC :                             ;Jump table must be page aligned!!!
(1)  687/    C9DC :                             ;LDA (emu_PC,X)                 ;6
(1)  687/    C9DC :                             ;STZ emu_ptr+1,X                ;4
(1)  687/    C9DC :                             ;ASL                                    ;2
(1)  687/    C9DC :                             ;ROL emu_ptr+1,X                ;6
(1)  687/    C9DC :                             ;ASL                                    ;2
(1)  687/    C9DC :                             ;ROL emu_ptr+1,X                ;6
(1)  687/    C9DC :                             ;STA emu_ptr,X                  ;4                              
(1)  687/    C9DC :                             ;LDA emu_ptr+1,X                ;4
(1)  687/    C9DC :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  687/    C9DC :                             ;STA emu_ptr+1,X                ;4
(1)  687/    C9DC :                             ;JMP (emu_ptr2,X)               ;6
(1)  687/    C9DC :                             
(1)  687/    C9DC :                             ;Method 3 - 30 cycles
(1)  687/    C9DC :                             ;TXA                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 205 - 1/5/2022 12:19:0


(1)  687/    C9DC :                             ;TAY                                                    ;2
(1)  687/    C9DC :                             ;LDA (emu_PC,X)                                 ;6
(1)  687/    C9DC :                             ;ASL                                                    ;2
(1)  687/    C9DC :                             ;BCS upper                                              ;2
(1)  687/    C9DC :                             ;lower:
(1)  687/    C9DC :                             ;       ASL                                                     ;2
(1)  687/    C9DC :                             ;       TAX                                                     ;2
(1)  687/    C9DC :                             ;       BCS upper_lower                         ;2
(1)  687/    C9DC :                             ;       lower_lower:
(1)  687/    C9DC :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  687/    C9DC :                             ;       upper_lower:
(1)  687/    C9DC :                             ;               JMP (JUMP_TABLE2,X)
(1)  687/    C9DC :                             ;upper:
(1)  687/    C9DC :                             ;       ASL
(1)  687/    C9DC :                             ;       TAX
(1)  687/    C9DC :                             ;       BCS upper_upper
(1)  687/    C9DC :                             ;       lower_upper:
(1)  687/    C9DC :                             ;               JMP (JUMP_TABLE3,X)
(1)  687/    C9DC :                             ;       upper_upper:
(1)  687/    C9DC :                             ;               JMP (JUMP_TABLE4,X)
(1)  687/    C9DC :                             ;After jump:
(1)  687/    C9DC :                             ;TYA                                                    ;2
(1)  687/    C9DC :                             ;TAX                                                    ;2
(1)  687/    C9DC :                             
(1)  687/    C9DC :                             ;Method 4 - 28 cycles
(1)  687/    C9DC :                             ;LDA (emu_PC,X)                 ;6
(1)  687/    C9DC :                             ;TAY                                    ;2
(1)  687/    C9DC :                             ;LDA JUMP_TABLE,Y               ;4
(1)  687/    C9DC :                             ;PHA                                    ;3
(1)  687/    C9DC :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  687/    C9DC :                             ;PHA                                    ;3
(1)  687/    C9DC :                             ;RTS                                    ;6
(1)  687/    C9DC :                             
(1)  687/    C9DC :                             ;Method 5 - 30 cycles
(1)  687/    C9DC : A1 02                       LDA (emu_PC,X)                  ;6
(1)  687/    C9DE : A8                          TAY                                             ;2
(1)  687/    C9DF : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  687/    C9E2 : 95 0A                       STA emu_ptr,X                   ;4
(1)  687/    C9E4 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  687/    C9E7 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  687/    C9E9 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  687/    C9EC :                                                     
(1)  688/    C9EC :                     
(1)  689/    C9EC :                     	;0x89 - NOP
(1)  690/    C9EC :                     	NOP_0x89:
(1)  691/    C9EC : (MACRO)             		OP_MACRO 137, "NOP", "IMP", "NOP_0x89"
(1)  691/    C9EC :                             ;TODO
(1)  692/    C9EC : (MACRO)             		NEXT_MACRO
(1)  692/    C9EC :                                             
(1)  692/    C9EC :  (MACRO-2)                  halt
(1)  692/    C9EC : 00                          BRK
(1)  692/    C9ED : 00                          BRK
(1)  692/    C9EE :                             
(1)  692/    C9EE :                             ;Method 1 - 60 cycles
(1)  692/    C9EE :                             ;Jump table must be page aligned!!!
(1)  692/    C9EE :                             ;LDA (emu_PC,X)                 ;6
(1)  692/    C9EE :                             ;ASL                                    ;2
(1)  692/    C9EE :                             ;STA emu_ptr,X                  ;4
(1)  692/    C9EE :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  692/    C9EE :                             ;ADC #0                                 ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 206 - 1/5/2022 12:19:0


(1)  692/    C9EE :                             ;STA emu_ptr+1,X                ;4
(1)  692/    C9EE :                             ;LDA (emu_ptr,X)                ;6
(1)  692/    C9EE :                             ;STA emu_ptr2,X                 ;4
(1)  692/    C9EE :                             ;INC emu_ptr,X                  ;6
(1)  692/    C9EE :                             ;BCC .skip                              ;2
(1)  692/    C9EE :                             ;       INC emu_ptr+1,X         ;6
(1)  692/    C9EE :                             ;.skip:
(1)  692/    C9EE :                             ;LDA (emu_ptr,X)                ;6
(1)  692/    C9EE :                             ;STA emu_ptr2+1,X               ;4
(1)  692/    C9EE :                             ;JMP (emu_ptr2,X)               ;6
(1)  692/    C9EE :                             
(1)  692/    C9EE :                             ;Method 2 - 46 cycles
(1)  692/    C9EE :                             ;Jump table must be page aligned!!!
(1)  692/    C9EE :                             ;LDA (emu_PC,X)                 ;6
(1)  692/    C9EE :                             ;STZ emu_ptr+1,X                ;4
(1)  692/    C9EE :                             ;ASL                                    ;2
(1)  692/    C9EE :                             ;ROL emu_ptr+1,X                ;6
(1)  692/    C9EE :                             ;ASL                                    ;2
(1)  692/    C9EE :                             ;ROL emu_ptr+1,X                ;6
(1)  692/    C9EE :                             ;STA emu_ptr,X                  ;4                              
(1)  692/    C9EE :                             ;LDA emu_ptr+1,X                ;4
(1)  692/    C9EE :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  692/    C9EE :                             ;STA emu_ptr+1,X                ;4
(1)  692/    C9EE :                             ;JMP (emu_ptr2,X)               ;6
(1)  692/    C9EE :                             
(1)  692/    C9EE :                             ;Method 3 - 30 cycles
(1)  692/    C9EE :                             ;TXA                                                    ;2
(1)  692/    C9EE :                             ;TAY                                                    ;2
(1)  692/    C9EE :                             ;LDA (emu_PC,X)                                 ;6
(1)  692/    C9EE :                             ;ASL                                                    ;2
(1)  692/    C9EE :                             ;BCS upper                                              ;2
(1)  692/    C9EE :                             ;lower:
(1)  692/    C9EE :                             ;       ASL                                                     ;2
(1)  692/    C9EE :                             ;       TAX                                                     ;2
(1)  692/    C9EE :                             ;       BCS upper_lower                         ;2
(1)  692/    C9EE :                             ;       lower_lower:
(1)  692/    C9EE :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  692/    C9EE :                             ;       upper_lower:
(1)  692/    C9EE :                             ;               JMP (JUMP_TABLE2,X)
(1)  692/    C9EE :                             ;upper:
(1)  692/    C9EE :                             ;       ASL
(1)  692/    C9EE :                             ;       TAX
(1)  692/    C9EE :                             ;       BCS upper_upper
(1)  692/    C9EE :                             ;       lower_upper:
(1)  692/    C9EE :                             ;               JMP (JUMP_TABLE3,X)
(1)  692/    C9EE :                             ;       upper_upper:
(1)  692/    C9EE :                             ;               JMP (JUMP_TABLE4,X)
(1)  692/    C9EE :                             ;After jump:
(1)  692/    C9EE :                             ;TYA                                                    ;2
(1)  692/    C9EE :                             ;TAX                                                    ;2
(1)  692/    C9EE :                             
(1)  692/    C9EE :                             ;Method 4 - 28 cycles
(1)  692/    C9EE :                             ;LDA (emu_PC,X)                 ;6
(1)  692/    C9EE :                             ;TAY                                    ;2
(1)  692/    C9EE :                             ;LDA JUMP_TABLE,Y               ;4
(1)  692/    C9EE :                             ;PHA                                    ;3
(1)  692/    C9EE :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  692/    C9EE :                             ;PHA                                    ;3
(1)  692/    C9EE :                             ;RTS                                    ;6
(1)  692/    C9EE :                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 207 - 1/5/2022 12:19:0


(1)  692/    C9EE :                             ;Method 5 - 30 cycles
(1)  692/    C9EE : A1 02                       LDA (emu_PC,X)                  ;6
(1)  692/    C9F0 : A8                          TAY                                             ;2
(1)  692/    C9F1 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  692/    C9F4 : 95 0A                       STA emu_ptr,X                   ;4
(1)  692/    C9F6 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  692/    C9F9 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  692/    C9FB : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  692/    C9FE :                                                     
(1)  693/    C9FE :                     
(1)  694/    C9FE :                     	;0x8A - TXA IMP
(1)  695/    C9FE :                     	TXA_IMP:
(1)  696/    C9FE : (MACRO)             		OP_MACRO 138, "TXA", "IMP", "TXA_IMP"
(1)  696/    C9FE :                             ;TODO
(1)  697/    C9FE : (MACRO)             		NEXT_MACRO
(1)  697/    C9FE :                                             
(1)  697/    C9FE :  (MACRO-2)                  halt
(1)  697/    C9FE : 00                          BRK
(1)  697/    C9FF : 00                          BRK
(1)  697/    CA00 :                             
(1)  697/    CA00 :                             ;Method 1 - 60 cycles
(1)  697/    CA00 :                             ;Jump table must be page aligned!!!
(1)  697/    CA00 :                             ;LDA (emu_PC,X)                 ;6
(1)  697/    CA00 :                             ;ASL                                    ;2
(1)  697/    CA00 :                             ;STA emu_ptr,X                  ;4
(1)  697/    CA00 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  697/    CA00 :                             ;ADC #0                                 ;2
(1)  697/    CA00 :                             ;STA emu_ptr+1,X                ;4
(1)  697/    CA00 :                             ;LDA (emu_ptr,X)                ;6
(1)  697/    CA00 :                             ;STA emu_ptr2,X                 ;4
(1)  697/    CA00 :                             ;INC emu_ptr,X                  ;6
(1)  697/    CA00 :                             ;BCC .skip                              ;2
(1)  697/    CA00 :                             ;       INC emu_ptr+1,X         ;6
(1)  697/    CA00 :                             ;.skip:
(1)  697/    CA00 :                             ;LDA (emu_ptr,X)                ;6
(1)  697/    CA00 :                             ;STA emu_ptr2+1,X               ;4
(1)  697/    CA00 :                             ;JMP (emu_ptr2,X)               ;6
(1)  697/    CA00 :                             
(1)  697/    CA00 :                             ;Method 2 - 46 cycles
(1)  697/    CA00 :                             ;Jump table must be page aligned!!!
(1)  697/    CA00 :                             ;LDA (emu_PC,X)                 ;6
(1)  697/    CA00 :                             ;STZ emu_ptr+1,X                ;4
(1)  697/    CA00 :                             ;ASL                                    ;2
(1)  697/    CA00 :                             ;ROL emu_ptr+1,X                ;6
(1)  697/    CA00 :                             ;ASL                                    ;2
(1)  697/    CA00 :                             ;ROL emu_ptr+1,X                ;6
(1)  697/    CA00 :                             ;STA emu_ptr,X                  ;4                              
(1)  697/    CA00 :                             ;LDA emu_ptr+1,X                ;4
(1)  697/    CA00 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  697/    CA00 :                             ;STA emu_ptr+1,X                ;4
(1)  697/    CA00 :                             ;JMP (emu_ptr2,X)               ;6
(1)  697/    CA00 :                             
(1)  697/    CA00 :                             ;Method 3 - 30 cycles
(1)  697/    CA00 :                             ;TXA                                                    ;2
(1)  697/    CA00 :                             ;TAY                                                    ;2
(1)  697/    CA00 :                             ;LDA (emu_PC,X)                                 ;6
(1)  697/    CA00 :                             ;ASL                                                    ;2
(1)  697/    CA00 :                             ;BCS upper                                              ;2
(1)  697/    CA00 :                             ;lower:
(1)  697/    CA00 :                             ;       ASL                                                     ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 208 - 1/5/2022 12:19:0


(1)  697/    CA00 :                             ;       TAX                                                     ;2
(1)  697/    CA00 :                             ;       BCS upper_lower                         ;2
(1)  697/    CA00 :                             ;       lower_lower:
(1)  697/    CA00 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  697/    CA00 :                             ;       upper_lower:
(1)  697/    CA00 :                             ;               JMP (JUMP_TABLE2,X)
(1)  697/    CA00 :                             ;upper:
(1)  697/    CA00 :                             ;       ASL
(1)  697/    CA00 :                             ;       TAX
(1)  697/    CA00 :                             ;       BCS upper_upper
(1)  697/    CA00 :                             ;       lower_upper:
(1)  697/    CA00 :                             ;               JMP (JUMP_TABLE3,X)
(1)  697/    CA00 :                             ;       upper_upper:
(1)  697/    CA00 :                             ;               JMP (JUMP_TABLE4,X)
(1)  697/    CA00 :                             ;After jump:
(1)  697/    CA00 :                             ;TYA                                                    ;2
(1)  697/    CA00 :                             ;TAX                                                    ;2
(1)  697/    CA00 :                             
(1)  697/    CA00 :                             ;Method 4 - 28 cycles
(1)  697/    CA00 :                             ;LDA (emu_PC,X)                 ;6
(1)  697/    CA00 :                             ;TAY                                    ;2
(1)  697/    CA00 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  697/    CA00 :                             ;PHA                                    ;3
(1)  697/    CA00 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  697/    CA00 :                             ;PHA                                    ;3
(1)  697/    CA00 :                             ;RTS                                    ;6
(1)  697/    CA00 :                             
(1)  697/    CA00 :                             ;Method 5 - 30 cycles
(1)  697/    CA00 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  697/    CA02 : A8                          TAY                                             ;2
(1)  697/    CA03 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  697/    CA06 : 95 0A                       STA emu_ptr,X                   ;4
(1)  697/    CA08 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  697/    CA0B : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  697/    CA0D : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  697/    CA10 :                                                     
(1)  698/    CA10 :                     
(1)  699/    CA10 :                     	;0x8B - NOP
(1)  700/    CA10 :                     	NOP_0x8B:
(1)  701/    CA10 : (MACRO)             		OP_MACRO 139, "NOP", "IMP", "NOP_0x8B"
(1)  701/    CA10 :                             ;TODO
(1)  702/    CA10 : (MACRO)             		NEXT_MACRO
(1)  702/    CA10 :                                             
(1)  702/    CA10 :  (MACRO-2)                  halt
(1)  702/    CA10 : 00                          BRK
(1)  702/    CA11 : 00                          BRK
(1)  702/    CA12 :                             
(1)  702/    CA12 :                             ;Method 1 - 60 cycles
(1)  702/    CA12 :                             ;Jump table must be page aligned!!!
(1)  702/    CA12 :                             ;LDA (emu_PC,X)                 ;6
(1)  702/    CA12 :                             ;ASL                                    ;2
(1)  702/    CA12 :                             ;STA emu_ptr,X                  ;4
(1)  702/    CA12 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  702/    CA12 :                             ;ADC #0                                 ;2
(1)  702/    CA12 :                             ;STA emu_ptr+1,X                ;4
(1)  702/    CA12 :                             ;LDA (emu_ptr,X)                ;6
(1)  702/    CA12 :                             ;STA emu_ptr2,X                 ;4
(1)  702/    CA12 :                             ;INC emu_ptr,X                  ;6
(1)  702/    CA12 :                             ;BCC .skip                              ;2
(1)  702/    CA12 :                             ;       INC emu_ptr+1,X         ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 209 - 1/5/2022 12:19:0


(1)  702/    CA12 :                             ;.skip:
(1)  702/    CA12 :                             ;LDA (emu_ptr,X)                ;6
(1)  702/    CA12 :                             ;STA emu_ptr2+1,X               ;4
(1)  702/    CA12 :                             ;JMP (emu_ptr2,X)               ;6
(1)  702/    CA12 :                             
(1)  702/    CA12 :                             ;Method 2 - 46 cycles
(1)  702/    CA12 :                             ;Jump table must be page aligned!!!
(1)  702/    CA12 :                             ;LDA (emu_PC,X)                 ;6
(1)  702/    CA12 :                             ;STZ emu_ptr+1,X                ;4
(1)  702/    CA12 :                             ;ASL                                    ;2
(1)  702/    CA12 :                             ;ROL emu_ptr+1,X                ;6
(1)  702/    CA12 :                             ;ASL                                    ;2
(1)  702/    CA12 :                             ;ROL emu_ptr+1,X                ;6
(1)  702/    CA12 :                             ;STA emu_ptr,X                  ;4                              
(1)  702/    CA12 :                             ;LDA emu_ptr+1,X                ;4
(1)  702/    CA12 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  702/    CA12 :                             ;STA emu_ptr+1,X                ;4
(1)  702/    CA12 :                             ;JMP (emu_ptr2,X)               ;6
(1)  702/    CA12 :                             
(1)  702/    CA12 :                             ;Method 3 - 30 cycles
(1)  702/    CA12 :                             ;TXA                                                    ;2
(1)  702/    CA12 :                             ;TAY                                                    ;2
(1)  702/    CA12 :                             ;LDA (emu_PC,X)                                 ;6
(1)  702/    CA12 :                             ;ASL                                                    ;2
(1)  702/    CA12 :                             ;BCS upper                                              ;2
(1)  702/    CA12 :                             ;lower:
(1)  702/    CA12 :                             ;       ASL                                                     ;2
(1)  702/    CA12 :                             ;       TAX                                                     ;2
(1)  702/    CA12 :                             ;       BCS upper_lower                         ;2
(1)  702/    CA12 :                             ;       lower_lower:
(1)  702/    CA12 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  702/    CA12 :                             ;       upper_lower:
(1)  702/    CA12 :                             ;               JMP (JUMP_TABLE2,X)
(1)  702/    CA12 :                             ;upper:
(1)  702/    CA12 :                             ;       ASL
(1)  702/    CA12 :                             ;       TAX
(1)  702/    CA12 :                             ;       BCS upper_upper
(1)  702/    CA12 :                             ;       lower_upper:
(1)  702/    CA12 :                             ;               JMP (JUMP_TABLE3,X)
(1)  702/    CA12 :                             ;       upper_upper:
(1)  702/    CA12 :                             ;               JMP (JUMP_TABLE4,X)
(1)  702/    CA12 :                             ;After jump:
(1)  702/    CA12 :                             ;TYA                                                    ;2
(1)  702/    CA12 :                             ;TAX                                                    ;2
(1)  702/    CA12 :                             
(1)  702/    CA12 :                             ;Method 4 - 28 cycles
(1)  702/    CA12 :                             ;LDA (emu_PC,X)                 ;6
(1)  702/    CA12 :                             ;TAY                                    ;2
(1)  702/    CA12 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  702/    CA12 :                             ;PHA                                    ;3
(1)  702/    CA12 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  702/    CA12 :                             ;PHA                                    ;3
(1)  702/    CA12 :                             ;RTS                                    ;6
(1)  702/    CA12 :                             
(1)  702/    CA12 :                             ;Method 5 - 30 cycles
(1)  702/    CA12 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  702/    CA14 : A8                          TAY                                             ;2
(1)  702/    CA15 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  702/    CA18 : 95 0A                       STA emu_ptr,X                   ;4
(1)  702/    CA1A : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 210 - 1/5/2022 12:19:0


(1)  702/    CA1D : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  702/    CA1F : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  702/    CA22 :                                                     
(1)  703/    CA22 :                     
(1)  704/    CA22 :                     	;0x8C - STY ABS
(1)  705/    CA22 :                     	STY_ABS:
(1)  706/    CA22 : (MACRO)             		OP_MACRO 140, "STY", "ABS", "STY_ABS"
(1)  706/    CA22 :                             ;TODO
(1)  707/    CA22 : (MACRO)             		NEXT_MACRO
(1)  707/    CA22 :                                             
(1)  707/    CA22 :  (MACRO-2)                  halt
(1)  707/    CA22 : 00                          BRK
(1)  707/    CA23 : 00                          BRK
(1)  707/    CA24 :                             
(1)  707/    CA24 :                             ;Method 1 - 60 cycles
(1)  707/    CA24 :                             ;Jump table must be page aligned!!!
(1)  707/    CA24 :                             ;LDA (emu_PC,X)                 ;6
(1)  707/    CA24 :                             ;ASL                                    ;2
(1)  707/    CA24 :                             ;STA emu_ptr,X                  ;4
(1)  707/    CA24 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  707/    CA24 :                             ;ADC #0                                 ;2
(1)  707/    CA24 :                             ;STA emu_ptr+1,X                ;4
(1)  707/    CA24 :                             ;LDA (emu_ptr,X)                ;6
(1)  707/    CA24 :                             ;STA emu_ptr2,X                 ;4
(1)  707/    CA24 :                             ;INC emu_ptr,X                  ;6
(1)  707/    CA24 :                             ;BCC .skip                              ;2
(1)  707/    CA24 :                             ;       INC emu_ptr+1,X         ;6
(1)  707/    CA24 :                             ;.skip:
(1)  707/    CA24 :                             ;LDA (emu_ptr,X)                ;6
(1)  707/    CA24 :                             ;STA emu_ptr2+1,X               ;4
(1)  707/    CA24 :                             ;JMP (emu_ptr2,X)               ;6
(1)  707/    CA24 :                             
(1)  707/    CA24 :                             ;Method 2 - 46 cycles
(1)  707/    CA24 :                             ;Jump table must be page aligned!!!
(1)  707/    CA24 :                             ;LDA (emu_PC,X)                 ;6
(1)  707/    CA24 :                             ;STZ emu_ptr+1,X                ;4
(1)  707/    CA24 :                             ;ASL                                    ;2
(1)  707/    CA24 :                             ;ROL emu_ptr+1,X                ;6
(1)  707/    CA24 :                             ;ASL                                    ;2
(1)  707/    CA24 :                             ;ROL emu_ptr+1,X                ;6
(1)  707/    CA24 :                             ;STA emu_ptr,X                  ;4                              
(1)  707/    CA24 :                             ;LDA emu_ptr+1,X                ;4
(1)  707/    CA24 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  707/    CA24 :                             ;STA emu_ptr+1,X                ;4
(1)  707/    CA24 :                             ;JMP (emu_ptr2,X)               ;6
(1)  707/    CA24 :                             
(1)  707/    CA24 :                             ;Method 3 - 30 cycles
(1)  707/    CA24 :                             ;TXA                                                    ;2
(1)  707/    CA24 :                             ;TAY                                                    ;2
(1)  707/    CA24 :                             ;LDA (emu_PC,X)                                 ;6
(1)  707/    CA24 :                             ;ASL                                                    ;2
(1)  707/    CA24 :                             ;BCS upper                                              ;2
(1)  707/    CA24 :                             ;lower:
(1)  707/    CA24 :                             ;       ASL                                                     ;2
(1)  707/    CA24 :                             ;       TAX                                                     ;2
(1)  707/    CA24 :                             ;       BCS upper_lower                         ;2
(1)  707/    CA24 :                             ;       lower_lower:
(1)  707/    CA24 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  707/    CA24 :                             ;       upper_lower:
(1)  707/    CA24 :                             ;               JMP (JUMP_TABLE2,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 211 - 1/5/2022 12:19:0


(1)  707/    CA24 :                             ;upper:
(1)  707/    CA24 :                             ;       ASL
(1)  707/    CA24 :                             ;       TAX
(1)  707/    CA24 :                             ;       BCS upper_upper
(1)  707/    CA24 :                             ;       lower_upper:
(1)  707/    CA24 :                             ;               JMP (JUMP_TABLE3,X)
(1)  707/    CA24 :                             ;       upper_upper:
(1)  707/    CA24 :                             ;               JMP (JUMP_TABLE4,X)
(1)  707/    CA24 :                             ;After jump:
(1)  707/    CA24 :                             ;TYA                                                    ;2
(1)  707/    CA24 :                             ;TAX                                                    ;2
(1)  707/    CA24 :                             
(1)  707/    CA24 :                             ;Method 4 - 28 cycles
(1)  707/    CA24 :                             ;LDA (emu_PC,X)                 ;6
(1)  707/    CA24 :                             ;TAY                                    ;2
(1)  707/    CA24 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  707/    CA24 :                             ;PHA                                    ;3
(1)  707/    CA24 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  707/    CA24 :                             ;PHA                                    ;3
(1)  707/    CA24 :                             ;RTS                                    ;6
(1)  707/    CA24 :                             
(1)  707/    CA24 :                             ;Method 5 - 30 cycles
(1)  707/    CA24 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  707/    CA26 : A8                          TAY                                             ;2
(1)  707/    CA27 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  707/    CA2A : 95 0A                       STA emu_ptr,X                   ;4
(1)  707/    CA2C : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  707/    CA2F : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  707/    CA31 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  707/    CA34 :                                                     
(1)  708/    CA34 :                     
(1)  709/    CA34 :                     	;0x8D - STA ABS
(1)  710/    CA34 :                     	STA_ABS:
(1)  711/    CA34 : (MACRO)             		OP_MACRO 141, "STA", "ABS", "STA_ABS"
(1)  711/    CA34 :                             ;TODO
(1)  712/    CA34 : (MACRO)             		NEXT_MACRO
(1)  712/    CA34 :                                             
(1)  712/    CA34 :  (MACRO-2)                  halt
(1)  712/    CA34 : 00                          BRK
(1)  712/    CA35 : 00                          BRK
(1)  712/    CA36 :                             
(1)  712/    CA36 :                             ;Method 1 - 60 cycles
(1)  712/    CA36 :                             ;Jump table must be page aligned!!!
(1)  712/    CA36 :                             ;LDA (emu_PC,X)                 ;6
(1)  712/    CA36 :                             ;ASL                                    ;2
(1)  712/    CA36 :                             ;STA emu_ptr,X                  ;4
(1)  712/    CA36 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  712/    CA36 :                             ;ADC #0                                 ;2
(1)  712/    CA36 :                             ;STA emu_ptr+1,X                ;4
(1)  712/    CA36 :                             ;LDA (emu_ptr,X)                ;6
(1)  712/    CA36 :                             ;STA emu_ptr2,X                 ;4
(1)  712/    CA36 :                             ;INC emu_ptr,X                  ;6
(1)  712/    CA36 :                             ;BCC .skip                              ;2
(1)  712/    CA36 :                             ;       INC emu_ptr+1,X         ;6
(1)  712/    CA36 :                             ;.skip:
(1)  712/    CA36 :                             ;LDA (emu_ptr,X)                ;6
(1)  712/    CA36 :                             ;STA emu_ptr2+1,X               ;4
(1)  712/    CA36 :                             ;JMP (emu_ptr2,X)               ;6
(1)  712/    CA36 :                             
(1)  712/    CA36 :                             ;Method 2 - 46 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 212 - 1/5/2022 12:19:0


(1)  712/    CA36 :                             ;Jump table must be page aligned!!!
(1)  712/    CA36 :                             ;LDA (emu_PC,X)                 ;6
(1)  712/    CA36 :                             ;STZ emu_ptr+1,X                ;4
(1)  712/    CA36 :                             ;ASL                                    ;2
(1)  712/    CA36 :                             ;ROL emu_ptr+1,X                ;6
(1)  712/    CA36 :                             ;ASL                                    ;2
(1)  712/    CA36 :                             ;ROL emu_ptr+1,X                ;6
(1)  712/    CA36 :                             ;STA emu_ptr,X                  ;4                              
(1)  712/    CA36 :                             ;LDA emu_ptr+1,X                ;4
(1)  712/    CA36 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  712/    CA36 :                             ;STA emu_ptr+1,X                ;4
(1)  712/    CA36 :                             ;JMP (emu_ptr2,X)               ;6
(1)  712/    CA36 :                             
(1)  712/    CA36 :                             ;Method 3 - 30 cycles
(1)  712/    CA36 :                             ;TXA                                                    ;2
(1)  712/    CA36 :                             ;TAY                                                    ;2
(1)  712/    CA36 :                             ;LDA (emu_PC,X)                                 ;6
(1)  712/    CA36 :                             ;ASL                                                    ;2
(1)  712/    CA36 :                             ;BCS upper                                              ;2
(1)  712/    CA36 :                             ;lower:
(1)  712/    CA36 :                             ;       ASL                                                     ;2
(1)  712/    CA36 :                             ;       TAX                                                     ;2
(1)  712/    CA36 :                             ;       BCS upper_lower                         ;2
(1)  712/    CA36 :                             ;       lower_lower:
(1)  712/    CA36 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  712/    CA36 :                             ;       upper_lower:
(1)  712/    CA36 :                             ;               JMP (JUMP_TABLE2,X)
(1)  712/    CA36 :                             ;upper:
(1)  712/    CA36 :                             ;       ASL
(1)  712/    CA36 :                             ;       TAX
(1)  712/    CA36 :                             ;       BCS upper_upper
(1)  712/    CA36 :                             ;       lower_upper:
(1)  712/    CA36 :                             ;               JMP (JUMP_TABLE3,X)
(1)  712/    CA36 :                             ;       upper_upper:
(1)  712/    CA36 :                             ;               JMP (JUMP_TABLE4,X)
(1)  712/    CA36 :                             ;After jump:
(1)  712/    CA36 :                             ;TYA                                                    ;2
(1)  712/    CA36 :                             ;TAX                                                    ;2
(1)  712/    CA36 :                             
(1)  712/    CA36 :                             ;Method 4 - 28 cycles
(1)  712/    CA36 :                             ;LDA (emu_PC,X)                 ;6
(1)  712/    CA36 :                             ;TAY                                    ;2
(1)  712/    CA36 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  712/    CA36 :                             ;PHA                                    ;3
(1)  712/    CA36 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  712/    CA36 :                             ;PHA                                    ;3
(1)  712/    CA36 :                             ;RTS                                    ;6
(1)  712/    CA36 :                             
(1)  712/    CA36 :                             ;Method 5 - 30 cycles
(1)  712/    CA36 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  712/    CA38 : A8                          TAY                                             ;2
(1)  712/    CA39 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  712/    CA3C : 95 0A                       STA emu_ptr,X                   ;4
(1)  712/    CA3E : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  712/    CA41 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  712/    CA43 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  712/    CA46 :                                                     
(1)  713/    CA46 :                     
(1)  714/    CA46 :                     	;0x8E - STX ABS
(1)  715/    CA46 :                     	STX_ABS:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 213 - 1/5/2022 12:19:0


(1)  716/    CA46 : (MACRO)             		OP_MACRO 142, "STX", "ABS", "STX_ABS"
(1)  716/    CA46 :                             ;TODO
(1)  717/    CA46 : (MACRO)             		NEXT_MACRO
(1)  717/    CA46 :                                             
(1)  717/    CA46 :  (MACRO-2)                  halt
(1)  717/    CA46 : 00                          BRK
(1)  717/    CA47 : 00                          BRK
(1)  717/    CA48 :                             
(1)  717/    CA48 :                             ;Method 1 - 60 cycles
(1)  717/    CA48 :                             ;Jump table must be page aligned!!!
(1)  717/    CA48 :                             ;LDA (emu_PC,X)                 ;6
(1)  717/    CA48 :                             ;ASL                                    ;2
(1)  717/    CA48 :                             ;STA emu_ptr,X                  ;4
(1)  717/    CA48 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  717/    CA48 :                             ;ADC #0                                 ;2
(1)  717/    CA48 :                             ;STA emu_ptr+1,X                ;4
(1)  717/    CA48 :                             ;LDA (emu_ptr,X)                ;6
(1)  717/    CA48 :                             ;STA emu_ptr2,X                 ;4
(1)  717/    CA48 :                             ;INC emu_ptr,X                  ;6
(1)  717/    CA48 :                             ;BCC .skip                              ;2
(1)  717/    CA48 :                             ;       INC emu_ptr+1,X         ;6
(1)  717/    CA48 :                             ;.skip:
(1)  717/    CA48 :                             ;LDA (emu_ptr,X)                ;6
(1)  717/    CA48 :                             ;STA emu_ptr2+1,X               ;4
(1)  717/    CA48 :                             ;JMP (emu_ptr2,X)               ;6
(1)  717/    CA48 :                             
(1)  717/    CA48 :                             ;Method 2 - 46 cycles
(1)  717/    CA48 :                             ;Jump table must be page aligned!!!
(1)  717/    CA48 :                             ;LDA (emu_PC,X)                 ;6
(1)  717/    CA48 :                             ;STZ emu_ptr+1,X                ;4
(1)  717/    CA48 :                             ;ASL                                    ;2
(1)  717/    CA48 :                             ;ROL emu_ptr+1,X                ;6
(1)  717/    CA48 :                             ;ASL                                    ;2
(1)  717/    CA48 :                             ;ROL emu_ptr+1,X                ;6
(1)  717/    CA48 :                             ;STA emu_ptr,X                  ;4                              
(1)  717/    CA48 :                             ;LDA emu_ptr+1,X                ;4
(1)  717/    CA48 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  717/    CA48 :                             ;STA emu_ptr+1,X                ;4
(1)  717/    CA48 :                             ;JMP (emu_ptr2,X)               ;6
(1)  717/    CA48 :                             
(1)  717/    CA48 :                             ;Method 3 - 30 cycles
(1)  717/    CA48 :                             ;TXA                                                    ;2
(1)  717/    CA48 :                             ;TAY                                                    ;2
(1)  717/    CA48 :                             ;LDA (emu_PC,X)                                 ;6
(1)  717/    CA48 :                             ;ASL                                                    ;2
(1)  717/    CA48 :                             ;BCS upper                                              ;2
(1)  717/    CA48 :                             ;lower:
(1)  717/    CA48 :                             ;       ASL                                                     ;2
(1)  717/    CA48 :                             ;       TAX                                                     ;2
(1)  717/    CA48 :                             ;       BCS upper_lower                         ;2
(1)  717/    CA48 :                             ;       lower_lower:
(1)  717/    CA48 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  717/    CA48 :                             ;       upper_lower:
(1)  717/    CA48 :                             ;               JMP (JUMP_TABLE2,X)
(1)  717/    CA48 :                             ;upper:
(1)  717/    CA48 :                             ;       ASL
(1)  717/    CA48 :                             ;       TAX
(1)  717/    CA48 :                             ;       BCS upper_upper
(1)  717/    CA48 :                             ;       lower_upper:
(1)  717/    CA48 :                             ;               JMP (JUMP_TABLE3,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 214 - 1/5/2022 12:19:0


(1)  717/    CA48 :                             ;       upper_upper:
(1)  717/    CA48 :                             ;               JMP (JUMP_TABLE4,X)
(1)  717/    CA48 :                             ;After jump:
(1)  717/    CA48 :                             ;TYA                                                    ;2
(1)  717/    CA48 :                             ;TAX                                                    ;2
(1)  717/    CA48 :                             
(1)  717/    CA48 :                             ;Method 4 - 28 cycles
(1)  717/    CA48 :                             ;LDA (emu_PC,X)                 ;6
(1)  717/    CA48 :                             ;TAY                                    ;2
(1)  717/    CA48 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  717/    CA48 :                             ;PHA                                    ;3
(1)  717/    CA48 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  717/    CA48 :                             ;PHA                                    ;3
(1)  717/    CA48 :                             ;RTS                                    ;6
(1)  717/    CA48 :                             
(1)  717/    CA48 :                             ;Method 5 - 30 cycles
(1)  717/    CA48 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  717/    CA4A : A8                          TAY                                             ;2
(1)  717/    CA4B : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  717/    CA4E : 95 0A                       STA emu_ptr,X                   ;4
(1)  717/    CA50 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  717/    CA53 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  717/    CA55 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  717/    CA58 :                                                     
(1)  718/    CA58 :                     
(1)  719/    CA58 :                     	;0x8F - NOP
(1)  720/    CA58 :                     	NOP_0x8F:
(1)  721/    CA58 : (MACRO)             		OP_MACRO 143, "NOP", "IMP", "NOP_0x8F"
(1)  721/    CA58 :                             ;TODO
(1)  722/    CA58 : (MACRO)             		NEXT_MACRO
(1)  722/    CA58 :                                             
(1)  722/    CA58 :  (MACRO-2)                  halt
(1)  722/    CA58 : 00                          BRK
(1)  722/    CA59 : 00                          BRK
(1)  722/    CA5A :                             
(1)  722/    CA5A :                             ;Method 1 - 60 cycles
(1)  722/    CA5A :                             ;Jump table must be page aligned!!!
(1)  722/    CA5A :                             ;LDA (emu_PC,X)                 ;6
(1)  722/    CA5A :                             ;ASL                                    ;2
(1)  722/    CA5A :                             ;STA emu_ptr,X                  ;4
(1)  722/    CA5A :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  722/    CA5A :                             ;ADC #0                                 ;2
(1)  722/    CA5A :                             ;STA emu_ptr+1,X                ;4
(1)  722/    CA5A :                             ;LDA (emu_ptr,X)                ;6
(1)  722/    CA5A :                             ;STA emu_ptr2,X                 ;4
(1)  722/    CA5A :                             ;INC emu_ptr,X                  ;6
(1)  722/    CA5A :                             ;BCC .skip                              ;2
(1)  722/    CA5A :                             ;       INC emu_ptr+1,X         ;6
(1)  722/    CA5A :                             ;.skip:
(1)  722/    CA5A :                             ;LDA (emu_ptr,X)                ;6
(1)  722/    CA5A :                             ;STA emu_ptr2+1,X               ;4
(1)  722/    CA5A :                             ;JMP (emu_ptr2,X)               ;6
(1)  722/    CA5A :                             
(1)  722/    CA5A :                             ;Method 2 - 46 cycles
(1)  722/    CA5A :                             ;Jump table must be page aligned!!!
(1)  722/    CA5A :                             ;LDA (emu_PC,X)                 ;6
(1)  722/    CA5A :                             ;STZ emu_ptr+1,X                ;4
(1)  722/    CA5A :                             ;ASL                                    ;2
(1)  722/    CA5A :                             ;ROL emu_ptr+1,X                ;6
(1)  722/    CA5A :                             ;ASL                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 215 - 1/5/2022 12:19:0


(1)  722/    CA5A :                             ;ROL emu_ptr+1,X                ;6
(1)  722/    CA5A :                             ;STA emu_ptr,X                  ;4                              
(1)  722/    CA5A :                             ;LDA emu_ptr+1,X                ;4
(1)  722/    CA5A :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  722/    CA5A :                             ;STA emu_ptr+1,X                ;4
(1)  722/    CA5A :                             ;JMP (emu_ptr2,X)               ;6
(1)  722/    CA5A :                             
(1)  722/    CA5A :                             ;Method 3 - 30 cycles
(1)  722/    CA5A :                             ;TXA                                                    ;2
(1)  722/    CA5A :                             ;TAY                                                    ;2
(1)  722/    CA5A :                             ;LDA (emu_PC,X)                                 ;6
(1)  722/    CA5A :                             ;ASL                                                    ;2
(1)  722/    CA5A :                             ;BCS upper                                              ;2
(1)  722/    CA5A :                             ;lower:
(1)  722/    CA5A :                             ;       ASL                                                     ;2
(1)  722/    CA5A :                             ;       TAX                                                     ;2
(1)  722/    CA5A :                             ;       BCS upper_lower                         ;2
(1)  722/    CA5A :                             ;       lower_lower:
(1)  722/    CA5A :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  722/    CA5A :                             ;       upper_lower:
(1)  722/    CA5A :                             ;               JMP (JUMP_TABLE2,X)
(1)  722/    CA5A :                             ;upper:
(1)  722/    CA5A :                             ;       ASL
(1)  722/    CA5A :                             ;       TAX
(1)  722/    CA5A :                             ;       BCS upper_upper
(1)  722/    CA5A :                             ;       lower_upper:
(1)  722/    CA5A :                             ;               JMP (JUMP_TABLE3,X)
(1)  722/    CA5A :                             ;       upper_upper:
(1)  722/    CA5A :                             ;               JMP (JUMP_TABLE4,X)
(1)  722/    CA5A :                             ;After jump:
(1)  722/    CA5A :                             ;TYA                                                    ;2
(1)  722/    CA5A :                             ;TAX                                                    ;2
(1)  722/    CA5A :                             
(1)  722/    CA5A :                             ;Method 4 - 28 cycles
(1)  722/    CA5A :                             ;LDA (emu_PC,X)                 ;6
(1)  722/    CA5A :                             ;TAY                                    ;2
(1)  722/    CA5A :                             ;LDA JUMP_TABLE,Y               ;4
(1)  722/    CA5A :                             ;PHA                                    ;3
(1)  722/    CA5A :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  722/    CA5A :                             ;PHA                                    ;3
(1)  722/    CA5A :                             ;RTS                                    ;6
(1)  722/    CA5A :                             
(1)  722/    CA5A :                             ;Method 5 - 30 cycles
(1)  722/    CA5A : A1 02                       LDA (emu_PC,X)                  ;6
(1)  722/    CA5C : A8                          TAY                                             ;2
(1)  722/    CA5D : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  722/    CA60 : 95 0A                       STA emu_ptr,X                   ;4
(1)  722/    CA62 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  722/    CA65 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  722/    CA67 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  722/    CA6A :                                                     
(1)  723/    CA6A :                     
(1)  724/    CA6A :                     	;0x90 - BCC REL
(1)  725/    CA6A :                     	BCC_REL:
(1)  726/    CA6A : (MACRO)             		OP_MACRO 144, "BCC", "REL", "BCC_REL"
(1)  726/    CA6A :                             ;TODO
(1)  727/    CA6A : (MACRO)             		NEXT_MACRO
(1)  727/    CA6A :                                             
(1)  727/    CA6A :  (MACRO-2)                  halt
(1)  727/    CA6A : 00                          BRK
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 216 - 1/5/2022 12:19:0


(1)  727/    CA6B : 00                          BRK
(1)  727/    CA6C :                             
(1)  727/    CA6C :                             ;Method 1 - 60 cycles
(1)  727/    CA6C :                             ;Jump table must be page aligned!!!
(1)  727/    CA6C :                             ;LDA (emu_PC,X)                 ;6
(1)  727/    CA6C :                             ;ASL                                    ;2
(1)  727/    CA6C :                             ;STA emu_ptr,X                  ;4
(1)  727/    CA6C :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  727/    CA6C :                             ;ADC #0                                 ;2
(1)  727/    CA6C :                             ;STA emu_ptr+1,X                ;4
(1)  727/    CA6C :                             ;LDA (emu_ptr,X)                ;6
(1)  727/    CA6C :                             ;STA emu_ptr2,X                 ;4
(1)  727/    CA6C :                             ;INC emu_ptr,X                  ;6
(1)  727/    CA6C :                             ;BCC .skip                              ;2
(1)  727/    CA6C :                             ;       INC emu_ptr+1,X         ;6
(1)  727/    CA6C :                             ;.skip:
(1)  727/    CA6C :                             ;LDA (emu_ptr,X)                ;6
(1)  727/    CA6C :                             ;STA emu_ptr2+1,X               ;4
(1)  727/    CA6C :                             ;JMP (emu_ptr2,X)               ;6
(1)  727/    CA6C :                             
(1)  727/    CA6C :                             ;Method 2 - 46 cycles
(1)  727/    CA6C :                             ;Jump table must be page aligned!!!
(1)  727/    CA6C :                             ;LDA (emu_PC,X)                 ;6
(1)  727/    CA6C :                             ;STZ emu_ptr+1,X                ;4
(1)  727/    CA6C :                             ;ASL                                    ;2
(1)  727/    CA6C :                             ;ROL emu_ptr+1,X                ;6
(1)  727/    CA6C :                             ;ASL                                    ;2
(1)  727/    CA6C :                             ;ROL emu_ptr+1,X                ;6
(1)  727/    CA6C :                             ;STA emu_ptr,X                  ;4                              
(1)  727/    CA6C :                             ;LDA emu_ptr+1,X                ;4
(1)  727/    CA6C :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  727/    CA6C :                             ;STA emu_ptr+1,X                ;4
(1)  727/    CA6C :                             ;JMP (emu_ptr2,X)               ;6
(1)  727/    CA6C :                             
(1)  727/    CA6C :                             ;Method 3 - 30 cycles
(1)  727/    CA6C :                             ;TXA                                                    ;2
(1)  727/    CA6C :                             ;TAY                                                    ;2
(1)  727/    CA6C :                             ;LDA (emu_PC,X)                                 ;6
(1)  727/    CA6C :                             ;ASL                                                    ;2
(1)  727/    CA6C :                             ;BCS upper                                              ;2
(1)  727/    CA6C :                             ;lower:
(1)  727/    CA6C :                             ;       ASL                                                     ;2
(1)  727/    CA6C :                             ;       TAX                                                     ;2
(1)  727/    CA6C :                             ;       BCS upper_lower                         ;2
(1)  727/    CA6C :                             ;       lower_lower:
(1)  727/    CA6C :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  727/    CA6C :                             ;       upper_lower:
(1)  727/    CA6C :                             ;               JMP (JUMP_TABLE2,X)
(1)  727/    CA6C :                             ;upper:
(1)  727/    CA6C :                             ;       ASL
(1)  727/    CA6C :                             ;       TAX
(1)  727/    CA6C :                             ;       BCS upper_upper
(1)  727/    CA6C :                             ;       lower_upper:
(1)  727/    CA6C :                             ;               JMP (JUMP_TABLE3,X)
(1)  727/    CA6C :                             ;       upper_upper:
(1)  727/    CA6C :                             ;               JMP (JUMP_TABLE4,X)
(1)  727/    CA6C :                             ;After jump:
(1)  727/    CA6C :                             ;TYA                                                    ;2
(1)  727/    CA6C :                             ;TAX                                                    ;2
(1)  727/    CA6C :                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 217 - 1/5/2022 12:19:0


(1)  727/    CA6C :                             ;Method 4 - 28 cycles
(1)  727/    CA6C :                             ;LDA (emu_PC,X)                 ;6
(1)  727/    CA6C :                             ;TAY                                    ;2
(1)  727/    CA6C :                             ;LDA JUMP_TABLE,Y               ;4
(1)  727/    CA6C :                             ;PHA                                    ;3
(1)  727/    CA6C :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  727/    CA6C :                             ;PHA                                    ;3
(1)  727/    CA6C :                             ;RTS                                    ;6
(1)  727/    CA6C :                             
(1)  727/    CA6C :                             ;Method 5 - 30 cycles
(1)  727/    CA6C : A1 02                       LDA (emu_PC,X)                  ;6
(1)  727/    CA6E : A8                          TAY                                             ;2
(1)  727/    CA6F : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  727/    CA72 : 95 0A                       STA emu_ptr,X                   ;4
(1)  727/    CA74 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  727/    CA77 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  727/    CA79 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  727/    CA7C :                                                     
(1)  728/    CA7C :                     
(1)  729/    CA7C :                     	;0x91 - STA IY
(1)  730/    CA7C :                     	STA_IY:
(1)  731/    CA7C : (MACRO)             		OP_MACRO 145, "STA", "IY", "STA_IY"
(1)  731/    CA7C :                             ;TODO
(1)  732/    CA7C : (MACRO)             		NEXT_MACRO
(1)  732/    CA7C :                                             
(1)  732/    CA7C :  (MACRO-2)                  halt
(1)  732/    CA7C : 00                          BRK
(1)  732/    CA7D : 00                          BRK
(1)  732/    CA7E :                             
(1)  732/    CA7E :                             ;Method 1 - 60 cycles
(1)  732/    CA7E :                             ;Jump table must be page aligned!!!
(1)  732/    CA7E :                             ;LDA (emu_PC,X)                 ;6
(1)  732/    CA7E :                             ;ASL                                    ;2
(1)  732/    CA7E :                             ;STA emu_ptr,X                  ;4
(1)  732/    CA7E :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  732/    CA7E :                             ;ADC #0                                 ;2
(1)  732/    CA7E :                             ;STA emu_ptr+1,X                ;4
(1)  732/    CA7E :                             ;LDA (emu_ptr,X)                ;6
(1)  732/    CA7E :                             ;STA emu_ptr2,X                 ;4
(1)  732/    CA7E :                             ;INC emu_ptr,X                  ;6
(1)  732/    CA7E :                             ;BCC .skip                              ;2
(1)  732/    CA7E :                             ;       INC emu_ptr+1,X         ;6
(1)  732/    CA7E :                             ;.skip:
(1)  732/    CA7E :                             ;LDA (emu_ptr,X)                ;6
(1)  732/    CA7E :                             ;STA emu_ptr2+1,X               ;4
(1)  732/    CA7E :                             ;JMP (emu_ptr2,X)               ;6
(1)  732/    CA7E :                             
(1)  732/    CA7E :                             ;Method 2 - 46 cycles
(1)  732/    CA7E :                             ;Jump table must be page aligned!!!
(1)  732/    CA7E :                             ;LDA (emu_PC,X)                 ;6
(1)  732/    CA7E :                             ;STZ emu_ptr+1,X                ;4
(1)  732/    CA7E :                             ;ASL                                    ;2
(1)  732/    CA7E :                             ;ROL emu_ptr+1,X                ;6
(1)  732/    CA7E :                             ;ASL                                    ;2
(1)  732/    CA7E :                             ;ROL emu_ptr+1,X                ;6
(1)  732/    CA7E :                             ;STA emu_ptr,X                  ;4                              
(1)  732/    CA7E :                             ;LDA emu_ptr+1,X                ;4
(1)  732/    CA7E :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  732/    CA7E :                             ;STA emu_ptr+1,X                ;4
(1)  732/    CA7E :                             ;JMP (emu_ptr2,X)               ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 218 - 1/5/2022 12:19:0


(1)  732/    CA7E :                             
(1)  732/    CA7E :                             ;Method 3 - 30 cycles
(1)  732/    CA7E :                             ;TXA                                                    ;2
(1)  732/    CA7E :                             ;TAY                                                    ;2
(1)  732/    CA7E :                             ;LDA (emu_PC,X)                                 ;6
(1)  732/    CA7E :                             ;ASL                                                    ;2
(1)  732/    CA7E :                             ;BCS upper                                              ;2
(1)  732/    CA7E :                             ;lower:
(1)  732/    CA7E :                             ;       ASL                                                     ;2
(1)  732/    CA7E :                             ;       TAX                                                     ;2
(1)  732/    CA7E :                             ;       BCS upper_lower                         ;2
(1)  732/    CA7E :                             ;       lower_lower:
(1)  732/    CA7E :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  732/    CA7E :                             ;       upper_lower:
(1)  732/    CA7E :                             ;               JMP (JUMP_TABLE2,X)
(1)  732/    CA7E :                             ;upper:
(1)  732/    CA7E :                             ;       ASL
(1)  732/    CA7E :                             ;       TAX
(1)  732/    CA7E :                             ;       BCS upper_upper
(1)  732/    CA7E :                             ;       lower_upper:
(1)  732/    CA7E :                             ;               JMP (JUMP_TABLE3,X)
(1)  732/    CA7E :                             ;       upper_upper:
(1)  732/    CA7E :                             ;               JMP (JUMP_TABLE4,X)
(1)  732/    CA7E :                             ;After jump:
(1)  732/    CA7E :                             ;TYA                                                    ;2
(1)  732/    CA7E :                             ;TAX                                                    ;2
(1)  732/    CA7E :                             
(1)  732/    CA7E :                             ;Method 4 - 28 cycles
(1)  732/    CA7E :                             ;LDA (emu_PC,X)                 ;6
(1)  732/    CA7E :                             ;TAY                                    ;2
(1)  732/    CA7E :                             ;LDA JUMP_TABLE,Y               ;4
(1)  732/    CA7E :                             ;PHA                                    ;3
(1)  732/    CA7E :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  732/    CA7E :                             ;PHA                                    ;3
(1)  732/    CA7E :                             ;RTS                                    ;6
(1)  732/    CA7E :                             
(1)  732/    CA7E :                             ;Method 5 - 30 cycles
(1)  732/    CA7E : A1 02                       LDA (emu_PC,X)                  ;6
(1)  732/    CA80 : A8                          TAY                                             ;2
(1)  732/    CA81 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  732/    CA84 : 95 0A                       STA emu_ptr,X                   ;4
(1)  732/    CA86 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  732/    CA89 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  732/    CA8B : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  732/    CA8E :                                                     
(1)  733/    CA8E :                     
(1)  734/    CA8E :                     	;0x92 - NOP
(1)  735/    CA8E :                     	NOP_0x92:
(1)  736/    CA8E : (MACRO)             		OP_MACRO 146, "NOP", "IMP", "NOP_0x92"
(1)  736/    CA8E :                             ;TODO
(1)  737/    CA8E : (MACRO)             		NEXT_MACRO
(1)  737/    CA8E :                                             
(1)  737/    CA8E :  (MACRO-2)                  halt
(1)  737/    CA8E : 00                          BRK
(1)  737/    CA8F : 00                          BRK
(1)  737/    CA90 :                             
(1)  737/    CA90 :                             ;Method 1 - 60 cycles
(1)  737/    CA90 :                             ;Jump table must be page aligned!!!
(1)  737/    CA90 :                             ;LDA (emu_PC,X)                 ;6
(1)  737/    CA90 :                             ;ASL                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 219 - 1/5/2022 12:19:0


(1)  737/    CA90 :                             ;STA emu_ptr,X                  ;4
(1)  737/    CA90 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  737/    CA90 :                             ;ADC #0                                 ;2
(1)  737/    CA90 :                             ;STA emu_ptr+1,X                ;4
(1)  737/    CA90 :                             ;LDA (emu_ptr,X)                ;6
(1)  737/    CA90 :                             ;STA emu_ptr2,X                 ;4
(1)  737/    CA90 :                             ;INC emu_ptr,X                  ;6
(1)  737/    CA90 :                             ;BCC .skip                              ;2
(1)  737/    CA90 :                             ;       INC emu_ptr+1,X         ;6
(1)  737/    CA90 :                             ;.skip:
(1)  737/    CA90 :                             ;LDA (emu_ptr,X)                ;6
(1)  737/    CA90 :                             ;STA emu_ptr2+1,X               ;4
(1)  737/    CA90 :                             ;JMP (emu_ptr2,X)               ;6
(1)  737/    CA90 :                             
(1)  737/    CA90 :                             ;Method 2 - 46 cycles
(1)  737/    CA90 :                             ;Jump table must be page aligned!!!
(1)  737/    CA90 :                             ;LDA (emu_PC,X)                 ;6
(1)  737/    CA90 :                             ;STZ emu_ptr+1,X                ;4
(1)  737/    CA90 :                             ;ASL                                    ;2
(1)  737/    CA90 :                             ;ROL emu_ptr+1,X                ;6
(1)  737/    CA90 :                             ;ASL                                    ;2
(1)  737/    CA90 :                             ;ROL emu_ptr+1,X                ;6
(1)  737/    CA90 :                             ;STA emu_ptr,X                  ;4                              
(1)  737/    CA90 :                             ;LDA emu_ptr+1,X                ;4
(1)  737/    CA90 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  737/    CA90 :                             ;STA emu_ptr+1,X                ;4
(1)  737/    CA90 :                             ;JMP (emu_ptr2,X)               ;6
(1)  737/    CA90 :                             
(1)  737/    CA90 :                             ;Method 3 - 30 cycles
(1)  737/    CA90 :                             ;TXA                                                    ;2
(1)  737/    CA90 :                             ;TAY                                                    ;2
(1)  737/    CA90 :                             ;LDA (emu_PC,X)                                 ;6
(1)  737/    CA90 :                             ;ASL                                                    ;2
(1)  737/    CA90 :                             ;BCS upper                                              ;2
(1)  737/    CA90 :                             ;lower:
(1)  737/    CA90 :                             ;       ASL                                                     ;2
(1)  737/    CA90 :                             ;       TAX                                                     ;2
(1)  737/    CA90 :                             ;       BCS upper_lower                         ;2
(1)  737/    CA90 :                             ;       lower_lower:
(1)  737/    CA90 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  737/    CA90 :                             ;       upper_lower:
(1)  737/    CA90 :                             ;               JMP (JUMP_TABLE2,X)
(1)  737/    CA90 :                             ;upper:
(1)  737/    CA90 :                             ;       ASL
(1)  737/    CA90 :                             ;       TAX
(1)  737/    CA90 :                             ;       BCS upper_upper
(1)  737/    CA90 :                             ;       lower_upper:
(1)  737/    CA90 :                             ;               JMP (JUMP_TABLE3,X)
(1)  737/    CA90 :                             ;       upper_upper:
(1)  737/    CA90 :                             ;               JMP (JUMP_TABLE4,X)
(1)  737/    CA90 :                             ;After jump:
(1)  737/    CA90 :                             ;TYA                                                    ;2
(1)  737/    CA90 :                             ;TAX                                                    ;2
(1)  737/    CA90 :                             
(1)  737/    CA90 :                             ;Method 4 - 28 cycles
(1)  737/    CA90 :                             ;LDA (emu_PC,X)                 ;6
(1)  737/    CA90 :                             ;TAY                                    ;2
(1)  737/    CA90 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  737/    CA90 :                             ;PHA                                    ;3
(1)  737/    CA90 :                             ;LDA JUMP_TABLE2,Y              ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 220 - 1/5/2022 12:19:0


(1)  737/    CA90 :                             ;PHA                                    ;3
(1)  737/    CA90 :                             ;RTS                                    ;6
(1)  737/    CA90 :                             
(1)  737/    CA90 :                             ;Method 5 - 30 cycles
(1)  737/    CA90 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  737/    CA92 : A8                          TAY                                             ;2
(1)  737/    CA93 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  737/    CA96 : 95 0A                       STA emu_ptr,X                   ;4
(1)  737/    CA98 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  737/    CA9B : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  737/    CA9D : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  737/    CAA0 :                                                     
(1)  738/    CAA0 :                     
(1)  739/    CAA0 :                     	;0x93 - NOP
(1)  740/    CAA0 :                     	NOP_0x93:
(1)  741/    CAA0 : (MACRO)             		OP_MACRO 147, "NOP", "IMP", "NOP_0x93"
(1)  741/    CAA0 :                             ;TODO
(1)  742/    CAA0 : (MACRO)             		NEXT_MACRO
(1)  742/    CAA0 :                                             
(1)  742/    CAA0 :  (MACRO-2)                  halt
(1)  742/    CAA0 : 00                          BRK
(1)  742/    CAA1 : 00                          BRK
(1)  742/    CAA2 :                             
(1)  742/    CAA2 :                             ;Method 1 - 60 cycles
(1)  742/    CAA2 :                             ;Jump table must be page aligned!!!
(1)  742/    CAA2 :                             ;LDA (emu_PC,X)                 ;6
(1)  742/    CAA2 :                             ;ASL                                    ;2
(1)  742/    CAA2 :                             ;STA emu_ptr,X                  ;4
(1)  742/    CAA2 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  742/    CAA2 :                             ;ADC #0                                 ;2
(1)  742/    CAA2 :                             ;STA emu_ptr+1,X                ;4
(1)  742/    CAA2 :                             ;LDA (emu_ptr,X)                ;6
(1)  742/    CAA2 :                             ;STA emu_ptr2,X                 ;4
(1)  742/    CAA2 :                             ;INC emu_ptr,X                  ;6
(1)  742/    CAA2 :                             ;BCC .skip                              ;2
(1)  742/    CAA2 :                             ;       INC emu_ptr+1,X         ;6
(1)  742/    CAA2 :                             ;.skip:
(1)  742/    CAA2 :                             ;LDA (emu_ptr,X)                ;6
(1)  742/    CAA2 :                             ;STA emu_ptr2+1,X               ;4
(1)  742/    CAA2 :                             ;JMP (emu_ptr2,X)               ;6
(1)  742/    CAA2 :                             
(1)  742/    CAA2 :                             ;Method 2 - 46 cycles
(1)  742/    CAA2 :                             ;Jump table must be page aligned!!!
(1)  742/    CAA2 :                             ;LDA (emu_PC,X)                 ;6
(1)  742/    CAA2 :                             ;STZ emu_ptr+1,X                ;4
(1)  742/    CAA2 :                             ;ASL                                    ;2
(1)  742/    CAA2 :                             ;ROL emu_ptr+1,X                ;6
(1)  742/    CAA2 :                             ;ASL                                    ;2
(1)  742/    CAA2 :                             ;ROL emu_ptr+1,X                ;6
(1)  742/    CAA2 :                             ;STA emu_ptr,X                  ;4                              
(1)  742/    CAA2 :                             ;LDA emu_ptr+1,X                ;4
(1)  742/    CAA2 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  742/    CAA2 :                             ;STA emu_ptr+1,X                ;4
(1)  742/    CAA2 :                             ;JMP (emu_ptr2,X)               ;6
(1)  742/    CAA2 :                             
(1)  742/    CAA2 :                             ;Method 3 - 30 cycles
(1)  742/    CAA2 :                             ;TXA                                                    ;2
(1)  742/    CAA2 :                             ;TAY                                                    ;2
(1)  742/    CAA2 :                             ;LDA (emu_PC,X)                                 ;6
(1)  742/    CAA2 :                             ;ASL                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 221 - 1/5/2022 12:19:0


(1)  742/    CAA2 :                             ;BCS upper                                              ;2
(1)  742/    CAA2 :                             ;lower:
(1)  742/    CAA2 :                             ;       ASL                                                     ;2
(1)  742/    CAA2 :                             ;       TAX                                                     ;2
(1)  742/    CAA2 :                             ;       BCS upper_lower                         ;2
(1)  742/    CAA2 :                             ;       lower_lower:
(1)  742/    CAA2 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  742/    CAA2 :                             ;       upper_lower:
(1)  742/    CAA2 :                             ;               JMP (JUMP_TABLE2,X)
(1)  742/    CAA2 :                             ;upper:
(1)  742/    CAA2 :                             ;       ASL
(1)  742/    CAA2 :                             ;       TAX
(1)  742/    CAA2 :                             ;       BCS upper_upper
(1)  742/    CAA2 :                             ;       lower_upper:
(1)  742/    CAA2 :                             ;               JMP (JUMP_TABLE3,X)
(1)  742/    CAA2 :                             ;       upper_upper:
(1)  742/    CAA2 :                             ;               JMP (JUMP_TABLE4,X)
(1)  742/    CAA2 :                             ;After jump:
(1)  742/    CAA2 :                             ;TYA                                                    ;2
(1)  742/    CAA2 :                             ;TAX                                                    ;2
(1)  742/    CAA2 :                             
(1)  742/    CAA2 :                             ;Method 4 - 28 cycles
(1)  742/    CAA2 :                             ;LDA (emu_PC,X)                 ;6
(1)  742/    CAA2 :                             ;TAY                                    ;2
(1)  742/    CAA2 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  742/    CAA2 :                             ;PHA                                    ;3
(1)  742/    CAA2 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  742/    CAA2 :                             ;PHA                                    ;3
(1)  742/    CAA2 :                             ;RTS                                    ;6
(1)  742/    CAA2 :                             
(1)  742/    CAA2 :                             ;Method 5 - 30 cycles
(1)  742/    CAA2 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  742/    CAA4 : A8                          TAY                                             ;2
(1)  742/    CAA5 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  742/    CAA8 : 95 0A                       STA emu_ptr,X                   ;4
(1)  742/    CAAA : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  742/    CAAD : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  742/    CAAF : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  742/    CAB2 :                                                     
(1)  743/    CAB2 :                     
(1)  744/    CAB2 :                     	;0x94 - STY ZPX
(1)  745/    CAB2 :                     	STY_ZPX:
(1)  746/    CAB2 : (MACRO)             		OP_MACRO 148, "STY", "ZPX", "STY_ZPX"
(1)  746/    CAB2 :                             ;TODO
(1)  747/    CAB2 : (MACRO)             		NEXT_MACRO
(1)  747/    CAB2 :                                             
(1)  747/    CAB2 :  (MACRO-2)                  halt
(1)  747/    CAB2 : 00                          BRK
(1)  747/    CAB3 : 00                          BRK
(1)  747/    CAB4 :                             
(1)  747/    CAB4 :                             ;Method 1 - 60 cycles
(1)  747/    CAB4 :                             ;Jump table must be page aligned!!!
(1)  747/    CAB4 :                             ;LDA (emu_PC,X)                 ;6
(1)  747/    CAB4 :                             ;ASL                                    ;2
(1)  747/    CAB4 :                             ;STA emu_ptr,X                  ;4
(1)  747/    CAB4 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  747/    CAB4 :                             ;ADC #0                                 ;2
(1)  747/    CAB4 :                             ;STA emu_ptr+1,X                ;4
(1)  747/    CAB4 :                             ;LDA (emu_ptr,X)                ;6
(1)  747/    CAB4 :                             ;STA emu_ptr2,X                 ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 222 - 1/5/2022 12:19:0


(1)  747/    CAB4 :                             ;INC emu_ptr,X                  ;6
(1)  747/    CAB4 :                             ;BCC .skip                              ;2
(1)  747/    CAB4 :                             ;       INC emu_ptr+1,X         ;6
(1)  747/    CAB4 :                             ;.skip:
(1)  747/    CAB4 :                             ;LDA (emu_ptr,X)                ;6
(1)  747/    CAB4 :                             ;STA emu_ptr2+1,X               ;4
(1)  747/    CAB4 :                             ;JMP (emu_ptr2,X)               ;6
(1)  747/    CAB4 :                             
(1)  747/    CAB4 :                             ;Method 2 - 46 cycles
(1)  747/    CAB4 :                             ;Jump table must be page aligned!!!
(1)  747/    CAB4 :                             ;LDA (emu_PC,X)                 ;6
(1)  747/    CAB4 :                             ;STZ emu_ptr+1,X                ;4
(1)  747/    CAB4 :                             ;ASL                                    ;2
(1)  747/    CAB4 :                             ;ROL emu_ptr+1,X                ;6
(1)  747/    CAB4 :                             ;ASL                                    ;2
(1)  747/    CAB4 :                             ;ROL emu_ptr+1,X                ;6
(1)  747/    CAB4 :                             ;STA emu_ptr,X                  ;4                              
(1)  747/    CAB4 :                             ;LDA emu_ptr+1,X                ;4
(1)  747/    CAB4 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  747/    CAB4 :                             ;STA emu_ptr+1,X                ;4
(1)  747/    CAB4 :                             ;JMP (emu_ptr2,X)               ;6
(1)  747/    CAB4 :                             
(1)  747/    CAB4 :                             ;Method 3 - 30 cycles
(1)  747/    CAB4 :                             ;TXA                                                    ;2
(1)  747/    CAB4 :                             ;TAY                                                    ;2
(1)  747/    CAB4 :                             ;LDA (emu_PC,X)                                 ;6
(1)  747/    CAB4 :                             ;ASL                                                    ;2
(1)  747/    CAB4 :                             ;BCS upper                                              ;2
(1)  747/    CAB4 :                             ;lower:
(1)  747/    CAB4 :                             ;       ASL                                                     ;2
(1)  747/    CAB4 :                             ;       TAX                                                     ;2
(1)  747/    CAB4 :                             ;       BCS upper_lower                         ;2
(1)  747/    CAB4 :                             ;       lower_lower:
(1)  747/    CAB4 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  747/    CAB4 :                             ;       upper_lower:
(1)  747/    CAB4 :                             ;               JMP (JUMP_TABLE2,X)
(1)  747/    CAB4 :                             ;upper:
(1)  747/    CAB4 :                             ;       ASL
(1)  747/    CAB4 :                             ;       TAX
(1)  747/    CAB4 :                             ;       BCS upper_upper
(1)  747/    CAB4 :                             ;       lower_upper:
(1)  747/    CAB4 :                             ;               JMP (JUMP_TABLE3,X)
(1)  747/    CAB4 :                             ;       upper_upper:
(1)  747/    CAB4 :                             ;               JMP (JUMP_TABLE4,X)
(1)  747/    CAB4 :                             ;After jump:
(1)  747/    CAB4 :                             ;TYA                                                    ;2
(1)  747/    CAB4 :                             ;TAX                                                    ;2
(1)  747/    CAB4 :                             
(1)  747/    CAB4 :                             ;Method 4 - 28 cycles
(1)  747/    CAB4 :                             ;LDA (emu_PC,X)                 ;6
(1)  747/    CAB4 :                             ;TAY                                    ;2
(1)  747/    CAB4 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  747/    CAB4 :                             ;PHA                                    ;3
(1)  747/    CAB4 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  747/    CAB4 :                             ;PHA                                    ;3
(1)  747/    CAB4 :                             ;RTS                                    ;6
(1)  747/    CAB4 :                             
(1)  747/    CAB4 :                             ;Method 5 - 30 cycles
(1)  747/    CAB4 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  747/    CAB6 : A8                          TAY                                             ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 223 - 1/5/2022 12:19:0


(1)  747/    CAB7 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  747/    CABA : 95 0A                       STA emu_ptr,X                   ;4
(1)  747/    CABC : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  747/    CABF : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  747/    CAC1 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  747/    CAC4 :                                                     
(1)  748/    CAC4 :                     
(1)  749/    CAC4 :                     	;0x95 - STA ZPX
(1)  750/    CAC4 :                     	STA_ZPX:
(1)  751/    CAC4 : (MACRO)             		OP_MACRO 149, "STA", "ZPX", "STA_ZPX"
(1)  751/    CAC4 :                             ;TODO
(1)  752/    CAC4 : (MACRO)             		NEXT_MACRO
(1)  752/    CAC4 :                                             
(1)  752/    CAC4 :  (MACRO-2)                  halt
(1)  752/    CAC4 : 00                          BRK
(1)  752/    CAC5 : 00                          BRK
(1)  752/    CAC6 :                             
(1)  752/    CAC6 :                             ;Method 1 - 60 cycles
(1)  752/    CAC6 :                             ;Jump table must be page aligned!!!
(1)  752/    CAC6 :                             ;LDA (emu_PC,X)                 ;6
(1)  752/    CAC6 :                             ;ASL                                    ;2
(1)  752/    CAC6 :                             ;STA emu_ptr,X                  ;4
(1)  752/    CAC6 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  752/    CAC6 :                             ;ADC #0                                 ;2
(1)  752/    CAC6 :                             ;STA emu_ptr+1,X                ;4
(1)  752/    CAC6 :                             ;LDA (emu_ptr,X)                ;6
(1)  752/    CAC6 :                             ;STA emu_ptr2,X                 ;4
(1)  752/    CAC6 :                             ;INC emu_ptr,X                  ;6
(1)  752/    CAC6 :                             ;BCC .skip                              ;2
(1)  752/    CAC6 :                             ;       INC emu_ptr+1,X         ;6
(1)  752/    CAC6 :                             ;.skip:
(1)  752/    CAC6 :                             ;LDA (emu_ptr,X)                ;6
(1)  752/    CAC6 :                             ;STA emu_ptr2+1,X               ;4
(1)  752/    CAC6 :                             ;JMP (emu_ptr2,X)               ;6
(1)  752/    CAC6 :                             
(1)  752/    CAC6 :                             ;Method 2 - 46 cycles
(1)  752/    CAC6 :                             ;Jump table must be page aligned!!!
(1)  752/    CAC6 :                             ;LDA (emu_PC,X)                 ;6
(1)  752/    CAC6 :                             ;STZ emu_ptr+1,X                ;4
(1)  752/    CAC6 :                             ;ASL                                    ;2
(1)  752/    CAC6 :                             ;ROL emu_ptr+1,X                ;6
(1)  752/    CAC6 :                             ;ASL                                    ;2
(1)  752/    CAC6 :                             ;ROL emu_ptr+1,X                ;6
(1)  752/    CAC6 :                             ;STA emu_ptr,X                  ;4                              
(1)  752/    CAC6 :                             ;LDA emu_ptr+1,X                ;4
(1)  752/    CAC6 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  752/    CAC6 :                             ;STA emu_ptr+1,X                ;4
(1)  752/    CAC6 :                             ;JMP (emu_ptr2,X)               ;6
(1)  752/    CAC6 :                             
(1)  752/    CAC6 :                             ;Method 3 - 30 cycles
(1)  752/    CAC6 :                             ;TXA                                                    ;2
(1)  752/    CAC6 :                             ;TAY                                                    ;2
(1)  752/    CAC6 :                             ;LDA (emu_PC,X)                                 ;6
(1)  752/    CAC6 :                             ;ASL                                                    ;2
(1)  752/    CAC6 :                             ;BCS upper                                              ;2
(1)  752/    CAC6 :                             ;lower:
(1)  752/    CAC6 :                             ;       ASL                                                     ;2
(1)  752/    CAC6 :                             ;       TAX                                                     ;2
(1)  752/    CAC6 :                             ;       BCS upper_lower                         ;2
(1)  752/    CAC6 :                             ;       lower_lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 224 - 1/5/2022 12:19:0


(1)  752/    CAC6 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  752/    CAC6 :                             ;       upper_lower:
(1)  752/    CAC6 :                             ;               JMP (JUMP_TABLE2,X)
(1)  752/    CAC6 :                             ;upper:
(1)  752/    CAC6 :                             ;       ASL
(1)  752/    CAC6 :                             ;       TAX
(1)  752/    CAC6 :                             ;       BCS upper_upper
(1)  752/    CAC6 :                             ;       lower_upper:
(1)  752/    CAC6 :                             ;               JMP (JUMP_TABLE3,X)
(1)  752/    CAC6 :                             ;       upper_upper:
(1)  752/    CAC6 :                             ;               JMP (JUMP_TABLE4,X)
(1)  752/    CAC6 :                             ;After jump:
(1)  752/    CAC6 :                             ;TYA                                                    ;2
(1)  752/    CAC6 :                             ;TAX                                                    ;2
(1)  752/    CAC6 :                             
(1)  752/    CAC6 :                             ;Method 4 - 28 cycles
(1)  752/    CAC6 :                             ;LDA (emu_PC,X)                 ;6
(1)  752/    CAC6 :                             ;TAY                                    ;2
(1)  752/    CAC6 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  752/    CAC6 :                             ;PHA                                    ;3
(1)  752/    CAC6 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  752/    CAC6 :                             ;PHA                                    ;3
(1)  752/    CAC6 :                             ;RTS                                    ;6
(1)  752/    CAC6 :                             
(1)  752/    CAC6 :                             ;Method 5 - 30 cycles
(1)  752/    CAC6 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  752/    CAC8 : A8                          TAY                                             ;2
(1)  752/    CAC9 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  752/    CACC : 95 0A                       STA emu_ptr,X                   ;4
(1)  752/    CACE : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  752/    CAD1 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  752/    CAD3 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  752/    CAD6 :                                                     
(1)  753/    CAD6 :                     
(1)  754/    CAD6 :                     	;0x96 - STX ZPY
(1)  755/    CAD6 :                     	STX_ZPY:
(1)  756/    CAD6 : (MACRO)             		OP_MACRO 150, "STX", "ZPY", "STX_ZPY"
(1)  756/    CAD6 :                             ;TODO
(1)  757/    CAD6 : (MACRO)             		NEXT_MACRO
(1)  757/    CAD6 :                                             
(1)  757/    CAD6 :  (MACRO-2)                  halt
(1)  757/    CAD6 : 00                          BRK
(1)  757/    CAD7 : 00                          BRK
(1)  757/    CAD8 :                             
(1)  757/    CAD8 :                             ;Method 1 - 60 cycles
(1)  757/    CAD8 :                             ;Jump table must be page aligned!!!
(1)  757/    CAD8 :                             ;LDA (emu_PC,X)                 ;6
(1)  757/    CAD8 :                             ;ASL                                    ;2
(1)  757/    CAD8 :                             ;STA emu_ptr,X                  ;4
(1)  757/    CAD8 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  757/    CAD8 :                             ;ADC #0                                 ;2
(1)  757/    CAD8 :                             ;STA emu_ptr+1,X                ;4
(1)  757/    CAD8 :                             ;LDA (emu_ptr,X)                ;6
(1)  757/    CAD8 :                             ;STA emu_ptr2,X                 ;4
(1)  757/    CAD8 :                             ;INC emu_ptr,X                  ;6
(1)  757/    CAD8 :                             ;BCC .skip                              ;2
(1)  757/    CAD8 :                             ;       INC emu_ptr+1,X         ;6
(1)  757/    CAD8 :                             ;.skip:
(1)  757/    CAD8 :                             ;LDA (emu_ptr,X)                ;6
(1)  757/    CAD8 :                             ;STA emu_ptr2+1,X               ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 225 - 1/5/2022 12:19:0


(1)  757/    CAD8 :                             ;JMP (emu_ptr2,X)               ;6
(1)  757/    CAD8 :                             
(1)  757/    CAD8 :                             ;Method 2 - 46 cycles
(1)  757/    CAD8 :                             ;Jump table must be page aligned!!!
(1)  757/    CAD8 :                             ;LDA (emu_PC,X)                 ;6
(1)  757/    CAD8 :                             ;STZ emu_ptr+1,X                ;4
(1)  757/    CAD8 :                             ;ASL                                    ;2
(1)  757/    CAD8 :                             ;ROL emu_ptr+1,X                ;6
(1)  757/    CAD8 :                             ;ASL                                    ;2
(1)  757/    CAD8 :                             ;ROL emu_ptr+1,X                ;6
(1)  757/    CAD8 :                             ;STA emu_ptr,X                  ;4                              
(1)  757/    CAD8 :                             ;LDA emu_ptr+1,X                ;4
(1)  757/    CAD8 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  757/    CAD8 :                             ;STA emu_ptr+1,X                ;4
(1)  757/    CAD8 :                             ;JMP (emu_ptr2,X)               ;6
(1)  757/    CAD8 :                             
(1)  757/    CAD8 :                             ;Method 3 - 30 cycles
(1)  757/    CAD8 :                             ;TXA                                                    ;2
(1)  757/    CAD8 :                             ;TAY                                                    ;2
(1)  757/    CAD8 :                             ;LDA (emu_PC,X)                                 ;6
(1)  757/    CAD8 :                             ;ASL                                                    ;2
(1)  757/    CAD8 :                             ;BCS upper                                              ;2
(1)  757/    CAD8 :                             ;lower:
(1)  757/    CAD8 :                             ;       ASL                                                     ;2
(1)  757/    CAD8 :                             ;       TAX                                                     ;2
(1)  757/    CAD8 :                             ;       BCS upper_lower                         ;2
(1)  757/    CAD8 :                             ;       lower_lower:
(1)  757/    CAD8 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  757/    CAD8 :                             ;       upper_lower:
(1)  757/    CAD8 :                             ;               JMP (JUMP_TABLE2,X)
(1)  757/    CAD8 :                             ;upper:
(1)  757/    CAD8 :                             ;       ASL
(1)  757/    CAD8 :                             ;       TAX
(1)  757/    CAD8 :                             ;       BCS upper_upper
(1)  757/    CAD8 :                             ;       lower_upper:
(1)  757/    CAD8 :                             ;               JMP (JUMP_TABLE3,X)
(1)  757/    CAD8 :                             ;       upper_upper:
(1)  757/    CAD8 :                             ;               JMP (JUMP_TABLE4,X)
(1)  757/    CAD8 :                             ;After jump:
(1)  757/    CAD8 :                             ;TYA                                                    ;2
(1)  757/    CAD8 :                             ;TAX                                                    ;2
(1)  757/    CAD8 :                             
(1)  757/    CAD8 :                             ;Method 4 - 28 cycles
(1)  757/    CAD8 :                             ;LDA (emu_PC,X)                 ;6
(1)  757/    CAD8 :                             ;TAY                                    ;2
(1)  757/    CAD8 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  757/    CAD8 :                             ;PHA                                    ;3
(1)  757/    CAD8 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  757/    CAD8 :                             ;PHA                                    ;3
(1)  757/    CAD8 :                             ;RTS                                    ;6
(1)  757/    CAD8 :                             
(1)  757/    CAD8 :                             ;Method 5 - 30 cycles
(1)  757/    CAD8 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  757/    CADA : A8                          TAY                                             ;2
(1)  757/    CADB : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  757/    CADE : 95 0A                       STA emu_ptr,X                   ;4
(1)  757/    CAE0 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  757/    CAE3 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  757/    CAE5 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  757/    CAE8 :                                                     
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 226 - 1/5/2022 12:19:0


(1)  758/    CAE8 :                     
(1)  759/    CAE8 :                     	;0x97 - NOP
(1)  760/    CAE8 :                     	NOP_0x97:
(1)  761/    CAE8 : (MACRO)             		OP_MACRO 151, "NOP", "IMP", "NOP_0x97"
(1)  761/    CAE8 :                             ;TODO
(1)  762/    CAE8 : (MACRO)             		NEXT_MACRO
(1)  762/    CAE8 :                                             
(1)  762/    CAE8 :  (MACRO-2)                  halt
(1)  762/    CAE8 : 00                          BRK
(1)  762/    CAE9 : 00                          BRK
(1)  762/    CAEA :                             
(1)  762/    CAEA :                             ;Method 1 - 60 cycles
(1)  762/    CAEA :                             ;Jump table must be page aligned!!!
(1)  762/    CAEA :                             ;LDA (emu_PC,X)                 ;6
(1)  762/    CAEA :                             ;ASL                                    ;2
(1)  762/    CAEA :                             ;STA emu_ptr,X                  ;4
(1)  762/    CAEA :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  762/    CAEA :                             ;ADC #0                                 ;2
(1)  762/    CAEA :                             ;STA emu_ptr+1,X                ;4
(1)  762/    CAEA :                             ;LDA (emu_ptr,X)                ;6
(1)  762/    CAEA :                             ;STA emu_ptr2,X                 ;4
(1)  762/    CAEA :                             ;INC emu_ptr,X                  ;6
(1)  762/    CAEA :                             ;BCC .skip                              ;2
(1)  762/    CAEA :                             ;       INC emu_ptr+1,X         ;6
(1)  762/    CAEA :                             ;.skip:
(1)  762/    CAEA :                             ;LDA (emu_ptr,X)                ;6
(1)  762/    CAEA :                             ;STA emu_ptr2+1,X               ;4
(1)  762/    CAEA :                             ;JMP (emu_ptr2,X)               ;6
(1)  762/    CAEA :                             
(1)  762/    CAEA :                             ;Method 2 - 46 cycles
(1)  762/    CAEA :                             ;Jump table must be page aligned!!!
(1)  762/    CAEA :                             ;LDA (emu_PC,X)                 ;6
(1)  762/    CAEA :                             ;STZ emu_ptr+1,X                ;4
(1)  762/    CAEA :                             ;ASL                                    ;2
(1)  762/    CAEA :                             ;ROL emu_ptr+1,X                ;6
(1)  762/    CAEA :                             ;ASL                                    ;2
(1)  762/    CAEA :                             ;ROL emu_ptr+1,X                ;6
(1)  762/    CAEA :                             ;STA emu_ptr,X                  ;4                              
(1)  762/    CAEA :                             ;LDA emu_ptr+1,X                ;4
(1)  762/    CAEA :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  762/    CAEA :                             ;STA emu_ptr+1,X                ;4
(1)  762/    CAEA :                             ;JMP (emu_ptr2,X)               ;6
(1)  762/    CAEA :                             
(1)  762/    CAEA :                             ;Method 3 - 30 cycles
(1)  762/    CAEA :                             ;TXA                                                    ;2
(1)  762/    CAEA :                             ;TAY                                                    ;2
(1)  762/    CAEA :                             ;LDA (emu_PC,X)                                 ;6
(1)  762/    CAEA :                             ;ASL                                                    ;2
(1)  762/    CAEA :                             ;BCS upper                                              ;2
(1)  762/    CAEA :                             ;lower:
(1)  762/    CAEA :                             ;       ASL                                                     ;2
(1)  762/    CAEA :                             ;       TAX                                                     ;2
(1)  762/    CAEA :                             ;       BCS upper_lower                         ;2
(1)  762/    CAEA :                             ;       lower_lower:
(1)  762/    CAEA :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  762/    CAEA :                             ;       upper_lower:
(1)  762/    CAEA :                             ;               JMP (JUMP_TABLE2,X)
(1)  762/    CAEA :                             ;upper:
(1)  762/    CAEA :                             ;       ASL
(1)  762/    CAEA :                             ;       TAX
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 227 - 1/5/2022 12:19:0


(1)  762/    CAEA :                             ;       BCS upper_upper
(1)  762/    CAEA :                             ;       lower_upper:
(1)  762/    CAEA :                             ;               JMP (JUMP_TABLE3,X)
(1)  762/    CAEA :                             ;       upper_upper:
(1)  762/    CAEA :                             ;               JMP (JUMP_TABLE4,X)
(1)  762/    CAEA :                             ;After jump:
(1)  762/    CAEA :                             ;TYA                                                    ;2
(1)  762/    CAEA :                             ;TAX                                                    ;2
(1)  762/    CAEA :                             
(1)  762/    CAEA :                             ;Method 4 - 28 cycles
(1)  762/    CAEA :                             ;LDA (emu_PC,X)                 ;6
(1)  762/    CAEA :                             ;TAY                                    ;2
(1)  762/    CAEA :                             ;LDA JUMP_TABLE,Y               ;4
(1)  762/    CAEA :                             ;PHA                                    ;3
(1)  762/    CAEA :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  762/    CAEA :                             ;PHA                                    ;3
(1)  762/    CAEA :                             ;RTS                                    ;6
(1)  762/    CAEA :                             
(1)  762/    CAEA :                             ;Method 5 - 30 cycles
(1)  762/    CAEA : A1 02                       LDA (emu_PC,X)                  ;6
(1)  762/    CAEC : A8                          TAY                                             ;2
(1)  762/    CAED : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  762/    CAF0 : 95 0A                       STA emu_ptr,X                   ;4
(1)  762/    CAF2 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  762/    CAF5 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  762/    CAF7 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  762/    CAFA :                                                     
(1)  763/    CAFA :                     
(1)  764/    CAFA :                     	;0x98 - TYA IMP
(1)  765/    CAFA :                     	TYA_IMP:
(1)  766/    CAFA : (MACRO)             		OP_MACRO 152, "TYA", "IMP", "TYA_IMP"
(1)  766/    CAFA :                             ;TODO
(1)  767/    CAFA : (MACRO)             		NEXT_MACRO
(1)  767/    CAFA :                                             
(1)  767/    CAFA :  (MACRO-2)                  halt
(1)  767/    CAFA : 00                          BRK
(1)  767/    CAFB : 00                          BRK
(1)  767/    CAFC :                             
(1)  767/    CAFC :                             ;Method 1 - 60 cycles
(1)  767/    CAFC :                             ;Jump table must be page aligned!!!
(1)  767/    CAFC :                             ;LDA (emu_PC,X)                 ;6
(1)  767/    CAFC :                             ;ASL                                    ;2
(1)  767/    CAFC :                             ;STA emu_ptr,X                  ;4
(1)  767/    CAFC :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  767/    CAFC :                             ;ADC #0                                 ;2
(1)  767/    CAFC :                             ;STA emu_ptr+1,X                ;4
(1)  767/    CAFC :                             ;LDA (emu_ptr,X)                ;6
(1)  767/    CAFC :                             ;STA emu_ptr2,X                 ;4
(1)  767/    CAFC :                             ;INC emu_ptr,X                  ;6
(1)  767/    CAFC :                             ;BCC .skip                              ;2
(1)  767/    CAFC :                             ;       INC emu_ptr+1,X         ;6
(1)  767/    CAFC :                             ;.skip:
(1)  767/    CAFC :                             ;LDA (emu_ptr,X)                ;6
(1)  767/    CAFC :                             ;STA emu_ptr2+1,X               ;4
(1)  767/    CAFC :                             ;JMP (emu_ptr2,X)               ;6
(1)  767/    CAFC :                             
(1)  767/    CAFC :                             ;Method 2 - 46 cycles
(1)  767/    CAFC :                             ;Jump table must be page aligned!!!
(1)  767/    CAFC :                             ;LDA (emu_PC,X)                 ;6
(1)  767/    CAFC :                             ;STZ emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 228 - 1/5/2022 12:19:0


(1)  767/    CAFC :                             ;ASL                                    ;2
(1)  767/    CAFC :                             ;ROL emu_ptr+1,X                ;6
(1)  767/    CAFC :                             ;ASL                                    ;2
(1)  767/    CAFC :                             ;ROL emu_ptr+1,X                ;6
(1)  767/    CAFC :                             ;STA emu_ptr,X                  ;4                              
(1)  767/    CAFC :                             ;LDA emu_ptr+1,X                ;4
(1)  767/    CAFC :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  767/    CAFC :                             ;STA emu_ptr+1,X                ;4
(1)  767/    CAFC :                             ;JMP (emu_ptr2,X)               ;6
(1)  767/    CAFC :                             
(1)  767/    CAFC :                             ;Method 3 - 30 cycles
(1)  767/    CAFC :                             ;TXA                                                    ;2
(1)  767/    CAFC :                             ;TAY                                                    ;2
(1)  767/    CAFC :                             ;LDA (emu_PC,X)                                 ;6
(1)  767/    CAFC :                             ;ASL                                                    ;2
(1)  767/    CAFC :                             ;BCS upper                                              ;2
(1)  767/    CAFC :                             ;lower:
(1)  767/    CAFC :                             ;       ASL                                                     ;2
(1)  767/    CAFC :                             ;       TAX                                                     ;2
(1)  767/    CAFC :                             ;       BCS upper_lower                         ;2
(1)  767/    CAFC :                             ;       lower_lower:
(1)  767/    CAFC :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  767/    CAFC :                             ;       upper_lower:
(1)  767/    CAFC :                             ;               JMP (JUMP_TABLE2,X)
(1)  767/    CAFC :                             ;upper:
(1)  767/    CAFC :                             ;       ASL
(1)  767/    CAFC :                             ;       TAX
(1)  767/    CAFC :                             ;       BCS upper_upper
(1)  767/    CAFC :                             ;       lower_upper:
(1)  767/    CAFC :                             ;               JMP (JUMP_TABLE3,X)
(1)  767/    CAFC :                             ;       upper_upper:
(1)  767/    CAFC :                             ;               JMP (JUMP_TABLE4,X)
(1)  767/    CAFC :                             ;After jump:
(1)  767/    CAFC :                             ;TYA                                                    ;2
(1)  767/    CAFC :                             ;TAX                                                    ;2
(1)  767/    CAFC :                             
(1)  767/    CAFC :                             ;Method 4 - 28 cycles
(1)  767/    CAFC :                             ;LDA (emu_PC,X)                 ;6
(1)  767/    CAFC :                             ;TAY                                    ;2
(1)  767/    CAFC :                             ;LDA JUMP_TABLE,Y               ;4
(1)  767/    CAFC :                             ;PHA                                    ;3
(1)  767/    CAFC :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  767/    CAFC :                             ;PHA                                    ;3
(1)  767/    CAFC :                             ;RTS                                    ;6
(1)  767/    CAFC :                             
(1)  767/    CAFC :                             ;Method 5 - 30 cycles
(1)  767/    CAFC : A1 02                       LDA (emu_PC,X)                  ;6
(1)  767/    CAFE : A8                          TAY                                             ;2
(1)  767/    CAFF : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  767/    CB02 : 95 0A                       STA emu_ptr,X                   ;4
(1)  767/    CB04 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  767/    CB07 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  767/    CB09 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  767/    CB0C :                                                     
(1)  768/    CB0C :                     
(1)  769/    CB0C :                     	;0x99 - STA ABSY
(1)  770/    CB0C :                     	STA_ABSY:
(1)  771/    CB0C : (MACRO)             		OP_MACRO 153, "STA", "ABSY", "STA_ABSY"
(1)  771/    CB0C :                             ;TODO
(1)  772/    CB0C : (MACRO)             		NEXT_MACRO
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 229 - 1/5/2022 12:19:0


(1)  772/    CB0C :                                             
(1)  772/    CB0C :  (MACRO-2)                  halt
(1)  772/    CB0C : 00                          BRK
(1)  772/    CB0D : 00                          BRK
(1)  772/    CB0E :                             
(1)  772/    CB0E :                             ;Method 1 - 60 cycles
(1)  772/    CB0E :                             ;Jump table must be page aligned!!!
(1)  772/    CB0E :                             ;LDA (emu_PC,X)                 ;6
(1)  772/    CB0E :                             ;ASL                                    ;2
(1)  772/    CB0E :                             ;STA emu_ptr,X                  ;4
(1)  772/    CB0E :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  772/    CB0E :                             ;ADC #0                                 ;2
(1)  772/    CB0E :                             ;STA emu_ptr+1,X                ;4
(1)  772/    CB0E :                             ;LDA (emu_ptr,X)                ;6
(1)  772/    CB0E :                             ;STA emu_ptr2,X                 ;4
(1)  772/    CB0E :                             ;INC emu_ptr,X                  ;6
(1)  772/    CB0E :                             ;BCC .skip                              ;2
(1)  772/    CB0E :                             ;       INC emu_ptr+1,X         ;6
(1)  772/    CB0E :                             ;.skip:
(1)  772/    CB0E :                             ;LDA (emu_ptr,X)                ;6
(1)  772/    CB0E :                             ;STA emu_ptr2+1,X               ;4
(1)  772/    CB0E :                             ;JMP (emu_ptr2,X)               ;6
(1)  772/    CB0E :                             
(1)  772/    CB0E :                             ;Method 2 - 46 cycles
(1)  772/    CB0E :                             ;Jump table must be page aligned!!!
(1)  772/    CB0E :                             ;LDA (emu_PC,X)                 ;6
(1)  772/    CB0E :                             ;STZ emu_ptr+1,X                ;4
(1)  772/    CB0E :                             ;ASL                                    ;2
(1)  772/    CB0E :                             ;ROL emu_ptr+1,X                ;6
(1)  772/    CB0E :                             ;ASL                                    ;2
(1)  772/    CB0E :                             ;ROL emu_ptr+1,X                ;6
(1)  772/    CB0E :                             ;STA emu_ptr,X                  ;4                              
(1)  772/    CB0E :                             ;LDA emu_ptr+1,X                ;4
(1)  772/    CB0E :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  772/    CB0E :                             ;STA emu_ptr+1,X                ;4
(1)  772/    CB0E :                             ;JMP (emu_ptr2,X)               ;6
(1)  772/    CB0E :                             
(1)  772/    CB0E :                             ;Method 3 - 30 cycles
(1)  772/    CB0E :                             ;TXA                                                    ;2
(1)  772/    CB0E :                             ;TAY                                                    ;2
(1)  772/    CB0E :                             ;LDA (emu_PC,X)                                 ;6
(1)  772/    CB0E :                             ;ASL                                                    ;2
(1)  772/    CB0E :                             ;BCS upper                                              ;2
(1)  772/    CB0E :                             ;lower:
(1)  772/    CB0E :                             ;       ASL                                                     ;2
(1)  772/    CB0E :                             ;       TAX                                                     ;2
(1)  772/    CB0E :                             ;       BCS upper_lower                         ;2
(1)  772/    CB0E :                             ;       lower_lower:
(1)  772/    CB0E :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  772/    CB0E :                             ;       upper_lower:
(1)  772/    CB0E :                             ;               JMP (JUMP_TABLE2,X)
(1)  772/    CB0E :                             ;upper:
(1)  772/    CB0E :                             ;       ASL
(1)  772/    CB0E :                             ;       TAX
(1)  772/    CB0E :                             ;       BCS upper_upper
(1)  772/    CB0E :                             ;       lower_upper:
(1)  772/    CB0E :                             ;               JMP (JUMP_TABLE3,X)
(1)  772/    CB0E :                             ;       upper_upper:
(1)  772/    CB0E :                             ;               JMP (JUMP_TABLE4,X)
(1)  772/    CB0E :                             ;After jump:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 230 - 1/5/2022 12:19:0


(1)  772/    CB0E :                             ;TYA                                                    ;2
(1)  772/    CB0E :                             ;TAX                                                    ;2
(1)  772/    CB0E :                             
(1)  772/    CB0E :                             ;Method 4 - 28 cycles
(1)  772/    CB0E :                             ;LDA (emu_PC,X)                 ;6
(1)  772/    CB0E :                             ;TAY                                    ;2
(1)  772/    CB0E :                             ;LDA JUMP_TABLE,Y               ;4
(1)  772/    CB0E :                             ;PHA                                    ;3
(1)  772/    CB0E :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  772/    CB0E :                             ;PHA                                    ;3
(1)  772/    CB0E :                             ;RTS                                    ;6
(1)  772/    CB0E :                             
(1)  772/    CB0E :                             ;Method 5 - 30 cycles
(1)  772/    CB0E : A1 02                       LDA (emu_PC,X)                  ;6
(1)  772/    CB10 : A8                          TAY                                             ;2
(1)  772/    CB11 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  772/    CB14 : 95 0A                       STA emu_ptr,X                   ;4
(1)  772/    CB16 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  772/    CB19 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  772/    CB1B : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  772/    CB1E :                                                     
(1)  773/    CB1E :                     
(1)  774/    CB1E :                     	;0x9A - TXS IMP
(1)  775/    CB1E :                     	TXS_IMP:
(1)  776/    CB1E : (MACRO)             		OP_MACRO 154, "TXS", "IMP", "TXS_IMP"
(1)  776/    CB1E :                             ;TODO
(1)  777/    CB1E : (MACRO)             		NEXT_MACRO
(1)  777/    CB1E :                                             
(1)  777/    CB1E :  (MACRO-2)                  halt
(1)  777/    CB1E : 00                          BRK
(1)  777/    CB1F : 00                          BRK
(1)  777/    CB20 :                             
(1)  777/    CB20 :                             ;Method 1 - 60 cycles
(1)  777/    CB20 :                             ;Jump table must be page aligned!!!
(1)  777/    CB20 :                             ;LDA (emu_PC,X)                 ;6
(1)  777/    CB20 :                             ;ASL                                    ;2
(1)  777/    CB20 :                             ;STA emu_ptr,X                  ;4
(1)  777/    CB20 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  777/    CB20 :                             ;ADC #0                                 ;2
(1)  777/    CB20 :                             ;STA emu_ptr+1,X                ;4
(1)  777/    CB20 :                             ;LDA (emu_ptr,X)                ;6
(1)  777/    CB20 :                             ;STA emu_ptr2,X                 ;4
(1)  777/    CB20 :                             ;INC emu_ptr,X                  ;6
(1)  777/    CB20 :                             ;BCC .skip                              ;2
(1)  777/    CB20 :                             ;       INC emu_ptr+1,X         ;6
(1)  777/    CB20 :                             ;.skip:
(1)  777/    CB20 :                             ;LDA (emu_ptr,X)                ;6
(1)  777/    CB20 :                             ;STA emu_ptr2+1,X               ;4
(1)  777/    CB20 :                             ;JMP (emu_ptr2,X)               ;6
(1)  777/    CB20 :                             
(1)  777/    CB20 :                             ;Method 2 - 46 cycles
(1)  777/    CB20 :                             ;Jump table must be page aligned!!!
(1)  777/    CB20 :                             ;LDA (emu_PC,X)                 ;6
(1)  777/    CB20 :                             ;STZ emu_ptr+1,X                ;4
(1)  777/    CB20 :                             ;ASL                                    ;2
(1)  777/    CB20 :                             ;ROL emu_ptr+1,X                ;6
(1)  777/    CB20 :                             ;ASL                                    ;2
(1)  777/    CB20 :                             ;ROL emu_ptr+1,X                ;6
(1)  777/    CB20 :                             ;STA emu_ptr,X                  ;4                              
(1)  777/    CB20 :                             ;LDA emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 231 - 1/5/2022 12:19:0


(1)  777/    CB20 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  777/    CB20 :                             ;STA emu_ptr+1,X                ;4
(1)  777/    CB20 :                             ;JMP (emu_ptr2,X)               ;6
(1)  777/    CB20 :                             
(1)  777/    CB20 :                             ;Method 3 - 30 cycles
(1)  777/    CB20 :                             ;TXA                                                    ;2
(1)  777/    CB20 :                             ;TAY                                                    ;2
(1)  777/    CB20 :                             ;LDA (emu_PC,X)                                 ;6
(1)  777/    CB20 :                             ;ASL                                                    ;2
(1)  777/    CB20 :                             ;BCS upper                                              ;2
(1)  777/    CB20 :                             ;lower:
(1)  777/    CB20 :                             ;       ASL                                                     ;2
(1)  777/    CB20 :                             ;       TAX                                                     ;2
(1)  777/    CB20 :                             ;       BCS upper_lower                         ;2
(1)  777/    CB20 :                             ;       lower_lower:
(1)  777/    CB20 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  777/    CB20 :                             ;       upper_lower:
(1)  777/    CB20 :                             ;               JMP (JUMP_TABLE2,X)
(1)  777/    CB20 :                             ;upper:
(1)  777/    CB20 :                             ;       ASL
(1)  777/    CB20 :                             ;       TAX
(1)  777/    CB20 :                             ;       BCS upper_upper
(1)  777/    CB20 :                             ;       lower_upper:
(1)  777/    CB20 :                             ;               JMP (JUMP_TABLE3,X)
(1)  777/    CB20 :                             ;       upper_upper:
(1)  777/    CB20 :                             ;               JMP (JUMP_TABLE4,X)
(1)  777/    CB20 :                             ;After jump:
(1)  777/    CB20 :                             ;TYA                                                    ;2
(1)  777/    CB20 :                             ;TAX                                                    ;2
(1)  777/    CB20 :                             
(1)  777/    CB20 :                             ;Method 4 - 28 cycles
(1)  777/    CB20 :                             ;LDA (emu_PC,X)                 ;6
(1)  777/    CB20 :                             ;TAY                                    ;2
(1)  777/    CB20 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  777/    CB20 :                             ;PHA                                    ;3
(1)  777/    CB20 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  777/    CB20 :                             ;PHA                                    ;3
(1)  777/    CB20 :                             ;RTS                                    ;6
(1)  777/    CB20 :                             
(1)  777/    CB20 :                             ;Method 5 - 30 cycles
(1)  777/    CB20 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  777/    CB22 : A8                          TAY                                             ;2
(1)  777/    CB23 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  777/    CB26 : 95 0A                       STA emu_ptr,X                   ;4
(1)  777/    CB28 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  777/    CB2B : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  777/    CB2D : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  777/    CB30 :                                                     
(1)  778/    CB30 :                     
(1)  779/    CB30 :                     	;0x9B - NOP
(1)  780/    CB30 :                     	NOP_0x9B:
(1)  781/    CB30 : (MACRO)             		OP_MACRO 155, "NOP", "IMP", "NOP_0x9B"
(1)  781/    CB30 :                             ;TODO
(1)  782/    CB30 : (MACRO)             		NEXT_MACRO
(1)  782/    CB30 :                                             
(1)  782/    CB30 :  (MACRO-2)                  halt
(1)  782/    CB30 : 00                          BRK
(1)  782/    CB31 : 00                          BRK
(1)  782/    CB32 :                             
(1)  782/    CB32 :                             ;Method 1 - 60 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 232 - 1/5/2022 12:19:0


(1)  782/    CB32 :                             ;Jump table must be page aligned!!!
(1)  782/    CB32 :                             ;LDA (emu_PC,X)                 ;6
(1)  782/    CB32 :                             ;ASL                                    ;2
(1)  782/    CB32 :                             ;STA emu_ptr,X                  ;4
(1)  782/    CB32 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  782/    CB32 :                             ;ADC #0                                 ;2
(1)  782/    CB32 :                             ;STA emu_ptr+1,X                ;4
(1)  782/    CB32 :                             ;LDA (emu_ptr,X)                ;6
(1)  782/    CB32 :                             ;STA emu_ptr2,X                 ;4
(1)  782/    CB32 :                             ;INC emu_ptr,X                  ;6
(1)  782/    CB32 :                             ;BCC .skip                              ;2
(1)  782/    CB32 :                             ;       INC emu_ptr+1,X         ;6
(1)  782/    CB32 :                             ;.skip:
(1)  782/    CB32 :                             ;LDA (emu_ptr,X)                ;6
(1)  782/    CB32 :                             ;STA emu_ptr2+1,X               ;4
(1)  782/    CB32 :                             ;JMP (emu_ptr2,X)               ;6
(1)  782/    CB32 :                             
(1)  782/    CB32 :                             ;Method 2 - 46 cycles
(1)  782/    CB32 :                             ;Jump table must be page aligned!!!
(1)  782/    CB32 :                             ;LDA (emu_PC,X)                 ;6
(1)  782/    CB32 :                             ;STZ emu_ptr+1,X                ;4
(1)  782/    CB32 :                             ;ASL                                    ;2
(1)  782/    CB32 :                             ;ROL emu_ptr+1,X                ;6
(1)  782/    CB32 :                             ;ASL                                    ;2
(1)  782/    CB32 :                             ;ROL emu_ptr+1,X                ;6
(1)  782/    CB32 :                             ;STA emu_ptr,X                  ;4                              
(1)  782/    CB32 :                             ;LDA emu_ptr+1,X                ;4
(1)  782/    CB32 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  782/    CB32 :                             ;STA emu_ptr+1,X                ;4
(1)  782/    CB32 :                             ;JMP (emu_ptr2,X)               ;6
(1)  782/    CB32 :                             
(1)  782/    CB32 :                             ;Method 3 - 30 cycles
(1)  782/    CB32 :                             ;TXA                                                    ;2
(1)  782/    CB32 :                             ;TAY                                                    ;2
(1)  782/    CB32 :                             ;LDA (emu_PC,X)                                 ;6
(1)  782/    CB32 :                             ;ASL                                                    ;2
(1)  782/    CB32 :                             ;BCS upper                                              ;2
(1)  782/    CB32 :                             ;lower:
(1)  782/    CB32 :                             ;       ASL                                                     ;2
(1)  782/    CB32 :                             ;       TAX                                                     ;2
(1)  782/    CB32 :                             ;       BCS upper_lower                         ;2
(1)  782/    CB32 :                             ;       lower_lower:
(1)  782/    CB32 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  782/    CB32 :                             ;       upper_lower:
(1)  782/    CB32 :                             ;               JMP (JUMP_TABLE2,X)
(1)  782/    CB32 :                             ;upper:
(1)  782/    CB32 :                             ;       ASL
(1)  782/    CB32 :                             ;       TAX
(1)  782/    CB32 :                             ;       BCS upper_upper
(1)  782/    CB32 :                             ;       lower_upper:
(1)  782/    CB32 :                             ;               JMP (JUMP_TABLE3,X)
(1)  782/    CB32 :                             ;       upper_upper:
(1)  782/    CB32 :                             ;               JMP (JUMP_TABLE4,X)
(1)  782/    CB32 :                             ;After jump:
(1)  782/    CB32 :                             ;TYA                                                    ;2
(1)  782/    CB32 :                             ;TAX                                                    ;2
(1)  782/    CB32 :                             
(1)  782/    CB32 :                             ;Method 4 - 28 cycles
(1)  782/    CB32 :                             ;LDA (emu_PC,X)                 ;6
(1)  782/    CB32 :                             ;TAY                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 233 - 1/5/2022 12:19:0


(1)  782/    CB32 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  782/    CB32 :                             ;PHA                                    ;3
(1)  782/    CB32 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  782/    CB32 :                             ;PHA                                    ;3
(1)  782/    CB32 :                             ;RTS                                    ;6
(1)  782/    CB32 :                             
(1)  782/    CB32 :                             ;Method 5 - 30 cycles
(1)  782/    CB32 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  782/    CB34 : A8                          TAY                                             ;2
(1)  782/    CB35 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  782/    CB38 : 95 0A                       STA emu_ptr,X                   ;4
(1)  782/    CB3A : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  782/    CB3D : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  782/    CB3F : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  782/    CB42 :                                                     
(1)  783/    CB42 :                     
(1)  784/    CB42 :                     	;0x9C - NOP
(1)  785/    CB42 :                     	NOP_0x9C:
(1)  786/    CB42 : (MACRO)             		OP_MACRO 156, "NOP", "IMP", "NOP_0x9C"
(1)  786/    CB42 :                             ;TODO
(1)  787/    CB42 : (MACRO)             		NEXT_MACRO
(1)  787/    CB42 :                                             
(1)  787/    CB42 :  (MACRO-2)                  halt
(1)  787/    CB42 : 00                          BRK
(1)  787/    CB43 : 00                          BRK
(1)  787/    CB44 :                             
(1)  787/    CB44 :                             ;Method 1 - 60 cycles
(1)  787/    CB44 :                             ;Jump table must be page aligned!!!
(1)  787/    CB44 :                             ;LDA (emu_PC,X)                 ;6
(1)  787/    CB44 :                             ;ASL                                    ;2
(1)  787/    CB44 :                             ;STA emu_ptr,X                  ;4
(1)  787/    CB44 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  787/    CB44 :                             ;ADC #0                                 ;2
(1)  787/    CB44 :                             ;STA emu_ptr+1,X                ;4
(1)  787/    CB44 :                             ;LDA (emu_ptr,X)                ;6
(1)  787/    CB44 :                             ;STA emu_ptr2,X                 ;4
(1)  787/    CB44 :                             ;INC emu_ptr,X                  ;6
(1)  787/    CB44 :                             ;BCC .skip                              ;2
(1)  787/    CB44 :                             ;       INC emu_ptr+1,X         ;6
(1)  787/    CB44 :                             ;.skip:
(1)  787/    CB44 :                             ;LDA (emu_ptr,X)                ;6
(1)  787/    CB44 :                             ;STA emu_ptr2+1,X               ;4
(1)  787/    CB44 :                             ;JMP (emu_ptr2,X)               ;6
(1)  787/    CB44 :                             
(1)  787/    CB44 :                             ;Method 2 - 46 cycles
(1)  787/    CB44 :                             ;Jump table must be page aligned!!!
(1)  787/    CB44 :                             ;LDA (emu_PC,X)                 ;6
(1)  787/    CB44 :                             ;STZ emu_ptr+1,X                ;4
(1)  787/    CB44 :                             ;ASL                                    ;2
(1)  787/    CB44 :                             ;ROL emu_ptr+1,X                ;6
(1)  787/    CB44 :                             ;ASL                                    ;2
(1)  787/    CB44 :                             ;ROL emu_ptr+1,X                ;6
(1)  787/    CB44 :                             ;STA emu_ptr,X                  ;4                              
(1)  787/    CB44 :                             ;LDA emu_ptr+1,X                ;4
(1)  787/    CB44 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  787/    CB44 :                             ;STA emu_ptr+1,X                ;4
(1)  787/    CB44 :                             ;JMP (emu_ptr2,X)               ;6
(1)  787/    CB44 :                             
(1)  787/    CB44 :                             ;Method 3 - 30 cycles
(1)  787/    CB44 :                             ;TXA                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 234 - 1/5/2022 12:19:0


(1)  787/    CB44 :                             ;TAY                                                    ;2
(1)  787/    CB44 :                             ;LDA (emu_PC,X)                                 ;6
(1)  787/    CB44 :                             ;ASL                                                    ;2
(1)  787/    CB44 :                             ;BCS upper                                              ;2
(1)  787/    CB44 :                             ;lower:
(1)  787/    CB44 :                             ;       ASL                                                     ;2
(1)  787/    CB44 :                             ;       TAX                                                     ;2
(1)  787/    CB44 :                             ;       BCS upper_lower                         ;2
(1)  787/    CB44 :                             ;       lower_lower:
(1)  787/    CB44 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  787/    CB44 :                             ;       upper_lower:
(1)  787/    CB44 :                             ;               JMP (JUMP_TABLE2,X)
(1)  787/    CB44 :                             ;upper:
(1)  787/    CB44 :                             ;       ASL
(1)  787/    CB44 :                             ;       TAX
(1)  787/    CB44 :                             ;       BCS upper_upper
(1)  787/    CB44 :                             ;       lower_upper:
(1)  787/    CB44 :                             ;               JMP (JUMP_TABLE3,X)
(1)  787/    CB44 :                             ;       upper_upper:
(1)  787/    CB44 :                             ;               JMP (JUMP_TABLE4,X)
(1)  787/    CB44 :                             ;After jump:
(1)  787/    CB44 :                             ;TYA                                                    ;2
(1)  787/    CB44 :                             ;TAX                                                    ;2
(1)  787/    CB44 :                             
(1)  787/    CB44 :                             ;Method 4 - 28 cycles
(1)  787/    CB44 :                             ;LDA (emu_PC,X)                 ;6
(1)  787/    CB44 :                             ;TAY                                    ;2
(1)  787/    CB44 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  787/    CB44 :                             ;PHA                                    ;3
(1)  787/    CB44 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  787/    CB44 :                             ;PHA                                    ;3
(1)  787/    CB44 :                             ;RTS                                    ;6
(1)  787/    CB44 :                             
(1)  787/    CB44 :                             ;Method 5 - 30 cycles
(1)  787/    CB44 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  787/    CB46 : A8                          TAY                                             ;2
(1)  787/    CB47 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  787/    CB4A : 95 0A                       STA emu_ptr,X                   ;4
(1)  787/    CB4C : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  787/    CB4F : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  787/    CB51 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  787/    CB54 :                                                     
(1)  788/    CB54 :                     
(1)  789/    CB54 :                     	;0x9D - STA ABSX
(1)  790/    CB54 :                     	STA_ABSX:
(1)  791/    CB54 : (MACRO)             		OP_MACRO 157, "STA", "ABSX", "STA_ABSX"
(1)  791/    CB54 :                             ;TODO
(1)  792/    CB54 : (MACRO)             		NEXT_MACRO
(1)  792/    CB54 :                                             
(1)  792/    CB54 :  (MACRO-2)                  halt
(1)  792/    CB54 : 00                          BRK
(1)  792/    CB55 : 00                          BRK
(1)  792/    CB56 :                             
(1)  792/    CB56 :                             ;Method 1 - 60 cycles
(1)  792/    CB56 :                             ;Jump table must be page aligned!!!
(1)  792/    CB56 :                             ;LDA (emu_PC,X)                 ;6
(1)  792/    CB56 :                             ;ASL                                    ;2
(1)  792/    CB56 :                             ;STA emu_ptr,X                  ;4
(1)  792/    CB56 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  792/    CB56 :                             ;ADC #0                                 ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 235 - 1/5/2022 12:19:0


(1)  792/    CB56 :                             ;STA emu_ptr+1,X                ;4
(1)  792/    CB56 :                             ;LDA (emu_ptr,X)                ;6
(1)  792/    CB56 :                             ;STA emu_ptr2,X                 ;4
(1)  792/    CB56 :                             ;INC emu_ptr,X                  ;6
(1)  792/    CB56 :                             ;BCC .skip                              ;2
(1)  792/    CB56 :                             ;       INC emu_ptr+1,X         ;6
(1)  792/    CB56 :                             ;.skip:
(1)  792/    CB56 :                             ;LDA (emu_ptr,X)                ;6
(1)  792/    CB56 :                             ;STA emu_ptr2+1,X               ;4
(1)  792/    CB56 :                             ;JMP (emu_ptr2,X)               ;6
(1)  792/    CB56 :                             
(1)  792/    CB56 :                             ;Method 2 - 46 cycles
(1)  792/    CB56 :                             ;Jump table must be page aligned!!!
(1)  792/    CB56 :                             ;LDA (emu_PC,X)                 ;6
(1)  792/    CB56 :                             ;STZ emu_ptr+1,X                ;4
(1)  792/    CB56 :                             ;ASL                                    ;2
(1)  792/    CB56 :                             ;ROL emu_ptr+1,X                ;6
(1)  792/    CB56 :                             ;ASL                                    ;2
(1)  792/    CB56 :                             ;ROL emu_ptr+1,X                ;6
(1)  792/    CB56 :                             ;STA emu_ptr,X                  ;4                              
(1)  792/    CB56 :                             ;LDA emu_ptr+1,X                ;4
(1)  792/    CB56 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  792/    CB56 :                             ;STA emu_ptr+1,X                ;4
(1)  792/    CB56 :                             ;JMP (emu_ptr2,X)               ;6
(1)  792/    CB56 :                             
(1)  792/    CB56 :                             ;Method 3 - 30 cycles
(1)  792/    CB56 :                             ;TXA                                                    ;2
(1)  792/    CB56 :                             ;TAY                                                    ;2
(1)  792/    CB56 :                             ;LDA (emu_PC,X)                                 ;6
(1)  792/    CB56 :                             ;ASL                                                    ;2
(1)  792/    CB56 :                             ;BCS upper                                              ;2
(1)  792/    CB56 :                             ;lower:
(1)  792/    CB56 :                             ;       ASL                                                     ;2
(1)  792/    CB56 :                             ;       TAX                                                     ;2
(1)  792/    CB56 :                             ;       BCS upper_lower                         ;2
(1)  792/    CB56 :                             ;       lower_lower:
(1)  792/    CB56 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  792/    CB56 :                             ;       upper_lower:
(1)  792/    CB56 :                             ;               JMP (JUMP_TABLE2,X)
(1)  792/    CB56 :                             ;upper:
(1)  792/    CB56 :                             ;       ASL
(1)  792/    CB56 :                             ;       TAX
(1)  792/    CB56 :                             ;       BCS upper_upper
(1)  792/    CB56 :                             ;       lower_upper:
(1)  792/    CB56 :                             ;               JMP (JUMP_TABLE3,X)
(1)  792/    CB56 :                             ;       upper_upper:
(1)  792/    CB56 :                             ;               JMP (JUMP_TABLE4,X)
(1)  792/    CB56 :                             ;After jump:
(1)  792/    CB56 :                             ;TYA                                                    ;2
(1)  792/    CB56 :                             ;TAX                                                    ;2
(1)  792/    CB56 :                             
(1)  792/    CB56 :                             ;Method 4 - 28 cycles
(1)  792/    CB56 :                             ;LDA (emu_PC,X)                 ;6
(1)  792/    CB56 :                             ;TAY                                    ;2
(1)  792/    CB56 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  792/    CB56 :                             ;PHA                                    ;3
(1)  792/    CB56 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  792/    CB56 :                             ;PHA                                    ;3
(1)  792/    CB56 :                             ;RTS                                    ;6
(1)  792/    CB56 :                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 236 - 1/5/2022 12:19:0


(1)  792/    CB56 :                             ;Method 5 - 30 cycles
(1)  792/    CB56 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  792/    CB58 : A8                          TAY                                             ;2
(1)  792/    CB59 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  792/    CB5C : 95 0A                       STA emu_ptr,X                   ;4
(1)  792/    CB5E : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  792/    CB61 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  792/    CB63 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  792/    CB66 :                                                     
(1)  793/    CB66 :                     
(1)  794/    CB66 :                     	;0x9E - NOP
(1)  795/    CB66 :                     	NOP_0x9E:
(1)  796/    CB66 : (MACRO)             		OP_MACRO 158, "NOP", "IMP", "NOP_0x9E"
(1)  796/    CB66 :                             ;TODO
(1)  797/    CB66 : (MACRO)             		NEXT_MACRO
(1)  797/    CB66 :                                             
(1)  797/    CB66 :  (MACRO-2)                  halt
(1)  797/    CB66 : 00                          BRK
(1)  797/    CB67 : 00                          BRK
(1)  797/    CB68 :                             
(1)  797/    CB68 :                             ;Method 1 - 60 cycles
(1)  797/    CB68 :                             ;Jump table must be page aligned!!!
(1)  797/    CB68 :                             ;LDA (emu_PC,X)                 ;6
(1)  797/    CB68 :                             ;ASL                                    ;2
(1)  797/    CB68 :                             ;STA emu_ptr,X                  ;4
(1)  797/    CB68 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  797/    CB68 :                             ;ADC #0                                 ;2
(1)  797/    CB68 :                             ;STA emu_ptr+1,X                ;4
(1)  797/    CB68 :                             ;LDA (emu_ptr,X)                ;6
(1)  797/    CB68 :                             ;STA emu_ptr2,X                 ;4
(1)  797/    CB68 :                             ;INC emu_ptr,X                  ;6
(1)  797/    CB68 :                             ;BCC .skip                              ;2
(1)  797/    CB68 :                             ;       INC emu_ptr+1,X         ;6
(1)  797/    CB68 :                             ;.skip:
(1)  797/    CB68 :                             ;LDA (emu_ptr,X)                ;6
(1)  797/    CB68 :                             ;STA emu_ptr2+1,X               ;4
(1)  797/    CB68 :                             ;JMP (emu_ptr2,X)               ;6
(1)  797/    CB68 :                             
(1)  797/    CB68 :                             ;Method 2 - 46 cycles
(1)  797/    CB68 :                             ;Jump table must be page aligned!!!
(1)  797/    CB68 :                             ;LDA (emu_PC,X)                 ;6
(1)  797/    CB68 :                             ;STZ emu_ptr+1,X                ;4
(1)  797/    CB68 :                             ;ASL                                    ;2
(1)  797/    CB68 :                             ;ROL emu_ptr+1,X                ;6
(1)  797/    CB68 :                             ;ASL                                    ;2
(1)  797/    CB68 :                             ;ROL emu_ptr+1,X                ;6
(1)  797/    CB68 :                             ;STA emu_ptr,X                  ;4                              
(1)  797/    CB68 :                             ;LDA emu_ptr+1,X                ;4
(1)  797/    CB68 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  797/    CB68 :                             ;STA emu_ptr+1,X                ;4
(1)  797/    CB68 :                             ;JMP (emu_ptr2,X)               ;6
(1)  797/    CB68 :                             
(1)  797/    CB68 :                             ;Method 3 - 30 cycles
(1)  797/    CB68 :                             ;TXA                                                    ;2
(1)  797/    CB68 :                             ;TAY                                                    ;2
(1)  797/    CB68 :                             ;LDA (emu_PC,X)                                 ;6
(1)  797/    CB68 :                             ;ASL                                                    ;2
(1)  797/    CB68 :                             ;BCS upper                                              ;2
(1)  797/    CB68 :                             ;lower:
(1)  797/    CB68 :                             ;       ASL                                                     ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 237 - 1/5/2022 12:19:0


(1)  797/    CB68 :                             ;       TAX                                                     ;2
(1)  797/    CB68 :                             ;       BCS upper_lower                         ;2
(1)  797/    CB68 :                             ;       lower_lower:
(1)  797/    CB68 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  797/    CB68 :                             ;       upper_lower:
(1)  797/    CB68 :                             ;               JMP (JUMP_TABLE2,X)
(1)  797/    CB68 :                             ;upper:
(1)  797/    CB68 :                             ;       ASL
(1)  797/    CB68 :                             ;       TAX
(1)  797/    CB68 :                             ;       BCS upper_upper
(1)  797/    CB68 :                             ;       lower_upper:
(1)  797/    CB68 :                             ;               JMP (JUMP_TABLE3,X)
(1)  797/    CB68 :                             ;       upper_upper:
(1)  797/    CB68 :                             ;               JMP (JUMP_TABLE4,X)
(1)  797/    CB68 :                             ;After jump:
(1)  797/    CB68 :                             ;TYA                                                    ;2
(1)  797/    CB68 :                             ;TAX                                                    ;2
(1)  797/    CB68 :                             
(1)  797/    CB68 :                             ;Method 4 - 28 cycles
(1)  797/    CB68 :                             ;LDA (emu_PC,X)                 ;6
(1)  797/    CB68 :                             ;TAY                                    ;2
(1)  797/    CB68 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  797/    CB68 :                             ;PHA                                    ;3
(1)  797/    CB68 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  797/    CB68 :                             ;PHA                                    ;3
(1)  797/    CB68 :                             ;RTS                                    ;6
(1)  797/    CB68 :                             
(1)  797/    CB68 :                             ;Method 5 - 30 cycles
(1)  797/    CB68 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  797/    CB6A : A8                          TAY                                             ;2
(1)  797/    CB6B : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  797/    CB6E : 95 0A                       STA emu_ptr,X                   ;4
(1)  797/    CB70 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  797/    CB73 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  797/    CB75 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  797/    CB78 :                                                     
(1)  798/    CB78 :                     
(1)  799/    CB78 :                     	;0x9F - NOP
(1)  800/    CB78 :                     	NOP_0x9F:
(1)  801/    CB78 : (MACRO)             		OP_MACRO 159, "NOP", "IMP", "NOP_0x9F"
(1)  801/    CB78 :                             ;TODO
(1)  802/    CB78 : (MACRO)             		NEXT_MACRO
(1)  802/    CB78 :                                             
(1)  802/    CB78 :  (MACRO-2)                  halt
(1)  802/    CB78 : 00                          BRK
(1)  802/    CB79 : 00                          BRK
(1)  802/    CB7A :                             
(1)  802/    CB7A :                             ;Method 1 - 60 cycles
(1)  802/    CB7A :                             ;Jump table must be page aligned!!!
(1)  802/    CB7A :                             ;LDA (emu_PC,X)                 ;6
(1)  802/    CB7A :                             ;ASL                                    ;2
(1)  802/    CB7A :                             ;STA emu_ptr,X                  ;4
(1)  802/    CB7A :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  802/    CB7A :                             ;ADC #0                                 ;2
(1)  802/    CB7A :                             ;STA emu_ptr+1,X                ;4
(1)  802/    CB7A :                             ;LDA (emu_ptr,X)                ;6
(1)  802/    CB7A :                             ;STA emu_ptr2,X                 ;4
(1)  802/    CB7A :                             ;INC emu_ptr,X                  ;6
(1)  802/    CB7A :                             ;BCC .skip                              ;2
(1)  802/    CB7A :                             ;       INC emu_ptr+1,X         ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 238 - 1/5/2022 12:19:0


(1)  802/    CB7A :                             ;.skip:
(1)  802/    CB7A :                             ;LDA (emu_ptr,X)                ;6
(1)  802/    CB7A :                             ;STA emu_ptr2+1,X               ;4
(1)  802/    CB7A :                             ;JMP (emu_ptr2,X)               ;6
(1)  802/    CB7A :                             
(1)  802/    CB7A :                             ;Method 2 - 46 cycles
(1)  802/    CB7A :                             ;Jump table must be page aligned!!!
(1)  802/    CB7A :                             ;LDA (emu_PC,X)                 ;6
(1)  802/    CB7A :                             ;STZ emu_ptr+1,X                ;4
(1)  802/    CB7A :                             ;ASL                                    ;2
(1)  802/    CB7A :                             ;ROL emu_ptr+1,X                ;6
(1)  802/    CB7A :                             ;ASL                                    ;2
(1)  802/    CB7A :                             ;ROL emu_ptr+1,X                ;6
(1)  802/    CB7A :                             ;STA emu_ptr,X                  ;4                              
(1)  802/    CB7A :                             ;LDA emu_ptr+1,X                ;4
(1)  802/    CB7A :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  802/    CB7A :                             ;STA emu_ptr+1,X                ;4
(1)  802/    CB7A :                             ;JMP (emu_ptr2,X)               ;6
(1)  802/    CB7A :                             
(1)  802/    CB7A :                             ;Method 3 - 30 cycles
(1)  802/    CB7A :                             ;TXA                                                    ;2
(1)  802/    CB7A :                             ;TAY                                                    ;2
(1)  802/    CB7A :                             ;LDA (emu_PC,X)                                 ;6
(1)  802/    CB7A :                             ;ASL                                                    ;2
(1)  802/    CB7A :                             ;BCS upper                                              ;2
(1)  802/    CB7A :                             ;lower:
(1)  802/    CB7A :                             ;       ASL                                                     ;2
(1)  802/    CB7A :                             ;       TAX                                                     ;2
(1)  802/    CB7A :                             ;       BCS upper_lower                         ;2
(1)  802/    CB7A :                             ;       lower_lower:
(1)  802/    CB7A :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  802/    CB7A :                             ;       upper_lower:
(1)  802/    CB7A :                             ;               JMP (JUMP_TABLE2,X)
(1)  802/    CB7A :                             ;upper:
(1)  802/    CB7A :                             ;       ASL
(1)  802/    CB7A :                             ;       TAX
(1)  802/    CB7A :                             ;       BCS upper_upper
(1)  802/    CB7A :                             ;       lower_upper:
(1)  802/    CB7A :                             ;               JMP (JUMP_TABLE3,X)
(1)  802/    CB7A :                             ;       upper_upper:
(1)  802/    CB7A :                             ;               JMP (JUMP_TABLE4,X)
(1)  802/    CB7A :                             ;After jump:
(1)  802/    CB7A :                             ;TYA                                                    ;2
(1)  802/    CB7A :                             ;TAX                                                    ;2
(1)  802/    CB7A :                             
(1)  802/    CB7A :                             ;Method 4 - 28 cycles
(1)  802/    CB7A :                             ;LDA (emu_PC,X)                 ;6
(1)  802/    CB7A :                             ;TAY                                    ;2
(1)  802/    CB7A :                             ;LDA JUMP_TABLE,Y               ;4
(1)  802/    CB7A :                             ;PHA                                    ;3
(1)  802/    CB7A :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  802/    CB7A :                             ;PHA                                    ;3
(1)  802/    CB7A :                             ;RTS                                    ;6
(1)  802/    CB7A :                             
(1)  802/    CB7A :                             ;Method 5 - 30 cycles
(1)  802/    CB7A : A1 02                       LDA (emu_PC,X)                  ;6
(1)  802/    CB7C : A8                          TAY                                             ;2
(1)  802/    CB7D : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  802/    CB80 : 95 0A                       STA emu_ptr,X                   ;4
(1)  802/    CB82 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 239 - 1/5/2022 12:19:0


(1)  802/    CB85 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  802/    CB87 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  802/    CB8A :                                                     
(1)  803/    CB8A :                     
(1)  804/    CB8A :                     	;0xA0 - LDY IMMED
(1)  805/    CB8A :                     	LDY_IMMED:
(1)  806/    CB8A : (MACRO)             		OP_MACRO 160, "LDY", "IMMED", "LDY_IMMED"
(1)  806/    CB8A :                             ;TODO
(1)  807/    CB8A : (MACRO)             		NEXT_MACRO
(1)  807/    CB8A :                                             
(1)  807/    CB8A :  (MACRO-2)                  halt
(1)  807/    CB8A : 00                          BRK
(1)  807/    CB8B : 00                          BRK
(1)  807/    CB8C :                             
(1)  807/    CB8C :                             ;Method 1 - 60 cycles
(1)  807/    CB8C :                             ;Jump table must be page aligned!!!
(1)  807/    CB8C :                             ;LDA (emu_PC,X)                 ;6
(1)  807/    CB8C :                             ;ASL                                    ;2
(1)  807/    CB8C :                             ;STA emu_ptr,X                  ;4
(1)  807/    CB8C :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  807/    CB8C :                             ;ADC #0                                 ;2
(1)  807/    CB8C :                             ;STA emu_ptr+1,X                ;4
(1)  807/    CB8C :                             ;LDA (emu_ptr,X)                ;6
(1)  807/    CB8C :                             ;STA emu_ptr2,X                 ;4
(1)  807/    CB8C :                             ;INC emu_ptr,X                  ;6
(1)  807/    CB8C :                             ;BCC .skip                              ;2
(1)  807/    CB8C :                             ;       INC emu_ptr+1,X         ;6
(1)  807/    CB8C :                             ;.skip:
(1)  807/    CB8C :                             ;LDA (emu_ptr,X)                ;6
(1)  807/    CB8C :                             ;STA emu_ptr2+1,X               ;4
(1)  807/    CB8C :                             ;JMP (emu_ptr2,X)               ;6
(1)  807/    CB8C :                             
(1)  807/    CB8C :                             ;Method 2 - 46 cycles
(1)  807/    CB8C :                             ;Jump table must be page aligned!!!
(1)  807/    CB8C :                             ;LDA (emu_PC,X)                 ;6
(1)  807/    CB8C :                             ;STZ emu_ptr+1,X                ;4
(1)  807/    CB8C :                             ;ASL                                    ;2
(1)  807/    CB8C :                             ;ROL emu_ptr+1,X                ;6
(1)  807/    CB8C :                             ;ASL                                    ;2
(1)  807/    CB8C :                             ;ROL emu_ptr+1,X                ;6
(1)  807/    CB8C :                             ;STA emu_ptr,X                  ;4                              
(1)  807/    CB8C :                             ;LDA emu_ptr+1,X                ;4
(1)  807/    CB8C :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  807/    CB8C :                             ;STA emu_ptr+1,X                ;4
(1)  807/    CB8C :                             ;JMP (emu_ptr2,X)               ;6
(1)  807/    CB8C :                             
(1)  807/    CB8C :                             ;Method 3 - 30 cycles
(1)  807/    CB8C :                             ;TXA                                                    ;2
(1)  807/    CB8C :                             ;TAY                                                    ;2
(1)  807/    CB8C :                             ;LDA (emu_PC,X)                                 ;6
(1)  807/    CB8C :                             ;ASL                                                    ;2
(1)  807/    CB8C :                             ;BCS upper                                              ;2
(1)  807/    CB8C :                             ;lower:
(1)  807/    CB8C :                             ;       ASL                                                     ;2
(1)  807/    CB8C :                             ;       TAX                                                     ;2
(1)  807/    CB8C :                             ;       BCS upper_lower                         ;2
(1)  807/    CB8C :                             ;       lower_lower:
(1)  807/    CB8C :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  807/    CB8C :                             ;       upper_lower:
(1)  807/    CB8C :                             ;               JMP (JUMP_TABLE2,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 240 - 1/5/2022 12:19:0


(1)  807/    CB8C :                             ;upper:
(1)  807/    CB8C :                             ;       ASL
(1)  807/    CB8C :                             ;       TAX
(1)  807/    CB8C :                             ;       BCS upper_upper
(1)  807/    CB8C :                             ;       lower_upper:
(1)  807/    CB8C :                             ;               JMP (JUMP_TABLE3,X)
(1)  807/    CB8C :                             ;       upper_upper:
(1)  807/    CB8C :                             ;               JMP (JUMP_TABLE4,X)
(1)  807/    CB8C :                             ;After jump:
(1)  807/    CB8C :                             ;TYA                                                    ;2
(1)  807/    CB8C :                             ;TAX                                                    ;2
(1)  807/    CB8C :                             
(1)  807/    CB8C :                             ;Method 4 - 28 cycles
(1)  807/    CB8C :                             ;LDA (emu_PC,X)                 ;6
(1)  807/    CB8C :                             ;TAY                                    ;2
(1)  807/    CB8C :                             ;LDA JUMP_TABLE,Y               ;4
(1)  807/    CB8C :                             ;PHA                                    ;3
(1)  807/    CB8C :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  807/    CB8C :                             ;PHA                                    ;3
(1)  807/    CB8C :                             ;RTS                                    ;6
(1)  807/    CB8C :                             
(1)  807/    CB8C :                             ;Method 5 - 30 cycles
(1)  807/    CB8C : A1 02                       LDA (emu_PC,X)                  ;6
(1)  807/    CB8E : A8                          TAY                                             ;2
(1)  807/    CB8F : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  807/    CB92 : 95 0A                       STA emu_ptr,X                   ;4
(1)  807/    CB94 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  807/    CB97 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  807/    CB99 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  807/    CB9C :                                                     
(1)  808/    CB9C :                     
(1)  809/    CB9C :                     	;0xA1 - LDA IX
(1)  810/    CB9C :                     	LDA_IX:
(1)  811/    CB9C : (MACRO)             		OP_MACRO 161, "LDA", "IX", "LDA_IX"
(1)  811/    CB9C :                             ;TODO
(1)  812/    CB9C : (MACRO)             		NEXT_MACRO
(1)  812/    CB9C :                                             
(1)  812/    CB9C :  (MACRO-2)                  halt
(1)  812/    CB9C : 00                          BRK
(1)  812/    CB9D : 00                          BRK
(1)  812/    CB9E :                             
(1)  812/    CB9E :                             ;Method 1 - 60 cycles
(1)  812/    CB9E :                             ;Jump table must be page aligned!!!
(1)  812/    CB9E :                             ;LDA (emu_PC,X)                 ;6
(1)  812/    CB9E :                             ;ASL                                    ;2
(1)  812/    CB9E :                             ;STA emu_ptr,X                  ;4
(1)  812/    CB9E :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  812/    CB9E :                             ;ADC #0                                 ;2
(1)  812/    CB9E :                             ;STA emu_ptr+1,X                ;4
(1)  812/    CB9E :                             ;LDA (emu_ptr,X)                ;6
(1)  812/    CB9E :                             ;STA emu_ptr2,X                 ;4
(1)  812/    CB9E :                             ;INC emu_ptr,X                  ;6
(1)  812/    CB9E :                             ;BCC .skip                              ;2
(1)  812/    CB9E :                             ;       INC emu_ptr+1,X         ;6
(1)  812/    CB9E :                             ;.skip:
(1)  812/    CB9E :                             ;LDA (emu_ptr,X)                ;6
(1)  812/    CB9E :                             ;STA emu_ptr2+1,X               ;4
(1)  812/    CB9E :                             ;JMP (emu_ptr2,X)               ;6
(1)  812/    CB9E :                             
(1)  812/    CB9E :                             ;Method 2 - 46 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 241 - 1/5/2022 12:19:0


(1)  812/    CB9E :                             ;Jump table must be page aligned!!!
(1)  812/    CB9E :                             ;LDA (emu_PC,X)                 ;6
(1)  812/    CB9E :                             ;STZ emu_ptr+1,X                ;4
(1)  812/    CB9E :                             ;ASL                                    ;2
(1)  812/    CB9E :                             ;ROL emu_ptr+1,X                ;6
(1)  812/    CB9E :                             ;ASL                                    ;2
(1)  812/    CB9E :                             ;ROL emu_ptr+1,X                ;6
(1)  812/    CB9E :                             ;STA emu_ptr,X                  ;4                              
(1)  812/    CB9E :                             ;LDA emu_ptr+1,X                ;4
(1)  812/    CB9E :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  812/    CB9E :                             ;STA emu_ptr+1,X                ;4
(1)  812/    CB9E :                             ;JMP (emu_ptr2,X)               ;6
(1)  812/    CB9E :                             
(1)  812/    CB9E :                             ;Method 3 - 30 cycles
(1)  812/    CB9E :                             ;TXA                                                    ;2
(1)  812/    CB9E :                             ;TAY                                                    ;2
(1)  812/    CB9E :                             ;LDA (emu_PC,X)                                 ;6
(1)  812/    CB9E :                             ;ASL                                                    ;2
(1)  812/    CB9E :                             ;BCS upper                                              ;2
(1)  812/    CB9E :                             ;lower:
(1)  812/    CB9E :                             ;       ASL                                                     ;2
(1)  812/    CB9E :                             ;       TAX                                                     ;2
(1)  812/    CB9E :                             ;       BCS upper_lower                         ;2
(1)  812/    CB9E :                             ;       lower_lower:
(1)  812/    CB9E :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  812/    CB9E :                             ;       upper_lower:
(1)  812/    CB9E :                             ;               JMP (JUMP_TABLE2,X)
(1)  812/    CB9E :                             ;upper:
(1)  812/    CB9E :                             ;       ASL
(1)  812/    CB9E :                             ;       TAX
(1)  812/    CB9E :                             ;       BCS upper_upper
(1)  812/    CB9E :                             ;       lower_upper:
(1)  812/    CB9E :                             ;               JMP (JUMP_TABLE3,X)
(1)  812/    CB9E :                             ;       upper_upper:
(1)  812/    CB9E :                             ;               JMP (JUMP_TABLE4,X)
(1)  812/    CB9E :                             ;After jump:
(1)  812/    CB9E :                             ;TYA                                                    ;2
(1)  812/    CB9E :                             ;TAX                                                    ;2
(1)  812/    CB9E :                             
(1)  812/    CB9E :                             ;Method 4 - 28 cycles
(1)  812/    CB9E :                             ;LDA (emu_PC,X)                 ;6
(1)  812/    CB9E :                             ;TAY                                    ;2
(1)  812/    CB9E :                             ;LDA JUMP_TABLE,Y               ;4
(1)  812/    CB9E :                             ;PHA                                    ;3
(1)  812/    CB9E :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  812/    CB9E :                             ;PHA                                    ;3
(1)  812/    CB9E :                             ;RTS                                    ;6
(1)  812/    CB9E :                             
(1)  812/    CB9E :                             ;Method 5 - 30 cycles
(1)  812/    CB9E : A1 02                       LDA (emu_PC,X)                  ;6
(1)  812/    CBA0 : A8                          TAY                                             ;2
(1)  812/    CBA1 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  812/    CBA4 : 95 0A                       STA emu_ptr,X                   ;4
(1)  812/    CBA6 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  812/    CBA9 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  812/    CBAB : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  812/    CBAE :                                                     
(1)  813/    CBAE :                     
(1)  814/    CBAE :                     	;0xA2 - LDX IMMED
(1)  815/    CBAE :                     	LDX_IMMED:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 242 - 1/5/2022 12:19:0


(1)  816/    CBAE : (MACRO)             		OP_MACRO 162, "LDX", "IMMED", "LDX_IMMED"
(1)  816/    CBAE :                             ;TODO
(1)  817/    CBAE : (MACRO)             		NEXT_MACRO
(1)  817/    CBAE :                                             
(1)  817/    CBAE :  (MACRO-2)                  halt
(1)  817/    CBAE : 00                          BRK
(1)  817/    CBAF : 00                          BRK
(1)  817/    CBB0 :                             
(1)  817/    CBB0 :                             ;Method 1 - 60 cycles
(1)  817/    CBB0 :                             ;Jump table must be page aligned!!!
(1)  817/    CBB0 :                             ;LDA (emu_PC,X)                 ;6
(1)  817/    CBB0 :                             ;ASL                                    ;2
(1)  817/    CBB0 :                             ;STA emu_ptr,X                  ;4
(1)  817/    CBB0 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  817/    CBB0 :                             ;ADC #0                                 ;2
(1)  817/    CBB0 :                             ;STA emu_ptr+1,X                ;4
(1)  817/    CBB0 :                             ;LDA (emu_ptr,X)                ;6
(1)  817/    CBB0 :                             ;STA emu_ptr2,X                 ;4
(1)  817/    CBB0 :                             ;INC emu_ptr,X                  ;6
(1)  817/    CBB0 :                             ;BCC .skip                              ;2
(1)  817/    CBB0 :                             ;       INC emu_ptr+1,X         ;6
(1)  817/    CBB0 :                             ;.skip:
(1)  817/    CBB0 :                             ;LDA (emu_ptr,X)                ;6
(1)  817/    CBB0 :                             ;STA emu_ptr2+1,X               ;4
(1)  817/    CBB0 :                             ;JMP (emu_ptr2,X)               ;6
(1)  817/    CBB0 :                             
(1)  817/    CBB0 :                             ;Method 2 - 46 cycles
(1)  817/    CBB0 :                             ;Jump table must be page aligned!!!
(1)  817/    CBB0 :                             ;LDA (emu_PC,X)                 ;6
(1)  817/    CBB0 :                             ;STZ emu_ptr+1,X                ;4
(1)  817/    CBB0 :                             ;ASL                                    ;2
(1)  817/    CBB0 :                             ;ROL emu_ptr+1,X                ;6
(1)  817/    CBB0 :                             ;ASL                                    ;2
(1)  817/    CBB0 :                             ;ROL emu_ptr+1,X                ;6
(1)  817/    CBB0 :                             ;STA emu_ptr,X                  ;4                              
(1)  817/    CBB0 :                             ;LDA emu_ptr+1,X                ;4
(1)  817/    CBB0 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  817/    CBB0 :                             ;STA emu_ptr+1,X                ;4
(1)  817/    CBB0 :                             ;JMP (emu_ptr2,X)               ;6
(1)  817/    CBB0 :                             
(1)  817/    CBB0 :                             ;Method 3 - 30 cycles
(1)  817/    CBB0 :                             ;TXA                                                    ;2
(1)  817/    CBB0 :                             ;TAY                                                    ;2
(1)  817/    CBB0 :                             ;LDA (emu_PC,X)                                 ;6
(1)  817/    CBB0 :                             ;ASL                                                    ;2
(1)  817/    CBB0 :                             ;BCS upper                                              ;2
(1)  817/    CBB0 :                             ;lower:
(1)  817/    CBB0 :                             ;       ASL                                                     ;2
(1)  817/    CBB0 :                             ;       TAX                                                     ;2
(1)  817/    CBB0 :                             ;       BCS upper_lower                         ;2
(1)  817/    CBB0 :                             ;       lower_lower:
(1)  817/    CBB0 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  817/    CBB0 :                             ;       upper_lower:
(1)  817/    CBB0 :                             ;               JMP (JUMP_TABLE2,X)
(1)  817/    CBB0 :                             ;upper:
(1)  817/    CBB0 :                             ;       ASL
(1)  817/    CBB0 :                             ;       TAX
(1)  817/    CBB0 :                             ;       BCS upper_upper
(1)  817/    CBB0 :                             ;       lower_upper:
(1)  817/    CBB0 :                             ;               JMP (JUMP_TABLE3,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 243 - 1/5/2022 12:19:0


(1)  817/    CBB0 :                             ;       upper_upper:
(1)  817/    CBB0 :                             ;               JMP (JUMP_TABLE4,X)
(1)  817/    CBB0 :                             ;After jump:
(1)  817/    CBB0 :                             ;TYA                                                    ;2
(1)  817/    CBB0 :                             ;TAX                                                    ;2
(1)  817/    CBB0 :                             
(1)  817/    CBB0 :                             ;Method 4 - 28 cycles
(1)  817/    CBB0 :                             ;LDA (emu_PC,X)                 ;6
(1)  817/    CBB0 :                             ;TAY                                    ;2
(1)  817/    CBB0 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  817/    CBB0 :                             ;PHA                                    ;3
(1)  817/    CBB0 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  817/    CBB0 :                             ;PHA                                    ;3
(1)  817/    CBB0 :                             ;RTS                                    ;6
(1)  817/    CBB0 :                             
(1)  817/    CBB0 :                             ;Method 5 - 30 cycles
(1)  817/    CBB0 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  817/    CBB2 : A8                          TAY                                             ;2
(1)  817/    CBB3 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  817/    CBB6 : 95 0A                       STA emu_ptr,X                   ;4
(1)  817/    CBB8 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  817/    CBBB : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  817/    CBBD : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  817/    CBC0 :                                                     
(1)  818/    CBC0 :                     
(1)  819/    CBC0 :                     	;0xA3 - NOP
(1)  820/    CBC0 :                     	NOP_0xA3:
(1)  821/    CBC0 : (MACRO)             		OP_MACRO 163, "NOP", "IMP", "NOP_0xA3"
(1)  821/    CBC0 :                             ;TODO
(1)  822/    CBC0 : (MACRO)             		NEXT_MACRO
(1)  822/    CBC0 :                                             
(1)  822/    CBC0 :  (MACRO-2)                  halt
(1)  822/    CBC0 : 00                          BRK
(1)  822/    CBC1 : 00                          BRK
(1)  822/    CBC2 :                             
(1)  822/    CBC2 :                             ;Method 1 - 60 cycles
(1)  822/    CBC2 :                             ;Jump table must be page aligned!!!
(1)  822/    CBC2 :                             ;LDA (emu_PC,X)                 ;6
(1)  822/    CBC2 :                             ;ASL                                    ;2
(1)  822/    CBC2 :                             ;STA emu_ptr,X                  ;4
(1)  822/    CBC2 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  822/    CBC2 :                             ;ADC #0                                 ;2
(1)  822/    CBC2 :                             ;STA emu_ptr+1,X                ;4
(1)  822/    CBC2 :                             ;LDA (emu_ptr,X)                ;6
(1)  822/    CBC2 :                             ;STA emu_ptr2,X                 ;4
(1)  822/    CBC2 :                             ;INC emu_ptr,X                  ;6
(1)  822/    CBC2 :                             ;BCC .skip                              ;2
(1)  822/    CBC2 :                             ;       INC emu_ptr+1,X         ;6
(1)  822/    CBC2 :                             ;.skip:
(1)  822/    CBC2 :                             ;LDA (emu_ptr,X)                ;6
(1)  822/    CBC2 :                             ;STA emu_ptr2+1,X               ;4
(1)  822/    CBC2 :                             ;JMP (emu_ptr2,X)               ;6
(1)  822/    CBC2 :                             
(1)  822/    CBC2 :                             ;Method 2 - 46 cycles
(1)  822/    CBC2 :                             ;Jump table must be page aligned!!!
(1)  822/    CBC2 :                             ;LDA (emu_PC,X)                 ;6
(1)  822/    CBC2 :                             ;STZ emu_ptr+1,X                ;4
(1)  822/    CBC2 :                             ;ASL                                    ;2
(1)  822/    CBC2 :                             ;ROL emu_ptr+1,X                ;6
(1)  822/    CBC2 :                             ;ASL                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 244 - 1/5/2022 12:19:0


(1)  822/    CBC2 :                             ;ROL emu_ptr+1,X                ;6
(1)  822/    CBC2 :                             ;STA emu_ptr,X                  ;4                              
(1)  822/    CBC2 :                             ;LDA emu_ptr+1,X                ;4
(1)  822/    CBC2 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  822/    CBC2 :                             ;STA emu_ptr+1,X                ;4
(1)  822/    CBC2 :                             ;JMP (emu_ptr2,X)               ;6
(1)  822/    CBC2 :                             
(1)  822/    CBC2 :                             ;Method 3 - 30 cycles
(1)  822/    CBC2 :                             ;TXA                                                    ;2
(1)  822/    CBC2 :                             ;TAY                                                    ;2
(1)  822/    CBC2 :                             ;LDA (emu_PC,X)                                 ;6
(1)  822/    CBC2 :                             ;ASL                                                    ;2
(1)  822/    CBC2 :                             ;BCS upper                                              ;2
(1)  822/    CBC2 :                             ;lower:
(1)  822/    CBC2 :                             ;       ASL                                                     ;2
(1)  822/    CBC2 :                             ;       TAX                                                     ;2
(1)  822/    CBC2 :                             ;       BCS upper_lower                         ;2
(1)  822/    CBC2 :                             ;       lower_lower:
(1)  822/    CBC2 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  822/    CBC2 :                             ;       upper_lower:
(1)  822/    CBC2 :                             ;               JMP (JUMP_TABLE2,X)
(1)  822/    CBC2 :                             ;upper:
(1)  822/    CBC2 :                             ;       ASL
(1)  822/    CBC2 :                             ;       TAX
(1)  822/    CBC2 :                             ;       BCS upper_upper
(1)  822/    CBC2 :                             ;       lower_upper:
(1)  822/    CBC2 :                             ;               JMP (JUMP_TABLE3,X)
(1)  822/    CBC2 :                             ;       upper_upper:
(1)  822/    CBC2 :                             ;               JMP (JUMP_TABLE4,X)
(1)  822/    CBC2 :                             ;After jump:
(1)  822/    CBC2 :                             ;TYA                                                    ;2
(1)  822/    CBC2 :                             ;TAX                                                    ;2
(1)  822/    CBC2 :                             
(1)  822/    CBC2 :                             ;Method 4 - 28 cycles
(1)  822/    CBC2 :                             ;LDA (emu_PC,X)                 ;6
(1)  822/    CBC2 :                             ;TAY                                    ;2
(1)  822/    CBC2 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  822/    CBC2 :                             ;PHA                                    ;3
(1)  822/    CBC2 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  822/    CBC2 :                             ;PHA                                    ;3
(1)  822/    CBC2 :                             ;RTS                                    ;6
(1)  822/    CBC2 :                             
(1)  822/    CBC2 :                             ;Method 5 - 30 cycles
(1)  822/    CBC2 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  822/    CBC4 : A8                          TAY                                             ;2
(1)  822/    CBC5 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  822/    CBC8 : 95 0A                       STA emu_ptr,X                   ;4
(1)  822/    CBCA : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  822/    CBCD : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  822/    CBCF : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  822/    CBD2 :                                                     
(1)  823/    CBD2 :                     
(1)  824/    CBD2 :                     	;0xA4 - LDY ZP
(1)  825/    CBD2 :                     	LDY_ZP:
(1)  826/    CBD2 : (MACRO)             		OP_MACRO 164, "LDY", "ZP", "LDY_ZP"
(1)  826/    CBD2 :                             ;TODO
(1)  827/    CBD2 : (MACRO)             		NEXT_MACRO
(1)  827/    CBD2 :                                             
(1)  827/    CBD2 :  (MACRO-2)                  halt
(1)  827/    CBD2 : 00                          BRK
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 245 - 1/5/2022 12:19:0


(1)  827/    CBD3 : 00                          BRK
(1)  827/    CBD4 :                             
(1)  827/    CBD4 :                             ;Method 1 - 60 cycles
(1)  827/    CBD4 :                             ;Jump table must be page aligned!!!
(1)  827/    CBD4 :                             ;LDA (emu_PC,X)                 ;6
(1)  827/    CBD4 :                             ;ASL                                    ;2
(1)  827/    CBD4 :                             ;STA emu_ptr,X                  ;4
(1)  827/    CBD4 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  827/    CBD4 :                             ;ADC #0                                 ;2
(1)  827/    CBD4 :                             ;STA emu_ptr+1,X                ;4
(1)  827/    CBD4 :                             ;LDA (emu_ptr,X)                ;6
(1)  827/    CBD4 :                             ;STA emu_ptr2,X                 ;4
(1)  827/    CBD4 :                             ;INC emu_ptr,X                  ;6
(1)  827/    CBD4 :                             ;BCC .skip                              ;2
(1)  827/    CBD4 :                             ;       INC emu_ptr+1,X         ;6
(1)  827/    CBD4 :                             ;.skip:
(1)  827/    CBD4 :                             ;LDA (emu_ptr,X)                ;6
(1)  827/    CBD4 :                             ;STA emu_ptr2+1,X               ;4
(1)  827/    CBD4 :                             ;JMP (emu_ptr2,X)               ;6
(1)  827/    CBD4 :                             
(1)  827/    CBD4 :                             ;Method 2 - 46 cycles
(1)  827/    CBD4 :                             ;Jump table must be page aligned!!!
(1)  827/    CBD4 :                             ;LDA (emu_PC,X)                 ;6
(1)  827/    CBD4 :                             ;STZ emu_ptr+1,X                ;4
(1)  827/    CBD4 :                             ;ASL                                    ;2
(1)  827/    CBD4 :                             ;ROL emu_ptr+1,X                ;6
(1)  827/    CBD4 :                             ;ASL                                    ;2
(1)  827/    CBD4 :                             ;ROL emu_ptr+1,X                ;6
(1)  827/    CBD4 :                             ;STA emu_ptr,X                  ;4                              
(1)  827/    CBD4 :                             ;LDA emu_ptr+1,X                ;4
(1)  827/    CBD4 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  827/    CBD4 :                             ;STA emu_ptr+1,X                ;4
(1)  827/    CBD4 :                             ;JMP (emu_ptr2,X)               ;6
(1)  827/    CBD4 :                             
(1)  827/    CBD4 :                             ;Method 3 - 30 cycles
(1)  827/    CBD4 :                             ;TXA                                                    ;2
(1)  827/    CBD4 :                             ;TAY                                                    ;2
(1)  827/    CBD4 :                             ;LDA (emu_PC,X)                                 ;6
(1)  827/    CBD4 :                             ;ASL                                                    ;2
(1)  827/    CBD4 :                             ;BCS upper                                              ;2
(1)  827/    CBD4 :                             ;lower:
(1)  827/    CBD4 :                             ;       ASL                                                     ;2
(1)  827/    CBD4 :                             ;       TAX                                                     ;2
(1)  827/    CBD4 :                             ;       BCS upper_lower                         ;2
(1)  827/    CBD4 :                             ;       lower_lower:
(1)  827/    CBD4 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  827/    CBD4 :                             ;       upper_lower:
(1)  827/    CBD4 :                             ;               JMP (JUMP_TABLE2,X)
(1)  827/    CBD4 :                             ;upper:
(1)  827/    CBD4 :                             ;       ASL
(1)  827/    CBD4 :                             ;       TAX
(1)  827/    CBD4 :                             ;       BCS upper_upper
(1)  827/    CBD4 :                             ;       lower_upper:
(1)  827/    CBD4 :                             ;               JMP (JUMP_TABLE3,X)
(1)  827/    CBD4 :                             ;       upper_upper:
(1)  827/    CBD4 :                             ;               JMP (JUMP_TABLE4,X)
(1)  827/    CBD4 :                             ;After jump:
(1)  827/    CBD4 :                             ;TYA                                                    ;2
(1)  827/    CBD4 :                             ;TAX                                                    ;2
(1)  827/    CBD4 :                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 246 - 1/5/2022 12:19:0


(1)  827/    CBD4 :                             ;Method 4 - 28 cycles
(1)  827/    CBD4 :                             ;LDA (emu_PC,X)                 ;6
(1)  827/    CBD4 :                             ;TAY                                    ;2
(1)  827/    CBD4 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  827/    CBD4 :                             ;PHA                                    ;3
(1)  827/    CBD4 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  827/    CBD4 :                             ;PHA                                    ;3
(1)  827/    CBD4 :                             ;RTS                                    ;6
(1)  827/    CBD4 :                             
(1)  827/    CBD4 :                             ;Method 5 - 30 cycles
(1)  827/    CBD4 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  827/    CBD6 : A8                          TAY                                             ;2
(1)  827/    CBD7 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  827/    CBDA : 95 0A                       STA emu_ptr,X                   ;4
(1)  827/    CBDC : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  827/    CBDF : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  827/    CBE1 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  827/    CBE4 :                                                     
(1)  828/    CBE4 :                     
(1)  829/    CBE4 :                     	;0xA5 - LDA ZP
(1)  830/    CBE4 :                     	LDA_ZP:
(1)  831/    CBE4 : (MACRO)             		OP_MACRO 165, "LDA", "ZP", "LDA_ZP"
(1)  831/    CBE4 :                             ;TODO
(1)  832/    CBE4 : (MACRO)             		NEXT_MACRO
(1)  832/    CBE4 :                                             
(1)  832/    CBE4 :  (MACRO-2)                  halt
(1)  832/    CBE4 : 00                          BRK
(1)  832/    CBE5 : 00                          BRK
(1)  832/    CBE6 :                             
(1)  832/    CBE6 :                             ;Method 1 - 60 cycles
(1)  832/    CBE6 :                             ;Jump table must be page aligned!!!
(1)  832/    CBE6 :                             ;LDA (emu_PC,X)                 ;6
(1)  832/    CBE6 :                             ;ASL                                    ;2
(1)  832/    CBE6 :                             ;STA emu_ptr,X                  ;4
(1)  832/    CBE6 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  832/    CBE6 :                             ;ADC #0                                 ;2
(1)  832/    CBE6 :                             ;STA emu_ptr+1,X                ;4
(1)  832/    CBE6 :                             ;LDA (emu_ptr,X)                ;6
(1)  832/    CBE6 :                             ;STA emu_ptr2,X                 ;4
(1)  832/    CBE6 :                             ;INC emu_ptr,X                  ;6
(1)  832/    CBE6 :                             ;BCC .skip                              ;2
(1)  832/    CBE6 :                             ;       INC emu_ptr+1,X         ;6
(1)  832/    CBE6 :                             ;.skip:
(1)  832/    CBE6 :                             ;LDA (emu_ptr,X)                ;6
(1)  832/    CBE6 :                             ;STA emu_ptr2+1,X               ;4
(1)  832/    CBE6 :                             ;JMP (emu_ptr2,X)               ;6
(1)  832/    CBE6 :                             
(1)  832/    CBE6 :                             ;Method 2 - 46 cycles
(1)  832/    CBE6 :                             ;Jump table must be page aligned!!!
(1)  832/    CBE6 :                             ;LDA (emu_PC,X)                 ;6
(1)  832/    CBE6 :                             ;STZ emu_ptr+1,X                ;4
(1)  832/    CBE6 :                             ;ASL                                    ;2
(1)  832/    CBE6 :                             ;ROL emu_ptr+1,X                ;6
(1)  832/    CBE6 :                             ;ASL                                    ;2
(1)  832/    CBE6 :                             ;ROL emu_ptr+1,X                ;6
(1)  832/    CBE6 :                             ;STA emu_ptr,X                  ;4                              
(1)  832/    CBE6 :                             ;LDA emu_ptr+1,X                ;4
(1)  832/    CBE6 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  832/    CBE6 :                             ;STA emu_ptr+1,X                ;4
(1)  832/    CBE6 :                             ;JMP (emu_ptr2,X)               ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 247 - 1/5/2022 12:19:0


(1)  832/    CBE6 :                             
(1)  832/    CBE6 :                             ;Method 3 - 30 cycles
(1)  832/    CBE6 :                             ;TXA                                                    ;2
(1)  832/    CBE6 :                             ;TAY                                                    ;2
(1)  832/    CBE6 :                             ;LDA (emu_PC,X)                                 ;6
(1)  832/    CBE6 :                             ;ASL                                                    ;2
(1)  832/    CBE6 :                             ;BCS upper                                              ;2
(1)  832/    CBE6 :                             ;lower:
(1)  832/    CBE6 :                             ;       ASL                                                     ;2
(1)  832/    CBE6 :                             ;       TAX                                                     ;2
(1)  832/    CBE6 :                             ;       BCS upper_lower                         ;2
(1)  832/    CBE6 :                             ;       lower_lower:
(1)  832/    CBE6 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  832/    CBE6 :                             ;       upper_lower:
(1)  832/    CBE6 :                             ;               JMP (JUMP_TABLE2,X)
(1)  832/    CBE6 :                             ;upper:
(1)  832/    CBE6 :                             ;       ASL
(1)  832/    CBE6 :                             ;       TAX
(1)  832/    CBE6 :                             ;       BCS upper_upper
(1)  832/    CBE6 :                             ;       lower_upper:
(1)  832/    CBE6 :                             ;               JMP (JUMP_TABLE3,X)
(1)  832/    CBE6 :                             ;       upper_upper:
(1)  832/    CBE6 :                             ;               JMP (JUMP_TABLE4,X)
(1)  832/    CBE6 :                             ;After jump:
(1)  832/    CBE6 :                             ;TYA                                                    ;2
(1)  832/    CBE6 :                             ;TAX                                                    ;2
(1)  832/    CBE6 :                             
(1)  832/    CBE6 :                             ;Method 4 - 28 cycles
(1)  832/    CBE6 :                             ;LDA (emu_PC,X)                 ;6
(1)  832/    CBE6 :                             ;TAY                                    ;2
(1)  832/    CBE6 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  832/    CBE6 :                             ;PHA                                    ;3
(1)  832/    CBE6 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  832/    CBE6 :                             ;PHA                                    ;3
(1)  832/    CBE6 :                             ;RTS                                    ;6
(1)  832/    CBE6 :                             
(1)  832/    CBE6 :                             ;Method 5 - 30 cycles
(1)  832/    CBE6 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  832/    CBE8 : A8                          TAY                                             ;2
(1)  832/    CBE9 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  832/    CBEC : 95 0A                       STA emu_ptr,X                   ;4
(1)  832/    CBEE : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  832/    CBF1 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  832/    CBF3 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  832/    CBF6 :                                                     
(1)  833/    CBF6 :                     
(1)  834/    CBF6 :                     	;0xA6 - LDX ZP
(1)  835/    CBF6 :                     	LDX_ZP:
(1)  836/    CBF6 : (MACRO)             		OP_MACRO 166, "LDX", "ZP", "LDX_ZP"
(1)  836/    CBF6 :                             ;TODO
(1)  837/    CBF6 : (MACRO)             		NEXT_MACRO
(1)  837/    CBF6 :                                             
(1)  837/    CBF6 :  (MACRO-2)                  halt
(1)  837/    CBF6 : 00                          BRK
(1)  837/    CBF7 : 00                          BRK
(1)  837/    CBF8 :                             
(1)  837/    CBF8 :                             ;Method 1 - 60 cycles
(1)  837/    CBF8 :                             ;Jump table must be page aligned!!!
(1)  837/    CBF8 :                             ;LDA (emu_PC,X)                 ;6
(1)  837/    CBF8 :                             ;ASL                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 248 - 1/5/2022 12:19:0


(1)  837/    CBF8 :                             ;STA emu_ptr,X                  ;4
(1)  837/    CBF8 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  837/    CBF8 :                             ;ADC #0                                 ;2
(1)  837/    CBF8 :                             ;STA emu_ptr+1,X                ;4
(1)  837/    CBF8 :                             ;LDA (emu_ptr,X)                ;6
(1)  837/    CBF8 :                             ;STA emu_ptr2,X                 ;4
(1)  837/    CBF8 :                             ;INC emu_ptr,X                  ;6
(1)  837/    CBF8 :                             ;BCC .skip                              ;2
(1)  837/    CBF8 :                             ;       INC emu_ptr+1,X         ;6
(1)  837/    CBF8 :                             ;.skip:
(1)  837/    CBF8 :                             ;LDA (emu_ptr,X)                ;6
(1)  837/    CBF8 :                             ;STA emu_ptr2+1,X               ;4
(1)  837/    CBF8 :                             ;JMP (emu_ptr2,X)               ;6
(1)  837/    CBF8 :                             
(1)  837/    CBF8 :                             ;Method 2 - 46 cycles
(1)  837/    CBF8 :                             ;Jump table must be page aligned!!!
(1)  837/    CBF8 :                             ;LDA (emu_PC,X)                 ;6
(1)  837/    CBF8 :                             ;STZ emu_ptr+1,X                ;4
(1)  837/    CBF8 :                             ;ASL                                    ;2
(1)  837/    CBF8 :                             ;ROL emu_ptr+1,X                ;6
(1)  837/    CBF8 :                             ;ASL                                    ;2
(1)  837/    CBF8 :                             ;ROL emu_ptr+1,X                ;6
(1)  837/    CBF8 :                             ;STA emu_ptr,X                  ;4                              
(1)  837/    CBF8 :                             ;LDA emu_ptr+1,X                ;4
(1)  837/    CBF8 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  837/    CBF8 :                             ;STA emu_ptr+1,X                ;4
(1)  837/    CBF8 :                             ;JMP (emu_ptr2,X)               ;6
(1)  837/    CBF8 :                             
(1)  837/    CBF8 :                             ;Method 3 - 30 cycles
(1)  837/    CBF8 :                             ;TXA                                                    ;2
(1)  837/    CBF8 :                             ;TAY                                                    ;2
(1)  837/    CBF8 :                             ;LDA (emu_PC,X)                                 ;6
(1)  837/    CBF8 :                             ;ASL                                                    ;2
(1)  837/    CBF8 :                             ;BCS upper                                              ;2
(1)  837/    CBF8 :                             ;lower:
(1)  837/    CBF8 :                             ;       ASL                                                     ;2
(1)  837/    CBF8 :                             ;       TAX                                                     ;2
(1)  837/    CBF8 :                             ;       BCS upper_lower                         ;2
(1)  837/    CBF8 :                             ;       lower_lower:
(1)  837/    CBF8 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  837/    CBF8 :                             ;       upper_lower:
(1)  837/    CBF8 :                             ;               JMP (JUMP_TABLE2,X)
(1)  837/    CBF8 :                             ;upper:
(1)  837/    CBF8 :                             ;       ASL
(1)  837/    CBF8 :                             ;       TAX
(1)  837/    CBF8 :                             ;       BCS upper_upper
(1)  837/    CBF8 :                             ;       lower_upper:
(1)  837/    CBF8 :                             ;               JMP (JUMP_TABLE3,X)
(1)  837/    CBF8 :                             ;       upper_upper:
(1)  837/    CBF8 :                             ;               JMP (JUMP_TABLE4,X)
(1)  837/    CBF8 :                             ;After jump:
(1)  837/    CBF8 :                             ;TYA                                                    ;2
(1)  837/    CBF8 :                             ;TAX                                                    ;2
(1)  837/    CBF8 :                             
(1)  837/    CBF8 :                             ;Method 4 - 28 cycles
(1)  837/    CBF8 :                             ;LDA (emu_PC,X)                 ;6
(1)  837/    CBF8 :                             ;TAY                                    ;2
(1)  837/    CBF8 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  837/    CBF8 :                             ;PHA                                    ;3
(1)  837/    CBF8 :                             ;LDA JUMP_TABLE2,Y              ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 249 - 1/5/2022 12:19:0


(1)  837/    CBF8 :                             ;PHA                                    ;3
(1)  837/    CBF8 :                             ;RTS                                    ;6
(1)  837/    CBF8 :                             
(1)  837/    CBF8 :                             ;Method 5 - 30 cycles
(1)  837/    CBF8 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  837/    CBFA : A8                          TAY                                             ;2
(1)  837/    CBFB : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  837/    CBFE : 95 0A                       STA emu_ptr,X                   ;4
(1)  837/    CC00 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  837/    CC03 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  837/    CC05 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  837/    CC08 :                                                     
(1)  838/    CC08 :                     
(1)  839/    CC08 :                     	;0xA7 - NOP
(1)  840/    CC08 :                     	NOP_0xA7:
(1)  841/    CC08 : (MACRO)             		OP_MACRO 167, "NOP", "IMP", "NOP_0xA7"
(1)  841/    CC08 :                             ;TODO
(1)  842/    CC08 : (MACRO)             		NEXT_MACRO
(1)  842/    CC08 :                                             
(1)  842/    CC08 :  (MACRO-2)                  halt
(1)  842/    CC08 : 00                          BRK
(1)  842/    CC09 : 00                          BRK
(1)  842/    CC0A :                             
(1)  842/    CC0A :                             ;Method 1 - 60 cycles
(1)  842/    CC0A :                             ;Jump table must be page aligned!!!
(1)  842/    CC0A :                             ;LDA (emu_PC,X)                 ;6
(1)  842/    CC0A :                             ;ASL                                    ;2
(1)  842/    CC0A :                             ;STA emu_ptr,X                  ;4
(1)  842/    CC0A :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  842/    CC0A :                             ;ADC #0                                 ;2
(1)  842/    CC0A :                             ;STA emu_ptr+1,X                ;4
(1)  842/    CC0A :                             ;LDA (emu_ptr,X)                ;6
(1)  842/    CC0A :                             ;STA emu_ptr2,X                 ;4
(1)  842/    CC0A :                             ;INC emu_ptr,X                  ;6
(1)  842/    CC0A :                             ;BCC .skip                              ;2
(1)  842/    CC0A :                             ;       INC emu_ptr+1,X         ;6
(1)  842/    CC0A :                             ;.skip:
(1)  842/    CC0A :                             ;LDA (emu_ptr,X)                ;6
(1)  842/    CC0A :                             ;STA emu_ptr2+1,X               ;4
(1)  842/    CC0A :                             ;JMP (emu_ptr2,X)               ;6
(1)  842/    CC0A :                             
(1)  842/    CC0A :                             ;Method 2 - 46 cycles
(1)  842/    CC0A :                             ;Jump table must be page aligned!!!
(1)  842/    CC0A :                             ;LDA (emu_PC,X)                 ;6
(1)  842/    CC0A :                             ;STZ emu_ptr+1,X                ;4
(1)  842/    CC0A :                             ;ASL                                    ;2
(1)  842/    CC0A :                             ;ROL emu_ptr+1,X                ;6
(1)  842/    CC0A :                             ;ASL                                    ;2
(1)  842/    CC0A :                             ;ROL emu_ptr+1,X                ;6
(1)  842/    CC0A :                             ;STA emu_ptr,X                  ;4                              
(1)  842/    CC0A :                             ;LDA emu_ptr+1,X                ;4
(1)  842/    CC0A :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  842/    CC0A :                             ;STA emu_ptr+1,X                ;4
(1)  842/    CC0A :                             ;JMP (emu_ptr2,X)               ;6
(1)  842/    CC0A :                             
(1)  842/    CC0A :                             ;Method 3 - 30 cycles
(1)  842/    CC0A :                             ;TXA                                                    ;2
(1)  842/    CC0A :                             ;TAY                                                    ;2
(1)  842/    CC0A :                             ;LDA (emu_PC,X)                                 ;6
(1)  842/    CC0A :                             ;ASL                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 250 - 1/5/2022 12:19:0


(1)  842/    CC0A :                             ;BCS upper                                              ;2
(1)  842/    CC0A :                             ;lower:
(1)  842/    CC0A :                             ;       ASL                                                     ;2
(1)  842/    CC0A :                             ;       TAX                                                     ;2
(1)  842/    CC0A :                             ;       BCS upper_lower                         ;2
(1)  842/    CC0A :                             ;       lower_lower:
(1)  842/    CC0A :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  842/    CC0A :                             ;       upper_lower:
(1)  842/    CC0A :                             ;               JMP (JUMP_TABLE2,X)
(1)  842/    CC0A :                             ;upper:
(1)  842/    CC0A :                             ;       ASL
(1)  842/    CC0A :                             ;       TAX
(1)  842/    CC0A :                             ;       BCS upper_upper
(1)  842/    CC0A :                             ;       lower_upper:
(1)  842/    CC0A :                             ;               JMP (JUMP_TABLE3,X)
(1)  842/    CC0A :                             ;       upper_upper:
(1)  842/    CC0A :                             ;               JMP (JUMP_TABLE4,X)
(1)  842/    CC0A :                             ;After jump:
(1)  842/    CC0A :                             ;TYA                                                    ;2
(1)  842/    CC0A :                             ;TAX                                                    ;2
(1)  842/    CC0A :                             
(1)  842/    CC0A :                             ;Method 4 - 28 cycles
(1)  842/    CC0A :                             ;LDA (emu_PC,X)                 ;6
(1)  842/    CC0A :                             ;TAY                                    ;2
(1)  842/    CC0A :                             ;LDA JUMP_TABLE,Y               ;4
(1)  842/    CC0A :                             ;PHA                                    ;3
(1)  842/    CC0A :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  842/    CC0A :                             ;PHA                                    ;3
(1)  842/    CC0A :                             ;RTS                                    ;6
(1)  842/    CC0A :                             
(1)  842/    CC0A :                             ;Method 5 - 30 cycles
(1)  842/    CC0A : A1 02                       LDA (emu_PC,X)                  ;6
(1)  842/    CC0C : A8                          TAY                                             ;2
(1)  842/    CC0D : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  842/    CC10 : 95 0A                       STA emu_ptr,X                   ;4
(1)  842/    CC12 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  842/    CC15 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  842/    CC17 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  842/    CC1A :                                                     
(1)  843/    CC1A :                     
(1)  844/    CC1A :                     	;0xA8 - TAY IMP
(1)  845/    CC1A :                     	TAY_IMP:
(1)  846/    CC1A : (MACRO)             		OP_MACRO 168, "TAY", "IMP", "TAY_IMP"
(1)  846/    CC1A :                             ;TODO
(1)  847/    CC1A : (MACRO)             		NEXT_MACRO
(1)  847/    CC1A :                                             
(1)  847/    CC1A :  (MACRO-2)                  halt
(1)  847/    CC1A : 00                          BRK
(1)  847/    CC1B : 00                          BRK
(1)  847/    CC1C :                             
(1)  847/    CC1C :                             ;Method 1 - 60 cycles
(1)  847/    CC1C :                             ;Jump table must be page aligned!!!
(1)  847/    CC1C :                             ;LDA (emu_PC,X)                 ;6
(1)  847/    CC1C :                             ;ASL                                    ;2
(1)  847/    CC1C :                             ;STA emu_ptr,X                  ;4
(1)  847/    CC1C :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  847/    CC1C :                             ;ADC #0                                 ;2
(1)  847/    CC1C :                             ;STA emu_ptr+1,X                ;4
(1)  847/    CC1C :                             ;LDA (emu_ptr,X)                ;6
(1)  847/    CC1C :                             ;STA emu_ptr2,X                 ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 251 - 1/5/2022 12:19:0


(1)  847/    CC1C :                             ;INC emu_ptr,X                  ;6
(1)  847/    CC1C :                             ;BCC .skip                              ;2
(1)  847/    CC1C :                             ;       INC emu_ptr+1,X         ;6
(1)  847/    CC1C :                             ;.skip:
(1)  847/    CC1C :                             ;LDA (emu_ptr,X)                ;6
(1)  847/    CC1C :                             ;STA emu_ptr2+1,X               ;4
(1)  847/    CC1C :                             ;JMP (emu_ptr2,X)               ;6
(1)  847/    CC1C :                             
(1)  847/    CC1C :                             ;Method 2 - 46 cycles
(1)  847/    CC1C :                             ;Jump table must be page aligned!!!
(1)  847/    CC1C :                             ;LDA (emu_PC,X)                 ;6
(1)  847/    CC1C :                             ;STZ emu_ptr+1,X                ;4
(1)  847/    CC1C :                             ;ASL                                    ;2
(1)  847/    CC1C :                             ;ROL emu_ptr+1,X                ;6
(1)  847/    CC1C :                             ;ASL                                    ;2
(1)  847/    CC1C :                             ;ROL emu_ptr+1,X                ;6
(1)  847/    CC1C :                             ;STA emu_ptr,X                  ;4                              
(1)  847/    CC1C :                             ;LDA emu_ptr+1,X                ;4
(1)  847/    CC1C :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  847/    CC1C :                             ;STA emu_ptr+1,X                ;4
(1)  847/    CC1C :                             ;JMP (emu_ptr2,X)               ;6
(1)  847/    CC1C :                             
(1)  847/    CC1C :                             ;Method 3 - 30 cycles
(1)  847/    CC1C :                             ;TXA                                                    ;2
(1)  847/    CC1C :                             ;TAY                                                    ;2
(1)  847/    CC1C :                             ;LDA (emu_PC,X)                                 ;6
(1)  847/    CC1C :                             ;ASL                                                    ;2
(1)  847/    CC1C :                             ;BCS upper                                              ;2
(1)  847/    CC1C :                             ;lower:
(1)  847/    CC1C :                             ;       ASL                                                     ;2
(1)  847/    CC1C :                             ;       TAX                                                     ;2
(1)  847/    CC1C :                             ;       BCS upper_lower                         ;2
(1)  847/    CC1C :                             ;       lower_lower:
(1)  847/    CC1C :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  847/    CC1C :                             ;       upper_lower:
(1)  847/    CC1C :                             ;               JMP (JUMP_TABLE2,X)
(1)  847/    CC1C :                             ;upper:
(1)  847/    CC1C :                             ;       ASL
(1)  847/    CC1C :                             ;       TAX
(1)  847/    CC1C :                             ;       BCS upper_upper
(1)  847/    CC1C :                             ;       lower_upper:
(1)  847/    CC1C :                             ;               JMP (JUMP_TABLE3,X)
(1)  847/    CC1C :                             ;       upper_upper:
(1)  847/    CC1C :                             ;               JMP (JUMP_TABLE4,X)
(1)  847/    CC1C :                             ;After jump:
(1)  847/    CC1C :                             ;TYA                                                    ;2
(1)  847/    CC1C :                             ;TAX                                                    ;2
(1)  847/    CC1C :                             
(1)  847/    CC1C :                             ;Method 4 - 28 cycles
(1)  847/    CC1C :                             ;LDA (emu_PC,X)                 ;6
(1)  847/    CC1C :                             ;TAY                                    ;2
(1)  847/    CC1C :                             ;LDA JUMP_TABLE,Y               ;4
(1)  847/    CC1C :                             ;PHA                                    ;3
(1)  847/    CC1C :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  847/    CC1C :                             ;PHA                                    ;3
(1)  847/    CC1C :                             ;RTS                                    ;6
(1)  847/    CC1C :                             
(1)  847/    CC1C :                             ;Method 5 - 30 cycles
(1)  847/    CC1C : A1 02                       LDA (emu_PC,X)                  ;6
(1)  847/    CC1E : A8                          TAY                                             ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 252 - 1/5/2022 12:19:0


(1)  847/    CC1F : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  847/    CC22 : 95 0A                       STA emu_ptr,X                   ;4
(1)  847/    CC24 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  847/    CC27 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  847/    CC29 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  847/    CC2C :                                                     
(1)  848/    CC2C :                     
(1)  849/    CC2C :                     	;0xA9 - LDA IMMED
(1)  850/    CC2C :                     	LDA_IMMED:
(1)  851/    CC2C : (MACRO)             		OP_MACRO 169, "LDA", "IMMED", "LDA_IMMED"
(1)  851/    CC2C :                             ;TODO
(1)  852/    CC2C : (MACRO)             		NEXT_MACRO
(1)  852/    CC2C :                                             
(1)  852/    CC2C :  (MACRO-2)                  halt
(1)  852/    CC2C : 00                          BRK
(1)  852/    CC2D : 00                          BRK
(1)  852/    CC2E :                             
(1)  852/    CC2E :                             ;Method 1 - 60 cycles
(1)  852/    CC2E :                             ;Jump table must be page aligned!!!
(1)  852/    CC2E :                             ;LDA (emu_PC,X)                 ;6
(1)  852/    CC2E :                             ;ASL                                    ;2
(1)  852/    CC2E :                             ;STA emu_ptr,X                  ;4
(1)  852/    CC2E :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  852/    CC2E :                             ;ADC #0                                 ;2
(1)  852/    CC2E :                             ;STA emu_ptr+1,X                ;4
(1)  852/    CC2E :                             ;LDA (emu_ptr,X)                ;6
(1)  852/    CC2E :                             ;STA emu_ptr2,X                 ;4
(1)  852/    CC2E :                             ;INC emu_ptr,X                  ;6
(1)  852/    CC2E :                             ;BCC .skip                              ;2
(1)  852/    CC2E :                             ;       INC emu_ptr+1,X         ;6
(1)  852/    CC2E :                             ;.skip:
(1)  852/    CC2E :                             ;LDA (emu_ptr,X)                ;6
(1)  852/    CC2E :                             ;STA emu_ptr2+1,X               ;4
(1)  852/    CC2E :                             ;JMP (emu_ptr2,X)               ;6
(1)  852/    CC2E :                             
(1)  852/    CC2E :                             ;Method 2 - 46 cycles
(1)  852/    CC2E :                             ;Jump table must be page aligned!!!
(1)  852/    CC2E :                             ;LDA (emu_PC,X)                 ;6
(1)  852/    CC2E :                             ;STZ emu_ptr+1,X                ;4
(1)  852/    CC2E :                             ;ASL                                    ;2
(1)  852/    CC2E :                             ;ROL emu_ptr+1,X                ;6
(1)  852/    CC2E :                             ;ASL                                    ;2
(1)  852/    CC2E :                             ;ROL emu_ptr+1,X                ;6
(1)  852/    CC2E :                             ;STA emu_ptr,X                  ;4                              
(1)  852/    CC2E :                             ;LDA emu_ptr+1,X                ;4
(1)  852/    CC2E :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  852/    CC2E :                             ;STA emu_ptr+1,X                ;4
(1)  852/    CC2E :                             ;JMP (emu_ptr2,X)               ;6
(1)  852/    CC2E :                             
(1)  852/    CC2E :                             ;Method 3 - 30 cycles
(1)  852/    CC2E :                             ;TXA                                                    ;2
(1)  852/    CC2E :                             ;TAY                                                    ;2
(1)  852/    CC2E :                             ;LDA (emu_PC,X)                                 ;6
(1)  852/    CC2E :                             ;ASL                                                    ;2
(1)  852/    CC2E :                             ;BCS upper                                              ;2
(1)  852/    CC2E :                             ;lower:
(1)  852/    CC2E :                             ;       ASL                                                     ;2
(1)  852/    CC2E :                             ;       TAX                                                     ;2
(1)  852/    CC2E :                             ;       BCS upper_lower                         ;2
(1)  852/    CC2E :                             ;       lower_lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 253 - 1/5/2022 12:19:0


(1)  852/    CC2E :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  852/    CC2E :                             ;       upper_lower:
(1)  852/    CC2E :                             ;               JMP (JUMP_TABLE2,X)
(1)  852/    CC2E :                             ;upper:
(1)  852/    CC2E :                             ;       ASL
(1)  852/    CC2E :                             ;       TAX
(1)  852/    CC2E :                             ;       BCS upper_upper
(1)  852/    CC2E :                             ;       lower_upper:
(1)  852/    CC2E :                             ;               JMP (JUMP_TABLE3,X)
(1)  852/    CC2E :                             ;       upper_upper:
(1)  852/    CC2E :                             ;               JMP (JUMP_TABLE4,X)
(1)  852/    CC2E :                             ;After jump:
(1)  852/    CC2E :                             ;TYA                                                    ;2
(1)  852/    CC2E :                             ;TAX                                                    ;2
(1)  852/    CC2E :                             
(1)  852/    CC2E :                             ;Method 4 - 28 cycles
(1)  852/    CC2E :                             ;LDA (emu_PC,X)                 ;6
(1)  852/    CC2E :                             ;TAY                                    ;2
(1)  852/    CC2E :                             ;LDA JUMP_TABLE,Y               ;4
(1)  852/    CC2E :                             ;PHA                                    ;3
(1)  852/    CC2E :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  852/    CC2E :                             ;PHA                                    ;3
(1)  852/    CC2E :                             ;RTS                                    ;6
(1)  852/    CC2E :                             
(1)  852/    CC2E :                             ;Method 5 - 30 cycles
(1)  852/    CC2E : A1 02                       LDA (emu_PC,X)                  ;6
(1)  852/    CC30 : A8                          TAY                                             ;2
(1)  852/    CC31 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  852/    CC34 : 95 0A                       STA emu_ptr,X                   ;4
(1)  852/    CC36 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  852/    CC39 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  852/    CC3B : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  852/    CC3E :                                                     
(1)  853/    CC3E :                     
(1)  854/    CC3E :                     	;0xAA - TAX IMP
(1)  855/    CC3E :                     	TAX_IMP:
(1)  856/    CC3E : (MACRO)             		OP_MACRO 170, "TAX", "IMP", "TAX_IMP"
(1)  856/    CC3E :                             ;TODO
(1)  857/    CC3E : (MACRO)             		NEXT_MACRO
(1)  857/    CC3E :                                             
(1)  857/    CC3E :  (MACRO-2)                  halt
(1)  857/    CC3E : 00                          BRK
(1)  857/    CC3F : 00                          BRK
(1)  857/    CC40 :                             
(1)  857/    CC40 :                             ;Method 1 - 60 cycles
(1)  857/    CC40 :                             ;Jump table must be page aligned!!!
(1)  857/    CC40 :                             ;LDA (emu_PC,X)                 ;6
(1)  857/    CC40 :                             ;ASL                                    ;2
(1)  857/    CC40 :                             ;STA emu_ptr,X                  ;4
(1)  857/    CC40 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  857/    CC40 :                             ;ADC #0                                 ;2
(1)  857/    CC40 :                             ;STA emu_ptr+1,X                ;4
(1)  857/    CC40 :                             ;LDA (emu_ptr,X)                ;6
(1)  857/    CC40 :                             ;STA emu_ptr2,X                 ;4
(1)  857/    CC40 :                             ;INC emu_ptr,X                  ;6
(1)  857/    CC40 :                             ;BCC .skip                              ;2
(1)  857/    CC40 :                             ;       INC emu_ptr+1,X         ;6
(1)  857/    CC40 :                             ;.skip:
(1)  857/    CC40 :                             ;LDA (emu_ptr,X)                ;6
(1)  857/    CC40 :                             ;STA emu_ptr2+1,X               ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 254 - 1/5/2022 12:19:0


(1)  857/    CC40 :                             ;JMP (emu_ptr2,X)               ;6
(1)  857/    CC40 :                             
(1)  857/    CC40 :                             ;Method 2 - 46 cycles
(1)  857/    CC40 :                             ;Jump table must be page aligned!!!
(1)  857/    CC40 :                             ;LDA (emu_PC,X)                 ;6
(1)  857/    CC40 :                             ;STZ emu_ptr+1,X                ;4
(1)  857/    CC40 :                             ;ASL                                    ;2
(1)  857/    CC40 :                             ;ROL emu_ptr+1,X                ;6
(1)  857/    CC40 :                             ;ASL                                    ;2
(1)  857/    CC40 :                             ;ROL emu_ptr+1,X                ;6
(1)  857/    CC40 :                             ;STA emu_ptr,X                  ;4                              
(1)  857/    CC40 :                             ;LDA emu_ptr+1,X                ;4
(1)  857/    CC40 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  857/    CC40 :                             ;STA emu_ptr+1,X                ;4
(1)  857/    CC40 :                             ;JMP (emu_ptr2,X)               ;6
(1)  857/    CC40 :                             
(1)  857/    CC40 :                             ;Method 3 - 30 cycles
(1)  857/    CC40 :                             ;TXA                                                    ;2
(1)  857/    CC40 :                             ;TAY                                                    ;2
(1)  857/    CC40 :                             ;LDA (emu_PC,X)                                 ;6
(1)  857/    CC40 :                             ;ASL                                                    ;2
(1)  857/    CC40 :                             ;BCS upper                                              ;2
(1)  857/    CC40 :                             ;lower:
(1)  857/    CC40 :                             ;       ASL                                                     ;2
(1)  857/    CC40 :                             ;       TAX                                                     ;2
(1)  857/    CC40 :                             ;       BCS upper_lower                         ;2
(1)  857/    CC40 :                             ;       lower_lower:
(1)  857/    CC40 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  857/    CC40 :                             ;       upper_lower:
(1)  857/    CC40 :                             ;               JMP (JUMP_TABLE2,X)
(1)  857/    CC40 :                             ;upper:
(1)  857/    CC40 :                             ;       ASL
(1)  857/    CC40 :                             ;       TAX
(1)  857/    CC40 :                             ;       BCS upper_upper
(1)  857/    CC40 :                             ;       lower_upper:
(1)  857/    CC40 :                             ;               JMP (JUMP_TABLE3,X)
(1)  857/    CC40 :                             ;       upper_upper:
(1)  857/    CC40 :                             ;               JMP (JUMP_TABLE4,X)
(1)  857/    CC40 :                             ;After jump:
(1)  857/    CC40 :                             ;TYA                                                    ;2
(1)  857/    CC40 :                             ;TAX                                                    ;2
(1)  857/    CC40 :                             
(1)  857/    CC40 :                             ;Method 4 - 28 cycles
(1)  857/    CC40 :                             ;LDA (emu_PC,X)                 ;6
(1)  857/    CC40 :                             ;TAY                                    ;2
(1)  857/    CC40 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  857/    CC40 :                             ;PHA                                    ;3
(1)  857/    CC40 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  857/    CC40 :                             ;PHA                                    ;3
(1)  857/    CC40 :                             ;RTS                                    ;6
(1)  857/    CC40 :                             
(1)  857/    CC40 :                             ;Method 5 - 30 cycles
(1)  857/    CC40 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  857/    CC42 : A8                          TAY                                             ;2
(1)  857/    CC43 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  857/    CC46 : 95 0A                       STA emu_ptr,X                   ;4
(1)  857/    CC48 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  857/    CC4B : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  857/    CC4D : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  857/    CC50 :                                                     
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 255 - 1/5/2022 12:19:0


(1)  858/    CC50 :                     
(1)  859/    CC50 :                     	;0xAB - NOP
(1)  860/    CC50 :                     	NOP_0xAB:
(1)  861/    CC50 : (MACRO)             		OP_MACRO 171, "NOP", "IMP", "NOP_0xAB"
(1)  861/    CC50 :                             ;TODO
(1)  862/    CC50 : (MACRO)             		NEXT_MACRO
(1)  862/    CC50 :                                             
(1)  862/    CC50 :  (MACRO-2)                  halt
(1)  862/    CC50 : 00                          BRK
(1)  862/    CC51 : 00                          BRK
(1)  862/    CC52 :                             
(1)  862/    CC52 :                             ;Method 1 - 60 cycles
(1)  862/    CC52 :                             ;Jump table must be page aligned!!!
(1)  862/    CC52 :                             ;LDA (emu_PC,X)                 ;6
(1)  862/    CC52 :                             ;ASL                                    ;2
(1)  862/    CC52 :                             ;STA emu_ptr,X                  ;4
(1)  862/    CC52 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  862/    CC52 :                             ;ADC #0                                 ;2
(1)  862/    CC52 :                             ;STA emu_ptr+1,X                ;4
(1)  862/    CC52 :                             ;LDA (emu_ptr,X)                ;6
(1)  862/    CC52 :                             ;STA emu_ptr2,X                 ;4
(1)  862/    CC52 :                             ;INC emu_ptr,X                  ;6
(1)  862/    CC52 :                             ;BCC .skip                              ;2
(1)  862/    CC52 :                             ;       INC emu_ptr+1,X         ;6
(1)  862/    CC52 :                             ;.skip:
(1)  862/    CC52 :                             ;LDA (emu_ptr,X)                ;6
(1)  862/    CC52 :                             ;STA emu_ptr2+1,X               ;4
(1)  862/    CC52 :                             ;JMP (emu_ptr2,X)               ;6
(1)  862/    CC52 :                             
(1)  862/    CC52 :                             ;Method 2 - 46 cycles
(1)  862/    CC52 :                             ;Jump table must be page aligned!!!
(1)  862/    CC52 :                             ;LDA (emu_PC,X)                 ;6
(1)  862/    CC52 :                             ;STZ emu_ptr+1,X                ;4
(1)  862/    CC52 :                             ;ASL                                    ;2
(1)  862/    CC52 :                             ;ROL emu_ptr+1,X                ;6
(1)  862/    CC52 :                             ;ASL                                    ;2
(1)  862/    CC52 :                             ;ROL emu_ptr+1,X                ;6
(1)  862/    CC52 :                             ;STA emu_ptr,X                  ;4                              
(1)  862/    CC52 :                             ;LDA emu_ptr+1,X                ;4
(1)  862/    CC52 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  862/    CC52 :                             ;STA emu_ptr+1,X                ;4
(1)  862/    CC52 :                             ;JMP (emu_ptr2,X)               ;6
(1)  862/    CC52 :                             
(1)  862/    CC52 :                             ;Method 3 - 30 cycles
(1)  862/    CC52 :                             ;TXA                                                    ;2
(1)  862/    CC52 :                             ;TAY                                                    ;2
(1)  862/    CC52 :                             ;LDA (emu_PC,X)                                 ;6
(1)  862/    CC52 :                             ;ASL                                                    ;2
(1)  862/    CC52 :                             ;BCS upper                                              ;2
(1)  862/    CC52 :                             ;lower:
(1)  862/    CC52 :                             ;       ASL                                                     ;2
(1)  862/    CC52 :                             ;       TAX                                                     ;2
(1)  862/    CC52 :                             ;       BCS upper_lower                         ;2
(1)  862/    CC52 :                             ;       lower_lower:
(1)  862/    CC52 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  862/    CC52 :                             ;       upper_lower:
(1)  862/    CC52 :                             ;               JMP (JUMP_TABLE2,X)
(1)  862/    CC52 :                             ;upper:
(1)  862/    CC52 :                             ;       ASL
(1)  862/    CC52 :                             ;       TAX
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 256 - 1/5/2022 12:19:0


(1)  862/    CC52 :                             ;       BCS upper_upper
(1)  862/    CC52 :                             ;       lower_upper:
(1)  862/    CC52 :                             ;               JMP (JUMP_TABLE3,X)
(1)  862/    CC52 :                             ;       upper_upper:
(1)  862/    CC52 :                             ;               JMP (JUMP_TABLE4,X)
(1)  862/    CC52 :                             ;After jump:
(1)  862/    CC52 :                             ;TYA                                                    ;2
(1)  862/    CC52 :                             ;TAX                                                    ;2
(1)  862/    CC52 :                             
(1)  862/    CC52 :                             ;Method 4 - 28 cycles
(1)  862/    CC52 :                             ;LDA (emu_PC,X)                 ;6
(1)  862/    CC52 :                             ;TAY                                    ;2
(1)  862/    CC52 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  862/    CC52 :                             ;PHA                                    ;3
(1)  862/    CC52 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  862/    CC52 :                             ;PHA                                    ;3
(1)  862/    CC52 :                             ;RTS                                    ;6
(1)  862/    CC52 :                             
(1)  862/    CC52 :                             ;Method 5 - 30 cycles
(1)  862/    CC52 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  862/    CC54 : A8                          TAY                                             ;2
(1)  862/    CC55 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  862/    CC58 : 95 0A                       STA emu_ptr,X                   ;4
(1)  862/    CC5A : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  862/    CC5D : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  862/    CC5F : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  862/    CC62 :                                                     
(1)  863/    CC62 :                     
(1)  864/    CC62 :                     	;0xAC - LDY ABS
(1)  865/    CC62 :                     	LDY_ABS:
(1)  866/    CC62 : (MACRO)             		OP_MACRO 172, "LDY", "ABS", "LDY_ABS"
(1)  866/    CC62 :                             ;TODO
(1)  867/    CC62 : (MACRO)             		NEXT_MACRO
(1)  867/    CC62 :                                             
(1)  867/    CC62 :  (MACRO-2)                  halt
(1)  867/    CC62 : 00                          BRK
(1)  867/    CC63 : 00                          BRK
(1)  867/    CC64 :                             
(1)  867/    CC64 :                             ;Method 1 - 60 cycles
(1)  867/    CC64 :                             ;Jump table must be page aligned!!!
(1)  867/    CC64 :                             ;LDA (emu_PC,X)                 ;6
(1)  867/    CC64 :                             ;ASL                                    ;2
(1)  867/    CC64 :                             ;STA emu_ptr,X                  ;4
(1)  867/    CC64 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  867/    CC64 :                             ;ADC #0                                 ;2
(1)  867/    CC64 :                             ;STA emu_ptr+1,X                ;4
(1)  867/    CC64 :                             ;LDA (emu_ptr,X)                ;6
(1)  867/    CC64 :                             ;STA emu_ptr2,X                 ;4
(1)  867/    CC64 :                             ;INC emu_ptr,X                  ;6
(1)  867/    CC64 :                             ;BCC .skip                              ;2
(1)  867/    CC64 :                             ;       INC emu_ptr+1,X         ;6
(1)  867/    CC64 :                             ;.skip:
(1)  867/    CC64 :                             ;LDA (emu_ptr,X)                ;6
(1)  867/    CC64 :                             ;STA emu_ptr2+1,X               ;4
(1)  867/    CC64 :                             ;JMP (emu_ptr2,X)               ;6
(1)  867/    CC64 :                             
(1)  867/    CC64 :                             ;Method 2 - 46 cycles
(1)  867/    CC64 :                             ;Jump table must be page aligned!!!
(1)  867/    CC64 :                             ;LDA (emu_PC,X)                 ;6
(1)  867/    CC64 :                             ;STZ emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 257 - 1/5/2022 12:19:0


(1)  867/    CC64 :                             ;ASL                                    ;2
(1)  867/    CC64 :                             ;ROL emu_ptr+1,X                ;6
(1)  867/    CC64 :                             ;ASL                                    ;2
(1)  867/    CC64 :                             ;ROL emu_ptr+1,X                ;6
(1)  867/    CC64 :                             ;STA emu_ptr,X                  ;4                              
(1)  867/    CC64 :                             ;LDA emu_ptr+1,X                ;4
(1)  867/    CC64 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  867/    CC64 :                             ;STA emu_ptr+1,X                ;4
(1)  867/    CC64 :                             ;JMP (emu_ptr2,X)               ;6
(1)  867/    CC64 :                             
(1)  867/    CC64 :                             ;Method 3 - 30 cycles
(1)  867/    CC64 :                             ;TXA                                                    ;2
(1)  867/    CC64 :                             ;TAY                                                    ;2
(1)  867/    CC64 :                             ;LDA (emu_PC,X)                                 ;6
(1)  867/    CC64 :                             ;ASL                                                    ;2
(1)  867/    CC64 :                             ;BCS upper                                              ;2
(1)  867/    CC64 :                             ;lower:
(1)  867/    CC64 :                             ;       ASL                                                     ;2
(1)  867/    CC64 :                             ;       TAX                                                     ;2
(1)  867/    CC64 :                             ;       BCS upper_lower                         ;2
(1)  867/    CC64 :                             ;       lower_lower:
(1)  867/    CC64 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  867/    CC64 :                             ;       upper_lower:
(1)  867/    CC64 :                             ;               JMP (JUMP_TABLE2,X)
(1)  867/    CC64 :                             ;upper:
(1)  867/    CC64 :                             ;       ASL
(1)  867/    CC64 :                             ;       TAX
(1)  867/    CC64 :                             ;       BCS upper_upper
(1)  867/    CC64 :                             ;       lower_upper:
(1)  867/    CC64 :                             ;               JMP (JUMP_TABLE3,X)
(1)  867/    CC64 :                             ;       upper_upper:
(1)  867/    CC64 :                             ;               JMP (JUMP_TABLE4,X)
(1)  867/    CC64 :                             ;After jump:
(1)  867/    CC64 :                             ;TYA                                                    ;2
(1)  867/    CC64 :                             ;TAX                                                    ;2
(1)  867/    CC64 :                             
(1)  867/    CC64 :                             ;Method 4 - 28 cycles
(1)  867/    CC64 :                             ;LDA (emu_PC,X)                 ;6
(1)  867/    CC64 :                             ;TAY                                    ;2
(1)  867/    CC64 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  867/    CC64 :                             ;PHA                                    ;3
(1)  867/    CC64 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  867/    CC64 :                             ;PHA                                    ;3
(1)  867/    CC64 :                             ;RTS                                    ;6
(1)  867/    CC64 :                             
(1)  867/    CC64 :                             ;Method 5 - 30 cycles
(1)  867/    CC64 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  867/    CC66 : A8                          TAY                                             ;2
(1)  867/    CC67 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  867/    CC6A : 95 0A                       STA emu_ptr,X                   ;4
(1)  867/    CC6C : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  867/    CC6F : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  867/    CC71 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  867/    CC74 :                                                     
(1)  868/    CC74 :                     
(1)  869/    CC74 :                     	;0xAD - LDA ABS
(1)  870/    CC74 :                     	LDA_ABS:
(1)  871/    CC74 : (MACRO)             		OP_MACRO 173, "LDA", "ABS", "LDA_ABS"
(1)  871/    CC74 :                             ;TODO
(1)  872/    CC74 : (MACRO)             		NEXT_MACRO
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 258 - 1/5/2022 12:19:0


(1)  872/    CC74 :                                             
(1)  872/    CC74 :  (MACRO-2)                  halt
(1)  872/    CC74 : 00                          BRK
(1)  872/    CC75 : 00                          BRK
(1)  872/    CC76 :                             
(1)  872/    CC76 :                             ;Method 1 - 60 cycles
(1)  872/    CC76 :                             ;Jump table must be page aligned!!!
(1)  872/    CC76 :                             ;LDA (emu_PC,X)                 ;6
(1)  872/    CC76 :                             ;ASL                                    ;2
(1)  872/    CC76 :                             ;STA emu_ptr,X                  ;4
(1)  872/    CC76 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  872/    CC76 :                             ;ADC #0                                 ;2
(1)  872/    CC76 :                             ;STA emu_ptr+1,X                ;4
(1)  872/    CC76 :                             ;LDA (emu_ptr,X)                ;6
(1)  872/    CC76 :                             ;STA emu_ptr2,X                 ;4
(1)  872/    CC76 :                             ;INC emu_ptr,X                  ;6
(1)  872/    CC76 :                             ;BCC .skip                              ;2
(1)  872/    CC76 :                             ;       INC emu_ptr+1,X         ;6
(1)  872/    CC76 :                             ;.skip:
(1)  872/    CC76 :                             ;LDA (emu_ptr,X)                ;6
(1)  872/    CC76 :                             ;STA emu_ptr2+1,X               ;4
(1)  872/    CC76 :                             ;JMP (emu_ptr2,X)               ;6
(1)  872/    CC76 :                             
(1)  872/    CC76 :                             ;Method 2 - 46 cycles
(1)  872/    CC76 :                             ;Jump table must be page aligned!!!
(1)  872/    CC76 :                             ;LDA (emu_PC,X)                 ;6
(1)  872/    CC76 :                             ;STZ emu_ptr+1,X                ;4
(1)  872/    CC76 :                             ;ASL                                    ;2
(1)  872/    CC76 :                             ;ROL emu_ptr+1,X                ;6
(1)  872/    CC76 :                             ;ASL                                    ;2
(1)  872/    CC76 :                             ;ROL emu_ptr+1,X                ;6
(1)  872/    CC76 :                             ;STA emu_ptr,X                  ;4                              
(1)  872/    CC76 :                             ;LDA emu_ptr+1,X                ;4
(1)  872/    CC76 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  872/    CC76 :                             ;STA emu_ptr+1,X                ;4
(1)  872/    CC76 :                             ;JMP (emu_ptr2,X)               ;6
(1)  872/    CC76 :                             
(1)  872/    CC76 :                             ;Method 3 - 30 cycles
(1)  872/    CC76 :                             ;TXA                                                    ;2
(1)  872/    CC76 :                             ;TAY                                                    ;2
(1)  872/    CC76 :                             ;LDA (emu_PC,X)                                 ;6
(1)  872/    CC76 :                             ;ASL                                                    ;2
(1)  872/    CC76 :                             ;BCS upper                                              ;2
(1)  872/    CC76 :                             ;lower:
(1)  872/    CC76 :                             ;       ASL                                                     ;2
(1)  872/    CC76 :                             ;       TAX                                                     ;2
(1)  872/    CC76 :                             ;       BCS upper_lower                         ;2
(1)  872/    CC76 :                             ;       lower_lower:
(1)  872/    CC76 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  872/    CC76 :                             ;       upper_lower:
(1)  872/    CC76 :                             ;               JMP (JUMP_TABLE2,X)
(1)  872/    CC76 :                             ;upper:
(1)  872/    CC76 :                             ;       ASL
(1)  872/    CC76 :                             ;       TAX
(1)  872/    CC76 :                             ;       BCS upper_upper
(1)  872/    CC76 :                             ;       lower_upper:
(1)  872/    CC76 :                             ;               JMP (JUMP_TABLE3,X)
(1)  872/    CC76 :                             ;       upper_upper:
(1)  872/    CC76 :                             ;               JMP (JUMP_TABLE4,X)
(1)  872/    CC76 :                             ;After jump:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 259 - 1/5/2022 12:19:0


(1)  872/    CC76 :                             ;TYA                                                    ;2
(1)  872/    CC76 :                             ;TAX                                                    ;2
(1)  872/    CC76 :                             
(1)  872/    CC76 :                             ;Method 4 - 28 cycles
(1)  872/    CC76 :                             ;LDA (emu_PC,X)                 ;6
(1)  872/    CC76 :                             ;TAY                                    ;2
(1)  872/    CC76 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  872/    CC76 :                             ;PHA                                    ;3
(1)  872/    CC76 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  872/    CC76 :                             ;PHA                                    ;3
(1)  872/    CC76 :                             ;RTS                                    ;6
(1)  872/    CC76 :                             
(1)  872/    CC76 :                             ;Method 5 - 30 cycles
(1)  872/    CC76 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  872/    CC78 : A8                          TAY                                             ;2
(1)  872/    CC79 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  872/    CC7C : 95 0A                       STA emu_ptr,X                   ;4
(1)  872/    CC7E : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  872/    CC81 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  872/    CC83 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  872/    CC86 :                                                     
(1)  873/    CC86 :                     
(1)  874/    CC86 :                     	;0xAE - LDX ABS
(1)  875/    CC86 :                     	LDX_ABS:
(1)  876/    CC86 : (MACRO)             		OP_MACRO 174, "LDX", "ABS", "LDX_ABS"
(1)  876/    CC86 :                             ;TODO
(1)  877/    CC86 : (MACRO)             		NEXT_MACRO
(1)  877/    CC86 :                                             
(1)  877/    CC86 :  (MACRO-2)                  halt
(1)  877/    CC86 : 00                          BRK
(1)  877/    CC87 : 00                          BRK
(1)  877/    CC88 :                             
(1)  877/    CC88 :                             ;Method 1 - 60 cycles
(1)  877/    CC88 :                             ;Jump table must be page aligned!!!
(1)  877/    CC88 :                             ;LDA (emu_PC,X)                 ;6
(1)  877/    CC88 :                             ;ASL                                    ;2
(1)  877/    CC88 :                             ;STA emu_ptr,X                  ;4
(1)  877/    CC88 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  877/    CC88 :                             ;ADC #0                                 ;2
(1)  877/    CC88 :                             ;STA emu_ptr+1,X                ;4
(1)  877/    CC88 :                             ;LDA (emu_ptr,X)                ;6
(1)  877/    CC88 :                             ;STA emu_ptr2,X                 ;4
(1)  877/    CC88 :                             ;INC emu_ptr,X                  ;6
(1)  877/    CC88 :                             ;BCC .skip                              ;2
(1)  877/    CC88 :                             ;       INC emu_ptr+1,X         ;6
(1)  877/    CC88 :                             ;.skip:
(1)  877/    CC88 :                             ;LDA (emu_ptr,X)                ;6
(1)  877/    CC88 :                             ;STA emu_ptr2+1,X               ;4
(1)  877/    CC88 :                             ;JMP (emu_ptr2,X)               ;6
(1)  877/    CC88 :                             
(1)  877/    CC88 :                             ;Method 2 - 46 cycles
(1)  877/    CC88 :                             ;Jump table must be page aligned!!!
(1)  877/    CC88 :                             ;LDA (emu_PC,X)                 ;6
(1)  877/    CC88 :                             ;STZ emu_ptr+1,X                ;4
(1)  877/    CC88 :                             ;ASL                                    ;2
(1)  877/    CC88 :                             ;ROL emu_ptr+1,X                ;6
(1)  877/    CC88 :                             ;ASL                                    ;2
(1)  877/    CC88 :                             ;ROL emu_ptr+1,X                ;6
(1)  877/    CC88 :                             ;STA emu_ptr,X                  ;4                              
(1)  877/    CC88 :                             ;LDA emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 260 - 1/5/2022 12:19:0


(1)  877/    CC88 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  877/    CC88 :                             ;STA emu_ptr+1,X                ;4
(1)  877/    CC88 :                             ;JMP (emu_ptr2,X)               ;6
(1)  877/    CC88 :                             
(1)  877/    CC88 :                             ;Method 3 - 30 cycles
(1)  877/    CC88 :                             ;TXA                                                    ;2
(1)  877/    CC88 :                             ;TAY                                                    ;2
(1)  877/    CC88 :                             ;LDA (emu_PC,X)                                 ;6
(1)  877/    CC88 :                             ;ASL                                                    ;2
(1)  877/    CC88 :                             ;BCS upper                                              ;2
(1)  877/    CC88 :                             ;lower:
(1)  877/    CC88 :                             ;       ASL                                                     ;2
(1)  877/    CC88 :                             ;       TAX                                                     ;2
(1)  877/    CC88 :                             ;       BCS upper_lower                         ;2
(1)  877/    CC88 :                             ;       lower_lower:
(1)  877/    CC88 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  877/    CC88 :                             ;       upper_lower:
(1)  877/    CC88 :                             ;               JMP (JUMP_TABLE2,X)
(1)  877/    CC88 :                             ;upper:
(1)  877/    CC88 :                             ;       ASL
(1)  877/    CC88 :                             ;       TAX
(1)  877/    CC88 :                             ;       BCS upper_upper
(1)  877/    CC88 :                             ;       lower_upper:
(1)  877/    CC88 :                             ;               JMP (JUMP_TABLE3,X)
(1)  877/    CC88 :                             ;       upper_upper:
(1)  877/    CC88 :                             ;               JMP (JUMP_TABLE4,X)
(1)  877/    CC88 :                             ;After jump:
(1)  877/    CC88 :                             ;TYA                                                    ;2
(1)  877/    CC88 :                             ;TAX                                                    ;2
(1)  877/    CC88 :                             
(1)  877/    CC88 :                             ;Method 4 - 28 cycles
(1)  877/    CC88 :                             ;LDA (emu_PC,X)                 ;6
(1)  877/    CC88 :                             ;TAY                                    ;2
(1)  877/    CC88 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  877/    CC88 :                             ;PHA                                    ;3
(1)  877/    CC88 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  877/    CC88 :                             ;PHA                                    ;3
(1)  877/    CC88 :                             ;RTS                                    ;6
(1)  877/    CC88 :                             
(1)  877/    CC88 :                             ;Method 5 - 30 cycles
(1)  877/    CC88 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  877/    CC8A : A8                          TAY                                             ;2
(1)  877/    CC8B : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  877/    CC8E : 95 0A                       STA emu_ptr,X                   ;4
(1)  877/    CC90 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  877/    CC93 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  877/    CC95 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  877/    CC98 :                                                     
(1)  878/    CC98 :                     
(1)  879/    CC98 :                     	;0xAF - NOP
(1)  880/    CC98 :                     	NOP_0xAF:
(1)  881/    CC98 : (MACRO)             		OP_MACRO 175, "NOP", "IMP", "NOP_0xAF"
(1)  881/    CC98 :                             ;TODO
(1)  882/    CC98 : (MACRO)             		NEXT_MACRO
(1)  882/    CC98 :                                             
(1)  882/    CC98 :  (MACRO-2)                  halt
(1)  882/    CC98 : 00                          BRK
(1)  882/    CC99 : 00                          BRK
(1)  882/    CC9A :                             
(1)  882/    CC9A :                             ;Method 1 - 60 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 261 - 1/5/2022 12:19:0


(1)  882/    CC9A :                             ;Jump table must be page aligned!!!
(1)  882/    CC9A :                             ;LDA (emu_PC,X)                 ;6
(1)  882/    CC9A :                             ;ASL                                    ;2
(1)  882/    CC9A :                             ;STA emu_ptr,X                  ;4
(1)  882/    CC9A :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  882/    CC9A :                             ;ADC #0                                 ;2
(1)  882/    CC9A :                             ;STA emu_ptr+1,X                ;4
(1)  882/    CC9A :                             ;LDA (emu_ptr,X)                ;6
(1)  882/    CC9A :                             ;STA emu_ptr2,X                 ;4
(1)  882/    CC9A :                             ;INC emu_ptr,X                  ;6
(1)  882/    CC9A :                             ;BCC .skip                              ;2
(1)  882/    CC9A :                             ;       INC emu_ptr+1,X         ;6
(1)  882/    CC9A :                             ;.skip:
(1)  882/    CC9A :                             ;LDA (emu_ptr,X)                ;6
(1)  882/    CC9A :                             ;STA emu_ptr2+1,X               ;4
(1)  882/    CC9A :                             ;JMP (emu_ptr2,X)               ;6
(1)  882/    CC9A :                             
(1)  882/    CC9A :                             ;Method 2 - 46 cycles
(1)  882/    CC9A :                             ;Jump table must be page aligned!!!
(1)  882/    CC9A :                             ;LDA (emu_PC,X)                 ;6
(1)  882/    CC9A :                             ;STZ emu_ptr+1,X                ;4
(1)  882/    CC9A :                             ;ASL                                    ;2
(1)  882/    CC9A :                             ;ROL emu_ptr+1,X                ;6
(1)  882/    CC9A :                             ;ASL                                    ;2
(1)  882/    CC9A :                             ;ROL emu_ptr+1,X                ;6
(1)  882/    CC9A :                             ;STA emu_ptr,X                  ;4                              
(1)  882/    CC9A :                             ;LDA emu_ptr+1,X                ;4
(1)  882/    CC9A :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  882/    CC9A :                             ;STA emu_ptr+1,X                ;4
(1)  882/    CC9A :                             ;JMP (emu_ptr2,X)               ;6
(1)  882/    CC9A :                             
(1)  882/    CC9A :                             ;Method 3 - 30 cycles
(1)  882/    CC9A :                             ;TXA                                                    ;2
(1)  882/    CC9A :                             ;TAY                                                    ;2
(1)  882/    CC9A :                             ;LDA (emu_PC,X)                                 ;6
(1)  882/    CC9A :                             ;ASL                                                    ;2
(1)  882/    CC9A :                             ;BCS upper                                              ;2
(1)  882/    CC9A :                             ;lower:
(1)  882/    CC9A :                             ;       ASL                                                     ;2
(1)  882/    CC9A :                             ;       TAX                                                     ;2
(1)  882/    CC9A :                             ;       BCS upper_lower                         ;2
(1)  882/    CC9A :                             ;       lower_lower:
(1)  882/    CC9A :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  882/    CC9A :                             ;       upper_lower:
(1)  882/    CC9A :                             ;               JMP (JUMP_TABLE2,X)
(1)  882/    CC9A :                             ;upper:
(1)  882/    CC9A :                             ;       ASL
(1)  882/    CC9A :                             ;       TAX
(1)  882/    CC9A :                             ;       BCS upper_upper
(1)  882/    CC9A :                             ;       lower_upper:
(1)  882/    CC9A :                             ;               JMP (JUMP_TABLE3,X)
(1)  882/    CC9A :                             ;       upper_upper:
(1)  882/    CC9A :                             ;               JMP (JUMP_TABLE4,X)
(1)  882/    CC9A :                             ;After jump:
(1)  882/    CC9A :                             ;TYA                                                    ;2
(1)  882/    CC9A :                             ;TAX                                                    ;2
(1)  882/    CC9A :                             
(1)  882/    CC9A :                             ;Method 4 - 28 cycles
(1)  882/    CC9A :                             ;LDA (emu_PC,X)                 ;6
(1)  882/    CC9A :                             ;TAY                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 262 - 1/5/2022 12:19:0


(1)  882/    CC9A :                             ;LDA JUMP_TABLE,Y               ;4
(1)  882/    CC9A :                             ;PHA                                    ;3
(1)  882/    CC9A :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  882/    CC9A :                             ;PHA                                    ;3
(1)  882/    CC9A :                             ;RTS                                    ;6
(1)  882/    CC9A :                             
(1)  882/    CC9A :                             ;Method 5 - 30 cycles
(1)  882/    CC9A : A1 02                       LDA (emu_PC,X)                  ;6
(1)  882/    CC9C : A8                          TAY                                             ;2
(1)  882/    CC9D : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  882/    CCA0 : 95 0A                       STA emu_ptr,X                   ;4
(1)  882/    CCA2 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  882/    CCA5 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  882/    CCA7 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  882/    CCAA :                                                     
(1)  883/    CCAA :                     
(1)  884/    CCAA :                     	;0xB0 - BCS REL
(1)  885/    CCAA :                     	BCS_REL:
(1)  886/    CCAA : (MACRO)             		OP_MACRO 176, "BCS", "REL", "BCS_REL"
(1)  886/    CCAA :                             ;TODO
(1)  887/    CCAA : (MACRO)             		NEXT_MACRO
(1)  887/    CCAA :                                             
(1)  887/    CCAA :  (MACRO-2)                  halt
(1)  887/    CCAA : 00                          BRK
(1)  887/    CCAB : 00                          BRK
(1)  887/    CCAC :                             
(1)  887/    CCAC :                             ;Method 1 - 60 cycles
(1)  887/    CCAC :                             ;Jump table must be page aligned!!!
(1)  887/    CCAC :                             ;LDA (emu_PC,X)                 ;6
(1)  887/    CCAC :                             ;ASL                                    ;2
(1)  887/    CCAC :                             ;STA emu_ptr,X                  ;4
(1)  887/    CCAC :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  887/    CCAC :                             ;ADC #0                                 ;2
(1)  887/    CCAC :                             ;STA emu_ptr+1,X                ;4
(1)  887/    CCAC :                             ;LDA (emu_ptr,X)                ;6
(1)  887/    CCAC :                             ;STA emu_ptr2,X                 ;4
(1)  887/    CCAC :                             ;INC emu_ptr,X                  ;6
(1)  887/    CCAC :                             ;BCC .skip                              ;2
(1)  887/    CCAC :                             ;       INC emu_ptr+1,X         ;6
(1)  887/    CCAC :                             ;.skip:
(1)  887/    CCAC :                             ;LDA (emu_ptr,X)                ;6
(1)  887/    CCAC :                             ;STA emu_ptr2+1,X               ;4
(1)  887/    CCAC :                             ;JMP (emu_ptr2,X)               ;6
(1)  887/    CCAC :                             
(1)  887/    CCAC :                             ;Method 2 - 46 cycles
(1)  887/    CCAC :                             ;Jump table must be page aligned!!!
(1)  887/    CCAC :                             ;LDA (emu_PC,X)                 ;6
(1)  887/    CCAC :                             ;STZ emu_ptr+1,X                ;4
(1)  887/    CCAC :                             ;ASL                                    ;2
(1)  887/    CCAC :                             ;ROL emu_ptr+1,X                ;6
(1)  887/    CCAC :                             ;ASL                                    ;2
(1)  887/    CCAC :                             ;ROL emu_ptr+1,X                ;6
(1)  887/    CCAC :                             ;STA emu_ptr,X                  ;4                              
(1)  887/    CCAC :                             ;LDA emu_ptr+1,X                ;4
(1)  887/    CCAC :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  887/    CCAC :                             ;STA emu_ptr+1,X                ;4
(1)  887/    CCAC :                             ;JMP (emu_ptr2,X)               ;6
(1)  887/    CCAC :                             
(1)  887/    CCAC :                             ;Method 3 - 30 cycles
(1)  887/    CCAC :                             ;TXA                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 263 - 1/5/2022 12:19:0


(1)  887/    CCAC :                             ;TAY                                                    ;2
(1)  887/    CCAC :                             ;LDA (emu_PC,X)                                 ;6
(1)  887/    CCAC :                             ;ASL                                                    ;2
(1)  887/    CCAC :                             ;BCS upper                                              ;2
(1)  887/    CCAC :                             ;lower:
(1)  887/    CCAC :                             ;       ASL                                                     ;2
(1)  887/    CCAC :                             ;       TAX                                                     ;2
(1)  887/    CCAC :                             ;       BCS upper_lower                         ;2
(1)  887/    CCAC :                             ;       lower_lower:
(1)  887/    CCAC :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  887/    CCAC :                             ;       upper_lower:
(1)  887/    CCAC :                             ;               JMP (JUMP_TABLE2,X)
(1)  887/    CCAC :                             ;upper:
(1)  887/    CCAC :                             ;       ASL
(1)  887/    CCAC :                             ;       TAX
(1)  887/    CCAC :                             ;       BCS upper_upper
(1)  887/    CCAC :                             ;       lower_upper:
(1)  887/    CCAC :                             ;               JMP (JUMP_TABLE3,X)
(1)  887/    CCAC :                             ;       upper_upper:
(1)  887/    CCAC :                             ;               JMP (JUMP_TABLE4,X)
(1)  887/    CCAC :                             ;After jump:
(1)  887/    CCAC :                             ;TYA                                                    ;2
(1)  887/    CCAC :                             ;TAX                                                    ;2
(1)  887/    CCAC :                             
(1)  887/    CCAC :                             ;Method 4 - 28 cycles
(1)  887/    CCAC :                             ;LDA (emu_PC,X)                 ;6
(1)  887/    CCAC :                             ;TAY                                    ;2
(1)  887/    CCAC :                             ;LDA JUMP_TABLE,Y               ;4
(1)  887/    CCAC :                             ;PHA                                    ;3
(1)  887/    CCAC :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  887/    CCAC :                             ;PHA                                    ;3
(1)  887/    CCAC :                             ;RTS                                    ;6
(1)  887/    CCAC :                             
(1)  887/    CCAC :                             ;Method 5 - 30 cycles
(1)  887/    CCAC : A1 02                       LDA (emu_PC,X)                  ;6
(1)  887/    CCAE : A8                          TAY                                             ;2
(1)  887/    CCAF : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  887/    CCB2 : 95 0A                       STA emu_ptr,X                   ;4
(1)  887/    CCB4 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  887/    CCB7 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  887/    CCB9 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  887/    CCBC :                                                     
(1)  888/    CCBC :                     
(1)  889/    CCBC :                     	;0xB1 - LDA IY
(1)  890/    CCBC :                     	LDA_IY:
(1)  891/    CCBC : (MACRO)             		OP_MACRO 177, "LDA", "IY", "LDA_IY"
(1)  891/    CCBC :                             ;TODO
(1)  892/    CCBC : (MACRO)             		NEXT_MACRO
(1)  892/    CCBC :                                             
(1)  892/    CCBC :  (MACRO-2)                  halt
(1)  892/    CCBC : 00                          BRK
(1)  892/    CCBD : 00                          BRK
(1)  892/    CCBE :                             
(1)  892/    CCBE :                             ;Method 1 - 60 cycles
(1)  892/    CCBE :                             ;Jump table must be page aligned!!!
(1)  892/    CCBE :                             ;LDA (emu_PC,X)                 ;6
(1)  892/    CCBE :                             ;ASL                                    ;2
(1)  892/    CCBE :                             ;STA emu_ptr,X                  ;4
(1)  892/    CCBE :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  892/    CCBE :                             ;ADC #0                                 ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 264 - 1/5/2022 12:19:0


(1)  892/    CCBE :                             ;STA emu_ptr+1,X                ;4
(1)  892/    CCBE :                             ;LDA (emu_ptr,X)                ;6
(1)  892/    CCBE :                             ;STA emu_ptr2,X                 ;4
(1)  892/    CCBE :                             ;INC emu_ptr,X                  ;6
(1)  892/    CCBE :                             ;BCC .skip                              ;2
(1)  892/    CCBE :                             ;       INC emu_ptr+1,X         ;6
(1)  892/    CCBE :                             ;.skip:
(1)  892/    CCBE :                             ;LDA (emu_ptr,X)                ;6
(1)  892/    CCBE :                             ;STA emu_ptr2+1,X               ;4
(1)  892/    CCBE :                             ;JMP (emu_ptr2,X)               ;6
(1)  892/    CCBE :                             
(1)  892/    CCBE :                             ;Method 2 - 46 cycles
(1)  892/    CCBE :                             ;Jump table must be page aligned!!!
(1)  892/    CCBE :                             ;LDA (emu_PC,X)                 ;6
(1)  892/    CCBE :                             ;STZ emu_ptr+1,X                ;4
(1)  892/    CCBE :                             ;ASL                                    ;2
(1)  892/    CCBE :                             ;ROL emu_ptr+1,X                ;6
(1)  892/    CCBE :                             ;ASL                                    ;2
(1)  892/    CCBE :                             ;ROL emu_ptr+1,X                ;6
(1)  892/    CCBE :                             ;STA emu_ptr,X                  ;4                              
(1)  892/    CCBE :                             ;LDA emu_ptr+1,X                ;4
(1)  892/    CCBE :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  892/    CCBE :                             ;STA emu_ptr+1,X                ;4
(1)  892/    CCBE :                             ;JMP (emu_ptr2,X)               ;6
(1)  892/    CCBE :                             
(1)  892/    CCBE :                             ;Method 3 - 30 cycles
(1)  892/    CCBE :                             ;TXA                                                    ;2
(1)  892/    CCBE :                             ;TAY                                                    ;2
(1)  892/    CCBE :                             ;LDA (emu_PC,X)                                 ;6
(1)  892/    CCBE :                             ;ASL                                                    ;2
(1)  892/    CCBE :                             ;BCS upper                                              ;2
(1)  892/    CCBE :                             ;lower:
(1)  892/    CCBE :                             ;       ASL                                                     ;2
(1)  892/    CCBE :                             ;       TAX                                                     ;2
(1)  892/    CCBE :                             ;       BCS upper_lower                         ;2
(1)  892/    CCBE :                             ;       lower_lower:
(1)  892/    CCBE :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  892/    CCBE :                             ;       upper_lower:
(1)  892/    CCBE :                             ;               JMP (JUMP_TABLE2,X)
(1)  892/    CCBE :                             ;upper:
(1)  892/    CCBE :                             ;       ASL
(1)  892/    CCBE :                             ;       TAX
(1)  892/    CCBE :                             ;       BCS upper_upper
(1)  892/    CCBE :                             ;       lower_upper:
(1)  892/    CCBE :                             ;               JMP (JUMP_TABLE3,X)
(1)  892/    CCBE :                             ;       upper_upper:
(1)  892/    CCBE :                             ;               JMP (JUMP_TABLE4,X)
(1)  892/    CCBE :                             ;After jump:
(1)  892/    CCBE :                             ;TYA                                                    ;2
(1)  892/    CCBE :                             ;TAX                                                    ;2
(1)  892/    CCBE :                             
(1)  892/    CCBE :                             ;Method 4 - 28 cycles
(1)  892/    CCBE :                             ;LDA (emu_PC,X)                 ;6
(1)  892/    CCBE :                             ;TAY                                    ;2
(1)  892/    CCBE :                             ;LDA JUMP_TABLE,Y               ;4
(1)  892/    CCBE :                             ;PHA                                    ;3
(1)  892/    CCBE :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  892/    CCBE :                             ;PHA                                    ;3
(1)  892/    CCBE :                             ;RTS                                    ;6
(1)  892/    CCBE :                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 265 - 1/5/2022 12:19:0


(1)  892/    CCBE :                             ;Method 5 - 30 cycles
(1)  892/    CCBE : A1 02                       LDA (emu_PC,X)                  ;6
(1)  892/    CCC0 : A8                          TAY                                             ;2
(1)  892/    CCC1 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  892/    CCC4 : 95 0A                       STA emu_ptr,X                   ;4
(1)  892/    CCC6 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  892/    CCC9 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  892/    CCCB : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  892/    CCCE :                                                     
(1)  893/    CCCE :                     
(1)  894/    CCCE :                     	;0xB2 - NOP
(1)  895/    CCCE :                     	NOP_0xB2:
(1)  896/    CCCE : (MACRO)             		OP_MACRO 178, "NOP", "IMP", "NOP_0xB2"
(1)  896/    CCCE :                             ;TODO
(1)  897/    CCCE : (MACRO)             		NEXT_MACRO
(1)  897/    CCCE :                                             
(1)  897/    CCCE :  (MACRO-2)                  halt
(1)  897/    CCCE : 00                          BRK
(1)  897/    CCCF : 00                          BRK
(1)  897/    CCD0 :                             
(1)  897/    CCD0 :                             ;Method 1 - 60 cycles
(1)  897/    CCD0 :                             ;Jump table must be page aligned!!!
(1)  897/    CCD0 :                             ;LDA (emu_PC,X)                 ;6
(1)  897/    CCD0 :                             ;ASL                                    ;2
(1)  897/    CCD0 :                             ;STA emu_ptr,X                  ;4
(1)  897/    CCD0 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  897/    CCD0 :                             ;ADC #0                                 ;2
(1)  897/    CCD0 :                             ;STA emu_ptr+1,X                ;4
(1)  897/    CCD0 :                             ;LDA (emu_ptr,X)                ;6
(1)  897/    CCD0 :                             ;STA emu_ptr2,X                 ;4
(1)  897/    CCD0 :                             ;INC emu_ptr,X                  ;6
(1)  897/    CCD0 :                             ;BCC .skip                              ;2
(1)  897/    CCD0 :                             ;       INC emu_ptr+1,X         ;6
(1)  897/    CCD0 :                             ;.skip:
(1)  897/    CCD0 :                             ;LDA (emu_ptr,X)                ;6
(1)  897/    CCD0 :                             ;STA emu_ptr2+1,X               ;4
(1)  897/    CCD0 :                             ;JMP (emu_ptr2,X)               ;6
(1)  897/    CCD0 :                             
(1)  897/    CCD0 :                             ;Method 2 - 46 cycles
(1)  897/    CCD0 :                             ;Jump table must be page aligned!!!
(1)  897/    CCD0 :                             ;LDA (emu_PC,X)                 ;6
(1)  897/    CCD0 :                             ;STZ emu_ptr+1,X                ;4
(1)  897/    CCD0 :                             ;ASL                                    ;2
(1)  897/    CCD0 :                             ;ROL emu_ptr+1,X                ;6
(1)  897/    CCD0 :                             ;ASL                                    ;2
(1)  897/    CCD0 :                             ;ROL emu_ptr+1,X                ;6
(1)  897/    CCD0 :                             ;STA emu_ptr,X                  ;4                              
(1)  897/    CCD0 :                             ;LDA emu_ptr+1,X                ;4
(1)  897/    CCD0 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  897/    CCD0 :                             ;STA emu_ptr+1,X                ;4
(1)  897/    CCD0 :                             ;JMP (emu_ptr2,X)               ;6
(1)  897/    CCD0 :                             
(1)  897/    CCD0 :                             ;Method 3 - 30 cycles
(1)  897/    CCD0 :                             ;TXA                                                    ;2
(1)  897/    CCD0 :                             ;TAY                                                    ;2
(1)  897/    CCD0 :                             ;LDA (emu_PC,X)                                 ;6
(1)  897/    CCD0 :                             ;ASL                                                    ;2
(1)  897/    CCD0 :                             ;BCS upper                                              ;2
(1)  897/    CCD0 :                             ;lower:
(1)  897/    CCD0 :                             ;       ASL                                                     ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 266 - 1/5/2022 12:19:0


(1)  897/    CCD0 :                             ;       TAX                                                     ;2
(1)  897/    CCD0 :                             ;       BCS upper_lower                         ;2
(1)  897/    CCD0 :                             ;       lower_lower:
(1)  897/    CCD0 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  897/    CCD0 :                             ;       upper_lower:
(1)  897/    CCD0 :                             ;               JMP (JUMP_TABLE2,X)
(1)  897/    CCD0 :                             ;upper:
(1)  897/    CCD0 :                             ;       ASL
(1)  897/    CCD0 :                             ;       TAX
(1)  897/    CCD0 :                             ;       BCS upper_upper
(1)  897/    CCD0 :                             ;       lower_upper:
(1)  897/    CCD0 :                             ;               JMP (JUMP_TABLE3,X)
(1)  897/    CCD0 :                             ;       upper_upper:
(1)  897/    CCD0 :                             ;               JMP (JUMP_TABLE4,X)
(1)  897/    CCD0 :                             ;After jump:
(1)  897/    CCD0 :                             ;TYA                                                    ;2
(1)  897/    CCD0 :                             ;TAX                                                    ;2
(1)  897/    CCD0 :                             
(1)  897/    CCD0 :                             ;Method 4 - 28 cycles
(1)  897/    CCD0 :                             ;LDA (emu_PC,X)                 ;6
(1)  897/    CCD0 :                             ;TAY                                    ;2
(1)  897/    CCD0 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  897/    CCD0 :                             ;PHA                                    ;3
(1)  897/    CCD0 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  897/    CCD0 :                             ;PHA                                    ;3
(1)  897/    CCD0 :                             ;RTS                                    ;6
(1)  897/    CCD0 :                             
(1)  897/    CCD0 :                             ;Method 5 - 30 cycles
(1)  897/    CCD0 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  897/    CCD2 : A8                          TAY                                             ;2
(1)  897/    CCD3 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  897/    CCD6 : 95 0A                       STA emu_ptr,X                   ;4
(1)  897/    CCD8 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  897/    CCDB : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  897/    CCDD : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  897/    CCE0 :                                                     
(1)  898/    CCE0 :                     
(1)  899/    CCE0 :                     	;0xB3 - NOP
(1)  900/    CCE0 :                     	NOP_0xB3:
(1)  901/    CCE0 : (MACRO)             		OP_MACRO 179, "NOP", "IMP", "NOP_0xB3"
(1)  901/    CCE0 :                             ;TODO
(1)  902/    CCE0 : (MACRO)             		NEXT_MACRO
(1)  902/    CCE0 :                                             
(1)  902/    CCE0 :  (MACRO-2)                  halt
(1)  902/    CCE0 : 00                          BRK
(1)  902/    CCE1 : 00                          BRK
(1)  902/    CCE2 :                             
(1)  902/    CCE2 :                             ;Method 1 - 60 cycles
(1)  902/    CCE2 :                             ;Jump table must be page aligned!!!
(1)  902/    CCE2 :                             ;LDA (emu_PC,X)                 ;6
(1)  902/    CCE2 :                             ;ASL                                    ;2
(1)  902/    CCE2 :                             ;STA emu_ptr,X                  ;4
(1)  902/    CCE2 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  902/    CCE2 :                             ;ADC #0                                 ;2
(1)  902/    CCE2 :                             ;STA emu_ptr+1,X                ;4
(1)  902/    CCE2 :                             ;LDA (emu_ptr,X)                ;6
(1)  902/    CCE2 :                             ;STA emu_ptr2,X                 ;4
(1)  902/    CCE2 :                             ;INC emu_ptr,X                  ;6
(1)  902/    CCE2 :                             ;BCC .skip                              ;2
(1)  902/    CCE2 :                             ;       INC emu_ptr+1,X         ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 267 - 1/5/2022 12:19:0


(1)  902/    CCE2 :                             ;.skip:
(1)  902/    CCE2 :                             ;LDA (emu_ptr,X)                ;6
(1)  902/    CCE2 :                             ;STA emu_ptr2+1,X               ;4
(1)  902/    CCE2 :                             ;JMP (emu_ptr2,X)               ;6
(1)  902/    CCE2 :                             
(1)  902/    CCE2 :                             ;Method 2 - 46 cycles
(1)  902/    CCE2 :                             ;Jump table must be page aligned!!!
(1)  902/    CCE2 :                             ;LDA (emu_PC,X)                 ;6
(1)  902/    CCE2 :                             ;STZ emu_ptr+1,X                ;4
(1)  902/    CCE2 :                             ;ASL                                    ;2
(1)  902/    CCE2 :                             ;ROL emu_ptr+1,X                ;6
(1)  902/    CCE2 :                             ;ASL                                    ;2
(1)  902/    CCE2 :                             ;ROL emu_ptr+1,X                ;6
(1)  902/    CCE2 :                             ;STA emu_ptr,X                  ;4                              
(1)  902/    CCE2 :                             ;LDA emu_ptr+1,X                ;4
(1)  902/    CCE2 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  902/    CCE2 :                             ;STA emu_ptr+1,X                ;4
(1)  902/    CCE2 :                             ;JMP (emu_ptr2,X)               ;6
(1)  902/    CCE2 :                             
(1)  902/    CCE2 :                             ;Method 3 - 30 cycles
(1)  902/    CCE2 :                             ;TXA                                                    ;2
(1)  902/    CCE2 :                             ;TAY                                                    ;2
(1)  902/    CCE2 :                             ;LDA (emu_PC,X)                                 ;6
(1)  902/    CCE2 :                             ;ASL                                                    ;2
(1)  902/    CCE2 :                             ;BCS upper                                              ;2
(1)  902/    CCE2 :                             ;lower:
(1)  902/    CCE2 :                             ;       ASL                                                     ;2
(1)  902/    CCE2 :                             ;       TAX                                                     ;2
(1)  902/    CCE2 :                             ;       BCS upper_lower                         ;2
(1)  902/    CCE2 :                             ;       lower_lower:
(1)  902/    CCE2 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  902/    CCE2 :                             ;       upper_lower:
(1)  902/    CCE2 :                             ;               JMP (JUMP_TABLE2,X)
(1)  902/    CCE2 :                             ;upper:
(1)  902/    CCE2 :                             ;       ASL
(1)  902/    CCE2 :                             ;       TAX
(1)  902/    CCE2 :                             ;       BCS upper_upper
(1)  902/    CCE2 :                             ;       lower_upper:
(1)  902/    CCE2 :                             ;               JMP (JUMP_TABLE3,X)
(1)  902/    CCE2 :                             ;       upper_upper:
(1)  902/    CCE2 :                             ;               JMP (JUMP_TABLE4,X)
(1)  902/    CCE2 :                             ;After jump:
(1)  902/    CCE2 :                             ;TYA                                                    ;2
(1)  902/    CCE2 :                             ;TAX                                                    ;2
(1)  902/    CCE2 :                             
(1)  902/    CCE2 :                             ;Method 4 - 28 cycles
(1)  902/    CCE2 :                             ;LDA (emu_PC,X)                 ;6
(1)  902/    CCE2 :                             ;TAY                                    ;2
(1)  902/    CCE2 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  902/    CCE2 :                             ;PHA                                    ;3
(1)  902/    CCE2 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  902/    CCE2 :                             ;PHA                                    ;3
(1)  902/    CCE2 :                             ;RTS                                    ;6
(1)  902/    CCE2 :                             
(1)  902/    CCE2 :                             ;Method 5 - 30 cycles
(1)  902/    CCE2 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  902/    CCE4 : A8                          TAY                                             ;2
(1)  902/    CCE5 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  902/    CCE8 : 95 0A                       STA emu_ptr,X                   ;4
(1)  902/    CCEA : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 268 - 1/5/2022 12:19:0


(1)  902/    CCED : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  902/    CCEF : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  902/    CCF2 :                                                     
(1)  903/    CCF2 :                     
(1)  904/    CCF2 :                     	;0xB4 - LDY ZPX
(1)  905/    CCF2 :                     	LDY_ZPX:
(1)  906/    CCF2 : (MACRO)             		OP_MACRO 180, "LDY", "ZPX", "LDY_ZPX"
(1)  906/    CCF2 :                             ;TODO
(1)  907/    CCF2 : (MACRO)             		NEXT_MACRO
(1)  907/    CCF2 :                                             
(1)  907/    CCF2 :  (MACRO-2)                  halt
(1)  907/    CCF2 : 00                          BRK
(1)  907/    CCF3 : 00                          BRK
(1)  907/    CCF4 :                             
(1)  907/    CCF4 :                             ;Method 1 - 60 cycles
(1)  907/    CCF4 :                             ;Jump table must be page aligned!!!
(1)  907/    CCF4 :                             ;LDA (emu_PC,X)                 ;6
(1)  907/    CCF4 :                             ;ASL                                    ;2
(1)  907/    CCF4 :                             ;STA emu_ptr,X                  ;4
(1)  907/    CCF4 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  907/    CCF4 :                             ;ADC #0                                 ;2
(1)  907/    CCF4 :                             ;STA emu_ptr+1,X                ;4
(1)  907/    CCF4 :                             ;LDA (emu_ptr,X)                ;6
(1)  907/    CCF4 :                             ;STA emu_ptr2,X                 ;4
(1)  907/    CCF4 :                             ;INC emu_ptr,X                  ;6
(1)  907/    CCF4 :                             ;BCC .skip                              ;2
(1)  907/    CCF4 :                             ;       INC emu_ptr+1,X         ;6
(1)  907/    CCF4 :                             ;.skip:
(1)  907/    CCF4 :                             ;LDA (emu_ptr,X)                ;6
(1)  907/    CCF4 :                             ;STA emu_ptr2+1,X               ;4
(1)  907/    CCF4 :                             ;JMP (emu_ptr2,X)               ;6
(1)  907/    CCF4 :                             
(1)  907/    CCF4 :                             ;Method 2 - 46 cycles
(1)  907/    CCF4 :                             ;Jump table must be page aligned!!!
(1)  907/    CCF4 :                             ;LDA (emu_PC,X)                 ;6
(1)  907/    CCF4 :                             ;STZ emu_ptr+1,X                ;4
(1)  907/    CCF4 :                             ;ASL                                    ;2
(1)  907/    CCF4 :                             ;ROL emu_ptr+1,X                ;6
(1)  907/    CCF4 :                             ;ASL                                    ;2
(1)  907/    CCF4 :                             ;ROL emu_ptr+1,X                ;6
(1)  907/    CCF4 :                             ;STA emu_ptr,X                  ;4                              
(1)  907/    CCF4 :                             ;LDA emu_ptr+1,X                ;4
(1)  907/    CCF4 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  907/    CCF4 :                             ;STA emu_ptr+1,X                ;4
(1)  907/    CCF4 :                             ;JMP (emu_ptr2,X)               ;6
(1)  907/    CCF4 :                             
(1)  907/    CCF4 :                             ;Method 3 - 30 cycles
(1)  907/    CCF4 :                             ;TXA                                                    ;2
(1)  907/    CCF4 :                             ;TAY                                                    ;2
(1)  907/    CCF4 :                             ;LDA (emu_PC,X)                                 ;6
(1)  907/    CCF4 :                             ;ASL                                                    ;2
(1)  907/    CCF4 :                             ;BCS upper                                              ;2
(1)  907/    CCF4 :                             ;lower:
(1)  907/    CCF4 :                             ;       ASL                                                     ;2
(1)  907/    CCF4 :                             ;       TAX                                                     ;2
(1)  907/    CCF4 :                             ;       BCS upper_lower                         ;2
(1)  907/    CCF4 :                             ;       lower_lower:
(1)  907/    CCF4 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  907/    CCF4 :                             ;       upper_lower:
(1)  907/    CCF4 :                             ;               JMP (JUMP_TABLE2,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 269 - 1/5/2022 12:19:0


(1)  907/    CCF4 :                             ;upper:
(1)  907/    CCF4 :                             ;       ASL
(1)  907/    CCF4 :                             ;       TAX
(1)  907/    CCF4 :                             ;       BCS upper_upper
(1)  907/    CCF4 :                             ;       lower_upper:
(1)  907/    CCF4 :                             ;               JMP (JUMP_TABLE3,X)
(1)  907/    CCF4 :                             ;       upper_upper:
(1)  907/    CCF4 :                             ;               JMP (JUMP_TABLE4,X)
(1)  907/    CCF4 :                             ;After jump:
(1)  907/    CCF4 :                             ;TYA                                                    ;2
(1)  907/    CCF4 :                             ;TAX                                                    ;2
(1)  907/    CCF4 :                             
(1)  907/    CCF4 :                             ;Method 4 - 28 cycles
(1)  907/    CCF4 :                             ;LDA (emu_PC,X)                 ;6
(1)  907/    CCF4 :                             ;TAY                                    ;2
(1)  907/    CCF4 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  907/    CCF4 :                             ;PHA                                    ;3
(1)  907/    CCF4 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  907/    CCF4 :                             ;PHA                                    ;3
(1)  907/    CCF4 :                             ;RTS                                    ;6
(1)  907/    CCF4 :                             
(1)  907/    CCF4 :                             ;Method 5 - 30 cycles
(1)  907/    CCF4 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  907/    CCF6 : A8                          TAY                                             ;2
(1)  907/    CCF7 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  907/    CCFA : 95 0A                       STA emu_ptr,X                   ;4
(1)  907/    CCFC : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  907/    CCFF : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  907/    CD01 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  907/    CD04 :                                                     
(1)  908/    CD04 :                     
(1)  909/    CD04 :                     	;0xB5 - LDA ZPX
(1)  910/    CD04 :                     	LDA_ZPX:
(1)  911/    CD04 : (MACRO)             		OP_MACRO 181, "LDA", "ZPX", "LDA_ZPX"
(1)  911/    CD04 :                             ;TODO
(1)  912/    CD04 : (MACRO)             		NEXT_MACRO
(1)  912/    CD04 :                                             
(1)  912/    CD04 :  (MACRO-2)                  halt
(1)  912/    CD04 : 00                          BRK
(1)  912/    CD05 : 00                          BRK
(1)  912/    CD06 :                             
(1)  912/    CD06 :                             ;Method 1 - 60 cycles
(1)  912/    CD06 :                             ;Jump table must be page aligned!!!
(1)  912/    CD06 :                             ;LDA (emu_PC,X)                 ;6
(1)  912/    CD06 :                             ;ASL                                    ;2
(1)  912/    CD06 :                             ;STA emu_ptr,X                  ;4
(1)  912/    CD06 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  912/    CD06 :                             ;ADC #0                                 ;2
(1)  912/    CD06 :                             ;STA emu_ptr+1,X                ;4
(1)  912/    CD06 :                             ;LDA (emu_ptr,X)                ;6
(1)  912/    CD06 :                             ;STA emu_ptr2,X                 ;4
(1)  912/    CD06 :                             ;INC emu_ptr,X                  ;6
(1)  912/    CD06 :                             ;BCC .skip                              ;2
(1)  912/    CD06 :                             ;       INC emu_ptr+1,X         ;6
(1)  912/    CD06 :                             ;.skip:
(1)  912/    CD06 :                             ;LDA (emu_ptr,X)                ;6
(1)  912/    CD06 :                             ;STA emu_ptr2+1,X               ;4
(1)  912/    CD06 :                             ;JMP (emu_ptr2,X)               ;6
(1)  912/    CD06 :                             
(1)  912/    CD06 :                             ;Method 2 - 46 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 270 - 1/5/2022 12:19:0


(1)  912/    CD06 :                             ;Jump table must be page aligned!!!
(1)  912/    CD06 :                             ;LDA (emu_PC,X)                 ;6
(1)  912/    CD06 :                             ;STZ emu_ptr+1,X                ;4
(1)  912/    CD06 :                             ;ASL                                    ;2
(1)  912/    CD06 :                             ;ROL emu_ptr+1,X                ;6
(1)  912/    CD06 :                             ;ASL                                    ;2
(1)  912/    CD06 :                             ;ROL emu_ptr+1,X                ;6
(1)  912/    CD06 :                             ;STA emu_ptr,X                  ;4                              
(1)  912/    CD06 :                             ;LDA emu_ptr+1,X                ;4
(1)  912/    CD06 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  912/    CD06 :                             ;STA emu_ptr+1,X                ;4
(1)  912/    CD06 :                             ;JMP (emu_ptr2,X)               ;6
(1)  912/    CD06 :                             
(1)  912/    CD06 :                             ;Method 3 - 30 cycles
(1)  912/    CD06 :                             ;TXA                                                    ;2
(1)  912/    CD06 :                             ;TAY                                                    ;2
(1)  912/    CD06 :                             ;LDA (emu_PC,X)                                 ;6
(1)  912/    CD06 :                             ;ASL                                                    ;2
(1)  912/    CD06 :                             ;BCS upper                                              ;2
(1)  912/    CD06 :                             ;lower:
(1)  912/    CD06 :                             ;       ASL                                                     ;2
(1)  912/    CD06 :                             ;       TAX                                                     ;2
(1)  912/    CD06 :                             ;       BCS upper_lower                         ;2
(1)  912/    CD06 :                             ;       lower_lower:
(1)  912/    CD06 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  912/    CD06 :                             ;       upper_lower:
(1)  912/    CD06 :                             ;               JMP (JUMP_TABLE2,X)
(1)  912/    CD06 :                             ;upper:
(1)  912/    CD06 :                             ;       ASL
(1)  912/    CD06 :                             ;       TAX
(1)  912/    CD06 :                             ;       BCS upper_upper
(1)  912/    CD06 :                             ;       lower_upper:
(1)  912/    CD06 :                             ;               JMP (JUMP_TABLE3,X)
(1)  912/    CD06 :                             ;       upper_upper:
(1)  912/    CD06 :                             ;               JMP (JUMP_TABLE4,X)
(1)  912/    CD06 :                             ;After jump:
(1)  912/    CD06 :                             ;TYA                                                    ;2
(1)  912/    CD06 :                             ;TAX                                                    ;2
(1)  912/    CD06 :                             
(1)  912/    CD06 :                             ;Method 4 - 28 cycles
(1)  912/    CD06 :                             ;LDA (emu_PC,X)                 ;6
(1)  912/    CD06 :                             ;TAY                                    ;2
(1)  912/    CD06 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  912/    CD06 :                             ;PHA                                    ;3
(1)  912/    CD06 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  912/    CD06 :                             ;PHA                                    ;3
(1)  912/    CD06 :                             ;RTS                                    ;6
(1)  912/    CD06 :                             
(1)  912/    CD06 :                             ;Method 5 - 30 cycles
(1)  912/    CD06 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  912/    CD08 : A8                          TAY                                             ;2
(1)  912/    CD09 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  912/    CD0C : 95 0A                       STA emu_ptr,X                   ;4
(1)  912/    CD0E : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  912/    CD11 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  912/    CD13 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  912/    CD16 :                                                     
(1)  913/    CD16 :                     
(1)  914/    CD16 :                     	;0xB6 - LDX ZPY
(1)  915/    CD16 :                     	LDX_ZPY:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 271 - 1/5/2022 12:19:0


(1)  916/    CD16 : (MACRO)             		OP_MACRO 182, "LDX", "ZPY", "LDX_ZPY"
(1)  916/    CD16 :                             ;TODO
(1)  917/    CD16 : (MACRO)             		NEXT_MACRO
(1)  917/    CD16 :                                             
(1)  917/    CD16 :  (MACRO-2)                  halt
(1)  917/    CD16 : 00                          BRK
(1)  917/    CD17 : 00                          BRK
(1)  917/    CD18 :                             
(1)  917/    CD18 :                             ;Method 1 - 60 cycles
(1)  917/    CD18 :                             ;Jump table must be page aligned!!!
(1)  917/    CD18 :                             ;LDA (emu_PC,X)                 ;6
(1)  917/    CD18 :                             ;ASL                                    ;2
(1)  917/    CD18 :                             ;STA emu_ptr,X                  ;4
(1)  917/    CD18 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  917/    CD18 :                             ;ADC #0                                 ;2
(1)  917/    CD18 :                             ;STA emu_ptr+1,X                ;4
(1)  917/    CD18 :                             ;LDA (emu_ptr,X)                ;6
(1)  917/    CD18 :                             ;STA emu_ptr2,X                 ;4
(1)  917/    CD18 :                             ;INC emu_ptr,X                  ;6
(1)  917/    CD18 :                             ;BCC .skip                              ;2
(1)  917/    CD18 :                             ;       INC emu_ptr+1,X         ;6
(1)  917/    CD18 :                             ;.skip:
(1)  917/    CD18 :                             ;LDA (emu_ptr,X)                ;6
(1)  917/    CD18 :                             ;STA emu_ptr2+1,X               ;4
(1)  917/    CD18 :                             ;JMP (emu_ptr2,X)               ;6
(1)  917/    CD18 :                             
(1)  917/    CD18 :                             ;Method 2 - 46 cycles
(1)  917/    CD18 :                             ;Jump table must be page aligned!!!
(1)  917/    CD18 :                             ;LDA (emu_PC,X)                 ;6
(1)  917/    CD18 :                             ;STZ emu_ptr+1,X                ;4
(1)  917/    CD18 :                             ;ASL                                    ;2
(1)  917/    CD18 :                             ;ROL emu_ptr+1,X                ;6
(1)  917/    CD18 :                             ;ASL                                    ;2
(1)  917/    CD18 :                             ;ROL emu_ptr+1,X                ;6
(1)  917/    CD18 :                             ;STA emu_ptr,X                  ;4                              
(1)  917/    CD18 :                             ;LDA emu_ptr+1,X                ;4
(1)  917/    CD18 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  917/    CD18 :                             ;STA emu_ptr+1,X                ;4
(1)  917/    CD18 :                             ;JMP (emu_ptr2,X)               ;6
(1)  917/    CD18 :                             
(1)  917/    CD18 :                             ;Method 3 - 30 cycles
(1)  917/    CD18 :                             ;TXA                                                    ;2
(1)  917/    CD18 :                             ;TAY                                                    ;2
(1)  917/    CD18 :                             ;LDA (emu_PC,X)                                 ;6
(1)  917/    CD18 :                             ;ASL                                                    ;2
(1)  917/    CD18 :                             ;BCS upper                                              ;2
(1)  917/    CD18 :                             ;lower:
(1)  917/    CD18 :                             ;       ASL                                                     ;2
(1)  917/    CD18 :                             ;       TAX                                                     ;2
(1)  917/    CD18 :                             ;       BCS upper_lower                         ;2
(1)  917/    CD18 :                             ;       lower_lower:
(1)  917/    CD18 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  917/    CD18 :                             ;       upper_lower:
(1)  917/    CD18 :                             ;               JMP (JUMP_TABLE2,X)
(1)  917/    CD18 :                             ;upper:
(1)  917/    CD18 :                             ;       ASL
(1)  917/    CD18 :                             ;       TAX
(1)  917/    CD18 :                             ;       BCS upper_upper
(1)  917/    CD18 :                             ;       lower_upper:
(1)  917/    CD18 :                             ;               JMP (JUMP_TABLE3,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 272 - 1/5/2022 12:19:0


(1)  917/    CD18 :                             ;       upper_upper:
(1)  917/    CD18 :                             ;               JMP (JUMP_TABLE4,X)
(1)  917/    CD18 :                             ;After jump:
(1)  917/    CD18 :                             ;TYA                                                    ;2
(1)  917/    CD18 :                             ;TAX                                                    ;2
(1)  917/    CD18 :                             
(1)  917/    CD18 :                             ;Method 4 - 28 cycles
(1)  917/    CD18 :                             ;LDA (emu_PC,X)                 ;6
(1)  917/    CD18 :                             ;TAY                                    ;2
(1)  917/    CD18 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  917/    CD18 :                             ;PHA                                    ;3
(1)  917/    CD18 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  917/    CD18 :                             ;PHA                                    ;3
(1)  917/    CD18 :                             ;RTS                                    ;6
(1)  917/    CD18 :                             
(1)  917/    CD18 :                             ;Method 5 - 30 cycles
(1)  917/    CD18 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  917/    CD1A : A8                          TAY                                             ;2
(1)  917/    CD1B : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  917/    CD1E : 95 0A                       STA emu_ptr,X                   ;4
(1)  917/    CD20 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  917/    CD23 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  917/    CD25 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  917/    CD28 :                                                     
(1)  918/    CD28 :                     
(1)  919/    CD28 :                     	;0xB7 - NOP
(1)  920/    CD28 :                     	NOP_0xB7:
(1)  921/    CD28 : (MACRO)             		OP_MACRO 183, "NOP", "IMP", "NOP_0xB7"
(1)  921/    CD28 :                             ;TODO
(1)  922/    CD28 : (MACRO)             		NEXT_MACRO
(1)  922/    CD28 :                                             
(1)  922/    CD28 :  (MACRO-2)                  halt
(1)  922/    CD28 : 00                          BRK
(1)  922/    CD29 : 00                          BRK
(1)  922/    CD2A :                             
(1)  922/    CD2A :                             ;Method 1 - 60 cycles
(1)  922/    CD2A :                             ;Jump table must be page aligned!!!
(1)  922/    CD2A :                             ;LDA (emu_PC,X)                 ;6
(1)  922/    CD2A :                             ;ASL                                    ;2
(1)  922/    CD2A :                             ;STA emu_ptr,X                  ;4
(1)  922/    CD2A :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  922/    CD2A :                             ;ADC #0                                 ;2
(1)  922/    CD2A :                             ;STA emu_ptr+1,X                ;4
(1)  922/    CD2A :                             ;LDA (emu_ptr,X)                ;6
(1)  922/    CD2A :                             ;STA emu_ptr2,X                 ;4
(1)  922/    CD2A :                             ;INC emu_ptr,X                  ;6
(1)  922/    CD2A :                             ;BCC .skip                              ;2
(1)  922/    CD2A :                             ;       INC emu_ptr+1,X         ;6
(1)  922/    CD2A :                             ;.skip:
(1)  922/    CD2A :                             ;LDA (emu_ptr,X)                ;6
(1)  922/    CD2A :                             ;STA emu_ptr2+1,X               ;4
(1)  922/    CD2A :                             ;JMP (emu_ptr2,X)               ;6
(1)  922/    CD2A :                             
(1)  922/    CD2A :                             ;Method 2 - 46 cycles
(1)  922/    CD2A :                             ;Jump table must be page aligned!!!
(1)  922/    CD2A :                             ;LDA (emu_PC,X)                 ;6
(1)  922/    CD2A :                             ;STZ emu_ptr+1,X                ;4
(1)  922/    CD2A :                             ;ASL                                    ;2
(1)  922/    CD2A :                             ;ROL emu_ptr+1,X                ;6
(1)  922/    CD2A :                             ;ASL                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 273 - 1/5/2022 12:19:0


(1)  922/    CD2A :                             ;ROL emu_ptr+1,X                ;6
(1)  922/    CD2A :                             ;STA emu_ptr,X                  ;4                              
(1)  922/    CD2A :                             ;LDA emu_ptr+1,X                ;4
(1)  922/    CD2A :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  922/    CD2A :                             ;STA emu_ptr+1,X                ;4
(1)  922/    CD2A :                             ;JMP (emu_ptr2,X)               ;6
(1)  922/    CD2A :                             
(1)  922/    CD2A :                             ;Method 3 - 30 cycles
(1)  922/    CD2A :                             ;TXA                                                    ;2
(1)  922/    CD2A :                             ;TAY                                                    ;2
(1)  922/    CD2A :                             ;LDA (emu_PC,X)                                 ;6
(1)  922/    CD2A :                             ;ASL                                                    ;2
(1)  922/    CD2A :                             ;BCS upper                                              ;2
(1)  922/    CD2A :                             ;lower:
(1)  922/    CD2A :                             ;       ASL                                                     ;2
(1)  922/    CD2A :                             ;       TAX                                                     ;2
(1)  922/    CD2A :                             ;       BCS upper_lower                         ;2
(1)  922/    CD2A :                             ;       lower_lower:
(1)  922/    CD2A :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  922/    CD2A :                             ;       upper_lower:
(1)  922/    CD2A :                             ;               JMP (JUMP_TABLE2,X)
(1)  922/    CD2A :                             ;upper:
(1)  922/    CD2A :                             ;       ASL
(1)  922/    CD2A :                             ;       TAX
(1)  922/    CD2A :                             ;       BCS upper_upper
(1)  922/    CD2A :                             ;       lower_upper:
(1)  922/    CD2A :                             ;               JMP (JUMP_TABLE3,X)
(1)  922/    CD2A :                             ;       upper_upper:
(1)  922/    CD2A :                             ;               JMP (JUMP_TABLE4,X)
(1)  922/    CD2A :                             ;After jump:
(1)  922/    CD2A :                             ;TYA                                                    ;2
(1)  922/    CD2A :                             ;TAX                                                    ;2
(1)  922/    CD2A :                             
(1)  922/    CD2A :                             ;Method 4 - 28 cycles
(1)  922/    CD2A :                             ;LDA (emu_PC,X)                 ;6
(1)  922/    CD2A :                             ;TAY                                    ;2
(1)  922/    CD2A :                             ;LDA JUMP_TABLE,Y               ;4
(1)  922/    CD2A :                             ;PHA                                    ;3
(1)  922/    CD2A :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  922/    CD2A :                             ;PHA                                    ;3
(1)  922/    CD2A :                             ;RTS                                    ;6
(1)  922/    CD2A :                             
(1)  922/    CD2A :                             ;Method 5 - 30 cycles
(1)  922/    CD2A : A1 02                       LDA (emu_PC,X)                  ;6
(1)  922/    CD2C : A8                          TAY                                             ;2
(1)  922/    CD2D : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  922/    CD30 : 95 0A                       STA emu_ptr,X                   ;4
(1)  922/    CD32 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  922/    CD35 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  922/    CD37 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  922/    CD3A :                                                     
(1)  923/    CD3A :                     
(1)  924/    CD3A :                     	;0xB8 - CLV IMP
(1)  925/    CD3A :                     	CLV_IMP:
(1)  926/    CD3A : (MACRO)             		OP_MACRO 184, "CLV", "IMP", "CLV_IMP"
(1)  926/    CD3A :                             ;TODO
(1)  927/    CD3A : (MACRO)             		NEXT_MACRO
(1)  927/    CD3A :                                             
(1)  927/    CD3A :  (MACRO-2)                  halt
(1)  927/    CD3A : 00                          BRK
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 274 - 1/5/2022 12:19:0


(1)  927/    CD3B : 00                          BRK
(1)  927/    CD3C :                             
(1)  927/    CD3C :                             ;Method 1 - 60 cycles
(1)  927/    CD3C :                             ;Jump table must be page aligned!!!
(1)  927/    CD3C :                             ;LDA (emu_PC,X)                 ;6
(1)  927/    CD3C :                             ;ASL                                    ;2
(1)  927/    CD3C :                             ;STA emu_ptr,X                  ;4
(1)  927/    CD3C :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  927/    CD3C :                             ;ADC #0                                 ;2
(1)  927/    CD3C :                             ;STA emu_ptr+1,X                ;4
(1)  927/    CD3C :                             ;LDA (emu_ptr,X)                ;6
(1)  927/    CD3C :                             ;STA emu_ptr2,X                 ;4
(1)  927/    CD3C :                             ;INC emu_ptr,X                  ;6
(1)  927/    CD3C :                             ;BCC .skip                              ;2
(1)  927/    CD3C :                             ;       INC emu_ptr+1,X         ;6
(1)  927/    CD3C :                             ;.skip:
(1)  927/    CD3C :                             ;LDA (emu_ptr,X)                ;6
(1)  927/    CD3C :                             ;STA emu_ptr2+1,X               ;4
(1)  927/    CD3C :                             ;JMP (emu_ptr2,X)               ;6
(1)  927/    CD3C :                             
(1)  927/    CD3C :                             ;Method 2 - 46 cycles
(1)  927/    CD3C :                             ;Jump table must be page aligned!!!
(1)  927/    CD3C :                             ;LDA (emu_PC,X)                 ;6
(1)  927/    CD3C :                             ;STZ emu_ptr+1,X                ;4
(1)  927/    CD3C :                             ;ASL                                    ;2
(1)  927/    CD3C :                             ;ROL emu_ptr+1,X                ;6
(1)  927/    CD3C :                             ;ASL                                    ;2
(1)  927/    CD3C :                             ;ROL emu_ptr+1,X                ;6
(1)  927/    CD3C :                             ;STA emu_ptr,X                  ;4                              
(1)  927/    CD3C :                             ;LDA emu_ptr+1,X                ;4
(1)  927/    CD3C :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  927/    CD3C :                             ;STA emu_ptr+1,X                ;4
(1)  927/    CD3C :                             ;JMP (emu_ptr2,X)               ;6
(1)  927/    CD3C :                             
(1)  927/    CD3C :                             ;Method 3 - 30 cycles
(1)  927/    CD3C :                             ;TXA                                                    ;2
(1)  927/    CD3C :                             ;TAY                                                    ;2
(1)  927/    CD3C :                             ;LDA (emu_PC,X)                                 ;6
(1)  927/    CD3C :                             ;ASL                                                    ;2
(1)  927/    CD3C :                             ;BCS upper                                              ;2
(1)  927/    CD3C :                             ;lower:
(1)  927/    CD3C :                             ;       ASL                                                     ;2
(1)  927/    CD3C :                             ;       TAX                                                     ;2
(1)  927/    CD3C :                             ;       BCS upper_lower                         ;2
(1)  927/    CD3C :                             ;       lower_lower:
(1)  927/    CD3C :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  927/    CD3C :                             ;       upper_lower:
(1)  927/    CD3C :                             ;               JMP (JUMP_TABLE2,X)
(1)  927/    CD3C :                             ;upper:
(1)  927/    CD3C :                             ;       ASL
(1)  927/    CD3C :                             ;       TAX
(1)  927/    CD3C :                             ;       BCS upper_upper
(1)  927/    CD3C :                             ;       lower_upper:
(1)  927/    CD3C :                             ;               JMP (JUMP_TABLE3,X)
(1)  927/    CD3C :                             ;       upper_upper:
(1)  927/    CD3C :                             ;               JMP (JUMP_TABLE4,X)
(1)  927/    CD3C :                             ;After jump:
(1)  927/    CD3C :                             ;TYA                                                    ;2
(1)  927/    CD3C :                             ;TAX                                                    ;2
(1)  927/    CD3C :                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 275 - 1/5/2022 12:19:0


(1)  927/    CD3C :                             ;Method 4 - 28 cycles
(1)  927/    CD3C :                             ;LDA (emu_PC,X)                 ;6
(1)  927/    CD3C :                             ;TAY                                    ;2
(1)  927/    CD3C :                             ;LDA JUMP_TABLE,Y               ;4
(1)  927/    CD3C :                             ;PHA                                    ;3
(1)  927/    CD3C :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  927/    CD3C :                             ;PHA                                    ;3
(1)  927/    CD3C :                             ;RTS                                    ;6
(1)  927/    CD3C :                             
(1)  927/    CD3C :                             ;Method 5 - 30 cycles
(1)  927/    CD3C : A1 02                       LDA (emu_PC,X)                  ;6
(1)  927/    CD3E : A8                          TAY                                             ;2
(1)  927/    CD3F : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  927/    CD42 : 95 0A                       STA emu_ptr,X                   ;4
(1)  927/    CD44 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  927/    CD47 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  927/    CD49 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  927/    CD4C :                                                     
(1)  928/    CD4C :                     
(1)  929/    CD4C :                     	;0xB9 - LDA ABSY
(1)  930/    CD4C :                     	LDA_ABSY:
(1)  931/    CD4C : (MACRO)             		OP_MACRO 185, "LDA", "ABSY", "LDA_ABSY"
(1)  931/    CD4C :                             ;TODO
(1)  932/    CD4C : (MACRO)             		NEXT_MACRO
(1)  932/    CD4C :                                             
(1)  932/    CD4C :  (MACRO-2)                  halt
(1)  932/    CD4C : 00                          BRK
(1)  932/    CD4D : 00                          BRK
(1)  932/    CD4E :                             
(1)  932/    CD4E :                             ;Method 1 - 60 cycles
(1)  932/    CD4E :                             ;Jump table must be page aligned!!!
(1)  932/    CD4E :                             ;LDA (emu_PC,X)                 ;6
(1)  932/    CD4E :                             ;ASL                                    ;2
(1)  932/    CD4E :                             ;STA emu_ptr,X                  ;4
(1)  932/    CD4E :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  932/    CD4E :                             ;ADC #0                                 ;2
(1)  932/    CD4E :                             ;STA emu_ptr+1,X                ;4
(1)  932/    CD4E :                             ;LDA (emu_ptr,X)                ;6
(1)  932/    CD4E :                             ;STA emu_ptr2,X                 ;4
(1)  932/    CD4E :                             ;INC emu_ptr,X                  ;6
(1)  932/    CD4E :                             ;BCC .skip                              ;2
(1)  932/    CD4E :                             ;       INC emu_ptr+1,X         ;6
(1)  932/    CD4E :                             ;.skip:
(1)  932/    CD4E :                             ;LDA (emu_ptr,X)                ;6
(1)  932/    CD4E :                             ;STA emu_ptr2+1,X               ;4
(1)  932/    CD4E :                             ;JMP (emu_ptr2,X)               ;6
(1)  932/    CD4E :                             
(1)  932/    CD4E :                             ;Method 2 - 46 cycles
(1)  932/    CD4E :                             ;Jump table must be page aligned!!!
(1)  932/    CD4E :                             ;LDA (emu_PC,X)                 ;6
(1)  932/    CD4E :                             ;STZ emu_ptr+1,X                ;4
(1)  932/    CD4E :                             ;ASL                                    ;2
(1)  932/    CD4E :                             ;ROL emu_ptr+1,X                ;6
(1)  932/    CD4E :                             ;ASL                                    ;2
(1)  932/    CD4E :                             ;ROL emu_ptr+1,X                ;6
(1)  932/    CD4E :                             ;STA emu_ptr,X                  ;4                              
(1)  932/    CD4E :                             ;LDA emu_ptr+1,X                ;4
(1)  932/    CD4E :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  932/    CD4E :                             ;STA emu_ptr+1,X                ;4
(1)  932/    CD4E :                             ;JMP (emu_ptr2,X)               ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 276 - 1/5/2022 12:19:0


(1)  932/    CD4E :                             
(1)  932/    CD4E :                             ;Method 3 - 30 cycles
(1)  932/    CD4E :                             ;TXA                                                    ;2
(1)  932/    CD4E :                             ;TAY                                                    ;2
(1)  932/    CD4E :                             ;LDA (emu_PC,X)                                 ;6
(1)  932/    CD4E :                             ;ASL                                                    ;2
(1)  932/    CD4E :                             ;BCS upper                                              ;2
(1)  932/    CD4E :                             ;lower:
(1)  932/    CD4E :                             ;       ASL                                                     ;2
(1)  932/    CD4E :                             ;       TAX                                                     ;2
(1)  932/    CD4E :                             ;       BCS upper_lower                         ;2
(1)  932/    CD4E :                             ;       lower_lower:
(1)  932/    CD4E :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  932/    CD4E :                             ;       upper_lower:
(1)  932/    CD4E :                             ;               JMP (JUMP_TABLE2,X)
(1)  932/    CD4E :                             ;upper:
(1)  932/    CD4E :                             ;       ASL
(1)  932/    CD4E :                             ;       TAX
(1)  932/    CD4E :                             ;       BCS upper_upper
(1)  932/    CD4E :                             ;       lower_upper:
(1)  932/    CD4E :                             ;               JMP (JUMP_TABLE3,X)
(1)  932/    CD4E :                             ;       upper_upper:
(1)  932/    CD4E :                             ;               JMP (JUMP_TABLE4,X)
(1)  932/    CD4E :                             ;After jump:
(1)  932/    CD4E :                             ;TYA                                                    ;2
(1)  932/    CD4E :                             ;TAX                                                    ;2
(1)  932/    CD4E :                             
(1)  932/    CD4E :                             ;Method 4 - 28 cycles
(1)  932/    CD4E :                             ;LDA (emu_PC,X)                 ;6
(1)  932/    CD4E :                             ;TAY                                    ;2
(1)  932/    CD4E :                             ;LDA JUMP_TABLE,Y               ;4
(1)  932/    CD4E :                             ;PHA                                    ;3
(1)  932/    CD4E :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  932/    CD4E :                             ;PHA                                    ;3
(1)  932/    CD4E :                             ;RTS                                    ;6
(1)  932/    CD4E :                             
(1)  932/    CD4E :                             ;Method 5 - 30 cycles
(1)  932/    CD4E : A1 02                       LDA (emu_PC,X)                  ;6
(1)  932/    CD50 : A8                          TAY                                             ;2
(1)  932/    CD51 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  932/    CD54 : 95 0A                       STA emu_ptr,X                   ;4
(1)  932/    CD56 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  932/    CD59 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  932/    CD5B : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  932/    CD5E :                                                     
(1)  933/    CD5E :                     
(1)  934/    CD5E :                     	;0xBA - TSX IMP
(1)  935/    CD5E :                     	TSX_IMP:
(1)  936/    CD5E : (MACRO)             		OP_MACRO 186, "TSX", "IMP", "TSX_IMP"
(1)  936/    CD5E :                             ;TODO
(1)  937/    CD5E : (MACRO)             		NEXT_MACRO
(1)  937/    CD5E :                                             
(1)  937/    CD5E :  (MACRO-2)                  halt
(1)  937/    CD5E : 00                          BRK
(1)  937/    CD5F : 00                          BRK
(1)  937/    CD60 :                             
(1)  937/    CD60 :                             ;Method 1 - 60 cycles
(1)  937/    CD60 :                             ;Jump table must be page aligned!!!
(1)  937/    CD60 :                             ;LDA (emu_PC,X)                 ;6
(1)  937/    CD60 :                             ;ASL                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 277 - 1/5/2022 12:19:0


(1)  937/    CD60 :                             ;STA emu_ptr,X                  ;4
(1)  937/    CD60 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  937/    CD60 :                             ;ADC #0                                 ;2
(1)  937/    CD60 :                             ;STA emu_ptr+1,X                ;4
(1)  937/    CD60 :                             ;LDA (emu_ptr,X)                ;6
(1)  937/    CD60 :                             ;STA emu_ptr2,X                 ;4
(1)  937/    CD60 :                             ;INC emu_ptr,X                  ;6
(1)  937/    CD60 :                             ;BCC .skip                              ;2
(1)  937/    CD60 :                             ;       INC emu_ptr+1,X         ;6
(1)  937/    CD60 :                             ;.skip:
(1)  937/    CD60 :                             ;LDA (emu_ptr,X)                ;6
(1)  937/    CD60 :                             ;STA emu_ptr2+1,X               ;4
(1)  937/    CD60 :                             ;JMP (emu_ptr2,X)               ;6
(1)  937/    CD60 :                             
(1)  937/    CD60 :                             ;Method 2 - 46 cycles
(1)  937/    CD60 :                             ;Jump table must be page aligned!!!
(1)  937/    CD60 :                             ;LDA (emu_PC,X)                 ;6
(1)  937/    CD60 :                             ;STZ emu_ptr+1,X                ;4
(1)  937/    CD60 :                             ;ASL                                    ;2
(1)  937/    CD60 :                             ;ROL emu_ptr+1,X                ;6
(1)  937/    CD60 :                             ;ASL                                    ;2
(1)  937/    CD60 :                             ;ROL emu_ptr+1,X                ;6
(1)  937/    CD60 :                             ;STA emu_ptr,X                  ;4                              
(1)  937/    CD60 :                             ;LDA emu_ptr+1,X                ;4
(1)  937/    CD60 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  937/    CD60 :                             ;STA emu_ptr+1,X                ;4
(1)  937/    CD60 :                             ;JMP (emu_ptr2,X)               ;6
(1)  937/    CD60 :                             
(1)  937/    CD60 :                             ;Method 3 - 30 cycles
(1)  937/    CD60 :                             ;TXA                                                    ;2
(1)  937/    CD60 :                             ;TAY                                                    ;2
(1)  937/    CD60 :                             ;LDA (emu_PC,X)                                 ;6
(1)  937/    CD60 :                             ;ASL                                                    ;2
(1)  937/    CD60 :                             ;BCS upper                                              ;2
(1)  937/    CD60 :                             ;lower:
(1)  937/    CD60 :                             ;       ASL                                                     ;2
(1)  937/    CD60 :                             ;       TAX                                                     ;2
(1)  937/    CD60 :                             ;       BCS upper_lower                         ;2
(1)  937/    CD60 :                             ;       lower_lower:
(1)  937/    CD60 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  937/    CD60 :                             ;       upper_lower:
(1)  937/    CD60 :                             ;               JMP (JUMP_TABLE2,X)
(1)  937/    CD60 :                             ;upper:
(1)  937/    CD60 :                             ;       ASL
(1)  937/    CD60 :                             ;       TAX
(1)  937/    CD60 :                             ;       BCS upper_upper
(1)  937/    CD60 :                             ;       lower_upper:
(1)  937/    CD60 :                             ;               JMP (JUMP_TABLE3,X)
(1)  937/    CD60 :                             ;       upper_upper:
(1)  937/    CD60 :                             ;               JMP (JUMP_TABLE4,X)
(1)  937/    CD60 :                             ;After jump:
(1)  937/    CD60 :                             ;TYA                                                    ;2
(1)  937/    CD60 :                             ;TAX                                                    ;2
(1)  937/    CD60 :                             
(1)  937/    CD60 :                             ;Method 4 - 28 cycles
(1)  937/    CD60 :                             ;LDA (emu_PC,X)                 ;6
(1)  937/    CD60 :                             ;TAY                                    ;2
(1)  937/    CD60 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  937/    CD60 :                             ;PHA                                    ;3
(1)  937/    CD60 :                             ;LDA JUMP_TABLE2,Y              ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 278 - 1/5/2022 12:19:0


(1)  937/    CD60 :                             ;PHA                                    ;3
(1)  937/    CD60 :                             ;RTS                                    ;6
(1)  937/    CD60 :                             
(1)  937/    CD60 :                             ;Method 5 - 30 cycles
(1)  937/    CD60 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  937/    CD62 : A8                          TAY                                             ;2
(1)  937/    CD63 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  937/    CD66 : 95 0A                       STA emu_ptr,X                   ;4
(1)  937/    CD68 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  937/    CD6B : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  937/    CD6D : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  937/    CD70 :                                                     
(1)  938/    CD70 :                     
(1)  939/    CD70 :                     	;0xBB - NOP
(1)  940/    CD70 :                     	NOP_0xBB:
(1)  941/    CD70 : (MACRO)             		OP_MACRO 187, "NOP", "IMP", "NOP_0xBB"
(1)  941/    CD70 :                             ;TODO
(1)  942/    CD70 : (MACRO)             		NEXT_MACRO
(1)  942/    CD70 :                                             
(1)  942/    CD70 :  (MACRO-2)                  halt
(1)  942/    CD70 : 00                          BRK
(1)  942/    CD71 : 00                          BRK
(1)  942/    CD72 :                             
(1)  942/    CD72 :                             ;Method 1 - 60 cycles
(1)  942/    CD72 :                             ;Jump table must be page aligned!!!
(1)  942/    CD72 :                             ;LDA (emu_PC,X)                 ;6
(1)  942/    CD72 :                             ;ASL                                    ;2
(1)  942/    CD72 :                             ;STA emu_ptr,X                  ;4
(1)  942/    CD72 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  942/    CD72 :                             ;ADC #0                                 ;2
(1)  942/    CD72 :                             ;STA emu_ptr+1,X                ;4
(1)  942/    CD72 :                             ;LDA (emu_ptr,X)                ;6
(1)  942/    CD72 :                             ;STA emu_ptr2,X                 ;4
(1)  942/    CD72 :                             ;INC emu_ptr,X                  ;6
(1)  942/    CD72 :                             ;BCC .skip                              ;2
(1)  942/    CD72 :                             ;       INC emu_ptr+1,X         ;6
(1)  942/    CD72 :                             ;.skip:
(1)  942/    CD72 :                             ;LDA (emu_ptr,X)                ;6
(1)  942/    CD72 :                             ;STA emu_ptr2+1,X               ;4
(1)  942/    CD72 :                             ;JMP (emu_ptr2,X)               ;6
(1)  942/    CD72 :                             
(1)  942/    CD72 :                             ;Method 2 - 46 cycles
(1)  942/    CD72 :                             ;Jump table must be page aligned!!!
(1)  942/    CD72 :                             ;LDA (emu_PC,X)                 ;6
(1)  942/    CD72 :                             ;STZ emu_ptr+1,X                ;4
(1)  942/    CD72 :                             ;ASL                                    ;2
(1)  942/    CD72 :                             ;ROL emu_ptr+1,X                ;6
(1)  942/    CD72 :                             ;ASL                                    ;2
(1)  942/    CD72 :                             ;ROL emu_ptr+1,X                ;6
(1)  942/    CD72 :                             ;STA emu_ptr,X                  ;4                              
(1)  942/    CD72 :                             ;LDA emu_ptr+1,X                ;4
(1)  942/    CD72 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  942/    CD72 :                             ;STA emu_ptr+1,X                ;4
(1)  942/    CD72 :                             ;JMP (emu_ptr2,X)               ;6
(1)  942/    CD72 :                             
(1)  942/    CD72 :                             ;Method 3 - 30 cycles
(1)  942/    CD72 :                             ;TXA                                                    ;2
(1)  942/    CD72 :                             ;TAY                                                    ;2
(1)  942/    CD72 :                             ;LDA (emu_PC,X)                                 ;6
(1)  942/    CD72 :                             ;ASL                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 279 - 1/5/2022 12:19:0


(1)  942/    CD72 :                             ;BCS upper                                              ;2
(1)  942/    CD72 :                             ;lower:
(1)  942/    CD72 :                             ;       ASL                                                     ;2
(1)  942/    CD72 :                             ;       TAX                                                     ;2
(1)  942/    CD72 :                             ;       BCS upper_lower                         ;2
(1)  942/    CD72 :                             ;       lower_lower:
(1)  942/    CD72 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  942/    CD72 :                             ;       upper_lower:
(1)  942/    CD72 :                             ;               JMP (JUMP_TABLE2,X)
(1)  942/    CD72 :                             ;upper:
(1)  942/    CD72 :                             ;       ASL
(1)  942/    CD72 :                             ;       TAX
(1)  942/    CD72 :                             ;       BCS upper_upper
(1)  942/    CD72 :                             ;       lower_upper:
(1)  942/    CD72 :                             ;               JMP (JUMP_TABLE3,X)
(1)  942/    CD72 :                             ;       upper_upper:
(1)  942/    CD72 :                             ;               JMP (JUMP_TABLE4,X)
(1)  942/    CD72 :                             ;After jump:
(1)  942/    CD72 :                             ;TYA                                                    ;2
(1)  942/    CD72 :                             ;TAX                                                    ;2
(1)  942/    CD72 :                             
(1)  942/    CD72 :                             ;Method 4 - 28 cycles
(1)  942/    CD72 :                             ;LDA (emu_PC,X)                 ;6
(1)  942/    CD72 :                             ;TAY                                    ;2
(1)  942/    CD72 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  942/    CD72 :                             ;PHA                                    ;3
(1)  942/    CD72 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  942/    CD72 :                             ;PHA                                    ;3
(1)  942/    CD72 :                             ;RTS                                    ;6
(1)  942/    CD72 :                             
(1)  942/    CD72 :                             ;Method 5 - 30 cycles
(1)  942/    CD72 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  942/    CD74 : A8                          TAY                                             ;2
(1)  942/    CD75 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  942/    CD78 : 95 0A                       STA emu_ptr,X                   ;4
(1)  942/    CD7A : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  942/    CD7D : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  942/    CD7F : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  942/    CD82 :                                                     
(1)  943/    CD82 :                     
(1)  944/    CD82 :                     	;0xBC - LDY ABSX
(1)  945/    CD82 :                     	LDY_ABSX:
(1)  946/    CD82 : (MACRO)             		OP_MACRO 188, "LDY", "ABSX", "LDY_ABSX"
(1)  946/    CD82 :                             ;TODO
(1)  947/    CD82 : (MACRO)             		NEXT_MACRO
(1)  947/    CD82 :                                             
(1)  947/    CD82 :  (MACRO-2)                  halt
(1)  947/    CD82 : 00                          BRK
(1)  947/    CD83 : 00                          BRK
(1)  947/    CD84 :                             
(1)  947/    CD84 :                             ;Method 1 - 60 cycles
(1)  947/    CD84 :                             ;Jump table must be page aligned!!!
(1)  947/    CD84 :                             ;LDA (emu_PC,X)                 ;6
(1)  947/    CD84 :                             ;ASL                                    ;2
(1)  947/    CD84 :                             ;STA emu_ptr,X                  ;4
(1)  947/    CD84 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  947/    CD84 :                             ;ADC #0                                 ;2
(1)  947/    CD84 :                             ;STA emu_ptr+1,X                ;4
(1)  947/    CD84 :                             ;LDA (emu_ptr,X)                ;6
(1)  947/    CD84 :                             ;STA emu_ptr2,X                 ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 280 - 1/5/2022 12:19:0


(1)  947/    CD84 :                             ;INC emu_ptr,X                  ;6
(1)  947/    CD84 :                             ;BCC .skip                              ;2
(1)  947/    CD84 :                             ;       INC emu_ptr+1,X         ;6
(1)  947/    CD84 :                             ;.skip:
(1)  947/    CD84 :                             ;LDA (emu_ptr,X)                ;6
(1)  947/    CD84 :                             ;STA emu_ptr2+1,X               ;4
(1)  947/    CD84 :                             ;JMP (emu_ptr2,X)               ;6
(1)  947/    CD84 :                             
(1)  947/    CD84 :                             ;Method 2 - 46 cycles
(1)  947/    CD84 :                             ;Jump table must be page aligned!!!
(1)  947/    CD84 :                             ;LDA (emu_PC,X)                 ;6
(1)  947/    CD84 :                             ;STZ emu_ptr+1,X                ;4
(1)  947/    CD84 :                             ;ASL                                    ;2
(1)  947/    CD84 :                             ;ROL emu_ptr+1,X                ;6
(1)  947/    CD84 :                             ;ASL                                    ;2
(1)  947/    CD84 :                             ;ROL emu_ptr+1,X                ;6
(1)  947/    CD84 :                             ;STA emu_ptr,X                  ;4                              
(1)  947/    CD84 :                             ;LDA emu_ptr+1,X                ;4
(1)  947/    CD84 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  947/    CD84 :                             ;STA emu_ptr+1,X                ;4
(1)  947/    CD84 :                             ;JMP (emu_ptr2,X)               ;6
(1)  947/    CD84 :                             
(1)  947/    CD84 :                             ;Method 3 - 30 cycles
(1)  947/    CD84 :                             ;TXA                                                    ;2
(1)  947/    CD84 :                             ;TAY                                                    ;2
(1)  947/    CD84 :                             ;LDA (emu_PC,X)                                 ;6
(1)  947/    CD84 :                             ;ASL                                                    ;2
(1)  947/    CD84 :                             ;BCS upper                                              ;2
(1)  947/    CD84 :                             ;lower:
(1)  947/    CD84 :                             ;       ASL                                                     ;2
(1)  947/    CD84 :                             ;       TAX                                                     ;2
(1)  947/    CD84 :                             ;       BCS upper_lower                         ;2
(1)  947/    CD84 :                             ;       lower_lower:
(1)  947/    CD84 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  947/    CD84 :                             ;       upper_lower:
(1)  947/    CD84 :                             ;               JMP (JUMP_TABLE2,X)
(1)  947/    CD84 :                             ;upper:
(1)  947/    CD84 :                             ;       ASL
(1)  947/    CD84 :                             ;       TAX
(1)  947/    CD84 :                             ;       BCS upper_upper
(1)  947/    CD84 :                             ;       lower_upper:
(1)  947/    CD84 :                             ;               JMP (JUMP_TABLE3,X)
(1)  947/    CD84 :                             ;       upper_upper:
(1)  947/    CD84 :                             ;               JMP (JUMP_TABLE4,X)
(1)  947/    CD84 :                             ;After jump:
(1)  947/    CD84 :                             ;TYA                                                    ;2
(1)  947/    CD84 :                             ;TAX                                                    ;2
(1)  947/    CD84 :                             
(1)  947/    CD84 :                             ;Method 4 - 28 cycles
(1)  947/    CD84 :                             ;LDA (emu_PC,X)                 ;6
(1)  947/    CD84 :                             ;TAY                                    ;2
(1)  947/    CD84 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  947/    CD84 :                             ;PHA                                    ;3
(1)  947/    CD84 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  947/    CD84 :                             ;PHA                                    ;3
(1)  947/    CD84 :                             ;RTS                                    ;6
(1)  947/    CD84 :                             
(1)  947/    CD84 :                             ;Method 5 - 30 cycles
(1)  947/    CD84 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  947/    CD86 : A8                          TAY                                             ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 281 - 1/5/2022 12:19:0


(1)  947/    CD87 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  947/    CD8A : 95 0A                       STA emu_ptr,X                   ;4
(1)  947/    CD8C : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  947/    CD8F : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  947/    CD91 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  947/    CD94 :                                                     
(1)  948/    CD94 :                     
(1)  949/    CD94 :                     	;0xBD - LDA ABSX
(1)  950/    CD94 :                     	LDA_ABSX:
(1)  951/    CD94 : (MACRO)             		OP_MACRO 189, "LDA", "ABSX", "LDA_ABSX"
(1)  951/    CD94 :                             ;TODO
(1)  952/    CD94 : (MACRO)             		NEXT_MACRO
(1)  952/    CD94 :                                             
(1)  952/    CD94 :  (MACRO-2)                  halt
(1)  952/    CD94 : 00                          BRK
(1)  952/    CD95 : 00                          BRK
(1)  952/    CD96 :                             
(1)  952/    CD96 :                             ;Method 1 - 60 cycles
(1)  952/    CD96 :                             ;Jump table must be page aligned!!!
(1)  952/    CD96 :                             ;LDA (emu_PC,X)                 ;6
(1)  952/    CD96 :                             ;ASL                                    ;2
(1)  952/    CD96 :                             ;STA emu_ptr,X                  ;4
(1)  952/    CD96 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  952/    CD96 :                             ;ADC #0                                 ;2
(1)  952/    CD96 :                             ;STA emu_ptr+1,X                ;4
(1)  952/    CD96 :                             ;LDA (emu_ptr,X)                ;6
(1)  952/    CD96 :                             ;STA emu_ptr2,X                 ;4
(1)  952/    CD96 :                             ;INC emu_ptr,X                  ;6
(1)  952/    CD96 :                             ;BCC .skip                              ;2
(1)  952/    CD96 :                             ;       INC emu_ptr+1,X         ;6
(1)  952/    CD96 :                             ;.skip:
(1)  952/    CD96 :                             ;LDA (emu_ptr,X)                ;6
(1)  952/    CD96 :                             ;STA emu_ptr2+1,X               ;4
(1)  952/    CD96 :                             ;JMP (emu_ptr2,X)               ;6
(1)  952/    CD96 :                             
(1)  952/    CD96 :                             ;Method 2 - 46 cycles
(1)  952/    CD96 :                             ;Jump table must be page aligned!!!
(1)  952/    CD96 :                             ;LDA (emu_PC,X)                 ;6
(1)  952/    CD96 :                             ;STZ emu_ptr+1,X                ;4
(1)  952/    CD96 :                             ;ASL                                    ;2
(1)  952/    CD96 :                             ;ROL emu_ptr+1,X                ;6
(1)  952/    CD96 :                             ;ASL                                    ;2
(1)  952/    CD96 :                             ;ROL emu_ptr+1,X                ;6
(1)  952/    CD96 :                             ;STA emu_ptr,X                  ;4                              
(1)  952/    CD96 :                             ;LDA emu_ptr+1,X                ;4
(1)  952/    CD96 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  952/    CD96 :                             ;STA emu_ptr+1,X                ;4
(1)  952/    CD96 :                             ;JMP (emu_ptr2,X)               ;6
(1)  952/    CD96 :                             
(1)  952/    CD96 :                             ;Method 3 - 30 cycles
(1)  952/    CD96 :                             ;TXA                                                    ;2
(1)  952/    CD96 :                             ;TAY                                                    ;2
(1)  952/    CD96 :                             ;LDA (emu_PC,X)                                 ;6
(1)  952/    CD96 :                             ;ASL                                                    ;2
(1)  952/    CD96 :                             ;BCS upper                                              ;2
(1)  952/    CD96 :                             ;lower:
(1)  952/    CD96 :                             ;       ASL                                                     ;2
(1)  952/    CD96 :                             ;       TAX                                                     ;2
(1)  952/    CD96 :                             ;       BCS upper_lower                         ;2
(1)  952/    CD96 :                             ;       lower_lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 282 - 1/5/2022 12:19:0


(1)  952/    CD96 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  952/    CD96 :                             ;       upper_lower:
(1)  952/    CD96 :                             ;               JMP (JUMP_TABLE2,X)
(1)  952/    CD96 :                             ;upper:
(1)  952/    CD96 :                             ;       ASL
(1)  952/    CD96 :                             ;       TAX
(1)  952/    CD96 :                             ;       BCS upper_upper
(1)  952/    CD96 :                             ;       lower_upper:
(1)  952/    CD96 :                             ;               JMP (JUMP_TABLE3,X)
(1)  952/    CD96 :                             ;       upper_upper:
(1)  952/    CD96 :                             ;               JMP (JUMP_TABLE4,X)
(1)  952/    CD96 :                             ;After jump:
(1)  952/    CD96 :                             ;TYA                                                    ;2
(1)  952/    CD96 :                             ;TAX                                                    ;2
(1)  952/    CD96 :                             
(1)  952/    CD96 :                             ;Method 4 - 28 cycles
(1)  952/    CD96 :                             ;LDA (emu_PC,X)                 ;6
(1)  952/    CD96 :                             ;TAY                                    ;2
(1)  952/    CD96 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  952/    CD96 :                             ;PHA                                    ;3
(1)  952/    CD96 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  952/    CD96 :                             ;PHA                                    ;3
(1)  952/    CD96 :                             ;RTS                                    ;6
(1)  952/    CD96 :                             
(1)  952/    CD96 :                             ;Method 5 - 30 cycles
(1)  952/    CD96 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  952/    CD98 : A8                          TAY                                             ;2
(1)  952/    CD99 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  952/    CD9C : 95 0A                       STA emu_ptr,X                   ;4
(1)  952/    CD9E : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  952/    CDA1 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  952/    CDA3 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  952/    CDA6 :                                                     
(1)  953/    CDA6 :                     
(1)  954/    CDA6 :                     	;0xBE - LDX ABSY
(1)  955/    CDA6 :                     	LDX_ABSY:
(1)  956/    CDA6 : (MACRO)             		OP_MACRO 190, "LDX", "ABSY", "LDX_ABSY"
(1)  956/    CDA6 :                             ;TODO
(1)  957/    CDA6 : (MACRO)             		NEXT_MACRO
(1)  957/    CDA6 :                                             
(1)  957/    CDA6 :  (MACRO-2)                  halt
(1)  957/    CDA6 : 00                          BRK
(1)  957/    CDA7 : 00                          BRK
(1)  957/    CDA8 :                             
(1)  957/    CDA8 :                             ;Method 1 - 60 cycles
(1)  957/    CDA8 :                             ;Jump table must be page aligned!!!
(1)  957/    CDA8 :                             ;LDA (emu_PC,X)                 ;6
(1)  957/    CDA8 :                             ;ASL                                    ;2
(1)  957/    CDA8 :                             ;STA emu_ptr,X                  ;4
(1)  957/    CDA8 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  957/    CDA8 :                             ;ADC #0                                 ;2
(1)  957/    CDA8 :                             ;STA emu_ptr+1,X                ;4
(1)  957/    CDA8 :                             ;LDA (emu_ptr,X)                ;6
(1)  957/    CDA8 :                             ;STA emu_ptr2,X                 ;4
(1)  957/    CDA8 :                             ;INC emu_ptr,X                  ;6
(1)  957/    CDA8 :                             ;BCC .skip                              ;2
(1)  957/    CDA8 :                             ;       INC emu_ptr+1,X         ;6
(1)  957/    CDA8 :                             ;.skip:
(1)  957/    CDA8 :                             ;LDA (emu_ptr,X)                ;6
(1)  957/    CDA8 :                             ;STA emu_ptr2+1,X               ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 283 - 1/5/2022 12:19:0


(1)  957/    CDA8 :                             ;JMP (emu_ptr2,X)               ;6
(1)  957/    CDA8 :                             
(1)  957/    CDA8 :                             ;Method 2 - 46 cycles
(1)  957/    CDA8 :                             ;Jump table must be page aligned!!!
(1)  957/    CDA8 :                             ;LDA (emu_PC,X)                 ;6
(1)  957/    CDA8 :                             ;STZ emu_ptr+1,X                ;4
(1)  957/    CDA8 :                             ;ASL                                    ;2
(1)  957/    CDA8 :                             ;ROL emu_ptr+1,X                ;6
(1)  957/    CDA8 :                             ;ASL                                    ;2
(1)  957/    CDA8 :                             ;ROL emu_ptr+1,X                ;6
(1)  957/    CDA8 :                             ;STA emu_ptr,X                  ;4                              
(1)  957/    CDA8 :                             ;LDA emu_ptr+1,X                ;4
(1)  957/    CDA8 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  957/    CDA8 :                             ;STA emu_ptr+1,X                ;4
(1)  957/    CDA8 :                             ;JMP (emu_ptr2,X)               ;6
(1)  957/    CDA8 :                             
(1)  957/    CDA8 :                             ;Method 3 - 30 cycles
(1)  957/    CDA8 :                             ;TXA                                                    ;2
(1)  957/    CDA8 :                             ;TAY                                                    ;2
(1)  957/    CDA8 :                             ;LDA (emu_PC,X)                                 ;6
(1)  957/    CDA8 :                             ;ASL                                                    ;2
(1)  957/    CDA8 :                             ;BCS upper                                              ;2
(1)  957/    CDA8 :                             ;lower:
(1)  957/    CDA8 :                             ;       ASL                                                     ;2
(1)  957/    CDA8 :                             ;       TAX                                                     ;2
(1)  957/    CDA8 :                             ;       BCS upper_lower                         ;2
(1)  957/    CDA8 :                             ;       lower_lower:
(1)  957/    CDA8 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  957/    CDA8 :                             ;       upper_lower:
(1)  957/    CDA8 :                             ;               JMP (JUMP_TABLE2,X)
(1)  957/    CDA8 :                             ;upper:
(1)  957/    CDA8 :                             ;       ASL
(1)  957/    CDA8 :                             ;       TAX
(1)  957/    CDA8 :                             ;       BCS upper_upper
(1)  957/    CDA8 :                             ;       lower_upper:
(1)  957/    CDA8 :                             ;               JMP (JUMP_TABLE3,X)
(1)  957/    CDA8 :                             ;       upper_upper:
(1)  957/    CDA8 :                             ;               JMP (JUMP_TABLE4,X)
(1)  957/    CDA8 :                             ;After jump:
(1)  957/    CDA8 :                             ;TYA                                                    ;2
(1)  957/    CDA8 :                             ;TAX                                                    ;2
(1)  957/    CDA8 :                             
(1)  957/    CDA8 :                             ;Method 4 - 28 cycles
(1)  957/    CDA8 :                             ;LDA (emu_PC,X)                 ;6
(1)  957/    CDA8 :                             ;TAY                                    ;2
(1)  957/    CDA8 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  957/    CDA8 :                             ;PHA                                    ;3
(1)  957/    CDA8 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  957/    CDA8 :                             ;PHA                                    ;3
(1)  957/    CDA8 :                             ;RTS                                    ;6
(1)  957/    CDA8 :                             
(1)  957/    CDA8 :                             ;Method 5 - 30 cycles
(1)  957/    CDA8 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  957/    CDAA : A8                          TAY                                             ;2
(1)  957/    CDAB : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  957/    CDAE : 95 0A                       STA emu_ptr,X                   ;4
(1)  957/    CDB0 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  957/    CDB3 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  957/    CDB5 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  957/    CDB8 :                                                     
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 284 - 1/5/2022 12:19:0


(1)  958/    CDB8 :                     
(1)  959/    CDB8 :                     	;0xBF - NOP
(1)  960/    CDB8 :                     	NOP_0xBF:
(1)  961/    CDB8 : (MACRO)             		OP_MACRO 191, "NOP", "IMP", "NOP_0xBF"
(1)  961/    CDB8 :                             ;TODO
(1)  962/    CDB8 : (MACRO)             		NEXT_MACRO
(1)  962/    CDB8 :                                             
(1)  962/    CDB8 :  (MACRO-2)                  halt
(1)  962/    CDB8 : 00                          BRK
(1)  962/    CDB9 : 00                          BRK
(1)  962/    CDBA :                             
(1)  962/    CDBA :                             ;Method 1 - 60 cycles
(1)  962/    CDBA :                             ;Jump table must be page aligned!!!
(1)  962/    CDBA :                             ;LDA (emu_PC,X)                 ;6
(1)  962/    CDBA :                             ;ASL                                    ;2
(1)  962/    CDBA :                             ;STA emu_ptr,X                  ;4
(1)  962/    CDBA :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  962/    CDBA :                             ;ADC #0                                 ;2
(1)  962/    CDBA :                             ;STA emu_ptr+1,X                ;4
(1)  962/    CDBA :                             ;LDA (emu_ptr,X)                ;6
(1)  962/    CDBA :                             ;STA emu_ptr2,X                 ;4
(1)  962/    CDBA :                             ;INC emu_ptr,X                  ;6
(1)  962/    CDBA :                             ;BCC .skip                              ;2
(1)  962/    CDBA :                             ;       INC emu_ptr+1,X         ;6
(1)  962/    CDBA :                             ;.skip:
(1)  962/    CDBA :                             ;LDA (emu_ptr,X)                ;6
(1)  962/    CDBA :                             ;STA emu_ptr2+1,X               ;4
(1)  962/    CDBA :                             ;JMP (emu_ptr2,X)               ;6
(1)  962/    CDBA :                             
(1)  962/    CDBA :                             ;Method 2 - 46 cycles
(1)  962/    CDBA :                             ;Jump table must be page aligned!!!
(1)  962/    CDBA :                             ;LDA (emu_PC,X)                 ;6
(1)  962/    CDBA :                             ;STZ emu_ptr+1,X                ;4
(1)  962/    CDBA :                             ;ASL                                    ;2
(1)  962/    CDBA :                             ;ROL emu_ptr+1,X                ;6
(1)  962/    CDBA :                             ;ASL                                    ;2
(1)  962/    CDBA :                             ;ROL emu_ptr+1,X                ;6
(1)  962/    CDBA :                             ;STA emu_ptr,X                  ;4                              
(1)  962/    CDBA :                             ;LDA emu_ptr+1,X                ;4
(1)  962/    CDBA :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  962/    CDBA :                             ;STA emu_ptr+1,X                ;4
(1)  962/    CDBA :                             ;JMP (emu_ptr2,X)               ;6
(1)  962/    CDBA :                             
(1)  962/    CDBA :                             ;Method 3 - 30 cycles
(1)  962/    CDBA :                             ;TXA                                                    ;2
(1)  962/    CDBA :                             ;TAY                                                    ;2
(1)  962/    CDBA :                             ;LDA (emu_PC,X)                                 ;6
(1)  962/    CDBA :                             ;ASL                                                    ;2
(1)  962/    CDBA :                             ;BCS upper                                              ;2
(1)  962/    CDBA :                             ;lower:
(1)  962/    CDBA :                             ;       ASL                                                     ;2
(1)  962/    CDBA :                             ;       TAX                                                     ;2
(1)  962/    CDBA :                             ;       BCS upper_lower                         ;2
(1)  962/    CDBA :                             ;       lower_lower:
(1)  962/    CDBA :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  962/    CDBA :                             ;       upper_lower:
(1)  962/    CDBA :                             ;               JMP (JUMP_TABLE2,X)
(1)  962/    CDBA :                             ;upper:
(1)  962/    CDBA :                             ;       ASL
(1)  962/    CDBA :                             ;       TAX
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 285 - 1/5/2022 12:19:0


(1)  962/    CDBA :                             ;       BCS upper_upper
(1)  962/    CDBA :                             ;       lower_upper:
(1)  962/    CDBA :                             ;               JMP (JUMP_TABLE3,X)
(1)  962/    CDBA :                             ;       upper_upper:
(1)  962/    CDBA :                             ;               JMP (JUMP_TABLE4,X)
(1)  962/    CDBA :                             ;After jump:
(1)  962/    CDBA :                             ;TYA                                                    ;2
(1)  962/    CDBA :                             ;TAX                                                    ;2
(1)  962/    CDBA :                             
(1)  962/    CDBA :                             ;Method 4 - 28 cycles
(1)  962/    CDBA :                             ;LDA (emu_PC,X)                 ;6
(1)  962/    CDBA :                             ;TAY                                    ;2
(1)  962/    CDBA :                             ;LDA JUMP_TABLE,Y               ;4
(1)  962/    CDBA :                             ;PHA                                    ;3
(1)  962/    CDBA :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  962/    CDBA :                             ;PHA                                    ;3
(1)  962/    CDBA :                             ;RTS                                    ;6
(1)  962/    CDBA :                             
(1)  962/    CDBA :                             ;Method 5 - 30 cycles
(1)  962/    CDBA : A1 02                       LDA (emu_PC,X)                  ;6
(1)  962/    CDBC : A8                          TAY                                             ;2
(1)  962/    CDBD : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  962/    CDC0 : 95 0A                       STA emu_ptr,X                   ;4
(1)  962/    CDC2 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  962/    CDC5 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  962/    CDC7 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  962/    CDCA :                                                     
(1)  963/    CDCA :                     
(1)  964/    CDCA :                     	;0xC0 - CPY IMMED
(1)  965/    CDCA :                     	CPY_IMMED:
(1)  966/    CDCA : (MACRO)             		OP_MACRO 192, "CPY", "IMMED", "CPY_IMMED"
(1)  966/    CDCA :                             ;TODO
(1)  967/    CDCA : (MACRO)             		NEXT_MACRO
(1)  967/    CDCA :                                             
(1)  967/    CDCA :  (MACRO-2)                  halt
(1)  967/    CDCA : 00                          BRK
(1)  967/    CDCB : 00                          BRK
(1)  967/    CDCC :                             
(1)  967/    CDCC :                             ;Method 1 - 60 cycles
(1)  967/    CDCC :                             ;Jump table must be page aligned!!!
(1)  967/    CDCC :                             ;LDA (emu_PC,X)                 ;6
(1)  967/    CDCC :                             ;ASL                                    ;2
(1)  967/    CDCC :                             ;STA emu_ptr,X                  ;4
(1)  967/    CDCC :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  967/    CDCC :                             ;ADC #0                                 ;2
(1)  967/    CDCC :                             ;STA emu_ptr+1,X                ;4
(1)  967/    CDCC :                             ;LDA (emu_ptr,X)                ;6
(1)  967/    CDCC :                             ;STA emu_ptr2,X                 ;4
(1)  967/    CDCC :                             ;INC emu_ptr,X                  ;6
(1)  967/    CDCC :                             ;BCC .skip                              ;2
(1)  967/    CDCC :                             ;       INC emu_ptr+1,X         ;6
(1)  967/    CDCC :                             ;.skip:
(1)  967/    CDCC :                             ;LDA (emu_ptr,X)                ;6
(1)  967/    CDCC :                             ;STA emu_ptr2+1,X               ;4
(1)  967/    CDCC :                             ;JMP (emu_ptr2,X)               ;6
(1)  967/    CDCC :                             
(1)  967/    CDCC :                             ;Method 2 - 46 cycles
(1)  967/    CDCC :                             ;Jump table must be page aligned!!!
(1)  967/    CDCC :                             ;LDA (emu_PC,X)                 ;6
(1)  967/    CDCC :                             ;STZ emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 286 - 1/5/2022 12:19:0


(1)  967/    CDCC :                             ;ASL                                    ;2
(1)  967/    CDCC :                             ;ROL emu_ptr+1,X                ;6
(1)  967/    CDCC :                             ;ASL                                    ;2
(1)  967/    CDCC :                             ;ROL emu_ptr+1,X                ;6
(1)  967/    CDCC :                             ;STA emu_ptr,X                  ;4                              
(1)  967/    CDCC :                             ;LDA emu_ptr+1,X                ;4
(1)  967/    CDCC :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  967/    CDCC :                             ;STA emu_ptr+1,X                ;4
(1)  967/    CDCC :                             ;JMP (emu_ptr2,X)               ;6
(1)  967/    CDCC :                             
(1)  967/    CDCC :                             ;Method 3 - 30 cycles
(1)  967/    CDCC :                             ;TXA                                                    ;2
(1)  967/    CDCC :                             ;TAY                                                    ;2
(1)  967/    CDCC :                             ;LDA (emu_PC,X)                                 ;6
(1)  967/    CDCC :                             ;ASL                                                    ;2
(1)  967/    CDCC :                             ;BCS upper                                              ;2
(1)  967/    CDCC :                             ;lower:
(1)  967/    CDCC :                             ;       ASL                                                     ;2
(1)  967/    CDCC :                             ;       TAX                                                     ;2
(1)  967/    CDCC :                             ;       BCS upper_lower                         ;2
(1)  967/    CDCC :                             ;       lower_lower:
(1)  967/    CDCC :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  967/    CDCC :                             ;       upper_lower:
(1)  967/    CDCC :                             ;               JMP (JUMP_TABLE2,X)
(1)  967/    CDCC :                             ;upper:
(1)  967/    CDCC :                             ;       ASL
(1)  967/    CDCC :                             ;       TAX
(1)  967/    CDCC :                             ;       BCS upper_upper
(1)  967/    CDCC :                             ;       lower_upper:
(1)  967/    CDCC :                             ;               JMP (JUMP_TABLE3,X)
(1)  967/    CDCC :                             ;       upper_upper:
(1)  967/    CDCC :                             ;               JMP (JUMP_TABLE4,X)
(1)  967/    CDCC :                             ;After jump:
(1)  967/    CDCC :                             ;TYA                                                    ;2
(1)  967/    CDCC :                             ;TAX                                                    ;2
(1)  967/    CDCC :                             
(1)  967/    CDCC :                             ;Method 4 - 28 cycles
(1)  967/    CDCC :                             ;LDA (emu_PC,X)                 ;6
(1)  967/    CDCC :                             ;TAY                                    ;2
(1)  967/    CDCC :                             ;LDA JUMP_TABLE,Y               ;4
(1)  967/    CDCC :                             ;PHA                                    ;3
(1)  967/    CDCC :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  967/    CDCC :                             ;PHA                                    ;3
(1)  967/    CDCC :                             ;RTS                                    ;6
(1)  967/    CDCC :                             
(1)  967/    CDCC :                             ;Method 5 - 30 cycles
(1)  967/    CDCC : A1 02                       LDA (emu_PC,X)                  ;6
(1)  967/    CDCE : A8                          TAY                                             ;2
(1)  967/    CDCF : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  967/    CDD2 : 95 0A                       STA emu_ptr,X                   ;4
(1)  967/    CDD4 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  967/    CDD7 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  967/    CDD9 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  967/    CDDC :                                                     
(1)  968/    CDDC :                     
(1)  969/    CDDC :                     	;0xC1 - CMP IX
(1)  970/    CDDC :                     	CMP_IX:
(1)  971/    CDDC : (MACRO)             		OP_MACRO 193, "CMP", "IX", "CMP_IX"
(1)  971/    CDDC :                             ;TODO
(1)  972/    CDDC : (MACRO)             		NEXT_MACRO
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 287 - 1/5/2022 12:19:0


(1)  972/    CDDC :                                             
(1)  972/    CDDC :  (MACRO-2)                  halt
(1)  972/    CDDC : 00                          BRK
(1)  972/    CDDD : 00                          BRK
(1)  972/    CDDE :                             
(1)  972/    CDDE :                             ;Method 1 - 60 cycles
(1)  972/    CDDE :                             ;Jump table must be page aligned!!!
(1)  972/    CDDE :                             ;LDA (emu_PC,X)                 ;6
(1)  972/    CDDE :                             ;ASL                                    ;2
(1)  972/    CDDE :                             ;STA emu_ptr,X                  ;4
(1)  972/    CDDE :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  972/    CDDE :                             ;ADC #0                                 ;2
(1)  972/    CDDE :                             ;STA emu_ptr+1,X                ;4
(1)  972/    CDDE :                             ;LDA (emu_ptr,X)                ;6
(1)  972/    CDDE :                             ;STA emu_ptr2,X                 ;4
(1)  972/    CDDE :                             ;INC emu_ptr,X                  ;6
(1)  972/    CDDE :                             ;BCC .skip                              ;2
(1)  972/    CDDE :                             ;       INC emu_ptr+1,X         ;6
(1)  972/    CDDE :                             ;.skip:
(1)  972/    CDDE :                             ;LDA (emu_ptr,X)                ;6
(1)  972/    CDDE :                             ;STA emu_ptr2+1,X               ;4
(1)  972/    CDDE :                             ;JMP (emu_ptr2,X)               ;6
(1)  972/    CDDE :                             
(1)  972/    CDDE :                             ;Method 2 - 46 cycles
(1)  972/    CDDE :                             ;Jump table must be page aligned!!!
(1)  972/    CDDE :                             ;LDA (emu_PC,X)                 ;6
(1)  972/    CDDE :                             ;STZ emu_ptr+1,X                ;4
(1)  972/    CDDE :                             ;ASL                                    ;2
(1)  972/    CDDE :                             ;ROL emu_ptr+1,X                ;6
(1)  972/    CDDE :                             ;ASL                                    ;2
(1)  972/    CDDE :                             ;ROL emu_ptr+1,X                ;6
(1)  972/    CDDE :                             ;STA emu_ptr,X                  ;4                              
(1)  972/    CDDE :                             ;LDA emu_ptr+1,X                ;4
(1)  972/    CDDE :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  972/    CDDE :                             ;STA emu_ptr+1,X                ;4
(1)  972/    CDDE :                             ;JMP (emu_ptr2,X)               ;6
(1)  972/    CDDE :                             
(1)  972/    CDDE :                             ;Method 3 - 30 cycles
(1)  972/    CDDE :                             ;TXA                                                    ;2
(1)  972/    CDDE :                             ;TAY                                                    ;2
(1)  972/    CDDE :                             ;LDA (emu_PC,X)                                 ;6
(1)  972/    CDDE :                             ;ASL                                                    ;2
(1)  972/    CDDE :                             ;BCS upper                                              ;2
(1)  972/    CDDE :                             ;lower:
(1)  972/    CDDE :                             ;       ASL                                                     ;2
(1)  972/    CDDE :                             ;       TAX                                                     ;2
(1)  972/    CDDE :                             ;       BCS upper_lower                         ;2
(1)  972/    CDDE :                             ;       lower_lower:
(1)  972/    CDDE :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  972/    CDDE :                             ;       upper_lower:
(1)  972/    CDDE :                             ;               JMP (JUMP_TABLE2,X)
(1)  972/    CDDE :                             ;upper:
(1)  972/    CDDE :                             ;       ASL
(1)  972/    CDDE :                             ;       TAX
(1)  972/    CDDE :                             ;       BCS upper_upper
(1)  972/    CDDE :                             ;       lower_upper:
(1)  972/    CDDE :                             ;               JMP (JUMP_TABLE3,X)
(1)  972/    CDDE :                             ;       upper_upper:
(1)  972/    CDDE :                             ;               JMP (JUMP_TABLE4,X)
(1)  972/    CDDE :                             ;After jump:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 288 - 1/5/2022 12:19:0


(1)  972/    CDDE :                             ;TYA                                                    ;2
(1)  972/    CDDE :                             ;TAX                                                    ;2
(1)  972/    CDDE :                             
(1)  972/    CDDE :                             ;Method 4 - 28 cycles
(1)  972/    CDDE :                             ;LDA (emu_PC,X)                 ;6
(1)  972/    CDDE :                             ;TAY                                    ;2
(1)  972/    CDDE :                             ;LDA JUMP_TABLE,Y               ;4
(1)  972/    CDDE :                             ;PHA                                    ;3
(1)  972/    CDDE :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  972/    CDDE :                             ;PHA                                    ;3
(1)  972/    CDDE :                             ;RTS                                    ;6
(1)  972/    CDDE :                             
(1)  972/    CDDE :                             ;Method 5 - 30 cycles
(1)  972/    CDDE : A1 02                       LDA (emu_PC,X)                  ;6
(1)  972/    CDE0 : A8                          TAY                                             ;2
(1)  972/    CDE1 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  972/    CDE4 : 95 0A                       STA emu_ptr,X                   ;4
(1)  972/    CDE6 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  972/    CDE9 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  972/    CDEB : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  972/    CDEE :                                                     
(1)  973/    CDEE :                     
(1)  974/    CDEE :                     	;0xC2 - NOP
(1)  975/    CDEE :                     	NOP_0xC2:
(1)  976/    CDEE : (MACRO)             		OP_MACRO 194, "NOP", "IMP", "NOP_0xC2"
(1)  976/    CDEE :                             ;TODO
(1)  977/    CDEE : (MACRO)             		NEXT_MACRO
(1)  977/    CDEE :                                             
(1)  977/    CDEE :  (MACRO-2)                  halt
(1)  977/    CDEE : 00                          BRK
(1)  977/    CDEF : 00                          BRK
(1)  977/    CDF0 :                             
(1)  977/    CDF0 :                             ;Method 1 - 60 cycles
(1)  977/    CDF0 :                             ;Jump table must be page aligned!!!
(1)  977/    CDF0 :                             ;LDA (emu_PC,X)                 ;6
(1)  977/    CDF0 :                             ;ASL                                    ;2
(1)  977/    CDF0 :                             ;STA emu_ptr,X                  ;4
(1)  977/    CDF0 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  977/    CDF0 :                             ;ADC #0                                 ;2
(1)  977/    CDF0 :                             ;STA emu_ptr+1,X                ;4
(1)  977/    CDF0 :                             ;LDA (emu_ptr,X)                ;6
(1)  977/    CDF0 :                             ;STA emu_ptr2,X                 ;4
(1)  977/    CDF0 :                             ;INC emu_ptr,X                  ;6
(1)  977/    CDF0 :                             ;BCC .skip                              ;2
(1)  977/    CDF0 :                             ;       INC emu_ptr+1,X         ;6
(1)  977/    CDF0 :                             ;.skip:
(1)  977/    CDF0 :                             ;LDA (emu_ptr,X)                ;6
(1)  977/    CDF0 :                             ;STA emu_ptr2+1,X               ;4
(1)  977/    CDF0 :                             ;JMP (emu_ptr2,X)               ;6
(1)  977/    CDF0 :                             
(1)  977/    CDF0 :                             ;Method 2 - 46 cycles
(1)  977/    CDF0 :                             ;Jump table must be page aligned!!!
(1)  977/    CDF0 :                             ;LDA (emu_PC,X)                 ;6
(1)  977/    CDF0 :                             ;STZ emu_ptr+1,X                ;4
(1)  977/    CDF0 :                             ;ASL                                    ;2
(1)  977/    CDF0 :                             ;ROL emu_ptr+1,X                ;6
(1)  977/    CDF0 :                             ;ASL                                    ;2
(1)  977/    CDF0 :                             ;ROL emu_ptr+1,X                ;6
(1)  977/    CDF0 :                             ;STA emu_ptr,X                  ;4                              
(1)  977/    CDF0 :                             ;LDA emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 289 - 1/5/2022 12:19:0


(1)  977/    CDF0 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  977/    CDF0 :                             ;STA emu_ptr+1,X                ;4
(1)  977/    CDF0 :                             ;JMP (emu_ptr2,X)               ;6
(1)  977/    CDF0 :                             
(1)  977/    CDF0 :                             ;Method 3 - 30 cycles
(1)  977/    CDF0 :                             ;TXA                                                    ;2
(1)  977/    CDF0 :                             ;TAY                                                    ;2
(1)  977/    CDF0 :                             ;LDA (emu_PC,X)                                 ;6
(1)  977/    CDF0 :                             ;ASL                                                    ;2
(1)  977/    CDF0 :                             ;BCS upper                                              ;2
(1)  977/    CDF0 :                             ;lower:
(1)  977/    CDF0 :                             ;       ASL                                                     ;2
(1)  977/    CDF0 :                             ;       TAX                                                     ;2
(1)  977/    CDF0 :                             ;       BCS upper_lower                         ;2
(1)  977/    CDF0 :                             ;       lower_lower:
(1)  977/    CDF0 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  977/    CDF0 :                             ;       upper_lower:
(1)  977/    CDF0 :                             ;               JMP (JUMP_TABLE2,X)
(1)  977/    CDF0 :                             ;upper:
(1)  977/    CDF0 :                             ;       ASL
(1)  977/    CDF0 :                             ;       TAX
(1)  977/    CDF0 :                             ;       BCS upper_upper
(1)  977/    CDF0 :                             ;       lower_upper:
(1)  977/    CDF0 :                             ;               JMP (JUMP_TABLE3,X)
(1)  977/    CDF0 :                             ;       upper_upper:
(1)  977/    CDF0 :                             ;               JMP (JUMP_TABLE4,X)
(1)  977/    CDF0 :                             ;After jump:
(1)  977/    CDF0 :                             ;TYA                                                    ;2
(1)  977/    CDF0 :                             ;TAX                                                    ;2
(1)  977/    CDF0 :                             
(1)  977/    CDF0 :                             ;Method 4 - 28 cycles
(1)  977/    CDF0 :                             ;LDA (emu_PC,X)                 ;6
(1)  977/    CDF0 :                             ;TAY                                    ;2
(1)  977/    CDF0 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  977/    CDF0 :                             ;PHA                                    ;3
(1)  977/    CDF0 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  977/    CDF0 :                             ;PHA                                    ;3
(1)  977/    CDF0 :                             ;RTS                                    ;6
(1)  977/    CDF0 :                             
(1)  977/    CDF0 :                             ;Method 5 - 30 cycles
(1)  977/    CDF0 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  977/    CDF2 : A8                          TAY                                             ;2
(1)  977/    CDF3 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  977/    CDF6 : 95 0A                       STA emu_ptr,X                   ;4
(1)  977/    CDF8 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  977/    CDFB : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  977/    CDFD : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  977/    CE00 :                                                     
(1)  978/    CE00 :                     
(1)  979/    CE00 :                     	;0xC3 - NOP
(1)  980/    CE00 :                     	NOP_0xC3:
(1)  981/    CE00 : (MACRO)             		OP_MACRO 195, "NOP", "IMP", "NOP_0xC3"
(1)  981/    CE00 :                             ;TODO
(1)  982/    CE00 : (MACRO)             		NEXT_MACRO
(1)  982/    CE00 :                                             
(1)  982/    CE00 :  (MACRO-2)                  halt
(1)  982/    CE00 : 00                          BRK
(1)  982/    CE01 : 00                          BRK
(1)  982/    CE02 :                             
(1)  982/    CE02 :                             ;Method 1 - 60 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 290 - 1/5/2022 12:19:0


(1)  982/    CE02 :                             ;Jump table must be page aligned!!!
(1)  982/    CE02 :                             ;LDA (emu_PC,X)                 ;6
(1)  982/    CE02 :                             ;ASL                                    ;2
(1)  982/    CE02 :                             ;STA emu_ptr,X                  ;4
(1)  982/    CE02 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  982/    CE02 :                             ;ADC #0                                 ;2
(1)  982/    CE02 :                             ;STA emu_ptr+1,X                ;4
(1)  982/    CE02 :                             ;LDA (emu_ptr,X)                ;6
(1)  982/    CE02 :                             ;STA emu_ptr2,X                 ;4
(1)  982/    CE02 :                             ;INC emu_ptr,X                  ;6
(1)  982/    CE02 :                             ;BCC .skip                              ;2
(1)  982/    CE02 :                             ;       INC emu_ptr+1,X         ;6
(1)  982/    CE02 :                             ;.skip:
(1)  982/    CE02 :                             ;LDA (emu_ptr,X)                ;6
(1)  982/    CE02 :                             ;STA emu_ptr2+1,X               ;4
(1)  982/    CE02 :                             ;JMP (emu_ptr2,X)               ;6
(1)  982/    CE02 :                             
(1)  982/    CE02 :                             ;Method 2 - 46 cycles
(1)  982/    CE02 :                             ;Jump table must be page aligned!!!
(1)  982/    CE02 :                             ;LDA (emu_PC,X)                 ;6
(1)  982/    CE02 :                             ;STZ emu_ptr+1,X                ;4
(1)  982/    CE02 :                             ;ASL                                    ;2
(1)  982/    CE02 :                             ;ROL emu_ptr+1,X                ;6
(1)  982/    CE02 :                             ;ASL                                    ;2
(1)  982/    CE02 :                             ;ROL emu_ptr+1,X                ;6
(1)  982/    CE02 :                             ;STA emu_ptr,X                  ;4                              
(1)  982/    CE02 :                             ;LDA emu_ptr+1,X                ;4
(1)  982/    CE02 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  982/    CE02 :                             ;STA emu_ptr+1,X                ;4
(1)  982/    CE02 :                             ;JMP (emu_ptr2,X)               ;6
(1)  982/    CE02 :                             
(1)  982/    CE02 :                             ;Method 3 - 30 cycles
(1)  982/    CE02 :                             ;TXA                                                    ;2
(1)  982/    CE02 :                             ;TAY                                                    ;2
(1)  982/    CE02 :                             ;LDA (emu_PC,X)                                 ;6
(1)  982/    CE02 :                             ;ASL                                                    ;2
(1)  982/    CE02 :                             ;BCS upper                                              ;2
(1)  982/    CE02 :                             ;lower:
(1)  982/    CE02 :                             ;       ASL                                                     ;2
(1)  982/    CE02 :                             ;       TAX                                                     ;2
(1)  982/    CE02 :                             ;       BCS upper_lower                         ;2
(1)  982/    CE02 :                             ;       lower_lower:
(1)  982/    CE02 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  982/    CE02 :                             ;       upper_lower:
(1)  982/    CE02 :                             ;               JMP (JUMP_TABLE2,X)
(1)  982/    CE02 :                             ;upper:
(1)  982/    CE02 :                             ;       ASL
(1)  982/    CE02 :                             ;       TAX
(1)  982/    CE02 :                             ;       BCS upper_upper
(1)  982/    CE02 :                             ;       lower_upper:
(1)  982/    CE02 :                             ;               JMP (JUMP_TABLE3,X)
(1)  982/    CE02 :                             ;       upper_upper:
(1)  982/    CE02 :                             ;               JMP (JUMP_TABLE4,X)
(1)  982/    CE02 :                             ;After jump:
(1)  982/    CE02 :                             ;TYA                                                    ;2
(1)  982/    CE02 :                             ;TAX                                                    ;2
(1)  982/    CE02 :                             
(1)  982/    CE02 :                             ;Method 4 - 28 cycles
(1)  982/    CE02 :                             ;LDA (emu_PC,X)                 ;6
(1)  982/    CE02 :                             ;TAY                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 291 - 1/5/2022 12:19:0


(1)  982/    CE02 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  982/    CE02 :                             ;PHA                                    ;3
(1)  982/    CE02 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  982/    CE02 :                             ;PHA                                    ;3
(1)  982/    CE02 :                             ;RTS                                    ;6
(1)  982/    CE02 :                             
(1)  982/    CE02 :                             ;Method 5 - 30 cycles
(1)  982/    CE02 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  982/    CE04 : A8                          TAY                                             ;2
(1)  982/    CE05 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  982/    CE08 : 95 0A                       STA emu_ptr,X                   ;4
(1)  982/    CE0A : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  982/    CE0D : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  982/    CE0F : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  982/    CE12 :                                                     
(1)  983/    CE12 :                     
(1)  984/    CE12 :                     	;0xC4 - CPY ZP
(1)  985/    CE12 :                     	CPY_ZP:
(1)  986/    CE12 : (MACRO)             		OP_MACRO 196, "CPY", "ZP", "CPY_ZP"
(1)  986/    CE12 :                             ;TODO
(1)  987/    CE12 : (MACRO)             		NEXT_MACRO
(1)  987/    CE12 :                                             
(1)  987/    CE12 :  (MACRO-2)                  halt
(1)  987/    CE12 : 00                          BRK
(1)  987/    CE13 : 00                          BRK
(1)  987/    CE14 :                             
(1)  987/    CE14 :                             ;Method 1 - 60 cycles
(1)  987/    CE14 :                             ;Jump table must be page aligned!!!
(1)  987/    CE14 :                             ;LDA (emu_PC,X)                 ;6
(1)  987/    CE14 :                             ;ASL                                    ;2
(1)  987/    CE14 :                             ;STA emu_ptr,X                  ;4
(1)  987/    CE14 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  987/    CE14 :                             ;ADC #0                                 ;2
(1)  987/    CE14 :                             ;STA emu_ptr+1,X                ;4
(1)  987/    CE14 :                             ;LDA (emu_ptr,X)                ;6
(1)  987/    CE14 :                             ;STA emu_ptr2,X                 ;4
(1)  987/    CE14 :                             ;INC emu_ptr,X                  ;6
(1)  987/    CE14 :                             ;BCC .skip                              ;2
(1)  987/    CE14 :                             ;       INC emu_ptr+1,X         ;6
(1)  987/    CE14 :                             ;.skip:
(1)  987/    CE14 :                             ;LDA (emu_ptr,X)                ;6
(1)  987/    CE14 :                             ;STA emu_ptr2+1,X               ;4
(1)  987/    CE14 :                             ;JMP (emu_ptr2,X)               ;6
(1)  987/    CE14 :                             
(1)  987/    CE14 :                             ;Method 2 - 46 cycles
(1)  987/    CE14 :                             ;Jump table must be page aligned!!!
(1)  987/    CE14 :                             ;LDA (emu_PC,X)                 ;6
(1)  987/    CE14 :                             ;STZ emu_ptr+1,X                ;4
(1)  987/    CE14 :                             ;ASL                                    ;2
(1)  987/    CE14 :                             ;ROL emu_ptr+1,X                ;6
(1)  987/    CE14 :                             ;ASL                                    ;2
(1)  987/    CE14 :                             ;ROL emu_ptr+1,X                ;6
(1)  987/    CE14 :                             ;STA emu_ptr,X                  ;4                              
(1)  987/    CE14 :                             ;LDA emu_ptr+1,X                ;4
(1)  987/    CE14 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  987/    CE14 :                             ;STA emu_ptr+1,X                ;4
(1)  987/    CE14 :                             ;JMP (emu_ptr2,X)               ;6
(1)  987/    CE14 :                             
(1)  987/    CE14 :                             ;Method 3 - 30 cycles
(1)  987/    CE14 :                             ;TXA                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 292 - 1/5/2022 12:19:0


(1)  987/    CE14 :                             ;TAY                                                    ;2
(1)  987/    CE14 :                             ;LDA (emu_PC,X)                                 ;6
(1)  987/    CE14 :                             ;ASL                                                    ;2
(1)  987/    CE14 :                             ;BCS upper                                              ;2
(1)  987/    CE14 :                             ;lower:
(1)  987/    CE14 :                             ;       ASL                                                     ;2
(1)  987/    CE14 :                             ;       TAX                                                     ;2
(1)  987/    CE14 :                             ;       BCS upper_lower                         ;2
(1)  987/    CE14 :                             ;       lower_lower:
(1)  987/    CE14 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  987/    CE14 :                             ;       upper_lower:
(1)  987/    CE14 :                             ;               JMP (JUMP_TABLE2,X)
(1)  987/    CE14 :                             ;upper:
(1)  987/    CE14 :                             ;       ASL
(1)  987/    CE14 :                             ;       TAX
(1)  987/    CE14 :                             ;       BCS upper_upper
(1)  987/    CE14 :                             ;       lower_upper:
(1)  987/    CE14 :                             ;               JMP (JUMP_TABLE3,X)
(1)  987/    CE14 :                             ;       upper_upper:
(1)  987/    CE14 :                             ;               JMP (JUMP_TABLE4,X)
(1)  987/    CE14 :                             ;After jump:
(1)  987/    CE14 :                             ;TYA                                                    ;2
(1)  987/    CE14 :                             ;TAX                                                    ;2
(1)  987/    CE14 :                             
(1)  987/    CE14 :                             ;Method 4 - 28 cycles
(1)  987/    CE14 :                             ;LDA (emu_PC,X)                 ;6
(1)  987/    CE14 :                             ;TAY                                    ;2
(1)  987/    CE14 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  987/    CE14 :                             ;PHA                                    ;3
(1)  987/    CE14 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  987/    CE14 :                             ;PHA                                    ;3
(1)  987/    CE14 :                             ;RTS                                    ;6
(1)  987/    CE14 :                             
(1)  987/    CE14 :                             ;Method 5 - 30 cycles
(1)  987/    CE14 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  987/    CE16 : A8                          TAY                                             ;2
(1)  987/    CE17 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  987/    CE1A : 95 0A                       STA emu_ptr,X                   ;4
(1)  987/    CE1C : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  987/    CE1F : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  987/    CE21 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  987/    CE24 :                                                     
(1)  988/    CE24 :                     
(1)  989/    CE24 :                     	;0xC5 - CMP ZP
(1)  990/    CE24 :                     	CMP_ZP:
(1)  991/    CE24 : (MACRO)             		OP_MACRO 197, "CMP", "ZP", "CMP_ZP"
(1)  991/    CE24 :                             ;TODO
(1)  992/    CE24 : (MACRO)             		NEXT_MACRO
(1)  992/    CE24 :                                             
(1)  992/    CE24 :  (MACRO-2)                  halt
(1)  992/    CE24 : 00                          BRK
(1)  992/    CE25 : 00                          BRK
(1)  992/    CE26 :                             
(1)  992/    CE26 :                             ;Method 1 - 60 cycles
(1)  992/    CE26 :                             ;Jump table must be page aligned!!!
(1)  992/    CE26 :                             ;LDA (emu_PC,X)                 ;6
(1)  992/    CE26 :                             ;ASL                                    ;2
(1)  992/    CE26 :                             ;STA emu_ptr,X                  ;4
(1)  992/    CE26 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  992/    CE26 :                             ;ADC #0                                 ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 293 - 1/5/2022 12:19:0


(1)  992/    CE26 :                             ;STA emu_ptr+1,X                ;4
(1)  992/    CE26 :                             ;LDA (emu_ptr,X)                ;6
(1)  992/    CE26 :                             ;STA emu_ptr2,X                 ;4
(1)  992/    CE26 :                             ;INC emu_ptr,X                  ;6
(1)  992/    CE26 :                             ;BCC .skip                              ;2
(1)  992/    CE26 :                             ;       INC emu_ptr+1,X         ;6
(1)  992/    CE26 :                             ;.skip:
(1)  992/    CE26 :                             ;LDA (emu_ptr,X)                ;6
(1)  992/    CE26 :                             ;STA emu_ptr2+1,X               ;4
(1)  992/    CE26 :                             ;JMP (emu_ptr2,X)               ;6
(1)  992/    CE26 :                             
(1)  992/    CE26 :                             ;Method 2 - 46 cycles
(1)  992/    CE26 :                             ;Jump table must be page aligned!!!
(1)  992/    CE26 :                             ;LDA (emu_PC,X)                 ;6
(1)  992/    CE26 :                             ;STZ emu_ptr+1,X                ;4
(1)  992/    CE26 :                             ;ASL                                    ;2
(1)  992/    CE26 :                             ;ROL emu_ptr+1,X                ;6
(1)  992/    CE26 :                             ;ASL                                    ;2
(1)  992/    CE26 :                             ;ROL emu_ptr+1,X                ;6
(1)  992/    CE26 :                             ;STA emu_ptr,X                  ;4                              
(1)  992/    CE26 :                             ;LDA emu_ptr+1,X                ;4
(1)  992/    CE26 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  992/    CE26 :                             ;STA emu_ptr+1,X                ;4
(1)  992/    CE26 :                             ;JMP (emu_ptr2,X)               ;6
(1)  992/    CE26 :                             
(1)  992/    CE26 :                             ;Method 3 - 30 cycles
(1)  992/    CE26 :                             ;TXA                                                    ;2
(1)  992/    CE26 :                             ;TAY                                                    ;2
(1)  992/    CE26 :                             ;LDA (emu_PC,X)                                 ;6
(1)  992/    CE26 :                             ;ASL                                                    ;2
(1)  992/    CE26 :                             ;BCS upper                                              ;2
(1)  992/    CE26 :                             ;lower:
(1)  992/    CE26 :                             ;       ASL                                                     ;2
(1)  992/    CE26 :                             ;       TAX                                                     ;2
(1)  992/    CE26 :                             ;       BCS upper_lower                         ;2
(1)  992/    CE26 :                             ;       lower_lower:
(1)  992/    CE26 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  992/    CE26 :                             ;       upper_lower:
(1)  992/    CE26 :                             ;               JMP (JUMP_TABLE2,X)
(1)  992/    CE26 :                             ;upper:
(1)  992/    CE26 :                             ;       ASL
(1)  992/    CE26 :                             ;       TAX
(1)  992/    CE26 :                             ;       BCS upper_upper
(1)  992/    CE26 :                             ;       lower_upper:
(1)  992/    CE26 :                             ;               JMP (JUMP_TABLE3,X)
(1)  992/    CE26 :                             ;       upper_upper:
(1)  992/    CE26 :                             ;               JMP (JUMP_TABLE4,X)
(1)  992/    CE26 :                             ;After jump:
(1)  992/    CE26 :                             ;TYA                                                    ;2
(1)  992/    CE26 :                             ;TAX                                                    ;2
(1)  992/    CE26 :                             
(1)  992/    CE26 :                             ;Method 4 - 28 cycles
(1)  992/    CE26 :                             ;LDA (emu_PC,X)                 ;6
(1)  992/    CE26 :                             ;TAY                                    ;2
(1)  992/    CE26 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  992/    CE26 :                             ;PHA                                    ;3
(1)  992/    CE26 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  992/    CE26 :                             ;PHA                                    ;3
(1)  992/    CE26 :                             ;RTS                                    ;6
(1)  992/    CE26 :                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 294 - 1/5/2022 12:19:0


(1)  992/    CE26 :                             ;Method 5 - 30 cycles
(1)  992/    CE26 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  992/    CE28 : A8                          TAY                                             ;2
(1)  992/    CE29 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  992/    CE2C : 95 0A                       STA emu_ptr,X                   ;4
(1)  992/    CE2E : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  992/    CE31 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  992/    CE33 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  992/    CE36 :                                                     
(1)  993/    CE36 :                     
(1)  994/    CE36 :                     	;0xC6 - DEC ZP
(1)  995/    CE36 :                     	DEC_ZP:
(1)  996/    CE36 : (MACRO)             		OP_MACRO 198, "DEC", "ZP", "DEC_ZP"
(1)  996/    CE36 :                             ;TODO
(1)  997/    CE36 : (MACRO)             		NEXT_MACRO
(1)  997/    CE36 :                                             
(1)  997/    CE36 :  (MACRO-2)                  halt
(1)  997/    CE36 : 00                          BRK
(1)  997/    CE37 : 00                          BRK
(1)  997/    CE38 :                             
(1)  997/    CE38 :                             ;Method 1 - 60 cycles
(1)  997/    CE38 :                             ;Jump table must be page aligned!!!
(1)  997/    CE38 :                             ;LDA (emu_PC,X)                 ;6
(1)  997/    CE38 :                             ;ASL                                    ;2
(1)  997/    CE38 :                             ;STA emu_ptr,X                  ;4
(1)  997/    CE38 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  997/    CE38 :                             ;ADC #0                                 ;2
(1)  997/    CE38 :                             ;STA emu_ptr+1,X                ;4
(1)  997/    CE38 :                             ;LDA (emu_ptr,X)                ;6
(1)  997/    CE38 :                             ;STA emu_ptr2,X                 ;4
(1)  997/    CE38 :                             ;INC emu_ptr,X                  ;6
(1)  997/    CE38 :                             ;BCC .skip                              ;2
(1)  997/    CE38 :                             ;       INC emu_ptr+1,X         ;6
(1)  997/    CE38 :                             ;.skip:
(1)  997/    CE38 :                             ;LDA (emu_ptr,X)                ;6
(1)  997/    CE38 :                             ;STA emu_ptr2+1,X               ;4
(1)  997/    CE38 :                             ;JMP (emu_ptr2,X)               ;6
(1)  997/    CE38 :                             
(1)  997/    CE38 :                             ;Method 2 - 46 cycles
(1)  997/    CE38 :                             ;Jump table must be page aligned!!!
(1)  997/    CE38 :                             ;LDA (emu_PC,X)                 ;6
(1)  997/    CE38 :                             ;STZ emu_ptr+1,X                ;4
(1)  997/    CE38 :                             ;ASL                                    ;2
(1)  997/    CE38 :                             ;ROL emu_ptr+1,X                ;6
(1)  997/    CE38 :                             ;ASL                                    ;2
(1)  997/    CE38 :                             ;ROL emu_ptr+1,X                ;6
(1)  997/    CE38 :                             ;STA emu_ptr,X                  ;4                              
(1)  997/    CE38 :                             ;LDA emu_ptr+1,X                ;4
(1)  997/    CE38 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  997/    CE38 :                             ;STA emu_ptr+1,X                ;4
(1)  997/    CE38 :                             ;JMP (emu_ptr2,X)               ;6
(1)  997/    CE38 :                             
(1)  997/    CE38 :                             ;Method 3 - 30 cycles
(1)  997/    CE38 :                             ;TXA                                                    ;2
(1)  997/    CE38 :                             ;TAY                                                    ;2
(1)  997/    CE38 :                             ;LDA (emu_PC,X)                                 ;6
(1)  997/    CE38 :                             ;ASL                                                    ;2
(1)  997/    CE38 :                             ;BCS upper                                              ;2
(1)  997/    CE38 :                             ;lower:
(1)  997/    CE38 :                             ;       ASL                                                     ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 295 - 1/5/2022 12:19:0


(1)  997/    CE38 :                             ;       TAX                                                     ;2
(1)  997/    CE38 :                             ;       BCS upper_lower                         ;2
(1)  997/    CE38 :                             ;       lower_lower:
(1)  997/    CE38 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  997/    CE38 :                             ;       upper_lower:
(1)  997/    CE38 :                             ;               JMP (JUMP_TABLE2,X)
(1)  997/    CE38 :                             ;upper:
(1)  997/    CE38 :                             ;       ASL
(1)  997/    CE38 :                             ;       TAX
(1)  997/    CE38 :                             ;       BCS upper_upper
(1)  997/    CE38 :                             ;       lower_upper:
(1)  997/    CE38 :                             ;               JMP (JUMP_TABLE3,X)
(1)  997/    CE38 :                             ;       upper_upper:
(1)  997/    CE38 :                             ;               JMP (JUMP_TABLE4,X)
(1)  997/    CE38 :                             ;After jump:
(1)  997/    CE38 :                             ;TYA                                                    ;2
(1)  997/    CE38 :                             ;TAX                                                    ;2
(1)  997/    CE38 :                             
(1)  997/    CE38 :                             ;Method 4 - 28 cycles
(1)  997/    CE38 :                             ;LDA (emu_PC,X)                 ;6
(1)  997/    CE38 :                             ;TAY                                    ;2
(1)  997/    CE38 :                             ;LDA JUMP_TABLE,Y               ;4
(1)  997/    CE38 :                             ;PHA                                    ;3
(1)  997/    CE38 :                             ;LDA JUMP_TABLE2,Y              ;4
(1)  997/    CE38 :                             ;PHA                                    ;3
(1)  997/    CE38 :                             ;RTS                                    ;6
(1)  997/    CE38 :                             
(1)  997/    CE38 :                             ;Method 5 - 30 cycles
(1)  997/    CE38 : A1 02                       LDA (emu_PC,X)                  ;6
(1)  997/    CE3A : A8                          TAY                                             ;2
(1)  997/    CE3B : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1)  997/    CE3E : 95 0A                       STA emu_ptr,X                   ;4
(1)  997/    CE40 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1)  997/    CE43 : 95 0B                       STA emu_ptr+1,X                 ;4
(1)  997/    CE45 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1)  997/    CE48 :                                                     
(1)  998/    CE48 :                     
(1)  999/    CE48 :                     	;0xC7 - NOP
(1) 1000/    CE48 :                     	NOP_0xC7:
(1) 1001/    CE48 : (MACRO)             		OP_MACRO 199, "NOP", "IMP", "NOP_0xC7"
(1) 1001/    CE48 :                             ;TODO
(1) 1002/    CE48 : (MACRO)             		NEXT_MACRO
(1) 1002/    CE48 :                                             
(1) 1002/    CE48 :  (MACRO-2)                  halt
(1) 1002/    CE48 : 00                          BRK
(1) 1002/    CE49 : 00                          BRK
(1) 1002/    CE4A :                             
(1) 1002/    CE4A :                             ;Method 1 - 60 cycles
(1) 1002/    CE4A :                             ;Jump table must be page aligned!!!
(1) 1002/    CE4A :                             ;LDA (emu_PC,X)                 ;6
(1) 1002/    CE4A :                             ;ASL                                    ;2
(1) 1002/    CE4A :                             ;STA emu_ptr,X                  ;4
(1) 1002/    CE4A :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1002/    CE4A :                             ;ADC #0                                 ;2
(1) 1002/    CE4A :                             ;STA emu_ptr+1,X                ;4
(1) 1002/    CE4A :                             ;LDA (emu_ptr,X)                ;6
(1) 1002/    CE4A :                             ;STA emu_ptr2,X                 ;4
(1) 1002/    CE4A :                             ;INC emu_ptr,X                  ;6
(1) 1002/    CE4A :                             ;BCC .skip                              ;2
(1) 1002/    CE4A :                             ;       INC emu_ptr+1,X         ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 296 - 1/5/2022 12:19:0


(1) 1002/    CE4A :                             ;.skip:
(1) 1002/    CE4A :                             ;LDA (emu_ptr,X)                ;6
(1) 1002/    CE4A :                             ;STA emu_ptr2+1,X               ;4
(1) 1002/    CE4A :                             ;JMP (emu_ptr2,X)               ;6
(1) 1002/    CE4A :                             
(1) 1002/    CE4A :                             ;Method 2 - 46 cycles
(1) 1002/    CE4A :                             ;Jump table must be page aligned!!!
(1) 1002/    CE4A :                             ;LDA (emu_PC,X)                 ;6
(1) 1002/    CE4A :                             ;STZ emu_ptr+1,X                ;4
(1) 1002/    CE4A :                             ;ASL                                    ;2
(1) 1002/    CE4A :                             ;ROL emu_ptr+1,X                ;6
(1) 1002/    CE4A :                             ;ASL                                    ;2
(1) 1002/    CE4A :                             ;ROL emu_ptr+1,X                ;6
(1) 1002/    CE4A :                             ;STA emu_ptr,X                  ;4                              
(1) 1002/    CE4A :                             ;LDA emu_ptr+1,X                ;4
(1) 1002/    CE4A :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1002/    CE4A :                             ;STA emu_ptr+1,X                ;4
(1) 1002/    CE4A :                             ;JMP (emu_ptr2,X)               ;6
(1) 1002/    CE4A :                             
(1) 1002/    CE4A :                             ;Method 3 - 30 cycles
(1) 1002/    CE4A :                             ;TXA                                                    ;2
(1) 1002/    CE4A :                             ;TAY                                                    ;2
(1) 1002/    CE4A :                             ;LDA (emu_PC,X)                                 ;6
(1) 1002/    CE4A :                             ;ASL                                                    ;2
(1) 1002/    CE4A :                             ;BCS upper                                              ;2
(1) 1002/    CE4A :                             ;lower:
(1) 1002/    CE4A :                             ;       ASL                                                     ;2
(1) 1002/    CE4A :                             ;       TAX                                                     ;2
(1) 1002/    CE4A :                             ;       BCS upper_lower                         ;2
(1) 1002/    CE4A :                             ;       lower_lower:
(1) 1002/    CE4A :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1002/    CE4A :                             ;       upper_lower:
(1) 1002/    CE4A :                             ;               JMP (JUMP_TABLE2,X)
(1) 1002/    CE4A :                             ;upper:
(1) 1002/    CE4A :                             ;       ASL
(1) 1002/    CE4A :                             ;       TAX
(1) 1002/    CE4A :                             ;       BCS upper_upper
(1) 1002/    CE4A :                             ;       lower_upper:
(1) 1002/    CE4A :                             ;               JMP (JUMP_TABLE3,X)
(1) 1002/    CE4A :                             ;       upper_upper:
(1) 1002/    CE4A :                             ;               JMP (JUMP_TABLE4,X)
(1) 1002/    CE4A :                             ;After jump:
(1) 1002/    CE4A :                             ;TYA                                                    ;2
(1) 1002/    CE4A :                             ;TAX                                                    ;2
(1) 1002/    CE4A :                             
(1) 1002/    CE4A :                             ;Method 4 - 28 cycles
(1) 1002/    CE4A :                             ;LDA (emu_PC,X)                 ;6
(1) 1002/    CE4A :                             ;TAY                                    ;2
(1) 1002/    CE4A :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1002/    CE4A :                             ;PHA                                    ;3
(1) 1002/    CE4A :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1002/    CE4A :                             ;PHA                                    ;3
(1) 1002/    CE4A :                             ;RTS                                    ;6
(1) 1002/    CE4A :                             
(1) 1002/    CE4A :                             ;Method 5 - 30 cycles
(1) 1002/    CE4A : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1002/    CE4C : A8                          TAY                                             ;2
(1) 1002/    CE4D : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1002/    CE50 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1002/    CE52 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 297 - 1/5/2022 12:19:0


(1) 1002/    CE55 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1002/    CE57 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1002/    CE5A :                                                     
(1) 1003/    CE5A :                     
(1) 1004/    CE5A :                     	;0xC8 - INY IMP
(1) 1005/    CE5A :                     	INY_IMP:
(1) 1006/    CE5A : (MACRO)             		OP_MACRO 200, "INY", "IMP", "INY_IMP"
(1) 1006/    CE5A :                             ;TODO
(1) 1007/    CE5A : (MACRO)             		NEXT_MACRO
(1) 1007/    CE5A :                                             
(1) 1007/    CE5A :  (MACRO-2)                  halt
(1) 1007/    CE5A : 00                          BRK
(1) 1007/    CE5B : 00                          BRK
(1) 1007/    CE5C :                             
(1) 1007/    CE5C :                             ;Method 1 - 60 cycles
(1) 1007/    CE5C :                             ;Jump table must be page aligned!!!
(1) 1007/    CE5C :                             ;LDA (emu_PC,X)                 ;6
(1) 1007/    CE5C :                             ;ASL                                    ;2
(1) 1007/    CE5C :                             ;STA emu_ptr,X                  ;4
(1) 1007/    CE5C :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1007/    CE5C :                             ;ADC #0                                 ;2
(1) 1007/    CE5C :                             ;STA emu_ptr+1,X                ;4
(1) 1007/    CE5C :                             ;LDA (emu_ptr,X)                ;6
(1) 1007/    CE5C :                             ;STA emu_ptr2,X                 ;4
(1) 1007/    CE5C :                             ;INC emu_ptr,X                  ;6
(1) 1007/    CE5C :                             ;BCC .skip                              ;2
(1) 1007/    CE5C :                             ;       INC emu_ptr+1,X         ;6
(1) 1007/    CE5C :                             ;.skip:
(1) 1007/    CE5C :                             ;LDA (emu_ptr,X)                ;6
(1) 1007/    CE5C :                             ;STA emu_ptr2+1,X               ;4
(1) 1007/    CE5C :                             ;JMP (emu_ptr2,X)               ;6
(1) 1007/    CE5C :                             
(1) 1007/    CE5C :                             ;Method 2 - 46 cycles
(1) 1007/    CE5C :                             ;Jump table must be page aligned!!!
(1) 1007/    CE5C :                             ;LDA (emu_PC,X)                 ;6
(1) 1007/    CE5C :                             ;STZ emu_ptr+1,X                ;4
(1) 1007/    CE5C :                             ;ASL                                    ;2
(1) 1007/    CE5C :                             ;ROL emu_ptr+1,X                ;6
(1) 1007/    CE5C :                             ;ASL                                    ;2
(1) 1007/    CE5C :                             ;ROL emu_ptr+1,X                ;6
(1) 1007/    CE5C :                             ;STA emu_ptr,X                  ;4                              
(1) 1007/    CE5C :                             ;LDA emu_ptr+1,X                ;4
(1) 1007/    CE5C :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1007/    CE5C :                             ;STA emu_ptr+1,X                ;4
(1) 1007/    CE5C :                             ;JMP (emu_ptr2,X)               ;6
(1) 1007/    CE5C :                             
(1) 1007/    CE5C :                             ;Method 3 - 30 cycles
(1) 1007/    CE5C :                             ;TXA                                                    ;2
(1) 1007/    CE5C :                             ;TAY                                                    ;2
(1) 1007/    CE5C :                             ;LDA (emu_PC,X)                                 ;6
(1) 1007/    CE5C :                             ;ASL                                                    ;2
(1) 1007/    CE5C :                             ;BCS upper                                              ;2
(1) 1007/    CE5C :                             ;lower:
(1) 1007/    CE5C :                             ;       ASL                                                     ;2
(1) 1007/    CE5C :                             ;       TAX                                                     ;2
(1) 1007/    CE5C :                             ;       BCS upper_lower                         ;2
(1) 1007/    CE5C :                             ;       lower_lower:
(1) 1007/    CE5C :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1007/    CE5C :                             ;       upper_lower:
(1) 1007/    CE5C :                             ;               JMP (JUMP_TABLE2,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 298 - 1/5/2022 12:19:0


(1) 1007/    CE5C :                             ;upper:
(1) 1007/    CE5C :                             ;       ASL
(1) 1007/    CE5C :                             ;       TAX
(1) 1007/    CE5C :                             ;       BCS upper_upper
(1) 1007/    CE5C :                             ;       lower_upper:
(1) 1007/    CE5C :                             ;               JMP (JUMP_TABLE3,X)
(1) 1007/    CE5C :                             ;       upper_upper:
(1) 1007/    CE5C :                             ;               JMP (JUMP_TABLE4,X)
(1) 1007/    CE5C :                             ;After jump:
(1) 1007/    CE5C :                             ;TYA                                                    ;2
(1) 1007/    CE5C :                             ;TAX                                                    ;2
(1) 1007/    CE5C :                             
(1) 1007/    CE5C :                             ;Method 4 - 28 cycles
(1) 1007/    CE5C :                             ;LDA (emu_PC,X)                 ;6
(1) 1007/    CE5C :                             ;TAY                                    ;2
(1) 1007/    CE5C :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1007/    CE5C :                             ;PHA                                    ;3
(1) 1007/    CE5C :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1007/    CE5C :                             ;PHA                                    ;3
(1) 1007/    CE5C :                             ;RTS                                    ;6
(1) 1007/    CE5C :                             
(1) 1007/    CE5C :                             ;Method 5 - 30 cycles
(1) 1007/    CE5C : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1007/    CE5E : A8                          TAY                                             ;2
(1) 1007/    CE5F : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1007/    CE62 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1007/    CE64 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1007/    CE67 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1007/    CE69 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1007/    CE6C :                                                     
(1) 1008/    CE6C :                     
(1) 1009/    CE6C :                     	;0xC9 - CMP IMMED
(1) 1010/    CE6C :                     	CMP_IMMED:
(1) 1011/    CE6C : (MACRO)             		OP_MACRO 201, "CMP", "IMMED", "CMP_IMMED"
(1) 1011/    CE6C :                             ;TODO
(1) 1012/    CE6C : (MACRO)             		NEXT_MACRO
(1) 1012/    CE6C :                                             
(1) 1012/    CE6C :  (MACRO-2)                  halt
(1) 1012/    CE6C : 00                          BRK
(1) 1012/    CE6D : 00                          BRK
(1) 1012/    CE6E :                             
(1) 1012/    CE6E :                             ;Method 1 - 60 cycles
(1) 1012/    CE6E :                             ;Jump table must be page aligned!!!
(1) 1012/    CE6E :                             ;LDA (emu_PC,X)                 ;6
(1) 1012/    CE6E :                             ;ASL                                    ;2
(1) 1012/    CE6E :                             ;STA emu_ptr,X                  ;4
(1) 1012/    CE6E :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1012/    CE6E :                             ;ADC #0                                 ;2
(1) 1012/    CE6E :                             ;STA emu_ptr+1,X                ;4
(1) 1012/    CE6E :                             ;LDA (emu_ptr,X)                ;6
(1) 1012/    CE6E :                             ;STA emu_ptr2,X                 ;4
(1) 1012/    CE6E :                             ;INC emu_ptr,X                  ;6
(1) 1012/    CE6E :                             ;BCC .skip                              ;2
(1) 1012/    CE6E :                             ;       INC emu_ptr+1,X         ;6
(1) 1012/    CE6E :                             ;.skip:
(1) 1012/    CE6E :                             ;LDA (emu_ptr,X)                ;6
(1) 1012/    CE6E :                             ;STA emu_ptr2+1,X               ;4
(1) 1012/    CE6E :                             ;JMP (emu_ptr2,X)               ;6
(1) 1012/    CE6E :                             
(1) 1012/    CE6E :                             ;Method 2 - 46 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 299 - 1/5/2022 12:19:0


(1) 1012/    CE6E :                             ;Jump table must be page aligned!!!
(1) 1012/    CE6E :                             ;LDA (emu_PC,X)                 ;6
(1) 1012/    CE6E :                             ;STZ emu_ptr+1,X                ;4
(1) 1012/    CE6E :                             ;ASL                                    ;2
(1) 1012/    CE6E :                             ;ROL emu_ptr+1,X                ;6
(1) 1012/    CE6E :                             ;ASL                                    ;2
(1) 1012/    CE6E :                             ;ROL emu_ptr+1,X                ;6
(1) 1012/    CE6E :                             ;STA emu_ptr,X                  ;4                              
(1) 1012/    CE6E :                             ;LDA emu_ptr+1,X                ;4
(1) 1012/    CE6E :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1012/    CE6E :                             ;STA emu_ptr+1,X                ;4
(1) 1012/    CE6E :                             ;JMP (emu_ptr2,X)               ;6
(1) 1012/    CE6E :                             
(1) 1012/    CE6E :                             ;Method 3 - 30 cycles
(1) 1012/    CE6E :                             ;TXA                                                    ;2
(1) 1012/    CE6E :                             ;TAY                                                    ;2
(1) 1012/    CE6E :                             ;LDA (emu_PC,X)                                 ;6
(1) 1012/    CE6E :                             ;ASL                                                    ;2
(1) 1012/    CE6E :                             ;BCS upper                                              ;2
(1) 1012/    CE6E :                             ;lower:
(1) 1012/    CE6E :                             ;       ASL                                                     ;2
(1) 1012/    CE6E :                             ;       TAX                                                     ;2
(1) 1012/    CE6E :                             ;       BCS upper_lower                         ;2
(1) 1012/    CE6E :                             ;       lower_lower:
(1) 1012/    CE6E :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1012/    CE6E :                             ;       upper_lower:
(1) 1012/    CE6E :                             ;               JMP (JUMP_TABLE2,X)
(1) 1012/    CE6E :                             ;upper:
(1) 1012/    CE6E :                             ;       ASL
(1) 1012/    CE6E :                             ;       TAX
(1) 1012/    CE6E :                             ;       BCS upper_upper
(1) 1012/    CE6E :                             ;       lower_upper:
(1) 1012/    CE6E :                             ;               JMP (JUMP_TABLE3,X)
(1) 1012/    CE6E :                             ;       upper_upper:
(1) 1012/    CE6E :                             ;               JMP (JUMP_TABLE4,X)
(1) 1012/    CE6E :                             ;After jump:
(1) 1012/    CE6E :                             ;TYA                                                    ;2
(1) 1012/    CE6E :                             ;TAX                                                    ;2
(1) 1012/    CE6E :                             
(1) 1012/    CE6E :                             ;Method 4 - 28 cycles
(1) 1012/    CE6E :                             ;LDA (emu_PC,X)                 ;6
(1) 1012/    CE6E :                             ;TAY                                    ;2
(1) 1012/    CE6E :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1012/    CE6E :                             ;PHA                                    ;3
(1) 1012/    CE6E :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1012/    CE6E :                             ;PHA                                    ;3
(1) 1012/    CE6E :                             ;RTS                                    ;6
(1) 1012/    CE6E :                             
(1) 1012/    CE6E :                             ;Method 5 - 30 cycles
(1) 1012/    CE6E : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1012/    CE70 : A8                          TAY                                             ;2
(1) 1012/    CE71 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1012/    CE74 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1012/    CE76 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1012/    CE79 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1012/    CE7B : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1012/    CE7E :                                                     
(1) 1013/    CE7E :                     
(1) 1014/    CE7E :                     	;0xCA - DEX IMP
(1) 1015/    CE7E :                     	DEX_IMP:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 300 - 1/5/2022 12:19:0


(1) 1016/    CE7E : (MACRO)             		OP_MACRO 202, "DEX", "IMP", "DEX_IMP"
(1) 1016/    CE7E :                             ;TODO
(1) 1017/    CE7E : (MACRO)             		NEXT_MACRO
(1) 1017/    CE7E :                                             
(1) 1017/    CE7E :  (MACRO-2)                  halt
(1) 1017/    CE7E : 00                          BRK
(1) 1017/    CE7F : 00                          BRK
(1) 1017/    CE80 :                             
(1) 1017/    CE80 :                             ;Method 1 - 60 cycles
(1) 1017/    CE80 :                             ;Jump table must be page aligned!!!
(1) 1017/    CE80 :                             ;LDA (emu_PC,X)                 ;6
(1) 1017/    CE80 :                             ;ASL                                    ;2
(1) 1017/    CE80 :                             ;STA emu_ptr,X                  ;4
(1) 1017/    CE80 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1017/    CE80 :                             ;ADC #0                                 ;2
(1) 1017/    CE80 :                             ;STA emu_ptr+1,X                ;4
(1) 1017/    CE80 :                             ;LDA (emu_ptr,X)                ;6
(1) 1017/    CE80 :                             ;STA emu_ptr2,X                 ;4
(1) 1017/    CE80 :                             ;INC emu_ptr,X                  ;6
(1) 1017/    CE80 :                             ;BCC .skip                              ;2
(1) 1017/    CE80 :                             ;       INC emu_ptr+1,X         ;6
(1) 1017/    CE80 :                             ;.skip:
(1) 1017/    CE80 :                             ;LDA (emu_ptr,X)                ;6
(1) 1017/    CE80 :                             ;STA emu_ptr2+1,X               ;4
(1) 1017/    CE80 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1017/    CE80 :                             
(1) 1017/    CE80 :                             ;Method 2 - 46 cycles
(1) 1017/    CE80 :                             ;Jump table must be page aligned!!!
(1) 1017/    CE80 :                             ;LDA (emu_PC,X)                 ;6
(1) 1017/    CE80 :                             ;STZ emu_ptr+1,X                ;4
(1) 1017/    CE80 :                             ;ASL                                    ;2
(1) 1017/    CE80 :                             ;ROL emu_ptr+1,X                ;6
(1) 1017/    CE80 :                             ;ASL                                    ;2
(1) 1017/    CE80 :                             ;ROL emu_ptr+1,X                ;6
(1) 1017/    CE80 :                             ;STA emu_ptr,X                  ;4                              
(1) 1017/    CE80 :                             ;LDA emu_ptr+1,X                ;4
(1) 1017/    CE80 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1017/    CE80 :                             ;STA emu_ptr+1,X                ;4
(1) 1017/    CE80 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1017/    CE80 :                             
(1) 1017/    CE80 :                             ;Method 3 - 30 cycles
(1) 1017/    CE80 :                             ;TXA                                                    ;2
(1) 1017/    CE80 :                             ;TAY                                                    ;2
(1) 1017/    CE80 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1017/    CE80 :                             ;ASL                                                    ;2
(1) 1017/    CE80 :                             ;BCS upper                                              ;2
(1) 1017/    CE80 :                             ;lower:
(1) 1017/    CE80 :                             ;       ASL                                                     ;2
(1) 1017/    CE80 :                             ;       TAX                                                     ;2
(1) 1017/    CE80 :                             ;       BCS upper_lower                         ;2
(1) 1017/    CE80 :                             ;       lower_lower:
(1) 1017/    CE80 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1017/    CE80 :                             ;       upper_lower:
(1) 1017/    CE80 :                             ;               JMP (JUMP_TABLE2,X)
(1) 1017/    CE80 :                             ;upper:
(1) 1017/    CE80 :                             ;       ASL
(1) 1017/    CE80 :                             ;       TAX
(1) 1017/    CE80 :                             ;       BCS upper_upper
(1) 1017/    CE80 :                             ;       lower_upper:
(1) 1017/    CE80 :                             ;               JMP (JUMP_TABLE3,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 301 - 1/5/2022 12:19:0


(1) 1017/    CE80 :                             ;       upper_upper:
(1) 1017/    CE80 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1017/    CE80 :                             ;After jump:
(1) 1017/    CE80 :                             ;TYA                                                    ;2
(1) 1017/    CE80 :                             ;TAX                                                    ;2
(1) 1017/    CE80 :                             
(1) 1017/    CE80 :                             ;Method 4 - 28 cycles
(1) 1017/    CE80 :                             ;LDA (emu_PC,X)                 ;6
(1) 1017/    CE80 :                             ;TAY                                    ;2
(1) 1017/    CE80 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1017/    CE80 :                             ;PHA                                    ;3
(1) 1017/    CE80 :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1017/    CE80 :                             ;PHA                                    ;3
(1) 1017/    CE80 :                             ;RTS                                    ;6
(1) 1017/    CE80 :                             
(1) 1017/    CE80 :                             ;Method 5 - 30 cycles
(1) 1017/    CE80 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1017/    CE82 : A8                          TAY                                             ;2
(1) 1017/    CE83 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1017/    CE86 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1017/    CE88 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1017/    CE8B : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1017/    CE8D : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1017/    CE90 :                                                     
(1) 1018/    CE90 :                     
(1) 1019/    CE90 :                     	;0xCB - NOP
(1) 1020/    CE90 :                     	NOP_0xCB:
(1) 1021/    CE90 : (MACRO)             		OP_MACRO 203, "NOP", "IMP", "NOP_0xCB"
(1) 1021/    CE90 :                             ;TODO
(1) 1022/    CE90 : (MACRO)             		NEXT_MACRO
(1) 1022/    CE90 :                                             
(1) 1022/    CE90 :  (MACRO-2)                  halt
(1) 1022/    CE90 : 00                          BRK
(1) 1022/    CE91 : 00                          BRK
(1) 1022/    CE92 :                             
(1) 1022/    CE92 :                             ;Method 1 - 60 cycles
(1) 1022/    CE92 :                             ;Jump table must be page aligned!!!
(1) 1022/    CE92 :                             ;LDA (emu_PC,X)                 ;6
(1) 1022/    CE92 :                             ;ASL                                    ;2
(1) 1022/    CE92 :                             ;STA emu_ptr,X                  ;4
(1) 1022/    CE92 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1022/    CE92 :                             ;ADC #0                                 ;2
(1) 1022/    CE92 :                             ;STA emu_ptr+1,X                ;4
(1) 1022/    CE92 :                             ;LDA (emu_ptr,X)                ;6
(1) 1022/    CE92 :                             ;STA emu_ptr2,X                 ;4
(1) 1022/    CE92 :                             ;INC emu_ptr,X                  ;6
(1) 1022/    CE92 :                             ;BCC .skip                              ;2
(1) 1022/    CE92 :                             ;       INC emu_ptr+1,X         ;6
(1) 1022/    CE92 :                             ;.skip:
(1) 1022/    CE92 :                             ;LDA (emu_ptr,X)                ;6
(1) 1022/    CE92 :                             ;STA emu_ptr2+1,X               ;4
(1) 1022/    CE92 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1022/    CE92 :                             
(1) 1022/    CE92 :                             ;Method 2 - 46 cycles
(1) 1022/    CE92 :                             ;Jump table must be page aligned!!!
(1) 1022/    CE92 :                             ;LDA (emu_PC,X)                 ;6
(1) 1022/    CE92 :                             ;STZ emu_ptr+1,X                ;4
(1) 1022/    CE92 :                             ;ASL                                    ;2
(1) 1022/    CE92 :                             ;ROL emu_ptr+1,X                ;6
(1) 1022/    CE92 :                             ;ASL                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 302 - 1/5/2022 12:19:0


(1) 1022/    CE92 :                             ;ROL emu_ptr+1,X                ;6
(1) 1022/    CE92 :                             ;STA emu_ptr,X                  ;4                              
(1) 1022/    CE92 :                             ;LDA emu_ptr+1,X                ;4
(1) 1022/    CE92 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1022/    CE92 :                             ;STA emu_ptr+1,X                ;4
(1) 1022/    CE92 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1022/    CE92 :                             
(1) 1022/    CE92 :                             ;Method 3 - 30 cycles
(1) 1022/    CE92 :                             ;TXA                                                    ;2
(1) 1022/    CE92 :                             ;TAY                                                    ;2
(1) 1022/    CE92 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1022/    CE92 :                             ;ASL                                                    ;2
(1) 1022/    CE92 :                             ;BCS upper                                              ;2
(1) 1022/    CE92 :                             ;lower:
(1) 1022/    CE92 :                             ;       ASL                                                     ;2
(1) 1022/    CE92 :                             ;       TAX                                                     ;2
(1) 1022/    CE92 :                             ;       BCS upper_lower                         ;2
(1) 1022/    CE92 :                             ;       lower_lower:
(1) 1022/    CE92 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1022/    CE92 :                             ;       upper_lower:
(1) 1022/    CE92 :                             ;               JMP (JUMP_TABLE2,X)
(1) 1022/    CE92 :                             ;upper:
(1) 1022/    CE92 :                             ;       ASL
(1) 1022/    CE92 :                             ;       TAX
(1) 1022/    CE92 :                             ;       BCS upper_upper
(1) 1022/    CE92 :                             ;       lower_upper:
(1) 1022/    CE92 :                             ;               JMP (JUMP_TABLE3,X)
(1) 1022/    CE92 :                             ;       upper_upper:
(1) 1022/    CE92 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1022/    CE92 :                             ;After jump:
(1) 1022/    CE92 :                             ;TYA                                                    ;2
(1) 1022/    CE92 :                             ;TAX                                                    ;2
(1) 1022/    CE92 :                             
(1) 1022/    CE92 :                             ;Method 4 - 28 cycles
(1) 1022/    CE92 :                             ;LDA (emu_PC,X)                 ;6
(1) 1022/    CE92 :                             ;TAY                                    ;2
(1) 1022/    CE92 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1022/    CE92 :                             ;PHA                                    ;3
(1) 1022/    CE92 :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1022/    CE92 :                             ;PHA                                    ;3
(1) 1022/    CE92 :                             ;RTS                                    ;6
(1) 1022/    CE92 :                             
(1) 1022/    CE92 :                             ;Method 5 - 30 cycles
(1) 1022/    CE92 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1022/    CE94 : A8                          TAY                                             ;2
(1) 1022/    CE95 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1022/    CE98 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1022/    CE9A : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1022/    CE9D : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1022/    CE9F : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1022/    CEA2 :                                                     
(1) 1023/    CEA2 :                     
(1) 1024/    CEA2 :                     	;0xCC - CPY ABS
(1) 1025/    CEA2 :                     	CPY_ABS:
(1) 1026/    CEA2 : (MACRO)             		OP_MACRO 204, "CPY", "ABS", "CPY_ABS"
(1) 1026/    CEA2 :                             ;TODO
(1) 1027/    CEA2 : (MACRO)             		NEXT_MACRO
(1) 1027/    CEA2 :                                             
(1) 1027/    CEA2 :  (MACRO-2)                  halt
(1) 1027/    CEA2 : 00                          BRK
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 303 - 1/5/2022 12:19:0


(1) 1027/    CEA3 : 00                          BRK
(1) 1027/    CEA4 :                             
(1) 1027/    CEA4 :                             ;Method 1 - 60 cycles
(1) 1027/    CEA4 :                             ;Jump table must be page aligned!!!
(1) 1027/    CEA4 :                             ;LDA (emu_PC,X)                 ;6
(1) 1027/    CEA4 :                             ;ASL                                    ;2
(1) 1027/    CEA4 :                             ;STA emu_ptr,X                  ;4
(1) 1027/    CEA4 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1027/    CEA4 :                             ;ADC #0                                 ;2
(1) 1027/    CEA4 :                             ;STA emu_ptr+1,X                ;4
(1) 1027/    CEA4 :                             ;LDA (emu_ptr,X)                ;6
(1) 1027/    CEA4 :                             ;STA emu_ptr2,X                 ;4
(1) 1027/    CEA4 :                             ;INC emu_ptr,X                  ;6
(1) 1027/    CEA4 :                             ;BCC .skip                              ;2
(1) 1027/    CEA4 :                             ;       INC emu_ptr+1,X         ;6
(1) 1027/    CEA4 :                             ;.skip:
(1) 1027/    CEA4 :                             ;LDA (emu_ptr,X)                ;6
(1) 1027/    CEA4 :                             ;STA emu_ptr2+1,X               ;4
(1) 1027/    CEA4 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1027/    CEA4 :                             
(1) 1027/    CEA4 :                             ;Method 2 - 46 cycles
(1) 1027/    CEA4 :                             ;Jump table must be page aligned!!!
(1) 1027/    CEA4 :                             ;LDA (emu_PC,X)                 ;6
(1) 1027/    CEA4 :                             ;STZ emu_ptr+1,X                ;4
(1) 1027/    CEA4 :                             ;ASL                                    ;2
(1) 1027/    CEA4 :                             ;ROL emu_ptr+1,X                ;6
(1) 1027/    CEA4 :                             ;ASL                                    ;2
(1) 1027/    CEA4 :                             ;ROL emu_ptr+1,X                ;6
(1) 1027/    CEA4 :                             ;STA emu_ptr,X                  ;4                              
(1) 1027/    CEA4 :                             ;LDA emu_ptr+1,X                ;4
(1) 1027/    CEA4 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1027/    CEA4 :                             ;STA emu_ptr+1,X                ;4
(1) 1027/    CEA4 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1027/    CEA4 :                             
(1) 1027/    CEA4 :                             ;Method 3 - 30 cycles
(1) 1027/    CEA4 :                             ;TXA                                                    ;2
(1) 1027/    CEA4 :                             ;TAY                                                    ;2
(1) 1027/    CEA4 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1027/    CEA4 :                             ;ASL                                                    ;2
(1) 1027/    CEA4 :                             ;BCS upper                                              ;2
(1) 1027/    CEA4 :                             ;lower:
(1) 1027/    CEA4 :                             ;       ASL                                                     ;2
(1) 1027/    CEA4 :                             ;       TAX                                                     ;2
(1) 1027/    CEA4 :                             ;       BCS upper_lower                         ;2
(1) 1027/    CEA4 :                             ;       lower_lower:
(1) 1027/    CEA4 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1027/    CEA4 :                             ;       upper_lower:
(1) 1027/    CEA4 :                             ;               JMP (JUMP_TABLE2,X)
(1) 1027/    CEA4 :                             ;upper:
(1) 1027/    CEA4 :                             ;       ASL
(1) 1027/    CEA4 :                             ;       TAX
(1) 1027/    CEA4 :                             ;       BCS upper_upper
(1) 1027/    CEA4 :                             ;       lower_upper:
(1) 1027/    CEA4 :                             ;               JMP (JUMP_TABLE3,X)
(1) 1027/    CEA4 :                             ;       upper_upper:
(1) 1027/    CEA4 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1027/    CEA4 :                             ;After jump:
(1) 1027/    CEA4 :                             ;TYA                                                    ;2
(1) 1027/    CEA4 :                             ;TAX                                                    ;2
(1) 1027/    CEA4 :                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 304 - 1/5/2022 12:19:0


(1) 1027/    CEA4 :                             ;Method 4 - 28 cycles
(1) 1027/    CEA4 :                             ;LDA (emu_PC,X)                 ;6
(1) 1027/    CEA4 :                             ;TAY                                    ;2
(1) 1027/    CEA4 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1027/    CEA4 :                             ;PHA                                    ;3
(1) 1027/    CEA4 :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1027/    CEA4 :                             ;PHA                                    ;3
(1) 1027/    CEA4 :                             ;RTS                                    ;6
(1) 1027/    CEA4 :                             
(1) 1027/    CEA4 :                             ;Method 5 - 30 cycles
(1) 1027/    CEA4 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1027/    CEA6 : A8                          TAY                                             ;2
(1) 1027/    CEA7 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1027/    CEAA : 95 0A                       STA emu_ptr,X                   ;4
(1) 1027/    CEAC : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1027/    CEAF : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1027/    CEB1 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1027/    CEB4 :                                                     
(1) 1028/    CEB4 :                     
(1) 1029/    CEB4 :                     	;0xCD - CMP ABS
(1) 1030/    CEB4 :                     	CMP_ABS:
(1) 1031/    CEB4 : (MACRO)             		OP_MACRO 205, "CMP", "ABS", "CMP_ABS"
(1) 1031/    CEB4 :                             ;TODO
(1) 1032/    CEB4 : (MACRO)             		NEXT_MACRO
(1) 1032/    CEB4 :                                             
(1) 1032/    CEB4 :  (MACRO-2)                  halt
(1) 1032/    CEB4 : 00                          BRK
(1) 1032/    CEB5 : 00                          BRK
(1) 1032/    CEB6 :                             
(1) 1032/    CEB6 :                             ;Method 1 - 60 cycles
(1) 1032/    CEB6 :                             ;Jump table must be page aligned!!!
(1) 1032/    CEB6 :                             ;LDA (emu_PC,X)                 ;6
(1) 1032/    CEB6 :                             ;ASL                                    ;2
(1) 1032/    CEB6 :                             ;STA emu_ptr,X                  ;4
(1) 1032/    CEB6 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1032/    CEB6 :                             ;ADC #0                                 ;2
(1) 1032/    CEB6 :                             ;STA emu_ptr+1,X                ;4
(1) 1032/    CEB6 :                             ;LDA (emu_ptr,X)                ;6
(1) 1032/    CEB6 :                             ;STA emu_ptr2,X                 ;4
(1) 1032/    CEB6 :                             ;INC emu_ptr,X                  ;6
(1) 1032/    CEB6 :                             ;BCC .skip                              ;2
(1) 1032/    CEB6 :                             ;       INC emu_ptr+1,X         ;6
(1) 1032/    CEB6 :                             ;.skip:
(1) 1032/    CEB6 :                             ;LDA (emu_ptr,X)                ;6
(1) 1032/    CEB6 :                             ;STA emu_ptr2+1,X               ;4
(1) 1032/    CEB6 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1032/    CEB6 :                             
(1) 1032/    CEB6 :                             ;Method 2 - 46 cycles
(1) 1032/    CEB6 :                             ;Jump table must be page aligned!!!
(1) 1032/    CEB6 :                             ;LDA (emu_PC,X)                 ;6
(1) 1032/    CEB6 :                             ;STZ emu_ptr+1,X                ;4
(1) 1032/    CEB6 :                             ;ASL                                    ;2
(1) 1032/    CEB6 :                             ;ROL emu_ptr+1,X                ;6
(1) 1032/    CEB6 :                             ;ASL                                    ;2
(1) 1032/    CEB6 :                             ;ROL emu_ptr+1,X                ;6
(1) 1032/    CEB6 :                             ;STA emu_ptr,X                  ;4                              
(1) 1032/    CEB6 :                             ;LDA emu_ptr+1,X                ;4
(1) 1032/    CEB6 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1032/    CEB6 :                             ;STA emu_ptr+1,X                ;4
(1) 1032/    CEB6 :                             ;JMP (emu_ptr2,X)               ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 305 - 1/5/2022 12:19:0


(1) 1032/    CEB6 :                             
(1) 1032/    CEB6 :                             ;Method 3 - 30 cycles
(1) 1032/    CEB6 :                             ;TXA                                                    ;2
(1) 1032/    CEB6 :                             ;TAY                                                    ;2
(1) 1032/    CEB6 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1032/    CEB6 :                             ;ASL                                                    ;2
(1) 1032/    CEB6 :                             ;BCS upper                                              ;2
(1) 1032/    CEB6 :                             ;lower:
(1) 1032/    CEB6 :                             ;       ASL                                                     ;2
(1) 1032/    CEB6 :                             ;       TAX                                                     ;2
(1) 1032/    CEB6 :                             ;       BCS upper_lower                         ;2
(1) 1032/    CEB6 :                             ;       lower_lower:
(1) 1032/    CEB6 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1032/    CEB6 :                             ;       upper_lower:
(1) 1032/    CEB6 :                             ;               JMP (JUMP_TABLE2,X)
(1) 1032/    CEB6 :                             ;upper:
(1) 1032/    CEB6 :                             ;       ASL
(1) 1032/    CEB6 :                             ;       TAX
(1) 1032/    CEB6 :                             ;       BCS upper_upper
(1) 1032/    CEB6 :                             ;       lower_upper:
(1) 1032/    CEB6 :                             ;               JMP (JUMP_TABLE3,X)
(1) 1032/    CEB6 :                             ;       upper_upper:
(1) 1032/    CEB6 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1032/    CEB6 :                             ;After jump:
(1) 1032/    CEB6 :                             ;TYA                                                    ;2
(1) 1032/    CEB6 :                             ;TAX                                                    ;2
(1) 1032/    CEB6 :                             
(1) 1032/    CEB6 :                             ;Method 4 - 28 cycles
(1) 1032/    CEB6 :                             ;LDA (emu_PC,X)                 ;6
(1) 1032/    CEB6 :                             ;TAY                                    ;2
(1) 1032/    CEB6 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1032/    CEB6 :                             ;PHA                                    ;3
(1) 1032/    CEB6 :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1032/    CEB6 :                             ;PHA                                    ;3
(1) 1032/    CEB6 :                             ;RTS                                    ;6
(1) 1032/    CEB6 :                             
(1) 1032/    CEB6 :                             ;Method 5 - 30 cycles
(1) 1032/    CEB6 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1032/    CEB8 : A8                          TAY                                             ;2
(1) 1032/    CEB9 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1032/    CEBC : 95 0A                       STA emu_ptr,X                   ;4
(1) 1032/    CEBE : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1032/    CEC1 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1032/    CEC3 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1032/    CEC6 :                                                     
(1) 1033/    CEC6 :                     
(1) 1034/    CEC6 :                     	;0xCE - DEC ABS
(1) 1035/    CEC6 :                     	DEC_ABS:
(1) 1036/    CEC6 : (MACRO)             		OP_MACRO 206, "DEC", "ABS", "DEC_ABS"
(1) 1036/    CEC6 :                             ;TODO
(1) 1037/    CEC6 : (MACRO)             		NEXT_MACRO
(1) 1037/    CEC6 :                                             
(1) 1037/    CEC6 :  (MACRO-2)                  halt
(1) 1037/    CEC6 : 00                          BRK
(1) 1037/    CEC7 : 00                          BRK
(1) 1037/    CEC8 :                             
(1) 1037/    CEC8 :                             ;Method 1 - 60 cycles
(1) 1037/    CEC8 :                             ;Jump table must be page aligned!!!
(1) 1037/    CEC8 :                             ;LDA (emu_PC,X)                 ;6
(1) 1037/    CEC8 :                             ;ASL                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 306 - 1/5/2022 12:19:0


(1) 1037/    CEC8 :                             ;STA emu_ptr,X                  ;4
(1) 1037/    CEC8 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1037/    CEC8 :                             ;ADC #0                                 ;2
(1) 1037/    CEC8 :                             ;STA emu_ptr+1,X                ;4
(1) 1037/    CEC8 :                             ;LDA (emu_ptr,X)                ;6
(1) 1037/    CEC8 :                             ;STA emu_ptr2,X                 ;4
(1) 1037/    CEC8 :                             ;INC emu_ptr,X                  ;6
(1) 1037/    CEC8 :                             ;BCC .skip                              ;2
(1) 1037/    CEC8 :                             ;       INC emu_ptr+1,X         ;6
(1) 1037/    CEC8 :                             ;.skip:
(1) 1037/    CEC8 :                             ;LDA (emu_ptr,X)                ;6
(1) 1037/    CEC8 :                             ;STA emu_ptr2+1,X               ;4
(1) 1037/    CEC8 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1037/    CEC8 :                             
(1) 1037/    CEC8 :                             ;Method 2 - 46 cycles
(1) 1037/    CEC8 :                             ;Jump table must be page aligned!!!
(1) 1037/    CEC8 :                             ;LDA (emu_PC,X)                 ;6
(1) 1037/    CEC8 :                             ;STZ emu_ptr+1,X                ;4
(1) 1037/    CEC8 :                             ;ASL                                    ;2
(1) 1037/    CEC8 :                             ;ROL emu_ptr+1,X                ;6
(1) 1037/    CEC8 :                             ;ASL                                    ;2
(1) 1037/    CEC8 :                             ;ROL emu_ptr+1,X                ;6
(1) 1037/    CEC8 :                             ;STA emu_ptr,X                  ;4                              
(1) 1037/    CEC8 :                             ;LDA emu_ptr+1,X                ;4
(1) 1037/    CEC8 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1037/    CEC8 :                             ;STA emu_ptr+1,X                ;4
(1) 1037/    CEC8 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1037/    CEC8 :                             
(1) 1037/    CEC8 :                             ;Method 3 - 30 cycles
(1) 1037/    CEC8 :                             ;TXA                                                    ;2
(1) 1037/    CEC8 :                             ;TAY                                                    ;2
(1) 1037/    CEC8 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1037/    CEC8 :                             ;ASL                                                    ;2
(1) 1037/    CEC8 :                             ;BCS upper                                              ;2
(1) 1037/    CEC8 :                             ;lower:
(1) 1037/    CEC8 :                             ;       ASL                                                     ;2
(1) 1037/    CEC8 :                             ;       TAX                                                     ;2
(1) 1037/    CEC8 :                             ;       BCS upper_lower                         ;2
(1) 1037/    CEC8 :                             ;       lower_lower:
(1) 1037/    CEC8 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1037/    CEC8 :                             ;       upper_lower:
(1) 1037/    CEC8 :                             ;               JMP (JUMP_TABLE2,X)
(1) 1037/    CEC8 :                             ;upper:
(1) 1037/    CEC8 :                             ;       ASL
(1) 1037/    CEC8 :                             ;       TAX
(1) 1037/    CEC8 :                             ;       BCS upper_upper
(1) 1037/    CEC8 :                             ;       lower_upper:
(1) 1037/    CEC8 :                             ;               JMP (JUMP_TABLE3,X)
(1) 1037/    CEC8 :                             ;       upper_upper:
(1) 1037/    CEC8 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1037/    CEC8 :                             ;After jump:
(1) 1037/    CEC8 :                             ;TYA                                                    ;2
(1) 1037/    CEC8 :                             ;TAX                                                    ;2
(1) 1037/    CEC8 :                             
(1) 1037/    CEC8 :                             ;Method 4 - 28 cycles
(1) 1037/    CEC8 :                             ;LDA (emu_PC,X)                 ;6
(1) 1037/    CEC8 :                             ;TAY                                    ;2
(1) 1037/    CEC8 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1037/    CEC8 :                             ;PHA                                    ;3
(1) 1037/    CEC8 :                             ;LDA JUMP_TABLE2,Y              ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 307 - 1/5/2022 12:19:0


(1) 1037/    CEC8 :                             ;PHA                                    ;3
(1) 1037/    CEC8 :                             ;RTS                                    ;6
(1) 1037/    CEC8 :                             
(1) 1037/    CEC8 :                             ;Method 5 - 30 cycles
(1) 1037/    CEC8 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1037/    CECA : A8                          TAY                                             ;2
(1) 1037/    CECB : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1037/    CECE : 95 0A                       STA emu_ptr,X                   ;4
(1) 1037/    CED0 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1037/    CED3 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1037/    CED5 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1037/    CED8 :                                                     
(1) 1038/    CED8 :                     
(1) 1039/    CED8 :                     	;0xCF - NOP
(1) 1040/    CED8 :                     	NOP_0xCF:
(1) 1041/    CED8 : (MACRO)             		OP_MACRO 207, "NOP", "IMP", "NOP_0xCF"
(1) 1041/    CED8 :                             ;TODO
(1) 1042/    CED8 : (MACRO)             		NEXT_MACRO
(1) 1042/    CED8 :                                             
(1) 1042/    CED8 :  (MACRO-2)                  halt
(1) 1042/    CED8 : 00                          BRK
(1) 1042/    CED9 : 00                          BRK
(1) 1042/    CEDA :                             
(1) 1042/    CEDA :                             ;Method 1 - 60 cycles
(1) 1042/    CEDA :                             ;Jump table must be page aligned!!!
(1) 1042/    CEDA :                             ;LDA (emu_PC,X)                 ;6
(1) 1042/    CEDA :                             ;ASL                                    ;2
(1) 1042/    CEDA :                             ;STA emu_ptr,X                  ;4
(1) 1042/    CEDA :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1042/    CEDA :                             ;ADC #0                                 ;2
(1) 1042/    CEDA :                             ;STA emu_ptr+1,X                ;4
(1) 1042/    CEDA :                             ;LDA (emu_ptr,X)                ;6
(1) 1042/    CEDA :                             ;STA emu_ptr2,X                 ;4
(1) 1042/    CEDA :                             ;INC emu_ptr,X                  ;6
(1) 1042/    CEDA :                             ;BCC .skip                              ;2
(1) 1042/    CEDA :                             ;       INC emu_ptr+1,X         ;6
(1) 1042/    CEDA :                             ;.skip:
(1) 1042/    CEDA :                             ;LDA (emu_ptr,X)                ;6
(1) 1042/    CEDA :                             ;STA emu_ptr2+1,X               ;4
(1) 1042/    CEDA :                             ;JMP (emu_ptr2,X)               ;6
(1) 1042/    CEDA :                             
(1) 1042/    CEDA :                             ;Method 2 - 46 cycles
(1) 1042/    CEDA :                             ;Jump table must be page aligned!!!
(1) 1042/    CEDA :                             ;LDA (emu_PC,X)                 ;6
(1) 1042/    CEDA :                             ;STZ emu_ptr+1,X                ;4
(1) 1042/    CEDA :                             ;ASL                                    ;2
(1) 1042/    CEDA :                             ;ROL emu_ptr+1,X                ;6
(1) 1042/    CEDA :                             ;ASL                                    ;2
(1) 1042/    CEDA :                             ;ROL emu_ptr+1,X                ;6
(1) 1042/    CEDA :                             ;STA emu_ptr,X                  ;4                              
(1) 1042/    CEDA :                             ;LDA emu_ptr+1,X                ;4
(1) 1042/    CEDA :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1042/    CEDA :                             ;STA emu_ptr+1,X                ;4
(1) 1042/    CEDA :                             ;JMP (emu_ptr2,X)               ;6
(1) 1042/    CEDA :                             
(1) 1042/    CEDA :                             ;Method 3 - 30 cycles
(1) 1042/    CEDA :                             ;TXA                                                    ;2
(1) 1042/    CEDA :                             ;TAY                                                    ;2
(1) 1042/    CEDA :                             ;LDA (emu_PC,X)                                 ;6
(1) 1042/    CEDA :                             ;ASL                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 308 - 1/5/2022 12:19:0


(1) 1042/    CEDA :                             ;BCS upper                                              ;2
(1) 1042/    CEDA :                             ;lower:
(1) 1042/    CEDA :                             ;       ASL                                                     ;2
(1) 1042/    CEDA :                             ;       TAX                                                     ;2
(1) 1042/    CEDA :                             ;       BCS upper_lower                         ;2
(1) 1042/    CEDA :                             ;       lower_lower:
(1) 1042/    CEDA :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1042/    CEDA :                             ;       upper_lower:
(1) 1042/    CEDA :                             ;               JMP (JUMP_TABLE2,X)
(1) 1042/    CEDA :                             ;upper:
(1) 1042/    CEDA :                             ;       ASL
(1) 1042/    CEDA :                             ;       TAX
(1) 1042/    CEDA :                             ;       BCS upper_upper
(1) 1042/    CEDA :                             ;       lower_upper:
(1) 1042/    CEDA :                             ;               JMP (JUMP_TABLE3,X)
(1) 1042/    CEDA :                             ;       upper_upper:
(1) 1042/    CEDA :                             ;               JMP (JUMP_TABLE4,X)
(1) 1042/    CEDA :                             ;After jump:
(1) 1042/    CEDA :                             ;TYA                                                    ;2
(1) 1042/    CEDA :                             ;TAX                                                    ;2
(1) 1042/    CEDA :                             
(1) 1042/    CEDA :                             ;Method 4 - 28 cycles
(1) 1042/    CEDA :                             ;LDA (emu_PC,X)                 ;6
(1) 1042/    CEDA :                             ;TAY                                    ;2
(1) 1042/    CEDA :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1042/    CEDA :                             ;PHA                                    ;3
(1) 1042/    CEDA :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1042/    CEDA :                             ;PHA                                    ;3
(1) 1042/    CEDA :                             ;RTS                                    ;6
(1) 1042/    CEDA :                             
(1) 1042/    CEDA :                             ;Method 5 - 30 cycles
(1) 1042/    CEDA : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1042/    CEDC : A8                          TAY                                             ;2
(1) 1042/    CEDD : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1042/    CEE0 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1042/    CEE2 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1042/    CEE5 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1042/    CEE7 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1042/    CEEA :                                                     
(1) 1043/    CEEA :                     
(1) 1044/    CEEA :                     	;0xD0 - BNE REL
(1) 1045/    CEEA :                     	BNE_REL:
(1) 1046/    CEEA : (MACRO)             		OP_MACRO 208, "BNE", "REL", "BNE_REL"
(1) 1046/    CEEA :                             ;TODO
(1) 1047/    CEEA : (MACRO)             		NEXT_MACRO
(1) 1047/    CEEA :                                             
(1) 1047/    CEEA :  (MACRO-2)                  halt
(1) 1047/    CEEA : 00                          BRK
(1) 1047/    CEEB : 00                          BRK
(1) 1047/    CEEC :                             
(1) 1047/    CEEC :                             ;Method 1 - 60 cycles
(1) 1047/    CEEC :                             ;Jump table must be page aligned!!!
(1) 1047/    CEEC :                             ;LDA (emu_PC,X)                 ;6
(1) 1047/    CEEC :                             ;ASL                                    ;2
(1) 1047/    CEEC :                             ;STA emu_ptr,X                  ;4
(1) 1047/    CEEC :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1047/    CEEC :                             ;ADC #0                                 ;2
(1) 1047/    CEEC :                             ;STA emu_ptr+1,X                ;4
(1) 1047/    CEEC :                             ;LDA (emu_ptr,X)                ;6
(1) 1047/    CEEC :                             ;STA emu_ptr2,X                 ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 309 - 1/5/2022 12:19:0


(1) 1047/    CEEC :                             ;INC emu_ptr,X                  ;6
(1) 1047/    CEEC :                             ;BCC .skip                              ;2
(1) 1047/    CEEC :                             ;       INC emu_ptr+1,X         ;6
(1) 1047/    CEEC :                             ;.skip:
(1) 1047/    CEEC :                             ;LDA (emu_ptr,X)                ;6
(1) 1047/    CEEC :                             ;STA emu_ptr2+1,X               ;4
(1) 1047/    CEEC :                             ;JMP (emu_ptr2,X)               ;6
(1) 1047/    CEEC :                             
(1) 1047/    CEEC :                             ;Method 2 - 46 cycles
(1) 1047/    CEEC :                             ;Jump table must be page aligned!!!
(1) 1047/    CEEC :                             ;LDA (emu_PC,X)                 ;6
(1) 1047/    CEEC :                             ;STZ emu_ptr+1,X                ;4
(1) 1047/    CEEC :                             ;ASL                                    ;2
(1) 1047/    CEEC :                             ;ROL emu_ptr+1,X                ;6
(1) 1047/    CEEC :                             ;ASL                                    ;2
(1) 1047/    CEEC :                             ;ROL emu_ptr+1,X                ;6
(1) 1047/    CEEC :                             ;STA emu_ptr,X                  ;4                              
(1) 1047/    CEEC :                             ;LDA emu_ptr+1,X                ;4
(1) 1047/    CEEC :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1047/    CEEC :                             ;STA emu_ptr+1,X                ;4
(1) 1047/    CEEC :                             ;JMP (emu_ptr2,X)               ;6
(1) 1047/    CEEC :                             
(1) 1047/    CEEC :                             ;Method 3 - 30 cycles
(1) 1047/    CEEC :                             ;TXA                                                    ;2
(1) 1047/    CEEC :                             ;TAY                                                    ;2
(1) 1047/    CEEC :                             ;LDA (emu_PC,X)                                 ;6
(1) 1047/    CEEC :                             ;ASL                                                    ;2
(1) 1047/    CEEC :                             ;BCS upper                                              ;2
(1) 1047/    CEEC :                             ;lower:
(1) 1047/    CEEC :                             ;       ASL                                                     ;2
(1) 1047/    CEEC :                             ;       TAX                                                     ;2
(1) 1047/    CEEC :                             ;       BCS upper_lower                         ;2
(1) 1047/    CEEC :                             ;       lower_lower:
(1) 1047/    CEEC :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1047/    CEEC :                             ;       upper_lower:
(1) 1047/    CEEC :                             ;               JMP (JUMP_TABLE2,X)
(1) 1047/    CEEC :                             ;upper:
(1) 1047/    CEEC :                             ;       ASL
(1) 1047/    CEEC :                             ;       TAX
(1) 1047/    CEEC :                             ;       BCS upper_upper
(1) 1047/    CEEC :                             ;       lower_upper:
(1) 1047/    CEEC :                             ;               JMP (JUMP_TABLE3,X)
(1) 1047/    CEEC :                             ;       upper_upper:
(1) 1047/    CEEC :                             ;               JMP (JUMP_TABLE4,X)
(1) 1047/    CEEC :                             ;After jump:
(1) 1047/    CEEC :                             ;TYA                                                    ;2
(1) 1047/    CEEC :                             ;TAX                                                    ;2
(1) 1047/    CEEC :                             
(1) 1047/    CEEC :                             ;Method 4 - 28 cycles
(1) 1047/    CEEC :                             ;LDA (emu_PC,X)                 ;6
(1) 1047/    CEEC :                             ;TAY                                    ;2
(1) 1047/    CEEC :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1047/    CEEC :                             ;PHA                                    ;3
(1) 1047/    CEEC :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1047/    CEEC :                             ;PHA                                    ;3
(1) 1047/    CEEC :                             ;RTS                                    ;6
(1) 1047/    CEEC :                             
(1) 1047/    CEEC :                             ;Method 5 - 30 cycles
(1) 1047/    CEEC : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1047/    CEEE : A8                          TAY                                             ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 310 - 1/5/2022 12:19:0


(1) 1047/    CEEF : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1047/    CEF2 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1047/    CEF4 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1047/    CEF7 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1047/    CEF9 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1047/    CEFC :                                                     
(1) 1048/    CEFC :                     
(1) 1049/    CEFC :                     	;0xD1 - CMP IY
(1) 1050/    CEFC :                     	CMP_IY:
(1) 1051/    CEFC : (MACRO)             		OP_MACRO 209, "CMP", "IY", "CMP_IY"
(1) 1051/    CEFC :                             ;TODO
(1) 1052/    CEFC : (MACRO)             		NEXT_MACRO
(1) 1052/    CEFC :                                             
(1) 1052/    CEFC :  (MACRO-2)                  halt
(1) 1052/    CEFC : 00                          BRK
(1) 1052/    CEFD : 00                          BRK
(1) 1052/    CEFE :                             
(1) 1052/    CEFE :                             ;Method 1 - 60 cycles
(1) 1052/    CEFE :                             ;Jump table must be page aligned!!!
(1) 1052/    CEFE :                             ;LDA (emu_PC,X)                 ;6
(1) 1052/    CEFE :                             ;ASL                                    ;2
(1) 1052/    CEFE :                             ;STA emu_ptr,X                  ;4
(1) 1052/    CEFE :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1052/    CEFE :                             ;ADC #0                                 ;2
(1) 1052/    CEFE :                             ;STA emu_ptr+1,X                ;4
(1) 1052/    CEFE :                             ;LDA (emu_ptr,X)                ;6
(1) 1052/    CEFE :                             ;STA emu_ptr2,X                 ;4
(1) 1052/    CEFE :                             ;INC emu_ptr,X                  ;6
(1) 1052/    CEFE :                             ;BCC .skip                              ;2
(1) 1052/    CEFE :                             ;       INC emu_ptr+1,X         ;6
(1) 1052/    CEFE :                             ;.skip:
(1) 1052/    CEFE :                             ;LDA (emu_ptr,X)                ;6
(1) 1052/    CEFE :                             ;STA emu_ptr2+1,X               ;4
(1) 1052/    CEFE :                             ;JMP (emu_ptr2,X)               ;6
(1) 1052/    CEFE :                             
(1) 1052/    CEFE :                             ;Method 2 - 46 cycles
(1) 1052/    CEFE :                             ;Jump table must be page aligned!!!
(1) 1052/    CEFE :                             ;LDA (emu_PC,X)                 ;6
(1) 1052/    CEFE :                             ;STZ emu_ptr+1,X                ;4
(1) 1052/    CEFE :                             ;ASL                                    ;2
(1) 1052/    CEFE :                             ;ROL emu_ptr+1,X                ;6
(1) 1052/    CEFE :                             ;ASL                                    ;2
(1) 1052/    CEFE :                             ;ROL emu_ptr+1,X                ;6
(1) 1052/    CEFE :                             ;STA emu_ptr,X                  ;4                              
(1) 1052/    CEFE :                             ;LDA emu_ptr+1,X                ;4
(1) 1052/    CEFE :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1052/    CEFE :                             ;STA emu_ptr+1,X                ;4
(1) 1052/    CEFE :                             ;JMP (emu_ptr2,X)               ;6
(1) 1052/    CEFE :                             
(1) 1052/    CEFE :                             ;Method 3 - 30 cycles
(1) 1052/    CEFE :                             ;TXA                                                    ;2
(1) 1052/    CEFE :                             ;TAY                                                    ;2
(1) 1052/    CEFE :                             ;LDA (emu_PC,X)                                 ;6
(1) 1052/    CEFE :                             ;ASL                                                    ;2
(1) 1052/    CEFE :                             ;BCS upper                                              ;2
(1) 1052/    CEFE :                             ;lower:
(1) 1052/    CEFE :                             ;       ASL                                                     ;2
(1) 1052/    CEFE :                             ;       TAX                                                     ;2
(1) 1052/    CEFE :                             ;       BCS upper_lower                         ;2
(1) 1052/    CEFE :                             ;       lower_lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 311 - 1/5/2022 12:19:0


(1) 1052/    CEFE :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1052/    CEFE :                             ;       upper_lower:
(1) 1052/    CEFE :                             ;               JMP (JUMP_TABLE2,X)
(1) 1052/    CEFE :                             ;upper:
(1) 1052/    CEFE :                             ;       ASL
(1) 1052/    CEFE :                             ;       TAX
(1) 1052/    CEFE :                             ;       BCS upper_upper
(1) 1052/    CEFE :                             ;       lower_upper:
(1) 1052/    CEFE :                             ;               JMP (JUMP_TABLE3,X)
(1) 1052/    CEFE :                             ;       upper_upper:
(1) 1052/    CEFE :                             ;               JMP (JUMP_TABLE4,X)
(1) 1052/    CEFE :                             ;After jump:
(1) 1052/    CEFE :                             ;TYA                                                    ;2
(1) 1052/    CEFE :                             ;TAX                                                    ;2
(1) 1052/    CEFE :                             
(1) 1052/    CEFE :                             ;Method 4 - 28 cycles
(1) 1052/    CEFE :                             ;LDA (emu_PC,X)                 ;6
(1) 1052/    CEFE :                             ;TAY                                    ;2
(1) 1052/    CEFE :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1052/    CEFE :                             ;PHA                                    ;3
(1) 1052/    CEFE :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1052/    CEFE :                             ;PHA                                    ;3
(1) 1052/    CEFE :                             ;RTS                                    ;6
(1) 1052/    CEFE :                             
(1) 1052/    CEFE :                             ;Method 5 - 30 cycles
(1) 1052/    CEFE : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1052/    CF00 : A8                          TAY                                             ;2
(1) 1052/    CF01 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1052/    CF04 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1052/    CF06 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1052/    CF09 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1052/    CF0B : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1052/    CF0E :                                                     
(1) 1053/    CF0E :                     
(1) 1054/    CF0E :                     	;0xD2 - NOP
(1) 1055/    CF0E :                     	NOP_0xD2:
(1) 1056/    CF0E : (MACRO)             		OP_MACRO 210, "NOP", "IMP", "NOP_0xD2"
(1) 1056/    CF0E :                             ;TODO
(1) 1057/    CF0E : (MACRO)             		NEXT_MACRO
(1) 1057/    CF0E :                                             
(1) 1057/    CF0E :  (MACRO-2)                  halt
(1) 1057/    CF0E : 00                          BRK
(1) 1057/    CF0F : 00                          BRK
(1) 1057/    CF10 :                             
(1) 1057/    CF10 :                             ;Method 1 - 60 cycles
(1) 1057/    CF10 :                             ;Jump table must be page aligned!!!
(1) 1057/    CF10 :                             ;LDA (emu_PC,X)                 ;6
(1) 1057/    CF10 :                             ;ASL                                    ;2
(1) 1057/    CF10 :                             ;STA emu_ptr,X                  ;4
(1) 1057/    CF10 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1057/    CF10 :                             ;ADC #0                                 ;2
(1) 1057/    CF10 :                             ;STA emu_ptr+1,X                ;4
(1) 1057/    CF10 :                             ;LDA (emu_ptr,X)                ;6
(1) 1057/    CF10 :                             ;STA emu_ptr2,X                 ;4
(1) 1057/    CF10 :                             ;INC emu_ptr,X                  ;6
(1) 1057/    CF10 :                             ;BCC .skip                              ;2
(1) 1057/    CF10 :                             ;       INC emu_ptr+1,X         ;6
(1) 1057/    CF10 :                             ;.skip:
(1) 1057/    CF10 :                             ;LDA (emu_ptr,X)                ;6
(1) 1057/    CF10 :                             ;STA emu_ptr2+1,X               ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 312 - 1/5/2022 12:19:0


(1) 1057/    CF10 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1057/    CF10 :                             
(1) 1057/    CF10 :                             ;Method 2 - 46 cycles
(1) 1057/    CF10 :                             ;Jump table must be page aligned!!!
(1) 1057/    CF10 :                             ;LDA (emu_PC,X)                 ;6
(1) 1057/    CF10 :                             ;STZ emu_ptr+1,X                ;4
(1) 1057/    CF10 :                             ;ASL                                    ;2
(1) 1057/    CF10 :                             ;ROL emu_ptr+1,X                ;6
(1) 1057/    CF10 :                             ;ASL                                    ;2
(1) 1057/    CF10 :                             ;ROL emu_ptr+1,X                ;6
(1) 1057/    CF10 :                             ;STA emu_ptr,X                  ;4                              
(1) 1057/    CF10 :                             ;LDA emu_ptr+1,X                ;4
(1) 1057/    CF10 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1057/    CF10 :                             ;STA emu_ptr+1,X                ;4
(1) 1057/    CF10 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1057/    CF10 :                             
(1) 1057/    CF10 :                             ;Method 3 - 30 cycles
(1) 1057/    CF10 :                             ;TXA                                                    ;2
(1) 1057/    CF10 :                             ;TAY                                                    ;2
(1) 1057/    CF10 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1057/    CF10 :                             ;ASL                                                    ;2
(1) 1057/    CF10 :                             ;BCS upper                                              ;2
(1) 1057/    CF10 :                             ;lower:
(1) 1057/    CF10 :                             ;       ASL                                                     ;2
(1) 1057/    CF10 :                             ;       TAX                                                     ;2
(1) 1057/    CF10 :                             ;       BCS upper_lower                         ;2
(1) 1057/    CF10 :                             ;       lower_lower:
(1) 1057/    CF10 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1057/    CF10 :                             ;       upper_lower:
(1) 1057/    CF10 :                             ;               JMP (JUMP_TABLE2,X)
(1) 1057/    CF10 :                             ;upper:
(1) 1057/    CF10 :                             ;       ASL
(1) 1057/    CF10 :                             ;       TAX
(1) 1057/    CF10 :                             ;       BCS upper_upper
(1) 1057/    CF10 :                             ;       lower_upper:
(1) 1057/    CF10 :                             ;               JMP (JUMP_TABLE3,X)
(1) 1057/    CF10 :                             ;       upper_upper:
(1) 1057/    CF10 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1057/    CF10 :                             ;After jump:
(1) 1057/    CF10 :                             ;TYA                                                    ;2
(1) 1057/    CF10 :                             ;TAX                                                    ;2
(1) 1057/    CF10 :                             
(1) 1057/    CF10 :                             ;Method 4 - 28 cycles
(1) 1057/    CF10 :                             ;LDA (emu_PC,X)                 ;6
(1) 1057/    CF10 :                             ;TAY                                    ;2
(1) 1057/    CF10 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1057/    CF10 :                             ;PHA                                    ;3
(1) 1057/    CF10 :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1057/    CF10 :                             ;PHA                                    ;3
(1) 1057/    CF10 :                             ;RTS                                    ;6
(1) 1057/    CF10 :                             
(1) 1057/    CF10 :                             ;Method 5 - 30 cycles
(1) 1057/    CF10 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1057/    CF12 : A8                          TAY                                             ;2
(1) 1057/    CF13 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1057/    CF16 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1057/    CF18 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1057/    CF1B : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1057/    CF1D : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1057/    CF20 :                                                     
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 313 - 1/5/2022 12:19:0


(1) 1058/    CF20 :                     
(1) 1059/    CF20 :                     	;0xD3 - NOP
(1) 1060/    CF20 :                     	NOP_0xD3:
(1) 1061/    CF20 : (MACRO)             		OP_MACRO 211, "NOP", "IMP", "NOP_0xD3"
(1) 1061/    CF20 :                             ;TODO
(1) 1062/    CF20 : (MACRO)             		NEXT_MACRO
(1) 1062/    CF20 :                                             
(1) 1062/    CF20 :  (MACRO-2)                  halt
(1) 1062/    CF20 : 00                          BRK
(1) 1062/    CF21 : 00                          BRK
(1) 1062/    CF22 :                             
(1) 1062/    CF22 :                             ;Method 1 - 60 cycles
(1) 1062/    CF22 :                             ;Jump table must be page aligned!!!
(1) 1062/    CF22 :                             ;LDA (emu_PC,X)                 ;6
(1) 1062/    CF22 :                             ;ASL                                    ;2
(1) 1062/    CF22 :                             ;STA emu_ptr,X                  ;4
(1) 1062/    CF22 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1062/    CF22 :                             ;ADC #0                                 ;2
(1) 1062/    CF22 :                             ;STA emu_ptr+1,X                ;4
(1) 1062/    CF22 :                             ;LDA (emu_ptr,X)                ;6
(1) 1062/    CF22 :                             ;STA emu_ptr2,X                 ;4
(1) 1062/    CF22 :                             ;INC emu_ptr,X                  ;6
(1) 1062/    CF22 :                             ;BCC .skip                              ;2
(1) 1062/    CF22 :                             ;       INC emu_ptr+1,X         ;6
(1) 1062/    CF22 :                             ;.skip:
(1) 1062/    CF22 :                             ;LDA (emu_ptr,X)                ;6
(1) 1062/    CF22 :                             ;STA emu_ptr2+1,X               ;4
(1) 1062/    CF22 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1062/    CF22 :                             
(1) 1062/    CF22 :                             ;Method 2 - 46 cycles
(1) 1062/    CF22 :                             ;Jump table must be page aligned!!!
(1) 1062/    CF22 :                             ;LDA (emu_PC,X)                 ;6
(1) 1062/    CF22 :                             ;STZ emu_ptr+1,X                ;4
(1) 1062/    CF22 :                             ;ASL                                    ;2
(1) 1062/    CF22 :                             ;ROL emu_ptr+1,X                ;6
(1) 1062/    CF22 :                             ;ASL                                    ;2
(1) 1062/    CF22 :                             ;ROL emu_ptr+1,X                ;6
(1) 1062/    CF22 :                             ;STA emu_ptr,X                  ;4                              
(1) 1062/    CF22 :                             ;LDA emu_ptr+1,X                ;4
(1) 1062/    CF22 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1062/    CF22 :                             ;STA emu_ptr+1,X                ;4
(1) 1062/    CF22 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1062/    CF22 :                             
(1) 1062/    CF22 :                             ;Method 3 - 30 cycles
(1) 1062/    CF22 :                             ;TXA                                                    ;2
(1) 1062/    CF22 :                             ;TAY                                                    ;2
(1) 1062/    CF22 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1062/    CF22 :                             ;ASL                                                    ;2
(1) 1062/    CF22 :                             ;BCS upper                                              ;2
(1) 1062/    CF22 :                             ;lower:
(1) 1062/    CF22 :                             ;       ASL                                                     ;2
(1) 1062/    CF22 :                             ;       TAX                                                     ;2
(1) 1062/    CF22 :                             ;       BCS upper_lower                         ;2
(1) 1062/    CF22 :                             ;       lower_lower:
(1) 1062/    CF22 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1062/    CF22 :                             ;       upper_lower:
(1) 1062/    CF22 :                             ;               JMP (JUMP_TABLE2,X)
(1) 1062/    CF22 :                             ;upper:
(1) 1062/    CF22 :                             ;       ASL
(1) 1062/    CF22 :                             ;       TAX
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 314 - 1/5/2022 12:19:0


(1) 1062/    CF22 :                             ;       BCS upper_upper
(1) 1062/    CF22 :                             ;       lower_upper:
(1) 1062/    CF22 :                             ;               JMP (JUMP_TABLE3,X)
(1) 1062/    CF22 :                             ;       upper_upper:
(1) 1062/    CF22 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1062/    CF22 :                             ;After jump:
(1) 1062/    CF22 :                             ;TYA                                                    ;2
(1) 1062/    CF22 :                             ;TAX                                                    ;2
(1) 1062/    CF22 :                             
(1) 1062/    CF22 :                             ;Method 4 - 28 cycles
(1) 1062/    CF22 :                             ;LDA (emu_PC,X)                 ;6
(1) 1062/    CF22 :                             ;TAY                                    ;2
(1) 1062/    CF22 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1062/    CF22 :                             ;PHA                                    ;3
(1) 1062/    CF22 :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1062/    CF22 :                             ;PHA                                    ;3
(1) 1062/    CF22 :                             ;RTS                                    ;6
(1) 1062/    CF22 :                             
(1) 1062/    CF22 :                             ;Method 5 - 30 cycles
(1) 1062/    CF22 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1062/    CF24 : A8                          TAY                                             ;2
(1) 1062/    CF25 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1062/    CF28 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1062/    CF2A : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1062/    CF2D : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1062/    CF2F : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1062/    CF32 :                                                     
(1) 1063/    CF32 :                     
(1) 1064/    CF32 :                     	;0xD4 - NOP
(1) 1065/    CF32 :                     	NOP_0xD4:
(1) 1066/    CF32 : (MACRO)             		OP_MACRO 212, "NOP", "IMP", "NOP_0xD4"
(1) 1066/    CF32 :                             ;TODO
(1) 1067/    CF32 : (MACRO)             		NEXT_MACRO
(1) 1067/    CF32 :                                             
(1) 1067/    CF32 :  (MACRO-2)                  halt
(1) 1067/    CF32 : 00                          BRK
(1) 1067/    CF33 : 00                          BRK
(1) 1067/    CF34 :                             
(1) 1067/    CF34 :                             ;Method 1 - 60 cycles
(1) 1067/    CF34 :                             ;Jump table must be page aligned!!!
(1) 1067/    CF34 :                             ;LDA (emu_PC,X)                 ;6
(1) 1067/    CF34 :                             ;ASL                                    ;2
(1) 1067/    CF34 :                             ;STA emu_ptr,X                  ;4
(1) 1067/    CF34 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1067/    CF34 :                             ;ADC #0                                 ;2
(1) 1067/    CF34 :                             ;STA emu_ptr+1,X                ;4
(1) 1067/    CF34 :                             ;LDA (emu_ptr,X)                ;6
(1) 1067/    CF34 :                             ;STA emu_ptr2,X                 ;4
(1) 1067/    CF34 :                             ;INC emu_ptr,X                  ;6
(1) 1067/    CF34 :                             ;BCC .skip                              ;2
(1) 1067/    CF34 :                             ;       INC emu_ptr+1,X         ;6
(1) 1067/    CF34 :                             ;.skip:
(1) 1067/    CF34 :                             ;LDA (emu_ptr,X)                ;6
(1) 1067/    CF34 :                             ;STA emu_ptr2+1,X               ;4
(1) 1067/    CF34 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1067/    CF34 :                             
(1) 1067/    CF34 :                             ;Method 2 - 46 cycles
(1) 1067/    CF34 :                             ;Jump table must be page aligned!!!
(1) 1067/    CF34 :                             ;LDA (emu_PC,X)                 ;6
(1) 1067/    CF34 :                             ;STZ emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 315 - 1/5/2022 12:19:0


(1) 1067/    CF34 :                             ;ASL                                    ;2
(1) 1067/    CF34 :                             ;ROL emu_ptr+1,X                ;6
(1) 1067/    CF34 :                             ;ASL                                    ;2
(1) 1067/    CF34 :                             ;ROL emu_ptr+1,X                ;6
(1) 1067/    CF34 :                             ;STA emu_ptr,X                  ;4                              
(1) 1067/    CF34 :                             ;LDA emu_ptr+1,X                ;4
(1) 1067/    CF34 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1067/    CF34 :                             ;STA emu_ptr+1,X                ;4
(1) 1067/    CF34 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1067/    CF34 :                             
(1) 1067/    CF34 :                             ;Method 3 - 30 cycles
(1) 1067/    CF34 :                             ;TXA                                                    ;2
(1) 1067/    CF34 :                             ;TAY                                                    ;2
(1) 1067/    CF34 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1067/    CF34 :                             ;ASL                                                    ;2
(1) 1067/    CF34 :                             ;BCS upper                                              ;2
(1) 1067/    CF34 :                             ;lower:
(1) 1067/    CF34 :                             ;       ASL                                                     ;2
(1) 1067/    CF34 :                             ;       TAX                                                     ;2
(1) 1067/    CF34 :                             ;       BCS upper_lower                         ;2
(1) 1067/    CF34 :                             ;       lower_lower:
(1) 1067/    CF34 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1067/    CF34 :                             ;       upper_lower:
(1) 1067/    CF34 :                             ;               JMP (JUMP_TABLE2,X)
(1) 1067/    CF34 :                             ;upper:
(1) 1067/    CF34 :                             ;       ASL
(1) 1067/    CF34 :                             ;       TAX
(1) 1067/    CF34 :                             ;       BCS upper_upper
(1) 1067/    CF34 :                             ;       lower_upper:
(1) 1067/    CF34 :                             ;               JMP (JUMP_TABLE3,X)
(1) 1067/    CF34 :                             ;       upper_upper:
(1) 1067/    CF34 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1067/    CF34 :                             ;After jump:
(1) 1067/    CF34 :                             ;TYA                                                    ;2
(1) 1067/    CF34 :                             ;TAX                                                    ;2
(1) 1067/    CF34 :                             
(1) 1067/    CF34 :                             ;Method 4 - 28 cycles
(1) 1067/    CF34 :                             ;LDA (emu_PC,X)                 ;6
(1) 1067/    CF34 :                             ;TAY                                    ;2
(1) 1067/    CF34 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1067/    CF34 :                             ;PHA                                    ;3
(1) 1067/    CF34 :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1067/    CF34 :                             ;PHA                                    ;3
(1) 1067/    CF34 :                             ;RTS                                    ;6
(1) 1067/    CF34 :                             
(1) 1067/    CF34 :                             ;Method 5 - 30 cycles
(1) 1067/    CF34 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1067/    CF36 : A8                          TAY                                             ;2
(1) 1067/    CF37 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1067/    CF3A : 95 0A                       STA emu_ptr,X                   ;4
(1) 1067/    CF3C : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1067/    CF3F : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1067/    CF41 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1067/    CF44 :                                                     
(1) 1068/    CF44 :                     
(1) 1069/    CF44 :                     	;0xD5 - CMP ZPX
(1) 1070/    CF44 :                     	CMP_ZPX:
(1) 1071/    CF44 : (MACRO)             		OP_MACRO 213, "CMP", "ZPX", "CMP_ZPX"
(1) 1071/    CF44 :                             ;TODO
(1) 1072/    CF44 : (MACRO)             		NEXT_MACRO
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 316 - 1/5/2022 12:19:0


(1) 1072/    CF44 :                                             
(1) 1072/    CF44 :  (MACRO-2)                  halt
(1) 1072/    CF44 : 00                          BRK
(1) 1072/    CF45 : 00                          BRK
(1) 1072/    CF46 :                             
(1) 1072/    CF46 :                             ;Method 1 - 60 cycles
(1) 1072/    CF46 :                             ;Jump table must be page aligned!!!
(1) 1072/    CF46 :                             ;LDA (emu_PC,X)                 ;6
(1) 1072/    CF46 :                             ;ASL                                    ;2
(1) 1072/    CF46 :                             ;STA emu_ptr,X                  ;4
(1) 1072/    CF46 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1072/    CF46 :                             ;ADC #0                                 ;2
(1) 1072/    CF46 :                             ;STA emu_ptr+1,X                ;4
(1) 1072/    CF46 :                             ;LDA (emu_ptr,X)                ;6
(1) 1072/    CF46 :                             ;STA emu_ptr2,X                 ;4
(1) 1072/    CF46 :                             ;INC emu_ptr,X                  ;6
(1) 1072/    CF46 :                             ;BCC .skip                              ;2
(1) 1072/    CF46 :                             ;       INC emu_ptr+1,X         ;6
(1) 1072/    CF46 :                             ;.skip:
(1) 1072/    CF46 :                             ;LDA (emu_ptr,X)                ;6
(1) 1072/    CF46 :                             ;STA emu_ptr2+1,X               ;4
(1) 1072/    CF46 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1072/    CF46 :                             
(1) 1072/    CF46 :                             ;Method 2 - 46 cycles
(1) 1072/    CF46 :                             ;Jump table must be page aligned!!!
(1) 1072/    CF46 :                             ;LDA (emu_PC,X)                 ;6
(1) 1072/    CF46 :                             ;STZ emu_ptr+1,X                ;4
(1) 1072/    CF46 :                             ;ASL                                    ;2
(1) 1072/    CF46 :                             ;ROL emu_ptr+1,X                ;6
(1) 1072/    CF46 :                             ;ASL                                    ;2
(1) 1072/    CF46 :                             ;ROL emu_ptr+1,X                ;6
(1) 1072/    CF46 :                             ;STA emu_ptr,X                  ;4                              
(1) 1072/    CF46 :                             ;LDA emu_ptr+1,X                ;4
(1) 1072/    CF46 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1072/    CF46 :                             ;STA emu_ptr+1,X                ;4
(1) 1072/    CF46 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1072/    CF46 :                             
(1) 1072/    CF46 :                             ;Method 3 - 30 cycles
(1) 1072/    CF46 :                             ;TXA                                                    ;2
(1) 1072/    CF46 :                             ;TAY                                                    ;2
(1) 1072/    CF46 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1072/    CF46 :                             ;ASL                                                    ;2
(1) 1072/    CF46 :                             ;BCS upper                                              ;2
(1) 1072/    CF46 :                             ;lower:
(1) 1072/    CF46 :                             ;       ASL                                                     ;2
(1) 1072/    CF46 :                             ;       TAX                                                     ;2
(1) 1072/    CF46 :                             ;       BCS upper_lower                         ;2
(1) 1072/    CF46 :                             ;       lower_lower:
(1) 1072/    CF46 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1072/    CF46 :                             ;       upper_lower:
(1) 1072/    CF46 :                             ;               JMP (JUMP_TABLE2,X)
(1) 1072/    CF46 :                             ;upper:
(1) 1072/    CF46 :                             ;       ASL
(1) 1072/    CF46 :                             ;       TAX
(1) 1072/    CF46 :                             ;       BCS upper_upper
(1) 1072/    CF46 :                             ;       lower_upper:
(1) 1072/    CF46 :                             ;               JMP (JUMP_TABLE3,X)
(1) 1072/    CF46 :                             ;       upper_upper:
(1) 1072/    CF46 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1072/    CF46 :                             ;After jump:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 317 - 1/5/2022 12:19:0


(1) 1072/    CF46 :                             ;TYA                                                    ;2
(1) 1072/    CF46 :                             ;TAX                                                    ;2
(1) 1072/    CF46 :                             
(1) 1072/    CF46 :                             ;Method 4 - 28 cycles
(1) 1072/    CF46 :                             ;LDA (emu_PC,X)                 ;6
(1) 1072/    CF46 :                             ;TAY                                    ;2
(1) 1072/    CF46 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1072/    CF46 :                             ;PHA                                    ;3
(1) 1072/    CF46 :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1072/    CF46 :                             ;PHA                                    ;3
(1) 1072/    CF46 :                             ;RTS                                    ;6
(1) 1072/    CF46 :                             
(1) 1072/    CF46 :                             ;Method 5 - 30 cycles
(1) 1072/    CF46 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1072/    CF48 : A8                          TAY                                             ;2
(1) 1072/    CF49 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1072/    CF4C : 95 0A                       STA emu_ptr,X                   ;4
(1) 1072/    CF4E : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1072/    CF51 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1072/    CF53 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1072/    CF56 :                                                     
(1) 1073/    CF56 :                     
(1) 1074/    CF56 :                     	;0xD6 - DEC ZPX
(1) 1075/    CF56 :                     	DEC_ZPX:
(1) 1076/    CF56 : (MACRO)             		OP_MACRO 214, "DEC", "ZPX", "DEC_ZPX"
(1) 1076/    CF56 :                             ;TODO
(1) 1077/    CF56 : (MACRO)             		NEXT_MACRO
(1) 1077/    CF56 :                                             
(1) 1077/    CF56 :  (MACRO-2)                  halt
(1) 1077/    CF56 : 00                          BRK
(1) 1077/    CF57 : 00                          BRK
(1) 1077/    CF58 :                             
(1) 1077/    CF58 :                             ;Method 1 - 60 cycles
(1) 1077/    CF58 :                             ;Jump table must be page aligned!!!
(1) 1077/    CF58 :                             ;LDA (emu_PC,X)                 ;6
(1) 1077/    CF58 :                             ;ASL                                    ;2
(1) 1077/    CF58 :                             ;STA emu_ptr,X                  ;4
(1) 1077/    CF58 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1077/    CF58 :                             ;ADC #0                                 ;2
(1) 1077/    CF58 :                             ;STA emu_ptr+1,X                ;4
(1) 1077/    CF58 :                             ;LDA (emu_ptr,X)                ;6
(1) 1077/    CF58 :                             ;STA emu_ptr2,X                 ;4
(1) 1077/    CF58 :                             ;INC emu_ptr,X                  ;6
(1) 1077/    CF58 :                             ;BCC .skip                              ;2
(1) 1077/    CF58 :                             ;       INC emu_ptr+1,X         ;6
(1) 1077/    CF58 :                             ;.skip:
(1) 1077/    CF58 :                             ;LDA (emu_ptr,X)                ;6
(1) 1077/    CF58 :                             ;STA emu_ptr2+1,X               ;4
(1) 1077/    CF58 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1077/    CF58 :                             
(1) 1077/    CF58 :                             ;Method 2 - 46 cycles
(1) 1077/    CF58 :                             ;Jump table must be page aligned!!!
(1) 1077/    CF58 :                             ;LDA (emu_PC,X)                 ;6
(1) 1077/    CF58 :                             ;STZ emu_ptr+1,X                ;4
(1) 1077/    CF58 :                             ;ASL                                    ;2
(1) 1077/    CF58 :                             ;ROL emu_ptr+1,X                ;6
(1) 1077/    CF58 :                             ;ASL                                    ;2
(1) 1077/    CF58 :                             ;ROL emu_ptr+1,X                ;6
(1) 1077/    CF58 :                             ;STA emu_ptr,X                  ;4                              
(1) 1077/    CF58 :                             ;LDA emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 318 - 1/5/2022 12:19:0


(1) 1077/    CF58 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1077/    CF58 :                             ;STA emu_ptr+1,X                ;4
(1) 1077/    CF58 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1077/    CF58 :                             
(1) 1077/    CF58 :                             ;Method 3 - 30 cycles
(1) 1077/    CF58 :                             ;TXA                                                    ;2
(1) 1077/    CF58 :                             ;TAY                                                    ;2
(1) 1077/    CF58 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1077/    CF58 :                             ;ASL                                                    ;2
(1) 1077/    CF58 :                             ;BCS upper                                              ;2
(1) 1077/    CF58 :                             ;lower:
(1) 1077/    CF58 :                             ;       ASL                                                     ;2
(1) 1077/    CF58 :                             ;       TAX                                                     ;2
(1) 1077/    CF58 :                             ;       BCS upper_lower                         ;2
(1) 1077/    CF58 :                             ;       lower_lower:
(1) 1077/    CF58 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1077/    CF58 :                             ;       upper_lower:
(1) 1077/    CF58 :                             ;               JMP (JUMP_TABLE2,X)
(1) 1077/    CF58 :                             ;upper:
(1) 1077/    CF58 :                             ;       ASL
(1) 1077/    CF58 :                             ;       TAX
(1) 1077/    CF58 :                             ;       BCS upper_upper
(1) 1077/    CF58 :                             ;       lower_upper:
(1) 1077/    CF58 :                             ;               JMP (JUMP_TABLE3,X)
(1) 1077/    CF58 :                             ;       upper_upper:
(1) 1077/    CF58 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1077/    CF58 :                             ;After jump:
(1) 1077/    CF58 :                             ;TYA                                                    ;2
(1) 1077/    CF58 :                             ;TAX                                                    ;2
(1) 1077/    CF58 :                             
(1) 1077/    CF58 :                             ;Method 4 - 28 cycles
(1) 1077/    CF58 :                             ;LDA (emu_PC,X)                 ;6
(1) 1077/    CF58 :                             ;TAY                                    ;2
(1) 1077/    CF58 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1077/    CF58 :                             ;PHA                                    ;3
(1) 1077/    CF58 :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1077/    CF58 :                             ;PHA                                    ;3
(1) 1077/    CF58 :                             ;RTS                                    ;6
(1) 1077/    CF58 :                             
(1) 1077/    CF58 :                             ;Method 5 - 30 cycles
(1) 1077/    CF58 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1077/    CF5A : A8                          TAY                                             ;2
(1) 1077/    CF5B : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1077/    CF5E : 95 0A                       STA emu_ptr,X                   ;4
(1) 1077/    CF60 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1077/    CF63 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1077/    CF65 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1077/    CF68 :                                                     
(1) 1078/    CF68 :                     
(1) 1079/    CF68 :                     	;0xD7 - NOP
(1) 1080/    CF68 :                     	NOP_0xD7:
(1) 1081/    CF68 : (MACRO)             		OP_MACRO 215, "NOP", "IMP", "NOP_0xD7"
(1) 1081/    CF68 :                             ;TODO
(1) 1082/    CF68 : (MACRO)             		NEXT_MACRO
(1) 1082/    CF68 :                                             
(1) 1082/    CF68 :  (MACRO-2)                  halt
(1) 1082/    CF68 : 00                          BRK
(1) 1082/    CF69 : 00                          BRK
(1) 1082/    CF6A :                             
(1) 1082/    CF6A :                             ;Method 1 - 60 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 319 - 1/5/2022 12:19:0


(1) 1082/    CF6A :                             ;Jump table must be page aligned!!!
(1) 1082/    CF6A :                             ;LDA (emu_PC,X)                 ;6
(1) 1082/    CF6A :                             ;ASL                                    ;2
(1) 1082/    CF6A :                             ;STA emu_ptr,X                  ;4
(1) 1082/    CF6A :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1082/    CF6A :                             ;ADC #0                                 ;2
(1) 1082/    CF6A :                             ;STA emu_ptr+1,X                ;4
(1) 1082/    CF6A :                             ;LDA (emu_ptr,X)                ;6
(1) 1082/    CF6A :                             ;STA emu_ptr2,X                 ;4
(1) 1082/    CF6A :                             ;INC emu_ptr,X                  ;6
(1) 1082/    CF6A :                             ;BCC .skip                              ;2
(1) 1082/    CF6A :                             ;       INC emu_ptr+1,X         ;6
(1) 1082/    CF6A :                             ;.skip:
(1) 1082/    CF6A :                             ;LDA (emu_ptr,X)                ;6
(1) 1082/    CF6A :                             ;STA emu_ptr2+1,X               ;4
(1) 1082/    CF6A :                             ;JMP (emu_ptr2,X)               ;6
(1) 1082/    CF6A :                             
(1) 1082/    CF6A :                             ;Method 2 - 46 cycles
(1) 1082/    CF6A :                             ;Jump table must be page aligned!!!
(1) 1082/    CF6A :                             ;LDA (emu_PC,X)                 ;6
(1) 1082/    CF6A :                             ;STZ emu_ptr+1,X                ;4
(1) 1082/    CF6A :                             ;ASL                                    ;2
(1) 1082/    CF6A :                             ;ROL emu_ptr+1,X                ;6
(1) 1082/    CF6A :                             ;ASL                                    ;2
(1) 1082/    CF6A :                             ;ROL emu_ptr+1,X                ;6
(1) 1082/    CF6A :                             ;STA emu_ptr,X                  ;4                              
(1) 1082/    CF6A :                             ;LDA emu_ptr+1,X                ;4
(1) 1082/    CF6A :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1082/    CF6A :                             ;STA emu_ptr+1,X                ;4
(1) 1082/    CF6A :                             ;JMP (emu_ptr2,X)               ;6
(1) 1082/    CF6A :                             
(1) 1082/    CF6A :                             ;Method 3 - 30 cycles
(1) 1082/    CF6A :                             ;TXA                                                    ;2
(1) 1082/    CF6A :                             ;TAY                                                    ;2
(1) 1082/    CF6A :                             ;LDA (emu_PC,X)                                 ;6
(1) 1082/    CF6A :                             ;ASL                                                    ;2
(1) 1082/    CF6A :                             ;BCS upper                                              ;2
(1) 1082/    CF6A :                             ;lower:
(1) 1082/    CF6A :                             ;       ASL                                                     ;2
(1) 1082/    CF6A :                             ;       TAX                                                     ;2
(1) 1082/    CF6A :                             ;       BCS upper_lower                         ;2
(1) 1082/    CF6A :                             ;       lower_lower:
(1) 1082/    CF6A :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1082/    CF6A :                             ;       upper_lower:
(1) 1082/    CF6A :                             ;               JMP (JUMP_TABLE2,X)
(1) 1082/    CF6A :                             ;upper:
(1) 1082/    CF6A :                             ;       ASL
(1) 1082/    CF6A :                             ;       TAX
(1) 1082/    CF6A :                             ;       BCS upper_upper
(1) 1082/    CF6A :                             ;       lower_upper:
(1) 1082/    CF6A :                             ;               JMP (JUMP_TABLE3,X)
(1) 1082/    CF6A :                             ;       upper_upper:
(1) 1082/    CF6A :                             ;               JMP (JUMP_TABLE4,X)
(1) 1082/    CF6A :                             ;After jump:
(1) 1082/    CF6A :                             ;TYA                                                    ;2
(1) 1082/    CF6A :                             ;TAX                                                    ;2
(1) 1082/    CF6A :                             
(1) 1082/    CF6A :                             ;Method 4 - 28 cycles
(1) 1082/    CF6A :                             ;LDA (emu_PC,X)                 ;6
(1) 1082/    CF6A :                             ;TAY                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 320 - 1/5/2022 12:19:0


(1) 1082/    CF6A :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1082/    CF6A :                             ;PHA                                    ;3
(1) 1082/    CF6A :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1082/    CF6A :                             ;PHA                                    ;3
(1) 1082/    CF6A :                             ;RTS                                    ;6
(1) 1082/    CF6A :                             
(1) 1082/    CF6A :                             ;Method 5 - 30 cycles
(1) 1082/    CF6A : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1082/    CF6C : A8                          TAY                                             ;2
(1) 1082/    CF6D : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1082/    CF70 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1082/    CF72 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1082/    CF75 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1082/    CF77 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1082/    CF7A :                                                     
(1) 1083/    CF7A :                     
(1) 1084/    CF7A :                     	;0xD8 - CLD IMP
(1) 1085/    CF7A :                     	CLD_IMP:
(1) 1086/    CF7A : (MACRO)             		OP_MACRO 216, "CLD", "IMP", "CLD_IMP"
(1) 1086/    CF7A :                             ;TODO
(1) 1087/    CF7A : (MACRO)             		NEXT_MACRO
(1) 1087/    CF7A :                                             
(1) 1087/    CF7A :  (MACRO-2)                  halt
(1) 1087/    CF7A : 00                          BRK
(1) 1087/    CF7B : 00                          BRK
(1) 1087/    CF7C :                             
(1) 1087/    CF7C :                             ;Method 1 - 60 cycles
(1) 1087/    CF7C :                             ;Jump table must be page aligned!!!
(1) 1087/    CF7C :                             ;LDA (emu_PC,X)                 ;6
(1) 1087/    CF7C :                             ;ASL                                    ;2
(1) 1087/    CF7C :                             ;STA emu_ptr,X                  ;4
(1) 1087/    CF7C :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1087/    CF7C :                             ;ADC #0                                 ;2
(1) 1087/    CF7C :                             ;STA emu_ptr+1,X                ;4
(1) 1087/    CF7C :                             ;LDA (emu_ptr,X)                ;6
(1) 1087/    CF7C :                             ;STA emu_ptr2,X                 ;4
(1) 1087/    CF7C :                             ;INC emu_ptr,X                  ;6
(1) 1087/    CF7C :                             ;BCC .skip                              ;2
(1) 1087/    CF7C :                             ;       INC emu_ptr+1,X         ;6
(1) 1087/    CF7C :                             ;.skip:
(1) 1087/    CF7C :                             ;LDA (emu_ptr,X)                ;6
(1) 1087/    CF7C :                             ;STA emu_ptr2+1,X               ;4
(1) 1087/    CF7C :                             ;JMP (emu_ptr2,X)               ;6
(1) 1087/    CF7C :                             
(1) 1087/    CF7C :                             ;Method 2 - 46 cycles
(1) 1087/    CF7C :                             ;Jump table must be page aligned!!!
(1) 1087/    CF7C :                             ;LDA (emu_PC,X)                 ;6
(1) 1087/    CF7C :                             ;STZ emu_ptr+1,X                ;4
(1) 1087/    CF7C :                             ;ASL                                    ;2
(1) 1087/    CF7C :                             ;ROL emu_ptr+1,X                ;6
(1) 1087/    CF7C :                             ;ASL                                    ;2
(1) 1087/    CF7C :                             ;ROL emu_ptr+1,X                ;6
(1) 1087/    CF7C :                             ;STA emu_ptr,X                  ;4                              
(1) 1087/    CF7C :                             ;LDA emu_ptr+1,X                ;4
(1) 1087/    CF7C :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1087/    CF7C :                             ;STA emu_ptr+1,X                ;4
(1) 1087/    CF7C :                             ;JMP (emu_ptr2,X)               ;6
(1) 1087/    CF7C :                             
(1) 1087/    CF7C :                             ;Method 3 - 30 cycles
(1) 1087/    CF7C :                             ;TXA                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 321 - 1/5/2022 12:19:0


(1) 1087/    CF7C :                             ;TAY                                                    ;2
(1) 1087/    CF7C :                             ;LDA (emu_PC,X)                                 ;6
(1) 1087/    CF7C :                             ;ASL                                                    ;2
(1) 1087/    CF7C :                             ;BCS upper                                              ;2
(1) 1087/    CF7C :                             ;lower:
(1) 1087/    CF7C :                             ;       ASL                                                     ;2
(1) 1087/    CF7C :                             ;       TAX                                                     ;2
(1) 1087/    CF7C :                             ;       BCS upper_lower                         ;2
(1) 1087/    CF7C :                             ;       lower_lower:
(1) 1087/    CF7C :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1087/    CF7C :                             ;       upper_lower:
(1) 1087/    CF7C :                             ;               JMP (JUMP_TABLE2,X)
(1) 1087/    CF7C :                             ;upper:
(1) 1087/    CF7C :                             ;       ASL
(1) 1087/    CF7C :                             ;       TAX
(1) 1087/    CF7C :                             ;       BCS upper_upper
(1) 1087/    CF7C :                             ;       lower_upper:
(1) 1087/    CF7C :                             ;               JMP (JUMP_TABLE3,X)
(1) 1087/    CF7C :                             ;       upper_upper:
(1) 1087/    CF7C :                             ;               JMP (JUMP_TABLE4,X)
(1) 1087/    CF7C :                             ;After jump:
(1) 1087/    CF7C :                             ;TYA                                                    ;2
(1) 1087/    CF7C :                             ;TAX                                                    ;2
(1) 1087/    CF7C :                             
(1) 1087/    CF7C :                             ;Method 4 - 28 cycles
(1) 1087/    CF7C :                             ;LDA (emu_PC,X)                 ;6
(1) 1087/    CF7C :                             ;TAY                                    ;2
(1) 1087/    CF7C :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1087/    CF7C :                             ;PHA                                    ;3
(1) 1087/    CF7C :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1087/    CF7C :                             ;PHA                                    ;3
(1) 1087/    CF7C :                             ;RTS                                    ;6
(1) 1087/    CF7C :                             
(1) 1087/    CF7C :                             ;Method 5 - 30 cycles
(1) 1087/    CF7C : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1087/    CF7E : A8                          TAY                                             ;2
(1) 1087/    CF7F : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1087/    CF82 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1087/    CF84 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1087/    CF87 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1087/    CF89 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1087/    CF8C :                                                     
(1) 1088/    CF8C :                     
(1) 1089/    CF8C :                     	;0xD9 - CMP ABSY
(1) 1090/    CF8C :                     	CMP_ABSY:
(1) 1091/    CF8C : (MACRO)             		OP_MACRO 217, "CMP", "ABSY", "CMP_ABSY"
(1) 1091/    CF8C :                             ;TODO
(1) 1092/    CF8C : (MACRO)             		NEXT_MACRO
(1) 1092/    CF8C :                                             
(1) 1092/    CF8C :  (MACRO-2)                  halt
(1) 1092/    CF8C : 00                          BRK
(1) 1092/    CF8D : 00                          BRK
(1) 1092/    CF8E :                             
(1) 1092/    CF8E :                             ;Method 1 - 60 cycles
(1) 1092/    CF8E :                             ;Jump table must be page aligned!!!
(1) 1092/    CF8E :                             ;LDA (emu_PC,X)                 ;6
(1) 1092/    CF8E :                             ;ASL                                    ;2
(1) 1092/    CF8E :                             ;STA emu_ptr,X                  ;4
(1) 1092/    CF8E :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1092/    CF8E :                             ;ADC #0                                 ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 322 - 1/5/2022 12:19:0


(1) 1092/    CF8E :                             ;STA emu_ptr+1,X                ;4
(1) 1092/    CF8E :                             ;LDA (emu_ptr,X)                ;6
(1) 1092/    CF8E :                             ;STA emu_ptr2,X                 ;4
(1) 1092/    CF8E :                             ;INC emu_ptr,X                  ;6
(1) 1092/    CF8E :                             ;BCC .skip                              ;2
(1) 1092/    CF8E :                             ;       INC emu_ptr+1,X         ;6
(1) 1092/    CF8E :                             ;.skip:
(1) 1092/    CF8E :                             ;LDA (emu_ptr,X)                ;6
(1) 1092/    CF8E :                             ;STA emu_ptr2+1,X               ;4
(1) 1092/    CF8E :                             ;JMP (emu_ptr2,X)               ;6
(1) 1092/    CF8E :                             
(1) 1092/    CF8E :                             ;Method 2 - 46 cycles
(1) 1092/    CF8E :                             ;Jump table must be page aligned!!!
(1) 1092/    CF8E :                             ;LDA (emu_PC,X)                 ;6
(1) 1092/    CF8E :                             ;STZ emu_ptr+1,X                ;4
(1) 1092/    CF8E :                             ;ASL                                    ;2
(1) 1092/    CF8E :                             ;ROL emu_ptr+1,X                ;6
(1) 1092/    CF8E :                             ;ASL                                    ;2
(1) 1092/    CF8E :                             ;ROL emu_ptr+1,X                ;6
(1) 1092/    CF8E :                             ;STA emu_ptr,X                  ;4                              
(1) 1092/    CF8E :                             ;LDA emu_ptr+1,X                ;4
(1) 1092/    CF8E :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1092/    CF8E :                             ;STA emu_ptr+1,X                ;4
(1) 1092/    CF8E :                             ;JMP (emu_ptr2,X)               ;6
(1) 1092/    CF8E :                             
(1) 1092/    CF8E :                             ;Method 3 - 30 cycles
(1) 1092/    CF8E :                             ;TXA                                                    ;2
(1) 1092/    CF8E :                             ;TAY                                                    ;2
(1) 1092/    CF8E :                             ;LDA (emu_PC,X)                                 ;6
(1) 1092/    CF8E :                             ;ASL                                                    ;2
(1) 1092/    CF8E :                             ;BCS upper                                              ;2
(1) 1092/    CF8E :                             ;lower:
(1) 1092/    CF8E :                             ;       ASL                                                     ;2
(1) 1092/    CF8E :                             ;       TAX                                                     ;2
(1) 1092/    CF8E :                             ;       BCS upper_lower                         ;2
(1) 1092/    CF8E :                             ;       lower_lower:
(1) 1092/    CF8E :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1092/    CF8E :                             ;       upper_lower:
(1) 1092/    CF8E :                             ;               JMP (JUMP_TABLE2,X)
(1) 1092/    CF8E :                             ;upper:
(1) 1092/    CF8E :                             ;       ASL
(1) 1092/    CF8E :                             ;       TAX
(1) 1092/    CF8E :                             ;       BCS upper_upper
(1) 1092/    CF8E :                             ;       lower_upper:
(1) 1092/    CF8E :                             ;               JMP (JUMP_TABLE3,X)
(1) 1092/    CF8E :                             ;       upper_upper:
(1) 1092/    CF8E :                             ;               JMP (JUMP_TABLE4,X)
(1) 1092/    CF8E :                             ;After jump:
(1) 1092/    CF8E :                             ;TYA                                                    ;2
(1) 1092/    CF8E :                             ;TAX                                                    ;2
(1) 1092/    CF8E :                             
(1) 1092/    CF8E :                             ;Method 4 - 28 cycles
(1) 1092/    CF8E :                             ;LDA (emu_PC,X)                 ;6
(1) 1092/    CF8E :                             ;TAY                                    ;2
(1) 1092/    CF8E :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1092/    CF8E :                             ;PHA                                    ;3
(1) 1092/    CF8E :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1092/    CF8E :                             ;PHA                                    ;3
(1) 1092/    CF8E :                             ;RTS                                    ;6
(1) 1092/    CF8E :                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 323 - 1/5/2022 12:19:0


(1) 1092/    CF8E :                             ;Method 5 - 30 cycles
(1) 1092/    CF8E : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1092/    CF90 : A8                          TAY                                             ;2
(1) 1092/    CF91 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1092/    CF94 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1092/    CF96 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1092/    CF99 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1092/    CF9B : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1092/    CF9E :                                                     
(1) 1093/    CF9E :                     
(1) 1094/    CF9E :                     	;0xDA - NOP
(1) 1095/    CF9E :                     	NOP_0xDA:
(1) 1096/    CF9E : (MACRO)             		OP_MACRO 218, "NOP", "IMP", "NOP_0xDA"
(1) 1096/    CF9E :                             ;TODO
(1) 1097/    CF9E : (MACRO)             		NEXT_MACRO
(1) 1097/    CF9E :                                             
(1) 1097/    CF9E :  (MACRO-2)                  halt
(1) 1097/    CF9E : 00                          BRK
(1) 1097/    CF9F : 00                          BRK
(1) 1097/    CFA0 :                             
(1) 1097/    CFA0 :                             ;Method 1 - 60 cycles
(1) 1097/    CFA0 :                             ;Jump table must be page aligned!!!
(1) 1097/    CFA0 :                             ;LDA (emu_PC,X)                 ;6
(1) 1097/    CFA0 :                             ;ASL                                    ;2
(1) 1097/    CFA0 :                             ;STA emu_ptr,X                  ;4
(1) 1097/    CFA0 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1097/    CFA0 :                             ;ADC #0                                 ;2
(1) 1097/    CFA0 :                             ;STA emu_ptr+1,X                ;4
(1) 1097/    CFA0 :                             ;LDA (emu_ptr,X)                ;6
(1) 1097/    CFA0 :                             ;STA emu_ptr2,X                 ;4
(1) 1097/    CFA0 :                             ;INC emu_ptr,X                  ;6
(1) 1097/    CFA0 :                             ;BCC .skip                              ;2
(1) 1097/    CFA0 :                             ;       INC emu_ptr+1,X         ;6
(1) 1097/    CFA0 :                             ;.skip:
(1) 1097/    CFA0 :                             ;LDA (emu_ptr,X)                ;6
(1) 1097/    CFA0 :                             ;STA emu_ptr2+1,X               ;4
(1) 1097/    CFA0 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1097/    CFA0 :                             
(1) 1097/    CFA0 :                             ;Method 2 - 46 cycles
(1) 1097/    CFA0 :                             ;Jump table must be page aligned!!!
(1) 1097/    CFA0 :                             ;LDA (emu_PC,X)                 ;6
(1) 1097/    CFA0 :                             ;STZ emu_ptr+1,X                ;4
(1) 1097/    CFA0 :                             ;ASL                                    ;2
(1) 1097/    CFA0 :                             ;ROL emu_ptr+1,X                ;6
(1) 1097/    CFA0 :                             ;ASL                                    ;2
(1) 1097/    CFA0 :                             ;ROL emu_ptr+1,X                ;6
(1) 1097/    CFA0 :                             ;STA emu_ptr,X                  ;4                              
(1) 1097/    CFA0 :                             ;LDA emu_ptr+1,X                ;4
(1) 1097/    CFA0 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1097/    CFA0 :                             ;STA emu_ptr+1,X                ;4
(1) 1097/    CFA0 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1097/    CFA0 :                             
(1) 1097/    CFA0 :                             ;Method 3 - 30 cycles
(1) 1097/    CFA0 :                             ;TXA                                                    ;2
(1) 1097/    CFA0 :                             ;TAY                                                    ;2
(1) 1097/    CFA0 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1097/    CFA0 :                             ;ASL                                                    ;2
(1) 1097/    CFA0 :                             ;BCS upper                                              ;2
(1) 1097/    CFA0 :                             ;lower:
(1) 1097/    CFA0 :                             ;       ASL                                                     ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 324 - 1/5/2022 12:19:0


(1) 1097/    CFA0 :                             ;       TAX                                                     ;2
(1) 1097/    CFA0 :                             ;       BCS upper_lower                         ;2
(1) 1097/    CFA0 :                             ;       lower_lower:
(1) 1097/    CFA0 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1097/    CFA0 :                             ;       upper_lower:
(1) 1097/    CFA0 :                             ;               JMP (JUMP_TABLE2,X)
(1) 1097/    CFA0 :                             ;upper:
(1) 1097/    CFA0 :                             ;       ASL
(1) 1097/    CFA0 :                             ;       TAX
(1) 1097/    CFA0 :                             ;       BCS upper_upper
(1) 1097/    CFA0 :                             ;       lower_upper:
(1) 1097/    CFA0 :                             ;               JMP (JUMP_TABLE3,X)
(1) 1097/    CFA0 :                             ;       upper_upper:
(1) 1097/    CFA0 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1097/    CFA0 :                             ;After jump:
(1) 1097/    CFA0 :                             ;TYA                                                    ;2
(1) 1097/    CFA0 :                             ;TAX                                                    ;2
(1) 1097/    CFA0 :                             
(1) 1097/    CFA0 :                             ;Method 4 - 28 cycles
(1) 1097/    CFA0 :                             ;LDA (emu_PC,X)                 ;6
(1) 1097/    CFA0 :                             ;TAY                                    ;2
(1) 1097/    CFA0 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1097/    CFA0 :                             ;PHA                                    ;3
(1) 1097/    CFA0 :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1097/    CFA0 :                             ;PHA                                    ;3
(1) 1097/    CFA0 :                             ;RTS                                    ;6
(1) 1097/    CFA0 :                             
(1) 1097/    CFA0 :                             ;Method 5 - 30 cycles
(1) 1097/    CFA0 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1097/    CFA2 : A8                          TAY                                             ;2
(1) 1097/    CFA3 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1097/    CFA6 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1097/    CFA8 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1097/    CFAB : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1097/    CFAD : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1097/    CFB0 :                                                     
(1) 1098/    CFB0 :                     
(1) 1099/    CFB0 :                     	;0xDB - NOP
(1) 1100/    CFB0 :                     	NOP_0xDB:
(1) 1101/    CFB0 : (MACRO)             		OP_MACRO 219, "NOP", "IMP", "NOP_0xDB"
(1) 1101/    CFB0 :                             ;TODO
(1) 1102/    CFB0 : (MACRO)             		NEXT_MACRO
(1) 1102/    CFB0 :                                             
(1) 1102/    CFB0 :  (MACRO-2)                  halt
(1) 1102/    CFB0 : 00                          BRK
(1) 1102/    CFB1 : 00                          BRK
(1) 1102/    CFB2 :                             
(1) 1102/    CFB2 :                             ;Method 1 - 60 cycles
(1) 1102/    CFB2 :                             ;Jump table must be page aligned!!!
(1) 1102/    CFB2 :                             ;LDA (emu_PC,X)                 ;6
(1) 1102/    CFB2 :                             ;ASL                                    ;2
(1) 1102/    CFB2 :                             ;STA emu_ptr,X                  ;4
(1) 1102/    CFB2 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1102/    CFB2 :                             ;ADC #0                                 ;2
(1) 1102/    CFB2 :                             ;STA emu_ptr+1,X                ;4
(1) 1102/    CFB2 :                             ;LDA (emu_ptr,X)                ;6
(1) 1102/    CFB2 :                             ;STA emu_ptr2,X                 ;4
(1) 1102/    CFB2 :                             ;INC emu_ptr,X                  ;6
(1) 1102/    CFB2 :                             ;BCC .skip                              ;2
(1) 1102/    CFB2 :                             ;       INC emu_ptr+1,X         ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 325 - 1/5/2022 12:19:0


(1) 1102/    CFB2 :                             ;.skip:
(1) 1102/    CFB2 :                             ;LDA (emu_ptr,X)                ;6
(1) 1102/    CFB2 :                             ;STA emu_ptr2+1,X               ;4
(1) 1102/    CFB2 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1102/    CFB2 :                             
(1) 1102/    CFB2 :                             ;Method 2 - 46 cycles
(1) 1102/    CFB2 :                             ;Jump table must be page aligned!!!
(1) 1102/    CFB2 :                             ;LDA (emu_PC,X)                 ;6
(1) 1102/    CFB2 :                             ;STZ emu_ptr+1,X                ;4
(1) 1102/    CFB2 :                             ;ASL                                    ;2
(1) 1102/    CFB2 :                             ;ROL emu_ptr+1,X                ;6
(1) 1102/    CFB2 :                             ;ASL                                    ;2
(1) 1102/    CFB2 :                             ;ROL emu_ptr+1,X                ;6
(1) 1102/    CFB2 :                             ;STA emu_ptr,X                  ;4                              
(1) 1102/    CFB2 :                             ;LDA emu_ptr+1,X                ;4
(1) 1102/    CFB2 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1102/    CFB2 :                             ;STA emu_ptr+1,X                ;4
(1) 1102/    CFB2 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1102/    CFB2 :                             
(1) 1102/    CFB2 :                             ;Method 3 - 30 cycles
(1) 1102/    CFB2 :                             ;TXA                                                    ;2
(1) 1102/    CFB2 :                             ;TAY                                                    ;2
(1) 1102/    CFB2 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1102/    CFB2 :                             ;ASL                                                    ;2
(1) 1102/    CFB2 :                             ;BCS upper                                              ;2
(1) 1102/    CFB2 :                             ;lower:
(1) 1102/    CFB2 :                             ;       ASL                                                     ;2
(1) 1102/    CFB2 :                             ;       TAX                                                     ;2
(1) 1102/    CFB2 :                             ;       BCS upper_lower                         ;2
(1) 1102/    CFB2 :                             ;       lower_lower:
(1) 1102/    CFB2 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1102/    CFB2 :                             ;       upper_lower:
(1) 1102/    CFB2 :                             ;               JMP (JUMP_TABLE2,X)
(1) 1102/    CFB2 :                             ;upper:
(1) 1102/    CFB2 :                             ;       ASL
(1) 1102/    CFB2 :                             ;       TAX
(1) 1102/    CFB2 :                             ;       BCS upper_upper
(1) 1102/    CFB2 :                             ;       lower_upper:
(1) 1102/    CFB2 :                             ;               JMP (JUMP_TABLE3,X)
(1) 1102/    CFB2 :                             ;       upper_upper:
(1) 1102/    CFB2 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1102/    CFB2 :                             ;After jump:
(1) 1102/    CFB2 :                             ;TYA                                                    ;2
(1) 1102/    CFB2 :                             ;TAX                                                    ;2
(1) 1102/    CFB2 :                             
(1) 1102/    CFB2 :                             ;Method 4 - 28 cycles
(1) 1102/    CFB2 :                             ;LDA (emu_PC,X)                 ;6
(1) 1102/    CFB2 :                             ;TAY                                    ;2
(1) 1102/    CFB2 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1102/    CFB2 :                             ;PHA                                    ;3
(1) 1102/    CFB2 :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1102/    CFB2 :                             ;PHA                                    ;3
(1) 1102/    CFB2 :                             ;RTS                                    ;6
(1) 1102/    CFB2 :                             
(1) 1102/    CFB2 :                             ;Method 5 - 30 cycles
(1) 1102/    CFB2 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1102/    CFB4 : A8                          TAY                                             ;2
(1) 1102/    CFB5 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1102/    CFB8 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1102/    CFBA : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 326 - 1/5/2022 12:19:0


(1) 1102/    CFBD : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1102/    CFBF : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1102/    CFC2 :                                                     
(1) 1103/    CFC2 :                     
(1) 1104/    CFC2 :                     	;0xDC - NOP
(1) 1105/    CFC2 :                     	NOP_0xDC:
(1) 1106/    CFC2 : (MACRO)             		OP_MACRO 220, "NOP", "IMP", "NOP_0xDC"
(1) 1106/    CFC2 :                             ;TODO
(1) 1107/    CFC2 : (MACRO)             		NEXT_MACRO
(1) 1107/    CFC2 :                                             
(1) 1107/    CFC2 :  (MACRO-2)                  halt
(1) 1107/    CFC2 : 00                          BRK
(1) 1107/    CFC3 : 00                          BRK
(1) 1107/    CFC4 :                             
(1) 1107/    CFC4 :                             ;Method 1 - 60 cycles
(1) 1107/    CFC4 :                             ;Jump table must be page aligned!!!
(1) 1107/    CFC4 :                             ;LDA (emu_PC,X)                 ;6
(1) 1107/    CFC4 :                             ;ASL                                    ;2
(1) 1107/    CFC4 :                             ;STA emu_ptr,X                  ;4
(1) 1107/    CFC4 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1107/    CFC4 :                             ;ADC #0                                 ;2
(1) 1107/    CFC4 :                             ;STA emu_ptr+1,X                ;4
(1) 1107/    CFC4 :                             ;LDA (emu_ptr,X)                ;6
(1) 1107/    CFC4 :                             ;STA emu_ptr2,X                 ;4
(1) 1107/    CFC4 :                             ;INC emu_ptr,X                  ;6
(1) 1107/    CFC4 :                             ;BCC .skip                              ;2
(1) 1107/    CFC4 :                             ;       INC emu_ptr+1,X         ;6
(1) 1107/    CFC4 :                             ;.skip:
(1) 1107/    CFC4 :                             ;LDA (emu_ptr,X)                ;6
(1) 1107/    CFC4 :                             ;STA emu_ptr2+1,X               ;4
(1) 1107/    CFC4 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1107/    CFC4 :                             
(1) 1107/    CFC4 :                             ;Method 2 - 46 cycles
(1) 1107/    CFC4 :                             ;Jump table must be page aligned!!!
(1) 1107/    CFC4 :                             ;LDA (emu_PC,X)                 ;6
(1) 1107/    CFC4 :                             ;STZ emu_ptr+1,X                ;4
(1) 1107/    CFC4 :                             ;ASL                                    ;2
(1) 1107/    CFC4 :                             ;ROL emu_ptr+1,X                ;6
(1) 1107/    CFC4 :                             ;ASL                                    ;2
(1) 1107/    CFC4 :                             ;ROL emu_ptr+1,X                ;6
(1) 1107/    CFC4 :                             ;STA emu_ptr,X                  ;4                              
(1) 1107/    CFC4 :                             ;LDA emu_ptr+1,X                ;4
(1) 1107/    CFC4 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1107/    CFC4 :                             ;STA emu_ptr+1,X                ;4
(1) 1107/    CFC4 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1107/    CFC4 :                             
(1) 1107/    CFC4 :                             ;Method 3 - 30 cycles
(1) 1107/    CFC4 :                             ;TXA                                                    ;2
(1) 1107/    CFC4 :                             ;TAY                                                    ;2
(1) 1107/    CFC4 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1107/    CFC4 :                             ;ASL                                                    ;2
(1) 1107/    CFC4 :                             ;BCS upper                                              ;2
(1) 1107/    CFC4 :                             ;lower:
(1) 1107/    CFC4 :                             ;       ASL                                                     ;2
(1) 1107/    CFC4 :                             ;       TAX                                                     ;2
(1) 1107/    CFC4 :                             ;       BCS upper_lower                         ;2
(1) 1107/    CFC4 :                             ;       lower_lower:
(1) 1107/    CFC4 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1107/    CFC4 :                             ;       upper_lower:
(1) 1107/    CFC4 :                             ;               JMP (JUMP_TABLE2,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 327 - 1/5/2022 12:19:0


(1) 1107/    CFC4 :                             ;upper:
(1) 1107/    CFC4 :                             ;       ASL
(1) 1107/    CFC4 :                             ;       TAX
(1) 1107/    CFC4 :                             ;       BCS upper_upper
(1) 1107/    CFC4 :                             ;       lower_upper:
(1) 1107/    CFC4 :                             ;               JMP (JUMP_TABLE3,X)
(1) 1107/    CFC4 :                             ;       upper_upper:
(1) 1107/    CFC4 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1107/    CFC4 :                             ;After jump:
(1) 1107/    CFC4 :                             ;TYA                                                    ;2
(1) 1107/    CFC4 :                             ;TAX                                                    ;2
(1) 1107/    CFC4 :                             
(1) 1107/    CFC4 :                             ;Method 4 - 28 cycles
(1) 1107/    CFC4 :                             ;LDA (emu_PC,X)                 ;6
(1) 1107/    CFC4 :                             ;TAY                                    ;2
(1) 1107/    CFC4 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1107/    CFC4 :                             ;PHA                                    ;3
(1) 1107/    CFC4 :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1107/    CFC4 :                             ;PHA                                    ;3
(1) 1107/    CFC4 :                             ;RTS                                    ;6
(1) 1107/    CFC4 :                             
(1) 1107/    CFC4 :                             ;Method 5 - 30 cycles
(1) 1107/    CFC4 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1107/    CFC6 : A8                          TAY                                             ;2
(1) 1107/    CFC7 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1107/    CFCA : 95 0A                       STA emu_ptr,X                   ;4
(1) 1107/    CFCC : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1107/    CFCF : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1107/    CFD1 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1107/    CFD4 :                                                     
(1) 1108/    CFD4 :                     
(1) 1109/    CFD4 :                     	;0xDD - CMP ABSX
(1) 1110/    CFD4 :                     	CMP_ABSX:
(1) 1111/    CFD4 : (MACRO)             		OP_MACRO 221, "CMP", "ABSX", "CMP_ABSX"
(1) 1111/    CFD4 :                             ;TODO
(1) 1112/    CFD4 : (MACRO)             		NEXT_MACRO
(1) 1112/    CFD4 :                                             
(1) 1112/    CFD4 :  (MACRO-2)                  halt
(1) 1112/    CFD4 : 00                          BRK
(1) 1112/    CFD5 : 00                          BRK
(1) 1112/    CFD6 :                             
(1) 1112/    CFD6 :                             ;Method 1 - 60 cycles
(1) 1112/    CFD6 :                             ;Jump table must be page aligned!!!
(1) 1112/    CFD6 :                             ;LDA (emu_PC,X)                 ;6
(1) 1112/    CFD6 :                             ;ASL                                    ;2
(1) 1112/    CFD6 :                             ;STA emu_ptr,X                  ;4
(1) 1112/    CFD6 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1112/    CFD6 :                             ;ADC #0                                 ;2
(1) 1112/    CFD6 :                             ;STA emu_ptr+1,X                ;4
(1) 1112/    CFD6 :                             ;LDA (emu_ptr,X)                ;6
(1) 1112/    CFD6 :                             ;STA emu_ptr2,X                 ;4
(1) 1112/    CFD6 :                             ;INC emu_ptr,X                  ;6
(1) 1112/    CFD6 :                             ;BCC .skip                              ;2
(1) 1112/    CFD6 :                             ;       INC emu_ptr+1,X         ;6
(1) 1112/    CFD6 :                             ;.skip:
(1) 1112/    CFD6 :                             ;LDA (emu_ptr,X)                ;6
(1) 1112/    CFD6 :                             ;STA emu_ptr2+1,X               ;4
(1) 1112/    CFD6 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1112/    CFD6 :                             
(1) 1112/    CFD6 :                             ;Method 2 - 46 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 328 - 1/5/2022 12:19:0


(1) 1112/    CFD6 :                             ;Jump table must be page aligned!!!
(1) 1112/    CFD6 :                             ;LDA (emu_PC,X)                 ;6
(1) 1112/    CFD6 :                             ;STZ emu_ptr+1,X                ;4
(1) 1112/    CFD6 :                             ;ASL                                    ;2
(1) 1112/    CFD6 :                             ;ROL emu_ptr+1,X                ;6
(1) 1112/    CFD6 :                             ;ASL                                    ;2
(1) 1112/    CFD6 :                             ;ROL emu_ptr+1,X                ;6
(1) 1112/    CFD6 :                             ;STA emu_ptr,X                  ;4                              
(1) 1112/    CFD6 :                             ;LDA emu_ptr+1,X                ;4
(1) 1112/    CFD6 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1112/    CFD6 :                             ;STA emu_ptr+1,X                ;4
(1) 1112/    CFD6 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1112/    CFD6 :                             
(1) 1112/    CFD6 :                             ;Method 3 - 30 cycles
(1) 1112/    CFD6 :                             ;TXA                                                    ;2
(1) 1112/    CFD6 :                             ;TAY                                                    ;2
(1) 1112/    CFD6 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1112/    CFD6 :                             ;ASL                                                    ;2
(1) 1112/    CFD6 :                             ;BCS upper                                              ;2
(1) 1112/    CFD6 :                             ;lower:
(1) 1112/    CFD6 :                             ;       ASL                                                     ;2
(1) 1112/    CFD6 :                             ;       TAX                                                     ;2
(1) 1112/    CFD6 :                             ;       BCS upper_lower                         ;2
(1) 1112/    CFD6 :                             ;       lower_lower:
(1) 1112/    CFD6 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1112/    CFD6 :                             ;       upper_lower:
(1) 1112/    CFD6 :                             ;               JMP (JUMP_TABLE2,X)
(1) 1112/    CFD6 :                             ;upper:
(1) 1112/    CFD6 :                             ;       ASL
(1) 1112/    CFD6 :                             ;       TAX
(1) 1112/    CFD6 :                             ;       BCS upper_upper
(1) 1112/    CFD6 :                             ;       lower_upper:
(1) 1112/    CFD6 :                             ;               JMP (JUMP_TABLE3,X)
(1) 1112/    CFD6 :                             ;       upper_upper:
(1) 1112/    CFD6 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1112/    CFD6 :                             ;After jump:
(1) 1112/    CFD6 :                             ;TYA                                                    ;2
(1) 1112/    CFD6 :                             ;TAX                                                    ;2
(1) 1112/    CFD6 :                             
(1) 1112/    CFD6 :                             ;Method 4 - 28 cycles
(1) 1112/    CFD6 :                             ;LDA (emu_PC,X)                 ;6
(1) 1112/    CFD6 :                             ;TAY                                    ;2
(1) 1112/    CFD6 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1112/    CFD6 :                             ;PHA                                    ;3
(1) 1112/    CFD6 :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1112/    CFD6 :                             ;PHA                                    ;3
(1) 1112/    CFD6 :                             ;RTS                                    ;6
(1) 1112/    CFD6 :                             
(1) 1112/    CFD6 :                             ;Method 5 - 30 cycles
(1) 1112/    CFD6 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1112/    CFD8 : A8                          TAY                                             ;2
(1) 1112/    CFD9 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1112/    CFDC : 95 0A                       STA emu_ptr,X                   ;4
(1) 1112/    CFDE : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1112/    CFE1 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1112/    CFE3 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1112/    CFE6 :                                                     
(1) 1113/    CFE6 :                     
(1) 1114/    CFE6 :                     	;0xDE - DEC ABSX
(1) 1115/    CFE6 :                     	DEC_ABSX:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 329 - 1/5/2022 12:19:0


(1) 1116/    CFE6 : (MACRO)             		OP_MACRO 222, "DEC", "ABSX", "DEC_ABSX"
(1) 1116/    CFE6 :                             ;TODO
(1) 1117/    CFE6 : (MACRO)             		NEXT_MACRO
(1) 1117/    CFE6 :                                             
(1) 1117/    CFE6 :  (MACRO-2)                  halt
(1) 1117/    CFE6 : 00                          BRK
(1) 1117/    CFE7 : 00                          BRK
(1) 1117/    CFE8 :                             
(1) 1117/    CFE8 :                             ;Method 1 - 60 cycles
(1) 1117/    CFE8 :                             ;Jump table must be page aligned!!!
(1) 1117/    CFE8 :                             ;LDA (emu_PC,X)                 ;6
(1) 1117/    CFE8 :                             ;ASL                                    ;2
(1) 1117/    CFE8 :                             ;STA emu_ptr,X                  ;4
(1) 1117/    CFE8 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1117/    CFE8 :                             ;ADC #0                                 ;2
(1) 1117/    CFE8 :                             ;STA emu_ptr+1,X                ;4
(1) 1117/    CFE8 :                             ;LDA (emu_ptr,X)                ;6
(1) 1117/    CFE8 :                             ;STA emu_ptr2,X                 ;4
(1) 1117/    CFE8 :                             ;INC emu_ptr,X                  ;6
(1) 1117/    CFE8 :                             ;BCC .skip                              ;2
(1) 1117/    CFE8 :                             ;       INC emu_ptr+1,X         ;6
(1) 1117/    CFE8 :                             ;.skip:
(1) 1117/    CFE8 :                             ;LDA (emu_ptr,X)                ;6
(1) 1117/    CFE8 :                             ;STA emu_ptr2+1,X               ;4
(1) 1117/    CFE8 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1117/    CFE8 :                             
(1) 1117/    CFE8 :                             ;Method 2 - 46 cycles
(1) 1117/    CFE8 :                             ;Jump table must be page aligned!!!
(1) 1117/    CFE8 :                             ;LDA (emu_PC,X)                 ;6
(1) 1117/    CFE8 :                             ;STZ emu_ptr+1,X                ;4
(1) 1117/    CFE8 :                             ;ASL                                    ;2
(1) 1117/    CFE8 :                             ;ROL emu_ptr+1,X                ;6
(1) 1117/    CFE8 :                             ;ASL                                    ;2
(1) 1117/    CFE8 :                             ;ROL emu_ptr+1,X                ;6
(1) 1117/    CFE8 :                             ;STA emu_ptr,X                  ;4                              
(1) 1117/    CFE8 :                             ;LDA emu_ptr+1,X                ;4
(1) 1117/    CFE8 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1117/    CFE8 :                             ;STA emu_ptr+1,X                ;4
(1) 1117/    CFE8 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1117/    CFE8 :                             
(1) 1117/    CFE8 :                             ;Method 3 - 30 cycles
(1) 1117/    CFE8 :                             ;TXA                                                    ;2
(1) 1117/    CFE8 :                             ;TAY                                                    ;2
(1) 1117/    CFE8 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1117/    CFE8 :                             ;ASL                                                    ;2
(1) 1117/    CFE8 :                             ;BCS upper                                              ;2
(1) 1117/    CFE8 :                             ;lower:
(1) 1117/    CFE8 :                             ;       ASL                                                     ;2
(1) 1117/    CFE8 :                             ;       TAX                                                     ;2
(1) 1117/    CFE8 :                             ;       BCS upper_lower                         ;2
(1) 1117/    CFE8 :                             ;       lower_lower:
(1) 1117/    CFE8 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1117/    CFE8 :                             ;       upper_lower:
(1) 1117/    CFE8 :                             ;               JMP (JUMP_TABLE2,X)
(1) 1117/    CFE8 :                             ;upper:
(1) 1117/    CFE8 :                             ;       ASL
(1) 1117/    CFE8 :                             ;       TAX
(1) 1117/    CFE8 :                             ;       BCS upper_upper
(1) 1117/    CFE8 :                             ;       lower_upper:
(1) 1117/    CFE8 :                             ;               JMP (JUMP_TABLE3,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 330 - 1/5/2022 12:19:0


(1) 1117/    CFE8 :                             ;       upper_upper:
(1) 1117/    CFE8 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1117/    CFE8 :                             ;After jump:
(1) 1117/    CFE8 :                             ;TYA                                                    ;2
(1) 1117/    CFE8 :                             ;TAX                                                    ;2
(1) 1117/    CFE8 :                             
(1) 1117/    CFE8 :                             ;Method 4 - 28 cycles
(1) 1117/    CFE8 :                             ;LDA (emu_PC,X)                 ;6
(1) 1117/    CFE8 :                             ;TAY                                    ;2
(1) 1117/    CFE8 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1117/    CFE8 :                             ;PHA                                    ;3
(1) 1117/    CFE8 :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1117/    CFE8 :                             ;PHA                                    ;3
(1) 1117/    CFE8 :                             ;RTS                                    ;6
(1) 1117/    CFE8 :                             
(1) 1117/    CFE8 :                             ;Method 5 - 30 cycles
(1) 1117/    CFE8 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1117/    CFEA : A8                          TAY                                             ;2
(1) 1117/    CFEB : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1117/    CFEE : 95 0A                       STA emu_ptr,X                   ;4
(1) 1117/    CFF0 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1117/    CFF3 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1117/    CFF5 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1117/    CFF8 :                                                     
(1) 1118/    CFF8 :                     
(1) 1119/    CFF8 :                     	;0xDF - NOP
(1) 1120/    CFF8 :                     	NOP_0xDF:
(1) 1121/    CFF8 : (MACRO)             		OP_MACRO 223, "NOP", "IMP", "NOP_0xDF"
(1) 1121/    CFF8 :                             ;TODO
(1) 1122/    CFF8 : (MACRO)             		NEXT_MACRO
(1) 1122/    CFF8 :                                             
(1) 1122/    CFF8 :  (MACRO-2)                  halt
(1) 1122/    CFF8 : 00                          BRK
(1) 1122/    CFF9 : 00                          BRK
(1) 1122/    CFFA :                             
(1) 1122/    CFFA :                             ;Method 1 - 60 cycles
(1) 1122/    CFFA :                             ;Jump table must be page aligned!!!
(1) 1122/    CFFA :                             ;LDA (emu_PC,X)                 ;6
(1) 1122/    CFFA :                             ;ASL                                    ;2
(1) 1122/    CFFA :                             ;STA emu_ptr,X                  ;4
(1) 1122/    CFFA :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1122/    CFFA :                             ;ADC #0                                 ;2
(1) 1122/    CFFA :                             ;STA emu_ptr+1,X                ;4
(1) 1122/    CFFA :                             ;LDA (emu_ptr,X)                ;6
(1) 1122/    CFFA :                             ;STA emu_ptr2,X                 ;4
(1) 1122/    CFFA :                             ;INC emu_ptr,X                  ;6
(1) 1122/    CFFA :                             ;BCC .skip                              ;2
(1) 1122/    CFFA :                             ;       INC emu_ptr+1,X         ;6
(1) 1122/    CFFA :                             ;.skip:
(1) 1122/    CFFA :                             ;LDA (emu_ptr,X)                ;6
(1) 1122/    CFFA :                             ;STA emu_ptr2+1,X               ;4
(1) 1122/    CFFA :                             ;JMP (emu_ptr2,X)               ;6
(1) 1122/    CFFA :                             
(1) 1122/    CFFA :                             ;Method 2 - 46 cycles
(1) 1122/    CFFA :                             ;Jump table must be page aligned!!!
(1) 1122/    CFFA :                             ;LDA (emu_PC,X)                 ;6
(1) 1122/    CFFA :                             ;STZ emu_ptr+1,X                ;4
(1) 1122/    CFFA :                             ;ASL                                    ;2
(1) 1122/    CFFA :                             ;ROL emu_ptr+1,X                ;6
(1) 1122/    CFFA :                             ;ASL                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 331 - 1/5/2022 12:19:0


(1) 1122/    CFFA :                             ;ROL emu_ptr+1,X                ;6
(1) 1122/    CFFA :                             ;STA emu_ptr,X                  ;4                              
(1) 1122/    CFFA :                             ;LDA emu_ptr+1,X                ;4
(1) 1122/    CFFA :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1122/    CFFA :                             ;STA emu_ptr+1,X                ;4
(1) 1122/    CFFA :                             ;JMP (emu_ptr2,X)               ;6
(1) 1122/    CFFA :                             
(1) 1122/    CFFA :                             ;Method 3 - 30 cycles
(1) 1122/    CFFA :                             ;TXA                                                    ;2
(1) 1122/    CFFA :                             ;TAY                                                    ;2
(1) 1122/    CFFA :                             ;LDA (emu_PC,X)                                 ;6
(1) 1122/    CFFA :                             ;ASL                                                    ;2
(1) 1122/    CFFA :                             ;BCS upper                                              ;2
(1) 1122/    CFFA :                             ;lower:
(1) 1122/    CFFA :                             ;       ASL                                                     ;2
(1) 1122/    CFFA :                             ;       TAX                                                     ;2
(1) 1122/    CFFA :                             ;       BCS upper_lower                         ;2
(1) 1122/    CFFA :                             ;       lower_lower:
(1) 1122/    CFFA :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1122/    CFFA :                             ;       upper_lower:
(1) 1122/    CFFA :                             ;               JMP (JUMP_TABLE2,X)
(1) 1122/    CFFA :                             ;upper:
(1) 1122/    CFFA :                             ;       ASL
(1) 1122/    CFFA :                             ;       TAX
(1) 1122/    CFFA :                             ;       BCS upper_upper
(1) 1122/    CFFA :                             ;       lower_upper:
(1) 1122/    CFFA :                             ;               JMP (JUMP_TABLE3,X)
(1) 1122/    CFFA :                             ;       upper_upper:
(1) 1122/    CFFA :                             ;               JMP (JUMP_TABLE4,X)
(1) 1122/    CFFA :                             ;After jump:
(1) 1122/    CFFA :                             ;TYA                                                    ;2
(1) 1122/    CFFA :                             ;TAX                                                    ;2
(1) 1122/    CFFA :                             
(1) 1122/    CFFA :                             ;Method 4 - 28 cycles
(1) 1122/    CFFA :                             ;LDA (emu_PC,X)                 ;6
(1) 1122/    CFFA :                             ;TAY                                    ;2
(1) 1122/    CFFA :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1122/    CFFA :                             ;PHA                                    ;3
(1) 1122/    CFFA :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1122/    CFFA :                             ;PHA                                    ;3
(1) 1122/    CFFA :                             ;RTS                                    ;6
(1) 1122/    CFFA :                             
(1) 1122/    CFFA :                             ;Method 5 - 30 cycles
(1) 1122/    CFFA : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1122/    CFFC : A8                          TAY                                             ;2
(1) 1122/    CFFD : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1122/    D000 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1122/    D002 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1122/    D005 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1122/    D007 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1122/    D00A :                                                     
(1) 1123/    D00A :                     
(1) 1124/    D00A :                     	;0xE0 - CPX IMMED
(1) 1125/    D00A :                     	CPX_IMMED:
(1) 1126/    D00A : (MACRO)             		OP_MACRO 224, "CPX", "IMMED", "CPX_IMMED"
(1) 1126/    D00A :                             ;TODO
(1) 1127/    D00A : (MACRO)             		NEXT_MACRO
(1) 1127/    D00A :                                             
(1) 1127/    D00A :  (MACRO-2)                  halt
(1) 1127/    D00A : 00                          BRK
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 332 - 1/5/2022 12:19:0


(1) 1127/    D00B : 00                          BRK
(1) 1127/    D00C :                             
(1) 1127/    D00C :                             ;Method 1 - 60 cycles
(1) 1127/    D00C :                             ;Jump table must be page aligned!!!
(1) 1127/    D00C :                             ;LDA (emu_PC,X)                 ;6
(1) 1127/    D00C :                             ;ASL                                    ;2
(1) 1127/    D00C :                             ;STA emu_ptr,X                  ;4
(1) 1127/    D00C :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1127/    D00C :                             ;ADC #0                                 ;2
(1) 1127/    D00C :                             ;STA emu_ptr+1,X                ;4
(1) 1127/    D00C :                             ;LDA (emu_ptr,X)                ;6
(1) 1127/    D00C :                             ;STA emu_ptr2,X                 ;4
(1) 1127/    D00C :                             ;INC emu_ptr,X                  ;6
(1) 1127/    D00C :                             ;BCC .skip                              ;2
(1) 1127/    D00C :                             ;       INC emu_ptr+1,X         ;6
(1) 1127/    D00C :                             ;.skip:
(1) 1127/    D00C :                             ;LDA (emu_ptr,X)                ;6
(1) 1127/    D00C :                             ;STA emu_ptr2+1,X               ;4
(1) 1127/    D00C :                             ;JMP (emu_ptr2,X)               ;6
(1) 1127/    D00C :                             
(1) 1127/    D00C :                             ;Method 2 - 46 cycles
(1) 1127/    D00C :                             ;Jump table must be page aligned!!!
(1) 1127/    D00C :                             ;LDA (emu_PC,X)                 ;6
(1) 1127/    D00C :                             ;STZ emu_ptr+1,X                ;4
(1) 1127/    D00C :                             ;ASL                                    ;2
(1) 1127/    D00C :                             ;ROL emu_ptr+1,X                ;6
(1) 1127/    D00C :                             ;ASL                                    ;2
(1) 1127/    D00C :                             ;ROL emu_ptr+1,X                ;6
(1) 1127/    D00C :                             ;STA emu_ptr,X                  ;4                              
(1) 1127/    D00C :                             ;LDA emu_ptr+1,X                ;4
(1) 1127/    D00C :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1127/    D00C :                             ;STA emu_ptr+1,X                ;4
(1) 1127/    D00C :                             ;JMP (emu_ptr2,X)               ;6
(1) 1127/    D00C :                             
(1) 1127/    D00C :                             ;Method 3 - 30 cycles
(1) 1127/    D00C :                             ;TXA                                                    ;2
(1) 1127/    D00C :                             ;TAY                                                    ;2
(1) 1127/    D00C :                             ;LDA (emu_PC,X)                                 ;6
(1) 1127/    D00C :                             ;ASL                                                    ;2
(1) 1127/    D00C :                             ;BCS upper                                              ;2
(1) 1127/    D00C :                             ;lower:
(1) 1127/    D00C :                             ;       ASL                                                     ;2
(1) 1127/    D00C :                             ;       TAX                                                     ;2
(1) 1127/    D00C :                             ;       BCS upper_lower                         ;2
(1) 1127/    D00C :                             ;       lower_lower:
(1) 1127/    D00C :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1127/    D00C :                             ;       upper_lower:
(1) 1127/    D00C :                             ;               JMP (JUMP_TABLE2,X)
(1) 1127/    D00C :                             ;upper:
(1) 1127/    D00C :                             ;       ASL
(1) 1127/    D00C :                             ;       TAX
(1) 1127/    D00C :                             ;       BCS upper_upper
(1) 1127/    D00C :                             ;       lower_upper:
(1) 1127/    D00C :                             ;               JMP (JUMP_TABLE3,X)
(1) 1127/    D00C :                             ;       upper_upper:
(1) 1127/    D00C :                             ;               JMP (JUMP_TABLE4,X)
(1) 1127/    D00C :                             ;After jump:
(1) 1127/    D00C :                             ;TYA                                                    ;2
(1) 1127/    D00C :                             ;TAX                                                    ;2
(1) 1127/    D00C :                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 333 - 1/5/2022 12:19:0


(1) 1127/    D00C :                             ;Method 4 - 28 cycles
(1) 1127/    D00C :                             ;LDA (emu_PC,X)                 ;6
(1) 1127/    D00C :                             ;TAY                                    ;2
(1) 1127/    D00C :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1127/    D00C :                             ;PHA                                    ;3
(1) 1127/    D00C :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1127/    D00C :                             ;PHA                                    ;3
(1) 1127/    D00C :                             ;RTS                                    ;6
(1) 1127/    D00C :                             
(1) 1127/    D00C :                             ;Method 5 - 30 cycles
(1) 1127/    D00C : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1127/    D00E : A8                          TAY                                             ;2
(1) 1127/    D00F : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1127/    D012 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1127/    D014 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1127/    D017 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1127/    D019 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1127/    D01C :                                                     
(1) 1128/    D01C :                     
(1) 1129/    D01C :                     	;0xE1 - SBC IX
(1) 1130/    D01C :                     	SBC_IX:
(1) 1131/    D01C : (MACRO)             		OP_MACRO 225, "SBC", "IX", "SBC_IX"
(1) 1131/    D01C :                             ;TODO
(1) 1132/    D01C : (MACRO)             		NEXT_MACRO
(1) 1132/    D01C :                                             
(1) 1132/    D01C :  (MACRO-2)                  halt
(1) 1132/    D01C : 00                          BRK
(1) 1132/    D01D : 00                          BRK
(1) 1132/    D01E :                             
(1) 1132/    D01E :                             ;Method 1 - 60 cycles
(1) 1132/    D01E :                             ;Jump table must be page aligned!!!
(1) 1132/    D01E :                             ;LDA (emu_PC,X)                 ;6
(1) 1132/    D01E :                             ;ASL                                    ;2
(1) 1132/    D01E :                             ;STA emu_ptr,X                  ;4
(1) 1132/    D01E :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1132/    D01E :                             ;ADC #0                                 ;2
(1) 1132/    D01E :                             ;STA emu_ptr+1,X                ;4
(1) 1132/    D01E :                             ;LDA (emu_ptr,X)                ;6
(1) 1132/    D01E :                             ;STA emu_ptr2,X                 ;4
(1) 1132/    D01E :                             ;INC emu_ptr,X                  ;6
(1) 1132/    D01E :                             ;BCC .skip                              ;2
(1) 1132/    D01E :                             ;       INC emu_ptr+1,X         ;6
(1) 1132/    D01E :                             ;.skip:
(1) 1132/    D01E :                             ;LDA (emu_ptr,X)                ;6
(1) 1132/    D01E :                             ;STA emu_ptr2+1,X               ;4
(1) 1132/    D01E :                             ;JMP (emu_ptr2,X)               ;6
(1) 1132/    D01E :                             
(1) 1132/    D01E :                             ;Method 2 - 46 cycles
(1) 1132/    D01E :                             ;Jump table must be page aligned!!!
(1) 1132/    D01E :                             ;LDA (emu_PC,X)                 ;6
(1) 1132/    D01E :                             ;STZ emu_ptr+1,X                ;4
(1) 1132/    D01E :                             ;ASL                                    ;2
(1) 1132/    D01E :                             ;ROL emu_ptr+1,X                ;6
(1) 1132/    D01E :                             ;ASL                                    ;2
(1) 1132/    D01E :                             ;ROL emu_ptr+1,X                ;6
(1) 1132/    D01E :                             ;STA emu_ptr,X                  ;4                              
(1) 1132/    D01E :                             ;LDA emu_ptr+1,X                ;4
(1) 1132/    D01E :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1132/    D01E :                             ;STA emu_ptr+1,X                ;4
(1) 1132/    D01E :                             ;JMP (emu_ptr2,X)               ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 334 - 1/5/2022 12:19:0


(1) 1132/    D01E :                             
(1) 1132/    D01E :                             ;Method 3 - 30 cycles
(1) 1132/    D01E :                             ;TXA                                                    ;2
(1) 1132/    D01E :                             ;TAY                                                    ;2
(1) 1132/    D01E :                             ;LDA (emu_PC,X)                                 ;6
(1) 1132/    D01E :                             ;ASL                                                    ;2
(1) 1132/    D01E :                             ;BCS upper                                              ;2
(1) 1132/    D01E :                             ;lower:
(1) 1132/    D01E :                             ;       ASL                                                     ;2
(1) 1132/    D01E :                             ;       TAX                                                     ;2
(1) 1132/    D01E :                             ;       BCS upper_lower                         ;2
(1) 1132/    D01E :                             ;       lower_lower:
(1) 1132/    D01E :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1132/    D01E :                             ;       upper_lower:
(1) 1132/    D01E :                             ;               JMP (JUMP_TABLE2,X)
(1) 1132/    D01E :                             ;upper:
(1) 1132/    D01E :                             ;       ASL
(1) 1132/    D01E :                             ;       TAX
(1) 1132/    D01E :                             ;       BCS upper_upper
(1) 1132/    D01E :                             ;       lower_upper:
(1) 1132/    D01E :                             ;               JMP (JUMP_TABLE3,X)
(1) 1132/    D01E :                             ;       upper_upper:
(1) 1132/    D01E :                             ;               JMP (JUMP_TABLE4,X)
(1) 1132/    D01E :                             ;After jump:
(1) 1132/    D01E :                             ;TYA                                                    ;2
(1) 1132/    D01E :                             ;TAX                                                    ;2
(1) 1132/    D01E :                             
(1) 1132/    D01E :                             ;Method 4 - 28 cycles
(1) 1132/    D01E :                             ;LDA (emu_PC,X)                 ;6
(1) 1132/    D01E :                             ;TAY                                    ;2
(1) 1132/    D01E :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1132/    D01E :                             ;PHA                                    ;3
(1) 1132/    D01E :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1132/    D01E :                             ;PHA                                    ;3
(1) 1132/    D01E :                             ;RTS                                    ;6
(1) 1132/    D01E :                             
(1) 1132/    D01E :                             ;Method 5 - 30 cycles
(1) 1132/    D01E : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1132/    D020 : A8                          TAY                                             ;2
(1) 1132/    D021 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1132/    D024 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1132/    D026 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1132/    D029 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1132/    D02B : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1132/    D02E :                                                     
(1) 1133/    D02E :                     
(1) 1134/    D02E :                     	;0xE2 - NOP
(1) 1135/    D02E :                     	NOP_0xE2:
(1) 1136/    D02E : (MACRO)             		OP_MACRO 226, "NOP", "IMP", "NOP_0xE2"
(1) 1136/    D02E :                             ;TODO
(1) 1137/    D02E : (MACRO)             		NEXT_MACRO
(1) 1137/    D02E :                                             
(1) 1137/    D02E :  (MACRO-2)                  halt
(1) 1137/    D02E : 00                          BRK
(1) 1137/    D02F : 00                          BRK
(1) 1137/    D030 :                             
(1) 1137/    D030 :                             ;Method 1 - 60 cycles
(1) 1137/    D030 :                             ;Jump table must be page aligned!!!
(1) 1137/    D030 :                             ;LDA (emu_PC,X)                 ;6
(1) 1137/    D030 :                             ;ASL                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 335 - 1/5/2022 12:19:0


(1) 1137/    D030 :                             ;STA emu_ptr,X                  ;4
(1) 1137/    D030 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1137/    D030 :                             ;ADC #0                                 ;2
(1) 1137/    D030 :                             ;STA emu_ptr+1,X                ;4
(1) 1137/    D030 :                             ;LDA (emu_ptr,X)                ;6
(1) 1137/    D030 :                             ;STA emu_ptr2,X                 ;4
(1) 1137/    D030 :                             ;INC emu_ptr,X                  ;6
(1) 1137/    D030 :                             ;BCC .skip                              ;2
(1) 1137/    D030 :                             ;       INC emu_ptr+1,X         ;6
(1) 1137/    D030 :                             ;.skip:
(1) 1137/    D030 :                             ;LDA (emu_ptr,X)                ;6
(1) 1137/    D030 :                             ;STA emu_ptr2+1,X               ;4
(1) 1137/    D030 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1137/    D030 :                             
(1) 1137/    D030 :                             ;Method 2 - 46 cycles
(1) 1137/    D030 :                             ;Jump table must be page aligned!!!
(1) 1137/    D030 :                             ;LDA (emu_PC,X)                 ;6
(1) 1137/    D030 :                             ;STZ emu_ptr+1,X                ;4
(1) 1137/    D030 :                             ;ASL                                    ;2
(1) 1137/    D030 :                             ;ROL emu_ptr+1,X                ;6
(1) 1137/    D030 :                             ;ASL                                    ;2
(1) 1137/    D030 :                             ;ROL emu_ptr+1,X                ;6
(1) 1137/    D030 :                             ;STA emu_ptr,X                  ;4                              
(1) 1137/    D030 :                             ;LDA emu_ptr+1,X                ;4
(1) 1137/    D030 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1137/    D030 :                             ;STA emu_ptr+1,X                ;4
(1) 1137/    D030 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1137/    D030 :                             
(1) 1137/    D030 :                             ;Method 3 - 30 cycles
(1) 1137/    D030 :                             ;TXA                                                    ;2
(1) 1137/    D030 :                             ;TAY                                                    ;2
(1) 1137/    D030 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1137/    D030 :                             ;ASL                                                    ;2
(1) 1137/    D030 :                             ;BCS upper                                              ;2
(1) 1137/    D030 :                             ;lower:
(1) 1137/    D030 :                             ;       ASL                                                     ;2
(1) 1137/    D030 :                             ;       TAX                                                     ;2
(1) 1137/    D030 :                             ;       BCS upper_lower                         ;2
(1) 1137/    D030 :                             ;       lower_lower:
(1) 1137/    D030 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1137/    D030 :                             ;       upper_lower:
(1) 1137/    D030 :                             ;               JMP (JUMP_TABLE2,X)
(1) 1137/    D030 :                             ;upper:
(1) 1137/    D030 :                             ;       ASL
(1) 1137/    D030 :                             ;       TAX
(1) 1137/    D030 :                             ;       BCS upper_upper
(1) 1137/    D030 :                             ;       lower_upper:
(1) 1137/    D030 :                             ;               JMP (JUMP_TABLE3,X)
(1) 1137/    D030 :                             ;       upper_upper:
(1) 1137/    D030 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1137/    D030 :                             ;After jump:
(1) 1137/    D030 :                             ;TYA                                                    ;2
(1) 1137/    D030 :                             ;TAX                                                    ;2
(1) 1137/    D030 :                             
(1) 1137/    D030 :                             ;Method 4 - 28 cycles
(1) 1137/    D030 :                             ;LDA (emu_PC,X)                 ;6
(1) 1137/    D030 :                             ;TAY                                    ;2
(1) 1137/    D030 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1137/    D030 :                             ;PHA                                    ;3
(1) 1137/    D030 :                             ;LDA JUMP_TABLE2,Y              ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 336 - 1/5/2022 12:19:0


(1) 1137/    D030 :                             ;PHA                                    ;3
(1) 1137/    D030 :                             ;RTS                                    ;6
(1) 1137/    D030 :                             
(1) 1137/    D030 :                             ;Method 5 - 30 cycles
(1) 1137/    D030 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1137/    D032 : A8                          TAY                                             ;2
(1) 1137/    D033 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1137/    D036 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1137/    D038 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1137/    D03B : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1137/    D03D : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1137/    D040 :                                                     
(1) 1138/    D040 :                     
(1) 1139/    D040 :                     	;0xE3 - NOP
(1) 1140/    D040 :                     	NOP_0xE3:
(1) 1141/    D040 : (MACRO)             		OP_MACRO 227, "NOP", "IMP", "NOP_0xE3"
(1) 1141/    D040 :                             ;TODO
(1) 1142/    D040 : (MACRO)             		NEXT_MACRO
(1) 1142/    D040 :                                             
(1) 1142/    D040 :  (MACRO-2)                  halt
(1) 1142/    D040 : 00                          BRK
(1) 1142/    D041 : 00                          BRK
(1) 1142/    D042 :                             
(1) 1142/    D042 :                             ;Method 1 - 60 cycles
(1) 1142/    D042 :                             ;Jump table must be page aligned!!!
(1) 1142/    D042 :                             ;LDA (emu_PC,X)                 ;6
(1) 1142/    D042 :                             ;ASL                                    ;2
(1) 1142/    D042 :                             ;STA emu_ptr,X                  ;4
(1) 1142/    D042 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1142/    D042 :                             ;ADC #0                                 ;2
(1) 1142/    D042 :                             ;STA emu_ptr+1,X                ;4
(1) 1142/    D042 :                             ;LDA (emu_ptr,X)                ;6
(1) 1142/    D042 :                             ;STA emu_ptr2,X                 ;4
(1) 1142/    D042 :                             ;INC emu_ptr,X                  ;6
(1) 1142/    D042 :                             ;BCC .skip                              ;2
(1) 1142/    D042 :                             ;       INC emu_ptr+1,X         ;6
(1) 1142/    D042 :                             ;.skip:
(1) 1142/    D042 :                             ;LDA (emu_ptr,X)                ;6
(1) 1142/    D042 :                             ;STA emu_ptr2+1,X               ;4
(1) 1142/    D042 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1142/    D042 :                             
(1) 1142/    D042 :                             ;Method 2 - 46 cycles
(1) 1142/    D042 :                             ;Jump table must be page aligned!!!
(1) 1142/    D042 :                             ;LDA (emu_PC,X)                 ;6
(1) 1142/    D042 :                             ;STZ emu_ptr+1,X                ;4
(1) 1142/    D042 :                             ;ASL                                    ;2
(1) 1142/    D042 :                             ;ROL emu_ptr+1,X                ;6
(1) 1142/    D042 :                             ;ASL                                    ;2
(1) 1142/    D042 :                             ;ROL emu_ptr+1,X                ;6
(1) 1142/    D042 :                             ;STA emu_ptr,X                  ;4                              
(1) 1142/    D042 :                             ;LDA emu_ptr+1,X                ;4
(1) 1142/    D042 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1142/    D042 :                             ;STA emu_ptr+1,X                ;4
(1) 1142/    D042 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1142/    D042 :                             
(1) 1142/    D042 :                             ;Method 3 - 30 cycles
(1) 1142/    D042 :                             ;TXA                                                    ;2
(1) 1142/    D042 :                             ;TAY                                                    ;2
(1) 1142/    D042 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1142/    D042 :                             ;ASL                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 337 - 1/5/2022 12:19:0


(1) 1142/    D042 :                             ;BCS upper                                              ;2
(1) 1142/    D042 :                             ;lower:
(1) 1142/    D042 :                             ;       ASL                                                     ;2
(1) 1142/    D042 :                             ;       TAX                                                     ;2
(1) 1142/    D042 :                             ;       BCS upper_lower                         ;2
(1) 1142/    D042 :                             ;       lower_lower:
(1) 1142/    D042 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1142/    D042 :                             ;       upper_lower:
(1) 1142/    D042 :                             ;               JMP (JUMP_TABLE2,X)
(1) 1142/    D042 :                             ;upper:
(1) 1142/    D042 :                             ;       ASL
(1) 1142/    D042 :                             ;       TAX
(1) 1142/    D042 :                             ;       BCS upper_upper
(1) 1142/    D042 :                             ;       lower_upper:
(1) 1142/    D042 :                             ;               JMP (JUMP_TABLE3,X)
(1) 1142/    D042 :                             ;       upper_upper:
(1) 1142/    D042 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1142/    D042 :                             ;After jump:
(1) 1142/    D042 :                             ;TYA                                                    ;2
(1) 1142/    D042 :                             ;TAX                                                    ;2
(1) 1142/    D042 :                             
(1) 1142/    D042 :                             ;Method 4 - 28 cycles
(1) 1142/    D042 :                             ;LDA (emu_PC,X)                 ;6
(1) 1142/    D042 :                             ;TAY                                    ;2
(1) 1142/    D042 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1142/    D042 :                             ;PHA                                    ;3
(1) 1142/    D042 :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1142/    D042 :                             ;PHA                                    ;3
(1) 1142/    D042 :                             ;RTS                                    ;6
(1) 1142/    D042 :                             
(1) 1142/    D042 :                             ;Method 5 - 30 cycles
(1) 1142/    D042 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1142/    D044 : A8                          TAY                                             ;2
(1) 1142/    D045 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1142/    D048 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1142/    D04A : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1142/    D04D : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1142/    D04F : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1142/    D052 :                                                     
(1) 1143/    D052 :                     
(1) 1144/    D052 :                     	;0xE4 - CPX ZP
(1) 1145/    D052 :                     	CPX_ZP:
(1) 1146/    D052 : (MACRO)             		OP_MACRO 228, "CPX", "ZP", "CPX_ZP"
(1) 1146/    D052 :                             ;TODO
(1) 1147/    D052 : (MACRO)             		NEXT_MACRO
(1) 1147/    D052 :                                             
(1) 1147/    D052 :  (MACRO-2)                  halt
(1) 1147/    D052 : 00                          BRK
(1) 1147/    D053 : 00                          BRK
(1) 1147/    D054 :                             
(1) 1147/    D054 :                             ;Method 1 - 60 cycles
(1) 1147/    D054 :                             ;Jump table must be page aligned!!!
(1) 1147/    D054 :                             ;LDA (emu_PC,X)                 ;6
(1) 1147/    D054 :                             ;ASL                                    ;2
(1) 1147/    D054 :                             ;STA emu_ptr,X                  ;4
(1) 1147/    D054 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1147/    D054 :                             ;ADC #0                                 ;2
(1) 1147/    D054 :                             ;STA emu_ptr+1,X                ;4
(1) 1147/    D054 :                             ;LDA (emu_ptr,X)                ;6
(1) 1147/    D054 :                             ;STA emu_ptr2,X                 ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 338 - 1/5/2022 12:19:0


(1) 1147/    D054 :                             ;INC emu_ptr,X                  ;6
(1) 1147/    D054 :                             ;BCC .skip                              ;2
(1) 1147/    D054 :                             ;       INC emu_ptr+1,X         ;6
(1) 1147/    D054 :                             ;.skip:
(1) 1147/    D054 :                             ;LDA (emu_ptr,X)                ;6
(1) 1147/    D054 :                             ;STA emu_ptr2+1,X               ;4
(1) 1147/    D054 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1147/    D054 :                             
(1) 1147/    D054 :                             ;Method 2 - 46 cycles
(1) 1147/    D054 :                             ;Jump table must be page aligned!!!
(1) 1147/    D054 :                             ;LDA (emu_PC,X)                 ;6
(1) 1147/    D054 :                             ;STZ emu_ptr+1,X                ;4
(1) 1147/    D054 :                             ;ASL                                    ;2
(1) 1147/    D054 :                             ;ROL emu_ptr+1,X                ;6
(1) 1147/    D054 :                             ;ASL                                    ;2
(1) 1147/    D054 :                             ;ROL emu_ptr+1,X                ;6
(1) 1147/    D054 :                             ;STA emu_ptr,X                  ;4                              
(1) 1147/    D054 :                             ;LDA emu_ptr+1,X                ;4
(1) 1147/    D054 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1147/    D054 :                             ;STA emu_ptr+1,X                ;4
(1) 1147/    D054 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1147/    D054 :                             
(1) 1147/    D054 :                             ;Method 3 - 30 cycles
(1) 1147/    D054 :                             ;TXA                                                    ;2
(1) 1147/    D054 :                             ;TAY                                                    ;2
(1) 1147/    D054 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1147/    D054 :                             ;ASL                                                    ;2
(1) 1147/    D054 :                             ;BCS upper                                              ;2
(1) 1147/    D054 :                             ;lower:
(1) 1147/    D054 :                             ;       ASL                                                     ;2
(1) 1147/    D054 :                             ;       TAX                                                     ;2
(1) 1147/    D054 :                             ;       BCS upper_lower                         ;2
(1) 1147/    D054 :                             ;       lower_lower:
(1) 1147/    D054 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1147/    D054 :                             ;       upper_lower:
(1) 1147/    D054 :                             ;               JMP (JUMP_TABLE2,X)
(1) 1147/    D054 :                             ;upper:
(1) 1147/    D054 :                             ;       ASL
(1) 1147/    D054 :                             ;       TAX
(1) 1147/    D054 :                             ;       BCS upper_upper
(1) 1147/    D054 :                             ;       lower_upper:
(1) 1147/    D054 :                             ;               JMP (JUMP_TABLE3,X)
(1) 1147/    D054 :                             ;       upper_upper:
(1) 1147/    D054 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1147/    D054 :                             ;After jump:
(1) 1147/    D054 :                             ;TYA                                                    ;2
(1) 1147/    D054 :                             ;TAX                                                    ;2
(1) 1147/    D054 :                             
(1) 1147/    D054 :                             ;Method 4 - 28 cycles
(1) 1147/    D054 :                             ;LDA (emu_PC,X)                 ;6
(1) 1147/    D054 :                             ;TAY                                    ;2
(1) 1147/    D054 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1147/    D054 :                             ;PHA                                    ;3
(1) 1147/    D054 :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1147/    D054 :                             ;PHA                                    ;3
(1) 1147/    D054 :                             ;RTS                                    ;6
(1) 1147/    D054 :                             
(1) 1147/    D054 :                             ;Method 5 - 30 cycles
(1) 1147/    D054 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1147/    D056 : A8                          TAY                                             ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 339 - 1/5/2022 12:19:0


(1) 1147/    D057 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1147/    D05A : 95 0A                       STA emu_ptr,X                   ;4
(1) 1147/    D05C : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1147/    D05F : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1147/    D061 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1147/    D064 :                                                     
(1) 1148/    D064 :                     
(1) 1149/    D064 :                     	;0xE5 - SBC ZP
(1) 1150/    D064 :                     	SBC_ZP:
(1) 1151/    D064 : (MACRO)             		OP_MACRO 229, "SBC", "ZP", "SBC_ZP"
(1) 1151/    D064 :                             ;TODO
(1) 1152/    D064 : (MACRO)             		NEXT_MACRO
(1) 1152/    D064 :                                             
(1) 1152/    D064 :  (MACRO-2)                  halt
(1) 1152/    D064 : 00                          BRK
(1) 1152/    D065 : 00                          BRK
(1) 1152/    D066 :                             
(1) 1152/    D066 :                             ;Method 1 - 60 cycles
(1) 1152/    D066 :                             ;Jump table must be page aligned!!!
(1) 1152/    D066 :                             ;LDA (emu_PC,X)                 ;6
(1) 1152/    D066 :                             ;ASL                                    ;2
(1) 1152/    D066 :                             ;STA emu_ptr,X                  ;4
(1) 1152/    D066 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1152/    D066 :                             ;ADC #0                                 ;2
(1) 1152/    D066 :                             ;STA emu_ptr+1,X                ;4
(1) 1152/    D066 :                             ;LDA (emu_ptr,X)                ;6
(1) 1152/    D066 :                             ;STA emu_ptr2,X                 ;4
(1) 1152/    D066 :                             ;INC emu_ptr,X                  ;6
(1) 1152/    D066 :                             ;BCC .skip                              ;2
(1) 1152/    D066 :                             ;       INC emu_ptr+1,X         ;6
(1) 1152/    D066 :                             ;.skip:
(1) 1152/    D066 :                             ;LDA (emu_ptr,X)                ;6
(1) 1152/    D066 :                             ;STA emu_ptr2+1,X               ;4
(1) 1152/    D066 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1152/    D066 :                             
(1) 1152/    D066 :                             ;Method 2 - 46 cycles
(1) 1152/    D066 :                             ;Jump table must be page aligned!!!
(1) 1152/    D066 :                             ;LDA (emu_PC,X)                 ;6
(1) 1152/    D066 :                             ;STZ emu_ptr+1,X                ;4
(1) 1152/    D066 :                             ;ASL                                    ;2
(1) 1152/    D066 :                             ;ROL emu_ptr+1,X                ;6
(1) 1152/    D066 :                             ;ASL                                    ;2
(1) 1152/    D066 :                             ;ROL emu_ptr+1,X                ;6
(1) 1152/    D066 :                             ;STA emu_ptr,X                  ;4                              
(1) 1152/    D066 :                             ;LDA emu_ptr+1,X                ;4
(1) 1152/    D066 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1152/    D066 :                             ;STA emu_ptr+1,X                ;4
(1) 1152/    D066 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1152/    D066 :                             
(1) 1152/    D066 :                             ;Method 3 - 30 cycles
(1) 1152/    D066 :                             ;TXA                                                    ;2
(1) 1152/    D066 :                             ;TAY                                                    ;2
(1) 1152/    D066 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1152/    D066 :                             ;ASL                                                    ;2
(1) 1152/    D066 :                             ;BCS upper                                              ;2
(1) 1152/    D066 :                             ;lower:
(1) 1152/    D066 :                             ;       ASL                                                     ;2
(1) 1152/    D066 :                             ;       TAX                                                     ;2
(1) 1152/    D066 :                             ;       BCS upper_lower                         ;2
(1) 1152/    D066 :                             ;       lower_lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 340 - 1/5/2022 12:19:0


(1) 1152/    D066 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1152/    D066 :                             ;       upper_lower:
(1) 1152/    D066 :                             ;               JMP (JUMP_TABLE2,X)
(1) 1152/    D066 :                             ;upper:
(1) 1152/    D066 :                             ;       ASL
(1) 1152/    D066 :                             ;       TAX
(1) 1152/    D066 :                             ;       BCS upper_upper
(1) 1152/    D066 :                             ;       lower_upper:
(1) 1152/    D066 :                             ;               JMP (JUMP_TABLE3,X)
(1) 1152/    D066 :                             ;       upper_upper:
(1) 1152/    D066 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1152/    D066 :                             ;After jump:
(1) 1152/    D066 :                             ;TYA                                                    ;2
(1) 1152/    D066 :                             ;TAX                                                    ;2
(1) 1152/    D066 :                             
(1) 1152/    D066 :                             ;Method 4 - 28 cycles
(1) 1152/    D066 :                             ;LDA (emu_PC,X)                 ;6
(1) 1152/    D066 :                             ;TAY                                    ;2
(1) 1152/    D066 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1152/    D066 :                             ;PHA                                    ;3
(1) 1152/    D066 :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1152/    D066 :                             ;PHA                                    ;3
(1) 1152/    D066 :                             ;RTS                                    ;6
(1) 1152/    D066 :                             
(1) 1152/    D066 :                             ;Method 5 - 30 cycles
(1) 1152/    D066 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1152/    D068 : A8                          TAY                                             ;2
(1) 1152/    D069 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1152/    D06C : 95 0A                       STA emu_ptr,X                   ;4
(1) 1152/    D06E : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1152/    D071 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1152/    D073 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1152/    D076 :                                                     
(1) 1153/    D076 :                     
(1) 1154/    D076 :                     	;0xE6 - INC ZP
(1) 1155/    D076 :                     	INC_ZP:
(1) 1156/    D076 : (MACRO)             		OP_MACRO 230, "INC", "ZP", "INC_ZP"
(1) 1156/    D076 :                             ;TODO
(1) 1157/    D076 : (MACRO)             		NEXT_MACRO
(1) 1157/    D076 :                                             
(1) 1157/    D076 :  (MACRO-2)                  halt
(1) 1157/    D076 : 00                          BRK
(1) 1157/    D077 : 00                          BRK
(1) 1157/    D078 :                             
(1) 1157/    D078 :                             ;Method 1 - 60 cycles
(1) 1157/    D078 :                             ;Jump table must be page aligned!!!
(1) 1157/    D078 :                             ;LDA (emu_PC,X)                 ;6
(1) 1157/    D078 :                             ;ASL                                    ;2
(1) 1157/    D078 :                             ;STA emu_ptr,X                  ;4
(1) 1157/    D078 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1157/    D078 :                             ;ADC #0                                 ;2
(1) 1157/    D078 :                             ;STA emu_ptr+1,X                ;4
(1) 1157/    D078 :                             ;LDA (emu_ptr,X)                ;6
(1) 1157/    D078 :                             ;STA emu_ptr2,X                 ;4
(1) 1157/    D078 :                             ;INC emu_ptr,X                  ;6
(1) 1157/    D078 :                             ;BCC .skip                              ;2
(1) 1157/    D078 :                             ;       INC emu_ptr+1,X         ;6
(1) 1157/    D078 :                             ;.skip:
(1) 1157/    D078 :                             ;LDA (emu_ptr,X)                ;6
(1) 1157/    D078 :                             ;STA emu_ptr2+1,X               ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 341 - 1/5/2022 12:19:0


(1) 1157/    D078 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1157/    D078 :                             
(1) 1157/    D078 :                             ;Method 2 - 46 cycles
(1) 1157/    D078 :                             ;Jump table must be page aligned!!!
(1) 1157/    D078 :                             ;LDA (emu_PC,X)                 ;6
(1) 1157/    D078 :                             ;STZ emu_ptr+1,X                ;4
(1) 1157/    D078 :                             ;ASL                                    ;2
(1) 1157/    D078 :                             ;ROL emu_ptr+1,X                ;6
(1) 1157/    D078 :                             ;ASL                                    ;2
(1) 1157/    D078 :                             ;ROL emu_ptr+1,X                ;6
(1) 1157/    D078 :                             ;STA emu_ptr,X                  ;4                              
(1) 1157/    D078 :                             ;LDA emu_ptr+1,X                ;4
(1) 1157/    D078 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1157/    D078 :                             ;STA emu_ptr+1,X                ;4
(1) 1157/    D078 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1157/    D078 :                             
(1) 1157/    D078 :                             ;Method 3 - 30 cycles
(1) 1157/    D078 :                             ;TXA                                                    ;2
(1) 1157/    D078 :                             ;TAY                                                    ;2
(1) 1157/    D078 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1157/    D078 :                             ;ASL                                                    ;2
(1) 1157/    D078 :                             ;BCS upper                                              ;2
(1) 1157/    D078 :                             ;lower:
(1) 1157/    D078 :                             ;       ASL                                                     ;2
(1) 1157/    D078 :                             ;       TAX                                                     ;2
(1) 1157/    D078 :                             ;       BCS upper_lower                         ;2
(1) 1157/    D078 :                             ;       lower_lower:
(1) 1157/    D078 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1157/    D078 :                             ;       upper_lower:
(1) 1157/    D078 :                             ;               JMP (JUMP_TABLE2,X)
(1) 1157/    D078 :                             ;upper:
(1) 1157/    D078 :                             ;       ASL
(1) 1157/    D078 :                             ;       TAX
(1) 1157/    D078 :                             ;       BCS upper_upper
(1) 1157/    D078 :                             ;       lower_upper:
(1) 1157/    D078 :                             ;               JMP (JUMP_TABLE3,X)
(1) 1157/    D078 :                             ;       upper_upper:
(1) 1157/    D078 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1157/    D078 :                             ;After jump:
(1) 1157/    D078 :                             ;TYA                                                    ;2
(1) 1157/    D078 :                             ;TAX                                                    ;2
(1) 1157/    D078 :                             
(1) 1157/    D078 :                             ;Method 4 - 28 cycles
(1) 1157/    D078 :                             ;LDA (emu_PC,X)                 ;6
(1) 1157/    D078 :                             ;TAY                                    ;2
(1) 1157/    D078 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1157/    D078 :                             ;PHA                                    ;3
(1) 1157/    D078 :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1157/    D078 :                             ;PHA                                    ;3
(1) 1157/    D078 :                             ;RTS                                    ;6
(1) 1157/    D078 :                             
(1) 1157/    D078 :                             ;Method 5 - 30 cycles
(1) 1157/    D078 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1157/    D07A : A8                          TAY                                             ;2
(1) 1157/    D07B : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1157/    D07E : 95 0A                       STA emu_ptr,X                   ;4
(1) 1157/    D080 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1157/    D083 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1157/    D085 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1157/    D088 :                                                     
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 342 - 1/5/2022 12:19:0


(1) 1158/    D088 :                     
(1) 1159/    D088 :                     	;0xE7 - NOP
(1) 1160/    D088 :                     	NOP_0xE7:
(1) 1161/    D088 : (MACRO)             		OP_MACRO 231, "NOP", "IMP", "NOP_0xE7"
(1) 1161/    D088 :                             ;TODO
(1) 1162/    D088 : (MACRO)             		NEXT_MACRO
(1) 1162/    D088 :                                             
(1) 1162/    D088 :  (MACRO-2)                  halt
(1) 1162/    D088 : 00                          BRK
(1) 1162/    D089 : 00                          BRK
(1) 1162/    D08A :                             
(1) 1162/    D08A :                             ;Method 1 - 60 cycles
(1) 1162/    D08A :                             ;Jump table must be page aligned!!!
(1) 1162/    D08A :                             ;LDA (emu_PC,X)                 ;6
(1) 1162/    D08A :                             ;ASL                                    ;2
(1) 1162/    D08A :                             ;STA emu_ptr,X                  ;4
(1) 1162/    D08A :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1162/    D08A :                             ;ADC #0                                 ;2
(1) 1162/    D08A :                             ;STA emu_ptr+1,X                ;4
(1) 1162/    D08A :                             ;LDA (emu_ptr,X)                ;6
(1) 1162/    D08A :                             ;STA emu_ptr2,X                 ;4
(1) 1162/    D08A :                             ;INC emu_ptr,X                  ;6
(1) 1162/    D08A :                             ;BCC .skip                              ;2
(1) 1162/    D08A :                             ;       INC emu_ptr+1,X         ;6
(1) 1162/    D08A :                             ;.skip:
(1) 1162/    D08A :                             ;LDA (emu_ptr,X)                ;6
(1) 1162/    D08A :                             ;STA emu_ptr2+1,X               ;4
(1) 1162/    D08A :                             ;JMP (emu_ptr2,X)               ;6
(1) 1162/    D08A :                             
(1) 1162/    D08A :                             ;Method 2 - 46 cycles
(1) 1162/    D08A :                             ;Jump table must be page aligned!!!
(1) 1162/    D08A :                             ;LDA (emu_PC,X)                 ;6
(1) 1162/    D08A :                             ;STZ emu_ptr+1,X                ;4
(1) 1162/    D08A :                             ;ASL                                    ;2
(1) 1162/    D08A :                             ;ROL emu_ptr+1,X                ;6
(1) 1162/    D08A :                             ;ASL                                    ;2
(1) 1162/    D08A :                             ;ROL emu_ptr+1,X                ;6
(1) 1162/    D08A :                             ;STA emu_ptr,X                  ;4                              
(1) 1162/    D08A :                             ;LDA emu_ptr+1,X                ;4
(1) 1162/    D08A :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1162/    D08A :                             ;STA emu_ptr+1,X                ;4
(1) 1162/    D08A :                             ;JMP (emu_ptr2,X)               ;6
(1) 1162/    D08A :                             
(1) 1162/    D08A :                             ;Method 3 - 30 cycles
(1) 1162/    D08A :                             ;TXA                                                    ;2
(1) 1162/    D08A :                             ;TAY                                                    ;2
(1) 1162/    D08A :                             ;LDA (emu_PC,X)                                 ;6
(1) 1162/    D08A :                             ;ASL                                                    ;2
(1) 1162/    D08A :                             ;BCS upper                                              ;2
(1) 1162/    D08A :                             ;lower:
(1) 1162/    D08A :                             ;       ASL                                                     ;2
(1) 1162/    D08A :                             ;       TAX                                                     ;2
(1) 1162/    D08A :                             ;       BCS upper_lower                         ;2
(1) 1162/    D08A :                             ;       lower_lower:
(1) 1162/    D08A :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1162/    D08A :                             ;       upper_lower:
(1) 1162/    D08A :                             ;               JMP (JUMP_TABLE2,X)
(1) 1162/    D08A :                             ;upper:
(1) 1162/    D08A :                             ;       ASL
(1) 1162/    D08A :                             ;       TAX
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 343 - 1/5/2022 12:19:0


(1) 1162/    D08A :                             ;       BCS upper_upper
(1) 1162/    D08A :                             ;       lower_upper:
(1) 1162/    D08A :                             ;               JMP (JUMP_TABLE3,X)
(1) 1162/    D08A :                             ;       upper_upper:
(1) 1162/    D08A :                             ;               JMP (JUMP_TABLE4,X)
(1) 1162/    D08A :                             ;After jump:
(1) 1162/    D08A :                             ;TYA                                                    ;2
(1) 1162/    D08A :                             ;TAX                                                    ;2
(1) 1162/    D08A :                             
(1) 1162/    D08A :                             ;Method 4 - 28 cycles
(1) 1162/    D08A :                             ;LDA (emu_PC,X)                 ;6
(1) 1162/    D08A :                             ;TAY                                    ;2
(1) 1162/    D08A :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1162/    D08A :                             ;PHA                                    ;3
(1) 1162/    D08A :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1162/    D08A :                             ;PHA                                    ;3
(1) 1162/    D08A :                             ;RTS                                    ;6
(1) 1162/    D08A :                             
(1) 1162/    D08A :                             ;Method 5 - 30 cycles
(1) 1162/    D08A : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1162/    D08C : A8                          TAY                                             ;2
(1) 1162/    D08D : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1162/    D090 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1162/    D092 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1162/    D095 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1162/    D097 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1162/    D09A :                                                     
(1) 1163/    D09A :                     
(1) 1164/    D09A :                     	;0xE8 - INX IMP
(1) 1165/    D09A :                     	INX_IMP:
(1) 1166/    D09A : (MACRO)             		OP_MACRO 232, "INX", "IMP", "INX_IMP"
(1) 1166/    D09A :                             ;TODO
(1) 1167/    D09A : (MACRO)             		NEXT_MACRO
(1) 1167/    D09A :                                             
(1) 1167/    D09A :  (MACRO-2)                  halt
(1) 1167/    D09A : 00                          BRK
(1) 1167/    D09B : 00                          BRK
(1) 1167/    D09C :                             
(1) 1167/    D09C :                             ;Method 1 - 60 cycles
(1) 1167/    D09C :                             ;Jump table must be page aligned!!!
(1) 1167/    D09C :                             ;LDA (emu_PC,X)                 ;6
(1) 1167/    D09C :                             ;ASL                                    ;2
(1) 1167/    D09C :                             ;STA emu_ptr,X                  ;4
(1) 1167/    D09C :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1167/    D09C :                             ;ADC #0                                 ;2
(1) 1167/    D09C :                             ;STA emu_ptr+1,X                ;4
(1) 1167/    D09C :                             ;LDA (emu_ptr,X)                ;6
(1) 1167/    D09C :                             ;STA emu_ptr2,X                 ;4
(1) 1167/    D09C :                             ;INC emu_ptr,X                  ;6
(1) 1167/    D09C :                             ;BCC .skip                              ;2
(1) 1167/    D09C :                             ;       INC emu_ptr+1,X         ;6
(1) 1167/    D09C :                             ;.skip:
(1) 1167/    D09C :                             ;LDA (emu_ptr,X)                ;6
(1) 1167/    D09C :                             ;STA emu_ptr2+1,X               ;4
(1) 1167/    D09C :                             ;JMP (emu_ptr2,X)               ;6
(1) 1167/    D09C :                             
(1) 1167/    D09C :                             ;Method 2 - 46 cycles
(1) 1167/    D09C :                             ;Jump table must be page aligned!!!
(1) 1167/    D09C :                             ;LDA (emu_PC,X)                 ;6
(1) 1167/    D09C :                             ;STZ emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 344 - 1/5/2022 12:19:0


(1) 1167/    D09C :                             ;ASL                                    ;2
(1) 1167/    D09C :                             ;ROL emu_ptr+1,X                ;6
(1) 1167/    D09C :                             ;ASL                                    ;2
(1) 1167/    D09C :                             ;ROL emu_ptr+1,X                ;6
(1) 1167/    D09C :                             ;STA emu_ptr,X                  ;4                              
(1) 1167/    D09C :                             ;LDA emu_ptr+1,X                ;4
(1) 1167/    D09C :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1167/    D09C :                             ;STA emu_ptr+1,X                ;4
(1) 1167/    D09C :                             ;JMP (emu_ptr2,X)               ;6
(1) 1167/    D09C :                             
(1) 1167/    D09C :                             ;Method 3 - 30 cycles
(1) 1167/    D09C :                             ;TXA                                                    ;2
(1) 1167/    D09C :                             ;TAY                                                    ;2
(1) 1167/    D09C :                             ;LDA (emu_PC,X)                                 ;6
(1) 1167/    D09C :                             ;ASL                                                    ;2
(1) 1167/    D09C :                             ;BCS upper                                              ;2
(1) 1167/    D09C :                             ;lower:
(1) 1167/    D09C :                             ;       ASL                                                     ;2
(1) 1167/    D09C :                             ;       TAX                                                     ;2
(1) 1167/    D09C :                             ;       BCS upper_lower                         ;2
(1) 1167/    D09C :                             ;       lower_lower:
(1) 1167/    D09C :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1167/    D09C :                             ;       upper_lower:
(1) 1167/    D09C :                             ;               JMP (JUMP_TABLE2,X)
(1) 1167/    D09C :                             ;upper:
(1) 1167/    D09C :                             ;       ASL
(1) 1167/    D09C :                             ;       TAX
(1) 1167/    D09C :                             ;       BCS upper_upper
(1) 1167/    D09C :                             ;       lower_upper:
(1) 1167/    D09C :                             ;               JMP (JUMP_TABLE3,X)
(1) 1167/    D09C :                             ;       upper_upper:
(1) 1167/    D09C :                             ;               JMP (JUMP_TABLE4,X)
(1) 1167/    D09C :                             ;After jump:
(1) 1167/    D09C :                             ;TYA                                                    ;2
(1) 1167/    D09C :                             ;TAX                                                    ;2
(1) 1167/    D09C :                             
(1) 1167/    D09C :                             ;Method 4 - 28 cycles
(1) 1167/    D09C :                             ;LDA (emu_PC,X)                 ;6
(1) 1167/    D09C :                             ;TAY                                    ;2
(1) 1167/    D09C :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1167/    D09C :                             ;PHA                                    ;3
(1) 1167/    D09C :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1167/    D09C :                             ;PHA                                    ;3
(1) 1167/    D09C :                             ;RTS                                    ;6
(1) 1167/    D09C :                             
(1) 1167/    D09C :                             ;Method 5 - 30 cycles
(1) 1167/    D09C : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1167/    D09E : A8                          TAY                                             ;2
(1) 1167/    D09F : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1167/    D0A2 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1167/    D0A4 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1167/    D0A7 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1167/    D0A9 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1167/    D0AC :                                                     
(1) 1168/    D0AC :                     
(1) 1169/    D0AC :                     	;0xE9 - SBC IMMED
(1) 1170/    D0AC :                     	SBC_IMMED:
(1) 1171/    D0AC : (MACRO)             		OP_MACRO 233, "SBC", "IMMED", "SBC_IMMED"
(1) 1171/    D0AC :                             ;TODO
(1) 1172/    D0AC : (MACRO)             		NEXT_MACRO
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 345 - 1/5/2022 12:19:0


(1) 1172/    D0AC :                                             
(1) 1172/    D0AC :  (MACRO-2)                  halt
(1) 1172/    D0AC : 00                          BRK
(1) 1172/    D0AD : 00                          BRK
(1) 1172/    D0AE :                             
(1) 1172/    D0AE :                             ;Method 1 - 60 cycles
(1) 1172/    D0AE :                             ;Jump table must be page aligned!!!
(1) 1172/    D0AE :                             ;LDA (emu_PC,X)                 ;6
(1) 1172/    D0AE :                             ;ASL                                    ;2
(1) 1172/    D0AE :                             ;STA emu_ptr,X                  ;4
(1) 1172/    D0AE :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1172/    D0AE :                             ;ADC #0                                 ;2
(1) 1172/    D0AE :                             ;STA emu_ptr+1,X                ;4
(1) 1172/    D0AE :                             ;LDA (emu_ptr,X)                ;6
(1) 1172/    D0AE :                             ;STA emu_ptr2,X                 ;4
(1) 1172/    D0AE :                             ;INC emu_ptr,X                  ;6
(1) 1172/    D0AE :                             ;BCC .skip                              ;2
(1) 1172/    D0AE :                             ;       INC emu_ptr+1,X         ;6
(1) 1172/    D0AE :                             ;.skip:
(1) 1172/    D0AE :                             ;LDA (emu_ptr,X)                ;6
(1) 1172/    D0AE :                             ;STA emu_ptr2+1,X               ;4
(1) 1172/    D0AE :                             ;JMP (emu_ptr2,X)               ;6
(1) 1172/    D0AE :                             
(1) 1172/    D0AE :                             ;Method 2 - 46 cycles
(1) 1172/    D0AE :                             ;Jump table must be page aligned!!!
(1) 1172/    D0AE :                             ;LDA (emu_PC,X)                 ;6
(1) 1172/    D0AE :                             ;STZ emu_ptr+1,X                ;4
(1) 1172/    D0AE :                             ;ASL                                    ;2
(1) 1172/    D0AE :                             ;ROL emu_ptr+1,X                ;6
(1) 1172/    D0AE :                             ;ASL                                    ;2
(1) 1172/    D0AE :                             ;ROL emu_ptr+1,X                ;6
(1) 1172/    D0AE :                             ;STA emu_ptr,X                  ;4                              
(1) 1172/    D0AE :                             ;LDA emu_ptr+1,X                ;4
(1) 1172/    D0AE :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1172/    D0AE :                             ;STA emu_ptr+1,X                ;4
(1) 1172/    D0AE :                             ;JMP (emu_ptr2,X)               ;6
(1) 1172/    D0AE :                             
(1) 1172/    D0AE :                             ;Method 3 - 30 cycles
(1) 1172/    D0AE :                             ;TXA                                                    ;2
(1) 1172/    D0AE :                             ;TAY                                                    ;2
(1) 1172/    D0AE :                             ;LDA (emu_PC,X)                                 ;6
(1) 1172/    D0AE :                             ;ASL                                                    ;2
(1) 1172/    D0AE :                             ;BCS upper                                              ;2
(1) 1172/    D0AE :                             ;lower:
(1) 1172/    D0AE :                             ;       ASL                                                     ;2
(1) 1172/    D0AE :                             ;       TAX                                                     ;2
(1) 1172/    D0AE :                             ;       BCS upper_lower                         ;2
(1) 1172/    D0AE :                             ;       lower_lower:
(1) 1172/    D0AE :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1172/    D0AE :                             ;       upper_lower:
(1) 1172/    D0AE :                             ;               JMP (JUMP_TABLE2,X)
(1) 1172/    D0AE :                             ;upper:
(1) 1172/    D0AE :                             ;       ASL
(1) 1172/    D0AE :                             ;       TAX
(1) 1172/    D0AE :                             ;       BCS upper_upper
(1) 1172/    D0AE :                             ;       lower_upper:
(1) 1172/    D0AE :                             ;               JMP (JUMP_TABLE3,X)
(1) 1172/    D0AE :                             ;       upper_upper:
(1) 1172/    D0AE :                             ;               JMP (JUMP_TABLE4,X)
(1) 1172/    D0AE :                             ;After jump:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 346 - 1/5/2022 12:19:0


(1) 1172/    D0AE :                             ;TYA                                                    ;2
(1) 1172/    D0AE :                             ;TAX                                                    ;2
(1) 1172/    D0AE :                             
(1) 1172/    D0AE :                             ;Method 4 - 28 cycles
(1) 1172/    D0AE :                             ;LDA (emu_PC,X)                 ;6
(1) 1172/    D0AE :                             ;TAY                                    ;2
(1) 1172/    D0AE :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1172/    D0AE :                             ;PHA                                    ;3
(1) 1172/    D0AE :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1172/    D0AE :                             ;PHA                                    ;3
(1) 1172/    D0AE :                             ;RTS                                    ;6
(1) 1172/    D0AE :                             
(1) 1172/    D0AE :                             ;Method 5 - 30 cycles
(1) 1172/    D0AE : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1172/    D0B0 : A8                          TAY                                             ;2
(1) 1172/    D0B1 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1172/    D0B4 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1172/    D0B6 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1172/    D0B9 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1172/    D0BB : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1172/    D0BE :                                                     
(1) 1173/    D0BE :                     
(1) 1174/    D0BE :                     	;0xEA - NOP IMP
(1) 1175/    D0BE :                     	NOP_IMP:
(1) 1176/    D0BE : (MACRO)             		OP_MACRO 234, "NOP", "IMP", "NOP_IMP"
(1) 1176/    D0BE :                             ;TODO
(1) 1177/    D0BE : (MACRO)             		NEXT_MACRO
(1) 1177/    D0BE :                                             
(1) 1177/    D0BE :  (MACRO-2)                  halt
(1) 1177/    D0BE : 00                          BRK
(1) 1177/    D0BF : 00                          BRK
(1) 1177/    D0C0 :                             
(1) 1177/    D0C0 :                             ;Method 1 - 60 cycles
(1) 1177/    D0C0 :                             ;Jump table must be page aligned!!!
(1) 1177/    D0C0 :                             ;LDA (emu_PC,X)                 ;6
(1) 1177/    D0C0 :                             ;ASL                                    ;2
(1) 1177/    D0C0 :                             ;STA emu_ptr,X                  ;4
(1) 1177/    D0C0 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1177/    D0C0 :                             ;ADC #0                                 ;2
(1) 1177/    D0C0 :                             ;STA emu_ptr+1,X                ;4
(1) 1177/    D0C0 :                             ;LDA (emu_ptr,X)                ;6
(1) 1177/    D0C0 :                             ;STA emu_ptr2,X                 ;4
(1) 1177/    D0C0 :                             ;INC emu_ptr,X                  ;6
(1) 1177/    D0C0 :                             ;BCC .skip                              ;2
(1) 1177/    D0C0 :                             ;       INC emu_ptr+1,X         ;6
(1) 1177/    D0C0 :                             ;.skip:
(1) 1177/    D0C0 :                             ;LDA (emu_ptr,X)                ;6
(1) 1177/    D0C0 :                             ;STA emu_ptr2+1,X               ;4
(1) 1177/    D0C0 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1177/    D0C0 :                             
(1) 1177/    D0C0 :                             ;Method 2 - 46 cycles
(1) 1177/    D0C0 :                             ;Jump table must be page aligned!!!
(1) 1177/    D0C0 :                             ;LDA (emu_PC,X)                 ;6
(1) 1177/    D0C0 :                             ;STZ emu_ptr+1,X                ;4
(1) 1177/    D0C0 :                             ;ASL                                    ;2
(1) 1177/    D0C0 :                             ;ROL emu_ptr+1,X                ;6
(1) 1177/    D0C0 :                             ;ASL                                    ;2
(1) 1177/    D0C0 :                             ;ROL emu_ptr+1,X                ;6
(1) 1177/    D0C0 :                             ;STA emu_ptr,X                  ;4                              
(1) 1177/    D0C0 :                             ;LDA emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 347 - 1/5/2022 12:19:0


(1) 1177/    D0C0 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1177/    D0C0 :                             ;STA emu_ptr+1,X                ;4
(1) 1177/    D0C0 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1177/    D0C0 :                             
(1) 1177/    D0C0 :                             ;Method 3 - 30 cycles
(1) 1177/    D0C0 :                             ;TXA                                                    ;2
(1) 1177/    D0C0 :                             ;TAY                                                    ;2
(1) 1177/    D0C0 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1177/    D0C0 :                             ;ASL                                                    ;2
(1) 1177/    D0C0 :                             ;BCS upper                                              ;2
(1) 1177/    D0C0 :                             ;lower:
(1) 1177/    D0C0 :                             ;       ASL                                                     ;2
(1) 1177/    D0C0 :                             ;       TAX                                                     ;2
(1) 1177/    D0C0 :                             ;       BCS upper_lower                         ;2
(1) 1177/    D0C0 :                             ;       lower_lower:
(1) 1177/    D0C0 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1177/    D0C0 :                             ;       upper_lower:
(1) 1177/    D0C0 :                             ;               JMP (JUMP_TABLE2,X)
(1) 1177/    D0C0 :                             ;upper:
(1) 1177/    D0C0 :                             ;       ASL
(1) 1177/    D0C0 :                             ;       TAX
(1) 1177/    D0C0 :                             ;       BCS upper_upper
(1) 1177/    D0C0 :                             ;       lower_upper:
(1) 1177/    D0C0 :                             ;               JMP (JUMP_TABLE3,X)
(1) 1177/    D0C0 :                             ;       upper_upper:
(1) 1177/    D0C0 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1177/    D0C0 :                             ;After jump:
(1) 1177/    D0C0 :                             ;TYA                                                    ;2
(1) 1177/    D0C0 :                             ;TAX                                                    ;2
(1) 1177/    D0C0 :                             
(1) 1177/    D0C0 :                             ;Method 4 - 28 cycles
(1) 1177/    D0C0 :                             ;LDA (emu_PC,X)                 ;6
(1) 1177/    D0C0 :                             ;TAY                                    ;2
(1) 1177/    D0C0 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1177/    D0C0 :                             ;PHA                                    ;3
(1) 1177/    D0C0 :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1177/    D0C0 :                             ;PHA                                    ;3
(1) 1177/    D0C0 :                             ;RTS                                    ;6
(1) 1177/    D0C0 :                             
(1) 1177/    D0C0 :                             ;Method 5 - 30 cycles
(1) 1177/    D0C0 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1177/    D0C2 : A8                          TAY                                             ;2
(1) 1177/    D0C3 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1177/    D0C6 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1177/    D0C8 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1177/    D0CB : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1177/    D0CD : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1177/    D0D0 :                                                     
(1) 1178/    D0D0 :                     
(1) 1179/    D0D0 :                     	;0xEB - NOP
(1) 1180/    D0D0 :                     	NOP_0xEB:
(1) 1181/    D0D0 : (MACRO)             		OP_MACRO 235, "NOP", "IMP", "NOP_0xEB"
(1) 1181/    D0D0 :                             ;TODO
(1) 1182/    D0D0 : (MACRO)             		NEXT_MACRO
(1) 1182/    D0D0 :                                             
(1) 1182/    D0D0 :  (MACRO-2)                  halt
(1) 1182/    D0D0 : 00                          BRK
(1) 1182/    D0D1 : 00                          BRK
(1) 1182/    D0D2 :                             
(1) 1182/    D0D2 :                             ;Method 1 - 60 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 348 - 1/5/2022 12:19:0


(1) 1182/    D0D2 :                             ;Jump table must be page aligned!!!
(1) 1182/    D0D2 :                             ;LDA (emu_PC,X)                 ;6
(1) 1182/    D0D2 :                             ;ASL                                    ;2
(1) 1182/    D0D2 :                             ;STA emu_ptr,X                  ;4
(1) 1182/    D0D2 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1182/    D0D2 :                             ;ADC #0                                 ;2
(1) 1182/    D0D2 :                             ;STA emu_ptr+1,X                ;4
(1) 1182/    D0D2 :                             ;LDA (emu_ptr,X)                ;6
(1) 1182/    D0D2 :                             ;STA emu_ptr2,X                 ;4
(1) 1182/    D0D2 :                             ;INC emu_ptr,X                  ;6
(1) 1182/    D0D2 :                             ;BCC .skip                              ;2
(1) 1182/    D0D2 :                             ;       INC emu_ptr+1,X         ;6
(1) 1182/    D0D2 :                             ;.skip:
(1) 1182/    D0D2 :                             ;LDA (emu_ptr,X)                ;6
(1) 1182/    D0D2 :                             ;STA emu_ptr2+1,X               ;4
(1) 1182/    D0D2 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1182/    D0D2 :                             
(1) 1182/    D0D2 :                             ;Method 2 - 46 cycles
(1) 1182/    D0D2 :                             ;Jump table must be page aligned!!!
(1) 1182/    D0D2 :                             ;LDA (emu_PC,X)                 ;6
(1) 1182/    D0D2 :                             ;STZ emu_ptr+1,X                ;4
(1) 1182/    D0D2 :                             ;ASL                                    ;2
(1) 1182/    D0D2 :                             ;ROL emu_ptr+1,X                ;6
(1) 1182/    D0D2 :                             ;ASL                                    ;2
(1) 1182/    D0D2 :                             ;ROL emu_ptr+1,X                ;6
(1) 1182/    D0D2 :                             ;STA emu_ptr,X                  ;4                              
(1) 1182/    D0D2 :                             ;LDA emu_ptr+1,X                ;4
(1) 1182/    D0D2 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1182/    D0D2 :                             ;STA emu_ptr+1,X                ;4
(1) 1182/    D0D2 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1182/    D0D2 :                             
(1) 1182/    D0D2 :                             ;Method 3 - 30 cycles
(1) 1182/    D0D2 :                             ;TXA                                                    ;2
(1) 1182/    D0D2 :                             ;TAY                                                    ;2
(1) 1182/    D0D2 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1182/    D0D2 :                             ;ASL                                                    ;2
(1) 1182/    D0D2 :                             ;BCS upper                                              ;2
(1) 1182/    D0D2 :                             ;lower:
(1) 1182/    D0D2 :                             ;       ASL                                                     ;2
(1) 1182/    D0D2 :                             ;       TAX                                                     ;2
(1) 1182/    D0D2 :                             ;       BCS upper_lower                         ;2
(1) 1182/    D0D2 :                             ;       lower_lower:
(1) 1182/    D0D2 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1182/    D0D2 :                             ;       upper_lower:
(1) 1182/    D0D2 :                             ;               JMP (JUMP_TABLE2,X)
(1) 1182/    D0D2 :                             ;upper:
(1) 1182/    D0D2 :                             ;       ASL
(1) 1182/    D0D2 :                             ;       TAX
(1) 1182/    D0D2 :                             ;       BCS upper_upper
(1) 1182/    D0D2 :                             ;       lower_upper:
(1) 1182/    D0D2 :                             ;               JMP (JUMP_TABLE3,X)
(1) 1182/    D0D2 :                             ;       upper_upper:
(1) 1182/    D0D2 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1182/    D0D2 :                             ;After jump:
(1) 1182/    D0D2 :                             ;TYA                                                    ;2
(1) 1182/    D0D2 :                             ;TAX                                                    ;2
(1) 1182/    D0D2 :                             
(1) 1182/    D0D2 :                             ;Method 4 - 28 cycles
(1) 1182/    D0D2 :                             ;LDA (emu_PC,X)                 ;6
(1) 1182/    D0D2 :                             ;TAY                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 349 - 1/5/2022 12:19:0


(1) 1182/    D0D2 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1182/    D0D2 :                             ;PHA                                    ;3
(1) 1182/    D0D2 :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1182/    D0D2 :                             ;PHA                                    ;3
(1) 1182/    D0D2 :                             ;RTS                                    ;6
(1) 1182/    D0D2 :                             
(1) 1182/    D0D2 :                             ;Method 5 - 30 cycles
(1) 1182/    D0D2 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1182/    D0D4 : A8                          TAY                                             ;2
(1) 1182/    D0D5 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1182/    D0D8 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1182/    D0DA : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1182/    D0DD : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1182/    D0DF : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1182/    D0E2 :                                                     
(1) 1183/    D0E2 :                     
(1) 1184/    D0E2 :                     	;0xEC - CPX ABS
(1) 1185/    D0E2 :                     	CPX_ABS:
(1) 1186/    D0E2 : (MACRO)             		OP_MACRO 236, "CPX", "ABS", "CPX_ABS"
(1) 1186/    D0E2 :                             ;TODO
(1) 1187/    D0E2 : (MACRO)             		NEXT_MACRO
(1) 1187/    D0E2 :                                             
(1) 1187/    D0E2 :  (MACRO-2)                  halt
(1) 1187/    D0E2 : 00                          BRK
(1) 1187/    D0E3 : 00                          BRK
(1) 1187/    D0E4 :                             
(1) 1187/    D0E4 :                             ;Method 1 - 60 cycles
(1) 1187/    D0E4 :                             ;Jump table must be page aligned!!!
(1) 1187/    D0E4 :                             ;LDA (emu_PC,X)                 ;6
(1) 1187/    D0E4 :                             ;ASL                                    ;2
(1) 1187/    D0E4 :                             ;STA emu_ptr,X                  ;4
(1) 1187/    D0E4 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1187/    D0E4 :                             ;ADC #0                                 ;2
(1) 1187/    D0E4 :                             ;STA emu_ptr+1,X                ;4
(1) 1187/    D0E4 :                             ;LDA (emu_ptr,X)                ;6
(1) 1187/    D0E4 :                             ;STA emu_ptr2,X                 ;4
(1) 1187/    D0E4 :                             ;INC emu_ptr,X                  ;6
(1) 1187/    D0E4 :                             ;BCC .skip                              ;2
(1) 1187/    D0E4 :                             ;       INC emu_ptr+1,X         ;6
(1) 1187/    D0E4 :                             ;.skip:
(1) 1187/    D0E4 :                             ;LDA (emu_ptr,X)                ;6
(1) 1187/    D0E4 :                             ;STA emu_ptr2+1,X               ;4
(1) 1187/    D0E4 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1187/    D0E4 :                             
(1) 1187/    D0E4 :                             ;Method 2 - 46 cycles
(1) 1187/    D0E4 :                             ;Jump table must be page aligned!!!
(1) 1187/    D0E4 :                             ;LDA (emu_PC,X)                 ;6
(1) 1187/    D0E4 :                             ;STZ emu_ptr+1,X                ;4
(1) 1187/    D0E4 :                             ;ASL                                    ;2
(1) 1187/    D0E4 :                             ;ROL emu_ptr+1,X                ;6
(1) 1187/    D0E4 :                             ;ASL                                    ;2
(1) 1187/    D0E4 :                             ;ROL emu_ptr+1,X                ;6
(1) 1187/    D0E4 :                             ;STA emu_ptr,X                  ;4                              
(1) 1187/    D0E4 :                             ;LDA emu_ptr+1,X                ;4
(1) 1187/    D0E4 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1187/    D0E4 :                             ;STA emu_ptr+1,X                ;4
(1) 1187/    D0E4 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1187/    D0E4 :                             
(1) 1187/    D0E4 :                             ;Method 3 - 30 cycles
(1) 1187/    D0E4 :                             ;TXA                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 350 - 1/5/2022 12:19:0


(1) 1187/    D0E4 :                             ;TAY                                                    ;2
(1) 1187/    D0E4 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1187/    D0E4 :                             ;ASL                                                    ;2
(1) 1187/    D0E4 :                             ;BCS upper                                              ;2
(1) 1187/    D0E4 :                             ;lower:
(1) 1187/    D0E4 :                             ;       ASL                                                     ;2
(1) 1187/    D0E4 :                             ;       TAX                                                     ;2
(1) 1187/    D0E4 :                             ;       BCS upper_lower                         ;2
(1) 1187/    D0E4 :                             ;       lower_lower:
(1) 1187/    D0E4 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1187/    D0E4 :                             ;       upper_lower:
(1) 1187/    D0E4 :                             ;               JMP (JUMP_TABLE2,X)
(1) 1187/    D0E4 :                             ;upper:
(1) 1187/    D0E4 :                             ;       ASL
(1) 1187/    D0E4 :                             ;       TAX
(1) 1187/    D0E4 :                             ;       BCS upper_upper
(1) 1187/    D0E4 :                             ;       lower_upper:
(1) 1187/    D0E4 :                             ;               JMP (JUMP_TABLE3,X)
(1) 1187/    D0E4 :                             ;       upper_upper:
(1) 1187/    D0E4 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1187/    D0E4 :                             ;After jump:
(1) 1187/    D0E4 :                             ;TYA                                                    ;2
(1) 1187/    D0E4 :                             ;TAX                                                    ;2
(1) 1187/    D0E4 :                             
(1) 1187/    D0E4 :                             ;Method 4 - 28 cycles
(1) 1187/    D0E4 :                             ;LDA (emu_PC,X)                 ;6
(1) 1187/    D0E4 :                             ;TAY                                    ;2
(1) 1187/    D0E4 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1187/    D0E4 :                             ;PHA                                    ;3
(1) 1187/    D0E4 :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1187/    D0E4 :                             ;PHA                                    ;3
(1) 1187/    D0E4 :                             ;RTS                                    ;6
(1) 1187/    D0E4 :                             
(1) 1187/    D0E4 :                             ;Method 5 - 30 cycles
(1) 1187/    D0E4 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1187/    D0E6 : A8                          TAY                                             ;2
(1) 1187/    D0E7 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1187/    D0EA : 95 0A                       STA emu_ptr,X                   ;4
(1) 1187/    D0EC : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1187/    D0EF : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1187/    D0F1 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1187/    D0F4 :                                                     
(1) 1188/    D0F4 :                     
(1) 1189/    D0F4 :                     	;0xED - SBC ABS
(1) 1190/    D0F4 :                     	SBC_ABS:
(1) 1191/    D0F4 : (MACRO)             		OP_MACRO 237, "SBC", "ABS", "SBC_ABS"
(1) 1191/    D0F4 :                             ;TODO
(1) 1192/    D0F4 : (MACRO)             		NEXT_MACRO
(1) 1192/    D0F4 :                                             
(1) 1192/    D0F4 :  (MACRO-2)                  halt
(1) 1192/    D0F4 : 00                          BRK
(1) 1192/    D0F5 : 00                          BRK
(1) 1192/    D0F6 :                             
(1) 1192/    D0F6 :                             ;Method 1 - 60 cycles
(1) 1192/    D0F6 :                             ;Jump table must be page aligned!!!
(1) 1192/    D0F6 :                             ;LDA (emu_PC,X)                 ;6
(1) 1192/    D0F6 :                             ;ASL                                    ;2
(1) 1192/    D0F6 :                             ;STA emu_ptr,X                  ;4
(1) 1192/    D0F6 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1192/    D0F6 :                             ;ADC #0                                 ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 351 - 1/5/2022 12:19:0


(1) 1192/    D0F6 :                             ;STA emu_ptr+1,X                ;4
(1) 1192/    D0F6 :                             ;LDA (emu_ptr,X)                ;6
(1) 1192/    D0F6 :                             ;STA emu_ptr2,X                 ;4
(1) 1192/    D0F6 :                             ;INC emu_ptr,X                  ;6
(1) 1192/    D0F6 :                             ;BCC .skip                              ;2
(1) 1192/    D0F6 :                             ;       INC emu_ptr+1,X         ;6
(1) 1192/    D0F6 :                             ;.skip:
(1) 1192/    D0F6 :                             ;LDA (emu_ptr,X)                ;6
(1) 1192/    D0F6 :                             ;STA emu_ptr2+1,X               ;4
(1) 1192/    D0F6 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1192/    D0F6 :                             
(1) 1192/    D0F6 :                             ;Method 2 - 46 cycles
(1) 1192/    D0F6 :                             ;Jump table must be page aligned!!!
(1) 1192/    D0F6 :                             ;LDA (emu_PC,X)                 ;6
(1) 1192/    D0F6 :                             ;STZ emu_ptr+1,X                ;4
(1) 1192/    D0F6 :                             ;ASL                                    ;2
(1) 1192/    D0F6 :                             ;ROL emu_ptr+1,X                ;6
(1) 1192/    D0F6 :                             ;ASL                                    ;2
(1) 1192/    D0F6 :                             ;ROL emu_ptr+1,X                ;6
(1) 1192/    D0F6 :                             ;STA emu_ptr,X                  ;4                              
(1) 1192/    D0F6 :                             ;LDA emu_ptr+1,X                ;4
(1) 1192/    D0F6 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1192/    D0F6 :                             ;STA emu_ptr+1,X                ;4
(1) 1192/    D0F6 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1192/    D0F6 :                             
(1) 1192/    D0F6 :                             ;Method 3 - 30 cycles
(1) 1192/    D0F6 :                             ;TXA                                                    ;2
(1) 1192/    D0F6 :                             ;TAY                                                    ;2
(1) 1192/    D0F6 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1192/    D0F6 :                             ;ASL                                                    ;2
(1) 1192/    D0F6 :                             ;BCS upper                                              ;2
(1) 1192/    D0F6 :                             ;lower:
(1) 1192/    D0F6 :                             ;       ASL                                                     ;2
(1) 1192/    D0F6 :                             ;       TAX                                                     ;2
(1) 1192/    D0F6 :                             ;       BCS upper_lower                         ;2
(1) 1192/    D0F6 :                             ;       lower_lower:
(1) 1192/    D0F6 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1192/    D0F6 :                             ;       upper_lower:
(1) 1192/    D0F6 :                             ;               JMP (JUMP_TABLE2,X)
(1) 1192/    D0F6 :                             ;upper:
(1) 1192/    D0F6 :                             ;       ASL
(1) 1192/    D0F6 :                             ;       TAX
(1) 1192/    D0F6 :                             ;       BCS upper_upper
(1) 1192/    D0F6 :                             ;       lower_upper:
(1) 1192/    D0F6 :                             ;               JMP (JUMP_TABLE3,X)
(1) 1192/    D0F6 :                             ;       upper_upper:
(1) 1192/    D0F6 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1192/    D0F6 :                             ;After jump:
(1) 1192/    D0F6 :                             ;TYA                                                    ;2
(1) 1192/    D0F6 :                             ;TAX                                                    ;2
(1) 1192/    D0F6 :                             
(1) 1192/    D0F6 :                             ;Method 4 - 28 cycles
(1) 1192/    D0F6 :                             ;LDA (emu_PC,X)                 ;6
(1) 1192/    D0F6 :                             ;TAY                                    ;2
(1) 1192/    D0F6 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1192/    D0F6 :                             ;PHA                                    ;3
(1) 1192/    D0F6 :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1192/    D0F6 :                             ;PHA                                    ;3
(1) 1192/    D0F6 :                             ;RTS                                    ;6
(1) 1192/    D0F6 :                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 352 - 1/5/2022 12:19:0


(1) 1192/    D0F6 :                             ;Method 5 - 30 cycles
(1) 1192/    D0F6 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1192/    D0F8 : A8                          TAY                                             ;2
(1) 1192/    D0F9 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1192/    D0FC : 95 0A                       STA emu_ptr,X                   ;4
(1) 1192/    D0FE : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1192/    D101 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1192/    D103 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1192/    D106 :                                                     
(1) 1193/    D106 :                     
(1) 1194/    D106 :                     	;0xEE - INC ABS
(1) 1195/    D106 :                     	INC_ABS:
(1) 1196/    D106 : (MACRO)             		OP_MACRO 238, "INC", "ABS", "INC_ABS"
(1) 1196/    D106 :                             ;TODO
(1) 1197/    D106 : (MACRO)             		NEXT_MACRO
(1) 1197/    D106 :                                             
(1) 1197/    D106 :  (MACRO-2)                  halt
(1) 1197/    D106 : 00                          BRK
(1) 1197/    D107 : 00                          BRK
(1) 1197/    D108 :                             
(1) 1197/    D108 :                             ;Method 1 - 60 cycles
(1) 1197/    D108 :                             ;Jump table must be page aligned!!!
(1) 1197/    D108 :                             ;LDA (emu_PC,X)                 ;6
(1) 1197/    D108 :                             ;ASL                                    ;2
(1) 1197/    D108 :                             ;STA emu_ptr,X                  ;4
(1) 1197/    D108 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1197/    D108 :                             ;ADC #0                                 ;2
(1) 1197/    D108 :                             ;STA emu_ptr+1,X                ;4
(1) 1197/    D108 :                             ;LDA (emu_ptr,X)                ;6
(1) 1197/    D108 :                             ;STA emu_ptr2,X                 ;4
(1) 1197/    D108 :                             ;INC emu_ptr,X                  ;6
(1) 1197/    D108 :                             ;BCC .skip                              ;2
(1) 1197/    D108 :                             ;       INC emu_ptr+1,X         ;6
(1) 1197/    D108 :                             ;.skip:
(1) 1197/    D108 :                             ;LDA (emu_ptr,X)                ;6
(1) 1197/    D108 :                             ;STA emu_ptr2+1,X               ;4
(1) 1197/    D108 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1197/    D108 :                             
(1) 1197/    D108 :                             ;Method 2 - 46 cycles
(1) 1197/    D108 :                             ;Jump table must be page aligned!!!
(1) 1197/    D108 :                             ;LDA (emu_PC,X)                 ;6
(1) 1197/    D108 :                             ;STZ emu_ptr+1,X                ;4
(1) 1197/    D108 :                             ;ASL                                    ;2
(1) 1197/    D108 :                             ;ROL emu_ptr+1,X                ;6
(1) 1197/    D108 :                             ;ASL                                    ;2
(1) 1197/    D108 :                             ;ROL emu_ptr+1,X                ;6
(1) 1197/    D108 :                             ;STA emu_ptr,X                  ;4                              
(1) 1197/    D108 :                             ;LDA emu_ptr+1,X                ;4
(1) 1197/    D108 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1197/    D108 :                             ;STA emu_ptr+1,X                ;4
(1) 1197/    D108 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1197/    D108 :                             
(1) 1197/    D108 :                             ;Method 3 - 30 cycles
(1) 1197/    D108 :                             ;TXA                                                    ;2
(1) 1197/    D108 :                             ;TAY                                                    ;2
(1) 1197/    D108 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1197/    D108 :                             ;ASL                                                    ;2
(1) 1197/    D108 :                             ;BCS upper                                              ;2
(1) 1197/    D108 :                             ;lower:
(1) 1197/    D108 :                             ;       ASL                                                     ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 353 - 1/5/2022 12:19:0


(1) 1197/    D108 :                             ;       TAX                                                     ;2
(1) 1197/    D108 :                             ;       BCS upper_lower                         ;2
(1) 1197/    D108 :                             ;       lower_lower:
(1) 1197/    D108 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1197/    D108 :                             ;       upper_lower:
(1) 1197/    D108 :                             ;               JMP (JUMP_TABLE2,X)
(1) 1197/    D108 :                             ;upper:
(1) 1197/    D108 :                             ;       ASL
(1) 1197/    D108 :                             ;       TAX
(1) 1197/    D108 :                             ;       BCS upper_upper
(1) 1197/    D108 :                             ;       lower_upper:
(1) 1197/    D108 :                             ;               JMP (JUMP_TABLE3,X)
(1) 1197/    D108 :                             ;       upper_upper:
(1) 1197/    D108 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1197/    D108 :                             ;After jump:
(1) 1197/    D108 :                             ;TYA                                                    ;2
(1) 1197/    D108 :                             ;TAX                                                    ;2
(1) 1197/    D108 :                             
(1) 1197/    D108 :                             ;Method 4 - 28 cycles
(1) 1197/    D108 :                             ;LDA (emu_PC,X)                 ;6
(1) 1197/    D108 :                             ;TAY                                    ;2
(1) 1197/    D108 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1197/    D108 :                             ;PHA                                    ;3
(1) 1197/    D108 :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1197/    D108 :                             ;PHA                                    ;3
(1) 1197/    D108 :                             ;RTS                                    ;6
(1) 1197/    D108 :                             
(1) 1197/    D108 :                             ;Method 5 - 30 cycles
(1) 1197/    D108 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1197/    D10A : A8                          TAY                                             ;2
(1) 1197/    D10B : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1197/    D10E : 95 0A                       STA emu_ptr,X                   ;4
(1) 1197/    D110 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1197/    D113 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1197/    D115 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1197/    D118 :                                                     
(1) 1198/    D118 :                     
(1) 1199/    D118 :                     	;0xEF - NOP
(1) 1200/    D118 :                     	NOP_0xEF:
(1) 1201/    D118 : (MACRO)             		OP_MACRO 239, "NOP", "IMP", "NOP_0xEF"
(1) 1201/    D118 :                             ;TODO
(1) 1202/    D118 : (MACRO)             		NEXT_MACRO
(1) 1202/    D118 :                                             
(1) 1202/    D118 :  (MACRO-2)                  halt
(1) 1202/    D118 : 00                          BRK
(1) 1202/    D119 : 00                          BRK
(1) 1202/    D11A :                             
(1) 1202/    D11A :                             ;Method 1 - 60 cycles
(1) 1202/    D11A :                             ;Jump table must be page aligned!!!
(1) 1202/    D11A :                             ;LDA (emu_PC,X)                 ;6
(1) 1202/    D11A :                             ;ASL                                    ;2
(1) 1202/    D11A :                             ;STA emu_ptr,X                  ;4
(1) 1202/    D11A :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1202/    D11A :                             ;ADC #0                                 ;2
(1) 1202/    D11A :                             ;STA emu_ptr+1,X                ;4
(1) 1202/    D11A :                             ;LDA (emu_ptr,X)                ;6
(1) 1202/    D11A :                             ;STA emu_ptr2,X                 ;4
(1) 1202/    D11A :                             ;INC emu_ptr,X                  ;6
(1) 1202/    D11A :                             ;BCC .skip                              ;2
(1) 1202/    D11A :                             ;       INC emu_ptr+1,X         ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 354 - 1/5/2022 12:19:0


(1) 1202/    D11A :                             ;.skip:
(1) 1202/    D11A :                             ;LDA (emu_ptr,X)                ;6
(1) 1202/    D11A :                             ;STA emu_ptr2+1,X               ;4
(1) 1202/    D11A :                             ;JMP (emu_ptr2,X)               ;6
(1) 1202/    D11A :                             
(1) 1202/    D11A :                             ;Method 2 - 46 cycles
(1) 1202/    D11A :                             ;Jump table must be page aligned!!!
(1) 1202/    D11A :                             ;LDA (emu_PC,X)                 ;6
(1) 1202/    D11A :                             ;STZ emu_ptr+1,X                ;4
(1) 1202/    D11A :                             ;ASL                                    ;2
(1) 1202/    D11A :                             ;ROL emu_ptr+1,X                ;6
(1) 1202/    D11A :                             ;ASL                                    ;2
(1) 1202/    D11A :                             ;ROL emu_ptr+1,X                ;6
(1) 1202/    D11A :                             ;STA emu_ptr,X                  ;4                              
(1) 1202/    D11A :                             ;LDA emu_ptr+1,X                ;4
(1) 1202/    D11A :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1202/    D11A :                             ;STA emu_ptr+1,X                ;4
(1) 1202/    D11A :                             ;JMP (emu_ptr2,X)               ;6
(1) 1202/    D11A :                             
(1) 1202/    D11A :                             ;Method 3 - 30 cycles
(1) 1202/    D11A :                             ;TXA                                                    ;2
(1) 1202/    D11A :                             ;TAY                                                    ;2
(1) 1202/    D11A :                             ;LDA (emu_PC,X)                                 ;6
(1) 1202/    D11A :                             ;ASL                                                    ;2
(1) 1202/    D11A :                             ;BCS upper                                              ;2
(1) 1202/    D11A :                             ;lower:
(1) 1202/    D11A :                             ;       ASL                                                     ;2
(1) 1202/    D11A :                             ;       TAX                                                     ;2
(1) 1202/    D11A :                             ;       BCS upper_lower                         ;2
(1) 1202/    D11A :                             ;       lower_lower:
(1) 1202/    D11A :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1202/    D11A :                             ;       upper_lower:
(1) 1202/    D11A :                             ;               JMP (JUMP_TABLE2,X)
(1) 1202/    D11A :                             ;upper:
(1) 1202/    D11A :                             ;       ASL
(1) 1202/    D11A :                             ;       TAX
(1) 1202/    D11A :                             ;       BCS upper_upper
(1) 1202/    D11A :                             ;       lower_upper:
(1) 1202/    D11A :                             ;               JMP (JUMP_TABLE3,X)
(1) 1202/    D11A :                             ;       upper_upper:
(1) 1202/    D11A :                             ;               JMP (JUMP_TABLE4,X)
(1) 1202/    D11A :                             ;After jump:
(1) 1202/    D11A :                             ;TYA                                                    ;2
(1) 1202/    D11A :                             ;TAX                                                    ;2
(1) 1202/    D11A :                             
(1) 1202/    D11A :                             ;Method 4 - 28 cycles
(1) 1202/    D11A :                             ;LDA (emu_PC,X)                 ;6
(1) 1202/    D11A :                             ;TAY                                    ;2
(1) 1202/    D11A :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1202/    D11A :                             ;PHA                                    ;3
(1) 1202/    D11A :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1202/    D11A :                             ;PHA                                    ;3
(1) 1202/    D11A :                             ;RTS                                    ;6
(1) 1202/    D11A :                             
(1) 1202/    D11A :                             ;Method 5 - 30 cycles
(1) 1202/    D11A : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1202/    D11C : A8                          TAY                                             ;2
(1) 1202/    D11D : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1202/    D120 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1202/    D122 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 355 - 1/5/2022 12:19:0


(1) 1202/    D125 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1202/    D127 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1202/    D12A :                                                     
(1) 1203/    D12A :                     
(1) 1204/    D12A :                     	;0xF0 - BEQ REL
(1) 1205/    D12A :                     	BEQ_REL:
(1) 1206/    D12A : (MACRO)             		OP_MACRO 240, "BEQ", "REL", "BEQ_REL"
(1) 1206/    D12A :                             ;TODO
(1) 1207/    D12A : (MACRO)             		NEXT_MACRO
(1) 1207/    D12A :                                             
(1) 1207/    D12A :  (MACRO-2)                  halt
(1) 1207/    D12A : 00                          BRK
(1) 1207/    D12B : 00                          BRK
(1) 1207/    D12C :                             
(1) 1207/    D12C :                             ;Method 1 - 60 cycles
(1) 1207/    D12C :                             ;Jump table must be page aligned!!!
(1) 1207/    D12C :                             ;LDA (emu_PC,X)                 ;6
(1) 1207/    D12C :                             ;ASL                                    ;2
(1) 1207/    D12C :                             ;STA emu_ptr,X                  ;4
(1) 1207/    D12C :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1207/    D12C :                             ;ADC #0                                 ;2
(1) 1207/    D12C :                             ;STA emu_ptr+1,X                ;4
(1) 1207/    D12C :                             ;LDA (emu_ptr,X)                ;6
(1) 1207/    D12C :                             ;STA emu_ptr2,X                 ;4
(1) 1207/    D12C :                             ;INC emu_ptr,X                  ;6
(1) 1207/    D12C :                             ;BCC .skip                              ;2
(1) 1207/    D12C :                             ;       INC emu_ptr+1,X         ;6
(1) 1207/    D12C :                             ;.skip:
(1) 1207/    D12C :                             ;LDA (emu_ptr,X)                ;6
(1) 1207/    D12C :                             ;STA emu_ptr2+1,X               ;4
(1) 1207/    D12C :                             ;JMP (emu_ptr2,X)               ;6
(1) 1207/    D12C :                             
(1) 1207/    D12C :                             ;Method 2 - 46 cycles
(1) 1207/    D12C :                             ;Jump table must be page aligned!!!
(1) 1207/    D12C :                             ;LDA (emu_PC,X)                 ;6
(1) 1207/    D12C :                             ;STZ emu_ptr+1,X                ;4
(1) 1207/    D12C :                             ;ASL                                    ;2
(1) 1207/    D12C :                             ;ROL emu_ptr+1,X                ;6
(1) 1207/    D12C :                             ;ASL                                    ;2
(1) 1207/    D12C :                             ;ROL emu_ptr+1,X                ;6
(1) 1207/    D12C :                             ;STA emu_ptr,X                  ;4                              
(1) 1207/    D12C :                             ;LDA emu_ptr+1,X                ;4
(1) 1207/    D12C :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1207/    D12C :                             ;STA emu_ptr+1,X                ;4
(1) 1207/    D12C :                             ;JMP (emu_ptr2,X)               ;6
(1) 1207/    D12C :                             
(1) 1207/    D12C :                             ;Method 3 - 30 cycles
(1) 1207/    D12C :                             ;TXA                                                    ;2
(1) 1207/    D12C :                             ;TAY                                                    ;2
(1) 1207/    D12C :                             ;LDA (emu_PC,X)                                 ;6
(1) 1207/    D12C :                             ;ASL                                                    ;2
(1) 1207/    D12C :                             ;BCS upper                                              ;2
(1) 1207/    D12C :                             ;lower:
(1) 1207/    D12C :                             ;       ASL                                                     ;2
(1) 1207/    D12C :                             ;       TAX                                                     ;2
(1) 1207/    D12C :                             ;       BCS upper_lower                         ;2
(1) 1207/    D12C :                             ;       lower_lower:
(1) 1207/    D12C :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1207/    D12C :                             ;       upper_lower:
(1) 1207/    D12C :                             ;               JMP (JUMP_TABLE2,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 356 - 1/5/2022 12:19:0


(1) 1207/    D12C :                             ;upper:
(1) 1207/    D12C :                             ;       ASL
(1) 1207/    D12C :                             ;       TAX
(1) 1207/    D12C :                             ;       BCS upper_upper
(1) 1207/    D12C :                             ;       lower_upper:
(1) 1207/    D12C :                             ;               JMP (JUMP_TABLE3,X)
(1) 1207/    D12C :                             ;       upper_upper:
(1) 1207/    D12C :                             ;               JMP (JUMP_TABLE4,X)
(1) 1207/    D12C :                             ;After jump:
(1) 1207/    D12C :                             ;TYA                                                    ;2
(1) 1207/    D12C :                             ;TAX                                                    ;2
(1) 1207/    D12C :                             
(1) 1207/    D12C :                             ;Method 4 - 28 cycles
(1) 1207/    D12C :                             ;LDA (emu_PC,X)                 ;6
(1) 1207/    D12C :                             ;TAY                                    ;2
(1) 1207/    D12C :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1207/    D12C :                             ;PHA                                    ;3
(1) 1207/    D12C :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1207/    D12C :                             ;PHA                                    ;3
(1) 1207/    D12C :                             ;RTS                                    ;6
(1) 1207/    D12C :                             
(1) 1207/    D12C :                             ;Method 5 - 30 cycles
(1) 1207/    D12C : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1207/    D12E : A8                          TAY                                             ;2
(1) 1207/    D12F : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1207/    D132 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1207/    D134 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1207/    D137 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1207/    D139 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1207/    D13C :                                                     
(1) 1208/    D13C :                     
(1) 1209/    D13C :                     	;0xF1 - SBC IY
(1) 1210/    D13C :                     	SBC_IY:
(1) 1211/    D13C : (MACRO)             		OP_MACRO 241, "SBC", "IY", "SBC_IY"
(1) 1211/    D13C :                             ;TODO
(1) 1212/    D13C : (MACRO)             		NEXT_MACRO
(1) 1212/    D13C :                                             
(1) 1212/    D13C :  (MACRO-2)                  halt
(1) 1212/    D13C : 00                          BRK
(1) 1212/    D13D : 00                          BRK
(1) 1212/    D13E :                             
(1) 1212/    D13E :                             ;Method 1 - 60 cycles
(1) 1212/    D13E :                             ;Jump table must be page aligned!!!
(1) 1212/    D13E :                             ;LDA (emu_PC,X)                 ;6
(1) 1212/    D13E :                             ;ASL                                    ;2
(1) 1212/    D13E :                             ;STA emu_ptr,X                  ;4
(1) 1212/    D13E :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1212/    D13E :                             ;ADC #0                                 ;2
(1) 1212/    D13E :                             ;STA emu_ptr+1,X                ;4
(1) 1212/    D13E :                             ;LDA (emu_ptr,X)                ;6
(1) 1212/    D13E :                             ;STA emu_ptr2,X                 ;4
(1) 1212/    D13E :                             ;INC emu_ptr,X                  ;6
(1) 1212/    D13E :                             ;BCC .skip                              ;2
(1) 1212/    D13E :                             ;       INC emu_ptr+1,X         ;6
(1) 1212/    D13E :                             ;.skip:
(1) 1212/    D13E :                             ;LDA (emu_ptr,X)                ;6
(1) 1212/    D13E :                             ;STA emu_ptr2+1,X               ;4
(1) 1212/    D13E :                             ;JMP (emu_ptr2,X)               ;6
(1) 1212/    D13E :                             
(1) 1212/    D13E :                             ;Method 2 - 46 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 357 - 1/5/2022 12:19:0


(1) 1212/    D13E :                             ;Jump table must be page aligned!!!
(1) 1212/    D13E :                             ;LDA (emu_PC,X)                 ;6
(1) 1212/    D13E :                             ;STZ emu_ptr+1,X                ;4
(1) 1212/    D13E :                             ;ASL                                    ;2
(1) 1212/    D13E :                             ;ROL emu_ptr+1,X                ;6
(1) 1212/    D13E :                             ;ASL                                    ;2
(1) 1212/    D13E :                             ;ROL emu_ptr+1,X                ;6
(1) 1212/    D13E :                             ;STA emu_ptr,X                  ;4                              
(1) 1212/    D13E :                             ;LDA emu_ptr+1,X                ;4
(1) 1212/    D13E :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1212/    D13E :                             ;STA emu_ptr+1,X                ;4
(1) 1212/    D13E :                             ;JMP (emu_ptr2,X)               ;6
(1) 1212/    D13E :                             
(1) 1212/    D13E :                             ;Method 3 - 30 cycles
(1) 1212/    D13E :                             ;TXA                                                    ;2
(1) 1212/    D13E :                             ;TAY                                                    ;2
(1) 1212/    D13E :                             ;LDA (emu_PC,X)                                 ;6
(1) 1212/    D13E :                             ;ASL                                                    ;2
(1) 1212/    D13E :                             ;BCS upper                                              ;2
(1) 1212/    D13E :                             ;lower:
(1) 1212/    D13E :                             ;       ASL                                                     ;2
(1) 1212/    D13E :                             ;       TAX                                                     ;2
(1) 1212/    D13E :                             ;       BCS upper_lower                         ;2
(1) 1212/    D13E :                             ;       lower_lower:
(1) 1212/    D13E :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1212/    D13E :                             ;       upper_lower:
(1) 1212/    D13E :                             ;               JMP (JUMP_TABLE2,X)
(1) 1212/    D13E :                             ;upper:
(1) 1212/    D13E :                             ;       ASL
(1) 1212/    D13E :                             ;       TAX
(1) 1212/    D13E :                             ;       BCS upper_upper
(1) 1212/    D13E :                             ;       lower_upper:
(1) 1212/    D13E :                             ;               JMP (JUMP_TABLE3,X)
(1) 1212/    D13E :                             ;       upper_upper:
(1) 1212/    D13E :                             ;               JMP (JUMP_TABLE4,X)
(1) 1212/    D13E :                             ;After jump:
(1) 1212/    D13E :                             ;TYA                                                    ;2
(1) 1212/    D13E :                             ;TAX                                                    ;2
(1) 1212/    D13E :                             
(1) 1212/    D13E :                             ;Method 4 - 28 cycles
(1) 1212/    D13E :                             ;LDA (emu_PC,X)                 ;6
(1) 1212/    D13E :                             ;TAY                                    ;2
(1) 1212/    D13E :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1212/    D13E :                             ;PHA                                    ;3
(1) 1212/    D13E :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1212/    D13E :                             ;PHA                                    ;3
(1) 1212/    D13E :                             ;RTS                                    ;6
(1) 1212/    D13E :                             
(1) 1212/    D13E :                             ;Method 5 - 30 cycles
(1) 1212/    D13E : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1212/    D140 : A8                          TAY                                             ;2
(1) 1212/    D141 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1212/    D144 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1212/    D146 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1212/    D149 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1212/    D14B : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1212/    D14E :                                                     
(1) 1213/    D14E :                     
(1) 1214/    D14E :                     	;0xF2 - NOP
(1) 1215/    D14E :                     	NOP_0xF2:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 358 - 1/5/2022 12:19:0


(1) 1216/    D14E : (MACRO)             		OP_MACRO 242, "NOP", "IMP", "NOP_0xF2"
(1) 1216/    D14E :                             ;TODO
(1) 1217/    D14E : (MACRO)             		NEXT_MACRO
(1) 1217/    D14E :                                             
(1) 1217/    D14E :  (MACRO-2)                  halt
(1) 1217/    D14E : 00                          BRK
(1) 1217/    D14F : 00                          BRK
(1) 1217/    D150 :                             
(1) 1217/    D150 :                             ;Method 1 - 60 cycles
(1) 1217/    D150 :                             ;Jump table must be page aligned!!!
(1) 1217/    D150 :                             ;LDA (emu_PC,X)                 ;6
(1) 1217/    D150 :                             ;ASL                                    ;2
(1) 1217/    D150 :                             ;STA emu_ptr,X                  ;4
(1) 1217/    D150 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1217/    D150 :                             ;ADC #0                                 ;2
(1) 1217/    D150 :                             ;STA emu_ptr+1,X                ;4
(1) 1217/    D150 :                             ;LDA (emu_ptr,X)                ;6
(1) 1217/    D150 :                             ;STA emu_ptr2,X                 ;4
(1) 1217/    D150 :                             ;INC emu_ptr,X                  ;6
(1) 1217/    D150 :                             ;BCC .skip                              ;2
(1) 1217/    D150 :                             ;       INC emu_ptr+1,X         ;6
(1) 1217/    D150 :                             ;.skip:
(1) 1217/    D150 :                             ;LDA (emu_ptr,X)                ;6
(1) 1217/    D150 :                             ;STA emu_ptr2+1,X               ;4
(1) 1217/    D150 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1217/    D150 :                             
(1) 1217/    D150 :                             ;Method 2 - 46 cycles
(1) 1217/    D150 :                             ;Jump table must be page aligned!!!
(1) 1217/    D150 :                             ;LDA (emu_PC,X)                 ;6
(1) 1217/    D150 :                             ;STZ emu_ptr+1,X                ;4
(1) 1217/    D150 :                             ;ASL                                    ;2
(1) 1217/    D150 :                             ;ROL emu_ptr+1,X                ;6
(1) 1217/    D150 :                             ;ASL                                    ;2
(1) 1217/    D150 :                             ;ROL emu_ptr+1,X                ;6
(1) 1217/    D150 :                             ;STA emu_ptr,X                  ;4                              
(1) 1217/    D150 :                             ;LDA emu_ptr+1,X                ;4
(1) 1217/    D150 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1217/    D150 :                             ;STA emu_ptr+1,X                ;4
(1) 1217/    D150 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1217/    D150 :                             
(1) 1217/    D150 :                             ;Method 3 - 30 cycles
(1) 1217/    D150 :                             ;TXA                                                    ;2
(1) 1217/    D150 :                             ;TAY                                                    ;2
(1) 1217/    D150 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1217/    D150 :                             ;ASL                                                    ;2
(1) 1217/    D150 :                             ;BCS upper                                              ;2
(1) 1217/    D150 :                             ;lower:
(1) 1217/    D150 :                             ;       ASL                                                     ;2
(1) 1217/    D150 :                             ;       TAX                                                     ;2
(1) 1217/    D150 :                             ;       BCS upper_lower                         ;2
(1) 1217/    D150 :                             ;       lower_lower:
(1) 1217/    D150 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1217/    D150 :                             ;       upper_lower:
(1) 1217/    D150 :                             ;               JMP (JUMP_TABLE2,X)
(1) 1217/    D150 :                             ;upper:
(1) 1217/    D150 :                             ;       ASL
(1) 1217/    D150 :                             ;       TAX
(1) 1217/    D150 :                             ;       BCS upper_upper
(1) 1217/    D150 :                             ;       lower_upper:
(1) 1217/    D150 :                             ;               JMP (JUMP_TABLE3,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 359 - 1/5/2022 12:19:0


(1) 1217/    D150 :                             ;       upper_upper:
(1) 1217/    D150 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1217/    D150 :                             ;After jump:
(1) 1217/    D150 :                             ;TYA                                                    ;2
(1) 1217/    D150 :                             ;TAX                                                    ;2
(1) 1217/    D150 :                             
(1) 1217/    D150 :                             ;Method 4 - 28 cycles
(1) 1217/    D150 :                             ;LDA (emu_PC,X)                 ;6
(1) 1217/    D150 :                             ;TAY                                    ;2
(1) 1217/    D150 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1217/    D150 :                             ;PHA                                    ;3
(1) 1217/    D150 :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1217/    D150 :                             ;PHA                                    ;3
(1) 1217/    D150 :                             ;RTS                                    ;6
(1) 1217/    D150 :                             
(1) 1217/    D150 :                             ;Method 5 - 30 cycles
(1) 1217/    D150 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1217/    D152 : A8                          TAY                                             ;2
(1) 1217/    D153 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1217/    D156 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1217/    D158 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1217/    D15B : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1217/    D15D : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1217/    D160 :                                                     
(1) 1218/    D160 :                     
(1) 1219/    D160 :                     	;0xF3 - NOP
(1) 1220/    D160 :                     	NOP_0xF3:
(1) 1221/    D160 : (MACRO)             		OP_MACRO 243, "NOP", "IMP", "NOP_0xF3"
(1) 1221/    D160 :                             ;TODO
(1) 1222/    D160 : (MACRO)             		NEXT_MACRO
(1) 1222/    D160 :                                             
(1) 1222/    D160 :  (MACRO-2)                  halt
(1) 1222/    D160 : 00                          BRK
(1) 1222/    D161 : 00                          BRK
(1) 1222/    D162 :                             
(1) 1222/    D162 :                             ;Method 1 - 60 cycles
(1) 1222/    D162 :                             ;Jump table must be page aligned!!!
(1) 1222/    D162 :                             ;LDA (emu_PC,X)                 ;6
(1) 1222/    D162 :                             ;ASL                                    ;2
(1) 1222/    D162 :                             ;STA emu_ptr,X                  ;4
(1) 1222/    D162 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1222/    D162 :                             ;ADC #0                                 ;2
(1) 1222/    D162 :                             ;STA emu_ptr+1,X                ;4
(1) 1222/    D162 :                             ;LDA (emu_ptr,X)                ;6
(1) 1222/    D162 :                             ;STA emu_ptr2,X                 ;4
(1) 1222/    D162 :                             ;INC emu_ptr,X                  ;6
(1) 1222/    D162 :                             ;BCC .skip                              ;2
(1) 1222/    D162 :                             ;       INC emu_ptr+1,X         ;6
(1) 1222/    D162 :                             ;.skip:
(1) 1222/    D162 :                             ;LDA (emu_ptr,X)                ;6
(1) 1222/    D162 :                             ;STA emu_ptr2+1,X               ;4
(1) 1222/    D162 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1222/    D162 :                             
(1) 1222/    D162 :                             ;Method 2 - 46 cycles
(1) 1222/    D162 :                             ;Jump table must be page aligned!!!
(1) 1222/    D162 :                             ;LDA (emu_PC,X)                 ;6
(1) 1222/    D162 :                             ;STZ emu_ptr+1,X                ;4
(1) 1222/    D162 :                             ;ASL                                    ;2
(1) 1222/    D162 :                             ;ROL emu_ptr+1,X                ;6
(1) 1222/    D162 :                             ;ASL                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 360 - 1/5/2022 12:19:0


(1) 1222/    D162 :                             ;ROL emu_ptr+1,X                ;6
(1) 1222/    D162 :                             ;STA emu_ptr,X                  ;4                              
(1) 1222/    D162 :                             ;LDA emu_ptr+1,X                ;4
(1) 1222/    D162 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1222/    D162 :                             ;STA emu_ptr+1,X                ;4
(1) 1222/    D162 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1222/    D162 :                             
(1) 1222/    D162 :                             ;Method 3 - 30 cycles
(1) 1222/    D162 :                             ;TXA                                                    ;2
(1) 1222/    D162 :                             ;TAY                                                    ;2
(1) 1222/    D162 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1222/    D162 :                             ;ASL                                                    ;2
(1) 1222/    D162 :                             ;BCS upper                                              ;2
(1) 1222/    D162 :                             ;lower:
(1) 1222/    D162 :                             ;       ASL                                                     ;2
(1) 1222/    D162 :                             ;       TAX                                                     ;2
(1) 1222/    D162 :                             ;       BCS upper_lower                         ;2
(1) 1222/    D162 :                             ;       lower_lower:
(1) 1222/    D162 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1222/    D162 :                             ;       upper_lower:
(1) 1222/    D162 :                             ;               JMP (JUMP_TABLE2,X)
(1) 1222/    D162 :                             ;upper:
(1) 1222/    D162 :                             ;       ASL
(1) 1222/    D162 :                             ;       TAX
(1) 1222/    D162 :                             ;       BCS upper_upper
(1) 1222/    D162 :                             ;       lower_upper:
(1) 1222/    D162 :                             ;               JMP (JUMP_TABLE3,X)
(1) 1222/    D162 :                             ;       upper_upper:
(1) 1222/    D162 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1222/    D162 :                             ;After jump:
(1) 1222/    D162 :                             ;TYA                                                    ;2
(1) 1222/    D162 :                             ;TAX                                                    ;2
(1) 1222/    D162 :                             
(1) 1222/    D162 :                             ;Method 4 - 28 cycles
(1) 1222/    D162 :                             ;LDA (emu_PC,X)                 ;6
(1) 1222/    D162 :                             ;TAY                                    ;2
(1) 1222/    D162 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1222/    D162 :                             ;PHA                                    ;3
(1) 1222/    D162 :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1222/    D162 :                             ;PHA                                    ;3
(1) 1222/    D162 :                             ;RTS                                    ;6
(1) 1222/    D162 :                             
(1) 1222/    D162 :                             ;Method 5 - 30 cycles
(1) 1222/    D162 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1222/    D164 : A8                          TAY                                             ;2
(1) 1222/    D165 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1222/    D168 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1222/    D16A : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1222/    D16D : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1222/    D16F : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1222/    D172 :                                                     
(1) 1223/    D172 :                     
(1) 1224/    D172 :                     	;0xF4 - NOP
(1) 1225/    D172 :                     	NOP_0xF4:
(1) 1226/    D172 : (MACRO)             		OP_MACRO 244, "NOP", "IMP", "NOP_0xF4"
(1) 1226/    D172 :                             ;TODO
(1) 1227/    D172 : (MACRO)             		NEXT_MACRO
(1) 1227/    D172 :                                             
(1) 1227/    D172 :  (MACRO-2)                  halt
(1) 1227/    D172 : 00                          BRK
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 361 - 1/5/2022 12:19:0


(1) 1227/    D173 : 00                          BRK
(1) 1227/    D174 :                             
(1) 1227/    D174 :                             ;Method 1 - 60 cycles
(1) 1227/    D174 :                             ;Jump table must be page aligned!!!
(1) 1227/    D174 :                             ;LDA (emu_PC,X)                 ;6
(1) 1227/    D174 :                             ;ASL                                    ;2
(1) 1227/    D174 :                             ;STA emu_ptr,X                  ;4
(1) 1227/    D174 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1227/    D174 :                             ;ADC #0                                 ;2
(1) 1227/    D174 :                             ;STA emu_ptr+1,X                ;4
(1) 1227/    D174 :                             ;LDA (emu_ptr,X)                ;6
(1) 1227/    D174 :                             ;STA emu_ptr2,X                 ;4
(1) 1227/    D174 :                             ;INC emu_ptr,X                  ;6
(1) 1227/    D174 :                             ;BCC .skip                              ;2
(1) 1227/    D174 :                             ;       INC emu_ptr+1,X         ;6
(1) 1227/    D174 :                             ;.skip:
(1) 1227/    D174 :                             ;LDA (emu_ptr,X)                ;6
(1) 1227/    D174 :                             ;STA emu_ptr2+1,X               ;4
(1) 1227/    D174 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1227/    D174 :                             
(1) 1227/    D174 :                             ;Method 2 - 46 cycles
(1) 1227/    D174 :                             ;Jump table must be page aligned!!!
(1) 1227/    D174 :                             ;LDA (emu_PC,X)                 ;6
(1) 1227/    D174 :                             ;STZ emu_ptr+1,X                ;4
(1) 1227/    D174 :                             ;ASL                                    ;2
(1) 1227/    D174 :                             ;ROL emu_ptr+1,X                ;6
(1) 1227/    D174 :                             ;ASL                                    ;2
(1) 1227/    D174 :                             ;ROL emu_ptr+1,X                ;6
(1) 1227/    D174 :                             ;STA emu_ptr,X                  ;4                              
(1) 1227/    D174 :                             ;LDA emu_ptr+1,X                ;4
(1) 1227/    D174 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1227/    D174 :                             ;STA emu_ptr+1,X                ;4
(1) 1227/    D174 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1227/    D174 :                             
(1) 1227/    D174 :                             ;Method 3 - 30 cycles
(1) 1227/    D174 :                             ;TXA                                                    ;2
(1) 1227/    D174 :                             ;TAY                                                    ;2
(1) 1227/    D174 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1227/    D174 :                             ;ASL                                                    ;2
(1) 1227/    D174 :                             ;BCS upper                                              ;2
(1) 1227/    D174 :                             ;lower:
(1) 1227/    D174 :                             ;       ASL                                                     ;2
(1) 1227/    D174 :                             ;       TAX                                                     ;2
(1) 1227/    D174 :                             ;       BCS upper_lower                         ;2
(1) 1227/    D174 :                             ;       lower_lower:
(1) 1227/    D174 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1227/    D174 :                             ;       upper_lower:
(1) 1227/    D174 :                             ;               JMP (JUMP_TABLE2,X)
(1) 1227/    D174 :                             ;upper:
(1) 1227/    D174 :                             ;       ASL
(1) 1227/    D174 :                             ;       TAX
(1) 1227/    D174 :                             ;       BCS upper_upper
(1) 1227/    D174 :                             ;       lower_upper:
(1) 1227/    D174 :                             ;               JMP (JUMP_TABLE3,X)
(1) 1227/    D174 :                             ;       upper_upper:
(1) 1227/    D174 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1227/    D174 :                             ;After jump:
(1) 1227/    D174 :                             ;TYA                                                    ;2
(1) 1227/    D174 :                             ;TAX                                                    ;2
(1) 1227/    D174 :                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 362 - 1/5/2022 12:19:0


(1) 1227/    D174 :                             ;Method 4 - 28 cycles
(1) 1227/    D174 :                             ;LDA (emu_PC,X)                 ;6
(1) 1227/    D174 :                             ;TAY                                    ;2
(1) 1227/    D174 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1227/    D174 :                             ;PHA                                    ;3
(1) 1227/    D174 :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1227/    D174 :                             ;PHA                                    ;3
(1) 1227/    D174 :                             ;RTS                                    ;6
(1) 1227/    D174 :                             
(1) 1227/    D174 :                             ;Method 5 - 30 cycles
(1) 1227/    D174 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1227/    D176 : A8                          TAY                                             ;2
(1) 1227/    D177 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1227/    D17A : 95 0A                       STA emu_ptr,X                   ;4
(1) 1227/    D17C : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1227/    D17F : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1227/    D181 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1227/    D184 :                                                     
(1) 1228/    D184 :                     
(1) 1229/    D184 :                     	;0xF5 - SBC ZPX
(1) 1230/    D184 :                     	SBC_ZPX:
(1) 1231/    D184 : (MACRO)             		OP_MACRO 245, "SBC", "ZPX", "SBC_ZPX"
(1) 1231/    D184 :                             ;TODO
(1) 1232/    D184 : (MACRO)             		NEXT_MACRO
(1) 1232/    D184 :                                             
(1) 1232/    D184 :  (MACRO-2)                  halt
(1) 1232/    D184 : 00                          BRK
(1) 1232/    D185 : 00                          BRK
(1) 1232/    D186 :                             
(1) 1232/    D186 :                             ;Method 1 - 60 cycles
(1) 1232/    D186 :                             ;Jump table must be page aligned!!!
(1) 1232/    D186 :                             ;LDA (emu_PC,X)                 ;6
(1) 1232/    D186 :                             ;ASL                                    ;2
(1) 1232/    D186 :                             ;STA emu_ptr,X                  ;4
(1) 1232/    D186 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1232/    D186 :                             ;ADC #0                                 ;2
(1) 1232/    D186 :                             ;STA emu_ptr+1,X                ;4
(1) 1232/    D186 :                             ;LDA (emu_ptr,X)                ;6
(1) 1232/    D186 :                             ;STA emu_ptr2,X                 ;4
(1) 1232/    D186 :                             ;INC emu_ptr,X                  ;6
(1) 1232/    D186 :                             ;BCC .skip                              ;2
(1) 1232/    D186 :                             ;       INC emu_ptr+1,X         ;6
(1) 1232/    D186 :                             ;.skip:
(1) 1232/    D186 :                             ;LDA (emu_ptr,X)                ;6
(1) 1232/    D186 :                             ;STA emu_ptr2+1,X               ;4
(1) 1232/    D186 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1232/    D186 :                             
(1) 1232/    D186 :                             ;Method 2 - 46 cycles
(1) 1232/    D186 :                             ;Jump table must be page aligned!!!
(1) 1232/    D186 :                             ;LDA (emu_PC,X)                 ;6
(1) 1232/    D186 :                             ;STZ emu_ptr+1,X                ;4
(1) 1232/    D186 :                             ;ASL                                    ;2
(1) 1232/    D186 :                             ;ROL emu_ptr+1,X                ;6
(1) 1232/    D186 :                             ;ASL                                    ;2
(1) 1232/    D186 :                             ;ROL emu_ptr+1,X                ;6
(1) 1232/    D186 :                             ;STA emu_ptr,X                  ;4                              
(1) 1232/    D186 :                             ;LDA emu_ptr+1,X                ;4
(1) 1232/    D186 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1232/    D186 :                             ;STA emu_ptr+1,X                ;4
(1) 1232/    D186 :                             ;JMP (emu_ptr2,X)               ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 363 - 1/5/2022 12:19:0


(1) 1232/    D186 :                             
(1) 1232/    D186 :                             ;Method 3 - 30 cycles
(1) 1232/    D186 :                             ;TXA                                                    ;2
(1) 1232/    D186 :                             ;TAY                                                    ;2
(1) 1232/    D186 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1232/    D186 :                             ;ASL                                                    ;2
(1) 1232/    D186 :                             ;BCS upper                                              ;2
(1) 1232/    D186 :                             ;lower:
(1) 1232/    D186 :                             ;       ASL                                                     ;2
(1) 1232/    D186 :                             ;       TAX                                                     ;2
(1) 1232/    D186 :                             ;       BCS upper_lower                         ;2
(1) 1232/    D186 :                             ;       lower_lower:
(1) 1232/    D186 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1232/    D186 :                             ;       upper_lower:
(1) 1232/    D186 :                             ;               JMP (JUMP_TABLE2,X)
(1) 1232/    D186 :                             ;upper:
(1) 1232/    D186 :                             ;       ASL
(1) 1232/    D186 :                             ;       TAX
(1) 1232/    D186 :                             ;       BCS upper_upper
(1) 1232/    D186 :                             ;       lower_upper:
(1) 1232/    D186 :                             ;               JMP (JUMP_TABLE3,X)
(1) 1232/    D186 :                             ;       upper_upper:
(1) 1232/    D186 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1232/    D186 :                             ;After jump:
(1) 1232/    D186 :                             ;TYA                                                    ;2
(1) 1232/    D186 :                             ;TAX                                                    ;2
(1) 1232/    D186 :                             
(1) 1232/    D186 :                             ;Method 4 - 28 cycles
(1) 1232/    D186 :                             ;LDA (emu_PC,X)                 ;6
(1) 1232/    D186 :                             ;TAY                                    ;2
(1) 1232/    D186 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1232/    D186 :                             ;PHA                                    ;3
(1) 1232/    D186 :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1232/    D186 :                             ;PHA                                    ;3
(1) 1232/    D186 :                             ;RTS                                    ;6
(1) 1232/    D186 :                             
(1) 1232/    D186 :                             ;Method 5 - 30 cycles
(1) 1232/    D186 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1232/    D188 : A8                          TAY                                             ;2
(1) 1232/    D189 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1232/    D18C : 95 0A                       STA emu_ptr,X                   ;4
(1) 1232/    D18E : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1232/    D191 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1232/    D193 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1232/    D196 :                                                     
(1) 1233/    D196 :                     
(1) 1234/    D196 :                     	;0xF6 - INC ZPX
(1) 1235/    D196 :                     	INC_ZPX:
(1) 1236/    D196 : (MACRO)             		OP_MACRO 246, "INC", "ZPX", "INC_ZPX"
(1) 1236/    D196 :                             ;TODO
(1) 1237/    D196 : (MACRO)             		NEXT_MACRO
(1) 1237/    D196 :                                             
(1) 1237/    D196 :  (MACRO-2)                  halt
(1) 1237/    D196 : 00                          BRK
(1) 1237/    D197 : 00                          BRK
(1) 1237/    D198 :                             
(1) 1237/    D198 :                             ;Method 1 - 60 cycles
(1) 1237/    D198 :                             ;Jump table must be page aligned!!!
(1) 1237/    D198 :                             ;LDA (emu_PC,X)                 ;6
(1) 1237/    D198 :                             ;ASL                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 364 - 1/5/2022 12:19:0


(1) 1237/    D198 :                             ;STA emu_ptr,X                  ;4
(1) 1237/    D198 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1237/    D198 :                             ;ADC #0                                 ;2
(1) 1237/    D198 :                             ;STA emu_ptr+1,X                ;4
(1) 1237/    D198 :                             ;LDA (emu_ptr,X)                ;6
(1) 1237/    D198 :                             ;STA emu_ptr2,X                 ;4
(1) 1237/    D198 :                             ;INC emu_ptr,X                  ;6
(1) 1237/    D198 :                             ;BCC .skip                              ;2
(1) 1237/    D198 :                             ;       INC emu_ptr+1,X         ;6
(1) 1237/    D198 :                             ;.skip:
(1) 1237/    D198 :                             ;LDA (emu_ptr,X)                ;6
(1) 1237/    D198 :                             ;STA emu_ptr2+1,X               ;4
(1) 1237/    D198 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1237/    D198 :                             
(1) 1237/    D198 :                             ;Method 2 - 46 cycles
(1) 1237/    D198 :                             ;Jump table must be page aligned!!!
(1) 1237/    D198 :                             ;LDA (emu_PC,X)                 ;6
(1) 1237/    D198 :                             ;STZ emu_ptr+1,X                ;4
(1) 1237/    D198 :                             ;ASL                                    ;2
(1) 1237/    D198 :                             ;ROL emu_ptr+1,X                ;6
(1) 1237/    D198 :                             ;ASL                                    ;2
(1) 1237/    D198 :                             ;ROL emu_ptr+1,X                ;6
(1) 1237/    D198 :                             ;STA emu_ptr,X                  ;4                              
(1) 1237/    D198 :                             ;LDA emu_ptr+1,X                ;4
(1) 1237/    D198 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1237/    D198 :                             ;STA emu_ptr+1,X                ;4
(1) 1237/    D198 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1237/    D198 :                             
(1) 1237/    D198 :                             ;Method 3 - 30 cycles
(1) 1237/    D198 :                             ;TXA                                                    ;2
(1) 1237/    D198 :                             ;TAY                                                    ;2
(1) 1237/    D198 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1237/    D198 :                             ;ASL                                                    ;2
(1) 1237/    D198 :                             ;BCS upper                                              ;2
(1) 1237/    D198 :                             ;lower:
(1) 1237/    D198 :                             ;       ASL                                                     ;2
(1) 1237/    D198 :                             ;       TAX                                                     ;2
(1) 1237/    D198 :                             ;       BCS upper_lower                         ;2
(1) 1237/    D198 :                             ;       lower_lower:
(1) 1237/    D198 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1237/    D198 :                             ;       upper_lower:
(1) 1237/    D198 :                             ;               JMP (JUMP_TABLE2,X)
(1) 1237/    D198 :                             ;upper:
(1) 1237/    D198 :                             ;       ASL
(1) 1237/    D198 :                             ;       TAX
(1) 1237/    D198 :                             ;       BCS upper_upper
(1) 1237/    D198 :                             ;       lower_upper:
(1) 1237/    D198 :                             ;               JMP (JUMP_TABLE3,X)
(1) 1237/    D198 :                             ;       upper_upper:
(1) 1237/    D198 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1237/    D198 :                             ;After jump:
(1) 1237/    D198 :                             ;TYA                                                    ;2
(1) 1237/    D198 :                             ;TAX                                                    ;2
(1) 1237/    D198 :                             
(1) 1237/    D198 :                             ;Method 4 - 28 cycles
(1) 1237/    D198 :                             ;LDA (emu_PC,X)                 ;6
(1) 1237/    D198 :                             ;TAY                                    ;2
(1) 1237/    D198 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1237/    D198 :                             ;PHA                                    ;3
(1) 1237/    D198 :                             ;LDA JUMP_TABLE2,Y              ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 365 - 1/5/2022 12:19:0


(1) 1237/    D198 :                             ;PHA                                    ;3
(1) 1237/    D198 :                             ;RTS                                    ;6
(1) 1237/    D198 :                             
(1) 1237/    D198 :                             ;Method 5 - 30 cycles
(1) 1237/    D198 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1237/    D19A : A8                          TAY                                             ;2
(1) 1237/    D19B : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1237/    D19E : 95 0A                       STA emu_ptr,X                   ;4
(1) 1237/    D1A0 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1237/    D1A3 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1237/    D1A5 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1237/    D1A8 :                                                     
(1) 1238/    D1A8 :                     
(1) 1239/    D1A8 :                     	;0xF7 - NOP
(1) 1240/    D1A8 :                     	NOP_0xF7:
(1) 1241/    D1A8 : (MACRO)             		OP_MACRO 247, "NOP", "IMP", "NOP_0xF7"
(1) 1241/    D1A8 :                             ;TODO
(1) 1242/    D1A8 : (MACRO)             		NEXT_MACRO
(1) 1242/    D1A8 :                                             
(1) 1242/    D1A8 :  (MACRO-2)                  halt
(1) 1242/    D1A8 : 00                          BRK
(1) 1242/    D1A9 : 00                          BRK
(1) 1242/    D1AA :                             
(1) 1242/    D1AA :                             ;Method 1 - 60 cycles
(1) 1242/    D1AA :                             ;Jump table must be page aligned!!!
(1) 1242/    D1AA :                             ;LDA (emu_PC,X)                 ;6
(1) 1242/    D1AA :                             ;ASL                                    ;2
(1) 1242/    D1AA :                             ;STA emu_ptr,X                  ;4
(1) 1242/    D1AA :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1242/    D1AA :                             ;ADC #0                                 ;2
(1) 1242/    D1AA :                             ;STA emu_ptr+1,X                ;4
(1) 1242/    D1AA :                             ;LDA (emu_ptr,X)                ;6
(1) 1242/    D1AA :                             ;STA emu_ptr2,X                 ;4
(1) 1242/    D1AA :                             ;INC emu_ptr,X                  ;6
(1) 1242/    D1AA :                             ;BCC .skip                              ;2
(1) 1242/    D1AA :                             ;       INC emu_ptr+1,X         ;6
(1) 1242/    D1AA :                             ;.skip:
(1) 1242/    D1AA :                             ;LDA (emu_ptr,X)                ;6
(1) 1242/    D1AA :                             ;STA emu_ptr2+1,X               ;4
(1) 1242/    D1AA :                             ;JMP (emu_ptr2,X)               ;6
(1) 1242/    D1AA :                             
(1) 1242/    D1AA :                             ;Method 2 - 46 cycles
(1) 1242/    D1AA :                             ;Jump table must be page aligned!!!
(1) 1242/    D1AA :                             ;LDA (emu_PC,X)                 ;6
(1) 1242/    D1AA :                             ;STZ emu_ptr+1,X                ;4
(1) 1242/    D1AA :                             ;ASL                                    ;2
(1) 1242/    D1AA :                             ;ROL emu_ptr+1,X                ;6
(1) 1242/    D1AA :                             ;ASL                                    ;2
(1) 1242/    D1AA :                             ;ROL emu_ptr+1,X                ;6
(1) 1242/    D1AA :                             ;STA emu_ptr,X                  ;4                              
(1) 1242/    D1AA :                             ;LDA emu_ptr+1,X                ;4
(1) 1242/    D1AA :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1242/    D1AA :                             ;STA emu_ptr+1,X                ;4
(1) 1242/    D1AA :                             ;JMP (emu_ptr2,X)               ;6
(1) 1242/    D1AA :                             
(1) 1242/    D1AA :                             ;Method 3 - 30 cycles
(1) 1242/    D1AA :                             ;TXA                                                    ;2
(1) 1242/    D1AA :                             ;TAY                                                    ;2
(1) 1242/    D1AA :                             ;LDA (emu_PC,X)                                 ;6
(1) 1242/    D1AA :                             ;ASL                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 366 - 1/5/2022 12:19:0


(1) 1242/    D1AA :                             ;BCS upper                                              ;2
(1) 1242/    D1AA :                             ;lower:
(1) 1242/    D1AA :                             ;       ASL                                                     ;2
(1) 1242/    D1AA :                             ;       TAX                                                     ;2
(1) 1242/    D1AA :                             ;       BCS upper_lower                         ;2
(1) 1242/    D1AA :                             ;       lower_lower:
(1) 1242/    D1AA :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1242/    D1AA :                             ;       upper_lower:
(1) 1242/    D1AA :                             ;               JMP (JUMP_TABLE2,X)
(1) 1242/    D1AA :                             ;upper:
(1) 1242/    D1AA :                             ;       ASL
(1) 1242/    D1AA :                             ;       TAX
(1) 1242/    D1AA :                             ;       BCS upper_upper
(1) 1242/    D1AA :                             ;       lower_upper:
(1) 1242/    D1AA :                             ;               JMP (JUMP_TABLE3,X)
(1) 1242/    D1AA :                             ;       upper_upper:
(1) 1242/    D1AA :                             ;               JMP (JUMP_TABLE4,X)
(1) 1242/    D1AA :                             ;After jump:
(1) 1242/    D1AA :                             ;TYA                                                    ;2
(1) 1242/    D1AA :                             ;TAX                                                    ;2
(1) 1242/    D1AA :                             
(1) 1242/    D1AA :                             ;Method 4 - 28 cycles
(1) 1242/    D1AA :                             ;LDA (emu_PC,X)                 ;6
(1) 1242/    D1AA :                             ;TAY                                    ;2
(1) 1242/    D1AA :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1242/    D1AA :                             ;PHA                                    ;3
(1) 1242/    D1AA :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1242/    D1AA :                             ;PHA                                    ;3
(1) 1242/    D1AA :                             ;RTS                                    ;6
(1) 1242/    D1AA :                             
(1) 1242/    D1AA :                             ;Method 5 - 30 cycles
(1) 1242/    D1AA : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1242/    D1AC : A8                          TAY                                             ;2
(1) 1242/    D1AD : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1242/    D1B0 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1242/    D1B2 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1242/    D1B5 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1242/    D1B7 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1242/    D1BA :                                                     
(1) 1243/    D1BA :                     
(1) 1244/    D1BA :                     	;0xF8 - SED IMP
(1) 1245/    D1BA :                     	SED_IMP:
(1) 1246/    D1BA : (MACRO)             		OP_MACRO 248, "SED", "IMP", "SED_IMP"
(1) 1246/    D1BA :                             ;TODO
(1) 1247/    D1BA : (MACRO)             		NEXT_MACRO
(1) 1247/    D1BA :                                             
(1) 1247/    D1BA :  (MACRO-2)                  halt
(1) 1247/    D1BA : 00                          BRK
(1) 1247/    D1BB : 00                          BRK
(1) 1247/    D1BC :                             
(1) 1247/    D1BC :                             ;Method 1 - 60 cycles
(1) 1247/    D1BC :                             ;Jump table must be page aligned!!!
(1) 1247/    D1BC :                             ;LDA (emu_PC,X)                 ;6
(1) 1247/    D1BC :                             ;ASL                                    ;2
(1) 1247/    D1BC :                             ;STA emu_ptr,X                  ;4
(1) 1247/    D1BC :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1247/    D1BC :                             ;ADC #0                                 ;2
(1) 1247/    D1BC :                             ;STA emu_ptr+1,X                ;4
(1) 1247/    D1BC :                             ;LDA (emu_ptr,X)                ;6
(1) 1247/    D1BC :                             ;STA emu_ptr2,X                 ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 367 - 1/5/2022 12:19:0


(1) 1247/    D1BC :                             ;INC emu_ptr,X                  ;6
(1) 1247/    D1BC :                             ;BCC .skip                              ;2
(1) 1247/    D1BC :                             ;       INC emu_ptr+1,X         ;6
(1) 1247/    D1BC :                             ;.skip:
(1) 1247/    D1BC :                             ;LDA (emu_ptr,X)                ;6
(1) 1247/    D1BC :                             ;STA emu_ptr2+1,X               ;4
(1) 1247/    D1BC :                             ;JMP (emu_ptr2,X)               ;6
(1) 1247/    D1BC :                             
(1) 1247/    D1BC :                             ;Method 2 - 46 cycles
(1) 1247/    D1BC :                             ;Jump table must be page aligned!!!
(1) 1247/    D1BC :                             ;LDA (emu_PC,X)                 ;6
(1) 1247/    D1BC :                             ;STZ emu_ptr+1,X                ;4
(1) 1247/    D1BC :                             ;ASL                                    ;2
(1) 1247/    D1BC :                             ;ROL emu_ptr+1,X                ;6
(1) 1247/    D1BC :                             ;ASL                                    ;2
(1) 1247/    D1BC :                             ;ROL emu_ptr+1,X                ;6
(1) 1247/    D1BC :                             ;STA emu_ptr,X                  ;4                              
(1) 1247/    D1BC :                             ;LDA emu_ptr+1,X                ;4
(1) 1247/    D1BC :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1247/    D1BC :                             ;STA emu_ptr+1,X                ;4
(1) 1247/    D1BC :                             ;JMP (emu_ptr2,X)               ;6
(1) 1247/    D1BC :                             
(1) 1247/    D1BC :                             ;Method 3 - 30 cycles
(1) 1247/    D1BC :                             ;TXA                                                    ;2
(1) 1247/    D1BC :                             ;TAY                                                    ;2
(1) 1247/    D1BC :                             ;LDA (emu_PC,X)                                 ;6
(1) 1247/    D1BC :                             ;ASL                                                    ;2
(1) 1247/    D1BC :                             ;BCS upper                                              ;2
(1) 1247/    D1BC :                             ;lower:
(1) 1247/    D1BC :                             ;       ASL                                                     ;2
(1) 1247/    D1BC :                             ;       TAX                                                     ;2
(1) 1247/    D1BC :                             ;       BCS upper_lower                         ;2
(1) 1247/    D1BC :                             ;       lower_lower:
(1) 1247/    D1BC :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1247/    D1BC :                             ;       upper_lower:
(1) 1247/    D1BC :                             ;               JMP (JUMP_TABLE2,X)
(1) 1247/    D1BC :                             ;upper:
(1) 1247/    D1BC :                             ;       ASL
(1) 1247/    D1BC :                             ;       TAX
(1) 1247/    D1BC :                             ;       BCS upper_upper
(1) 1247/    D1BC :                             ;       lower_upper:
(1) 1247/    D1BC :                             ;               JMP (JUMP_TABLE3,X)
(1) 1247/    D1BC :                             ;       upper_upper:
(1) 1247/    D1BC :                             ;               JMP (JUMP_TABLE4,X)
(1) 1247/    D1BC :                             ;After jump:
(1) 1247/    D1BC :                             ;TYA                                                    ;2
(1) 1247/    D1BC :                             ;TAX                                                    ;2
(1) 1247/    D1BC :                             
(1) 1247/    D1BC :                             ;Method 4 - 28 cycles
(1) 1247/    D1BC :                             ;LDA (emu_PC,X)                 ;6
(1) 1247/    D1BC :                             ;TAY                                    ;2
(1) 1247/    D1BC :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1247/    D1BC :                             ;PHA                                    ;3
(1) 1247/    D1BC :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1247/    D1BC :                             ;PHA                                    ;3
(1) 1247/    D1BC :                             ;RTS                                    ;6
(1) 1247/    D1BC :                             
(1) 1247/    D1BC :                             ;Method 5 - 30 cycles
(1) 1247/    D1BC : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1247/    D1BE : A8                          TAY                                             ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 368 - 1/5/2022 12:19:0


(1) 1247/    D1BF : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1247/    D1C2 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1247/    D1C4 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1247/    D1C7 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1247/    D1C9 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1247/    D1CC :                                                     
(1) 1248/    D1CC :                     
(1) 1249/    D1CC :                     	;0xF9 - SBC ABSY
(1) 1250/    D1CC :                     	SBC_ABSY:
(1) 1251/    D1CC : (MACRO)             		OP_MACRO 249, "SBC", "ABSY", "SBC_ABSY"
(1) 1251/    D1CC :                             ;TODO
(1) 1252/    D1CC : (MACRO)             		NEXT_MACRO
(1) 1252/    D1CC :                                             
(1) 1252/    D1CC :  (MACRO-2)                  halt
(1) 1252/    D1CC : 00                          BRK
(1) 1252/    D1CD : 00                          BRK
(1) 1252/    D1CE :                             
(1) 1252/    D1CE :                             ;Method 1 - 60 cycles
(1) 1252/    D1CE :                             ;Jump table must be page aligned!!!
(1) 1252/    D1CE :                             ;LDA (emu_PC,X)                 ;6
(1) 1252/    D1CE :                             ;ASL                                    ;2
(1) 1252/    D1CE :                             ;STA emu_ptr,X                  ;4
(1) 1252/    D1CE :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1252/    D1CE :                             ;ADC #0                                 ;2
(1) 1252/    D1CE :                             ;STA emu_ptr+1,X                ;4
(1) 1252/    D1CE :                             ;LDA (emu_ptr,X)                ;6
(1) 1252/    D1CE :                             ;STA emu_ptr2,X                 ;4
(1) 1252/    D1CE :                             ;INC emu_ptr,X                  ;6
(1) 1252/    D1CE :                             ;BCC .skip                              ;2
(1) 1252/    D1CE :                             ;       INC emu_ptr+1,X         ;6
(1) 1252/    D1CE :                             ;.skip:
(1) 1252/    D1CE :                             ;LDA (emu_ptr,X)                ;6
(1) 1252/    D1CE :                             ;STA emu_ptr2+1,X               ;4
(1) 1252/    D1CE :                             ;JMP (emu_ptr2,X)               ;6
(1) 1252/    D1CE :                             
(1) 1252/    D1CE :                             ;Method 2 - 46 cycles
(1) 1252/    D1CE :                             ;Jump table must be page aligned!!!
(1) 1252/    D1CE :                             ;LDA (emu_PC,X)                 ;6
(1) 1252/    D1CE :                             ;STZ emu_ptr+1,X                ;4
(1) 1252/    D1CE :                             ;ASL                                    ;2
(1) 1252/    D1CE :                             ;ROL emu_ptr+1,X                ;6
(1) 1252/    D1CE :                             ;ASL                                    ;2
(1) 1252/    D1CE :                             ;ROL emu_ptr+1,X                ;6
(1) 1252/    D1CE :                             ;STA emu_ptr,X                  ;4                              
(1) 1252/    D1CE :                             ;LDA emu_ptr+1,X                ;4
(1) 1252/    D1CE :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1252/    D1CE :                             ;STA emu_ptr+1,X                ;4
(1) 1252/    D1CE :                             ;JMP (emu_ptr2,X)               ;6
(1) 1252/    D1CE :                             
(1) 1252/    D1CE :                             ;Method 3 - 30 cycles
(1) 1252/    D1CE :                             ;TXA                                                    ;2
(1) 1252/    D1CE :                             ;TAY                                                    ;2
(1) 1252/    D1CE :                             ;LDA (emu_PC,X)                                 ;6
(1) 1252/    D1CE :                             ;ASL                                                    ;2
(1) 1252/    D1CE :                             ;BCS upper                                              ;2
(1) 1252/    D1CE :                             ;lower:
(1) 1252/    D1CE :                             ;       ASL                                                     ;2
(1) 1252/    D1CE :                             ;       TAX                                                     ;2
(1) 1252/    D1CE :                             ;       BCS upper_lower                         ;2
(1) 1252/    D1CE :                             ;       lower_lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 369 - 1/5/2022 12:19:0


(1) 1252/    D1CE :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1252/    D1CE :                             ;       upper_lower:
(1) 1252/    D1CE :                             ;               JMP (JUMP_TABLE2,X)
(1) 1252/    D1CE :                             ;upper:
(1) 1252/    D1CE :                             ;       ASL
(1) 1252/    D1CE :                             ;       TAX
(1) 1252/    D1CE :                             ;       BCS upper_upper
(1) 1252/    D1CE :                             ;       lower_upper:
(1) 1252/    D1CE :                             ;               JMP (JUMP_TABLE3,X)
(1) 1252/    D1CE :                             ;       upper_upper:
(1) 1252/    D1CE :                             ;               JMP (JUMP_TABLE4,X)
(1) 1252/    D1CE :                             ;After jump:
(1) 1252/    D1CE :                             ;TYA                                                    ;2
(1) 1252/    D1CE :                             ;TAX                                                    ;2
(1) 1252/    D1CE :                             
(1) 1252/    D1CE :                             ;Method 4 - 28 cycles
(1) 1252/    D1CE :                             ;LDA (emu_PC,X)                 ;6
(1) 1252/    D1CE :                             ;TAY                                    ;2
(1) 1252/    D1CE :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1252/    D1CE :                             ;PHA                                    ;3
(1) 1252/    D1CE :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1252/    D1CE :                             ;PHA                                    ;3
(1) 1252/    D1CE :                             ;RTS                                    ;6
(1) 1252/    D1CE :                             
(1) 1252/    D1CE :                             ;Method 5 - 30 cycles
(1) 1252/    D1CE : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1252/    D1D0 : A8                          TAY                                             ;2
(1) 1252/    D1D1 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1252/    D1D4 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1252/    D1D6 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1252/    D1D9 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1252/    D1DB : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1252/    D1DE :                                                     
(1) 1253/    D1DE :                     
(1) 1254/    D1DE :                     	;0xFA - NOP
(1) 1255/    D1DE :                     	NOP_0xFA:
(1) 1256/    D1DE : (MACRO)             		OP_MACRO 250, "NOP", "IMP", "NOP_0xFA"
(1) 1256/    D1DE :                             ;TODO
(1) 1257/    D1DE : (MACRO)             		NEXT_MACRO
(1) 1257/    D1DE :                                             
(1) 1257/    D1DE :  (MACRO-2)                  halt
(1) 1257/    D1DE : 00                          BRK
(1) 1257/    D1DF : 00                          BRK
(1) 1257/    D1E0 :                             
(1) 1257/    D1E0 :                             ;Method 1 - 60 cycles
(1) 1257/    D1E0 :                             ;Jump table must be page aligned!!!
(1) 1257/    D1E0 :                             ;LDA (emu_PC,X)                 ;6
(1) 1257/    D1E0 :                             ;ASL                                    ;2
(1) 1257/    D1E0 :                             ;STA emu_ptr,X                  ;4
(1) 1257/    D1E0 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1257/    D1E0 :                             ;ADC #0                                 ;2
(1) 1257/    D1E0 :                             ;STA emu_ptr+1,X                ;4
(1) 1257/    D1E0 :                             ;LDA (emu_ptr,X)                ;6
(1) 1257/    D1E0 :                             ;STA emu_ptr2,X                 ;4
(1) 1257/    D1E0 :                             ;INC emu_ptr,X                  ;6
(1) 1257/    D1E0 :                             ;BCC .skip                              ;2
(1) 1257/    D1E0 :                             ;       INC emu_ptr+1,X         ;6
(1) 1257/    D1E0 :                             ;.skip:
(1) 1257/    D1E0 :                             ;LDA (emu_ptr,X)                ;6
(1) 1257/    D1E0 :                             ;STA emu_ptr2+1,X               ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 370 - 1/5/2022 12:19:0


(1) 1257/    D1E0 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1257/    D1E0 :                             
(1) 1257/    D1E0 :                             ;Method 2 - 46 cycles
(1) 1257/    D1E0 :                             ;Jump table must be page aligned!!!
(1) 1257/    D1E0 :                             ;LDA (emu_PC,X)                 ;6
(1) 1257/    D1E0 :                             ;STZ emu_ptr+1,X                ;4
(1) 1257/    D1E0 :                             ;ASL                                    ;2
(1) 1257/    D1E0 :                             ;ROL emu_ptr+1,X                ;6
(1) 1257/    D1E0 :                             ;ASL                                    ;2
(1) 1257/    D1E0 :                             ;ROL emu_ptr+1,X                ;6
(1) 1257/    D1E0 :                             ;STA emu_ptr,X                  ;4                              
(1) 1257/    D1E0 :                             ;LDA emu_ptr+1,X                ;4
(1) 1257/    D1E0 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1257/    D1E0 :                             ;STA emu_ptr+1,X                ;4
(1) 1257/    D1E0 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1257/    D1E0 :                             
(1) 1257/    D1E0 :                             ;Method 3 - 30 cycles
(1) 1257/    D1E0 :                             ;TXA                                                    ;2
(1) 1257/    D1E0 :                             ;TAY                                                    ;2
(1) 1257/    D1E0 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1257/    D1E0 :                             ;ASL                                                    ;2
(1) 1257/    D1E0 :                             ;BCS upper                                              ;2
(1) 1257/    D1E0 :                             ;lower:
(1) 1257/    D1E0 :                             ;       ASL                                                     ;2
(1) 1257/    D1E0 :                             ;       TAX                                                     ;2
(1) 1257/    D1E0 :                             ;       BCS upper_lower                         ;2
(1) 1257/    D1E0 :                             ;       lower_lower:
(1) 1257/    D1E0 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1257/    D1E0 :                             ;       upper_lower:
(1) 1257/    D1E0 :                             ;               JMP (JUMP_TABLE2,X)
(1) 1257/    D1E0 :                             ;upper:
(1) 1257/    D1E0 :                             ;       ASL
(1) 1257/    D1E0 :                             ;       TAX
(1) 1257/    D1E0 :                             ;       BCS upper_upper
(1) 1257/    D1E0 :                             ;       lower_upper:
(1) 1257/    D1E0 :                             ;               JMP (JUMP_TABLE3,X)
(1) 1257/    D1E0 :                             ;       upper_upper:
(1) 1257/    D1E0 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1257/    D1E0 :                             ;After jump:
(1) 1257/    D1E0 :                             ;TYA                                                    ;2
(1) 1257/    D1E0 :                             ;TAX                                                    ;2
(1) 1257/    D1E0 :                             
(1) 1257/    D1E0 :                             ;Method 4 - 28 cycles
(1) 1257/    D1E0 :                             ;LDA (emu_PC,X)                 ;6
(1) 1257/    D1E0 :                             ;TAY                                    ;2
(1) 1257/    D1E0 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1257/    D1E0 :                             ;PHA                                    ;3
(1) 1257/    D1E0 :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1257/    D1E0 :                             ;PHA                                    ;3
(1) 1257/    D1E0 :                             ;RTS                                    ;6
(1) 1257/    D1E0 :                             
(1) 1257/    D1E0 :                             ;Method 5 - 30 cycles
(1) 1257/    D1E0 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1257/    D1E2 : A8                          TAY                                             ;2
(1) 1257/    D1E3 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1257/    D1E6 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1257/    D1E8 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1257/    D1EB : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1257/    D1ED : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1257/    D1F0 :                                                     
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 371 - 1/5/2022 12:19:0


(1) 1258/    D1F0 :                     
(1) 1259/    D1F0 :                     	;0xFB - NOP
(1) 1260/    D1F0 :                     	NOP_0xFB:
(1) 1261/    D1F0 : (MACRO)             		OP_MACRO 251, "NOP", "IMP", "NOP_0xFB"
(1) 1261/    D1F0 :                             ;TODO
(1) 1262/    D1F0 : (MACRO)             		NEXT_MACRO
(1) 1262/    D1F0 :                                             
(1) 1262/    D1F0 :  (MACRO-2)                  halt
(1) 1262/    D1F0 : 00                          BRK
(1) 1262/    D1F1 : 00                          BRK
(1) 1262/    D1F2 :                             
(1) 1262/    D1F2 :                             ;Method 1 - 60 cycles
(1) 1262/    D1F2 :                             ;Jump table must be page aligned!!!
(1) 1262/    D1F2 :                             ;LDA (emu_PC,X)                 ;6
(1) 1262/    D1F2 :                             ;ASL                                    ;2
(1) 1262/    D1F2 :                             ;STA emu_ptr,X                  ;4
(1) 1262/    D1F2 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1262/    D1F2 :                             ;ADC #0                                 ;2
(1) 1262/    D1F2 :                             ;STA emu_ptr+1,X                ;4
(1) 1262/    D1F2 :                             ;LDA (emu_ptr,X)                ;6
(1) 1262/    D1F2 :                             ;STA emu_ptr2,X                 ;4
(1) 1262/    D1F2 :                             ;INC emu_ptr,X                  ;6
(1) 1262/    D1F2 :                             ;BCC .skip                              ;2
(1) 1262/    D1F2 :                             ;       INC emu_ptr+1,X         ;6
(1) 1262/    D1F2 :                             ;.skip:
(1) 1262/    D1F2 :                             ;LDA (emu_ptr,X)                ;6
(1) 1262/    D1F2 :                             ;STA emu_ptr2+1,X               ;4
(1) 1262/    D1F2 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1262/    D1F2 :                             
(1) 1262/    D1F2 :                             ;Method 2 - 46 cycles
(1) 1262/    D1F2 :                             ;Jump table must be page aligned!!!
(1) 1262/    D1F2 :                             ;LDA (emu_PC,X)                 ;6
(1) 1262/    D1F2 :                             ;STZ emu_ptr+1,X                ;4
(1) 1262/    D1F2 :                             ;ASL                                    ;2
(1) 1262/    D1F2 :                             ;ROL emu_ptr+1,X                ;6
(1) 1262/    D1F2 :                             ;ASL                                    ;2
(1) 1262/    D1F2 :                             ;ROL emu_ptr+1,X                ;6
(1) 1262/    D1F2 :                             ;STA emu_ptr,X                  ;4                              
(1) 1262/    D1F2 :                             ;LDA emu_ptr+1,X                ;4
(1) 1262/    D1F2 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1262/    D1F2 :                             ;STA emu_ptr+1,X                ;4
(1) 1262/    D1F2 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1262/    D1F2 :                             
(1) 1262/    D1F2 :                             ;Method 3 - 30 cycles
(1) 1262/    D1F2 :                             ;TXA                                                    ;2
(1) 1262/    D1F2 :                             ;TAY                                                    ;2
(1) 1262/    D1F2 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1262/    D1F2 :                             ;ASL                                                    ;2
(1) 1262/    D1F2 :                             ;BCS upper                                              ;2
(1) 1262/    D1F2 :                             ;lower:
(1) 1262/    D1F2 :                             ;       ASL                                                     ;2
(1) 1262/    D1F2 :                             ;       TAX                                                     ;2
(1) 1262/    D1F2 :                             ;       BCS upper_lower                         ;2
(1) 1262/    D1F2 :                             ;       lower_lower:
(1) 1262/    D1F2 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1262/    D1F2 :                             ;       upper_lower:
(1) 1262/    D1F2 :                             ;               JMP (JUMP_TABLE2,X)
(1) 1262/    D1F2 :                             ;upper:
(1) 1262/    D1F2 :                             ;       ASL
(1) 1262/    D1F2 :                             ;       TAX
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 372 - 1/5/2022 12:19:0


(1) 1262/    D1F2 :                             ;       BCS upper_upper
(1) 1262/    D1F2 :                             ;       lower_upper:
(1) 1262/    D1F2 :                             ;               JMP (JUMP_TABLE3,X)
(1) 1262/    D1F2 :                             ;       upper_upper:
(1) 1262/    D1F2 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1262/    D1F2 :                             ;After jump:
(1) 1262/    D1F2 :                             ;TYA                                                    ;2
(1) 1262/    D1F2 :                             ;TAX                                                    ;2
(1) 1262/    D1F2 :                             
(1) 1262/    D1F2 :                             ;Method 4 - 28 cycles
(1) 1262/    D1F2 :                             ;LDA (emu_PC,X)                 ;6
(1) 1262/    D1F2 :                             ;TAY                                    ;2
(1) 1262/    D1F2 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1262/    D1F2 :                             ;PHA                                    ;3
(1) 1262/    D1F2 :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1262/    D1F2 :                             ;PHA                                    ;3
(1) 1262/    D1F2 :                             ;RTS                                    ;6
(1) 1262/    D1F2 :                             
(1) 1262/    D1F2 :                             ;Method 5 - 30 cycles
(1) 1262/    D1F2 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1262/    D1F4 : A8                          TAY                                             ;2
(1) 1262/    D1F5 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1262/    D1F8 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1262/    D1FA : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1262/    D1FD : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1262/    D1FF : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1262/    D202 :                                                     
(1) 1263/    D202 :                     
(1) 1264/    D202 :                     	;0xFC - NOP
(1) 1265/    D202 :                     	NOP_0xFC:
(1) 1266/    D202 : (MACRO)             		OP_MACRO 252, "NOP", "IMP", "NOP_0xFC"
(1) 1266/    D202 :                             ;TODO
(1) 1267/    D202 : (MACRO)             		NEXT_MACRO
(1) 1267/    D202 :                                             
(1) 1267/    D202 :  (MACRO-2)                  halt
(1) 1267/    D202 : 00                          BRK
(1) 1267/    D203 : 00                          BRK
(1) 1267/    D204 :                             
(1) 1267/    D204 :                             ;Method 1 - 60 cycles
(1) 1267/    D204 :                             ;Jump table must be page aligned!!!
(1) 1267/    D204 :                             ;LDA (emu_PC,X)                 ;6
(1) 1267/    D204 :                             ;ASL                                    ;2
(1) 1267/    D204 :                             ;STA emu_ptr,X                  ;4
(1) 1267/    D204 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1267/    D204 :                             ;ADC #0                                 ;2
(1) 1267/    D204 :                             ;STA emu_ptr+1,X                ;4
(1) 1267/    D204 :                             ;LDA (emu_ptr,X)                ;6
(1) 1267/    D204 :                             ;STA emu_ptr2,X                 ;4
(1) 1267/    D204 :                             ;INC emu_ptr,X                  ;6
(1) 1267/    D204 :                             ;BCC .skip                              ;2
(1) 1267/    D204 :                             ;       INC emu_ptr+1,X         ;6
(1) 1267/    D204 :                             ;.skip:
(1) 1267/    D204 :                             ;LDA (emu_ptr,X)                ;6
(1) 1267/    D204 :                             ;STA emu_ptr2+1,X               ;4
(1) 1267/    D204 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1267/    D204 :                             
(1) 1267/    D204 :                             ;Method 2 - 46 cycles
(1) 1267/    D204 :                             ;Jump table must be page aligned!!!
(1) 1267/    D204 :                             ;LDA (emu_PC,X)                 ;6
(1) 1267/    D204 :                             ;STZ emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 373 - 1/5/2022 12:19:0


(1) 1267/    D204 :                             ;ASL                                    ;2
(1) 1267/    D204 :                             ;ROL emu_ptr+1,X                ;6
(1) 1267/    D204 :                             ;ASL                                    ;2
(1) 1267/    D204 :                             ;ROL emu_ptr+1,X                ;6
(1) 1267/    D204 :                             ;STA emu_ptr,X                  ;4                              
(1) 1267/    D204 :                             ;LDA emu_ptr+1,X                ;4
(1) 1267/    D204 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1267/    D204 :                             ;STA emu_ptr+1,X                ;4
(1) 1267/    D204 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1267/    D204 :                             
(1) 1267/    D204 :                             ;Method 3 - 30 cycles
(1) 1267/    D204 :                             ;TXA                                                    ;2
(1) 1267/    D204 :                             ;TAY                                                    ;2
(1) 1267/    D204 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1267/    D204 :                             ;ASL                                                    ;2
(1) 1267/    D204 :                             ;BCS upper                                              ;2
(1) 1267/    D204 :                             ;lower:
(1) 1267/    D204 :                             ;       ASL                                                     ;2
(1) 1267/    D204 :                             ;       TAX                                                     ;2
(1) 1267/    D204 :                             ;       BCS upper_lower                         ;2
(1) 1267/    D204 :                             ;       lower_lower:
(1) 1267/    D204 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1267/    D204 :                             ;       upper_lower:
(1) 1267/    D204 :                             ;               JMP (JUMP_TABLE2,X)
(1) 1267/    D204 :                             ;upper:
(1) 1267/    D204 :                             ;       ASL
(1) 1267/    D204 :                             ;       TAX
(1) 1267/    D204 :                             ;       BCS upper_upper
(1) 1267/    D204 :                             ;       lower_upper:
(1) 1267/    D204 :                             ;               JMP (JUMP_TABLE3,X)
(1) 1267/    D204 :                             ;       upper_upper:
(1) 1267/    D204 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1267/    D204 :                             ;After jump:
(1) 1267/    D204 :                             ;TYA                                                    ;2
(1) 1267/    D204 :                             ;TAX                                                    ;2
(1) 1267/    D204 :                             
(1) 1267/    D204 :                             ;Method 4 - 28 cycles
(1) 1267/    D204 :                             ;LDA (emu_PC,X)                 ;6
(1) 1267/    D204 :                             ;TAY                                    ;2
(1) 1267/    D204 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1267/    D204 :                             ;PHA                                    ;3
(1) 1267/    D204 :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1267/    D204 :                             ;PHA                                    ;3
(1) 1267/    D204 :                             ;RTS                                    ;6
(1) 1267/    D204 :                             
(1) 1267/    D204 :                             ;Method 5 - 30 cycles
(1) 1267/    D204 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1267/    D206 : A8                          TAY                                             ;2
(1) 1267/    D207 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1267/    D20A : 95 0A                       STA emu_ptr,X                   ;4
(1) 1267/    D20C : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1267/    D20F : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1267/    D211 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1267/    D214 :                                                     
(1) 1268/    D214 :                     
(1) 1269/    D214 :                     	;0xFD - SBC ABSX
(1) 1270/    D214 :                     	SBC_ABSX:
(1) 1271/    D214 : (MACRO)             		OP_MACRO 253, "SBC", "ABSX", "SBC_ABSX"
(1) 1271/    D214 :                             ;TODO
(1) 1272/    D214 : (MACRO)             		NEXT_MACRO
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 374 - 1/5/2022 12:19:0


(1) 1272/    D214 :                                             
(1) 1272/    D214 :  (MACRO-2)                  halt
(1) 1272/    D214 : 00                          BRK
(1) 1272/    D215 : 00                          BRK
(1) 1272/    D216 :                             
(1) 1272/    D216 :                             ;Method 1 - 60 cycles
(1) 1272/    D216 :                             ;Jump table must be page aligned!!!
(1) 1272/    D216 :                             ;LDA (emu_PC,X)                 ;6
(1) 1272/    D216 :                             ;ASL                                    ;2
(1) 1272/    D216 :                             ;STA emu_ptr,X                  ;4
(1) 1272/    D216 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1272/    D216 :                             ;ADC #0                                 ;2
(1) 1272/    D216 :                             ;STA emu_ptr+1,X                ;4
(1) 1272/    D216 :                             ;LDA (emu_ptr,X)                ;6
(1) 1272/    D216 :                             ;STA emu_ptr2,X                 ;4
(1) 1272/    D216 :                             ;INC emu_ptr,X                  ;6
(1) 1272/    D216 :                             ;BCC .skip                              ;2
(1) 1272/    D216 :                             ;       INC emu_ptr+1,X         ;6
(1) 1272/    D216 :                             ;.skip:
(1) 1272/    D216 :                             ;LDA (emu_ptr,X)                ;6
(1) 1272/    D216 :                             ;STA emu_ptr2+1,X               ;4
(1) 1272/    D216 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1272/    D216 :                             
(1) 1272/    D216 :                             ;Method 2 - 46 cycles
(1) 1272/    D216 :                             ;Jump table must be page aligned!!!
(1) 1272/    D216 :                             ;LDA (emu_PC,X)                 ;6
(1) 1272/    D216 :                             ;STZ emu_ptr+1,X                ;4
(1) 1272/    D216 :                             ;ASL                                    ;2
(1) 1272/    D216 :                             ;ROL emu_ptr+1,X                ;6
(1) 1272/    D216 :                             ;ASL                                    ;2
(1) 1272/    D216 :                             ;ROL emu_ptr+1,X                ;6
(1) 1272/    D216 :                             ;STA emu_ptr,X                  ;4                              
(1) 1272/    D216 :                             ;LDA emu_ptr+1,X                ;4
(1) 1272/    D216 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1272/    D216 :                             ;STA emu_ptr+1,X                ;4
(1) 1272/    D216 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1272/    D216 :                             
(1) 1272/    D216 :                             ;Method 3 - 30 cycles
(1) 1272/    D216 :                             ;TXA                                                    ;2
(1) 1272/    D216 :                             ;TAY                                                    ;2
(1) 1272/    D216 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1272/    D216 :                             ;ASL                                                    ;2
(1) 1272/    D216 :                             ;BCS upper                                              ;2
(1) 1272/    D216 :                             ;lower:
(1) 1272/    D216 :                             ;       ASL                                                     ;2
(1) 1272/    D216 :                             ;       TAX                                                     ;2
(1) 1272/    D216 :                             ;       BCS upper_lower                         ;2
(1) 1272/    D216 :                             ;       lower_lower:
(1) 1272/    D216 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1272/    D216 :                             ;       upper_lower:
(1) 1272/    D216 :                             ;               JMP (JUMP_TABLE2,X)
(1) 1272/    D216 :                             ;upper:
(1) 1272/    D216 :                             ;       ASL
(1) 1272/    D216 :                             ;       TAX
(1) 1272/    D216 :                             ;       BCS upper_upper
(1) 1272/    D216 :                             ;       lower_upper:
(1) 1272/    D216 :                             ;               JMP (JUMP_TABLE3,X)
(1) 1272/    D216 :                             ;       upper_upper:
(1) 1272/    D216 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1272/    D216 :                             ;After jump:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 375 - 1/5/2022 12:19:0


(1) 1272/    D216 :                             ;TYA                                                    ;2
(1) 1272/    D216 :                             ;TAX                                                    ;2
(1) 1272/    D216 :                             
(1) 1272/    D216 :                             ;Method 4 - 28 cycles
(1) 1272/    D216 :                             ;LDA (emu_PC,X)                 ;6
(1) 1272/    D216 :                             ;TAY                                    ;2
(1) 1272/    D216 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1272/    D216 :                             ;PHA                                    ;3
(1) 1272/    D216 :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1272/    D216 :                             ;PHA                                    ;3
(1) 1272/    D216 :                             ;RTS                                    ;6
(1) 1272/    D216 :                             
(1) 1272/    D216 :                             ;Method 5 - 30 cycles
(1) 1272/    D216 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1272/    D218 : A8                          TAY                                             ;2
(1) 1272/    D219 : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1272/    D21C : 95 0A                       STA emu_ptr,X                   ;4
(1) 1272/    D21E : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1272/    D221 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1272/    D223 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1272/    D226 :                                                     
(1) 1273/    D226 :                     
(1) 1274/    D226 :                     	;0xFE - INC ABSX
(1) 1275/    D226 :                     	INC_ABSX:
(1) 1276/    D226 : (MACRO)             		OP_MACRO 254, "INC", "ABSX", "INC_ABSX"
(1) 1276/    D226 :                             ;TODO
(1) 1277/    D226 : (MACRO)             		NEXT_MACRO
(1) 1277/    D226 :                                             
(1) 1277/    D226 :  (MACRO-2)                  halt
(1) 1277/    D226 : 00                          BRK
(1) 1277/    D227 : 00                          BRK
(1) 1277/    D228 :                             
(1) 1277/    D228 :                             ;Method 1 - 60 cycles
(1) 1277/    D228 :                             ;Jump table must be page aligned!!!
(1) 1277/    D228 :                             ;LDA (emu_PC,X)                 ;6
(1) 1277/    D228 :                             ;ASL                                    ;2
(1) 1277/    D228 :                             ;STA emu_ptr,X                  ;4
(1) 1277/    D228 :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1277/    D228 :                             ;ADC #0                                 ;2
(1) 1277/    D228 :                             ;STA emu_ptr+1,X                ;4
(1) 1277/    D228 :                             ;LDA (emu_ptr,X)                ;6
(1) 1277/    D228 :                             ;STA emu_ptr2,X                 ;4
(1) 1277/    D228 :                             ;INC emu_ptr,X                  ;6
(1) 1277/    D228 :                             ;BCC .skip                              ;2
(1) 1277/    D228 :                             ;       INC emu_ptr+1,X         ;6
(1) 1277/    D228 :                             ;.skip:
(1) 1277/    D228 :                             ;LDA (emu_ptr,X)                ;6
(1) 1277/    D228 :                             ;STA emu_ptr2+1,X               ;4
(1) 1277/    D228 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1277/    D228 :                             
(1) 1277/    D228 :                             ;Method 2 - 46 cycles
(1) 1277/    D228 :                             ;Jump table must be page aligned!!!
(1) 1277/    D228 :                             ;LDA (emu_PC,X)                 ;6
(1) 1277/    D228 :                             ;STZ emu_ptr+1,X                ;4
(1) 1277/    D228 :                             ;ASL                                    ;2
(1) 1277/    D228 :                             ;ROL emu_ptr+1,X                ;6
(1) 1277/    D228 :                             ;ASL                                    ;2
(1) 1277/    D228 :                             ;ROL emu_ptr+1,X                ;6
(1) 1277/    D228 :                             ;STA emu_ptr,X                  ;4                              
(1) 1277/    D228 :                             ;LDA emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 376 - 1/5/2022 12:19:0


(1) 1277/    D228 :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1277/    D228 :                             ;STA emu_ptr+1,X                ;4
(1) 1277/    D228 :                             ;JMP (emu_ptr2,X)               ;6
(1) 1277/    D228 :                             
(1) 1277/    D228 :                             ;Method 3 - 30 cycles
(1) 1277/    D228 :                             ;TXA                                                    ;2
(1) 1277/    D228 :                             ;TAY                                                    ;2
(1) 1277/    D228 :                             ;LDA (emu_PC,X)                                 ;6
(1) 1277/    D228 :                             ;ASL                                                    ;2
(1) 1277/    D228 :                             ;BCS upper                                              ;2
(1) 1277/    D228 :                             ;lower:
(1) 1277/    D228 :                             ;       ASL                                                     ;2
(1) 1277/    D228 :                             ;       TAX                                                     ;2
(1) 1277/    D228 :                             ;       BCS upper_lower                         ;2
(1) 1277/    D228 :                             ;       lower_lower:
(1) 1277/    D228 :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1277/    D228 :                             ;       upper_lower:
(1) 1277/    D228 :                             ;               JMP (JUMP_TABLE2,X)
(1) 1277/    D228 :                             ;upper:
(1) 1277/    D228 :                             ;       ASL
(1) 1277/    D228 :                             ;       TAX
(1) 1277/    D228 :                             ;       BCS upper_upper
(1) 1277/    D228 :                             ;       lower_upper:
(1) 1277/    D228 :                             ;               JMP (JUMP_TABLE3,X)
(1) 1277/    D228 :                             ;       upper_upper:
(1) 1277/    D228 :                             ;               JMP (JUMP_TABLE4,X)
(1) 1277/    D228 :                             ;After jump:
(1) 1277/    D228 :                             ;TYA                                                    ;2
(1) 1277/    D228 :                             ;TAX                                                    ;2
(1) 1277/    D228 :                             
(1) 1277/    D228 :                             ;Method 4 - 28 cycles
(1) 1277/    D228 :                             ;LDA (emu_PC,X)                 ;6
(1) 1277/    D228 :                             ;TAY                                    ;2
(1) 1277/    D228 :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1277/    D228 :                             ;PHA                                    ;3
(1) 1277/    D228 :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1277/    D228 :                             ;PHA                                    ;3
(1) 1277/    D228 :                             ;RTS                                    ;6
(1) 1277/    D228 :                             
(1) 1277/    D228 :                             ;Method 5 - 30 cycles
(1) 1277/    D228 : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1277/    D22A : A8                          TAY                                             ;2
(1) 1277/    D22B : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1277/    D22E : 95 0A                       STA emu_ptr,X                   ;4
(1) 1277/    D230 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1277/    D233 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1277/    D235 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1277/    D238 :                                                     
(1) 1278/    D238 :                     
(1) 1279/    D238 :                     	;0xFF - NOP
(1) 1280/    D238 :                     	NOP_0xFF:
(1) 1281/    D238 : (MACRO)             		OP_MACRO 255, "NOP", "IMP", "NOP_0xFF"
(1) 1281/    D238 :                             ;TODO
(1) 1282/    D238 : (MACRO)             		NEXT_MACRO
(1) 1282/    D238 :                                             
(1) 1282/    D238 :  (MACRO-2)                  halt
(1) 1282/    D238 : 00                          BRK
(1) 1282/    D239 : 00                          BRK
(1) 1282/    D23A :                             
(1) 1282/    D23A :                             ;Method 1 - 60 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 377 - 1/5/2022 12:19:0


(1) 1282/    D23A :                             ;Jump table must be page aligned!!!
(1) 1282/    D23A :                             ;LDA (emu_PC,X)                 ;6
(1) 1282/    D23A :                             ;ASL                                    ;2
(1) 1282/    D23A :                             ;STA emu_ptr,X                  ;4
(1) 1282/    D23A :                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1282/    D23A :                             ;ADC #0                                 ;2
(1) 1282/    D23A :                             ;STA emu_ptr+1,X                ;4
(1) 1282/    D23A :                             ;LDA (emu_ptr,X)                ;6
(1) 1282/    D23A :                             ;STA emu_ptr2,X                 ;4
(1) 1282/    D23A :                             ;INC emu_ptr,X                  ;6
(1) 1282/    D23A :                             ;BCC .skip                              ;2
(1) 1282/    D23A :                             ;       INC emu_ptr+1,X         ;6
(1) 1282/    D23A :                             ;.skip:
(1) 1282/    D23A :                             ;LDA (emu_ptr,X)                ;6
(1) 1282/    D23A :                             ;STA emu_ptr2+1,X               ;4
(1) 1282/    D23A :                             ;JMP (emu_ptr2,X)               ;6
(1) 1282/    D23A :                             
(1) 1282/    D23A :                             ;Method 2 - 46 cycles
(1) 1282/    D23A :                             ;Jump table must be page aligned!!!
(1) 1282/    D23A :                             ;LDA (emu_PC,X)                 ;6
(1) 1282/    D23A :                             ;STZ emu_ptr+1,X                ;4
(1) 1282/    D23A :                             ;ASL                                    ;2
(1) 1282/    D23A :                             ;ROL emu_ptr+1,X                ;6
(1) 1282/    D23A :                             ;ASL                                    ;2
(1) 1282/    D23A :                             ;ROL emu_ptr+1,X                ;6
(1) 1282/    D23A :                             ;STA emu_ptr,X                  ;4                              
(1) 1282/    D23A :                             ;LDA emu_ptr+1,X                ;4
(1) 1282/    D23A :                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1282/    D23A :                             ;STA emu_ptr+1,X                ;4
(1) 1282/    D23A :                             ;JMP (emu_ptr2,X)               ;6
(1) 1282/    D23A :                             
(1) 1282/    D23A :                             ;Method 3 - 30 cycles
(1) 1282/    D23A :                             ;TXA                                                    ;2
(1) 1282/    D23A :                             ;TAY                                                    ;2
(1) 1282/    D23A :                             ;LDA (emu_PC,X)                                 ;6
(1) 1282/    D23A :                             ;ASL                                                    ;2
(1) 1282/    D23A :                             ;BCS upper                                              ;2
(1) 1282/    D23A :                             ;lower:
(1) 1282/    D23A :                             ;       ASL                                                     ;2
(1) 1282/    D23A :                             ;       TAX                                                     ;2
(1) 1282/    D23A :                             ;       BCS upper_lower                         ;2
(1) 1282/    D23A :                             ;       lower_lower:
(1) 1282/    D23A :                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1282/    D23A :                             ;       upper_lower:
(1) 1282/    D23A :                             ;               JMP (JUMP_TABLE2,X)
(1) 1282/    D23A :                             ;upper:
(1) 1282/    D23A :                             ;       ASL
(1) 1282/    D23A :                             ;       TAX
(1) 1282/    D23A :                             ;       BCS upper_upper
(1) 1282/    D23A :                             ;       lower_upper:
(1) 1282/    D23A :                             ;               JMP (JUMP_TABLE3,X)
(1) 1282/    D23A :                             ;       upper_upper:
(1) 1282/    D23A :                             ;               JMP (JUMP_TABLE4,X)
(1) 1282/    D23A :                             ;After jump:
(1) 1282/    D23A :                             ;TYA                                                    ;2
(1) 1282/    D23A :                             ;TAX                                                    ;2
(1) 1282/    D23A :                             
(1) 1282/    D23A :                             ;Method 4 - 28 cycles
(1) 1282/    D23A :                             ;LDA (emu_PC,X)                 ;6
(1) 1282/    D23A :                             ;TAY                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 378 - 1/5/2022 12:19:0


(1) 1282/    D23A :                             ;LDA JUMP_TABLE,Y               ;4
(1) 1282/    D23A :                             ;PHA                                    ;3
(1) 1282/    D23A :                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1282/    D23A :                             ;PHA                                    ;3
(1) 1282/    D23A :                             ;RTS                                    ;6
(1) 1282/    D23A :                             
(1) 1282/    D23A :                             ;Method 5 - 30 cycles
(1) 1282/    D23A : A1 02                       LDA (emu_PC,X)                  ;6
(1) 1282/    D23C : A8                          TAY                                             ;2
(1) 1282/    D23D : B9 4A D2                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1282/    D240 : 95 0A                       STA emu_ptr,X                   ;4
(1) 1282/    D242 : B9 4A D3                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1282/    D245 : 95 0B                       STA emu_ptr+1,X                 ;4
(1) 1282/    D247 : 7C 0A 00                    JMP (emu_ptr,X)                 ;6
(1) 1282/    D24A :                                                     
(1) 1283/    D24A :                     
(1) 1284/    D24A :                     	instructions_end:
(1) 1285/    D24A : =$1200              instructions_size equ instructions_end-instructions_begin
(1) 1286/    D24A :                     
     105/    D24A :                     	include "jump-table.asm"
(1)    1/    D24A :                     	;Jump table
(1)    2/    D24A :                     	jump_table_begin:
(1)    3/    D24A :                     
(1)    4/    D24A :                     	JUMP_TABLE_LO:
(1)    5/    D24A : 4A                  	FCB lo(BRK_IMP)
(1)    6/    D24B : 5C                  	FCB lo(ORA_IX)
(1)    7/    D24C : 6E                  	FCB lo(NOP_0x2)
(1)    8/    D24D : 80                  	FCB lo(NOP_0x3)
(1)    9/    D24E : 92                  	FCB lo(NOP_0x4)
(1)   10/    D24F : A4                  	FCB lo(ORA_ZP)
(1)   11/    D250 : B6                  	FCB lo(ASL_ZP)
(1)   12/    D251 : C8                  	FCB lo(NOP_0x7)
(1)   13/    D252 : DA                  	FCB lo(PHP_IMP)
(1)   14/    D253 : EC                  	FCB lo(ORA_IMMED)
(1)   15/    D254 : FE                  	FCB lo(ASL_A)
(1)   16/    D255 : 10                  	FCB lo(NOP_0xB)
(1)   17/    D256 : 22                  	FCB lo(NOP_0xC)
(1)   18/    D257 : 34                  	FCB lo(ORA_ABS)
(1)   19/    D258 : 46                  	FCB lo(ASL_ABS)
(1)   20/    D259 : 58                  	FCB lo(NOP_0xF)
(1)   21/    D25A : 6A                  	FCB lo(BPL_REL)
(1)   22/    D25B : 7C                  	FCB lo(ORA_IY)
(1)   23/    D25C : 8E                  	FCB lo(NOP_0x12)
(1)   24/    D25D : A0                  	FCB lo(NOP_0x13)
(1)   25/    D25E : B2                  	FCB lo(NOP_0x14)
(1)   26/    D25F : C4                  	FCB lo(ORA_ZPX)
(1)   27/    D260 : D6                  	FCB lo(ASL_ZPX)
(1)   28/    D261 : E8                  	FCB lo(NOP_0x17)
(1)   29/    D262 : FA                  	FCB lo(CLC_IMP)
(1)   30/    D263 : 0C                  	FCB lo(ORA_ABSY)
(1)   31/    D264 : 1E                  	FCB lo(NOP_0x1A)
(1)   32/    D265 : 30                  	FCB lo(NOP_0x1B)
(1)   33/    D266 : 42                  	FCB lo(NOP_0x1C)
(1)   34/    D267 : 54                  	FCB lo(ORA_ABSX)
(1)   35/    D268 : 66                  	FCB lo(ASL_ABSX)
(1)   36/    D269 : 78                  	FCB lo(NOP_0x1F)
(1)   37/    D26A : 8A                  	FCB lo(JSR_ABS)
(1)   38/    D26B : 9C                  	FCB lo(AND_IX)
(1)   39/    D26C : AE                  	FCB lo(NOP_0x22)
(1)   40/    D26D : C0                  	FCB lo(NOP_0x23)
 AS V1.42 Beta [Bld 157] - Source File main.asm(jump-table.asm) - Page 379 - 1/5/2022 12:19:0


(1)   41/    D26E : D2                  	FCB lo(BIT_ZP)
(1)   42/    D26F : E4                  	FCB lo(AND_ZP)
(1)   43/    D270 : F6                  	FCB lo(ROL_ZP)
(1)   44/    D271 : 08                  	FCB lo(NOP_0x27)
(1)   45/    D272 : 1A                  	FCB lo(PLP_IMP)
(1)   46/    D273 : 2C                  	FCB lo(AND_IMMED)
(1)   47/    D274 : 3E                  	FCB lo(ROL_A)
(1)   48/    D275 : 50                  	FCB lo(NOP_0x2B)
(1)   49/    D276 : 62                  	FCB lo(BIT_ABS)
(1)   50/    D277 : 74                  	FCB lo(AND_ABS)
(1)   51/    D278 : 86                  	FCB lo(ROL_ABS)
(1)   52/    D279 : 98                  	FCB lo(NOP_0x2F)
(1)   53/    D27A : AA                  	FCB lo(BMI_REL)
(1)   54/    D27B : BC                  	FCB lo(AND_IY)
(1)   55/    D27C : CE                  	FCB lo(NOP_0x32)
(1)   56/    D27D : E0                  	FCB lo(NOP_0x33)
(1)   57/    D27E : F2                  	FCB lo(NOP_0x34)
(1)   58/    D27F : 04                  	FCB lo(AND_ZPX)
(1)   59/    D280 : 16                  	FCB lo(ROL_ZPX)
(1)   60/    D281 : 28                  	FCB lo(NOP_0x37)
(1)   61/    D282 : 3A                  	FCB lo(SEC_IMP)
(1)   62/    D283 : 4C                  	FCB lo(AND_ABSY)
(1)   63/    D284 : 5E                  	FCB lo(NOP_0x3A)
(1)   64/    D285 : 70                  	FCB lo(NOP_0x3B)
(1)   65/    D286 : 82                  	FCB lo(NOP_0x3C)
(1)   66/    D287 : 94                  	FCB lo(AND_ABSX)
(1)   67/    D288 : A6                  	FCB lo(ROL_ABSX)
(1)   68/    D289 : B8                  	FCB lo(NOP_0x3F)
(1)   69/    D28A : CA                  	FCB lo(RTI_IMP)
(1)   70/    D28B : DC                  	FCB lo(EOR_IX)
(1)   71/    D28C : EE                  	FCB lo(NOP_0x42)
(1)   72/    D28D : 00                  	FCB lo(NOP_0x43)
(1)   73/    D28E : 12                  	FCB lo(NOP_0x44)
(1)   74/    D28F : 24                  	FCB lo(EOR_ZP)
(1)   75/    D290 : 36                  	FCB lo(LSR_ZP)
(1)   76/    D291 : 48                  	FCB lo(NOP_0x47)
(1)   77/    D292 : 5A                  	FCB lo(PHA_IMP)
(1)   78/    D293 : 6C                  	FCB lo(EOR_IMMED)
(1)   79/    D294 : 7E                  	FCB lo(LSR_A)
(1)   80/    D295 : 90                  	FCB lo(NOP_0x4B)
(1)   81/    D296 : A2                  	FCB lo(JMP_ABS)
(1)   82/    D297 : B4                  	FCB lo(EOR_ABS)
(1)   83/    D298 : C6                  	FCB lo(LSR_ABS)
(1)   84/    D299 : D8                  	FCB lo(NOP_0x4F)
(1)   85/    D29A : EA                  	FCB lo(BVC_REL)
(1)   86/    D29B : FC                  	FCB lo(EOR_IY)
(1)   87/    D29C : 0E                  	FCB lo(NOP_0x52)
(1)   88/    D29D : 20                  	FCB lo(NOP_0x53)
(1)   89/    D29E : 32                  	FCB lo(NOP_0x54)
(1)   90/    D29F : 44                  	FCB lo(EOR_ZPX)
(1)   91/    D2A0 : 56                  	FCB lo(LSR_ZPX)
(1)   92/    D2A1 : 68                  	FCB lo(NOP_0x57)
(1)   93/    D2A2 : 7A                  	FCB lo(CLI_IMP)
(1)   94/    D2A3 : 8C                  	FCB lo(EOR_ABSY)
(1)   95/    D2A4 : 9E                  	FCB lo(NOP_0x5A)
(1)   96/    D2A5 : B0                  	FCB lo(NOP_0x5B)
(1)   97/    D2A6 : C2                  	FCB lo(NOP_0x5C)
(1)   98/    D2A7 : D4                  	FCB lo(EOR_ABSX)
(1)   99/    D2A8 : E6                  	FCB lo(LSR_ABSX)
(1)  100/    D2A9 : F8                  	FCB lo(NOP_0x5F)
 AS V1.42 Beta [Bld 157] - Source File main.asm(jump-table.asm) - Page 380 - 1/5/2022 12:19:0


(1)  101/    D2AA : 0A                  	FCB lo(RTS_IMP)
(1)  102/    D2AB : 1C                  	FCB lo(ADC_IX)
(1)  103/    D2AC : 2E                  	FCB lo(NOP_0x62)
(1)  104/    D2AD : 40                  	FCB lo(NOP_0x63)
(1)  105/    D2AE : 52                  	FCB lo(NOP_0x64)
(1)  106/    D2AF : 64                  	FCB lo(ADC_ZP)
(1)  107/    D2B0 : 76                  	FCB lo(ROR_ZP)
(1)  108/    D2B1 : 88                  	FCB lo(NOP_0x67)
(1)  109/    D2B2 : 9A                  	FCB lo(PLA_IMP)
(1)  110/    D2B3 : AC                  	FCB lo(ADC_IMMED)
(1)  111/    D2B4 : BE                  	FCB lo(ROR_A)
(1)  112/    D2B5 : D0                  	FCB lo(NOP_0x6B)
(1)  113/    D2B6 : E2                  	FCB lo(JMP_I)
(1)  114/    D2B7 : F4                  	FCB lo(ADC_ABS)
(1)  115/    D2B8 : 06                  	FCB lo(ROR_ABS)
(1)  116/    D2B9 : 18                  	FCB lo(NOP_0x6F)
(1)  117/    D2BA : 2A                  	FCB lo(BVS_REL)
(1)  118/    D2BB : 3C                  	FCB lo(ADC_IY)
(1)  119/    D2BC : 4E                  	FCB lo(NOP_0x72)
(1)  120/    D2BD : 60                  	FCB lo(NOP_0x73)
(1)  121/    D2BE : 72                  	FCB lo(NOP_0x74)
(1)  122/    D2BF : 84                  	FCB lo(ADC_ZPX)
(1)  123/    D2C0 : 96                  	FCB lo(ROR_ZPX)
(1)  124/    D2C1 : A8                  	FCB lo(NOP_0x77)
(1)  125/    D2C2 : BA                  	FCB lo(SEI_IMP)
(1)  126/    D2C3 : CC                  	FCB lo(ADC_ABSY)
(1)  127/    D2C4 : DE                  	FCB lo(NOP_0x7A)
(1)  128/    D2C5 : F0                  	FCB lo(NOP_0x7B)
(1)  129/    D2C6 : 02                  	FCB lo(NOP_0x7C)
(1)  130/    D2C7 : 14                  	FCB lo(ADC_ABSX)
(1)  131/    D2C8 : 26                  	FCB lo(ROR_ABSX)
(1)  132/    D2C9 : 38                  	FCB lo(NOP_0x7F)
(1)  133/    D2CA : 4A                  	FCB lo(NOP_0x80)
(1)  134/    D2CB : 5C                  	FCB lo(STA_IX)
(1)  135/    D2CC : 6E                  	FCB lo(NOP_0x82)
(1)  136/    D2CD : 80                  	FCB lo(NOP_0x83)
(1)  137/    D2CE : 92                  	FCB lo(STY_ZP)
(1)  138/    D2CF : A4                  	FCB lo(STA_ZP)
(1)  139/    D2D0 : B6                  	FCB lo(STX_ZP)
(1)  140/    D2D1 : C8                  	FCB lo(NOP_0x87)
(1)  141/    D2D2 : DA                  	FCB lo(DEY_IMP)
(1)  142/    D2D3 : EC                  	FCB lo(NOP_0x89)
(1)  143/    D2D4 : FE                  	FCB lo(TXA_IMP)
(1)  144/    D2D5 : 10                  	FCB lo(NOP_0x8B)
(1)  145/    D2D6 : 22                  	FCB lo(STY_ABS)
(1)  146/    D2D7 : 34                  	FCB lo(STA_ABS)
(1)  147/    D2D8 : 46                  	FCB lo(STX_ABS)
(1)  148/    D2D9 : 58                  	FCB lo(NOP_0x8F)
(1)  149/    D2DA : 6A                  	FCB lo(BCC_REL)
(1)  150/    D2DB : 7C                  	FCB lo(STA_IY)
(1)  151/    D2DC : 8E                  	FCB lo(NOP_0x92)
(1)  152/    D2DD : A0                  	FCB lo(NOP_0x93)
(1)  153/    D2DE : B2                  	FCB lo(STY_ZPX)
(1)  154/    D2DF : C4                  	FCB lo(STA_ZPX)
(1)  155/    D2E0 : D6                  	FCB lo(STX_ZPY)
(1)  156/    D2E1 : E8                  	FCB lo(NOP_0x97)
(1)  157/    D2E2 : FA                  	FCB lo(TYA_IMP)
(1)  158/    D2E3 : 0C                  	FCB lo(STA_ABSY)
(1)  159/    D2E4 : 1E                  	FCB lo(TXS_IMP)
(1)  160/    D2E5 : 30                  	FCB lo(NOP_0x9B)
 AS V1.42 Beta [Bld 157] - Source File main.asm(jump-table.asm) - Page 381 - 1/5/2022 12:19:0


(1)  161/    D2E6 : 42                  	FCB lo(NOP_0x9C)
(1)  162/    D2E7 : 54                  	FCB lo(STA_ABSX)
(1)  163/    D2E8 : 66                  	FCB lo(NOP_0x9E)
(1)  164/    D2E9 : 78                  	FCB lo(NOP_0x9F)
(1)  165/    D2EA : 8A                  	FCB lo(LDY_IMMED)
(1)  166/    D2EB : 9C                  	FCB lo(LDA_IX)
(1)  167/    D2EC : AE                  	FCB lo(LDX_IMMED)
(1)  168/    D2ED : C0                  	FCB lo(NOP_0xA3)
(1)  169/    D2EE : D2                  	FCB lo(LDY_ZP)
(1)  170/    D2EF : E4                  	FCB lo(LDA_ZP)
(1)  171/    D2F0 : F6                  	FCB lo(LDX_ZP)
(1)  172/    D2F1 : 08                  	FCB lo(NOP_0xA7)
(1)  173/    D2F2 : 1A                  	FCB lo(TAY_IMP)
(1)  174/    D2F3 : 2C                  	FCB lo(LDA_IMMED)
(1)  175/    D2F4 : 3E                  	FCB lo(TAX_IMP)
(1)  176/    D2F5 : 50                  	FCB lo(NOP_0xAB)
(1)  177/    D2F6 : 62                  	FCB lo(LDY_ABS)
(1)  178/    D2F7 : 74                  	FCB lo(LDA_ABS)
(1)  179/    D2F8 : 86                  	FCB lo(LDX_ABS)
(1)  180/    D2F9 : 98                  	FCB lo(NOP_0xAF)
(1)  181/    D2FA : AA                  	FCB lo(BCS_REL)
(1)  182/    D2FB : BC                  	FCB lo(LDA_IY)
(1)  183/    D2FC : CE                  	FCB lo(NOP_0xB2)
(1)  184/    D2FD : E0                  	FCB lo(NOP_0xB3)
(1)  185/    D2FE : F2                  	FCB lo(LDY_ZPX)
(1)  186/    D2FF : 04                  	FCB lo(LDA_ZPX)
(1)  187/    D300 : 16                  	FCB lo(LDX_ZPY)
(1)  188/    D301 : 28                  	FCB lo(NOP_0xB7)
(1)  189/    D302 : 3A                  	FCB lo(CLV_IMP)
(1)  190/    D303 : 4C                  	FCB lo(LDA_ABSY)
(1)  191/    D304 : 5E                  	FCB lo(TSX_IMP)
(1)  192/    D305 : 70                  	FCB lo(NOP_0xBB)
(1)  193/    D306 : 82                  	FCB lo(LDY_ABSX)
(1)  194/    D307 : 94                  	FCB lo(LDA_ABSX)
(1)  195/    D308 : A6                  	FCB lo(LDX_ABSY)
(1)  196/    D309 : B8                  	FCB lo(NOP_0xBF)
(1)  197/    D30A : CA                  	FCB lo(CPY_IMMED)
(1)  198/    D30B : DC                  	FCB lo(CMP_IX)
(1)  199/    D30C : EE                  	FCB lo(NOP_0xC2)
(1)  200/    D30D : 00                  	FCB lo(NOP_0xC3)
(1)  201/    D30E : 12                  	FCB lo(CPY_ZP)
(1)  202/    D30F : 24                  	FCB lo(CMP_ZP)
(1)  203/    D310 : 36                  	FCB lo(DEC_ZP)
(1)  204/    D311 : 48                  	FCB lo(NOP_0xC7)
(1)  205/    D312 : 5A                  	FCB lo(INY_IMP)
(1)  206/    D313 : 6C                  	FCB lo(CMP_IMMED)
(1)  207/    D314 : 7E                  	FCB lo(DEX_IMP)
(1)  208/    D315 : 90                  	FCB lo(NOP_0xCB)
(1)  209/    D316 : A2                  	FCB lo(CPY_ABS)
(1)  210/    D317 : B4                  	FCB lo(CMP_ABS)
(1)  211/    D318 : C6                  	FCB lo(DEC_ABS)
(1)  212/    D319 : D8                  	FCB lo(NOP_0xCF)
(1)  213/    D31A : EA                  	FCB lo(BNE_REL)
(1)  214/    D31B : FC                  	FCB lo(CMP_IY)
(1)  215/    D31C : 0E                  	FCB lo(NOP_0xD2)
(1)  216/    D31D : 20                  	FCB lo(NOP_0xD3)
(1)  217/    D31E : 32                  	FCB lo(NOP_0xD4)
(1)  218/    D31F : 44                  	FCB lo(CMP_ZPX)
(1)  219/    D320 : 56                  	FCB lo(DEC_ZPX)
(1)  220/    D321 : 68                  	FCB lo(NOP_0xD7)
 AS V1.42 Beta [Bld 157] - Source File main.asm(jump-table.asm) - Page 382 - 1/5/2022 12:19:0


(1)  221/    D322 : 7A                  	FCB lo(CLD_IMP)
(1)  222/    D323 : 8C                  	FCB lo(CMP_ABSY)
(1)  223/    D324 : 9E                  	FCB lo(NOP_0xDA)
(1)  224/    D325 : B0                  	FCB lo(NOP_0xDB)
(1)  225/    D326 : C2                  	FCB lo(NOP_0xDC)
(1)  226/    D327 : D4                  	FCB lo(CMP_ABSX)
(1)  227/    D328 : E6                  	FCB lo(DEC_ABSX)
(1)  228/    D329 : F8                  	FCB lo(NOP_0xDF)
(1)  229/    D32A : 0A                  	FCB lo(CPX_IMMED)
(1)  230/    D32B : 1C                  	FCB lo(SBC_IX)
(1)  231/    D32C : 2E                  	FCB lo(NOP_0xE2)
(1)  232/    D32D : 40                  	FCB lo(NOP_0xE3)
(1)  233/    D32E : 52                  	FCB lo(CPX_ZP)
(1)  234/    D32F : 64                  	FCB lo(SBC_ZP)
(1)  235/    D330 : 76                  	FCB lo(INC_ZP)
(1)  236/    D331 : 88                  	FCB lo(NOP_0xE7)
(1)  237/    D332 : 9A                  	FCB lo(INX_IMP)
(1)  238/    D333 : AC                  	FCB lo(SBC_IMMED)
(1)  239/    D334 : BE                  	FCB lo(NOP_IMP)
(1)  240/    D335 : D0                  	FCB lo(NOP_0xEB)
(1)  241/    D336 : E2                  	FCB lo(CPX_ABS)
(1)  242/    D337 : F4                  	FCB lo(SBC_ABS)
(1)  243/    D338 : 06                  	FCB lo(INC_ABS)
(1)  244/    D339 : 18                  	FCB lo(NOP_0xEF)
(1)  245/    D33A : 2A                  	FCB lo(BEQ_REL)
(1)  246/    D33B : 3C                  	FCB lo(SBC_IY)
(1)  247/    D33C : 4E                  	FCB lo(NOP_0xF2)
(1)  248/    D33D : 60                  	FCB lo(NOP_0xF3)
(1)  249/    D33E : 72                  	FCB lo(NOP_0xF4)
(1)  250/    D33F : 84                  	FCB lo(SBC_ZPX)
(1)  251/    D340 : 96                  	FCB lo(INC_ZPX)
(1)  252/    D341 : A8                  	FCB lo(NOP_0xF7)
(1)  253/    D342 : BA                  	FCB lo(SED_IMP)
(1)  254/    D343 : CC                  	FCB lo(SBC_ABSY)
(1)  255/    D344 : DE                  	FCB lo(NOP_0xFA)
(1)  256/    D345 : F0                  	FCB lo(NOP_0xFB)
(1)  257/    D346 : 02                  	FCB lo(NOP_0xFC)
(1)  258/    D347 : 14                  	FCB lo(SBC_ABSX)
(1)  259/    D348 : 26                  	FCB lo(INC_ABSX)
(1)  260/    D349 : 38                  	FCB lo(NOP_0xFF)
(1)  261/    D34A :                     
(1)  262/    D34A :                     	JUMP_TABLE_HI:
(1)  263/    D34A : C0                  	FCB hi(BRK_IMP)
(1)  264/    D34B : C0                  	FCB hi(ORA_IX)
(1)  265/    D34C : C0                  	FCB hi(NOP_0x2)
(1)  266/    D34D : C0                  	FCB hi(NOP_0x3)
(1)  267/    D34E : C0                  	FCB hi(NOP_0x4)
(1)  268/    D34F : C0                  	FCB hi(ORA_ZP)
(1)  269/    D350 : C0                  	FCB hi(ASL_ZP)
(1)  270/    D351 : C0                  	FCB hi(NOP_0x7)
(1)  271/    D352 : C0                  	FCB hi(PHP_IMP)
(1)  272/    D353 : C0                  	FCB hi(ORA_IMMED)
(1)  273/    D354 : C0                  	FCB hi(ASL_A)
(1)  274/    D355 : C1                  	FCB hi(NOP_0xB)
(1)  275/    D356 : C1                  	FCB hi(NOP_0xC)
(1)  276/    D357 : C1                  	FCB hi(ORA_ABS)
(1)  277/    D358 : C1                  	FCB hi(ASL_ABS)
(1)  278/    D359 : C1                  	FCB hi(NOP_0xF)
(1)  279/    D35A : C1                  	FCB hi(BPL_REL)
(1)  280/    D35B : C1                  	FCB hi(ORA_IY)
 AS V1.42 Beta [Bld 157] - Source File main.asm(jump-table.asm) - Page 383 - 1/5/2022 12:19:0


(1)  281/    D35C : C1                  	FCB hi(NOP_0x12)
(1)  282/    D35D : C1                  	FCB hi(NOP_0x13)
(1)  283/    D35E : C1                  	FCB hi(NOP_0x14)
(1)  284/    D35F : C1                  	FCB hi(ORA_ZPX)
(1)  285/    D360 : C1                  	FCB hi(ASL_ZPX)
(1)  286/    D361 : C1                  	FCB hi(NOP_0x17)
(1)  287/    D362 : C1                  	FCB hi(CLC_IMP)
(1)  288/    D363 : C2                  	FCB hi(ORA_ABSY)
(1)  289/    D364 : C2                  	FCB hi(NOP_0x1A)
(1)  290/    D365 : C2                  	FCB hi(NOP_0x1B)
(1)  291/    D366 : C2                  	FCB hi(NOP_0x1C)
(1)  292/    D367 : C2                  	FCB hi(ORA_ABSX)
(1)  293/    D368 : C2                  	FCB hi(ASL_ABSX)
(1)  294/    D369 : C2                  	FCB hi(NOP_0x1F)
(1)  295/    D36A : C2                  	FCB hi(JSR_ABS)
(1)  296/    D36B : C2                  	FCB hi(AND_IX)
(1)  297/    D36C : C2                  	FCB hi(NOP_0x22)
(1)  298/    D36D : C2                  	FCB hi(NOP_0x23)
(1)  299/    D36E : C2                  	FCB hi(BIT_ZP)
(1)  300/    D36F : C2                  	FCB hi(AND_ZP)
(1)  301/    D370 : C2                  	FCB hi(ROL_ZP)
(1)  302/    D371 : C3                  	FCB hi(NOP_0x27)
(1)  303/    D372 : C3                  	FCB hi(PLP_IMP)
(1)  304/    D373 : C3                  	FCB hi(AND_IMMED)
(1)  305/    D374 : C3                  	FCB hi(ROL_A)
(1)  306/    D375 : C3                  	FCB hi(NOP_0x2B)
(1)  307/    D376 : C3                  	FCB hi(BIT_ABS)
(1)  308/    D377 : C3                  	FCB hi(AND_ABS)
(1)  309/    D378 : C3                  	FCB hi(ROL_ABS)
(1)  310/    D379 : C3                  	FCB hi(NOP_0x2F)
(1)  311/    D37A : C3                  	FCB hi(BMI_REL)
(1)  312/    D37B : C3                  	FCB hi(AND_IY)
(1)  313/    D37C : C3                  	FCB hi(NOP_0x32)
(1)  314/    D37D : C3                  	FCB hi(NOP_0x33)
(1)  315/    D37E : C3                  	FCB hi(NOP_0x34)
(1)  316/    D37F : C4                  	FCB hi(AND_ZPX)
(1)  317/    D380 : C4                  	FCB hi(ROL_ZPX)
(1)  318/    D381 : C4                  	FCB hi(NOP_0x37)
(1)  319/    D382 : C4                  	FCB hi(SEC_IMP)
(1)  320/    D383 : C4                  	FCB hi(AND_ABSY)
(1)  321/    D384 : C4                  	FCB hi(NOP_0x3A)
(1)  322/    D385 : C4                  	FCB hi(NOP_0x3B)
(1)  323/    D386 : C4                  	FCB hi(NOP_0x3C)
(1)  324/    D387 : C4                  	FCB hi(AND_ABSX)
(1)  325/    D388 : C4                  	FCB hi(ROL_ABSX)
(1)  326/    D389 : C4                  	FCB hi(NOP_0x3F)
(1)  327/    D38A : C4                  	FCB hi(RTI_IMP)
(1)  328/    D38B : C4                  	FCB hi(EOR_IX)
(1)  329/    D38C : C4                  	FCB hi(NOP_0x42)
(1)  330/    D38D : C5                  	FCB hi(NOP_0x43)
(1)  331/    D38E : C5                  	FCB hi(NOP_0x44)
(1)  332/    D38F : C5                  	FCB hi(EOR_ZP)
(1)  333/    D390 : C5                  	FCB hi(LSR_ZP)
(1)  334/    D391 : C5                  	FCB hi(NOP_0x47)
(1)  335/    D392 : C5                  	FCB hi(PHA_IMP)
(1)  336/    D393 : C5                  	FCB hi(EOR_IMMED)
(1)  337/    D394 : C5                  	FCB hi(LSR_A)
(1)  338/    D395 : C5                  	FCB hi(NOP_0x4B)
(1)  339/    D396 : C5                  	FCB hi(JMP_ABS)
(1)  340/    D397 : C5                  	FCB hi(EOR_ABS)
 AS V1.42 Beta [Bld 157] - Source File main.asm(jump-table.asm) - Page 384 - 1/5/2022 12:19:0


(1)  341/    D398 : C5                  	FCB hi(LSR_ABS)
(1)  342/    D399 : C5                  	FCB hi(NOP_0x4F)
(1)  343/    D39A : C5                  	FCB hi(BVC_REL)
(1)  344/    D39B : C5                  	FCB hi(EOR_IY)
(1)  345/    D39C : C6                  	FCB hi(NOP_0x52)
(1)  346/    D39D : C6                  	FCB hi(NOP_0x53)
(1)  347/    D39E : C6                  	FCB hi(NOP_0x54)
(1)  348/    D39F : C6                  	FCB hi(EOR_ZPX)
(1)  349/    D3A0 : C6                  	FCB hi(LSR_ZPX)
(1)  350/    D3A1 : C6                  	FCB hi(NOP_0x57)
(1)  351/    D3A2 : C6                  	FCB hi(CLI_IMP)
(1)  352/    D3A3 : C6                  	FCB hi(EOR_ABSY)
(1)  353/    D3A4 : C6                  	FCB hi(NOP_0x5A)
(1)  354/    D3A5 : C6                  	FCB hi(NOP_0x5B)
(1)  355/    D3A6 : C6                  	FCB hi(NOP_0x5C)
(1)  356/    D3A7 : C6                  	FCB hi(EOR_ABSX)
(1)  357/    D3A8 : C6                  	FCB hi(LSR_ABSX)
(1)  358/    D3A9 : C6                  	FCB hi(NOP_0x5F)
(1)  359/    D3AA : C7                  	FCB hi(RTS_IMP)
(1)  360/    D3AB : C7                  	FCB hi(ADC_IX)
(1)  361/    D3AC : C7                  	FCB hi(NOP_0x62)
(1)  362/    D3AD : C7                  	FCB hi(NOP_0x63)
(1)  363/    D3AE : C7                  	FCB hi(NOP_0x64)
(1)  364/    D3AF : C7                  	FCB hi(ADC_ZP)
(1)  365/    D3B0 : C7                  	FCB hi(ROR_ZP)
(1)  366/    D3B1 : C7                  	FCB hi(NOP_0x67)
(1)  367/    D3B2 : C7                  	FCB hi(PLA_IMP)
(1)  368/    D3B3 : C7                  	FCB hi(ADC_IMMED)
(1)  369/    D3B4 : C7                  	FCB hi(ROR_A)
(1)  370/    D3B5 : C7                  	FCB hi(NOP_0x6B)
(1)  371/    D3B6 : C7                  	FCB hi(JMP_I)
(1)  372/    D3B7 : C7                  	FCB hi(ADC_ABS)
(1)  373/    D3B8 : C8                  	FCB hi(ROR_ABS)
(1)  374/    D3B9 : C8                  	FCB hi(NOP_0x6F)
(1)  375/    D3BA : C8                  	FCB hi(BVS_REL)
(1)  376/    D3BB : C8                  	FCB hi(ADC_IY)
(1)  377/    D3BC : C8                  	FCB hi(NOP_0x72)
(1)  378/    D3BD : C8                  	FCB hi(NOP_0x73)
(1)  379/    D3BE : C8                  	FCB hi(NOP_0x74)
(1)  380/    D3BF : C8                  	FCB hi(ADC_ZPX)
(1)  381/    D3C0 : C8                  	FCB hi(ROR_ZPX)
(1)  382/    D3C1 : C8                  	FCB hi(NOP_0x77)
(1)  383/    D3C2 : C8                  	FCB hi(SEI_IMP)
(1)  384/    D3C3 : C8                  	FCB hi(ADC_ABSY)
(1)  385/    D3C4 : C8                  	FCB hi(NOP_0x7A)
(1)  386/    D3C5 : C8                  	FCB hi(NOP_0x7B)
(1)  387/    D3C6 : C9                  	FCB hi(NOP_0x7C)
(1)  388/    D3C7 : C9                  	FCB hi(ADC_ABSX)
(1)  389/    D3C8 : C9                  	FCB hi(ROR_ABSX)
(1)  390/    D3C9 : C9                  	FCB hi(NOP_0x7F)
(1)  391/    D3CA : C9                  	FCB hi(NOP_0x80)
(1)  392/    D3CB : C9                  	FCB hi(STA_IX)
(1)  393/    D3CC : C9                  	FCB hi(NOP_0x82)
(1)  394/    D3CD : C9                  	FCB hi(NOP_0x83)
(1)  395/    D3CE : C9                  	FCB hi(STY_ZP)
(1)  396/    D3CF : C9                  	FCB hi(STA_ZP)
(1)  397/    D3D0 : C9                  	FCB hi(STX_ZP)
(1)  398/    D3D1 : C9                  	FCB hi(NOP_0x87)
(1)  399/    D3D2 : C9                  	FCB hi(DEY_IMP)
(1)  400/    D3D3 : C9                  	FCB hi(NOP_0x89)
 AS V1.42 Beta [Bld 157] - Source File main.asm(jump-table.asm) - Page 385 - 1/5/2022 12:19:0


(1)  401/    D3D4 : C9                  	FCB hi(TXA_IMP)
(1)  402/    D3D5 : CA                  	FCB hi(NOP_0x8B)
(1)  403/    D3D6 : CA                  	FCB hi(STY_ABS)
(1)  404/    D3D7 : CA                  	FCB hi(STA_ABS)
(1)  405/    D3D8 : CA                  	FCB hi(STX_ABS)
(1)  406/    D3D9 : CA                  	FCB hi(NOP_0x8F)
(1)  407/    D3DA : CA                  	FCB hi(BCC_REL)
(1)  408/    D3DB : CA                  	FCB hi(STA_IY)
(1)  409/    D3DC : CA                  	FCB hi(NOP_0x92)
(1)  410/    D3DD : CA                  	FCB hi(NOP_0x93)
(1)  411/    D3DE : CA                  	FCB hi(STY_ZPX)
(1)  412/    D3DF : CA                  	FCB hi(STA_ZPX)
(1)  413/    D3E0 : CA                  	FCB hi(STX_ZPY)
(1)  414/    D3E1 : CA                  	FCB hi(NOP_0x97)
(1)  415/    D3E2 : CA                  	FCB hi(TYA_IMP)
(1)  416/    D3E3 : CB                  	FCB hi(STA_ABSY)
(1)  417/    D3E4 : CB                  	FCB hi(TXS_IMP)
(1)  418/    D3E5 : CB                  	FCB hi(NOP_0x9B)
(1)  419/    D3E6 : CB                  	FCB hi(NOP_0x9C)
(1)  420/    D3E7 : CB                  	FCB hi(STA_ABSX)
(1)  421/    D3E8 : CB                  	FCB hi(NOP_0x9E)
(1)  422/    D3E9 : CB                  	FCB hi(NOP_0x9F)
(1)  423/    D3EA : CB                  	FCB hi(LDY_IMMED)
(1)  424/    D3EB : CB                  	FCB hi(LDA_IX)
(1)  425/    D3EC : CB                  	FCB hi(LDX_IMMED)
(1)  426/    D3ED : CB                  	FCB hi(NOP_0xA3)
(1)  427/    D3EE : CB                  	FCB hi(LDY_ZP)
(1)  428/    D3EF : CB                  	FCB hi(LDA_ZP)
(1)  429/    D3F0 : CB                  	FCB hi(LDX_ZP)
(1)  430/    D3F1 : CC                  	FCB hi(NOP_0xA7)
(1)  431/    D3F2 : CC                  	FCB hi(TAY_IMP)
(1)  432/    D3F3 : CC                  	FCB hi(LDA_IMMED)
(1)  433/    D3F4 : CC                  	FCB hi(TAX_IMP)
(1)  434/    D3F5 : CC                  	FCB hi(NOP_0xAB)
(1)  435/    D3F6 : CC                  	FCB hi(LDY_ABS)
(1)  436/    D3F7 : CC                  	FCB hi(LDA_ABS)
(1)  437/    D3F8 : CC                  	FCB hi(LDX_ABS)
(1)  438/    D3F9 : CC                  	FCB hi(NOP_0xAF)
(1)  439/    D3FA : CC                  	FCB hi(BCS_REL)
(1)  440/    D3FB : CC                  	FCB hi(LDA_IY)
(1)  441/    D3FC : CC                  	FCB hi(NOP_0xB2)
(1)  442/    D3FD : CC                  	FCB hi(NOP_0xB3)
(1)  443/    D3FE : CC                  	FCB hi(LDY_ZPX)
(1)  444/    D3FF : CD                  	FCB hi(LDA_ZPX)
(1)  445/    D400 : CD                  	FCB hi(LDX_ZPY)
(1)  446/    D401 : CD                  	FCB hi(NOP_0xB7)
(1)  447/    D402 : CD                  	FCB hi(CLV_IMP)
(1)  448/    D403 : CD                  	FCB hi(LDA_ABSY)
(1)  449/    D404 : CD                  	FCB hi(TSX_IMP)
(1)  450/    D405 : CD                  	FCB hi(NOP_0xBB)
(1)  451/    D406 : CD                  	FCB hi(LDY_ABSX)
(1)  452/    D407 : CD                  	FCB hi(LDA_ABSX)
(1)  453/    D408 : CD                  	FCB hi(LDX_ABSY)
(1)  454/    D409 : CD                  	FCB hi(NOP_0xBF)
(1)  455/    D40A : CD                  	FCB hi(CPY_IMMED)
(1)  456/    D40B : CD                  	FCB hi(CMP_IX)
(1)  457/    D40C : CD                  	FCB hi(NOP_0xC2)
(1)  458/    D40D : CE                  	FCB hi(NOP_0xC3)
(1)  459/    D40E : CE                  	FCB hi(CPY_ZP)
(1)  460/    D40F : CE                  	FCB hi(CMP_ZP)
 AS V1.42 Beta [Bld 157] - Source File main.asm(jump-table.asm) - Page 386 - 1/5/2022 12:19:0


(1)  461/    D410 : CE                  	FCB hi(DEC_ZP)
(1)  462/    D411 : CE                  	FCB hi(NOP_0xC7)
(1)  463/    D412 : CE                  	FCB hi(INY_IMP)
(1)  464/    D413 : CE                  	FCB hi(CMP_IMMED)
(1)  465/    D414 : CE                  	FCB hi(DEX_IMP)
(1)  466/    D415 : CE                  	FCB hi(NOP_0xCB)
(1)  467/    D416 : CE                  	FCB hi(CPY_ABS)
(1)  468/    D417 : CE                  	FCB hi(CMP_ABS)
(1)  469/    D418 : CE                  	FCB hi(DEC_ABS)
(1)  470/    D419 : CE                  	FCB hi(NOP_0xCF)
(1)  471/    D41A : CE                  	FCB hi(BNE_REL)
(1)  472/    D41B : CE                  	FCB hi(CMP_IY)
(1)  473/    D41C : CF                  	FCB hi(NOP_0xD2)
(1)  474/    D41D : CF                  	FCB hi(NOP_0xD3)
(1)  475/    D41E : CF                  	FCB hi(NOP_0xD4)
(1)  476/    D41F : CF                  	FCB hi(CMP_ZPX)
(1)  477/    D420 : CF                  	FCB hi(DEC_ZPX)
(1)  478/    D421 : CF                  	FCB hi(NOP_0xD7)
(1)  479/    D422 : CF                  	FCB hi(CLD_IMP)
(1)  480/    D423 : CF                  	FCB hi(CMP_ABSY)
(1)  481/    D424 : CF                  	FCB hi(NOP_0xDA)
(1)  482/    D425 : CF                  	FCB hi(NOP_0xDB)
(1)  483/    D426 : CF                  	FCB hi(NOP_0xDC)
(1)  484/    D427 : CF                  	FCB hi(CMP_ABSX)
(1)  485/    D428 : CF                  	FCB hi(DEC_ABSX)
(1)  486/    D429 : CF                  	FCB hi(NOP_0xDF)
(1)  487/    D42A : D0                  	FCB hi(CPX_IMMED)
(1)  488/    D42B : D0                  	FCB hi(SBC_IX)
(1)  489/    D42C : D0                  	FCB hi(NOP_0xE2)
(1)  490/    D42D : D0                  	FCB hi(NOP_0xE3)
(1)  491/    D42E : D0                  	FCB hi(CPX_ZP)
(1)  492/    D42F : D0                  	FCB hi(SBC_ZP)
(1)  493/    D430 : D0                  	FCB hi(INC_ZP)
(1)  494/    D431 : D0                  	FCB hi(NOP_0xE7)
(1)  495/    D432 : D0                  	FCB hi(INX_IMP)
(1)  496/    D433 : D0                  	FCB hi(SBC_IMMED)
(1)  497/    D434 : D0                  	FCB hi(NOP_IMP)
(1)  498/    D435 : D0                  	FCB hi(NOP_0xEB)
(1)  499/    D436 : D0                  	FCB hi(CPX_ABS)
(1)  500/    D437 : D0                  	FCB hi(SBC_ABS)
(1)  501/    D438 : D1                  	FCB hi(INC_ABS)
(1)  502/    D439 : D1                  	FCB hi(NOP_0xEF)
(1)  503/    D43A : D1                  	FCB hi(BEQ_REL)
(1)  504/    D43B : D1                  	FCB hi(SBC_IY)
(1)  505/    D43C : D1                  	FCB hi(NOP_0xF2)
(1)  506/    D43D : D1                  	FCB hi(NOP_0xF3)
(1)  507/    D43E : D1                  	FCB hi(NOP_0xF4)
(1)  508/    D43F : D1                  	FCB hi(SBC_ZPX)
(1)  509/    D440 : D1                  	FCB hi(INC_ZPX)
(1)  510/    D441 : D1                  	FCB hi(NOP_0xF7)
(1)  511/    D442 : D1                  	FCB hi(SED_IMP)
(1)  512/    D443 : D1                  	FCB hi(SBC_ABSY)
(1)  513/    D444 : D1                  	FCB hi(NOP_0xFA)
(1)  514/    D445 : D1                  	FCB hi(NOP_0xFB)
(1)  515/    D446 : D2                  	FCB hi(NOP_0xFC)
(1)  516/    D447 : D2                  	FCB hi(SBC_ABSX)
(1)  517/    D448 : D2                  	FCB hi(INC_ABSX)
(1)  518/    D449 : D2                  	FCB hi(NOP_0xFF)
(1)  519/    D44A :                     	jump_table_end:
(1)  520/    D44A : =$200               jump_table_size equ jump_table_end-jump_table_begin
 AS V1.42 Beta [Bld 157] - Source File main.asm(jump-table.asm) - Page 387 - 1/5/2022 12:19:0


(1)  521/    D44A :                     
     106/    D44A :                     	include "debug.asm"
(1)    1/    D44A : 69 6E 73 74 72 75   	DEBUG_STR1: FCB "instructions.asm size: ",0
                    63 74 69 6F 6E 73 
                    2E 61 73 6D 20 73 
                    69 7A 65 3A 20 00 
(1)    2/    D462 : 6A 75 6D 70 2D 74   	DEBUG_STR2: FCB "jump-table.asm size: ",0
                    61 62 6C 65 2E 61 
                    73 6D 20 73 69 7A 
                    65 3A 20 00       
(1)    3/    D478 :                     		
(1)    4/    D478 :                     	DebugStr:
(1)    5/    D478 : A4 00               		LDY 0
(1)    6/    D47A : 5A                  		PHY
(1)    7/    D47B : A4 01               		LDY 1
(1)    8/    D47D : 5A                  		PHY
(1)    9/    D47E : 85 00               		STA 0
(1)   10/    D480 : 86 01               		STX 1
(1)   11/    D482 : A0 00               		LDY #0
(1)   12/    D484 :                     		.loop:
(1)   13/    D484 : B1 00               			LDA (0),Y
(1)   14/    D486 : F0 06               			BEQ .done
(1)   15/    D488 : 8D E7 FF            			STA DEBUG
(1)   16/    D48B : C8                  			INY
(1)   17/    D48C : 80 F6               			BRA .loop
(1)   18/    D48E :                     		.done:
(1)   19/    D48E : 68                  		PLA
(1)   20/    D48F : 85 01               		STA 1
(1)   21/    D491 : 68                  		PLA
(1)   22/    D492 : 85 00               		STA 0
(1)   23/    D494 : 60                  		RTS
(1)   24/    D495 :                     		
(1)   25/    D495 :                     	DebugFileSizes:
(1)   26/    D495 :                     		;instructions.asm size
(1)   27/    D495 : (MACRO)             		LOAD16 DEBUG_STR1
(1)   27/    D495 : A9 4A                       LDA #lo(DEBUG_STR1)
(1)   27/    D497 : A2 D4                       LDX #hi(DEBUG_STR1)
(1)   28/    D499 : 20 78 D4            		JSR DebugStr
(1)   29/    D49C : (MACRO)             		LOAD16 instructions_size
(1)   29/    D49C : A9 00                       LDA #lo(instructions_size)
(1)   29/    D49E : A2 12                       LDX #hi(instructions_size)
(1)   30/    D4A0 : 8D EA FF            		STA DEBUG_DEC16
(1)   31/    D4A3 : A9 0A               		LDA #10
(1)   32/    D4A5 : 8D E7 FF            		STA DEBUG
(1)   33/    D4A8 :                     		
(1)   34/    D4A8 :                     		;jump-table.asm size
(1)   35/    D4A8 : (MACRO)             		LOAD16 DEBUG_STR2
(1)   35/    D4A8 : A9 62                       LDA #lo(DEBUG_STR2)
(1)   35/    D4AA : A2 D4                       LDX #hi(DEBUG_STR2)
(1)   36/    D4AC : 20 78 D4            		JSR DebugStr
(1)   37/    D4AF : (MACRO)             		LOAD16 jump_table_size
(1)   37/    D4AF : A9 00                       LDA #lo(jump_table_size)
(1)   37/    D4B1 : A2 02                       LDX #hi(jump_table_size)
(1)   38/    D4B3 : 8D EA FF            		STA DEBUG_DEC16
(1)   39/    D4B6 : A9 0D               		LDA #13
(1)   40/    D4B8 : 8D E7 FF            		STA DEBUG
(1)   41/    D4BB :                     		
(1)   42/    D4BB : 60                  		RTS
(1)   43/    D4BC :                     		
     107/    D4BC :                     	include "test.asm"
 AS V1.42 Beta [Bld 157] - Source File main.asm(test.asm) - Page 388 - 1/5/2022 12:19:0


(1)    1/    D4BC :                     	test_prog:
(1)    2/    D4BC : A9 41               		LDA #65
(1)    3/    D4BE : 85 05               		STA $5
(1)    4/    D4C0 : 8D 23 01            		STA $123
     108/    D4C3 :                     	
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 389 - 1/5/2022 12:19:0


  Symbol Table (* = unused):
  --------------------------

 ADC_ABS :                     C7F4 C |  ADC_ABSX :                    C914 C |
 ADC_ABSY :                    C8CC C |  ADC_IMMED :                   C7AC C |
 ADC_IX :                      C71C C |  ADC_IY :                      C83C C |
 ADC_ZP :                      C764 C |  ADC_ZPX :                     C884 C |
 AND_ABS :                     C374 C |  AND_ABSX :                    C494 C |
 AND_ABSY :                    C44C C |  AND_IMMED :                   C32C C |
 AND_IX :                      C29C C |  AND_IY :                      C3BC C |
 AND_ZP :                      C2E4 C |  AND_ZPX :                     C404 C |
*ARCHITECTURE :  i386-unknown-win32 - |  ASL_A :                       C0FE C |
 ASL_ABS :                     C146 C |  ASL_ABSX :                    C266 C |
 ASL_ZP :                      C0B6 C |  ASL_ZPX :                     C1D6 C |
*BANK_GFX_RAM1 :                  4 - | *BANK_GFX_RAM2 :                  5 - |
 BCC_REL :                     CA6A C |  BCS_REL :                     CCAA C |
 BEQ_REL :                     D12A C | *BIGENDIAN :                      0 - |
 BIT_ABS :                     C362 C |  BIT_ZP :                      C2D2 C |
 BMI_REL :                     C3AA C |  BNE_REL :                     CEEA C |
 BPL_REL :                     C16A C | *BRANCHEXT :                      0 - |
 BRK_IMP :                     C04A C |  BVC_REL :                     C5EA C |
 BVS_REL :                     C82A C | *CASESENSITIVE :                  1 - |
 CLC_IMP :                     C1FA C |  CLD_IMP :                     CF7A C |
 CLI_IMP :                     C67A C |  CLV_IMP :                     CD3A C |
 CMP_ABS :                     CEB4 C |  CMP_ABSX :                    CFD4 C |
 CMP_ABSY :                    CF8C C |  CMP_IMMED :                   CE6C C |
 CMP_IX :                      CDDC C |  CMP_IY :                      CEFC C |
 CMP_ZP :                      CE24 C |  CMP_ZPX :                     CF44 C |
*CONSTPI :        3.141592653589793 - |  CPX_ABS :                     D0E2 C |
 CPX_IMMED :                   D00A C |  CPX_ZP :                      D052 C |
 CPY_ABS :                     CEA2 C |  CPY_IMMED :                   CDCA C |
 CPY_ZP :                      CE12 C | *DATE :                    1/5/2022 - |
 DEBUG :                       FFE7 - | *DEBUG_DEC :                   FFE9 - |
 DEBUG_DEC16 :                 FFEA - | *DEBUG_HEX :                   FFE8 - |
 DEBUG_STR1 :                  D44A C |  DEBUG_STR2 :                  D462 C |
 DEC_ABS :                     CEC6 C |  DEC_ABSX :                    CFE6 C |
 DEC_ZP :                      CE36 C |  DEC_ZPX :                     CF56 C |
 DEX_IMP :                     CE7E C |  DEY_IMP :                     C9DA C |
 DebugFileSizes :              D495 C |  DebugStr :                    D478 C |
 DebugStr.done :               D48E C |  DebugStr.loop :               D484 C |
 EOR_ABS :                     C5B4 C |  EOR_ABSX :                    C6D4 C |
 EOR_ABSY :                    C68C C |  EOR_IMMED :                   C56C C |
 EOR_IX :                      C4DC C |  EOR_IY :                      C5FC C |
 EOR_ZP :                      C524 C |  EOR_ZPX :                     C644 C |
 ExitEmu :                     C045 C | *FALSE :                          0 - |
*FULLPMMU :                       1 - | *HAS64 :                          1 - |
*HASDSP :                         0 - | *HASFPU :                         0 - |
*HASPMMU :                        0 - |  INC_ABS :                     D106 C |
 INC_ABSX :                    D226 C |  INC_ZP :                      D076 C |
 INC_ZPX :                     D196 C | *INEXTMODE :                      0 - |
*INLWORDMODE :                    0 - | *INMAXMODE :                      0 - |
*INSRCMODE :                      0 - | *INSUPMODE :                      0 - |
 INX_IMP :                     D09A C |  INY_IMP :                     CE5A C |
 JMP_ABS :                     C5A2 C |  JMP_I :                       C7E2 C |
 JSR_ABS :                     C28A C |  JUMP_TABLE_HI :               D34A C |
 JUMP_TABLE_LO :               D24A C |  LDA_ABS :                     CC74 C |
 LDA_ABSX :                    CD94 C |  LDA_ABSY :                    CD4C C |
 LDA_IMMED :                   CC2C C |  LDA_IX :                      CB9C C |
 LDA_IY :                      CCBC C |  LDA_ZP :                      CBE4 C |
 LDA_ZPX :                     CD04 C |  LDX_ABS :                     CC86 C |
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 390 - 1/5/2022 12:19:0


 LDX_ABSY :                    CDA6 C |  LDX_IMMED :                   CBAE C |
 LDX_ZP :                      CBF6 C |  LDX_ZPY :                     CD16 C |
 LDY_ABS :                     CC62 C |  LDY_ABSX :                    CD82 C |
 LDY_IMMED :                   CB8A C |  LDY_ZP :                      CBD2 C |
 LDY_ZPX :                     CCF2 C | *LISTON :                         1 - |
 LSR_A :                       C57E C |  LSR_ABS :                     C5C6 C |
 LSR_ABSX :                    C6E6 C |  LSR_ZP :                      C536 C |
 LSR_ZPX :                     C656 C | *MACEXP :                         7 - |
 MAX_EMU_LEVEL :                  5 - | *MOMCPU :                     65C02 - |
*MOMCPUNAME :                 65C02 - | *NESTMAX :                      100 - |
 NOP_0x12 :                    C18E C |  NOP_0x13 :                    C1A0 C |
 NOP_0x14 :                    C1B2 C |  NOP_0x17 :                    C1E8 C |
 NOP_0x1A :                    C21E C |  NOP_0x1B :                    C230 C |
 NOP_0x1C :                    C242 C |  NOP_0x1F :                    C278 C |
 NOP_0x2 :                     C06E C |  NOP_0x22 :                    C2AE C |
 NOP_0x23 :                    C2C0 C |  NOP_0x27 :                    C308 C |
 NOP_0x2B :                    C350 C |  NOP_0x2F :                    C398 C |
 NOP_0x3 :                     C080 C |  NOP_0x32 :                    C3CE C |
 NOP_0x33 :                    C3E0 C |  NOP_0x34 :                    C3F2 C |
 NOP_0x37 :                    C428 C |  NOP_0x3A :                    C45E C |
 NOP_0x3B :                    C470 C |  NOP_0x3C :                    C482 C |
 NOP_0x3F :                    C4B8 C |  NOP_0x4 :                     C092 C |
 NOP_0x42 :                    C4EE C |  NOP_0x43 :                    C500 C |
 NOP_0x44 :                    C512 C |  NOP_0x47 :                    C548 C |
 NOP_0x4B :                    C590 C |  NOP_0x4F :                    C5D8 C |
 NOP_0x52 :                    C60E C |  NOP_0x53 :                    C620 C |
 NOP_0x54 :                    C632 C |  NOP_0x57 :                    C668 C |
 NOP_0x5A :                    C69E C |  NOP_0x5B :                    C6B0 C |
 NOP_0x5C :                    C6C2 C |  NOP_0x5F :                    C6F8 C |
 NOP_0x62 :                    C72E C |  NOP_0x63 :                    C740 C |
 NOP_0x64 :                    C752 C |  NOP_0x67 :                    C788 C |
 NOP_0x6B :                    C7D0 C |  NOP_0x6F :                    C818 C |
 NOP_0x7 :                     C0C8 C |  NOP_0x72 :                    C84E C |
 NOP_0x73 :                    C860 C |  NOP_0x74 :                    C872 C |
 NOP_0x77 :                    C8A8 C |  NOP_0x7A :                    C8DE C |
 NOP_0x7B :                    C8F0 C |  NOP_0x7C :                    C902 C |
 NOP_0x7F :                    C938 C |  NOP_0x80 :                    C94A C |
 NOP_0x82 :                    C96E C |  NOP_0x83 :                    C980 C |
 NOP_0x87 :                    C9C8 C |  NOP_0x89 :                    C9EC C |
 NOP_0x8B :                    CA10 C |  NOP_0x8F :                    CA58 C |
 NOP_0x92 :                    CA8E C |  NOP_0x93 :                    CAA0 C |
 NOP_0x97 :                    CAE8 C |  NOP_0x9B :                    CB30 C |
 NOP_0x9C :                    CB42 C |  NOP_0x9E :                    CB66 C |
 NOP_0x9F :                    CB78 C |  NOP_0xA3 :                    CBC0 C |
 NOP_0xA7 :                    CC08 C |  NOP_0xAB :                    CC50 C |
 NOP_0xAF :                    CC98 C |  NOP_0xB :                     C110 C |
 NOP_0xB2 :                    CCCE C |  NOP_0xB3 :                    CCE0 C |
 NOP_0xB7 :                    CD28 C |  NOP_0xBB :                    CD70 C |
 NOP_0xBF :                    CDB8 C |  NOP_0xC :                     C122 C |
 NOP_0xC2 :                    CDEE C |  NOP_0xC3 :                    CE00 C |
 NOP_0xC7 :                    CE48 C |  NOP_0xCB :                    CE90 C |
 NOP_0xCF :                    CED8 C |  NOP_0xD2 :                    CF0E C |
 NOP_0xD3 :                    CF20 C |  NOP_0xD4 :                    CF32 C |
 NOP_0xD7 :                    CF68 C |  NOP_0xDA :                    CF9E C |
 NOP_0xDB :                    CFB0 C |  NOP_0xDC :                    CFC2 C |
 NOP_0xDF :                    CFF8 C |  NOP_0xE2 :                    D02E C |
 NOP_0xE3 :                    D040 C |  NOP_0xE7 :                    D088 C |
 NOP_0xEB :                    D0D0 C |  NOP_0xEF :                    D118 C |
 NOP_0xF :                     C158 C |  NOP_0xF2 :                    D14E C |
 NOP_0xF3 :                    D160 C |  NOP_0xF4 :                    D172 C |
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 391 - 1/5/2022 12:19:0


 NOP_0xF7 :                    D1A8 C |  NOP_0xFA :                    D1DE C |
 NOP_0xFB :                    D1F0 C |  NOP_0xFC :                    D202 C |
 NOP_0xFF :                    D238 C |  NOP_IMP :                     D0BE C |
 ORA_ABS :                     C134 C |  ORA_ABSX :                    C254 C |
 ORA_ABSY :                    C20C C |  ORA_IMMED :                   C0EC C |
 ORA_IX :                      C05C C |  ORA_IY :                      C17C C |
 ORA_ZP :                      C0A4 C |  ORA_ZPX :                     C1C4 C |
*PACKING :                        0 - | *PADDING :                        1 - |
 PHA_IMP :                     C55A C |  PHP_IMP :                     C0DA C |
 PLA_IMP :                     C79A C |  PLP_IMP :                     C31A C |
*RAM_BANK2 :                   FFE1 - | *RAM_BANK3 :                   FFE2 - |
*RELAXED :                        0 - |  ROL_A :                       C33E C |
 ROL_ABS :                     C386 C |  ROL_ABSX :                    C4A6 C |
 ROL_ZP :                      C2F6 C |  ROL_ZPX :                     C416 C |
 ROR_A :                       C7BE C |  ROR_ABS :                     C806 C |
 ROR_ABSX :                    C926 C |  ROR_ZP :                      C776 C |
 ROR_ZPX :                     C896 C |  RTI_IMP :                     C4CA C |
 RTS_IMP :                     C70A C |  SBC_ABS :                     D0F4 C |
 SBC_ABSX :                    D214 C |  SBC_ABSY :                    D1CC C |
 SBC_IMMED :                   D0AC C |  SBC_IX :                      D01C C |
 SBC_IY :                      D13C C |  SBC_ZP :                      D064 C |
 SBC_ZPX :                     D184 C |  SEC_IMP :                     C43A C |
 SED_IMP :                     D1BA C |  SEI_IMP :                     C8BA C |
 STA_ABS :                     CA34 C |  STA_ABSX :                    CB54 C |
 STA_ABSY :                    CB0C C |  STA_IX :                      C95C C |
 STA_IY :                      CA7C C |  STA_ZP :                      C9A4 C |
 STA_ZPX :                     CAC4 C |  STX_ABS :                     CA46 C |
 STX_ZP :                      C9B6 C |  STX_ZPY :                     CAD6 C |
 STY_ABS :                     CA22 C |  STY_ZP :                      C992 C |
 STY_ZPX :                     CAB2 C |  TAX_IMP :                     CC3E C |
 TAY_IMP :                     CC1A C | *TIME :                    12:18:59 - |
*TRUE :                           1 - |  TSX_IMP :                     CD5E C |
 TXA_IMP :                     C9FE C |  TXS_IMP :                     CB1E C |
 TYA_IMP :                     CAFA C | *VERSION :                     142F - |
*emu_A :                          5 - |  emu_D_flag :                     8 - |
 emu_PC :                         2 - | *emu_PC_hi :                      3 - |
 emu_SP :                         4 - | *emu_X :                          6 - |
*emu_Y :                          7 - | *emu_begin :                   C005 C |
 emu_begin.level_good :        C00E C |  emu_begin.loop :              C017 C |
 emu_begin.loop_done :         C01C C |  emu_data_SP :                    1 - |
 emu_level :                      0 - | *emu_mem :                        9 - |
 emu_ptr :                        A - | *emu_ptr2 :                       C - |
*emu_ptr2_hi :                    D - | *emu_ptr_hi :                     B - |
 global_emu_level :              F0 - |  instructions_begin :          C04A C |
 instructions_end :            D24A C |  instructions_size :           1200 - |
 jump_table_begin :            D24A C |  jump_table_end :              D44A C |
 jump_table_size :              200 - |  local_address :                  E - |
 locals_begin :                   0 - |  locals_end :                     E - |
 locals_size :                    E - |  test_prog :                   D4BC C |
 zp_address :                    F1 - |  zp_begin :                      F0 - |
*zp_end :                        F1 - | *zp_size :                        1 - |

    336 symbols
     45 unused symbols

 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 392 - 1/5/2022 12:19:0


  Defined Macros:
  ---------------

LOAD16                                | LOCAL                                
LOCALS_END                            | LOCALS_START                         
NEXT_MACRO                            | OP_MACRO                             
ZP                                    | ZP_END                               
ZP_START                              | halt                                 

     10 macros

 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 393 - 1/5/2022 12:19:0


  Defined Functions:
  ------------------

lo                                    | hi                                   

 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 394 - 1/5/2022 12:19:0


  Code Pages:
  ----------

STANDARD (0 changed characters)

1 code page

0.29 seconds assembly time

   2096 lines source file
  23219 lines incl. macro expansions
      2 passes
      0 errors
      0 warnings
