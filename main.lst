 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 1 - 1/5/2022 11:50:53


       1/       0 :                     	;TODO
       2/       0 :                     	;-All operations same size to eliminate second jump in dispatch?
       3/       0 :                     	;-Split SP btw data SP and SP
       4/       0 :                     	; - more SP than data SP - 16 or so
       5/       0 :                     	;-Recalc dispatch - cycles times don't matter!
       6/       0 :                     	;-Load code into RAM and recode! fair as long as done by 6502
       7/       0 :                     	; - actually, no way to tell from binary without listing :/
       8/       0 :                     	; - so JIT but that's probably slower. also huge amount of memory :/
       9/       0 :                     
      10/       0 :                     	;Included files
      11/       0 :                     	include macros.asm
(1)    1/       0 :                     ;Zero page variables
(1)    2/       0 :                     ZP_START	MACRO ptr
(1)    3/       0 :                     zp_begin equ ptr
(1)    4/       0 :                     zp_address set ptr
(1)    5/       0 :                     			ENDM
(1)    6/       0 :                     			
(1)    7/       0 :                     ZP 	MACRO var
(1)    8/       0 :                     var equ zp_address
(1)    9/       0 :                     zp_address set zp_address+1
(1)   10/       0 :                     	ENDM
(1)   11/       0 :                     	
(1)   12/       0 :                     ZP_END	MACRO
(1)   13/       0 :                     zp_end equ zp_address
(1)   14/       0 :                     zp_size equ zp_address-zp_begin
(1)   15/       0 :                     		ENDM
(1)   16/       0 :                     	
(1)   17/       0 :                     ;Local variables - each emu level gets a copy
(1)   18/       0 :                     LOCALS_START	MACRO ptr
(1)   19/       0 :                     locals_begin equ ptr
(1)   20/       0 :                     local_address set ptr
(1)   21/       0 :                     			ENDM
(1)   22/       0 :                     
(1)   23/       0 :                     LOCAL 	MACRO var
(1)   24/       0 :                     var equ local_address
(1)   25/       0 :                     local_address set local_address+1
(1)   26/       0 :                     		ENDM
(1)   27/       0 :                     
(1)   28/       0 :                     LOCALS_END	MACRO
(1)   29/       0 :                     locals_end equ local_address
(1)   30/       0 :                     locals_size equ locals_end-locals_begin
(1)   31/       0 :                     			ENDM
(1)   32/       0 :                     
(1)   33/       0 :                     ;Called when each instruction is executed
(1)   34/       0 :                     OP_MACRO	MACRO
(1)   35/       0 :                     			;TODO
(1)   36/       0 :                     			ENDM
(1)   37/       0 :                     
(1)   38/       0 :                     ;Advance to next instruction
(1)   39/       0 :                     NEXT_MACRO	MACRO
(1)   40/       0 :                     			
(1)   41/       0 :                     			halt
(1)   42/       0 :                     			
(1)   43/       0 :                     			;Method 1 - 60 cycles
(1)   44/       0 :                     			;Jump table must be page aligned!!!
(1)   45/       0 :                     			;LDA (emu_PC,X)			;6
(1)   46/       0 :                     			;ASL					;2
(1)   47/       0 :                     			;STA emu_ptr,X			;4
(1)   48/       0 :                     			;LDA #hi(JUMP_TABLE)	;2
(1)   49/       0 :                     			;ADC #0					;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(macros.asm) - Page 2 - 1/5/2022 11:50:53


(1)   50/       0 :                     			;STA emu_ptr+1,X		;4
(1)   51/       0 :                     			;LDA (emu_ptr,X)		;6
(1)   52/       0 :                     			;STA emu_ptr2,X			;4
(1)   53/       0 :                     			;INC emu_ptr,X			;6
(1)   54/       0 :                     			;BCC .skip				;2
(1)   55/       0 :                     			;	INC emu_ptr+1,X		;6
(1)   56/       0 :                     			;.skip:
(1)   57/       0 :                     			;LDA (emu_ptr,X)		;6
(1)   58/       0 :                     			;STA emu_ptr2+1,X		;4
(1)   59/       0 :                     			;JMP (emu_ptr2,X)		;6
(1)   60/       0 :                     			
(1)   61/       0 :                     			;Method 2 - 46 cycles
(1)   62/       0 :                     			;Jump table must be page aligned!!!
(1)   63/       0 :                     			;LDA (emu_PC,X)			;6
(1)   64/       0 :                     			;STZ emu_ptr+1,X		;4
(1)   65/       0 :                     			;ASL					;2
(1)   66/       0 :                     			;ROL emu_ptr+1,X		;6
(1)   67/       0 :                     			;ASL					;2
(1)   68/       0 :                     			;ROL emu_ptr+1,X		;6
(1)   69/       0 :                     			;STA emu_ptr,X			;4				
(1)   70/       0 :                     			;LDA emu_ptr+1,X		;4
(1)   71/       0 :                     			;ADC #hi(JUMP_TABLE)	;2
(1)   72/       0 :                     			;STA emu_ptr+1,X		;4
(1)   73/       0 :                     			;JMP (emu_ptr2,X)		;6
(1)   74/       0 :                     			
(1)   75/       0 :                     			;Method 3 - 30 cycles
(1)   76/       0 :                     			;TXA							;2
(1)   77/       0 :                     			;TAY							;2
(1)   78/       0 :                     			;LDA (emu_PC,X)					;6
(1)   79/       0 :                     			;ASL 							;2
(1)   80/       0 :                     			;BCS upper						;2
(1)   81/       0 :                     			;lower:
(1)   82/       0 :                     			;	ASL							;2
(1)   83/       0 :                     			;	TAX							;2
(1)   84/       0 :                     			;	BCS upper_lower				;2
(1)   85/       0 :                     			;	lower_lower:
(1)   86/       0 :                     			;		JMP (JUMP_TABLE1,X)		;6
(1)   87/       0 :                     			;	upper_lower:
(1)   88/       0 :                     			;		JMP (JUMP_TABLE2,X)
(1)   89/       0 :                     			;upper:
(1)   90/       0 :                     			;	ASL
(1)   91/       0 :                     			;	TAX
(1)   92/       0 :                     			;	BCS upper_upper
(1)   93/       0 :                     			;	lower_upper:
(1)   94/       0 :                     			;		JMP (JUMP_TABLE3,X)
(1)   95/       0 :                     			;	upper_upper:
(1)   96/       0 :                     			;		JMP (JUMP_TABLE4,X)
(1)   97/       0 :                     			;After jump:
(1)   98/       0 :                     			;TYA							;2
(1)   99/       0 :                     			;TAX							;2
(1)  100/       0 :                     			
(1)  101/       0 :                     			;Method 4 - 28 cycles
(1)  102/       0 :                     			;LDA (emu_PC,X)			;6
(1)  103/       0 :                     			;TAY					;2
(1)  104/       0 :                     			;LDA JUMP_TABLE,Y		;4
(1)  105/       0 :                     			;PHA					;3
(1)  106/       0 :                     			;LDA JUMP_TABLE2,Y		;4
(1)  107/       0 :                     			;PHA					;3
(1)  108/       0 :                     			;RTS					;6
(1)  109/       0 :                     			
 AS V1.42 Beta [Bld 157] - Source File main.asm(macros.asm) - Page 3 - 1/5/2022 11:50:53


(1)  110/       0 :                     			;Method 5 - 30 cycles
(1)  111/       0 :                     			LDA (emu_PC,X)			;6
(1)  112/       0 :                     			TAY						;2
(1)  113/       0 :                     			LDA JUMP_TABLE_LO,Y		;4
(1)  114/       0 :                     			STA emu_ptr,X			;4
(1)  115/       0 :                     			LDA JUMP_TABLE_HI,Y		;4
(1)  116/       0 :                     			STA emu_ptr+1,X			;4
(1)  117/       0 :                     			JMP (emu_ptr,X)			;6
(1)  118/       0 :                     						
(1)  119/       0 :                     			ENDM
(1)  120/       0 :                     			
(1)  121/       0 :                     ;Misc
(1)  122/       0 :                     halt	MACRO
(1)  123/       0 :                     		BRK
(1)  124/       0 :                     		BRK
(1)  125/       0 :                     		ENDM
(1)  126/       0 :                     		
(1)  127/       0 :                     hi FUNCTION x,(x/256)
(1)  128/       0 :                     lo FUNCTION x,(x#256)
(1)  129/       0 :                     		
      12/       0 :                     
      13/       0 :                     	;JavaScript emulator constants
      14/       0 : =$FFE1              RAM_BANK2 = 	$FFE1		;0x4000-0x7FFF
      15/       0 : =$FFE2              RAM_BANK3 = 	$FFE2		;0x8000-0xBFFF
      16/       0 : =$4                 BANK_GFX_RAM1 = 4
      17/       0 : =$5                 BANK_GFX_RAM2 = 5
      18/       0 :                     
      19/       0 : =$FFE7              DEBUG =			$FFE7
      20/       0 : =$FFE8              DEBUG_HEX = 	$FFE8
      21/       0 : =$FFE9              DEBUG_DEC = 	$FFE9
      22/       0 : =$FFEA              DEBUG_DEC16 = 	$FFEA
      23/       0 :                     
      24/       0 :                     	;65C02 emulator constants
      25/       0 : =$5                 MAX_EMU_LEVEL = 5
      26/       0 :                     
      27/       0 :                     	;Zero page variables - shared between emu levels
      28/       0 : (MACRO)             	ZP_START 240
      28/       0 : =$F0                zp_begin equ 240
      28/       0 : =$F0                zp_address set 240
      29/       0 : (MACRO)             		ZP global_emu_level
      29/       0 : =$F0                global_emu_level equ zp_address
      29/       0 : =$F1                zp_address set zp_address+1
      30/       0 : (MACRO)             	ZP_END
      30/       0 : =$F1                zp_end equ zp_address
      30/       0 : =$1                 zp_size equ zp_address-zp_begin
      31/       0 :                     	
      32/       0 :                     	;Locals - each emu level gets a copy
      33/       0 : (MACRO)             	LOCALS_START 0
      33/       0 : =$0                 locals_begin equ 0
      33/       0 : =$0                 local_address set 0
      34/       0 : (MACRO)             		LOCAL emu_level
      34/       0 : =$0                 emu_level equ local_address
      34/       0 : =$1                 local_address set local_address+1
      35/       0 : (MACRO)             		LOCAL emu_data_SP
      35/       0 : =$1                 emu_data_SP equ local_address
      35/       0 : =$2                 local_address set local_address+1
      36/       0 : (MACRO)             		LOCAL emu_PC
      36/       0 : =$2                 emu_PC equ local_address
      36/       0 : =$3                 local_address set local_address+1
      37/       0 : (MACRO)             		LOCAL emu_PC_hi
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 4 - 1/5/2022 11:50:53


      37/       0 : =$3                 emu_PC_hi equ local_address
      37/       0 : =$4                 local_address set local_address+1
      38/       0 : (MACRO)             		LOCAL emu_SP
      38/       0 : =$4                 emu_SP equ local_address
      38/       0 : =$5                 local_address set local_address+1
      39/       0 : (MACRO)             		LOCAL emu_A
      39/       0 : =$5                 emu_A equ local_address
      39/       0 : =$6                 local_address set local_address+1
      40/       0 : (MACRO)             		LOCAL emu_X
      40/       0 : =$6                 emu_X equ local_address
      40/       0 : =$7                 local_address set local_address+1
      41/       0 : (MACRO)             		LOCAL emu_Y
      41/       0 : =$7                 emu_Y equ local_address
      41/       0 : =$8                 local_address set local_address+1
      42/       0 : (MACRO)             		LOCAL emu_D_flag
      42/       0 : =$8                 emu_D_flag equ local_address
      42/       0 : =$9                 local_address set local_address+1
      43/       0 : (MACRO)             		LOCAL emu_mem
      43/       0 : =$9                 emu_mem equ local_address
      43/       0 : =$A                 local_address set local_address+1
      44/       0 : (MACRO)             		LOCAL emu_ptr
      44/       0 : =$A                 emu_ptr equ local_address
      44/       0 : =$B                 local_address set local_address+1
      45/       0 : (MACRO)             		LOCAL emu_ptr_hi
      45/       0 : =$B                 emu_ptr_hi equ local_address
      45/       0 : =$C                 local_address set local_address+1
      46/       0 : (MACRO)             		LOCAL emu_ptr2
      46/       0 : =$C                 emu_ptr2 equ local_address
      46/       0 : =$D                 local_address set local_address+1
      47/       0 : (MACRO)             		LOCAL emu_ptr2_hi
      47/       0 : =$D                 emu_ptr2_hi equ local_address
      47/       0 : =$E                 local_address set local_address+1
      48/       0 : (MACRO)             	LOCALS_END
      48/       0 : =$E                 locals_end equ local_address
      48/       0 : =$E                 locals_size equ locals_end-locals_begin
      49/       0 :                     		
      50/    C000 :                     	ORG $C000
      51/    C000 :                     	;Setup before any emulator level loads
      52/    C000 : 64 F0               	STZ global_emu_level
      53/    C002 :                     	
      54/    C002 :                     	;Setup for each emulator level
      55/    C002 :                     	emu_begin:
      56/    C002 :                     			
      57/    C002 :                     		;Calculate local emu level
      58/    C002 : A5 F0               		LDA global_emu_level
      59/    C004 : C9 05               		CMP #MAX_EMU_LEVEL
      60/    C006 : D0 03               		BNE .level_good
      61/    C008 : 4C 40 C0            			JMP ExitEmu
      62/    C00B :                     		.level_good:
      63/    C00B : E6 F0               		INC global_emu_level
      64/    C00D :                     		
      65/    C00D :                     		;Calculate SP and ZP data stack pointer
      66/    C00D : A8                  		TAY
      67/    C00E : AA                  		TAX
      68/    C00F : A9 00               		LDA #0
      69/    C011 : 18                  		CLC
      70/    C012 :                     		.loop:
      71/    C012 : 69 0E               			ADC #locals_size
      72/    C014 : CA                  			DEX
      73/    C015 : D0 FB               			BNE .loop
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 5 - 1/5/2022 11:50:53


      74/    C017 : AA                  		TAX
      75/    C018 : 95 01               		STA emu_data_SP,X
      76/    C01A : 95 04               		STA emu_SP,X
      77/    C01C : 98                  		TYA
      78/    C01D : 95 00               		STA emu_level,X
      79/    C01F :                     		
      80/    C01F :                     		;Clear emulated D flag
      81/    C01F : 74 08               		STZ emu_D_flag,X
      82/    C021 :                     		
      83/    C021 :                     		;Load emulated PC
      84/    C021 : A9 45               		LDA #lo(test_prog)
      85/    C023 : 95 02               		STA emu_PC,X
      86/    C025 : A9 D4               		LDA #hi(test_prog)
      87/    C027 : 95 03               		STA emu_PC+1,X
      88/    C029 :                     	
      89/    C029 :                     		;Start emulating - should never return from this
      90/    C029 : (MACRO)             		NEXT_MACRO
      90/    C029 :                                             
      90/    C029 :  (MACRO-2)                                  halt
      90/    C029 : 00                                  BRK
      90/    C02A : 00                                  BRK
      90/    C02B :                                             
      90/    C02B :                                             ;Method 1 - 60 cycles
      90/    C02B :                                             ;Jump table must be page aligned!!!
      90/    C02B :                                             ;LDA (emu_PC,X)                 ;6
      90/    C02B :                                             ;ASL                                    ;2
      90/    C02B :                                             ;STA emu_ptr,X                  ;4
      90/    C02B :                                             ;LDA #hi(JUMP_TABLE)    ;2
      90/    C02B :                                             ;ADC #0                                 ;2
      90/    C02B :                                             ;STA emu_ptr+1,X                ;4
      90/    C02B :                                             ;LDA (emu_ptr,X)                ;6
      90/    C02B :                                             ;STA emu_ptr2,X                 ;4
      90/    C02B :                                             ;INC emu_ptr,X                  ;6
      90/    C02B :                                             ;BCC .skip                              ;2
      90/    C02B :                                             ;       INC emu_ptr+1,X         ;6
      90/    C02B :                                             ;.skip:
      90/    C02B :                                             ;LDA (emu_ptr,X)                ;6
      90/    C02B :                                             ;STA emu_ptr2+1,X               ;4
      90/    C02B :                                             ;JMP (emu_ptr2,X)               ;6
      90/    C02B :                                             
      90/    C02B :                                             ;Method 2 - 46 cycles
      90/    C02B :                                             ;Jump table must be page aligned!!!
      90/    C02B :                                             ;LDA (emu_PC,X)                 ;6
      90/    C02B :                                             ;STZ emu_ptr+1,X                ;4
      90/    C02B :                                             ;ASL                                    ;2
      90/    C02B :                                             ;ROL emu_ptr+1,X                ;6
      90/    C02B :                                             ;ASL                                    ;2
      90/    C02B :                                             ;ROL emu_ptr+1,X                ;6
      90/    C02B :                                             ;STA emu_ptr,X                  ;4                              
      90/    C02B :                                             ;LDA emu_ptr+1,X                ;4
      90/    C02B :                                             ;ADC #hi(JUMP_TABLE)    ;2
      90/    C02B :                                             ;STA emu_ptr+1,X                ;4
      90/    C02B :                                             ;JMP (emu_ptr2,X)               ;6
      90/    C02B :                                             
      90/    C02B :                                             ;Method 3 - 30 cycles
      90/    C02B :                                             ;TXA                                                    ;2
      90/    C02B :                                             ;TAY                                                    ;2
      90/    C02B :                                             ;LDA (emu_PC,X)                                 ;6
      90/    C02B :                                             ;ASL                                                    ;2
      90/    C02B :                                             ;BCS upper                                              ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 6 - 1/5/2022 11:50:53


      90/    C02B :                                             ;lower:
      90/    C02B :                                             ;       ASL                                                     ;2
      90/    C02B :                                             ;       TAX                                                     ;2
      90/    C02B :                                             ;       BCS upper_lower                         ;2
      90/    C02B :                                             ;       lower_lower:
      90/    C02B :                                             ;               JMP (JUMP_TABLE1,X)             ;6
      90/    C02B :                                             ;       upper_lower:
      90/    C02B :                                             ;               JMP (JUMP_TABLE2,X)
      90/    C02B :                                             ;upper:
      90/    C02B :                                             ;       ASL
      90/    C02B :                                             ;       TAX
      90/    C02B :                                             ;       BCS upper_upper
      90/    C02B :                                             ;       lower_upper:
      90/    C02B :                                             ;               JMP (JUMP_TABLE3,X)
      90/    C02B :                                             ;       upper_upper:
      90/    C02B :                                             ;               JMP (JUMP_TABLE4,X)
      90/    C02B :                                             ;After jump:
      90/    C02B :                                             ;TYA                                                    ;2
      90/    C02B :                                             ;TAX                                                    ;2
      90/    C02B :                                             
      90/    C02B :                                             ;Method 4 - 28 cycles
      90/    C02B :                                             ;LDA (emu_PC,X)                 ;6
      90/    C02B :                                             ;TAY                                    ;2
      90/    C02B :                                             ;LDA JUMP_TABLE,Y               ;4
      90/    C02B :                                             ;PHA                                    ;3
      90/    C02B :                                             ;LDA JUMP_TABLE2,Y              ;4
      90/    C02B :                                             ;PHA                                    ;3
      90/    C02B :                                             ;RTS                                    ;6
      90/    C02B :                                             
      90/    C02B :                                             ;Method 5 - 30 cycles
      90/    C02B : A1 02                                       LDA (emu_PC,X)                  ;6
      90/    C02D : A8                                          TAY                                             ;2
      90/    C02E : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
      90/    C031 : 95 0A                                       STA emu_ptr,X                   ;4
      90/    C033 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
      90/    C036 : 95 0B                                       STA emu_ptr+1,X                 ;4
      90/    C038 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
      90/    C03B :                                                                     
      91/    C03B :                     		
      92/    C03B : (MACRO)             		halt
      92/    C03B : 00                                  BRK
      92/    C03C : 00                                  BRK
      93/    C03D : 4C 3D C0            		JMP *
      94/    C040 :                     
      95/    C040 :                     	;Deepest emulation layer reached - stop nesting
      96/    C040 :                     	ExitEmu:
      97/    C040 : (MACRO)             		halt
      97/    C040 : 00                                  BRK
      97/    C041 : 00                                  BRK
      98/    C042 : 4C 42 C0            		JMP *
      99/    C045 :                     	
     100/    C045 :                     	include "instructions.asm"
(1)    1/    C045 :                     	;Instruction routines
(1)    2/    C045 :                     	;0x0 - BRK IMP
(1)    3/    C045 :                     	BRK_IMP:
(1)    4/    C045 : (MACRO)             		OP_MACRO 0, "BRK", "IMP", "BRK_IMP"
(1)    4/    C045 :                                             ;TODO
(1)    5/    C045 : (MACRO)             		NEXT_MACRO
(1)    5/    C045 :                                             
(1)    5/    C045 :  (MACRO-2)                                  halt
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 7 - 1/5/2022 11:50:53


(1)    5/    C045 : 00                                  BRK
(1)    5/    C046 : 00                                  BRK
(1)    5/    C047 :                                             
(1)    5/    C047 :                                             ;Method 1 - 60 cycles
(1)    5/    C047 :                                             ;Jump table must be page aligned!!!
(1)    5/    C047 :                                             ;LDA (emu_PC,X)                 ;6
(1)    5/    C047 :                                             ;ASL                                    ;2
(1)    5/    C047 :                                             ;STA emu_ptr,X                  ;4
(1)    5/    C047 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)    5/    C047 :                                             ;ADC #0                                 ;2
(1)    5/    C047 :                                             ;STA emu_ptr+1,X                ;4
(1)    5/    C047 :                                             ;LDA (emu_ptr,X)                ;6
(1)    5/    C047 :                                             ;STA emu_ptr2,X                 ;4
(1)    5/    C047 :                                             ;INC emu_ptr,X                  ;6
(1)    5/    C047 :                                             ;BCC .skip                              ;2
(1)    5/    C047 :                                             ;       INC emu_ptr+1,X         ;6
(1)    5/    C047 :                                             ;.skip:
(1)    5/    C047 :                                             ;LDA (emu_ptr,X)                ;6
(1)    5/    C047 :                                             ;STA emu_ptr2+1,X               ;4
(1)    5/    C047 :                                             ;JMP (emu_ptr2,X)               ;6
(1)    5/    C047 :                                             
(1)    5/    C047 :                                             ;Method 2 - 46 cycles
(1)    5/    C047 :                                             ;Jump table must be page aligned!!!
(1)    5/    C047 :                                             ;LDA (emu_PC,X)                 ;6
(1)    5/    C047 :                                             ;STZ emu_ptr+1,X                ;4
(1)    5/    C047 :                                             ;ASL                                    ;2
(1)    5/    C047 :                                             ;ROL emu_ptr+1,X                ;6
(1)    5/    C047 :                                             ;ASL                                    ;2
(1)    5/    C047 :                                             ;ROL emu_ptr+1,X                ;6
(1)    5/    C047 :                                             ;STA emu_ptr,X                  ;4                              
(1)    5/    C047 :                                             ;LDA emu_ptr+1,X                ;4
(1)    5/    C047 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)    5/    C047 :                                             ;STA emu_ptr+1,X                ;4
(1)    5/    C047 :                                             ;JMP (emu_ptr2,X)               ;6
(1)    5/    C047 :                                             
(1)    5/    C047 :                                             ;Method 3 - 30 cycles
(1)    5/    C047 :                                             ;TXA                                                    ;2
(1)    5/    C047 :                                             ;TAY                                                    ;2
(1)    5/    C047 :                                             ;LDA (emu_PC,X)                                 ;6
(1)    5/    C047 :                                             ;ASL                                                    ;2
(1)    5/    C047 :                                             ;BCS upper                                              ;2
(1)    5/    C047 :                                             ;lower:
(1)    5/    C047 :                                             ;       ASL                                                     ;2
(1)    5/    C047 :                                             ;       TAX                                                     ;2
(1)    5/    C047 :                                             ;       BCS upper_lower                         ;2
(1)    5/    C047 :                                             ;       lower_lower:
(1)    5/    C047 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)    5/    C047 :                                             ;       upper_lower:
(1)    5/    C047 :                                             ;               JMP (JUMP_TABLE2,X)
(1)    5/    C047 :                                             ;upper:
(1)    5/    C047 :                                             ;       ASL
(1)    5/    C047 :                                             ;       TAX
(1)    5/    C047 :                                             ;       BCS upper_upper
(1)    5/    C047 :                                             ;       lower_upper:
(1)    5/    C047 :                                             ;               JMP (JUMP_TABLE3,X)
(1)    5/    C047 :                                             ;       upper_upper:
(1)    5/    C047 :                                             ;               JMP (JUMP_TABLE4,X)
(1)    5/    C047 :                                             ;After jump:
(1)    5/    C047 :                                             ;TYA                                                    ;2
(1)    5/    C047 :                                             ;TAX                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 8 - 1/5/2022 11:50:53


(1)    5/    C047 :                                             
(1)    5/    C047 :                                             ;Method 4 - 28 cycles
(1)    5/    C047 :                                             ;LDA (emu_PC,X)                 ;6
(1)    5/    C047 :                                             ;TAY                                    ;2
(1)    5/    C047 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)    5/    C047 :                                             ;PHA                                    ;3
(1)    5/    C047 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)    5/    C047 :                                             ;PHA                                    ;3
(1)    5/    C047 :                                             ;RTS                                    ;6
(1)    5/    C047 :                                             
(1)    5/    C047 :                                             ;Method 5 - 30 cycles
(1)    5/    C047 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)    5/    C049 : A8                                          TAY                                             ;2
(1)    5/    C04A : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)    5/    C04D : 95 0A                                       STA emu_ptr,X                   ;4
(1)    5/    C04F : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)    5/    C052 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)    5/    C054 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)    5/    C057 :                                                                     
(1)    6/    C057 :                     
(1)    7/    C057 :                     	;0x1 - ORA IX
(1)    8/    C057 :                     	ORA_IX:
(1)    9/    C057 : (MACRO)             		OP_MACRO 1, "ORA", "IX", "ORA_IX"
(1)    9/    C057 :                                             ;TODO
(1)   10/    C057 : (MACRO)             		NEXT_MACRO
(1)   10/    C057 :                                             
(1)   10/    C057 :  (MACRO-2)                                  halt
(1)   10/    C057 : 00                                  BRK
(1)   10/    C058 : 00                                  BRK
(1)   10/    C059 :                                             
(1)   10/    C059 :                                             ;Method 1 - 60 cycles
(1)   10/    C059 :                                             ;Jump table must be page aligned!!!
(1)   10/    C059 :                                             ;LDA (emu_PC,X)                 ;6
(1)   10/    C059 :                                             ;ASL                                    ;2
(1)   10/    C059 :                                             ;STA emu_ptr,X                  ;4
(1)   10/    C059 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   10/    C059 :                                             ;ADC #0                                 ;2
(1)   10/    C059 :                                             ;STA emu_ptr+1,X                ;4
(1)   10/    C059 :                                             ;LDA (emu_ptr,X)                ;6
(1)   10/    C059 :                                             ;STA emu_ptr2,X                 ;4
(1)   10/    C059 :                                             ;INC emu_ptr,X                  ;6
(1)   10/    C059 :                                             ;BCC .skip                              ;2
(1)   10/    C059 :                                             ;       INC emu_ptr+1,X         ;6
(1)   10/    C059 :                                             ;.skip:
(1)   10/    C059 :                                             ;LDA (emu_ptr,X)                ;6
(1)   10/    C059 :                                             ;STA emu_ptr2+1,X               ;4
(1)   10/    C059 :                                             ;JMP (emu_ptr2,X)               ;6
(1)   10/    C059 :                                             
(1)   10/    C059 :                                             ;Method 2 - 46 cycles
(1)   10/    C059 :                                             ;Jump table must be page aligned!!!
(1)   10/    C059 :                                             ;LDA (emu_PC,X)                 ;6
(1)   10/    C059 :                                             ;STZ emu_ptr+1,X                ;4
(1)   10/    C059 :                                             ;ASL                                    ;2
(1)   10/    C059 :                                             ;ROL emu_ptr+1,X                ;6
(1)   10/    C059 :                                             ;ASL                                    ;2
(1)   10/    C059 :                                             ;ROL emu_ptr+1,X                ;6
(1)   10/    C059 :                                             ;STA emu_ptr,X                  ;4                              
(1)   10/    C059 :                                             ;LDA emu_ptr+1,X                ;4
(1)   10/    C059 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   10/    C059 :                                             ;STA emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 9 - 1/5/2022 11:50:53


(1)   10/    C059 :                                             ;JMP (emu_ptr2,X)               ;6
(1)   10/    C059 :                                             
(1)   10/    C059 :                                             ;Method 3 - 30 cycles
(1)   10/    C059 :                                             ;TXA                                                    ;2
(1)   10/    C059 :                                             ;TAY                                                    ;2
(1)   10/    C059 :                                             ;LDA (emu_PC,X)                                 ;6
(1)   10/    C059 :                                             ;ASL                                                    ;2
(1)   10/    C059 :                                             ;BCS upper                                              ;2
(1)   10/    C059 :                                             ;lower:
(1)   10/    C059 :                                             ;       ASL                                                     ;2
(1)   10/    C059 :                                             ;       TAX                                                     ;2
(1)   10/    C059 :                                             ;       BCS upper_lower                         ;2
(1)   10/    C059 :                                             ;       lower_lower:
(1)   10/    C059 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   10/    C059 :                                             ;       upper_lower:
(1)   10/    C059 :                                             ;               JMP (JUMP_TABLE2,X)
(1)   10/    C059 :                                             ;upper:
(1)   10/    C059 :                                             ;       ASL
(1)   10/    C059 :                                             ;       TAX
(1)   10/    C059 :                                             ;       BCS upper_upper
(1)   10/    C059 :                                             ;       lower_upper:
(1)   10/    C059 :                                             ;               JMP (JUMP_TABLE3,X)
(1)   10/    C059 :                                             ;       upper_upper:
(1)   10/    C059 :                                             ;               JMP (JUMP_TABLE4,X)
(1)   10/    C059 :                                             ;After jump:
(1)   10/    C059 :                                             ;TYA                                                    ;2
(1)   10/    C059 :                                             ;TAX                                                    ;2
(1)   10/    C059 :                                             
(1)   10/    C059 :                                             ;Method 4 - 28 cycles
(1)   10/    C059 :                                             ;LDA (emu_PC,X)                 ;6
(1)   10/    C059 :                                             ;TAY                                    ;2
(1)   10/    C059 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)   10/    C059 :                                             ;PHA                                    ;3
(1)   10/    C059 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)   10/    C059 :                                             ;PHA                                    ;3
(1)   10/    C059 :                                             ;RTS                                    ;6
(1)   10/    C059 :                                             
(1)   10/    C059 :                                             ;Method 5 - 30 cycles
(1)   10/    C059 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)   10/    C05B : A8                                          TAY                                             ;2
(1)   10/    C05C : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)   10/    C05F : 95 0A                                       STA emu_ptr,X                   ;4
(1)   10/    C061 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)   10/    C064 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)   10/    C066 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)   10/    C069 :                                                                     
(1)   11/    C069 :                     
(1)   12/    C069 :                     	;0x2 - NOP
(1)   13/    C069 :                     	NOP_0x2:
(1)   14/    C069 : (MACRO)             		OP_MACRO 2, "NOP", "IMP", "NOP_0x2"
(1)   14/    C069 :                                             ;TODO
(1)   15/    C069 : (MACRO)             		NEXT_MACRO
(1)   15/    C069 :                                             
(1)   15/    C069 :  (MACRO-2)                                  halt
(1)   15/    C069 : 00                                  BRK
(1)   15/    C06A : 00                                  BRK
(1)   15/    C06B :                                             
(1)   15/    C06B :                                             ;Method 1 - 60 cycles
(1)   15/    C06B :                                             ;Jump table must be page aligned!!!
(1)   15/    C06B :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 10 - 1/5/2022 11:50:53


(1)   15/    C06B :                                             ;ASL                                    ;2
(1)   15/    C06B :                                             ;STA emu_ptr,X                  ;4
(1)   15/    C06B :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   15/    C06B :                                             ;ADC #0                                 ;2
(1)   15/    C06B :                                             ;STA emu_ptr+1,X                ;4
(1)   15/    C06B :                                             ;LDA (emu_ptr,X)                ;6
(1)   15/    C06B :                                             ;STA emu_ptr2,X                 ;4
(1)   15/    C06B :                                             ;INC emu_ptr,X                  ;6
(1)   15/    C06B :                                             ;BCC .skip                              ;2
(1)   15/    C06B :                                             ;       INC emu_ptr+1,X         ;6
(1)   15/    C06B :                                             ;.skip:
(1)   15/    C06B :                                             ;LDA (emu_ptr,X)                ;6
(1)   15/    C06B :                                             ;STA emu_ptr2+1,X               ;4
(1)   15/    C06B :                                             ;JMP (emu_ptr2,X)               ;6
(1)   15/    C06B :                                             
(1)   15/    C06B :                                             ;Method 2 - 46 cycles
(1)   15/    C06B :                                             ;Jump table must be page aligned!!!
(1)   15/    C06B :                                             ;LDA (emu_PC,X)                 ;6
(1)   15/    C06B :                                             ;STZ emu_ptr+1,X                ;4
(1)   15/    C06B :                                             ;ASL                                    ;2
(1)   15/    C06B :                                             ;ROL emu_ptr+1,X                ;6
(1)   15/    C06B :                                             ;ASL                                    ;2
(1)   15/    C06B :                                             ;ROL emu_ptr+1,X                ;6
(1)   15/    C06B :                                             ;STA emu_ptr,X                  ;4                              
(1)   15/    C06B :                                             ;LDA emu_ptr+1,X                ;4
(1)   15/    C06B :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   15/    C06B :                                             ;STA emu_ptr+1,X                ;4
(1)   15/    C06B :                                             ;JMP (emu_ptr2,X)               ;6
(1)   15/    C06B :                                             
(1)   15/    C06B :                                             ;Method 3 - 30 cycles
(1)   15/    C06B :                                             ;TXA                                                    ;2
(1)   15/    C06B :                                             ;TAY                                                    ;2
(1)   15/    C06B :                                             ;LDA (emu_PC,X)                                 ;6
(1)   15/    C06B :                                             ;ASL                                                    ;2
(1)   15/    C06B :                                             ;BCS upper                                              ;2
(1)   15/    C06B :                                             ;lower:
(1)   15/    C06B :                                             ;       ASL                                                     ;2
(1)   15/    C06B :                                             ;       TAX                                                     ;2
(1)   15/    C06B :                                             ;       BCS upper_lower                         ;2
(1)   15/    C06B :                                             ;       lower_lower:
(1)   15/    C06B :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   15/    C06B :                                             ;       upper_lower:
(1)   15/    C06B :                                             ;               JMP (JUMP_TABLE2,X)
(1)   15/    C06B :                                             ;upper:
(1)   15/    C06B :                                             ;       ASL
(1)   15/    C06B :                                             ;       TAX
(1)   15/    C06B :                                             ;       BCS upper_upper
(1)   15/    C06B :                                             ;       lower_upper:
(1)   15/    C06B :                                             ;               JMP (JUMP_TABLE3,X)
(1)   15/    C06B :                                             ;       upper_upper:
(1)   15/    C06B :                                             ;               JMP (JUMP_TABLE4,X)
(1)   15/    C06B :                                             ;After jump:
(1)   15/    C06B :                                             ;TYA                                                    ;2
(1)   15/    C06B :                                             ;TAX                                                    ;2
(1)   15/    C06B :                                             
(1)   15/    C06B :                                             ;Method 4 - 28 cycles
(1)   15/    C06B :                                             ;LDA (emu_PC,X)                 ;6
(1)   15/    C06B :                                             ;TAY                                    ;2
(1)   15/    C06B :                                             ;LDA JUMP_TABLE,Y               ;4
(1)   15/    C06B :                                             ;PHA                                    ;3
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 11 - 1/5/2022 11:50:53


(1)   15/    C06B :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)   15/    C06B :                                             ;PHA                                    ;3
(1)   15/    C06B :                                             ;RTS                                    ;6
(1)   15/    C06B :                                             
(1)   15/    C06B :                                             ;Method 5 - 30 cycles
(1)   15/    C06B : A1 02                                       LDA (emu_PC,X)                  ;6
(1)   15/    C06D : A8                                          TAY                                             ;2
(1)   15/    C06E : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)   15/    C071 : 95 0A                                       STA emu_ptr,X                   ;4
(1)   15/    C073 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)   15/    C076 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)   15/    C078 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)   15/    C07B :                                                                     
(1)   16/    C07B :                     
(1)   17/    C07B :                     	;0x3 - NOP
(1)   18/    C07B :                     	NOP_0x3:
(1)   19/    C07B : (MACRO)             		OP_MACRO 3, "NOP", "IMP", "NOP_0x3"
(1)   19/    C07B :                                             ;TODO
(1)   20/    C07B : (MACRO)             		NEXT_MACRO
(1)   20/    C07B :                                             
(1)   20/    C07B :  (MACRO-2)                                  halt
(1)   20/    C07B : 00                                  BRK
(1)   20/    C07C : 00                                  BRK
(1)   20/    C07D :                                             
(1)   20/    C07D :                                             ;Method 1 - 60 cycles
(1)   20/    C07D :                                             ;Jump table must be page aligned!!!
(1)   20/    C07D :                                             ;LDA (emu_PC,X)                 ;6
(1)   20/    C07D :                                             ;ASL                                    ;2
(1)   20/    C07D :                                             ;STA emu_ptr,X                  ;4
(1)   20/    C07D :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   20/    C07D :                                             ;ADC #0                                 ;2
(1)   20/    C07D :                                             ;STA emu_ptr+1,X                ;4
(1)   20/    C07D :                                             ;LDA (emu_ptr,X)                ;6
(1)   20/    C07D :                                             ;STA emu_ptr2,X                 ;4
(1)   20/    C07D :                                             ;INC emu_ptr,X                  ;6
(1)   20/    C07D :                                             ;BCC .skip                              ;2
(1)   20/    C07D :                                             ;       INC emu_ptr+1,X         ;6
(1)   20/    C07D :                                             ;.skip:
(1)   20/    C07D :                                             ;LDA (emu_ptr,X)                ;6
(1)   20/    C07D :                                             ;STA emu_ptr2+1,X               ;4
(1)   20/    C07D :                                             ;JMP (emu_ptr2,X)               ;6
(1)   20/    C07D :                                             
(1)   20/    C07D :                                             ;Method 2 - 46 cycles
(1)   20/    C07D :                                             ;Jump table must be page aligned!!!
(1)   20/    C07D :                                             ;LDA (emu_PC,X)                 ;6
(1)   20/    C07D :                                             ;STZ emu_ptr+1,X                ;4
(1)   20/    C07D :                                             ;ASL                                    ;2
(1)   20/    C07D :                                             ;ROL emu_ptr+1,X                ;6
(1)   20/    C07D :                                             ;ASL                                    ;2
(1)   20/    C07D :                                             ;ROL emu_ptr+1,X                ;6
(1)   20/    C07D :                                             ;STA emu_ptr,X                  ;4                              
(1)   20/    C07D :                                             ;LDA emu_ptr+1,X                ;4
(1)   20/    C07D :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   20/    C07D :                                             ;STA emu_ptr+1,X                ;4
(1)   20/    C07D :                                             ;JMP (emu_ptr2,X)               ;6
(1)   20/    C07D :                                             
(1)   20/    C07D :                                             ;Method 3 - 30 cycles
(1)   20/    C07D :                                             ;TXA                                                    ;2
(1)   20/    C07D :                                             ;TAY                                                    ;2
(1)   20/    C07D :                                             ;LDA (emu_PC,X)                                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 12 - 1/5/2022 11:50:53


(1)   20/    C07D :                                             ;ASL                                                    ;2
(1)   20/    C07D :                                             ;BCS upper                                              ;2
(1)   20/    C07D :                                             ;lower:
(1)   20/    C07D :                                             ;       ASL                                                     ;2
(1)   20/    C07D :                                             ;       TAX                                                     ;2
(1)   20/    C07D :                                             ;       BCS upper_lower                         ;2
(1)   20/    C07D :                                             ;       lower_lower:
(1)   20/    C07D :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   20/    C07D :                                             ;       upper_lower:
(1)   20/    C07D :                                             ;               JMP (JUMP_TABLE2,X)
(1)   20/    C07D :                                             ;upper:
(1)   20/    C07D :                                             ;       ASL
(1)   20/    C07D :                                             ;       TAX
(1)   20/    C07D :                                             ;       BCS upper_upper
(1)   20/    C07D :                                             ;       lower_upper:
(1)   20/    C07D :                                             ;               JMP (JUMP_TABLE3,X)
(1)   20/    C07D :                                             ;       upper_upper:
(1)   20/    C07D :                                             ;               JMP (JUMP_TABLE4,X)
(1)   20/    C07D :                                             ;After jump:
(1)   20/    C07D :                                             ;TYA                                                    ;2
(1)   20/    C07D :                                             ;TAX                                                    ;2
(1)   20/    C07D :                                             
(1)   20/    C07D :                                             ;Method 4 - 28 cycles
(1)   20/    C07D :                                             ;LDA (emu_PC,X)                 ;6
(1)   20/    C07D :                                             ;TAY                                    ;2
(1)   20/    C07D :                                             ;LDA JUMP_TABLE,Y               ;4
(1)   20/    C07D :                                             ;PHA                                    ;3
(1)   20/    C07D :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)   20/    C07D :                                             ;PHA                                    ;3
(1)   20/    C07D :                                             ;RTS                                    ;6
(1)   20/    C07D :                                             
(1)   20/    C07D :                                             ;Method 5 - 30 cycles
(1)   20/    C07D : A1 02                                       LDA (emu_PC,X)                  ;6
(1)   20/    C07F : A8                                          TAY                                             ;2
(1)   20/    C080 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)   20/    C083 : 95 0A                                       STA emu_ptr,X                   ;4
(1)   20/    C085 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)   20/    C088 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)   20/    C08A : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)   20/    C08D :                                                                     
(1)   21/    C08D :                     
(1)   22/    C08D :                     	;0x4 - NOP
(1)   23/    C08D :                     	NOP_0x4:
(1)   24/    C08D : (MACRO)             		OP_MACRO 4, "NOP", "IMP", "NOP_0x4"
(1)   24/    C08D :                                             ;TODO
(1)   25/    C08D : (MACRO)             		NEXT_MACRO
(1)   25/    C08D :                                             
(1)   25/    C08D :  (MACRO-2)                                  halt
(1)   25/    C08D : 00                                  BRK
(1)   25/    C08E : 00                                  BRK
(1)   25/    C08F :                                             
(1)   25/    C08F :                                             ;Method 1 - 60 cycles
(1)   25/    C08F :                                             ;Jump table must be page aligned!!!
(1)   25/    C08F :                                             ;LDA (emu_PC,X)                 ;6
(1)   25/    C08F :                                             ;ASL                                    ;2
(1)   25/    C08F :                                             ;STA emu_ptr,X                  ;4
(1)   25/    C08F :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   25/    C08F :                                             ;ADC #0                                 ;2
(1)   25/    C08F :                                             ;STA emu_ptr+1,X                ;4
(1)   25/    C08F :                                             ;LDA (emu_ptr,X)                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 13 - 1/5/2022 11:50:53


(1)   25/    C08F :                                             ;STA emu_ptr2,X                 ;4
(1)   25/    C08F :                                             ;INC emu_ptr,X                  ;6
(1)   25/    C08F :                                             ;BCC .skip                              ;2
(1)   25/    C08F :                                             ;       INC emu_ptr+1,X         ;6
(1)   25/    C08F :                                             ;.skip:
(1)   25/    C08F :                                             ;LDA (emu_ptr,X)                ;6
(1)   25/    C08F :                                             ;STA emu_ptr2+1,X               ;4
(1)   25/    C08F :                                             ;JMP (emu_ptr2,X)               ;6
(1)   25/    C08F :                                             
(1)   25/    C08F :                                             ;Method 2 - 46 cycles
(1)   25/    C08F :                                             ;Jump table must be page aligned!!!
(1)   25/    C08F :                                             ;LDA (emu_PC,X)                 ;6
(1)   25/    C08F :                                             ;STZ emu_ptr+1,X                ;4
(1)   25/    C08F :                                             ;ASL                                    ;2
(1)   25/    C08F :                                             ;ROL emu_ptr+1,X                ;6
(1)   25/    C08F :                                             ;ASL                                    ;2
(1)   25/    C08F :                                             ;ROL emu_ptr+1,X                ;6
(1)   25/    C08F :                                             ;STA emu_ptr,X                  ;4                              
(1)   25/    C08F :                                             ;LDA emu_ptr+1,X                ;4
(1)   25/    C08F :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   25/    C08F :                                             ;STA emu_ptr+1,X                ;4
(1)   25/    C08F :                                             ;JMP (emu_ptr2,X)               ;6
(1)   25/    C08F :                                             
(1)   25/    C08F :                                             ;Method 3 - 30 cycles
(1)   25/    C08F :                                             ;TXA                                                    ;2
(1)   25/    C08F :                                             ;TAY                                                    ;2
(1)   25/    C08F :                                             ;LDA (emu_PC,X)                                 ;6
(1)   25/    C08F :                                             ;ASL                                                    ;2
(1)   25/    C08F :                                             ;BCS upper                                              ;2
(1)   25/    C08F :                                             ;lower:
(1)   25/    C08F :                                             ;       ASL                                                     ;2
(1)   25/    C08F :                                             ;       TAX                                                     ;2
(1)   25/    C08F :                                             ;       BCS upper_lower                         ;2
(1)   25/    C08F :                                             ;       lower_lower:
(1)   25/    C08F :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   25/    C08F :                                             ;       upper_lower:
(1)   25/    C08F :                                             ;               JMP (JUMP_TABLE2,X)
(1)   25/    C08F :                                             ;upper:
(1)   25/    C08F :                                             ;       ASL
(1)   25/    C08F :                                             ;       TAX
(1)   25/    C08F :                                             ;       BCS upper_upper
(1)   25/    C08F :                                             ;       lower_upper:
(1)   25/    C08F :                                             ;               JMP (JUMP_TABLE3,X)
(1)   25/    C08F :                                             ;       upper_upper:
(1)   25/    C08F :                                             ;               JMP (JUMP_TABLE4,X)
(1)   25/    C08F :                                             ;After jump:
(1)   25/    C08F :                                             ;TYA                                                    ;2
(1)   25/    C08F :                                             ;TAX                                                    ;2
(1)   25/    C08F :                                             
(1)   25/    C08F :                                             ;Method 4 - 28 cycles
(1)   25/    C08F :                                             ;LDA (emu_PC,X)                 ;6
(1)   25/    C08F :                                             ;TAY                                    ;2
(1)   25/    C08F :                                             ;LDA JUMP_TABLE,Y               ;4
(1)   25/    C08F :                                             ;PHA                                    ;3
(1)   25/    C08F :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)   25/    C08F :                                             ;PHA                                    ;3
(1)   25/    C08F :                                             ;RTS                                    ;6
(1)   25/    C08F :                                             
(1)   25/    C08F :                                             ;Method 5 - 30 cycles
(1)   25/    C08F : A1 02                                       LDA (emu_PC,X)                  ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 14 - 1/5/2022 11:50:53


(1)   25/    C091 : A8                                          TAY                                             ;2
(1)   25/    C092 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)   25/    C095 : 95 0A                                       STA emu_ptr,X                   ;4
(1)   25/    C097 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)   25/    C09A : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)   25/    C09C : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)   25/    C09F :                                                                     
(1)   26/    C09F :                     
(1)   27/    C09F :                     	;0x5 - ORA ZP
(1)   28/    C09F :                     	ORA_ZP:
(1)   29/    C09F : (MACRO)             		OP_MACRO 5, "ORA", "ZP", "ORA_ZP"
(1)   29/    C09F :                                             ;TODO
(1)   30/    C09F : (MACRO)             		NEXT_MACRO
(1)   30/    C09F :                                             
(1)   30/    C09F :  (MACRO-2)                                  halt
(1)   30/    C09F : 00                                  BRK
(1)   30/    C0A0 : 00                                  BRK
(1)   30/    C0A1 :                                             
(1)   30/    C0A1 :                                             ;Method 1 - 60 cycles
(1)   30/    C0A1 :                                             ;Jump table must be page aligned!!!
(1)   30/    C0A1 :                                             ;LDA (emu_PC,X)                 ;6
(1)   30/    C0A1 :                                             ;ASL                                    ;2
(1)   30/    C0A1 :                                             ;STA emu_ptr,X                  ;4
(1)   30/    C0A1 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   30/    C0A1 :                                             ;ADC #0                                 ;2
(1)   30/    C0A1 :                                             ;STA emu_ptr+1,X                ;4
(1)   30/    C0A1 :                                             ;LDA (emu_ptr,X)                ;6
(1)   30/    C0A1 :                                             ;STA emu_ptr2,X                 ;4
(1)   30/    C0A1 :                                             ;INC emu_ptr,X                  ;6
(1)   30/    C0A1 :                                             ;BCC .skip                              ;2
(1)   30/    C0A1 :                                             ;       INC emu_ptr+1,X         ;6
(1)   30/    C0A1 :                                             ;.skip:
(1)   30/    C0A1 :                                             ;LDA (emu_ptr,X)                ;6
(1)   30/    C0A1 :                                             ;STA emu_ptr2+1,X               ;4
(1)   30/    C0A1 :                                             ;JMP (emu_ptr2,X)               ;6
(1)   30/    C0A1 :                                             
(1)   30/    C0A1 :                                             ;Method 2 - 46 cycles
(1)   30/    C0A1 :                                             ;Jump table must be page aligned!!!
(1)   30/    C0A1 :                                             ;LDA (emu_PC,X)                 ;6
(1)   30/    C0A1 :                                             ;STZ emu_ptr+1,X                ;4
(1)   30/    C0A1 :                                             ;ASL                                    ;2
(1)   30/    C0A1 :                                             ;ROL emu_ptr+1,X                ;6
(1)   30/    C0A1 :                                             ;ASL                                    ;2
(1)   30/    C0A1 :                                             ;ROL emu_ptr+1,X                ;6
(1)   30/    C0A1 :                                             ;STA emu_ptr,X                  ;4                              
(1)   30/    C0A1 :                                             ;LDA emu_ptr+1,X                ;4
(1)   30/    C0A1 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   30/    C0A1 :                                             ;STA emu_ptr+1,X                ;4
(1)   30/    C0A1 :                                             ;JMP (emu_ptr2,X)               ;6
(1)   30/    C0A1 :                                             
(1)   30/    C0A1 :                                             ;Method 3 - 30 cycles
(1)   30/    C0A1 :                                             ;TXA                                                    ;2
(1)   30/    C0A1 :                                             ;TAY                                                    ;2
(1)   30/    C0A1 :                                             ;LDA (emu_PC,X)                                 ;6
(1)   30/    C0A1 :                                             ;ASL                                                    ;2
(1)   30/    C0A1 :                                             ;BCS upper                                              ;2
(1)   30/    C0A1 :                                             ;lower:
(1)   30/    C0A1 :                                             ;       ASL                                                     ;2
(1)   30/    C0A1 :                                             ;       TAX                                                     ;2
(1)   30/    C0A1 :                                             ;       BCS upper_lower                         ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 15 - 1/5/2022 11:50:53


(1)   30/    C0A1 :                                             ;       lower_lower:
(1)   30/    C0A1 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   30/    C0A1 :                                             ;       upper_lower:
(1)   30/    C0A1 :                                             ;               JMP (JUMP_TABLE2,X)
(1)   30/    C0A1 :                                             ;upper:
(1)   30/    C0A1 :                                             ;       ASL
(1)   30/    C0A1 :                                             ;       TAX
(1)   30/    C0A1 :                                             ;       BCS upper_upper
(1)   30/    C0A1 :                                             ;       lower_upper:
(1)   30/    C0A1 :                                             ;               JMP (JUMP_TABLE3,X)
(1)   30/    C0A1 :                                             ;       upper_upper:
(1)   30/    C0A1 :                                             ;               JMP (JUMP_TABLE4,X)
(1)   30/    C0A1 :                                             ;After jump:
(1)   30/    C0A1 :                                             ;TYA                                                    ;2
(1)   30/    C0A1 :                                             ;TAX                                                    ;2
(1)   30/    C0A1 :                                             
(1)   30/    C0A1 :                                             ;Method 4 - 28 cycles
(1)   30/    C0A1 :                                             ;LDA (emu_PC,X)                 ;6
(1)   30/    C0A1 :                                             ;TAY                                    ;2
(1)   30/    C0A1 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)   30/    C0A1 :                                             ;PHA                                    ;3
(1)   30/    C0A1 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)   30/    C0A1 :                                             ;PHA                                    ;3
(1)   30/    C0A1 :                                             ;RTS                                    ;6
(1)   30/    C0A1 :                                             
(1)   30/    C0A1 :                                             ;Method 5 - 30 cycles
(1)   30/    C0A1 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)   30/    C0A3 : A8                                          TAY                                             ;2
(1)   30/    C0A4 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)   30/    C0A7 : 95 0A                                       STA emu_ptr,X                   ;4
(1)   30/    C0A9 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)   30/    C0AC : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)   30/    C0AE : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)   30/    C0B1 :                                                                     
(1)   31/    C0B1 :                     
(1)   32/    C0B1 :                     	;0x6 - ASL ZP
(1)   33/    C0B1 :                     	ASL_ZP:
(1)   34/    C0B1 : (MACRO)             		OP_MACRO 6, "ASL", "ZP", "ASL_ZP"
(1)   34/    C0B1 :                                             ;TODO
(1)   35/    C0B1 : (MACRO)             		NEXT_MACRO
(1)   35/    C0B1 :                                             
(1)   35/    C0B1 :  (MACRO-2)                                  halt
(1)   35/    C0B1 : 00                                  BRK
(1)   35/    C0B2 : 00                                  BRK
(1)   35/    C0B3 :                                             
(1)   35/    C0B3 :                                             ;Method 1 - 60 cycles
(1)   35/    C0B3 :                                             ;Jump table must be page aligned!!!
(1)   35/    C0B3 :                                             ;LDA (emu_PC,X)                 ;6
(1)   35/    C0B3 :                                             ;ASL                                    ;2
(1)   35/    C0B3 :                                             ;STA emu_ptr,X                  ;4
(1)   35/    C0B3 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   35/    C0B3 :                                             ;ADC #0                                 ;2
(1)   35/    C0B3 :                                             ;STA emu_ptr+1,X                ;4
(1)   35/    C0B3 :                                             ;LDA (emu_ptr,X)                ;6
(1)   35/    C0B3 :                                             ;STA emu_ptr2,X                 ;4
(1)   35/    C0B3 :                                             ;INC emu_ptr,X                  ;6
(1)   35/    C0B3 :                                             ;BCC .skip                              ;2
(1)   35/    C0B3 :                                             ;       INC emu_ptr+1,X         ;6
(1)   35/    C0B3 :                                             ;.skip:
(1)   35/    C0B3 :                                             ;LDA (emu_ptr,X)                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 16 - 1/5/2022 11:50:53


(1)   35/    C0B3 :                                             ;STA emu_ptr2+1,X               ;4
(1)   35/    C0B3 :                                             ;JMP (emu_ptr2,X)               ;6
(1)   35/    C0B3 :                                             
(1)   35/    C0B3 :                                             ;Method 2 - 46 cycles
(1)   35/    C0B3 :                                             ;Jump table must be page aligned!!!
(1)   35/    C0B3 :                                             ;LDA (emu_PC,X)                 ;6
(1)   35/    C0B3 :                                             ;STZ emu_ptr+1,X                ;4
(1)   35/    C0B3 :                                             ;ASL                                    ;2
(1)   35/    C0B3 :                                             ;ROL emu_ptr+1,X                ;6
(1)   35/    C0B3 :                                             ;ASL                                    ;2
(1)   35/    C0B3 :                                             ;ROL emu_ptr+1,X                ;6
(1)   35/    C0B3 :                                             ;STA emu_ptr,X                  ;4                              
(1)   35/    C0B3 :                                             ;LDA emu_ptr+1,X                ;4
(1)   35/    C0B3 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   35/    C0B3 :                                             ;STA emu_ptr+1,X                ;4
(1)   35/    C0B3 :                                             ;JMP (emu_ptr2,X)               ;6
(1)   35/    C0B3 :                                             
(1)   35/    C0B3 :                                             ;Method 3 - 30 cycles
(1)   35/    C0B3 :                                             ;TXA                                                    ;2
(1)   35/    C0B3 :                                             ;TAY                                                    ;2
(1)   35/    C0B3 :                                             ;LDA (emu_PC,X)                                 ;6
(1)   35/    C0B3 :                                             ;ASL                                                    ;2
(1)   35/    C0B3 :                                             ;BCS upper                                              ;2
(1)   35/    C0B3 :                                             ;lower:
(1)   35/    C0B3 :                                             ;       ASL                                                     ;2
(1)   35/    C0B3 :                                             ;       TAX                                                     ;2
(1)   35/    C0B3 :                                             ;       BCS upper_lower                         ;2
(1)   35/    C0B3 :                                             ;       lower_lower:
(1)   35/    C0B3 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   35/    C0B3 :                                             ;       upper_lower:
(1)   35/    C0B3 :                                             ;               JMP (JUMP_TABLE2,X)
(1)   35/    C0B3 :                                             ;upper:
(1)   35/    C0B3 :                                             ;       ASL
(1)   35/    C0B3 :                                             ;       TAX
(1)   35/    C0B3 :                                             ;       BCS upper_upper
(1)   35/    C0B3 :                                             ;       lower_upper:
(1)   35/    C0B3 :                                             ;               JMP (JUMP_TABLE3,X)
(1)   35/    C0B3 :                                             ;       upper_upper:
(1)   35/    C0B3 :                                             ;               JMP (JUMP_TABLE4,X)
(1)   35/    C0B3 :                                             ;After jump:
(1)   35/    C0B3 :                                             ;TYA                                                    ;2
(1)   35/    C0B3 :                                             ;TAX                                                    ;2
(1)   35/    C0B3 :                                             
(1)   35/    C0B3 :                                             ;Method 4 - 28 cycles
(1)   35/    C0B3 :                                             ;LDA (emu_PC,X)                 ;6
(1)   35/    C0B3 :                                             ;TAY                                    ;2
(1)   35/    C0B3 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)   35/    C0B3 :                                             ;PHA                                    ;3
(1)   35/    C0B3 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)   35/    C0B3 :                                             ;PHA                                    ;3
(1)   35/    C0B3 :                                             ;RTS                                    ;6
(1)   35/    C0B3 :                                             
(1)   35/    C0B3 :                                             ;Method 5 - 30 cycles
(1)   35/    C0B3 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)   35/    C0B5 : A8                                          TAY                                             ;2
(1)   35/    C0B6 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)   35/    C0B9 : 95 0A                                       STA emu_ptr,X                   ;4
(1)   35/    C0BB : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)   35/    C0BE : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)   35/    C0C0 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 17 - 1/5/2022 11:50:53


(1)   35/    C0C3 :                                                                     
(1)   36/    C0C3 :                     
(1)   37/    C0C3 :                     	;0x7 - NOP
(1)   38/    C0C3 :                     	NOP_0x7:
(1)   39/    C0C3 : (MACRO)             		OP_MACRO 7, "NOP", "IMP", "NOP_0x7"
(1)   39/    C0C3 :                                             ;TODO
(1)   40/    C0C3 : (MACRO)             		NEXT_MACRO
(1)   40/    C0C3 :                                             
(1)   40/    C0C3 :  (MACRO-2)                                  halt
(1)   40/    C0C3 : 00                                  BRK
(1)   40/    C0C4 : 00                                  BRK
(1)   40/    C0C5 :                                             
(1)   40/    C0C5 :                                             ;Method 1 - 60 cycles
(1)   40/    C0C5 :                                             ;Jump table must be page aligned!!!
(1)   40/    C0C5 :                                             ;LDA (emu_PC,X)                 ;6
(1)   40/    C0C5 :                                             ;ASL                                    ;2
(1)   40/    C0C5 :                                             ;STA emu_ptr,X                  ;4
(1)   40/    C0C5 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   40/    C0C5 :                                             ;ADC #0                                 ;2
(1)   40/    C0C5 :                                             ;STA emu_ptr+1,X                ;4
(1)   40/    C0C5 :                                             ;LDA (emu_ptr,X)                ;6
(1)   40/    C0C5 :                                             ;STA emu_ptr2,X                 ;4
(1)   40/    C0C5 :                                             ;INC emu_ptr,X                  ;6
(1)   40/    C0C5 :                                             ;BCC .skip                              ;2
(1)   40/    C0C5 :                                             ;       INC emu_ptr+1,X         ;6
(1)   40/    C0C5 :                                             ;.skip:
(1)   40/    C0C5 :                                             ;LDA (emu_ptr,X)                ;6
(1)   40/    C0C5 :                                             ;STA emu_ptr2+1,X               ;4
(1)   40/    C0C5 :                                             ;JMP (emu_ptr2,X)               ;6
(1)   40/    C0C5 :                                             
(1)   40/    C0C5 :                                             ;Method 2 - 46 cycles
(1)   40/    C0C5 :                                             ;Jump table must be page aligned!!!
(1)   40/    C0C5 :                                             ;LDA (emu_PC,X)                 ;6
(1)   40/    C0C5 :                                             ;STZ emu_ptr+1,X                ;4
(1)   40/    C0C5 :                                             ;ASL                                    ;2
(1)   40/    C0C5 :                                             ;ROL emu_ptr+1,X                ;6
(1)   40/    C0C5 :                                             ;ASL                                    ;2
(1)   40/    C0C5 :                                             ;ROL emu_ptr+1,X                ;6
(1)   40/    C0C5 :                                             ;STA emu_ptr,X                  ;4                              
(1)   40/    C0C5 :                                             ;LDA emu_ptr+1,X                ;4
(1)   40/    C0C5 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   40/    C0C5 :                                             ;STA emu_ptr+1,X                ;4
(1)   40/    C0C5 :                                             ;JMP (emu_ptr2,X)               ;6
(1)   40/    C0C5 :                                             
(1)   40/    C0C5 :                                             ;Method 3 - 30 cycles
(1)   40/    C0C5 :                                             ;TXA                                                    ;2
(1)   40/    C0C5 :                                             ;TAY                                                    ;2
(1)   40/    C0C5 :                                             ;LDA (emu_PC,X)                                 ;6
(1)   40/    C0C5 :                                             ;ASL                                                    ;2
(1)   40/    C0C5 :                                             ;BCS upper                                              ;2
(1)   40/    C0C5 :                                             ;lower:
(1)   40/    C0C5 :                                             ;       ASL                                                     ;2
(1)   40/    C0C5 :                                             ;       TAX                                                     ;2
(1)   40/    C0C5 :                                             ;       BCS upper_lower                         ;2
(1)   40/    C0C5 :                                             ;       lower_lower:
(1)   40/    C0C5 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   40/    C0C5 :                                             ;       upper_lower:
(1)   40/    C0C5 :                                             ;               JMP (JUMP_TABLE2,X)
(1)   40/    C0C5 :                                             ;upper:
(1)   40/    C0C5 :                                             ;       ASL
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 18 - 1/5/2022 11:50:53


(1)   40/    C0C5 :                                             ;       TAX
(1)   40/    C0C5 :                                             ;       BCS upper_upper
(1)   40/    C0C5 :                                             ;       lower_upper:
(1)   40/    C0C5 :                                             ;               JMP (JUMP_TABLE3,X)
(1)   40/    C0C5 :                                             ;       upper_upper:
(1)   40/    C0C5 :                                             ;               JMP (JUMP_TABLE4,X)
(1)   40/    C0C5 :                                             ;After jump:
(1)   40/    C0C5 :                                             ;TYA                                                    ;2
(1)   40/    C0C5 :                                             ;TAX                                                    ;2
(1)   40/    C0C5 :                                             
(1)   40/    C0C5 :                                             ;Method 4 - 28 cycles
(1)   40/    C0C5 :                                             ;LDA (emu_PC,X)                 ;6
(1)   40/    C0C5 :                                             ;TAY                                    ;2
(1)   40/    C0C5 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)   40/    C0C5 :                                             ;PHA                                    ;3
(1)   40/    C0C5 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)   40/    C0C5 :                                             ;PHA                                    ;3
(1)   40/    C0C5 :                                             ;RTS                                    ;6
(1)   40/    C0C5 :                                             
(1)   40/    C0C5 :                                             ;Method 5 - 30 cycles
(1)   40/    C0C5 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)   40/    C0C7 : A8                                          TAY                                             ;2
(1)   40/    C0C8 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)   40/    C0CB : 95 0A                                       STA emu_ptr,X                   ;4
(1)   40/    C0CD : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)   40/    C0D0 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)   40/    C0D2 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)   40/    C0D5 :                                                                     
(1)   41/    C0D5 :                     
(1)   42/    C0D5 :                     	;0x8 - PHP IMP
(1)   43/    C0D5 :                     	PHP_IMP:
(1)   44/    C0D5 : (MACRO)             		OP_MACRO 8, "PHP", "IMP", "PHP_IMP"
(1)   44/    C0D5 :                                             ;TODO
(1)   45/    C0D5 : (MACRO)             		NEXT_MACRO
(1)   45/    C0D5 :                                             
(1)   45/    C0D5 :  (MACRO-2)                                  halt
(1)   45/    C0D5 : 00                                  BRK
(1)   45/    C0D6 : 00                                  BRK
(1)   45/    C0D7 :                                             
(1)   45/    C0D7 :                                             ;Method 1 - 60 cycles
(1)   45/    C0D7 :                                             ;Jump table must be page aligned!!!
(1)   45/    C0D7 :                                             ;LDA (emu_PC,X)                 ;6
(1)   45/    C0D7 :                                             ;ASL                                    ;2
(1)   45/    C0D7 :                                             ;STA emu_ptr,X                  ;4
(1)   45/    C0D7 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   45/    C0D7 :                                             ;ADC #0                                 ;2
(1)   45/    C0D7 :                                             ;STA emu_ptr+1,X                ;4
(1)   45/    C0D7 :                                             ;LDA (emu_ptr,X)                ;6
(1)   45/    C0D7 :                                             ;STA emu_ptr2,X                 ;4
(1)   45/    C0D7 :                                             ;INC emu_ptr,X                  ;6
(1)   45/    C0D7 :                                             ;BCC .skip                              ;2
(1)   45/    C0D7 :                                             ;       INC emu_ptr+1,X         ;6
(1)   45/    C0D7 :                                             ;.skip:
(1)   45/    C0D7 :                                             ;LDA (emu_ptr,X)                ;6
(1)   45/    C0D7 :                                             ;STA emu_ptr2+1,X               ;4
(1)   45/    C0D7 :                                             ;JMP (emu_ptr2,X)               ;6
(1)   45/    C0D7 :                                             
(1)   45/    C0D7 :                                             ;Method 2 - 46 cycles
(1)   45/    C0D7 :                                             ;Jump table must be page aligned!!!
(1)   45/    C0D7 :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 19 - 1/5/2022 11:50:53


(1)   45/    C0D7 :                                             ;STZ emu_ptr+1,X                ;4
(1)   45/    C0D7 :                                             ;ASL                                    ;2
(1)   45/    C0D7 :                                             ;ROL emu_ptr+1,X                ;6
(1)   45/    C0D7 :                                             ;ASL                                    ;2
(1)   45/    C0D7 :                                             ;ROL emu_ptr+1,X                ;6
(1)   45/    C0D7 :                                             ;STA emu_ptr,X                  ;4                              
(1)   45/    C0D7 :                                             ;LDA emu_ptr+1,X                ;4
(1)   45/    C0D7 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   45/    C0D7 :                                             ;STA emu_ptr+1,X                ;4
(1)   45/    C0D7 :                                             ;JMP (emu_ptr2,X)               ;6
(1)   45/    C0D7 :                                             
(1)   45/    C0D7 :                                             ;Method 3 - 30 cycles
(1)   45/    C0D7 :                                             ;TXA                                                    ;2
(1)   45/    C0D7 :                                             ;TAY                                                    ;2
(1)   45/    C0D7 :                                             ;LDA (emu_PC,X)                                 ;6
(1)   45/    C0D7 :                                             ;ASL                                                    ;2
(1)   45/    C0D7 :                                             ;BCS upper                                              ;2
(1)   45/    C0D7 :                                             ;lower:
(1)   45/    C0D7 :                                             ;       ASL                                                     ;2
(1)   45/    C0D7 :                                             ;       TAX                                                     ;2
(1)   45/    C0D7 :                                             ;       BCS upper_lower                         ;2
(1)   45/    C0D7 :                                             ;       lower_lower:
(1)   45/    C0D7 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   45/    C0D7 :                                             ;       upper_lower:
(1)   45/    C0D7 :                                             ;               JMP (JUMP_TABLE2,X)
(1)   45/    C0D7 :                                             ;upper:
(1)   45/    C0D7 :                                             ;       ASL
(1)   45/    C0D7 :                                             ;       TAX
(1)   45/    C0D7 :                                             ;       BCS upper_upper
(1)   45/    C0D7 :                                             ;       lower_upper:
(1)   45/    C0D7 :                                             ;               JMP (JUMP_TABLE3,X)
(1)   45/    C0D7 :                                             ;       upper_upper:
(1)   45/    C0D7 :                                             ;               JMP (JUMP_TABLE4,X)
(1)   45/    C0D7 :                                             ;After jump:
(1)   45/    C0D7 :                                             ;TYA                                                    ;2
(1)   45/    C0D7 :                                             ;TAX                                                    ;2
(1)   45/    C0D7 :                                             
(1)   45/    C0D7 :                                             ;Method 4 - 28 cycles
(1)   45/    C0D7 :                                             ;LDA (emu_PC,X)                 ;6
(1)   45/    C0D7 :                                             ;TAY                                    ;2
(1)   45/    C0D7 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)   45/    C0D7 :                                             ;PHA                                    ;3
(1)   45/    C0D7 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)   45/    C0D7 :                                             ;PHA                                    ;3
(1)   45/    C0D7 :                                             ;RTS                                    ;6
(1)   45/    C0D7 :                                             
(1)   45/    C0D7 :                                             ;Method 5 - 30 cycles
(1)   45/    C0D7 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)   45/    C0D9 : A8                                          TAY                                             ;2
(1)   45/    C0DA : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)   45/    C0DD : 95 0A                                       STA emu_ptr,X                   ;4
(1)   45/    C0DF : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)   45/    C0E2 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)   45/    C0E4 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)   45/    C0E7 :                                                                     
(1)   46/    C0E7 :                     
(1)   47/    C0E7 :                     	;0x9 - ORA IMMED
(1)   48/    C0E7 :                     	ORA_IMMED:
(1)   49/    C0E7 : (MACRO)             		OP_MACRO 9, "ORA", "IMMED", "ORA_IMMED"
(1)   49/    C0E7 :                                             ;TODO
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 20 - 1/5/2022 11:50:53


(1)   50/    C0E7 : (MACRO)             		NEXT_MACRO
(1)   50/    C0E7 :                                             
(1)   50/    C0E7 :  (MACRO-2)                                  halt
(1)   50/    C0E7 : 00                                  BRK
(1)   50/    C0E8 : 00                                  BRK
(1)   50/    C0E9 :                                             
(1)   50/    C0E9 :                                             ;Method 1 - 60 cycles
(1)   50/    C0E9 :                                             ;Jump table must be page aligned!!!
(1)   50/    C0E9 :                                             ;LDA (emu_PC,X)                 ;6
(1)   50/    C0E9 :                                             ;ASL                                    ;2
(1)   50/    C0E9 :                                             ;STA emu_ptr,X                  ;4
(1)   50/    C0E9 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   50/    C0E9 :                                             ;ADC #0                                 ;2
(1)   50/    C0E9 :                                             ;STA emu_ptr+1,X                ;4
(1)   50/    C0E9 :                                             ;LDA (emu_ptr,X)                ;6
(1)   50/    C0E9 :                                             ;STA emu_ptr2,X                 ;4
(1)   50/    C0E9 :                                             ;INC emu_ptr,X                  ;6
(1)   50/    C0E9 :                                             ;BCC .skip                              ;2
(1)   50/    C0E9 :                                             ;       INC emu_ptr+1,X         ;6
(1)   50/    C0E9 :                                             ;.skip:
(1)   50/    C0E9 :                                             ;LDA (emu_ptr,X)                ;6
(1)   50/    C0E9 :                                             ;STA emu_ptr2+1,X               ;4
(1)   50/    C0E9 :                                             ;JMP (emu_ptr2,X)               ;6
(1)   50/    C0E9 :                                             
(1)   50/    C0E9 :                                             ;Method 2 - 46 cycles
(1)   50/    C0E9 :                                             ;Jump table must be page aligned!!!
(1)   50/    C0E9 :                                             ;LDA (emu_PC,X)                 ;6
(1)   50/    C0E9 :                                             ;STZ emu_ptr+1,X                ;4
(1)   50/    C0E9 :                                             ;ASL                                    ;2
(1)   50/    C0E9 :                                             ;ROL emu_ptr+1,X                ;6
(1)   50/    C0E9 :                                             ;ASL                                    ;2
(1)   50/    C0E9 :                                             ;ROL emu_ptr+1,X                ;6
(1)   50/    C0E9 :                                             ;STA emu_ptr,X                  ;4                              
(1)   50/    C0E9 :                                             ;LDA emu_ptr+1,X                ;4
(1)   50/    C0E9 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   50/    C0E9 :                                             ;STA emu_ptr+1,X                ;4
(1)   50/    C0E9 :                                             ;JMP (emu_ptr2,X)               ;6
(1)   50/    C0E9 :                                             
(1)   50/    C0E9 :                                             ;Method 3 - 30 cycles
(1)   50/    C0E9 :                                             ;TXA                                                    ;2
(1)   50/    C0E9 :                                             ;TAY                                                    ;2
(1)   50/    C0E9 :                                             ;LDA (emu_PC,X)                                 ;6
(1)   50/    C0E9 :                                             ;ASL                                                    ;2
(1)   50/    C0E9 :                                             ;BCS upper                                              ;2
(1)   50/    C0E9 :                                             ;lower:
(1)   50/    C0E9 :                                             ;       ASL                                                     ;2
(1)   50/    C0E9 :                                             ;       TAX                                                     ;2
(1)   50/    C0E9 :                                             ;       BCS upper_lower                         ;2
(1)   50/    C0E9 :                                             ;       lower_lower:
(1)   50/    C0E9 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   50/    C0E9 :                                             ;       upper_lower:
(1)   50/    C0E9 :                                             ;               JMP (JUMP_TABLE2,X)
(1)   50/    C0E9 :                                             ;upper:
(1)   50/    C0E9 :                                             ;       ASL
(1)   50/    C0E9 :                                             ;       TAX
(1)   50/    C0E9 :                                             ;       BCS upper_upper
(1)   50/    C0E9 :                                             ;       lower_upper:
(1)   50/    C0E9 :                                             ;               JMP (JUMP_TABLE3,X)
(1)   50/    C0E9 :                                             ;       upper_upper:
(1)   50/    C0E9 :                                             ;               JMP (JUMP_TABLE4,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 21 - 1/5/2022 11:50:53


(1)   50/    C0E9 :                                             ;After jump:
(1)   50/    C0E9 :                                             ;TYA                                                    ;2
(1)   50/    C0E9 :                                             ;TAX                                                    ;2
(1)   50/    C0E9 :                                             
(1)   50/    C0E9 :                                             ;Method 4 - 28 cycles
(1)   50/    C0E9 :                                             ;LDA (emu_PC,X)                 ;6
(1)   50/    C0E9 :                                             ;TAY                                    ;2
(1)   50/    C0E9 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)   50/    C0E9 :                                             ;PHA                                    ;3
(1)   50/    C0E9 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)   50/    C0E9 :                                             ;PHA                                    ;3
(1)   50/    C0E9 :                                             ;RTS                                    ;6
(1)   50/    C0E9 :                                             
(1)   50/    C0E9 :                                             ;Method 5 - 30 cycles
(1)   50/    C0E9 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)   50/    C0EB : A8                                          TAY                                             ;2
(1)   50/    C0EC : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)   50/    C0EF : 95 0A                                       STA emu_ptr,X                   ;4
(1)   50/    C0F1 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)   50/    C0F4 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)   50/    C0F6 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)   50/    C0F9 :                                                                     
(1)   51/    C0F9 :                     
(1)   52/    C0F9 :                     	;0xA - ASL A
(1)   53/    C0F9 :                     	ASL_A:
(1)   54/    C0F9 : (MACRO)             		OP_MACRO 10, "ASL", "A", "ASL_A"
(1)   54/    C0F9 :                                             ;TODO
(1)   55/    C0F9 : (MACRO)             		NEXT_MACRO
(1)   55/    C0F9 :                                             
(1)   55/    C0F9 :  (MACRO-2)                                  halt
(1)   55/    C0F9 : 00                                  BRK
(1)   55/    C0FA : 00                                  BRK
(1)   55/    C0FB :                                             
(1)   55/    C0FB :                                             ;Method 1 - 60 cycles
(1)   55/    C0FB :                                             ;Jump table must be page aligned!!!
(1)   55/    C0FB :                                             ;LDA (emu_PC,X)                 ;6
(1)   55/    C0FB :                                             ;ASL                                    ;2
(1)   55/    C0FB :                                             ;STA emu_ptr,X                  ;4
(1)   55/    C0FB :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   55/    C0FB :                                             ;ADC #0                                 ;2
(1)   55/    C0FB :                                             ;STA emu_ptr+1,X                ;4
(1)   55/    C0FB :                                             ;LDA (emu_ptr,X)                ;6
(1)   55/    C0FB :                                             ;STA emu_ptr2,X                 ;4
(1)   55/    C0FB :                                             ;INC emu_ptr,X                  ;6
(1)   55/    C0FB :                                             ;BCC .skip                              ;2
(1)   55/    C0FB :                                             ;       INC emu_ptr+1,X         ;6
(1)   55/    C0FB :                                             ;.skip:
(1)   55/    C0FB :                                             ;LDA (emu_ptr,X)                ;6
(1)   55/    C0FB :                                             ;STA emu_ptr2+1,X               ;4
(1)   55/    C0FB :                                             ;JMP (emu_ptr2,X)               ;6
(1)   55/    C0FB :                                             
(1)   55/    C0FB :                                             ;Method 2 - 46 cycles
(1)   55/    C0FB :                                             ;Jump table must be page aligned!!!
(1)   55/    C0FB :                                             ;LDA (emu_PC,X)                 ;6
(1)   55/    C0FB :                                             ;STZ emu_ptr+1,X                ;4
(1)   55/    C0FB :                                             ;ASL                                    ;2
(1)   55/    C0FB :                                             ;ROL emu_ptr+1,X                ;6
(1)   55/    C0FB :                                             ;ASL                                    ;2
(1)   55/    C0FB :                                             ;ROL emu_ptr+1,X                ;6
(1)   55/    C0FB :                                             ;STA emu_ptr,X                  ;4                              
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 22 - 1/5/2022 11:50:53


(1)   55/    C0FB :                                             ;LDA emu_ptr+1,X                ;4
(1)   55/    C0FB :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   55/    C0FB :                                             ;STA emu_ptr+1,X                ;4
(1)   55/    C0FB :                                             ;JMP (emu_ptr2,X)               ;6
(1)   55/    C0FB :                                             
(1)   55/    C0FB :                                             ;Method 3 - 30 cycles
(1)   55/    C0FB :                                             ;TXA                                                    ;2
(1)   55/    C0FB :                                             ;TAY                                                    ;2
(1)   55/    C0FB :                                             ;LDA (emu_PC,X)                                 ;6
(1)   55/    C0FB :                                             ;ASL                                                    ;2
(1)   55/    C0FB :                                             ;BCS upper                                              ;2
(1)   55/    C0FB :                                             ;lower:
(1)   55/    C0FB :                                             ;       ASL                                                     ;2
(1)   55/    C0FB :                                             ;       TAX                                                     ;2
(1)   55/    C0FB :                                             ;       BCS upper_lower                         ;2
(1)   55/    C0FB :                                             ;       lower_lower:
(1)   55/    C0FB :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   55/    C0FB :                                             ;       upper_lower:
(1)   55/    C0FB :                                             ;               JMP (JUMP_TABLE2,X)
(1)   55/    C0FB :                                             ;upper:
(1)   55/    C0FB :                                             ;       ASL
(1)   55/    C0FB :                                             ;       TAX
(1)   55/    C0FB :                                             ;       BCS upper_upper
(1)   55/    C0FB :                                             ;       lower_upper:
(1)   55/    C0FB :                                             ;               JMP (JUMP_TABLE3,X)
(1)   55/    C0FB :                                             ;       upper_upper:
(1)   55/    C0FB :                                             ;               JMP (JUMP_TABLE4,X)
(1)   55/    C0FB :                                             ;After jump:
(1)   55/    C0FB :                                             ;TYA                                                    ;2
(1)   55/    C0FB :                                             ;TAX                                                    ;2
(1)   55/    C0FB :                                             
(1)   55/    C0FB :                                             ;Method 4 - 28 cycles
(1)   55/    C0FB :                                             ;LDA (emu_PC,X)                 ;6
(1)   55/    C0FB :                                             ;TAY                                    ;2
(1)   55/    C0FB :                                             ;LDA JUMP_TABLE,Y               ;4
(1)   55/    C0FB :                                             ;PHA                                    ;3
(1)   55/    C0FB :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)   55/    C0FB :                                             ;PHA                                    ;3
(1)   55/    C0FB :                                             ;RTS                                    ;6
(1)   55/    C0FB :                                             
(1)   55/    C0FB :                                             ;Method 5 - 30 cycles
(1)   55/    C0FB : A1 02                                       LDA (emu_PC,X)                  ;6
(1)   55/    C0FD : A8                                          TAY                                             ;2
(1)   55/    C0FE : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)   55/    C101 : 95 0A                                       STA emu_ptr,X                   ;4
(1)   55/    C103 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)   55/    C106 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)   55/    C108 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)   55/    C10B :                                                                     
(1)   56/    C10B :                     
(1)   57/    C10B :                     	;0xB - NOP
(1)   58/    C10B :                     	NOP_0xB:
(1)   59/    C10B : (MACRO)             		OP_MACRO 11, "NOP", "IMP", "NOP_0xB"
(1)   59/    C10B :                                             ;TODO
(1)   60/    C10B : (MACRO)             		NEXT_MACRO
(1)   60/    C10B :                                             
(1)   60/    C10B :  (MACRO-2)                                  halt
(1)   60/    C10B : 00                                  BRK
(1)   60/    C10C : 00                                  BRK
(1)   60/    C10D :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 23 - 1/5/2022 11:50:53


(1)   60/    C10D :                                             ;Method 1 - 60 cycles
(1)   60/    C10D :                                             ;Jump table must be page aligned!!!
(1)   60/    C10D :                                             ;LDA (emu_PC,X)                 ;6
(1)   60/    C10D :                                             ;ASL                                    ;2
(1)   60/    C10D :                                             ;STA emu_ptr,X                  ;4
(1)   60/    C10D :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   60/    C10D :                                             ;ADC #0                                 ;2
(1)   60/    C10D :                                             ;STA emu_ptr+1,X                ;4
(1)   60/    C10D :                                             ;LDA (emu_ptr,X)                ;6
(1)   60/    C10D :                                             ;STA emu_ptr2,X                 ;4
(1)   60/    C10D :                                             ;INC emu_ptr,X                  ;6
(1)   60/    C10D :                                             ;BCC .skip                              ;2
(1)   60/    C10D :                                             ;       INC emu_ptr+1,X         ;6
(1)   60/    C10D :                                             ;.skip:
(1)   60/    C10D :                                             ;LDA (emu_ptr,X)                ;6
(1)   60/    C10D :                                             ;STA emu_ptr2+1,X               ;4
(1)   60/    C10D :                                             ;JMP (emu_ptr2,X)               ;6
(1)   60/    C10D :                                             
(1)   60/    C10D :                                             ;Method 2 - 46 cycles
(1)   60/    C10D :                                             ;Jump table must be page aligned!!!
(1)   60/    C10D :                                             ;LDA (emu_PC,X)                 ;6
(1)   60/    C10D :                                             ;STZ emu_ptr+1,X                ;4
(1)   60/    C10D :                                             ;ASL                                    ;2
(1)   60/    C10D :                                             ;ROL emu_ptr+1,X                ;6
(1)   60/    C10D :                                             ;ASL                                    ;2
(1)   60/    C10D :                                             ;ROL emu_ptr+1,X                ;6
(1)   60/    C10D :                                             ;STA emu_ptr,X                  ;4                              
(1)   60/    C10D :                                             ;LDA emu_ptr+1,X                ;4
(1)   60/    C10D :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   60/    C10D :                                             ;STA emu_ptr+1,X                ;4
(1)   60/    C10D :                                             ;JMP (emu_ptr2,X)               ;6
(1)   60/    C10D :                                             
(1)   60/    C10D :                                             ;Method 3 - 30 cycles
(1)   60/    C10D :                                             ;TXA                                                    ;2
(1)   60/    C10D :                                             ;TAY                                                    ;2
(1)   60/    C10D :                                             ;LDA (emu_PC,X)                                 ;6
(1)   60/    C10D :                                             ;ASL                                                    ;2
(1)   60/    C10D :                                             ;BCS upper                                              ;2
(1)   60/    C10D :                                             ;lower:
(1)   60/    C10D :                                             ;       ASL                                                     ;2
(1)   60/    C10D :                                             ;       TAX                                                     ;2
(1)   60/    C10D :                                             ;       BCS upper_lower                         ;2
(1)   60/    C10D :                                             ;       lower_lower:
(1)   60/    C10D :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   60/    C10D :                                             ;       upper_lower:
(1)   60/    C10D :                                             ;               JMP (JUMP_TABLE2,X)
(1)   60/    C10D :                                             ;upper:
(1)   60/    C10D :                                             ;       ASL
(1)   60/    C10D :                                             ;       TAX
(1)   60/    C10D :                                             ;       BCS upper_upper
(1)   60/    C10D :                                             ;       lower_upper:
(1)   60/    C10D :                                             ;               JMP (JUMP_TABLE3,X)
(1)   60/    C10D :                                             ;       upper_upper:
(1)   60/    C10D :                                             ;               JMP (JUMP_TABLE4,X)
(1)   60/    C10D :                                             ;After jump:
(1)   60/    C10D :                                             ;TYA                                                    ;2
(1)   60/    C10D :                                             ;TAX                                                    ;2
(1)   60/    C10D :                                             
(1)   60/    C10D :                                             ;Method 4 - 28 cycles
(1)   60/    C10D :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 24 - 1/5/2022 11:50:53


(1)   60/    C10D :                                             ;TAY                                    ;2
(1)   60/    C10D :                                             ;LDA JUMP_TABLE,Y               ;4
(1)   60/    C10D :                                             ;PHA                                    ;3
(1)   60/    C10D :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)   60/    C10D :                                             ;PHA                                    ;3
(1)   60/    C10D :                                             ;RTS                                    ;6
(1)   60/    C10D :                                             
(1)   60/    C10D :                                             ;Method 5 - 30 cycles
(1)   60/    C10D : A1 02                                       LDA (emu_PC,X)                  ;6
(1)   60/    C10F : A8                                          TAY                                             ;2
(1)   60/    C110 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)   60/    C113 : 95 0A                                       STA emu_ptr,X                   ;4
(1)   60/    C115 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)   60/    C118 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)   60/    C11A : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)   60/    C11D :                                                                     
(1)   61/    C11D :                     
(1)   62/    C11D :                     	;0xC - NOP
(1)   63/    C11D :                     	NOP_0xC:
(1)   64/    C11D : (MACRO)             		OP_MACRO 12, "NOP", "IMP", "NOP_0xC"
(1)   64/    C11D :                                             ;TODO
(1)   65/    C11D : (MACRO)             		NEXT_MACRO
(1)   65/    C11D :                                             
(1)   65/    C11D :  (MACRO-2)                                  halt
(1)   65/    C11D : 00                                  BRK
(1)   65/    C11E : 00                                  BRK
(1)   65/    C11F :                                             
(1)   65/    C11F :                                             ;Method 1 - 60 cycles
(1)   65/    C11F :                                             ;Jump table must be page aligned!!!
(1)   65/    C11F :                                             ;LDA (emu_PC,X)                 ;6
(1)   65/    C11F :                                             ;ASL                                    ;2
(1)   65/    C11F :                                             ;STA emu_ptr,X                  ;4
(1)   65/    C11F :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   65/    C11F :                                             ;ADC #0                                 ;2
(1)   65/    C11F :                                             ;STA emu_ptr+1,X                ;4
(1)   65/    C11F :                                             ;LDA (emu_ptr,X)                ;6
(1)   65/    C11F :                                             ;STA emu_ptr2,X                 ;4
(1)   65/    C11F :                                             ;INC emu_ptr,X                  ;6
(1)   65/    C11F :                                             ;BCC .skip                              ;2
(1)   65/    C11F :                                             ;       INC emu_ptr+1,X         ;6
(1)   65/    C11F :                                             ;.skip:
(1)   65/    C11F :                                             ;LDA (emu_ptr,X)                ;6
(1)   65/    C11F :                                             ;STA emu_ptr2+1,X               ;4
(1)   65/    C11F :                                             ;JMP (emu_ptr2,X)               ;6
(1)   65/    C11F :                                             
(1)   65/    C11F :                                             ;Method 2 - 46 cycles
(1)   65/    C11F :                                             ;Jump table must be page aligned!!!
(1)   65/    C11F :                                             ;LDA (emu_PC,X)                 ;6
(1)   65/    C11F :                                             ;STZ emu_ptr+1,X                ;4
(1)   65/    C11F :                                             ;ASL                                    ;2
(1)   65/    C11F :                                             ;ROL emu_ptr+1,X                ;6
(1)   65/    C11F :                                             ;ASL                                    ;2
(1)   65/    C11F :                                             ;ROL emu_ptr+1,X                ;6
(1)   65/    C11F :                                             ;STA emu_ptr,X                  ;4                              
(1)   65/    C11F :                                             ;LDA emu_ptr+1,X                ;4
(1)   65/    C11F :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   65/    C11F :                                             ;STA emu_ptr+1,X                ;4
(1)   65/    C11F :                                             ;JMP (emu_ptr2,X)               ;6
(1)   65/    C11F :                                             
(1)   65/    C11F :                                             ;Method 3 - 30 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 25 - 1/5/2022 11:50:53


(1)   65/    C11F :                                             ;TXA                                                    ;2
(1)   65/    C11F :                                             ;TAY                                                    ;2
(1)   65/    C11F :                                             ;LDA (emu_PC,X)                                 ;6
(1)   65/    C11F :                                             ;ASL                                                    ;2
(1)   65/    C11F :                                             ;BCS upper                                              ;2
(1)   65/    C11F :                                             ;lower:
(1)   65/    C11F :                                             ;       ASL                                                     ;2
(1)   65/    C11F :                                             ;       TAX                                                     ;2
(1)   65/    C11F :                                             ;       BCS upper_lower                         ;2
(1)   65/    C11F :                                             ;       lower_lower:
(1)   65/    C11F :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   65/    C11F :                                             ;       upper_lower:
(1)   65/    C11F :                                             ;               JMP (JUMP_TABLE2,X)
(1)   65/    C11F :                                             ;upper:
(1)   65/    C11F :                                             ;       ASL
(1)   65/    C11F :                                             ;       TAX
(1)   65/    C11F :                                             ;       BCS upper_upper
(1)   65/    C11F :                                             ;       lower_upper:
(1)   65/    C11F :                                             ;               JMP (JUMP_TABLE3,X)
(1)   65/    C11F :                                             ;       upper_upper:
(1)   65/    C11F :                                             ;               JMP (JUMP_TABLE4,X)
(1)   65/    C11F :                                             ;After jump:
(1)   65/    C11F :                                             ;TYA                                                    ;2
(1)   65/    C11F :                                             ;TAX                                                    ;2
(1)   65/    C11F :                                             
(1)   65/    C11F :                                             ;Method 4 - 28 cycles
(1)   65/    C11F :                                             ;LDA (emu_PC,X)                 ;6
(1)   65/    C11F :                                             ;TAY                                    ;2
(1)   65/    C11F :                                             ;LDA JUMP_TABLE,Y               ;4
(1)   65/    C11F :                                             ;PHA                                    ;3
(1)   65/    C11F :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)   65/    C11F :                                             ;PHA                                    ;3
(1)   65/    C11F :                                             ;RTS                                    ;6
(1)   65/    C11F :                                             
(1)   65/    C11F :                                             ;Method 5 - 30 cycles
(1)   65/    C11F : A1 02                                       LDA (emu_PC,X)                  ;6
(1)   65/    C121 : A8                                          TAY                                             ;2
(1)   65/    C122 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)   65/    C125 : 95 0A                                       STA emu_ptr,X                   ;4
(1)   65/    C127 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)   65/    C12A : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)   65/    C12C : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)   65/    C12F :                                                                     
(1)   66/    C12F :                     
(1)   67/    C12F :                     	;0xD - ORA ABS
(1)   68/    C12F :                     	ORA_ABS:
(1)   69/    C12F : (MACRO)             		OP_MACRO 13, "ORA", "ABS", "ORA_ABS"
(1)   69/    C12F :                                             ;TODO
(1)   70/    C12F : (MACRO)             		NEXT_MACRO
(1)   70/    C12F :                                             
(1)   70/    C12F :  (MACRO-2)                                  halt
(1)   70/    C12F : 00                                  BRK
(1)   70/    C130 : 00                                  BRK
(1)   70/    C131 :                                             
(1)   70/    C131 :                                             ;Method 1 - 60 cycles
(1)   70/    C131 :                                             ;Jump table must be page aligned!!!
(1)   70/    C131 :                                             ;LDA (emu_PC,X)                 ;6
(1)   70/    C131 :                                             ;ASL                                    ;2
(1)   70/    C131 :                                             ;STA emu_ptr,X                  ;4
(1)   70/    C131 :                                             ;LDA #hi(JUMP_TABLE)    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 26 - 1/5/2022 11:50:53


(1)   70/    C131 :                                             ;ADC #0                                 ;2
(1)   70/    C131 :                                             ;STA emu_ptr+1,X                ;4
(1)   70/    C131 :                                             ;LDA (emu_ptr,X)                ;6
(1)   70/    C131 :                                             ;STA emu_ptr2,X                 ;4
(1)   70/    C131 :                                             ;INC emu_ptr,X                  ;6
(1)   70/    C131 :                                             ;BCC .skip                              ;2
(1)   70/    C131 :                                             ;       INC emu_ptr+1,X         ;6
(1)   70/    C131 :                                             ;.skip:
(1)   70/    C131 :                                             ;LDA (emu_ptr,X)                ;6
(1)   70/    C131 :                                             ;STA emu_ptr2+1,X               ;4
(1)   70/    C131 :                                             ;JMP (emu_ptr2,X)               ;6
(1)   70/    C131 :                                             
(1)   70/    C131 :                                             ;Method 2 - 46 cycles
(1)   70/    C131 :                                             ;Jump table must be page aligned!!!
(1)   70/    C131 :                                             ;LDA (emu_PC,X)                 ;6
(1)   70/    C131 :                                             ;STZ emu_ptr+1,X                ;4
(1)   70/    C131 :                                             ;ASL                                    ;2
(1)   70/    C131 :                                             ;ROL emu_ptr+1,X                ;6
(1)   70/    C131 :                                             ;ASL                                    ;2
(1)   70/    C131 :                                             ;ROL emu_ptr+1,X                ;6
(1)   70/    C131 :                                             ;STA emu_ptr,X                  ;4                              
(1)   70/    C131 :                                             ;LDA emu_ptr+1,X                ;4
(1)   70/    C131 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   70/    C131 :                                             ;STA emu_ptr+1,X                ;4
(1)   70/    C131 :                                             ;JMP (emu_ptr2,X)               ;6
(1)   70/    C131 :                                             
(1)   70/    C131 :                                             ;Method 3 - 30 cycles
(1)   70/    C131 :                                             ;TXA                                                    ;2
(1)   70/    C131 :                                             ;TAY                                                    ;2
(1)   70/    C131 :                                             ;LDA (emu_PC,X)                                 ;6
(1)   70/    C131 :                                             ;ASL                                                    ;2
(1)   70/    C131 :                                             ;BCS upper                                              ;2
(1)   70/    C131 :                                             ;lower:
(1)   70/    C131 :                                             ;       ASL                                                     ;2
(1)   70/    C131 :                                             ;       TAX                                                     ;2
(1)   70/    C131 :                                             ;       BCS upper_lower                         ;2
(1)   70/    C131 :                                             ;       lower_lower:
(1)   70/    C131 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   70/    C131 :                                             ;       upper_lower:
(1)   70/    C131 :                                             ;               JMP (JUMP_TABLE2,X)
(1)   70/    C131 :                                             ;upper:
(1)   70/    C131 :                                             ;       ASL
(1)   70/    C131 :                                             ;       TAX
(1)   70/    C131 :                                             ;       BCS upper_upper
(1)   70/    C131 :                                             ;       lower_upper:
(1)   70/    C131 :                                             ;               JMP (JUMP_TABLE3,X)
(1)   70/    C131 :                                             ;       upper_upper:
(1)   70/    C131 :                                             ;               JMP (JUMP_TABLE4,X)
(1)   70/    C131 :                                             ;After jump:
(1)   70/    C131 :                                             ;TYA                                                    ;2
(1)   70/    C131 :                                             ;TAX                                                    ;2
(1)   70/    C131 :                                             
(1)   70/    C131 :                                             ;Method 4 - 28 cycles
(1)   70/    C131 :                                             ;LDA (emu_PC,X)                 ;6
(1)   70/    C131 :                                             ;TAY                                    ;2
(1)   70/    C131 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)   70/    C131 :                                             ;PHA                                    ;3
(1)   70/    C131 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)   70/    C131 :                                             ;PHA                                    ;3
(1)   70/    C131 :                                             ;RTS                                    ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 27 - 1/5/2022 11:50:53


(1)   70/    C131 :                                             
(1)   70/    C131 :                                             ;Method 5 - 30 cycles
(1)   70/    C131 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)   70/    C133 : A8                                          TAY                                             ;2
(1)   70/    C134 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)   70/    C137 : 95 0A                                       STA emu_ptr,X                   ;4
(1)   70/    C139 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)   70/    C13C : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)   70/    C13E : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)   70/    C141 :                                                                     
(1)   71/    C141 :                     
(1)   72/    C141 :                     	;0xE - ASL ABS
(1)   73/    C141 :                     	ASL_ABS:
(1)   74/    C141 : (MACRO)             		OP_MACRO 14, "ASL", "ABS", "ASL_ABS"
(1)   74/    C141 :                                             ;TODO
(1)   75/    C141 : (MACRO)             		NEXT_MACRO
(1)   75/    C141 :                                             
(1)   75/    C141 :  (MACRO-2)                                  halt
(1)   75/    C141 : 00                                  BRK
(1)   75/    C142 : 00                                  BRK
(1)   75/    C143 :                                             
(1)   75/    C143 :                                             ;Method 1 - 60 cycles
(1)   75/    C143 :                                             ;Jump table must be page aligned!!!
(1)   75/    C143 :                                             ;LDA (emu_PC,X)                 ;6
(1)   75/    C143 :                                             ;ASL                                    ;2
(1)   75/    C143 :                                             ;STA emu_ptr,X                  ;4
(1)   75/    C143 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   75/    C143 :                                             ;ADC #0                                 ;2
(1)   75/    C143 :                                             ;STA emu_ptr+1,X                ;4
(1)   75/    C143 :                                             ;LDA (emu_ptr,X)                ;6
(1)   75/    C143 :                                             ;STA emu_ptr2,X                 ;4
(1)   75/    C143 :                                             ;INC emu_ptr,X                  ;6
(1)   75/    C143 :                                             ;BCC .skip                              ;2
(1)   75/    C143 :                                             ;       INC emu_ptr+1,X         ;6
(1)   75/    C143 :                                             ;.skip:
(1)   75/    C143 :                                             ;LDA (emu_ptr,X)                ;6
(1)   75/    C143 :                                             ;STA emu_ptr2+1,X               ;4
(1)   75/    C143 :                                             ;JMP (emu_ptr2,X)               ;6
(1)   75/    C143 :                                             
(1)   75/    C143 :                                             ;Method 2 - 46 cycles
(1)   75/    C143 :                                             ;Jump table must be page aligned!!!
(1)   75/    C143 :                                             ;LDA (emu_PC,X)                 ;6
(1)   75/    C143 :                                             ;STZ emu_ptr+1,X                ;4
(1)   75/    C143 :                                             ;ASL                                    ;2
(1)   75/    C143 :                                             ;ROL emu_ptr+1,X                ;6
(1)   75/    C143 :                                             ;ASL                                    ;2
(1)   75/    C143 :                                             ;ROL emu_ptr+1,X                ;6
(1)   75/    C143 :                                             ;STA emu_ptr,X                  ;4                              
(1)   75/    C143 :                                             ;LDA emu_ptr+1,X                ;4
(1)   75/    C143 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   75/    C143 :                                             ;STA emu_ptr+1,X                ;4
(1)   75/    C143 :                                             ;JMP (emu_ptr2,X)               ;6
(1)   75/    C143 :                                             
(1)   75/    C143 :                                             ;Method 3 - 30 cycles
(1)   75/    C143 :                                             ;TXA                                                    ;2
(1)   75/    C143 :                                             ;TAY                                                    ;2
(1)   75/    C143 :                                             ;LDA (emu_PC,X)                                 ;6
(1)   75/    C143 :                                             ;ASL                                                    ;2
(1)   75/    C143 :                                             ;BCS upper                                              ;2
(1)   75/    C143 :                                             ;lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 28 - 1/5/2022 11:50:53


(1)   75/    C143 :                                             ;       ASL                                                     ;2
(1)   75/    C143 :                                             ;       TAX                                                     ;2
(1)   75/    C143 :                                             ;       BCS upper_lower                         ;2
(1)   75/    C143 :                                             ;       lower_lower:
(1)   75/    C143 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   75/    C143 :                                             ;       upper_lower:
(1)   75/    C143 :                                             ;               JMP (JUMP_TABLE2,X)
(1)   75/    C143 :                                             ;upper:
(1)   75/    C143 :                                             ;       ASL
(1)   75/    C143 :                                             ;       TAX
(1)   75/    C143 :                                             ;       BCS upper_upper
(1)   75/    C143 :                                             ;       lower_upper:
(1)   75/    C143 :                                             ;               JMP (JUMP_TABLE3,X)
(1)   75/    C143 :                                             ;       upper_upper:
(1)   75/    C143 :                                             ;               JMP (JUMP_TABLE4,X)
(1)   75/    C143 :                                             ;After jump:
(1)   75/    C143 :                                             ;TYA                                                    ;2
(1)   75/    C143 :                                             ;TAX                                                    ;2
(1)   75/    C143 :                                             
(1)   75/    C143 :                                             ;Method 4 - 28 cycles
(1)   75/    C143 :                                             ;LDA (emu_PC,X)                 ;6
(1)   75/    C143 :                                             ;TAY                                    ;2
(1)   75/    C143 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)   75/    C143 :                                             ;PHA                                    ;3
(1)   75/    C143 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)   75/    C143 :                                             ;PHA                                    ;3
(1)   75/    C143 :                                             ;RTS                                    ;6
(1)   75/    C143 :                                             
(1)   75/    C143 :                                             ;Method 5 - 30 cycles
(1)   75/    C143 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)   75/    C145 : A8                                          TAY                                             ;2
(1)   75/    C146 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)   75/    C149 : 95 0A                                       STA emu_ptr,X                   ;4
(1)   75/    C14B : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)   75/    C14E : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)   75/    C150 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)   75/    C153 :                                                                     
(1)   76/    C153 :                     
(1)   77/    C153 :                     	;0xF - NOP
(1)   78/    C153 :                     	NOP_0xF:
(1)   79/    C153 : (MACRO)             		OP_MACRO 15, "NOP", "IMP", "NOP_0xF"
(1)   79/    C153 :                                             ;TODO
(1)   80/    C153 : (MACRO)             		NEXT_MACRO
(1)   80/    C153 :                                             
(1)   80/    C153 :  (MACRO-2)                                  halt
(1)   80/    C153 : 00                                  BRK
(1)   80/    C154 : 00                                  BRK
(1)   80/    C155 :                                             
(1)   80/    C155 :                                             ;Method 1 - 60 cycles
(1)   80/    C155 :                                             ;Jump table must be page aligned!!!
(1)   80/    C155 :                                             ;LDA (emu_PC,X)                 ;6
(1)   80/    C155 :                                             ;ASL                                    ;2
(1)   80/    C155 :                                             ;STA emu_ptr,X                  ;4
(1)   80/    C155 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   80/    C155 :                                             ;ADC #0                                 ;2
(1)   80/    C155 :                                             ;STA emu_ptr+1,X                ;4
(1)   80/    C155 :                                             ;LDA (emu_ptr,X)                ;6
(1)   80/    C155 :                                             ;STA emu_ptr2,X                 ;4
(1)   80/    C155 :                                             ;INC emu_ptr,X                  ;6
(1)   80/    C155 :                                             ;BCC .skip                              ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 29 - 1/5/2022 11:50:53


(1)   80/    C155 :                                             ;       INC emu_ptr+1,X         ;6
(1)   80/    C155 :                                             ;.skip:
(1)   80/    C155 :                                             ;LDA (emu_ptr,X)                ;6
(1)   80/    C155 :                                             ;STA emu_ptr2+1,X               ;4
(1)   80/    C155 :                                             ;JMP (emu_ptr2,X)               ;6
(1)   80/    C155 :                                             
(1)   80/    C155 :                                             ;Method 2 - 46 cycles
(1)   80/    C155 :                                             ;Jump table must be page aligned!!!
(1)   80/    C155 :                                             ;LDA (emu_PC,X)                 ;6
(1)   80/    C155 :                                             ;STZ emu_ptr+1,X                ;4
(1)   80/    C155 :                                             ;ASL                                    ;2
(1)   80/    C155 :                                             ;ROL emu_ptr+1,X                ;6
(1)   80/    C155 :                                             ;ASL                                    ;2
(1)   80/    C155 :                                             ;ROL emu_ptr+1,X                ;6
(1)   80/    C155 :                                             ;STA emu_ptr,X                  ;4                              
(1)   80/    C155 :                                             ;LDA emu_ptr+1,X                ;4
(1)   80/    C155 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   80/    C155 :                                             ;STA emu_ptr+1,X                ;4
(1)   80/    C155 :                                             ;JMP (emu_ptr2,X)               ;6
(1)   80/    C155 :                                             
(1)   80/    C155 :                                             ;Method 3 - 30 cycles
(1)   80/    C155 :                                             ;TXA                                                    ;2
(1)   80/    C155 :                                             ;TAY                                                    ;2
(1)   80/    C155 :                                             ;LDA (emu_PC,X)                                 ;6
(1)   80/    C155 :                                             ;ASL                                                    ;2
(1)   80/    C155 :                                             ;BCS upper                                              ;2
(1)   80/    C155 :                                             ;lower:
(1)   80/    C155 :                                             ;       ASL                                                     ;2
(1)   80/    C155 :                                             ;       TAX                                                     ;2
(1)   80/    C155 :                                             ;       BCS upper_lower                         ;2
(1)   80/    C155 :                                             ;       lower_lower:
(1)   80/    C155 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   80/    C155 :                                             ;       upper_lower:
(1)   80/    C155 :                                             ;               JMP (JUMP_TABLE2,X)
(1)   80/    C155 :                                             ;upper:
(1)   80/    C155 :                                             ;       ASL
(1)   80/    C155 :                                             ;       TAX
(1)   80/    C155 :                                             ;       BCS upper_upper
(1)   80/    C155 :                                             ;       lower_upper:
(1)   80/    C155 :                                             ;               JMP (JUMP_TABLE3,X)
(1)   80/    C155 :                                             ;       upper_upper:
(1)   80/    C155 :                                             ;               JMP (JUMP_TABLE4,X)
(1)   80/    C155 :                                             ;After jump:
(1)   80/    C155 :                                             ;TYA                                                    ;2
(1)   80/    C155 :                                             ;TAX                                                    ;2
(1)   80/    C155 :                                             
(1)   80/    C155 :                                             ;Method 4 - 28 cycles
(1)   80/    C155 :                                             ;LDA (emu_PC,X)                 ;6
(1)   80/    C155 :                                             ;TAY                                    ;2
(1)   80/    C155 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)   80/    C155 :                                             ;PHA                                    ;3
(1)   80/    C155 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)   80/    C155 :                                             ;PHA                                    ;3
(1)   80/    C155 :                                             ;RTS                                    ;6
(1)   80/    C155 :                                             
(1)   80/    C155 :                                             ;Method 5 - 30 cycles
(1)   80/    C155 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)   80/    C157 : A8                                          TAY                                             ;2
(1)   80/    C158 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)   80/    C15B : 95 0A                                       STA emu_ptr,X                   ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 30 - 1/5/2022 11:50:53


(1)   80/    C15D : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)   80/    C160 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)   80/    C162 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)   80/    C165 :                                                                     
(1)   81/    C165 :                     
(1)   82/    C165 :                     	;0x10 - BPL REL
(1)   83/    C165 :                     	BPL_REL:
(1)   84/    C165 : (MACRO)             		OP_MACRO 16, "BPL", "REL", "BPL_REL"
(1)   84/    C165 :                                             ;TODO
(1)   85/    C165 : (MACRO)             		NEXT_MACRO
(1)   85/    C165 :                                             
(1)   85/    C165 :  (MACRO-2)                                  halt
(1)   85/    C165 : 00                                  BRK
(1)   85/    C166 : 00                                  BRK
(1)   85/    C167 :                                             
(1)   85/    C167 :                                             ;Method 1 - 60 cycles
(1)   85/    C167 :                                             ;Jump table must be page aligned!!!
(1)   85/    C167 :                                             ;LDA (emu_PC,X)                 ;6
(1)   85/    C167 :                                             ;ASL                                    ;2
(1)   85/    C167 :                                             ;STA emu_ptr,X                  ;4
(1)   85/    C167 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   85/    C167 :                                             ;ADC #0                                 ;2
(1)   85/    C167 :                                             ;STA emu_ptr+1,X                ;4
(1)   85/    C167 :                                             ;LDA (emu_ptr,X)                ;6
(1)   85/    C167 :                                             ;STA emu_ptr2,X                 ;4
(1)   85/    C167 :                                             ;INC emu_ptr,X                  ;6
(1)   85/    C167 :                                             ;BCC .skip                              ;2
(1)   85/    C167 :                                             ;       INC emu_ptr+1,X         ;6
(1)   85/    C167 :                                             ;.skip:
(1)   85/    C167 :                                             ;LDA (emu_ptr,X)                ;6
(1)   85/    C167 :                                             ;STA emu_ptr2+1,X               ;4
(1)   85/    C167 :                                             ;JMP (emu_ptr2,X)               ;6
(1)   85/    C167 :                                             
(1)   85/    C167 :                                             ;Method 2 - 46 cycles
(1)   85/    C167 :                                             ;Jump table must be page aligned!!!
(1)   85/    C167 :                                             ;LDA (emu_PC,X)                 ;6
(1)   85/    C167 :                                             ;STZ emu_ptr+1,X                ;4
(1)   85/    C167 :                                             ;ASL                                    ;2
(1)   85/    C167 :                                             ;ROL emu_ptr+1,X                ;6
(1)   85/    C167 :                                             ;ASL                                    ;2
(1)   85/    C167 :                                             ;ROL emu_ptr+1,X                ;6
(1)   85/    C167 :                                             ;STA emu_ptr,X                  ;4                              
(1)   85/    C167 :                                             ;LDA emu_ptr+1,X                ;4
(1)   85/    C167 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   85/    C167 :                                             ;STA emu_ptr+1,X                ;4
(1)   85/    C167 :                                             ;JMP (emu_ptr2,X)               ;6
(1)   85/    C167 :                                             
(1)   85/    C167 :                                             ;Method 3 - 30 cycles
(1)   85/    C167 :                                             ;TXA                                                    ;2
(1)   85/    C167 :                                             ;TAY                                                    ;2
(1)   85/    C167 :                                             ;LDA (emu_PC,X)                                 ;6
(1)   85/    C167 :                                             ;ASL                                                    ;2
(1)   85/    C167 :                                             ;BCS upper                                              ;2
(1)   85/    C167 :                                             ;lower:
(1)   85/    C167 :                                             ;       ASL                                                     ;2
(1)   85/    C167 :                                             ;       TAX                                                     ;2
(1)   85/    C167 :                                             ;       BCS upper_lower                         ;2
(1)   85/    C167 :                                             ;       lower_lower:
(1)   85/    C167 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   85/    C167 :                                             ;       upper_lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 31 - 1/5/2022 11:50:53


(1)   85/    C167 :                                             ;               JMP (JUMP_TABLE2,X)
(1)   85/    C167 :                                             ;upper:
(1)   85/    C167 :                                             ;       ASL
(1)   85/    C167 :                                             ;       TAX
(1)   85/    C167 :                                             ;       BCS upper_upper
(1)   85/    C167 :                                             ;       lower_upper:
(1)   85/    C167 :                                             ;               JMP (JUMP_TABLE3,X)
(1)   85/    C167 :                                             ;       upper_upper:
(1)   85/    C167 :                                             ;               JMP (JUMP_TABLE4,X)
(1)   85/    C167 :                                             ;After jump:
(1)   85/    C167 :                                             ;TYA                                                    ;2
(1)   85/    C167 :                                             ;TAX                                                    ;2
(1)   85/    C167 :                                             
(1)   85/    C167 :                                             ;Method 4 - 28 cycles
(1)   85/    C167 :                                             ;LDA (emu_PC,X)                 ;6
(1)   85/    C167 :                                             ;TAY                                    ;2
(1)   85/    C167 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)   85/    C167 :                                             ;PHA                                    ;3
(1)   85/    C167 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)   85/    C167 :                                             ;PHA                                    ;3
(1)   85/    C167 :                                             ;RTS                                    ;6
(1)   85/    C167 :                                             
(1)   85/    C167 :                                             ;Method 5 - 30 cycles
(1)   85/    C167 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)   85/    C169 : A8                                          TAY                                             ;2
(1)   85/    C16A : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)   85/    C16D : 95 0A                                       STA emu_ptr,X                   ;4
(1)   85/    C16F : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)   85/    C172 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)   85/    C174 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)   85/    C177 :                                                                     
(1)   86/    C177 :                     
(1)   87/    C177 :                     	;0x11 - ORA IY
(1)   88/    C177 :                     	ORA_IY:
(1)   89/    C177 : (MACRO)             		OP_MACRO 17, "ORA", "IY", "ORA_IY"
(1)   89/    C177 :                                             ;TODO
(1)   90/    C177 : (MACRO)             		NEXT_MACRO
(1)   90/    C177 :                                             
(1)   90/    C177 :  (MACRO-2)                                  halt
(1)   90/    C177 : 00                                  BRK
(1)   90/    C178 : 00                                  BRK
(1)   90/    C179 :                                             
(1)   90/    C179 :                                             ;Method 1 - 60 cycles
(1)   90/    C179 :                                             ;Jump table must be page aligned!!!
(1)   90/    C179 :                                             ;LDA (emu_PC,X)                 ;6
(1)   90/    C179 :                                             ;ASL                                    ;2
(1)   90/    C179 :                                             ;STA emu_ptr,X                  ;4
(1)   90/    C179 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   90/    C179 :                                             ;ADC #0                                 ;2
(1)   90/    C179 :                                             ;STA emu_ptr+1,X                ;4
(1)   90/    C179 :                                             ;LDA (emu_ptr,X)                ;6
(1)   90/    C179 :                                             ;STA emu_ptr2,X                 ;4
(1)   90/    C179 :                                             ;INC emu_ptr,X                  ;6
(1)   90/    C179 :                                             ;BCC .skip                              ;2
(1)   90/    C179 :                                             ;       INC emu_ptr+1,X         ;6
(1)   90/    C179 :                                             ;.skip:
(1)   90/    C179 :                                             ;LDA (emu_ptr,X)                ;6
(1)   90/    C179 :                                             ;STA emu_ptr2+1,X               ;4
(1)   90/    C179 :                                             ;JMP (emu_ptr2,X)               ;6
(1)   90/    C179 :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 32 - 1/5/2022 11:50:53


(1)   90/    C179 :                                             ;Method 2 - 46 cycles
(1)   90/    C179 :                                             ;Jump table must be page aligned!!!
(1)   90/    C179 :                                             ;LDA (emu_PC,X)                 ;6
(1)   90/    C179 :                                             ;STZ emu_ptr+1,X                ;4
(1)   90/    C179 :                                             ;ASL                                    ;2
(1)   90/    C179 :                                             ;ROL emu_ptr+1,X                ;6
(1)   90/    C179 :                                             ;ASL                                    ;2
(1)   90/    C179 :                                             ;ROL emu_ptr+1,X                ;6
(1)   90/    C179 :                                             ;STA emu_ptr,X                  ;4                              
(1)   90/    C179 :                                             ;LDA emu_ptr+1,X                ;4
(1)   90/    C179 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   90/    C179 :                                             ;STA emu_ptr+1,X                ;4
(1)   90/    C179 :                                             ;JMP (emu_ptr2,X)               ;6
(1)   90/    C179 :                                             
(1)   90/    C179 :                                             ;Method 3 - 30 cycles
(1)   90/    C179 :                                             ;TXA                                                    ;2
(1)   90/    C179 :                                             ;TAY                                                    ;2
(1)   90/    C179 :                                             ;LDA (emu_PC,X)                                 ;6
(1)   90/    C179 :                                             ;ASL                                                    ;2
(1)   90/    C179 :                                             ;BCS upper                                              ;2
(1)   90/    C179 :                                             ;lower:
(1)   90/    C179 :                                             ;       ASL                                                     ;2
(1)   90/    C179 :                                             ;       TAX                                                     ;2
(1)   90/    C179 :                                             ;       BCS upper_lower                         ;2
(1)   90/    C179 :                                             ;       lower_lower:
(1)   90/    C179 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   90/    C179 :                                             ;       upper_lower:
(1)   90/    C179 :                                             ;               JMP (JUMP_TABLE2,X)
(1)   90/    C179 :                                             ;upper:
(1)   90/    C179 :                                             ;       ASL
(1)   90/    C179 :                                             ;       TAX
(1)   90/    C179 :                                             ;       BCS upper_upper
(1)   90/    C179 :                                             ;       lower_upper:
(1)   90/    C179 :                                             ;               JMP (JUMP_TABLE3,X)
(1)   90/    C179 :                                             ;       upper_upper:
(1)   90/    C179 :                                             ;               JMP (JUMP_TABLE4,X)
(1)   90/    C179 :                                             ;After jump:
(1)   90/    C179 :                                             ;TYA                                                    ;2
(1)   90/    C179 :                                             ;TAX                                                    ;2
(1)   90/    C179 :                                             
(1)   90/    C179 :                                             ;Method 4 - 28 cycles
(1)   90/    C179 :                                             ;LDA (emu_PC,X)                 ;6
(1)   90/    C179 :                                             ;TAY                                    ;2
(1)   90/    C179 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)   90/    C179 :                                             ;PHA                                    ;3
(1)   90/    C179 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)   90/    C179 :                                             ;PHA                                    ;3
(1)   90/    C179 :                                             ;RTS                                    ;6
(1)   90/    C179 :                                             
(1)   90/    C179 :                                             ;Method 5 - 30 cycles
(1)   90/    C179 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)   90/    C17B : A8                                          TAY                                             ;2
(1)   90/    C17C : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)   90/    C17F : 95 0A                                       STA emu_ptr,X                   ;4
(1)   90/    C181 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)   90/    C184 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)   90/    C186 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)   90/    C189 :                                                                     
(1)   91/    C189 :                     
(1)   92/    C189 :                     	;0x12 - NOP
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 33 - 1/5/2022 11:50:53


(1)   93/    C189 :                     	NOP_0x12:
(1)   94/    C189 : (MACRO)             		OP_MACRO 18, "NOP", "IMP", "NOP_0x12"
(1)   94/    C189 :                                             ;TODO
(1)   95/    C189 : (MACRO)             		NEXT_MACRO
(1)   95/    C189 :                                             
(1)   95/    C189 :  (MACRO-2)                                  halt
(1)   95/    C189 : 00                                  BRK
(1)   95/    C18A : 00                                  BRK
(1)   95/    C18B :                                             
(1)   95/    C18B :                                             ;Method 1 - 60 cycles
(1)   95/    C18B :                                             ;Jump table must be page aligned!!!
(1)   95/    C18B :                                             ;LDA (emu_PC,X)                 ;6
(1)   95/    C18B :                                             ;ASL                                    ;2
(1)   95/    C18B :                                             ;STA emu_ptr,X                  ;4
(1)   95/    C18B :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)   95/    C18B :                                             ;ADC #0                                 ;2
(1)   95/    C18B :                                             ;STA emu_ptr+1,X                ;4
(1)   95/    C18B :                                             ;LDA (emu_ptr,X)                ;6
(1)   95/    C18B :                                             ;STA emu_ptr2,X                 ;4
(1)   95/    C18B :                                             ;INC emu_ptr,X                  ;6
(1)   95/    C18B :                                             ;BCC .skip                              ;2
(1)   95/    C18B :                                             ;       INC emu_ptr+1,X         ;6
(1)   95/    C18B :                                             ;.skip:
(1)   95/    C18B :                                             ;LDA (emu_ptr,X)                ;6
(1)   95/    C18B :                                             ;STA emu_ptr2+1,X               ;4
(1)   95/    C18B :                                             ;JMP (emu_ptr2,X)               ;6
(1)   95/    C18B :                                             
(1)   95/    C18B :                                             ;Method 2 - 46 cycles
(1)   95/    C18B :                                             ;Jump table must be page aligned!!!
(1)   95/    C18B :                                             ;LDA (emu_PC,X)                 ;6
(1)   95/    C18B :                                             ;STZ emu_ptr+1,X                ;4
(1)   95/    C18B :                                             ;ASL                                    ;2
(1)   95/    C18B :                                             ;ROL emu_ptr+1,X                ;6
(1)   95/    C18B :                                             ;ASL                                    ;2
(1)   95/    C18B :                                             ;ROL emu_ptr+1,X                ;6
(1)   95/    C18B :                                             ;STA emu_ptr,X                  ;4                              
(1)   95/    C18B :                                             ;LDA emu_ptr+1,X                ;4
(1)   95/    C18B :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)   95/    C18B :                                             ;STA emu_ptr+1,X                ;4
(1)   95/    C18B :                                             ;JMP (emu_ptr2,X)               ;6
(1)   95/    C18B :                                             
(1)   95/    C18B :                                             ;Method 3 - 30 cycles
(1)   95/    C18B :                                             ;TXA                                                    ;2
(1)   95/    C18B :                                             ;TAY                                                    ;2
(1)   95/    C18B :                                             ;LDA (emu_PC,X)                                 ;6
(1)   95/    C18B :                                             ;ASL                                                    ;2
(1)   95/    C18B :                                             ;BCS upper                                              ;2
(1)   95/    C18B :                                             ;lower:
(1)   95/    C18B :                                             ;       ASL                                                     ;2
(1)   95/    C18B :                                             ;       TAX                                                     ;2
(1)   95/    C18B :                                             ;       BCS upper_lower                         ;2
(1)   95/    C18B :                                             ;       lower_lower:
(1)   95/    C18B :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)   95/    C18B :                                             ;       upper_lower:
(1)   95/    C18B :                                             ;               JMP (JUMP_TABLE2,X)
(1)   95/    C18B :                                             ;upper:
(1)   95/    C18B :                                             ;       ASL
(1)   95/    C18B :                                             ;       TAX
(1)   95/    C18B :                                             ;       BCS upper_upper
(1)   95/    C18B :                                             ;       lower_upper:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 34 - 1/5/2022 11:50:53


(1)   95/    C18B :                                             ;               JMP (JUMP_TABLE3,X)
(1)   95/    C18B :                                             ;       upper_upper:
(1)   95/    C18B :                                             ;               JMP (JUMP_TABLE4,X)
(1)   95/    C18B :                                             ;After jump:
(1)   95/    C18B :                                             ;TYA                                                    ;2
(1)   95/    C18B :                                             ;TAX                                                    ;2
(1)   95/    C18B :                                             
(1)   95/    C18B :                                             ;Method 4 - 28 cycles
(1)   95/    C18B :                                             ;LDA (emu_PC,X)                 ;6
(1)   95/    C18B :                                             ;TAY                                    ;2
(1)   95/    C18B :                                             ;LDA JUMP_TABLE,Y               ;4
(1)   95/    C18B :                                             ;PHA                                    ;3
(1)   95/    C18B :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)   95/    C18B :                                             ;PHA                                    ;3
(1)   95/    C18B :                                             ;RTS                                    ;6
(1)   95/    C18B :                                             
(1)   95/    C18B :                                             ;Method 5 - 30 cycles
(1)   95/    C18B : A1 02                                       LDA (emu_PC,X)                  ;6
(1)   95/    C18D : A8                                          TAY                                             ;2
(1)   95/    C18E : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)   95/    C191 : 95 0A                                       STA emu_ptr,X                   ;4
(1)   95/    C193 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)   95/    C196 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)   95/    C198 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)   95/    C19B :                                                                     
(1)   96/    C19B :                     
(1)   97/    C19B :                     	;0x13 - NOP
(1)   98/    C19B :                     	NOP_0x13:
(1)   99/    C19B : (MACRO)             		OP_MACRO 19, "NOP", "IMP", "NOP_0x13"
(1)   99/    C19B :                                             ;TODO
(1)  100/    C19B : (MACRO)             		NEXT_MACRO
(1)  100/    C19B :                                             
(1)  100/    C19B :  (MACRO-2)                                  halt
(1)  100/    C19B : 00                                  BRK
(1)  100/    C19C : 00                                  BRK
(1)  100/    C19D :                                             
(1)  100/    C19D :                                             ;Method 1 - 60 cycles
(1)  100/    C19D :                                             ;Jump table must be page aligned!!!
(1)  100/    C19D :                                             ;LDA (emu_PC,X)                 ;6
(1)  100/    C19D :                                             ;ASL                                    ;2
(1)  100/    C19D :                                             ;STA emu_ptr,X                  ;4
(1)  100/    C19D :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  100/    C19D :                                             ;ADC #0                                 ;2
(1)  100/    C19D :                                             ;STA emu_ptr+1,X                ;4
(1)  100/    C19D :                                             ;LDA (emu_ptr,X)                ;6
(1)  100/    C19D :                                             ;STA emu_ptr2,X                 ;4
(1)  100/    C19D :                                             ;INC emu_ptr,X                  ;6
(1)  100/    C19D :                                             ;BCC .skip                              ;2
(1)  100/    C19D :                                             ;       INC emu_ptr+1,X         ;6
(1)  100/    C19D :                                             ;.skip:
(1)  100/    C19D :                                             ;LDA (emu_ptr,X)                ;6
(1)  100/    C19D :                                             ;STA emu_ptr2+1,X               ;4
(1)  100/    C19D :                                             ;JMP (emu_ptr2,X)               ;6
(1)  100/    C19D :                                             
(1)  100/    C19D :                                             ;Method 2 - 46 cycles
(1)  100/    C19D :                                             ;Jump table must be page aligned!!!
(1)  100/    C19D :                                             ;LDA (emu_PC,X)                 ;6
(1)  100/    C19D :                                             ;STZ emu_ptr+1,X                ;4
(1)  100/    C19D :                                             ;ASL                                    ;2
(1)  100/    C19D :                                             ;ROL emu_ptr+1,X                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 35 - 1/5/2022 11:50:53


(1)  100/    C19D :                                             ;ASL                                    ;2
(1)  100/    C19D :                                             ;ROL emu_ptr+1,X                ;6
(1)  100/    C19D :                                             ;STA emu_ptr,X                  ;4                              
(1)  100/    C19D :                                             ;LDA emu_ptr+1,X                ;4
(1)  100/    C19D :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  100/    C19D :                                             ;STA emu_ptr+1,X                ;4
(1)  100/    C19D :                                             ;JMP (emu_ptr2,X)               ;6
(1)  100/    C19D :                                             
(1)  100/    C19D :                                             ;Method 3 - 30 cycles
(1)  100/    C19D :                                             ;TXA                                                    ;2
(1)  100/    C19D :                                             ;TAY                                                    ;2
(1)  100/    C19D :                                             ;LDA (emu_PC,X)                                 ;6
(1)  100/    C19D :                                             ;ASL                                                    ;2
(1)  100/    C19D :                                             ;BCS upper                                              ;2
(1)  100/    C19D :                                             ;lower:
(1)  100/    C19D :                                             ;       ASL                                                     ;2
(1)  100/    C19D :                                             ;       TAX                                                     ;2
(1)  100/    C19D :                                             ;       BCS upper_lower                         ;2
(1)  100/    C19D :                                             ;       lower_lower:
(1)  100/    C19D :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  100/    C19D :                                             ;       upper_lower:
(1)  100/    C19D :                                             ;               JMP (JUMP_TABLE2,X)
(1)  100/    C19D :                                             ;upper:
(1)  100/    C19D :                                             ;       ASL
(1)  100/    C19D :                                             ;       TAX
(1)  100/    C19D :                                             ;       BCS upper_upper
(1)  100/    C19D :                                             ;       lower_upper:
(1)  100/    C19D :                                             ;               JMP (JUMP_TABLE3,X)
(1)  100/    C19D :                                             ;       upper_upper:
(1)  100/    C19D :                                             ;               JMP (JUMP_TABLE4,X)
(1)  100/    C19D :                                             ;After jump:
(1)  100/    C19D :                                             ;TYA                                                    ;2
(1)  100/    C19D :                                             ;TAX                                                    ;2
(1)  100/    C19D :                                             
(1)  100/    C19D :                                             ;Method 4 - 28 cycles
(1)  100/    C19D :                                             ;LDA (emu_PC,X)                 ;6
(1)  100/    C19D :                                             ;TAY                                    ;2
(1)  100/    C19D :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  100/    C19D :                                             ;PHA                                    ;3
(1)  100/    C19D :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  100/    C19D :                                             ;PHA                                    ;3
(1)  100/    C19D :                                             ;RTS                                    ;6
(1)  100/    C19D :                                             
(1)  100/    C19D :                                             ;Method 5 - 30 cycles
(1)  100/    C19D : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  100/    C19F : A8                                          TAY                                             ;2
(1)  100/    C1A0 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  100/    C1A3 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  100/    C1A5 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  100/    C1A8 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  100/    C1AA : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  100/    C1AD :                                                                     
(1)  101/    C1AD :                     
(1)  102/    C1AD :                     	;0x14 - NOP
(1)  103/    C1AD :                     	NOP_0x14:
(1)  104/    C1AD : (MACRO)             		OP_MACRO 20, "NOP", "IMP", "NOP_0x14"
(1)  104/    C1AD :                                             ;TODO
(1)  105/    C1AD : (MACRO)             		NEXT_MACRO
(1)  105/    C1AD :                                             
(1)  105/    C1AD :  (MACRO-2)                                  halt
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 36 - 1/5/2022 11:50:53


(1)  105/    C1AD : 00                                  BRK
(1)  105/    C1AE : 00                                  BRK
(1)  105/    C1AF :                                             
(1)  105/    C1AF :                                             ;Method 1 - 60 cycles
(1)  105/    C1AF :                                             ;Jump table must be page aligned!!!
(1)  105/    C1AF :                                             ;LDA (emu_PC,X)                 ;6
(1)  105/    C1AF :                                             ;ASL                                    ;2
(1)  105/    C1AF :                                             ;STA emu_ptr,X                  ;4
(1)  105/    C1AF :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  105/    C1AF :                                             ;ADC #0                                 ;2
(1)  105/    C1AF :                                             ;STA emu_ptr+1,X                ;4
(1)  105/    C1AF :                                             ;LDA (emu_ptr,X)                ;6
(1)  105/    C1AF :                                             ;STA emu_ptr2,X                 ;4
(1)  105/    C1AF :                                             ;INC emu_ptr,X                  ;6
(1)  105/    C1AF :                                             ;BCC .skip                              ;2
(1)  105/    C1AF :                                             ;       INC emu_ptr+1,X         ;6
(1)  105/    C1AF :                                             ;.skip:
(1)  105/    C1AF :                                             ;LDA (emu_ptr,X)                ;6
(1)  105/    C1AF :                                             ;STA emu_ptr2+1,X               ;4
(1)  105/    C1AF :                                             ;JMP (emu_ptr2,X)               ;6
(1)  105/    C1AF :                                             
(1)  105/    C1AF :                                             ;Method 2 - 46 cycles
(1)  105/    C1AF :                                             ;Jump table must be page aligned!!!
(1)  105/    C1AF :                                             ;LDA (emu_PC,X)                 ;6
(1)  105/    C1AF :                                             ;STZ emu_ptr+1,X                ;4
(1)  105/    C1AF :                                             ;ASL                                    ;2
(1)  105/    C1AF :                                             ;ROL emu_ptr+1,X                ;6
(1)  105/    C1AF :                                             ;ASL                                    ;2
(1)  105/    C1AF :                                             ;ROL emu_ptr+1,X                ;6
(1)  105/    C1AF :                                             ;STA emu_ptr,X                  ;4                              
(1)  105/    C1AF :                                             ;LDA emu_ptr+1,X                ;4
(1)  105/    C1AF :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  105/    C1AF :                                             ;STA emu_ptr+1,X                ;4
(1)  105/    C1AF :                                             ;JMP (emu_ptr2,X)               ;6
(1)  105/    C1AF :                                             
(1)  105/    C1AF :                                             ;Method 3 - 30 cycles
(1)  105/    C1AF :                                             ;TXA                                                    ;2
(1)  105/    C1AF :                                             ;TAY                                                    ;2
(1)  105/    C1AF :                                             ;LDA (emu_PC,X)                                 ;6
(1)  105/    C1AF :                                             ;ASL                                                    ;2
(1)  105/    C1AF :                                             ;BCS upper                                              ;2
(1)  105/    C1AF :                                             ;lower:
(1)  105/    C1AF :                                             ;       ASL                                                     ;2
(1)  105/    C1AF :                                             ;       TAX                                                     ;2
(1)  105/    C1AF :                                             ;       BCS upper_lower                         ;2
(1)  105/    C1AF :                                             ;       lower_lower:
(1)  105/    C1AF :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  105/    C1AF :                                             ;       upper_lower:
(1)  105/    C1AF :                                             ;               JMP (JUMP_TABLE2,X)
(1)  105/    C1AF :                                             ;upper:
(1)  105/    C1AF :                                             ;       ASL
(1)  105/    C1AF :                                             ;       TAX
(1)  105/    C1AF :                                             ;       BCS upper_upper
(1)  105/    C1AF :                                             ;       lower_upper:
(1)  105/    C1AF :                                             ;               JMP (JUMP_TABLE3,X)
(1)  105/    C1AF :                                             ;       upper_upper:
(1)  105/    C1AF :                                             ;               JMP (JUMP_TABLE4,X)
(1)  105/    C1AF :                                             ;After jump:
(1)  105/    C1AF :                                             ;TYA                                                    ;2
(1)  105/    C1AF :                                             ;TAX                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 37 - 1/5/2022 11:50:53


(1)  105/    C1AF :                                             
(1)  105/    C1AF :                                             ;Method 4 - 28 cycles
(1)  105/    C1AF :                                             ;LDA (emu_PC,X)                 ;6
(1)  105/    C1AF :                                             ;TAY                                    ;2
(1)  105/    C1AF :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  105/    C1AF :                                             ;PHA                                    ;3
(1)  105/    C1AF :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  105/    C1AF :                                             ;PHA                                    ;3
(1)  105/    C1AF :                                             ;RTS                                    ;6
(1)  105/    C1AF :                                             
(1)  105/    C1AF :                                             ;Method 5 - 30 cycles
(1)  105/    C1AF : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  105/    C1B1 : A8                                          TAY                                             ;2
(1)  105/    C1B2 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  105/    C1B5 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  105/    C1B7 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  105/    C1BA : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  105/    C1BC : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  105/    C1BF :                                                                     
(1)  106/    C1BF :                     
(1)  107/    C1BF :                     	;0x15 - ORA ZPX
(1)  108/    C1BF :                     	ORA_ZPX:
(1)  109/    C1BF : (MACRO)             		OP_MACRO 21, "ORA", "ZPX", "ORA_ZPX"
(1)  109/    C1BF :                                             ;TODO
(1)  110/    C1BF : (MACRO)             		NEXT_MACRO
(1)  110/    C1BF :                                             
(1)  110/    C1BF :  (MACRO-2)                                  halt
(1)  110/    C1BF : 00                                  BRK
(1)  110/    C1C0 : 00                                  BRK
(1)  110/    C1C1 :                                             
(1)  110/    C1C1 :                                             ;Method 1 - 60 cycles
(1)  110/    C1C1 :                                             ;Jump table must be page aligned!!!
(1)  110/    C1C1 :                                             ;LDA (emu_PC,X)                 ;6
(1)  110/    C1C1 :                                             ;ASL                                    ;2
(1)  110/    C1C1 :                                             ;STA emu_ptr,X                  ;4
(1)  110/    C1C1 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  110/    C1C1 :                                             ;ADC #0                                 ;2
(1)  110/    C1C1 :                                             ;STA emu_ptr+1,X                ;4
(1)  110/    C1C1 :                                             ;LDA (emu_ptr,X)                ;6
(1)  110/    C1C1 :                                             ;STA emu_ptr2,X                 ;4
(1)  110/    C1C1 :                                             ;INC emu_ptr,X                  ;6
(1)  110/    C1C1 :                                             ;BCC .skip                              ;2
(1)  110/    C1C1 :                                             ;       INC emu_ptr+1,X         ;6
(1)  110/    C1C1 :                                             ;.skip:
(1)  110/    C1C1 :                                             ;LDA (emu_ptr,X)                ;6
(1)  110/    C1C1 :                                             ;STA emu_ptr2+1,X               ;4
(1)  110/    C1C1 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  110/    C1C1 :                                             
(1)  110/    C1C1 :                                             ;Method 2 - 46 cycles
(1)  110/    C1C1 :                                             ;Jump table must be page aligned!!!
(1)  110/    C1C1 :                                             ;LDA (emu_PC,X)                 ;6
(1)  110/    C1C1 :                                             ;STZ emu_ptr+1,X                ;4
(1)  110/    C1C1 :                                             ;ASL                                    ;2
(1)  110/    C1C1 :                                             ;ROL emu_ptr+1,X                ;6
(1)  110/    C1C1 :                                             ;ASL                                    ;2
(1)  110/    C1C1 :                                             ;ROL emu_ptr+1,X                ;6
(1)  110/    C1C1 :                                             ;STA emu_ptr,X                  ;4                              
(1)  110/    C1C1 :                                             ;LDA emu_ptr+1,X                ;4
(1)  110/    C1C1 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  110/    C1C1 :                                             ;STA emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 38 - 1/5/2022 11:50:53


(1)  110/    C1C1 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  110/    C1C1 :                                             
(1)  110/    C1C1 :                                             ;Method 3 - 30 cycles
(1)  110/    C1C1 :                                             ;TXA                                                    ;2
(1)  110/    C1C1 :                                             ;TAY                                                    ;2
(1)  110/    C1C1 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  110/    C1C1 :                                             ;ASL                                                    ;2
(1)  110/    C1C1 :                                             ;BCS upper                                              ;2
(1)  110/    C1C1 :                                             ;lower:
(1)  110/    C1C1 :                                             ;       ASL                                                     ;2
(1)  110/    C1C1 :                                             ;       TAX                                                     ;2
(1)  110/    C1C1 :                                             ;       BCS upper_lower                         ;2
(1)  110/    C1C1 :                                             ;       lower_lower:
(1)  110/    C1C1 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  110/    C1C1 :                                             ;       upper_lower:
(1)  110/    C1C1 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  110/    C1C1 :                                             ;upper:
(1)  110/    C1C1 :                                             ;       ASL
(1)  110/    C1C1 :                                             ;       TAX
(1)  110/    C1C1 :                                             ;       BCS upper_upper
(1)  110/    C1C1 :                                             ;       lower_upper:
(1)  110/    C1C1 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  110/    C1C1 :                                             ;       upper_upper:
(1)  110/    C1C1 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  110/    C1C1 :                                             ;After jump:
(1)  110/    C1C1 :                                             ;TYA                                                    ;2
(1)  110/    C1C1 :                                             ;TAX                                                    ;2
(1)  110/    C1C1 :                                             
(1)  110/    C1C1 :                                             ;Method 4 - 28 cycles
(1)  110/    C1C1 :                                             ;LDA (emu_PC,X)                 ;6
(1)  110/    C1C1 :                                             ;TAY                                    ;2
(1)  110/    C1C1 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  110/    C1C1 :                                             ;PHA                                    ;3
(1)  110/    C1C1 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  110/    C1C1 :                                             ;PHA                                    ;3
(1)  110/    C1C1 :                                             ;RTS                                    ;6
(1)  110/    C1C1 :                                             
(1)  110/    C1C1 :                                             ;Method 5 - 30 cycles
(1)  110/    C1C1 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  110/    C1C3 : A8                                          TAY                                             ;2
(1)  110/    C1C4 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  110/    C1C7 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  110/    C1C9 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  110/    C1CC : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  110/    C1CE : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  110/    C1D1 :                                                                     
(1)  111/    C1D1 :                     
(1)  112/    C1D1 :                     	;0x16 - ASL ZPX
(1)  113/    C1D1 :                     	ASL_ZPX:
(1)  114/    C1D1 : (MACRO)             		OP_MACRO 22, "ASL", "ZPX", "ASL_ZPX"
(1)  114/    C1D1 :                                             ;TODO
(1)  115/    C1D1 : (MACRO)             		NEXT_MACRO
(1)  115/    C1D1 :                                             
(1)  115/    C1D1 :  (MACRO-2)                                  halt
(1)  115/    C1D1 : 00                                  BRK
(1)  115/    C1D2 : 00                                  BRK
(1)  115/    C1D3 :                                             
(1)  115/    C1D3 :                                             ;Method 1 - 60 cycles
(1)  115/    C1D3 :                                             ;Jump table must be page aligned!!!
(1)  115/    C1D3 :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 39 - 1/5/2022 11:50:53


(1)  115/    C1D3 :                                             ;ASL                                    ;2
(1)  115/    C1D3 :                                             ;STA emu_ptr,X                  ;4
(1)  115/    C1D3 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  115/    C1D3 :                                             ;ADC #0                                 ;2
(1)  115/    C1D3 :                                             ;STA emu_ptr+1,X                ;4
(1)  115/    C1D3 :                                             ;LDA (emu_ptr,X)                ;6
(1)  115/    C1D3 :                                             ;STA emu_ptr2,X                 ;4
(1)  115/    C1D3 :                                             ;INC emu_ptr,X                  ;6
(1)  115/    C1D3 :                                             ;BCC .skip                              ;2
(1)  115/    C1D3 :                                             ;       INC emu_ptr+1,X         ;6
(1)  115/    C1D3 :                                             ;.skip:
(1)  115/    C1D3 :                                             ;LDA (emu_ptr,X)                ;6
(1)  115/    C1D3 :                                             ;STA emu_ptr2+1,X               ;4
(1)  115/    C1D3 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  115/    C1D3 :                                             
(1)  115/    C1D3 :                                             ;Method 2 - 46 cycles
(1)  115/    C1D3 :                                             ;Jump table must be page aligned!!!
(1)  115/    C1D3 :                                             ;LDA (emu_PC,X)                 ;6
(1)  115/    C1D3 :                                             ;STZ emu_ptr+1,X                ;4
(1)  115/    C1D3 :                                             ;ASL                                    ;2
(1)  115/    C1D3 :                                             ;ROL emu_ptr+1,X                ;6
(1)  115/    C1D3 :                                             ;ASL                                    ;2
(1)  115/    C1D3 :                                             ;ROL emu_ptr+1,X                ;6
(1)  115/    C1D3 :                                             ;STA emu_ptr,X                  ;4                              
(1)  115/    C1D3 :                                             ;LDA emu_ptr+1,X                ;4
(1)  115/    C1D3 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  115/    C1D3 :                                             ;STA emu_ptr+1,X                ;4
(1)  115/    C1D3 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  115/    C1D3 :                                             
(1)  115/    C1D3 :                                             ;Method 3 - 30 cycles
(1)  115/    C1D3 :                                             ;TXA                                                    ;2
(1)  115/    C1D3 :                                             ;TAY                                                    ;2
(1)  115/    C1D3 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  115/    C1D3 :                                             ;ASL                                                    ;2
(1)  115/    C1D3 :                                             ;BCS upper                                              ;2
(1)  115/    C1D3 :                                             ;lower:
(1)  115/    C1D3 :                                             ;       ASL                                                     ;2
(1)  115/    C1D3 :                                             ;       TAX                                                     ;2
(1)  115/    C1D3 :                                             ;       BCS upper_lower                         ;2
(1)  115/    C1D3 :                                             ;       lower_lower:
(1)  115/    C1D3 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  115/    C1D3 :                                             ;       upper_lower:
(1)  115/    C1D3 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  115/    C1D3 :                                             ;upper:
(1)  115/    C1D3 :                                             ;       ASL
(1)  115/    C1D3 :                                             ;       TAX
(1)  115/    C1D3 :                                             ;       BCS upper_upper
(1)  115/    C1D3 :                                             ;       lower_upper:
(1)  115/    C1D3 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  115/    C1D3 :                                             ;       upper_upper:
(1)  115/    C1D3 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  115/    C1D3 :                                             ;After jump:
(1)  115/    C1D3 :                                             ;TYA                                                    ;2
(1)  115/    C1D3 :                                             ;TAX                                                    ;2
(1)  115/    C1D3 :                                             
(1)  115/    C1D3 :                                             ;Method 4 - 28 cycles
(1)  115/    C1D3 :                                             ;LDA (emu_PC,X)                 ;6
(1)  115/    C1D3 :                                             ;TAY                                    ;2
(1)  115/    C1D3 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  115/    C1D3 :                                             ;PHA                                    ;3
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 40 - 1/5/2022 11:50:53


(1)  115/    C1D3 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  115/    C1D3 :                                             ;PHA                                    ;3
(1)  115/    C1D3 :                                             ;RTS                                    ;6
(1)  115/    C1D3 :                                             
(1)  115/    C1D3 :                                             ;Method 5 - 30 cycles
(1)  115/    C1D3 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  115/    C1D5 : A8                                          TAY                                             ;2
(1)  115/    C1D6 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  115/    C1D9 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  115/    C1DB : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  115/    C1DE : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  115/    C1E0 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  115/    C1E3 :                                                                     
(1)  116/    C1E3 :                     
(1)  117/    C1E3 :                     	;0x17 - NOP
(1)  118/    C1E3 :                     	NOP_0x17:
(1)  119/    C1E3 : (MACRO)             		OP_MACRO 23, "NOP", "IMP", "NOP_0x17"
(1)  119/    C1E3 :                                             ;TODO
(1)  120/    C1E3 : (MACRO)             		NEXT_MACRO
(1)  120/    C1E3 :                                             
(1)  120/    C1E3 :  (MACRO-2)                                  halt
(1)  120/    C1E3 : 00                                  BRK
(1)  120/    C1E4 : 00                                  BRK
(1)  120/    C1E5 :                                             
(1)  120/    C1E5 :                                             ;Method 1 - 60 cycles
(1)  120/    C1E5 :                                             ;Jump table must be page aligned!!!
(1)  120/    C1E5 :                                             ;LDA (emu_PC,X)                 ;6
(1)  120/    C1E5 :                                             ;ASL                                    ;2
(1)  120/    C1E5 :                                             ;STA emu_ptr,X                  ;4
(1)  120/    C1E5 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  120/    C1E5 :                                             ;ADC #0                                 ;2
(1)  120/    C1E5 :                                             ;STA emu_ptr+1,X                ;4
(1)  120/    C1E5 :                                             ;LDA (emu_ptr,X)                ;6
(1)  120/    C1E5 :                                             ;STA emu_ptr2,X                 ;4
(1)  120/    C1E5 :                                             ;INC emu_ptr,X                  ;6
(1)  120/    C1E5 :                                             ;BCC .skip                              ;2
(1)  120/    C1E5 :                                             ;       INC emu_ptr+1,X         ;6
(1)  120/    C1E5 :                                             ;.skip:
(1)  120/    C1E5 :                                             ;LDA (emu_ptr,X)                ;6
(1)  120/    C1E5 :                                             ;STA emu_ptr2+1,X               ;4
(1)  120/    C1E5 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  120/    C1E5 :                                             
(1)  120/    C1E5 :                                             ;Method 2 - 46 cycles
(1)  120/    C1E5 :                                             ;Jump table must be page aligned!!!
(1)  120/    C1E5 :                                             ;LDA (emu_PC,X)                 ;6
(1)  120/    C1E5 :                                             ;STZ emu_ptr+1,X                ;4
(1)  120/    C1E5 :                                             ;ASL                                    ;2
(1)  120/    C1E5 :                                             ;ROL emu_ptr+1,X                ;6
(1)  120/    C1E5 :                                             ;ASL                                    ;2
(1)  120/    C1E5 :                                             ;ROL emu_ptr+1,X                ;6
(1)  120/    C1E5 :                                             ;STA emu_ptr,X                  ;4                              
(1)  120/    C1E5 :                                             ;LDA emu_ptr+1,X                ;4
(1)  120/    C1E5 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  120/    C1E5 :                                             ;STA emu_ptr+1,X                ;4
(1)  120/    C1E5 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  120/    C1E5 :                                             
(1)  120/    C1E5 :                                             ;Method 3 - 30 cycles
(1)  120/    C1E5 :                                             ;TXA                                                    ;2
(1)  120/    C1E5 :                                             ;TAY                                                    ;2
(1)  120/    C1E5 :                                             ;LDA (emu_PC,X)                                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 41 - 1/5/2022 11:50:53


(1)  120/    C1E5 :                                             ;ASL                                                    ;2
(1)  120/    C1E5 :                                             ;BCS upper                                              ;2
(1)  120/    C1E5 :                                             ;lower:
(1)  120/    C1E5 :                                             ;       ASL                                                     ;2
(1)  120/    C1E5 :                                             ;       TAX                                                     ;2
(1)  120/    C1E5 :                                             ;       BCS upper_lower                         ;2
(1)  120/    C1E5 :                                             ;       lower_lower:
(1)  120/    C1E5 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  120/    C1E5 :                                             ;       upper_lower:
(1)  120/    C1E5 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  120/    C1E5 :                                             ;upper:
(1)  120/    C1E5 :                                             ;       ASL
(1)  120/    C1E5 :                                             ;       TAX
(1)  120/    C1E5 :                                             ;       BCS upper_upper
(1)  120/    C1E5 :                                             ;       lower_upper:
(1)  120/    C1E5 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  120/    C1E5 :                                             ;       upper_upper:
(1)  120/    C1E5 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  120/    C1E5 :                                             ;After jump:
(1)  120/    C1E5 :                                             ;TYA                                                    ;2
(1)  120/    C1E5 :                                             ;TAX                                                    ;2
(1)  120/    C1E5 :                                             
(1)  120/    C1E5 :                                             ;Method 4 - 28 cycles
(1)  120/    C1E5 :                                             ;LDA (emu_PC,X)                 ;6
(1)  120/    C1E5 :                                             ;TAY                                    ;2
(1)  120/    C1E5 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  120/    C1E5 :                                             ;PHA                                    ;3
(1)  120/    C1E5 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  120/    C1E5 :                                             ;PHA                                    ;3
(1)  120/    C1E5 :                                             ;RTS                                    ;6
(1)  120/    C1E5 :                                             
(1)  120/    C1E5 :                                             ;Method 5 - 30 cycles
(1)  120/    C1E5 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  120/    C1E7 : A8                                          TAY                                             ;2
(1)  120/    C1E8 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  120/    C1EB : 95 0A                                       STA emu_ptr,X                   ;4
(1)  120/    C1ED : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  120/    C1F0 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  120/    C1F2 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  120/    C1F5 :                                                                     
(1)  121/    C1F5 :                     
(1)  122/    C1F5 :                     	;0x18 - CLC IMP
(1)  123/    C1F5 :                     	CLC_IMP:
(1)  124/    C1F5 : (MACRO)             		OP_MACRO 24, "CLC", "IMP", "CLC_IMP"
(1)  124/    C1F5 :                                             ;TODO
(1)  125/    C1F5 : (MACRO)             		NEXT_MACRO
(1)  125/    C1F5 :                                             
(1)  125/    C1F5 :  (MACRO-2)                                  halt
(1)  125/    C1F5 : 00                                  BRK
(1)  125/    C1F6 : 00                                  BRK
(1)  125/    C1F7 :                                             
(1)  125/    C1F7 :                                             ;Method 1 - 60 cycles
(1)  125/    C1F7 :                                             ;Jump table must be page aligned!!!
(1)  125/    C1F7 :                                             ;LDA (emu_PC,X)                 ;6
(1)  125/    C1F7 :                                             ;ASL                                    ;2
(1)  125/    C1F7 :                                             ;STA emu_ptr,X                  ;4
(1)  125/    C1F7 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  125/    C1F7 :                                             ;ADC #0                                 ;2
(1)  125/    C1F7 :                                             ;STA emu_ptr+1,X                ;4
(1)  125/    C1F7 :                                             ;LDA (emu_ptr,X)                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 42 - 1/5/2022 11:50:53


(1)  125/    C1F7 :                                             ;STA emu_ptr2,X                 ;4
(1)  125/    C1F7 :                                             ;INC emu_ptr,X                  ;6
(1)  125/    C1F7 :                                             ;BCC .skip                              ;2
(1)  125/    C1F7 :                                             ;       INC emu_ptr+1,X         ;6
(1)  125/    C1F7 :                                             ;.skip:
(1)  125/    C1F7 :                                             ;LDA (emu_ptr,X)                ;6
(1)  125/    C1F7 :                                             ;STA emu_ptr2+1,X               ;4
(1)  125/    C1F7 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  125/    C1F7 :                                             
(1)  125/    C1F7 :                                             ;Method 2 - 46 cycles
(1)  125/    C1F7 :                                             ;Jump table must be page aligned!!!
(1)  125/    C1F7 :                                             ;LDA (emu_PC,X)                 ;6
(1)  125/    C1F7 :                                             ;STZ emu_ptr+1,X                ;4
(1)  125/    C1F7 :                                             ;ASL                                    ;2
(1)  125/    C1F7 :                                             ;ROL emu_ptr+1,X                ;6
(1)  125/    C1F7 :                                             ;ASL                                    ;2
(1)  125/    C1F7 :                                             ;ROL emu_ptr+1,X                ;6
(1)  125/    C1F7 :                                             ;STA emu_ptr,X                  ;4                              
(1)  125/    C1F7 :                                             ;LDA emu_ptr+1,X                ;4
(1)  125/    C1F7 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  125/    C1F7 :                                             ;STA emu_ptr+1,X                ;4
(1)  125/    C1F7 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  125/    C1F7 :                                             
(1)  125/    C1F7 :                                             ;Method 3 - 30 cycles
(1)  125/    C1F7 :                                             ;TXA                                                    ;2
(1)  125/    C1F7 :                                             ;TAY                                                    ;2
(1)  125/    C1F7 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  125/    C1F7 :                                             ;ASL                                                    ;2
(1)  125/    C1F7 :                                             ;BCS upper                                              ;2
(1)  125/    C1F7 :                                             ;lower:
(1)  125/    C1F7 :                                             ;       ASL                                                     ;2
(1)  125/    C1F7 :                                             ;       TAX                                                     ;2
(1)  125/    C1F7 :                                             ;       BCS upper_lower                         ;2
(1)  125/    C1F7 :                                             ;       lower_lower:
(1)  125/    C1F7 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  125/    C1F7 :                                             ;       upper_lower:
(1)  125/    C1F7 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  125/    C1F7 :                                             ;upper:
(1)  125/    C1F7 :                                             ;       ASL
(1)  125/    C1F7 :                                             ;       TAX
(1)  125/    C1F7 :                                             ;       BCS upper_upper
(1)  125/    C1F7 :                                             ;       lower_upper:
(1)  125/    C1F7 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  125/    C1F7 :                                             ;       upper_upper:
(1)  125/    C1F7 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  125/    C1F7 :                                             ;After jump:
(1)  125/    C1F7 :                                             ;TYA                                                    ;2
(1)  125/    C1F7 :                                             ;TAX                                                    ;2
(1)  125/    C1F7 :                                             
(1)  125/    C1F7 :                                             ;Method 4 - 28 cycles
(1)  125/    C1F7 :                                             ;LDA (emu_PC,X)                 ;6
(1)  125/    C1F7 :                                             ;TAY                                    ;2
(1)  125/    C1F7 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  125/    C1F7 :                                             ;PHA                                    ;3
(1)  125/    C1F7 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  125/    C1F7 :                                             ;PHA                                    ;3
(1)  125/    C1F7 :                                             ;RTS                                    ;6
(1)  125/    C1F7 :                                             
(1)  125/    C1F7 :                                             ;Method 5 - 30 cycles
(1)  125/    C1F7 : A1 02                                       LDA (emu_PC,X)                  ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 43 - 1/5/2022 11:50:53


(1)  125/    C1F9 : A8                                          TAY                                             ;2
(1)  125/    C1FA : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  125/    C1FD : 95 0A                                       STA emu_ptr,X                   ;4
(1)  125/    C1FF : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  125/    C202 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  125/    C204 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  125/    C207 :                                                                     
(1)  126/    C207 :                     
(1)  127/    C207 :                     	;0x19 - ORA ABSY
(1)  128/    C207 :                     	ORA_ABSY:
(1)  129/    C207 : (MACRO)             		OP_MACRO 25, "ORA", "ABSY", "ORA_ABSY"
(1)  129/    C207 :                                             ;TODO
(1)  130/    C207 : (MACRO)             		NEXT_MACRO
(1)  130/    C207 :                                             
(1)  130/    C207 :  (MACRO-2)                                  halt
(1)  130/    C207 : 00                                  BRK
(1)  130/    C208 : 00                                  BRK
(1)  130/    C209 :                                             
(1)  130/    C209 :                                             ;Method 1 - 60 cycles
(1)  130/    C209 :                                             ;Jump table must be page aligned!!!
(1)  130/    C209 :                                             ;LDA (emu_PC,X)                 ;6
(1)  130/    C209 :                                             ;ASL                                    ;2
(1)  130/    C209 :                                             ;STA emu_ptr,X                  ;4
(1)  130/    C209 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  130/    C209 :                                             ;ADC #0                                 ;2
(1)  130/    C209 :                                             ;STA emu_ptr+1,X                ;4
(1)  130/    C209 :                                             ;LDA (emu_ptr,X)                ;6
(1)  130/    C209 :                                             ;STA emu_ptr2,X                 ;4
(1)  130/    C209 :                                             ;INC emu_ptr,X                  ;6
(1)  130/    C209 :                                             ;BCC .skip                              ;2
(1)  130/    C209 :                                             ;       INC emu_ptr+1,X         ;6
(1)  130/    C209 :                                             ;.skip:
(1)  130/    C209 :                                             ;LDA (emu_ptr,X)                ;6
(1)  130/    C209 :                                             ;STA emu_ptr2+1,X               ;4
(1)  130/    C209 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  130/    C209 :                                             
(1)  130/    C209 :                                             ;Method 2 - 46 cycles
(1)  130/    C209 :                                             ;Jump table must be page aligned!!!
(1)  130/    C209 :                                             ;LDA (emu_PC,X)                 ;6
(1)  130/    C209 :                                             ;STZ emu_ptr+1,X                ;4
(1)  130/    C209 :                                             ;ASL                                    ;2
(1)  130/    C209 :                                             ;ROL emu_ptr+1,X                ;6
(1)  130/    C209 :                                             ;ASL                                    ;2
(1)  130/    C209 :                                             ;ROL emu_ptr+1,X                ;6
(1)  130/    C209 :                                             ;STA emu_ptr,X                  ;4                              
(1)  130/    C209 :                                             ;LDA emu_ptr+1,X                ;4
(1)  130/    C209 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  130/    C209 :                                             ;STA emu_ptr+1,X                ;4
(1)  130/    C209 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  130/    C209 :                                             
(1)  130/    C209 :                                             ;Method 3 - 30 cycles
(1)  130/    C209 :                                             ;TXA                                                    ;2
(1)  130/    C209 :                                             ;TAY                                                    ;2
(1)  130/    C209 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  130/    C209 :                                             ;ASL                                                    ;2
(1)  130/    C209 :                                             ;BCS upper                                              ;2
(1)  130/    C209 :                                             ;lower:
(1)  130/    C209 :                                             ;       ASL                                                     ;2
(1)  130/    C209 :                                             ;       TAX                                                     ;2
(1)  130/    C209 :                                             ;       BCS upper_lower                         ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 44 - 1/5/2022 11:50:53


(1)  130/    C209 :                                             ;       lower_lower:
(1)  130/    C209 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  130/    C209 :                                             ;       upper_lower:
(1)  130/    C209 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  130/    C209 :                                             ;upper:
(1)  130/    C209 :                                             ;       ASL
(1)  130/    C209 :                                             ;       TAX
(1)  130/    C209 :                                             ;       BCS upper_upper
(1)  130/    C209 :                                             ;       lower_upper:
(1)  130/    C209 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  130/    C209 :                                             ;       upper_upper:
(1)  130/    C209 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  130/    C209 :                                             ;After jump:
(1)  130/    C209 :                                             ;TYA                                                    ;2
(1)  130/    C209 :                                             ;TAX                                                    ;2
(1)  130/    C209 :                                             
(1)  130/    C209 :                                             ;Method 4 - 28 cycles
(1)  130/    C209 :                                             ;LDA (emu_PC,X)                 ;6
(1)  130/    C209 :                                             ;TAY                                    ;2
(1)  130/    C209 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  130/    C209 :                                             ;PHA                                    ;3
(1)  130/    C209 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  130/    C209 :                                             ;PHA                                    ;3
(1)  130/    C209 :                                             ;RTS                                    ;6
(1)  130/    C209 :                                             
(1)  130/    C209 :                                             ;Method 5 - 30 cycles
(1)  130/    C209 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  130/    C20B : A8                                          TAY                                             ;2
(1)  130/    C20C : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  130/    C20F : 95 0A                                       STA emu_ptr,X                   ;4
(1)  130/    C211 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  130/    C214 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  130/    C216 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  130/    C219 :                                                                     
(1)  131/    C219 :                     
(1)  132/    C219 :                     	;0x1A - NOP
(1)  133/    C219 :                     	NOP_0x1A:
(1)  134/    C219 : (MACRO)             		OP_MACRO 26, "NOP", "IMP", "NOP_0x1A"
(1)  134/    C219 :                                             ;TODO
(1)  135/    C219 : (MACRO)             		NEXT_MACRO
(1)  135/    C219 :                                             
(1)  135/    C219 :  (MACRO-2)                                  halt
(1)  135/    C219 : 00                                  BRK
(1)  135/    C21A : 00                                  BRK
(1)  135/    C21B :                                             
(1)  135/    C21B :                                             ;Method 1 - 60 cycles
(1)  135/    C21B :                                             ;Jump table must be page aligned!!!
(1)  135/    C21B :                                             ;LDA (emu_PC,X)                 ;6
(1)  135/    C21B :                                             ;ASL                                    ;2
(1)  135/    C21B :                                             ;STA emu_ptr,X                  ;4
(1)  135/    C21B :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  135/    C21B :                                             ;ADC #0                                 ;2
(1)  135/    C21B :                                             ;STA emu_ptr+1,X                ;4
(1)  135/    C21B :                                             ;LDA (emu_ptr,X)                ;6
(1)  135/    C21B :                                             ;STA emu_ptr2,X                 ;4
(1)  135/    C21B :                                             ;INC emu_ptr,X                  ;6
(1)  135/    C21B :                                             ;BCC .skip                              ;2
(1)  135/    C21B :                                             ;       INC emu_ptr+1,X         ;6
(1)  135/    C21B :                                             ;.skip:
(1)  135/    C21B :                                             ;LDA (emu_ptr,X)                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 45 - 1/5/2022 11:50:53


(1)  135/    C21B :                                             ;STA emu_ptr2+1,X               ;4
(1)  135/    C21B :                                             ;JMP (emu_ptr2,X)               ;6
(1)  135/    C21B :                                             
(1)  135/    C21B :                                             ;Method 2 - 46 cycles
(1)  135/    C21B :                                             ;Jump table must be page aligned!!!
(1)  135/    C21B :                                             ;LDA (emu_PC,X)                 ;6
(1)  135/    C21B :                                             ;STZ emu_ptr+1,X                ;4
(1)  135/    C21B :                                             ;ASL                                    ;2
(1)  135/    C21B :                                             ;ROL emu_ptr+1,X                ;6
(1)  135/    C21B :                                             ;ASL                                    ;2
(1)  135/    C21B :                                             ;ROL emu_ptr+1,X                ;6
(1)  135/    C21B :                                             ;STA emu_ptr,X                  ;4                              
(1)  135/    C21B :                                             ;LDA emu_ptr+1,X                ;4
(1)  135/    C21B :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  135/    C21B :                                             ;STA emu_ptr+1,X                ;4
(1)  135/    C21B :                                             ;JMP (emu_ptr2,X)               ;6
(1)  135/    C21B :                                             
(1)  135/    C21B :                                             ;Method 3 - 30 cycles
(1)  135/    C21B :                                             ;TXA                                                    ;2
(1)  135/    C21B :                                             ;TAY                                                    ;2
(1)  135/    C21B :                                             ;LDA (emu_PC,X)                                 ;6
(1)  135/    C21B :                                             ;ASL                                                    ;2
(1)  135/    C21B :                                             ;BCS upper                                              ;2
(1)  135/    C21B :                                             ;lower:
(1)  135/    C21B :                                             ;       ASL                                                     ;2
(1)  135/    C21B :                                             ;       TAX                                                     ;2
(1)  135/    C21B :                                             ;       BCS upper_lower                         ;2
(1)  135/    C21B :                                             ;       lower_lower:
(1)  135/    C21B :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  135/    C21B :                                             ;       upper_lower:
(1)  135/    C21B :                                             ;               JMP (JUMP_TABLE2,X)
(1)  135/    C21B :                                             ;upper:
(1)  135/    C21B :                                             ;       ASL
(1)  135/    C21B :                                             ;       TAX
(1)  135/    C21B :                                             ;       BCS upper_upper
(1)  135/    C21B :                                             ;       lower_upper:
(1)  135/    C21B :                                             ;               JMP (JUMP_TABLE3,X)
(1)  135/    C21B :                                             ;       upper_upper:
(1)  135/    C21B :                                             ;               JMP (JUMP_TABLE4,X)
(1)  135/    C21B :                                             ;After jump:
(1)  135/    C21B :                                             ;TYA                                                    ;2
(1)  135/    C21B :                                             ;TAX                                                    ;2
(1)  135/    C21B :                                             
(1)  135/    C21B :                                             ;Method 4 - 28 cycles
(1)  135/    C21B :                                             ;LDA (emu_PC,X)                 ;6
(1)  135/    C21B :                                             ;TAY                                    ;2
(1)  135/    C21B :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  135/    C21B :                                             ;PHA                                    ;3
(1)  135/    C21B :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  135/    C21B :                                             ;PHA                                    ;3
(1)  135/    C21B :                                             ;RTS                                    ;6
(1)  135/    C21B :                                             
(1)  135/    C21B :                                             ;Method 5 - 30 cycles
(1)  135/    C21B : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  135/    C21D : A8                                          TAY                                             ;2
(1)  135/    C21E : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  135/    C221 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  135/    C223 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  135/    C226 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  135/    C228 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 46 - 1/5/2022 11:50:53


(1)  135/    C22B :                                                                     
(1)  136/    C22B :                     
(1)  137/    C22B :                     	;0x1B - NOP
(1)  138/    C22B :                     	NOP_0x1B:
(1)  139/    C22B : (MACRO)             		OP_MACRO 27, "NOP", "IMP", "NOP_0x1B"
(1)  139/    C22B :                                             ;TODO
(1)  140/    C22B : (MACRO)             		NEXT_MACRO
(1)  140/    C22B :                                             
(1)  140/    C22B :  (MACRO-2)                                  halt
(1)  140/    C22B : 00                                  BRK
(1)  140/    C22C : 00                                  BRK
(1)  140/    C22D :                                             
(1)  140/    C22D :                                             ;Method 1 - 60 cycles
(1)  140/    C22D :                                             ;Jump table must be page aligned!!!
(1)  140/    C22D :                                             ;LDA (emu_PC,X)                 ;6
(1)  140/    C22D :                                             ;ASL                                    ;2
(1)  140/    C22D :                                             ;STA emu_ptr,X                  ;4
(1)  140/    C22D :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  140/    C22D :                                             ;ADC #0                                 ;2
(1)  140/    C22D :                                             ;STA emu_ptr+1,X                ;4
(1)  140/    C22D :                                             ;LDA (emu_ptr,X)                ;6
(1)  140/    C22D :                                             ;STA emu_ptr2,X                 ;4
(1)  140/    C22D :                                             ;INC emu_ptr,X                  ;6
(1)  140/    C22D :                                             ;BCC .skip                              ;2
(1)  140/    C22D :                                             ;       INC emu_ptr+1,X         ;6
(1)  140/    C22D :                                             ;.skip:
(1)  140/    C22D :                                             ;LDA (emu_ptr,X)                ;6
(1)  140/    C22D :                                             ;STA emu_ptr2+1,X               ;4
(1)  140/    C22D :                                             ;JMP (emu_ptr2,X)               ;6
(1)  140/    C22D :                                             
(1)  140/    C22D :                                             ;Method 2 - 46 cycles
(1)  140/    C22D :                                             ;Jump table must be page aligned!!!
(1)  140/    C22D :                                             ;LDA (emu_PC,X)                 ;6
(1)  140/    C22D :                                             ;STZ emu_ptr+1,X                ;4
(1)  140/    C22D :                                             ;ASL                                    ;2
(1)  140/    C22D :                                             ;ROL emu_ptr+1,X                ;6
(1)  140/    C22D :                                             ;ASL                                    ;2
(1)  140/    C22D :                                             ;ROL emu_ptr+1,X                ;6
(1)  140/    C22D :                                             ;STA emu_ptr,X                  ;4                              
(1)  140/    C22D :                                             ;LDA emu_ptr+1,X                ;4
(1)  140/    C22D :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  140/    C22D :                                             ;STA emu_ptr+1,X                ;4
(1)  140/    C22D :                                             ;JMP (emu_ptr2,X)               ;6
(1)  140/    C22D :                                             
(1)  140/    C22D :                                             ;Method 3 - 30 cycles
(1)  140/    C22D :                                             ;TXA                                                    ;2
(1)  140/    C22D :                                             ;TAY                                                    ;2
(1)  140/    C22D :                                             ;LDA (emu_PC,X)                                 ;6
(1)  140/    C22D :                                             ;ASL                                                    ;2
(1)  140/    C22D :                                             ;BCS upper                                              ;2
(1)  140/    C22D :                                             ;lower:
(1)  140/    C22D :                                             ;       ASL                                                     ;2
(1)  140/    C22D :                                             ;       TAX                                                     ;2
(1)  140/    C22D :                                             ;       BCS upper_lower                         ;2
(1)  140/    C22D :                                             ;       lower_lower:
(1)  140/    C22D :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  140/    C22D :                                             ;       upper_lower:
(1)  140/    C22D :                                             ;               JMP (JUMP_TABLE2,X)
(1)  140/    C22D :                                             ;upper:
(1)  140/    C22D :                                             ;       ASL
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 47 - 1/5/2022 11:50:53


(1)  140/    C22D :                                             ;       TAX
(1)  140/    C22D :                                             ;       BCS upper_upper
(1)  140/    C22D :                                             ;       lower_upper:
(1)  140/    C22D :                                             ;               JMP (JUMP_TABLE3,X)
(1)  140/    C22D :                                             ;       upper_upper:
(1)  140/    C22D :                                             ;               JMP (JUMP_TABLE4,X)
(1)  140/    C22D :                                             ;After jump:
(1)  140/    C22D :                                             ;TYA                                                    ;2
(1)  140/    C22D :                                             ;TAX                                                    ;2
(1)  140/    C22D :                                             
(1)  140/    C22D :                                             ;Method 4 - 28 cycles
(1)  140/    C22D :                                             ;LDA (emu_PC,X)                 ;6
(1)  140/    C22D :                                             ;TAY                                    ;2
(1)  140/    C22D :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  140/    C22D :                                             ;PHA                                    ;3
(1)  140/    C22D :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  140/    C22D :                                             ;PHA                                    ;3
(1)  140/    C22D :                                             ;RTS                                    ;6
(1)  140/    C22D :                                             
(1)  140/    C22D :                                             ;Method 5 - 30 cycles
(1)  140/    C22D : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  140/    C22F : A8                                          TAY                                             ;2
(1)  140/    C230 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  140/    C233 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  140/    C235 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  140/    C238 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  140/    C23A : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  140/    C23D :                                                                     
(1)  141/    C23D :                     
(1)  142/    C23D :                     	;0x1C - NOP
(1)  143/    C23D :                     	NOP_0x1C:
(1)  144/    C23D : (MACRO)             		OP_MACRO 28, "NOP", "IMP", "NOP_0x1C"
(1)  144/    C23D :                                             ;TODO
(1)  145/    C23D : (MACRO)             		NEXT_MACRO
(1)  145/    C23D :                                             
(1)  145/    C23D :  (MACRO-2)                                  halt
(1)  145/    C23D : 00                                  BRK
(1)  145/    C23E : 00                                  BRK
(1)  145/    C23F :                                             
(1)  145/    C23F :                                             ;Method 1 - 60 cycles
(1)  145/    C23F :                                             ;Jump table must be page aligned!!!
(1)  145/    C23F :                                             ;LDA (emu_PC,X)                 ;6
(1)  145/    C23F :                                             ;ASL                                    ;2
(1)  145/    C23F :                                             ;STA emu_ptr,X                  ;4
(1)  145/    C23F :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  145/    C23F :                                             ;ADC #0                                 ;2
(1)  145/    C23F :                                             ;STA emu_ptr+1,X                ;4
(1)  145/    C23F :                                             ;LDA (emu_ptr,X)                ;6
(1)  145/    C23F :                                             ;STA emu_ptr2,X                 ;4
(1)  145/    C23F :                                             ;INC emu_ptr,X                  ;6
(1)  145/    C23F :                                             ;BCC .skip                              ;2
(1)  145/    C23F :                                             ;       INC emu_ptr+1,X         ;6
(1)  145/    C23F :                                             ;.skip:
(1)  145/    C23F :                                             ;LDA (emu_ptr,X)                ;6
(1)  145/    C23F :                                             ;STA emu_ptr2+1,X               ;4
(1)  145/    C23F :                                             ;JMP (emu_ptr2,X)               ;6
(1)  145/    C23F :                                             
(1)  145/    C23F :                                             ;Method 2 - 46 cycles
(1)  145/    C23F :                                             ;Jump table must be page aligned!!!
(1)  145/    C23F :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 48 - 1/5/2022 11:50:53


(1)  145/    C23F :                                             ;STZ emu_ptr+1,X                ;4
(1)  145/    C23F :                                             ;ASL                                    ;2
(1)  145/    C23F :                                             ;ROL emu_ptr+1,X                ;6
(1)  145/    C23F :                                             ;ASL                                    ;2
(1)  145/    C23F :                                             ;ROL emu_ptr+1,X                ;6
(1)  145/    C23F :                                             ;STA emu_ptr,X                  ;4                              
(1)  145/    C23F :                                             ;LDA emu_ptr+1,X                ;4
(1)  145/    C23F :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  145/    C23F :                                             ;STA emu_ptr+1,X                ;4
(1)  145/    C23F :                                             ;JMP (emu_ptr2,X)               ;6
(1)  145/    C23F :                                             
(1)  145/    C23F :                                             ;Method 3 - 30 cycles
(1)  145/    C23F :                                             ;TXA                                                    ;2
(1)  145/    C23F :                                             ;TAY                                                    ;2
(1)  145/    C23F :                                             ;LDA (emu_PC,X)                                 ;6
(1)  145/    C23F :                                             ;ASL                                                    ;2
(1)  145/    C23F :                                             ;BCS upper                                              ;2
(1)  145/    C23F :                                             ;lower:
(1)  145/    C23F :                                             ;       ASL                                                     ;2
(1)  145/    C23F :                                             ;       TAX                                                     ;2
(1)  145/    C23F :                                             ;       BCS upper_lower                         ;2
(1)  145/    C23F :                                             ;       lower_lower:
(1)  145/    C23F :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  145/    C23F :                                             ;       upper_lower:
(1)  145/    C23F :                                             ;               JMP (JUMP_TABLE2,X)
(1)  145/    C23F :                                             ;upper:
(1)  145/    C23F :                                             ;       ASL
(1)  145/    C23F :                                             ;       TAX
(1)  145/    C23F :                                             ;       BCS upper_upper
(1)  145/    C23F :                                             ;       lower_upper:
(1)  145/    C23F :                                             ;               JMP (JUMP_TABLE3,X)
(1)  145/    C23F :                                             ;       upper_upper:
(1)  145/    C23F :                                             ;               JMP (JUMP_TABLE4,X)
(1)  145/    C23F :                                             ;After jump:
(1)  145/    C23F :                                             ;TYA                                                    ;2
(1)  145/    C23F :                                             ;TAX                                                    ;2
(1)  145/    C23F :                                             
(1)  145/    C23F :                                             ;Method 4 - 28 cycles
(1)  145/    C23F :                                             ;LDA (emu_PC,X)                 ;6
(1)  145/    C23F :                                             ;TAY                                    ;2
(1)  145/    C23F :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  145/    C23F :                                             ;PHA                                    ;3
(1)  145/    C23F :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  145/    C23F :                                             ;PHA                                    ;3
(1)  145/    C23F :                                             ;RTS                                    ;6
(1)  145/    C23F :                                             
(1)  145/    C23F :                                             ;Method 5 - 30 cycles
(1)  145/    C23F : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  145/    C241 : A8                                          TAY                                             ;2
(1)  145/    C242 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  145/    C245 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  145/    C247 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  145/    C24A : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  145/    C24C : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  145/    C24F :                                                                     
(1)  146/    C24F :                     
(1)  147/    C24F :                     	;0x1D - ORA ABSX
(1)  148/    C24F :                     	ORA_ABSX:
(1)  149/    C24F : (MACRO)             		OP_MACRO 29, "ORA", "ABSX", "ORA_ABSX"
(1)  149/    C24F :                                             ;TODO
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 49 - 1/5/2022 11:50:53


(1)  150/    C24F : (MACRO)             		NEXT_MACRO
(1)  150/    C24F :                                             
(1)  150/    C24F :  (MACRO-2)                                  halt
(1)  150/    C24F : 00                                  BRK
(1)  150/    C250 : 00                                  BRK
(1)  150/    C251 :                                             
(1)  150/    C251 :                                             ;Method 1 - 60 cycles
(1)  150/    C251 :                                             ;Jump table must be page aligned!!!
(1)  150/    C251 :                                             ;LDA (emu_PC,X)                 ;6
(1)  150/    C251 :                                             ;ASL                                    ;2
(1)  150/    C251 :                                             ;STA emu_ptr,X                  ;4
(1)  150/    C251 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  150/    C251 :                                             ;ADC #0                                 ;2
(1)  150/    C251 :                                             ;STA emu_ptr+1,X                ;4
(1)  150/    C251 :                                             ;LDA (emu_ptr,X)                ;6
(1)  150/    C251 :                                             ;STA emu_ptr2,X                 ;4
(1)  150/    C251 :                                             ;INC emu_ptr,X                  ;6
(1)  150/    C251 :                                             ;BCC .skip                              ;2
(1)  150/    C251 :                                             ;       INC emu_ptr+1,X         ;6
(1)  150/    C251 :                                             ;.skip:
(1)  150/    C251 :                                             ;LDA (emu_ptr,X)                ;6
(1)  150/    C251 :                                             ;STA emu_ptr2+1,X               ;4
(1)  150/    C251 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  150/    C251 :                                             
(1)  150/    C251 :                                             ;Method 2 - 46 cycles
(1)  150/    C251 :                                             ;Jump table must be page aligned!!!
(1)  150/    C251 :                                             ;LDA (emu_PC,X)                 ;6
(1)  150/    C251 :                                             ;STZ emu_ptr+1,X                ;4
(1)  150/    C251 :                                             ;ASL                                    ;2
(1)  150/    C251 :                                             ;ROL emu_ptr+1,X                ;6
(1)  150/    C251 :                                             ;ASL                                    ;2
(1)  150/    C251 :                                             ;ROL emu_ptr+1,X                ;6
(1)  150/    C251 :                                             ;STA emu_ptr,X                  ;4                              
(1)  150/    C251 :                                             ;LDA emu_ptr+1,X                ;4
(1)  150/    C251 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  150/    C251 :                                             ;STA emu_ptr+1,X                ;4
(1)  150/    C251 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  150/    C251 :                                             
(1)  150/    C251 :                                             ;Method 3 - 30 cycles
(1)  150/    C251 :                                             ;TXA                                                    ;2
(1)  150/    C251 :                                             ;TAY                                                    ;2
(1)  150/    C251 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  150/    C251 :                                             ;ASL                                                    ;2
(1)  150/    C251 :                                             ;BCS upper                                              ;2
(1)  150/    C251 :                                             ;lower:
(1)  150/    C251 :                                             ;       ASL                                                     ;2
(1)  150/    C251 :                                             ;       TAX                                                     ;2
(1)  150/    C251 :                                             ;       BCS upper_lower                         ;2
(1)  150/    C251 :                                             ;       lower_lower:
(1)  150/    C251 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  150/    C251 :                                             ;       upper_lower:
(1)  150/    C251 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  150/    C251 :                                             ;upper:
(1)  150/    C251 :                                             ;       ASL
(1)  150/    C251 :                                             ;       TAX
(1)  150/    C251 :                                             ;       BCS upper_upper
(1)  150/    C251 :                                             ;       lower_upper:
(1)  150/    C251 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  150/    C251 :                                             ;       upper_upper:
(1)  150/    C251 :                                             ;               JMP (JUMP_TABLE4,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 50 - 1/5/2022 11:50:53


(1)  150/    C251 :                                             ;After jump:
(1)  150/    C251 :                                             ;TYA                                                    ;2
(1)  150/    C251 :                                             ;TAX                                                    ;2
(1)  150/    C251 :                                             
(1)  150/    C251 :                                             ;Method 4 - 28 cycles
(1)  150/    C251 :                                             ;LDA (emu_PC,X)                 ;6
(1)  150/    C251 :                                             ;TAY                                    ;2
(1)  150/    C251 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  150/    C251 :                                             ;PHA                                    ;3
(1)  150/    C251 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  150/    C251 :                                             ;PHA                                    ;3
(1)  150/    C251 :                                             ;RTS                                    ;6
(1)  150/    C251 :                                             
(1)  150/    C251 :                                             ;Method 5 - 30 cycles
(1)  150/    C251 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  150/    C253 : A8                                          TAY                                             ;2
(1)  150/    C254 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  150/    C257 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  150/    C259 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  150/    C25C : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  150/    C25E : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  150/    C261 :                                                                     
(1)  151/    C261 :                     
(1)  152/    C261 :                     	;0x1E - ASL ABSX
(1)  153/    C261 :                     	ASL_ABSX:
(1)  154/    C261 : (MACRO)             		OP_MACRO 30, "ASL", "ABSX", "ASL_ABSX"
(1)  154/    C261 :                                             ;TODO
(1)  155/    C261 : (MACRO)             		NEXT_MACRO
(1)  155/    C261 :                                             
(1)  155/    C261 :  (MACRO-2)                                  halt
(1)  155/    C261 : 00                                  BRK
(1)  155/    C262 : 00                                  BRK
(1)  155/    C263 :                                             
(1)  155/    C263 :                                             ;Method 1 - 60 cycles
(1)  155/    C263 :                                             ;Jump table must be page aligned!!!
(1)  155/    C263 :                                             ;LDA (emu_PC,X)                 ;6
(1)  155/    C263 :                                             ;ASL                                    ;2
(1)  155/    C263 :                                             ;STA emu_ptr,X                  ;4
(1)  155/    C263 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  155/    C263 :                                             ;ADC #0                                 ;2
(1)  155/    C263 :                                             ;STA emu_ptr+1,X                ;4
(1)  155/    C263 :                                             ;LDA (emu_ptr,X)                ;6
(1)  155/    C263 :                                             ;STA emu_ptr2,X                 ;4
(1)  155/    C263 :                                             ;INC emu_ptr,X                  ;6
(1)  155/    C263 :                                             ;BCC .skip                              ;2
(1)  155/    C263 :                                             ;       INC emu_ptr+1,X         ;6
(1)  155/    C263 :                                             ;.skip:
(1)  155/    C263 :                                             ;LDA (emu_ptr,X)                ;6
(1)  155/    C263 :                                             ;STA emu_ptr2+1,X               ;4
(1)  155/    C263 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  155/    C263 :                                             
(1)  155/    C263 :                                             ;Method 2 - 46 cycles
(1)  155/    C263 :                                             ;Jump table must be page aligned!!!
(1)  155/    C263 :                                             ;LDA (emu_PC,X)                 ;6
(1)  155/    C263 :                                             ;STZ emu_ptr+1,X                ;4
(1)  155/    C263 :                                             ;ASL                                    ;2
(1)  155/    C263 :                                             ;ROL emu_ptr+1,X                ;6
(1)  155/    C263 :                                             ;ASL                                    ;2
(1)  155/    C263 :                                             ;ROL emu_ptr+1,X                ;6
(1)  155/    C263 :                                             ;STA emu_ptr,X                  ;4                              
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 51 - 1/5/2022 11:50:53


(1)  155/    C263 :                                             ;LDA emu_ptr+1,X                ;4
(1)  155/    C263 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  155/    C263 :                                             ;STA emu_ptr+1,X                ;4
(1)  155/    C263 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  155/    C263 :                                             
(1)  155/    C263 :                                             ;Method 3 - 30 cycles
(1)  155/    C263 :                                             ;TXA                                                    ;2
(1)  155/    C263 :                                             ;TAY                                                    ;2
(1)  155/    C263 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  155/    C263 :                                             ;ASL                                                    ;2
(1)  155/    C263 :                                             ;BCS upper                                              ;2
(1)  155/    C263 :                                             ;lower:
(1)  155/    C263 :                                             ;       ASL                                                     ;2
(1)  155/    C263 :                                             ;       TAX                                                     ;2
(1)  155/    C263 :                                             ;       BCS upper_lower                         ;2
(1)  155/    C263 :                                             ;       lower_lower:
(1)  155/    C263 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  155/    C263 :                                             ;       upper_lower:
(1)  155/    C263 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  155/    C263 :                                             ;upper:
(1)  155/    C263 :                                             ;       ASL
(1)  155/    C263 :                                             ;       TAX
(1)  155/    C263 :                                             ;       BCS upper_upper
(1)  155/    C263 :                                             ;       lower_upper:
(1)  155/    C263 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  155/    C263 :                                             ;       upper_upper:
(1)  155/    C263 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  155/    C263 :                                             ;After jump:
(1)  155/    C263 :                                             ;TYA                                                    ;2
(1)  155/    C263 :                                             ;TAX                                                    ;2
(1)  155/    C263 :                                             
(1)  155/    C263 :                                             ;Method 4 - 28 cycles
(1)  155/    C263 :                                             ;LDA (emu_PC,X)                 ;6
(1)  155/    C263 :                                             ;TAY                                    ;2
(1)  155/    C263 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  155/    C263 :                                             ;PHA                                    ;3
(1)  155/    C263 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  155/    C263 :                                             ;PHA                                    ;3
(1)  155/    C263 :                                             ;RTS                                    ;6
(1)  155/    C263 :                                             
(1)  155/    C263 :                                             ;Method 5 - 30 cycles
(1)  155/    C263 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  155/    C265 : A8                                          TAY                                             ;2
(1)  155/    C266 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  155/    C269 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  155/    C26B : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  155/    C26E : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  155/    C270 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  155/    C273 :                                                                     
(1)  156/    C273 :                     
(1)  157/    C273 :                     	;0x1F - NOP
(1)  158/    C273 :                     	NOP_0x1F:
(1)  159/    C273 : (MACRO)             		OP_MACRO 31, "NOP", "IMP", "NOP_0x1F"
(1)  159/    C273 :                                             ;TODO
(1)  160/    C273 : (MACRO)             		NEXT_MACRO
(1)  160/    C273 :                                             
(1)  160/    C273 :  (MACRO-2)                                  halt
(1)  160/    C273 : 00                                  BRK
(1)  160/    C274 : 00                                  BRK
(1)  160/    C275 :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 52 - 1/5/2022 11:50:53


(1)  160/    C275 :                                             ;Method 1 - 60 cycles
(1)  160/    C275 :                                             ;Jump table must be page aligned!!!
(1)  160/    C275 :                                             ;LDA (emu_PC,X)                 ;6
(1)  160/    C275 :                                             ;ASL                                    ;2
(1)  160/    C275 :                                             ;STA emu_ptr,X                  ;4
(1)  160/    C275 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  160/    C275 :                                             ;ADC #0                                 ;2
(1)  160/    C275 :                                             ;STA emu_ptr+1,X                ;4
(1)  160/    C275 :                                             ;LDA (emu_ptr,X)                ;6
(1)  160/    C275 :                                             ;STA emu_ptr2,X                 ;4
(1)  160/    C275 :                                             ;INC emu_ptr,X                  ;6
(1)  160/    C275 :                                             ;BCC .skip                              ;2
(1)  160/    C275 :                                             ;       INC emu_ptr+1,X         ;6
(1)  160/    C275 :                                             ;.skip:
(1)  160/    C275 :                                             ;LDA (emu_ptr,X)                ;6
(1)  160/    C275 :                                             ;STA emu_ptr2+1,X               ;4
(1)  160/    C275 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  160/    C275 :                                             
(1)  160/    C275 :                                             ;Method 2 - 46 cycles
(1)  160/    C275 :                                             ;Jump table must be page aligned!!!
(1)  160/    C275 :                                             ;LDA (emu_PC,X)                 ;6
(1)  160/    C275 :                                             ;STZ emu_ptr+1,X                ;4
(1)  160/    C275 :                                             ;ASL                                    ;2
(1)  160/    C275 :                                             ;ROL emu_ptr+1,X                ;6
(1)  160/    C275 :                                             ;ASL                                    ;2
(1)  160/    C275 :                                             ;ROL emu_ptr+1,X                ;6
(1)  160/    C275 :                                             ;STA emu_ptr,X                  ;4                              
(1)  160/    C275 :                                             ;LDA emu_ptr+1,X                ;4
(1)  160/    C275 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  160/    C275 :                                             ;STA emu_ptr+1,X                ;4
(1)  160/    C275 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  160/    C275 :                                             
(1)  160/    C275 :                                             ;Method 3 - 30 cycles
(1)  160/    C275 :                                             ;TXA                                                    ;2
(1)  160/    C275 :                                             ;TAY                                                    ;2
(1)  160/    C275 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  160/    C275 :                                             ;ASL                                                    ;2
(1)  160/    C275 :                                             ;BCS upper                                              ;2
(1)  160/    C275 :                                             ;lower:
(1)  160/    C275 :                                             ;       ASL                                                     ;2
(1)  160/    C275 :                                             ;       TAX                                                     ;2
(1)  160/    C275 :                                             ;       BCS upper_lower                         ;2
(1)  160/    C275 :                                             ;       lower_lower:
(1)  160/    C275 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  160/    C275 :                                             ;       upper_lower:
(1)  160/    C275 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  160/    C275 :                                             ;upper:
(1)  160/    C275 :                                             ;       ASL
(1)  160/    C275 :                                             ;       TAX
(1)  160/    C275 :                                             ;       BCS upper_upper
(1)  160/    C275 :                                             ;       lower_upper:
(1)  160/    C275 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  160/    C275 :                                             ;       upper_upper:
(1)  160/    C275 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  160/    C275 :                                             ;After jump:
(1)  160/    C275 :                                             ;TYA                                                    ;2
(1)  160/    C275 :                                             ;TAX                                                    ;2
(1)  160/    C275 :                                             
(1)  160/    C275 :                                             ;Method 4 - 28 cycles
(1)  160/    C275 :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 53 - 1/5/2022 11:50:53


(1)  160/    C275 :                                             ;TAY                                    ;2
(1)  160/    C275 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  160/    C275 :                                             ;PHA                                    ;3
(1)  160/    C275 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  160/    C275 :                                             ;PHA                                    ;3
(1)  160/    C275 :                                             ;RTS                                    ;6
(1)  160/    C275 :                                             
(1)  160/    C275 :                                             ;Method 5 - 30 cycles
(1)  160/    C275 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  160/    C277 : A8                                          TAY                                             ;2
(1)  160/    C278 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  160/    C27B : 95 0A                                       STA emu_ptr,X                   ;4
(1)  160/    C27D : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  160/    C280 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  160/    C282 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  160/    C285 :                                                                     
(1)  161/    C285 :                     
(1)  162/    C285 :                     	;0x20 - JSR ABS
(1)  163/    C285 :                     	JSR_ABS:
(1)  164/    C285 : (MACRO)             		OP_MACRO 32, "JSR", "ABS", "JSR_ABS"
(1)  164/    C285 :                                             ;TODO
(1)  165/    C285 : (MACRO)             		NEXT_MACRO
(1)  165/    C285 :                                             
(1)  165/    C285 :  (MACRO-2)                                  halt
(1)  165/    C285 : 00                                  BRK
(1)  165/    C286 : 00                                  BRK
(1)  165/    C287 :                                             
(1)  165/    C287 :                                             ;Method 1 - 60 cycles
(1)  165/    C287 :                                             ;Jump table must be page aligned!!!
(1)  165/    C287 :                                             ;LDA (emu_PC,X)                 ;6
(1)  165/    C287 :                                             ;ASL                                    ;2
(1)  165/    C287 :                                             ;STA emu_ptr,X                  ;4
(1)  165/    C287 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  165/    C287 :                                             ;ADC #0                                 ;2
(1)  165/    C287 :                                             ;STA emu_ptr+1,X                ;4
(1)  165/    C287 :                                             ;LDA (emu_ptr,X)                ;6
(1)  165/    C287 :                                             ;STA emu_ptr2,X                 ;4
(1)  165/    C287 :                                             ;INC emu_ptr,X                  ;6
(1)  165/    C287 :                                             ;BCC .skip                              ;2
(1)  165/    C287 :                                             ;       INC emu_ptr+1,X         ;6
(1)  165/    C287 :                                             ;.skip:
(1)  165/    C287 :                                             ;LDA (emu_ptr,X)                ;6
(1)  165/    C287 :                                             ;STA emu_ptr2+1,X               ;4
(1)  165/    C287 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  165/    C287 :                                             
(1)  165/    C287 :                                             ;Method 2 - 46 cycles
(1)  165/    C287 :                                             ;Jump table must be page aligned!!!
(1)  165/    C287 :                                             ;LDA (emu_PC,X)                 ;6
(1)  165/    C287 :                                             ;STZ emu_ptr+1,X                ;4
(1)  165/    C287 :                                             ;ASL                                    ;2
(1)  165/    C287 :                                             ;ROL emu_ptr+1,X                ;6
(1)  165/    C287 :                                             ;ASL                                    ;2
(1)  165/    C287 :                                             ;ROL emu_ptr+1,X                ;6
(1)  165/    C287 :                                             ;STA emu_ptr,X                  ;4                              
(1)  165/    C287 :                                             ;LDA emu_ptr+1,X                ;4
(1)  165/    C287 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  165/    C287 :                                             ;STA emu_ptr+1,X                ;4
(1)  165/    C287 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  165/    C287 :                                             
(1)  165/    C287 :                                             ;Method 3 - 30 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 54 - 1/5/2022 11:50:53


(1)  165/    C287 :                                             ;TXA                                                    ;2
(1)  165/    C287 :                                             ;TAY                                                    ;2
(1)  165/    C287 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  165/    C287 :                                             ;ASL                                                    ;2
(1)  165/    C287 :                                             ;BCS upper                                              ;2
(1)  165/    C287 :                                             ;lower:
(1)  165/    C287 :                                             ;       ASL                                                     ;2
(1)  165/    C287 :                                             ;       TAX                                                     ;2
(1)  165/    C287 :                                             ;       BCS upper_lower                         ;2
(1)  165/    C287 :                                             ;       lower_lower:
(1)  165/    C287 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  165/    C287 :                                             ;       upper_lower:
(1)  165/    C287 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  165/    C287 :                                             ;upper:
(1)  165/    C287 :                                             ;       ASL
(1)  165/    C287 :                                             ;       TAX
(1)  165/    C287 :                                             ;       BCS upper_upper
(1)  165/    C287 :                                             ;       lower_upper:
(1)  165/    C287 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  165/    C287 :                                             ;       upper_upper:
(1)  165/    C287 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  165/    C287 :                                             ;After jump:
(1)  165/    C287 :                                             ;TYA                                                    ;2
(1)  165/    C287 :                                             ;TAX                                                    ;2
(1)  165/    C287 :                                             
(1)  165/    C287 :                                             ;Method 4 - 28 cycles
(1)  165/    C287 :                                             ;LDA (emu_PC,X)                 ;6
(1)  165/    C287 :                                             ;TAY                                    ;2
(1)  165/    C287 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  165/    C287 :                                             ;PHA                                    ;3
(1)  165/    C287 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  165/    C287 :                                             ;PHA                                    ;3
(1)  165/    C287 :                                             ;RTS                                    ;6
(1)  165/    C287 :                                             
(1)  165/    C287 :                                             ;Method 5 - 30 cycles
(1)  165/    C287 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  165/    C289 : A8                                          TAY                                             ;2
(1)  165/    C28A : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  165/    C28D : 95 0A                                       STA emu_ptr,X                   ;4
(1)  165/    C28F : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  165/    C292 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  165/    C294 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  165/    C297 :                                                                     
(1)  166/    C297 :                     
(1)  167/    C297 :                     	;0x21 - AND IX
(1)  168/    C297 :                     	AND_IX:
(1)  169/    C297 : (MACRO)             		OP_MACRO 33, "AND", "IX", "AND_IX"
(1)  169/    C297 :                                             ;TODO
(1)  170/    C297 : (MACRO)             		NEXT_MACRO
(1)  170/    C297 :                                             
(1)  170/    C297 :  (MACRO-2)                                  halt
(1)  170/    C297 : 00                                  BRK
(1)  170/    C298 : 00                                  BRK
(1)  170/    C299 :                                             
(1)  170/    C299 :                                             ;Method 1 - 60 cycles
(1)  170/    C299 :                                             ;Jump table must be page aligned!!!
(1)  170/    C299 :                                             ;LDA (emu_PC,X)                 ;6
(1)  170/    C299 :                                             ;ASL                                    ;2
(1)  170/    C299 :                                             ;STA emu_ptr,X                  ;4
(1)  170/    C299 :                                             ;LDA #hi(JUMP_TABLE)    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 55 - 1/5/2022 11:50:53


(1)  170/    C299 :                                             ;ADC #0                                 ;2
(1)  170/    C299 :                                             ;STA emu_ptr+1,X                ;4
(1)  170/    C299 :                                             ;LDA (emu_ptr,X)                ;6
(1)  170/    C299 :                                             ;STA emu_ptr2,X                 ;4
(1)  170/    C299 :                                             ;INC emu_ptr,X                  ;6
(1)  170/    C299 :                                             ;BCC .skip                              ;2
(1)  170/    C299 :                                             ;       INC emu_ptr+1,X         ;6
(1)  170/    C299 :                                             ;.skip:
(1)  170/    C299 :                                             ;LDA (emu_ptr,X)                ;6
(1)  170/    C299 :                                             ;STA emu_ptr2+1,X               ;4
(1)  170/    C299 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  170/    C299 :                                             
(1)  170/    C299 :                                             ;Method 2 - 46 cycles
(1)  170/    C299 :                                             ;Jump table must be page aligned!!!
(1)  170/    C299 :                                             ;LDA (emu_PC,X)                 ;6
(1)  170/    C299 :                                             ;STZ emu_ptr+1,X                ;4
(1)  170/    C299 :                                             ;ASL                                    ;2
(1)  170/    C299 :                                             ;ROL emu_ptr+1,X                ;6
(1)  170/    C299 :                                             ;ASL                                    ;2
(1)  170/    C299 :                                             ;ROL emu_ptr+1,X                ;6
(1)  170/    C299 :                                             ;STA emu_ptr,X                  ;4                              
(1)  170/    C299 :                                             ;LDA emu_ptr+1,X                ;4
(1)  170/    C299 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  170/    C299 :                                             ;STA emu_ptr+1,X                ;4
(1)  170/    C299 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  170/    C299 :                                             
(1)  170/    C299 :                                             ;Method 3 - 30 cycles
(1)  170/    C299 :                                             ;TXA                                                    ;2
(1)  170/    C299 :                                             ;TAY                                                    ;2
(1)  170/    C299 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  170/    C299 :                                             ;ASL                                                    ;2
(1)  170/    C299 :                                             ;BCS upper                                              ;2
(1)  170/    C299 :                                             ;lower:
(1)  170/    C299 :                                             ;       ASL                                                     ;2
(1)  170/    C299 :                                             ;       TAX                                                     ;2
(1)  170/    C299 :                                             ;       BCS upper_lower                         ;2
(1)  170/    C299 :                                             ;       lower_lower:
(1)  170/    C299 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  170/    C299 :                                             ;       upper_lower:
(1)  170/    C299 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  170/    C299 :                                             ;upper:
(1)  170/    C299 :                                             ;       ASL
(1)  170/    C299 :                                             ;       TAX
(1)  170/    C299 :                                             ;       BCS upper_upper
(1)  170/    C299 :                                             ;       lower_upper:
(1)  170/    C299 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  170/    C299 :                                             ;       upper_upper:
(1)  170/    C299 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  170/    C299 :                                             ;After jump:
(1)  170/    C299 :                                             ;TYA                                                    ;2
(1)  170/    C299 :                                             ;TAX                                                    ;2
(1)  170/    C299 :                                             
(1)  170/    C299 :                                             ;Method 4 - 28 cycles
(1)  170/    C299 :                                             ;LDA (emu_PC,X)                 ;6
(1)  170/    C299 :                                             ;TAY                                    ;2
(1)  170/    C299 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  170/    C299 :                                             ;PHA                                    ;3
(1)  170/    C299 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  170/    C299 :                                             ;PHA                                    ;3
(1)  170/    C299 :                                             ;RTS                                    ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 56 - 1/5/2022 11:50:53


(1)  170/    C299 :                                             
(1)  170/    C299 :                                             ;Method 5 - 30 cycles
(1)  170/    C299 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  170/    C29B : A8                                          TAY                                             ;2
(1)  170/    C29C : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  170/    C29F : 95 0A                                       STA emu_ptr,X                   ;4
(1)  170/    C2A1 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  170/    C2A4 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  170/    C2A6 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  170/    C2A9 :                                                                     
(1)  171/    C2A9 :                     
(1)  172/    C2A9 :                     	;0x22 - NOP
(1)  173/    C2A9 :                     	NOP_0x22:
(1)  174/    C2A9 : (MACRO)             		OP_MACRO 34, "NOP", "IMP", "NOP_0x22"
(1)  174/    C2A9 :                                             ;TODO
(1)  175/    C2A9 : (MACRO)             		NEXT_MACRO
(1)  175/    C2A9 :                                             
(1)  175/    C2A9 :  (MACRO-2)                                  halt
(1)  175/    C2A9 : 00                                  BRK
(1)  175/    C2AA : 00                                  BRK
(1)  175/    C2AB :                                             
(1)  175/    C2AB :                                             ;Method 1 - 60 cycles
(1)  175/    C2AB :                                             ;Jump table must be page aligned!!!
(1)  175/    C2AB :                                             ;LDA (emu_PC,X)                 ;6
(1)  175/    C2AB :                                             ;ASL                                    ;2
(1)  175/    C2AB :                                             ;STA emu_ptr,X                  ;4
(1)  175/    C2AB :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  175/    C2AB :                                             ;ADC #0                                 ;2
(1)  175/    C2AB :                                             ;STA emu_ptr+1,X                ;4
(1)  175/    C2AB :                                             ;LDA (emu_ptr,X)                ;6
(1)  175/    C2AB :                                             ;STA emu_ptr2,X                 ;4
(1)  175/    C2AB :                                             ;INC emu_ptr,X                  ;6
(1)  175/    C2AB :                                             ;BCC .skip                              ;2
(1)  175/    C2AB :                                             ;       INC emu_ptr+1,X         ;6
(1)  175/    C2AB :                                             ;.skip:
(1)  175/    C2AB :                                             ;LDA (emu_ptr,X)                ;6
(1)  175/    C2AB :                                             ;STA emu_ptr2+1,X               ;4
(1)  175/    C2AB :                                             ;JMP (emu_ptr2,X)               ;6
(1)  175/    C2AB :                                             
(1)  175/    C2AB :                                             ;Method 2 - 46 cycles
(1)  175/    C2AB :                                             ;Jump table must be page aligned!!!
(1)  175/    C2AB :                                             ;LDA (emu_PC,X)                 ;6
(1)  175/    C2AB :                                             ;STZ emu_ptr+1,X                ;4
(1)  175/    C2AB :                                             ;ASL                                    ;2
(1)  175/    C2AB :                                             ;ROL emu_ptr+1,X                ;6
(1)  175/    C2AB :                                             ;ASL                                    ;2
(1)  175/    C2AB :                                             ;ROL emu_ptr+1,X                ;6
(1)  175/    C2AB :                                             ;STA emu_ptr,X                  ;4                              
(1)  175/    C2AB :                                             ;LDA emu_ptr+1,X                ;4
(1)  175/    C2AB :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  175/    C2AB :                                             ;STA emu_ptr+1,X                ;4
(1)  175/    C2AB :                                             ;JMP (emu_ptr2,X)               ;6
(1)  175/    C2AB :                                             
(1)  175/    C2AB :                                             ;Method 3 - 30 cycles
(1)  175/    C2AB :                                             ;TXA                                                    ;2
(1)  175/    C2AB :                                             ;TAY                                                    ;2
(1)  175/    C2AB :                                             ;LDA (emu_PC,X)                                 ;6
(1)  175/    C2AB :                                             ;ASL                                                    ;2
(1)  175/    C2AB :                                             ;BCS upper                                              ;2
(1)  175/    C2AB :                                             ;lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 57 - 1/5/2022 11:50:53


(1)  175/    C2AB :                                             ;       ASL                                                     ;2
(1)  175/    C2AB :                                             ;       TAX                                                     ;2
(1)  175/    C2AB :                                             ;       BCS upper_lower                         ;2
(1)  175/    C2AB :                                             ;       lower_lower:
(1)  175/    C2AB :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  175/    C2AB :                                             ;       upper_lower:
(1)  175/    C2AB :                                             ;               JMP (JUMP_TABLE2,X)
(1)  175/    C2AB :                                             ;upper:
(1)  175/    C2AB :                                             ;       ASL
(1)  175/    C2AB :                                             ;       TAX
(1)  175/    C2AB :                                             ;       BCS upper_upper
(1)  175/    C2AB :                                             ;       lower_upper:
(1)  175/    C2AB :                                             ;               JMP (JUMP_TABLE3,X)
(1)  175/    C2AB :                                             ;       upper_upper:
(1)  175/    C2AB :                                             ;               JMP (JUMP_TABLE4,X)
(1)  175/    C2AB :                                             ;After jump:
(1)  175/    C2AB :                                             ;TYA                                                    ;2
(1)  175/    C2AB :                                             ;TAX                                                    ;2
(1)  175/    C2AB :                                             
(1)  175/    C2AB :                                             ;Method 4 - 28 cycles
(1)  175/    C2AB :                                             ;LDA (emu_PC,X)                 ;6
(1)  175/    C2AB :                                             ;TAY                                    ;2
(1)  175/    C2AB :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  175/    C2AB :                                             ;PHA                                    ;3
(1)  175/    C2AB :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  175/    C2AB :                                             ;PHA                                    ;3
(1)  175/    C2AB :                                             ;RTS                                    ;6
(1)  175/    C2AB :                                             
(1)  175/    C2AB :                                             ;Method 5 - 30 cycles
(1)  175/    C2AB : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  175/    C2AD : A8                                          TAY                                             ;2
(1)  175/    C2AE : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  175/    C2B1 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  175/    C2B3 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  175/    C2B6 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  175/    C2B8 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  175/    C2BB :                                                                     
(1)  176/    C2BB :                     
(1)  177/    C2BB :                     	;0x23 - NOP
(1)  178/    C2BB :                     	NOP_0x23:
(1)  179/    C2BB : (MACRO)             		OP_MACRO 35, "NOP", "IMP", "NOP_0x23"
(1)  179/    C2BB :                                             ;TODO
(1)  180/    C2BB : (MACRO)             		NEXT_MACRO
(1)  180/    C2BB :                                             
(1)  180/    C2BB :  (MACRO-2)                                  halt
(1)  180/    C2BB : 00                                  BRK
(1)  180/    C2BC : 00                                  BRK
(1)  180/    C2BD :                                             
(1)  180/    C2BD :                                             ;Method 1 - 60 cycles
(1)  180/    C2BD :                                             ;Jump table must be page aligned!!!
(1)  180/    C2BD :                                             ;LDA (emu_PC,X)                 ;6
(1)  180/    C2BD :                                             ;ASL                                    ;2
(1)  180/    C2BD :                                             ;STA emu_ptr,X                  ;4
(1)  180/    C2BD :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  180/    C2BD :                                             ;ADC #0                                 ;2
(1)  180/    C2BD :                                             ;STA emu_ptr+1,X                ;4
(1)  180/    C2BD :                                             ;LDA (emu_ptr,X)                ;6
(1)  180/    C2BD :                                             ;STA emu_ptr2,X                 ;4
(1)  180/    C2BD :                                             ;INC emu_ptr,X                  ;6
(1)  180/    C2BD :                                             ;BCC .skip                              ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 58 - 1/5/2022 11:50:53


(1)  180/    C2BD :                                             ;       INC emu_ptr+1,X         ;6
(1)  180/    C2BD :                                             ;.skip:
(1)  180/    C2BD :                                             ;LDA (emu_ptr,X)                ;6
(1)  180/    C2BD :                                             ;STA emu_ptr2+1,X               ;4
(1)  180/    C2BD :                                             ;JMP (emu_ptr2,X)               ;6
(1)  180/    C2BD :                                             
(1)  180/    C2BD :                                             ;Method 2 - 46 cycles
(1)  180/    C2BD :                                             ;Jump table must be page aligned!!!
(1)  180/    C2BD :                                             ;LDA (emu_PC,X)                 ;6
(1)  180/    C2BD :                                             ;STZ emu_ptr+1,X                ;4
(1)  180/    C2BD :                                             ;ASL                                    ;2
(1)  180/    C2BD :                                             ;ROL emu_ptr+1,X                ;6
(1)  180/    C2BD :                                             ;ASL                                    ;2
(1)  180/    C2BD :                                             ;ROL emu_ptr+1,X                ;6
(1)  180/    C2BD :                                             ;STA emu_ptr,X                  ;4                              
(1)  180/    C2BD :                                             ;LDA emu_ptr+1,X                ;4
(1)  180/    C2BD :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  180/    C2BD :                                             ;STA emu_ptr+1,X                ;4
(1)  180/    C2BD :                                             ;JMP (emu_ptr2,X)               ;6
(1)  180/    C2BD :                                             
(1)  180/    C2BD :                                             ;Method 3 - 30 cycles
(1)  180/    C2BD :                                             ;TXA                                                    ;2
(1)  180/    C2BD :                                             ;TAY                                                    ;2
(1)  180/    C2BD :                                             ;LDA (emu_PC,X)                                 ;6
(1)  180/    C2BD :                                             ;ASL                                                    ;2
(1)  180/    C2BD :                                             ;BCS upper                                              ;2
(1)  180/    C2BD :                                             ;lower:
(1)  180/    C2BD :                                             ;       ASL                                                     ;2
(1)  180/    C2BD :                                             ;       TAX                                                     ;2
(1)  180/    C2BD :                                             ;       BCS upper_lower                         ;2
(1)  180/    C2BD :                                             ;       lower_lower:
(1)  180/    C2BD :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  180/    C2BD :                                             ;       upper_lower:
(1)  180/    C2BD :                                             ;               JMP (JUMP_TABLE2,X)
(1)  180/    C2BD :                                             ;upper:
(1)  180/    C2BD :                                             ;       ASL
(1)  180/    C2BD :                                             ;       TAX
(1)  180/    C2BD :                                             ;       BCS upper_upper
(1)  180/    C2BD :                                             ;       lower_upper:
(1)  180/    C2BD :                                             ;               JMP (JUMP_TABLE3,X)
(1)  180/    C2BD :                                             ;       upper_upper:
(1)  180/    C2BD :                                             ;               JMP (JUMP_TABLE4,X)
(1)  180/    C2BD :                                             ;After jump:
(1)  180/    C2BD :                                             ;TYA                                                    ;2
(1)  180/    C2BD :                                             ;TAX                                                    ;2
(1)  180/    C2BD :                                             
(1)  180/    C2BD :                                             ;Method 4 - 28 cycles
(1)  180/    C2BD :                                             ;LDA (emu_PC,X)                 ;6
(1)  180/    C2BD :                                             ;TAY                                    ;2
(1)  180/    C2BD :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  180/    C2BD :                                             ;PHA                                    ;3
(1)  180/    C2BD :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  180/    C2BD :                                             ;PHA                                    ;3
(1)  180/    C2BD :                                             ;RTS                                    ;6
(1)  180/    C2BD :                                             
(1)  180/    C2BD :                                             ;Method 5 - 30 cycles
(1)  180/    C2BD : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  180/    C2BF : A8                                          TAY                                             ;2
(1)  180/    C2C0 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  180/    C2C3 : 95 0A                                       STA emu_ptr,X                   ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 59 - 1/5/2022 11:50:53


(1)  180/    C2C5 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  180/    C2C8 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  180/    C2CA : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  180/    C2CD :                                                                     
(1)  181/    C2CD :                     
(1)  182/    C2CD :                     	;0x24 - BIT ZP
(1)  183/    C2CD :                     	BIT_ZP:
(1)  184/    C2CD : (MACRO)             		OP_MACRO 36, "BIT", "ZP", "BIT_ZP"
(1)  184/    C2CD :                                             ;TODO
(1)  185/    C2CD : (MACRO)             		NEXT_MACRO
(1)  185/    C2CD :                                             
(1)  185/    C2CD :  (MACRO-2)                                  halt
(1)  185/    C2CD : 00                                  BRK
(1)  185/    C2CE : 00                                  BRK
(1)  185/    C2CF :                                             
(1)  185/    C2CF :                                             ;Method 1 - 60 cycles
(1)  185/    C2CF :                                             ;Jump table must be page aligned!!!
(1)  185/    C2CF :                                             ;LDA (emu_PC,X)                 ;6
(1)  185/    C2CF :                                             ;ASL                                    ;2
(1)  185/    C2CF :                                             ;STA emu_ptr,X                  ;4
(1)  185/    C2CF :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  185/    C2CF :                                             ;ADC #0                                 ;2
(1)  185/    C2CF :                                             ;STA emu_ptr+1,X                ;4
(1)  185/    C2CF :                                             ;LDA (emu_ptr,X)                ;6
(1)  185/    C2CF :                                             ;STA emu_ptr2,X                 ;4
(1)  185/    C2CF :                                             ;INC emu_ptr,X                  ;6
(1)  185/    C2CF :                                             ;BCC .skip                              ;2
(1)  185/    C2CF :                                             ;       INC emu_ptr+1,X         ;6
(1)  185/    C2CF :                                             ;.skip:
(1)  185/    C2CF :                                             ;LDA (emu_ptr,X)                ;6
(1)  185/    C2CF :                                             ;STA emu_ptr2+1,X               ;4
(1)  185/    C2CF :                                             ;JMP (emu_ptr2,X)               ;6
(1)  185/    C2CF :                                             
(1)  185/    C2CF :                                             ;Method 2 - 46 cycles
(1)  185/    C2CF :                                             ;Jump table must be page aligned!!!
(1)  185/    C2CF :                                             ;LDA (emu_PC,X)                 ;6
(1)  185/    C2CF :                                             ;STZ emu_ptr+1,X                ;4
(1)  185/    C2CF :                                             ;ASL                                    ;2
(1)  185/    C2CF :                                             ;ROL emu_ptr+1,X                ;6
(1)  185/    C2CF :                                             ;ASL                                    ;2
(1)  185/    C2CF :                                             ;ROL emu_ptr+1,X                ;6
(1)  185/    C2CF :                                             ;STA emu_ptr,X                  ;4                              
(1)  185/    C2CF :                                             ;LDA emu_ptr+1,X                ;4
(1)  185/    C2CF :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  185/    C2CF :                                             ;STA emu_ptr+1,X                ;4
(1)  185/    C2CF :                                             ;JMP (emu_ptr2,X)               ;6
(1)  185/    C2CF :                                             
(1)  185/    C2CF :                                             ;Method 3 - 30 cycles
(1)  185/    C2CF :                                             ;TXA                                                    ;2
(1)  185/    C2CF :                                             ;TAY                                                    ;2
(1)  185/    C2CF :                                             ;LDA (emu_PC,X)                                 ;6
(1)  185/    C2CF :                                             ;ASL                                                    ;2
(1)  185/    C2CF :                                             ;BCS upper                                              ;2
(1)  185/    C2CF :                                             ;lower:
(1)  185/    C2CF :                                             ;       ASL                                                     ;2
(1)  185/    C2CF :                                             ;       TAX                                                     ;2
(1)  185/    C2CF :                                             ;       BCS upper_lower                         ;2
(1)  185/    C2CF :                                             ;       lower_lower:
(1)  185/    C2CF :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  185/    C2CF :                                             ;       upper_lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 60 - 1/5/2022 11:50:53


(1)  185/    C2CF :                                             ;               JMP (JUMP_TABLE2,X)
(1)  185/    C2CF :                                             ;upper:
(1)  185/    C2CF :                                             ;       ASL
(1)  185/    C2CF :                                             ;       TAX
(1)  185/    C2CF :                                             ;       BCS upper_upper
(1)  185/    C2CF :                                             ;       lower_upper:
(1)  185/    C2CF :                                             ;               JMP (JUMP_TABLE3,X)
(1)  185/    C2CF :                                             ;       upper_upper:
(1)  185/    C2CF :                                             ;               JMP (JUMP_TABLE4,X)
(1)  185/    C2CF :                                             ;After jump:
(1)  185/    C2CF :                                             ;TYA                                                    ;2
(1)  185/    C2CF :                                             ;TAX                                                    ;2
(1)  185/    C2CF :                                             
(1)  185/    C2CF :                                             ;Method 4 - 28 cycles
(1)  185/    C2CF :                                             ;LDA (emu_PC,X)                 ;6
(1)  185/    C2CF :                                             ;TAY                                    ;2
(1)  185/    C2CF :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  185/    C2CF :                                             ;PHA                                    ;3
(1)  185/    C2CF :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  185/    C2CF :                                             ;PHA                                    ;3
(1)  185/    C2CF :                                             ;RTS                                    ;6
(1)  185/    C2CF :                                             
(1)  185/    C2CF :                                             ;Method 5 - 30 cycles
(1)  185/    C2CF : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  185/    C2D1 : A8                                          TAY                                             ;2
(1)  185/    C2D2 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  185/    C2D5 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  185/    C2D7 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  185/    C2DA : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  185/    C2DC : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  185/    C2DF :                                                                     
(1)  186/    C2DF :                     
(1)  187/    C2DF :                     	;0x25 - AND ZP
(1)  188/    C2DF :                     	AND_ZP:
(1)  189/    C2DF : (MACRO)             		OP_MACRO 37, "AND", "ZP", "AND_ZP"
(1)  189/    C2DF :                                             ;TODO
(1)  190/    C2DF : (MACRO)             		NEXT_MACRO
(1)  190/    C2DF :                                             
(1)  190/    C2DF :  (MACRO-2)                                  halt
(1)  190/    C2DF : 00                                  BRK
(1)  190/    C2E0 : 00                                  BRK
(1)  190/    C2E1 :                                             
(1)  190/    C2E1 :                                             ;Method 1 - 60 cycles
(1)  190/    C2E1 :                                             ;Jump table must be page aligned!!!
(1)  190/    C2E1 :                                             ;LDA (emu_PC,X)                 ;6
(1)  190/    C2E1 :                                             ;ASL                                    ;2
(1)  190/    C2E1 :                                             ;STA emu_ptr,X                  ;4
(1)  190/    C2E1 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  190/    C2E1 :                                             ;ADC #0                                 ;2
(1)  190/    C2E1 :                                             ;STA emu_ptr+1,X                ;4
(1)  190/    C2E1 :                                             ;LDA (emu_ptr,X)                ;6
(1)  190/    C2E1 :                                             ;STA emu_ptr2,X                 ;4
(1)  190/    C2E1 :                                             ;INC emu_ptr,X                  ;6
(1)  190/    C2E1 :                                             ;BCC .skip                              ;2
(1)  190/    C2E1 :                                             ;       INC emu_ptr+1,X         ;6
(1)  190/    C2E1 :                                             ;.skip:
(1)  190/    C2E1 :                                             ;LDA (emu_ptr,X)                ;6
(1)  190/    C2E1 :                                             ;STA emu_ptr2+1,X               ;4
(1)  190/    C2E1 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  190/    C2E1 :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 61 - 1/5/2022 11:50:53


(1)  190/    C2E1 :                                             ;Method 2 - 46 cycles
(1)  190/    C2E1 :                                             ;Jump table must be page aligned!!!
(1)  190/    C2E1 :                                             ;LDA (emu_PC,X)                 ;6
(1)  190/    C2E1 :                                             ;STZ emu_ptr+1,X                ;4
(1)  190/    C2E1 :                                             ;ASL                                    ;2
(1)  190/    C2E1 :                                             ;ROL emu_ptr+1,X                ;6
(1)  190/    C2E1 :                                             ;ASL                                    ;2
(1)  190/    C2E1 :                                             ;ROL emu_ptr+1,X                ;6
(1)  190/    C2E1 :                                             ;STA emu_ptr,X                  ;4                              
(1)  190/    C2E1 :                                             ;LDA emu_ptr+1,X                ;4
(1)  190/    C2E1 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  190/    C2E1 :                                             ;STA emu_ptr+1,X                ;4
(1)  190/    C2E1 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  190/    C2E1 :                                             
(1)  190/    C2E1 :                                             ;Method 3 - 30 cycles
(1)  190/    C2E1 :                                             ;TXA                                                    ;2
(1)  190/    C2E1 :                                             ;TAY                                                    ;2
(1)  190/    C2E1 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  190/    C2E1 :                                             ;ASL                                                    ;2
(1)  190/    C2E1 :                                             ;BCS upper                                              ;2
(1)  190/    C2E1 :                                             ;lower:
(1)  190/    C2E1 :                                             ;       ASL                                                     ;2
(1)  190/    C2E1 :                                             ;       TAX                                                     ;2
(1)  190/    C2E1 :                                             ;       BCS upper_lower                         ;2
(1)  190/    C2E1 :                                             ;       lower_lower:
(1)  190/    C2E1 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  190/    C2E1 :                                             ;       upper_lower:
(1)  190/    C2E1 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  190/    C2E1 :                                             ;upper:
(1)  190/    C2E1 :                                             ;       ASL
(1)  190/    C2E1 :                                             ;       TAX
(1)  190/    C2E1 :                                             ;       BCS upper_upper
(1)  190/    C2E1 :                                             ;       lower_upper:
(1)  190/    C2E1 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  190/    C2E1 :                                             ;       upper_upper:
(1)  190/    C2E1 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  190/    C2E1 :                                             ;After jump:
(1)  190/    C2E1 :                                             ;TYA                                                    ;2
(1)  190/    C2E1 :                                             ;TAX                                                    ;2
(1)  190/    C2E1 :                                             
(1)  190/    C2E1 :                                             ;Method 4 - 28 cycles
(1)  190/    C2E1 :                                             ;LDA (emu_PC,X)                 ;6
(1)  190/    C2E1 :                                             ;TAY                                    ;2
(1)  190/    C2E1 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  190/    C2E1 :                                             ;PHA                                    ;3
(1)  190/    C2E1 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  190/    C2E1 :                                             ;PHA                                    ;3
(1)  190/    C2E1 :                                             ;RTS                                    ;6
(1)  190/    C2E1 :                                             
(1)  190/    C2E1 :                                             ;Method 5 - 30 cycles
(1)  190/    C2E1 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  190/    C2E3 : A8                                          TAY                                             ;2
(1)  190/    C2E4 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  190/    C2E7 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  190/    C2E9 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  190/    C2EC : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  190/    C2EE : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  190/    C2F1 :                                                                     
(1)  191/    C2F1 :                     
(1)  192/    C2F1 :                     	;0x26 - ROL ZP
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 62 - 1/5/2022 11:50:53


(1)  193/    C2F1 :                     	ROL_ZP:
(1)  194/    C2F1 : (MACRO)             		OP_MACRO 38, "ROL", "ZP", "ROL_ZP"
(1)  194/    C2F1 :                                             ;TODO
(1)  195/    C2F1 : (MACRO)             		NEXT_MACRO
(1)  195/    C2F1 :                                             
(1)  195/    C2F1 :  (MACRO-2)                                  halt
(1)  195/    C2F1 : 00                                  BRK
(1)  195/    C2F2 : 00                                  BRK
(1)  195/    C2F3 :                                             
(1)  195/    C2F3 :                                             ;Method 1 - 60 cycles
(1)  195/    C2F3 :                                             ;Jump table must be page aligned!!!
(1)  195/    C2F3 :                                             ;LDA (emu_PC,X)                 ;6
(1)  195/    C2F3 :                                             ;ASL                                    ;2
(1)  195/    C2F3 :                                             ;STA emu_ptr,X                  ;4
(1)  195/    C2F3 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  195/    C2F3 :                                             ;ADC #0                                 ;2
(1)  195/    C2F3 :                                             ;STA emu_ptr+1,X                ;4
(1)  195/    C2F3 :                                             ;LDA (emu_ptr,X)                ;6
(1)  195/    C2F3 :                                             ;STA emu_ptr2,X                 ;4
(1)  195/    C2F3 :                                             ;INC emu_ptr,X                  ;6
(1)  195/    C2F3 :                                             ;BCC .skip                              ;2
(1)  195/    C2F3 :                                             ;       INC emu_ptr+1,X         ;6
(1)  195/    C2F3 :                                             ;.skip:
(1)  195/    C2F3 :                                             ;LDA (emu_ptr,X)                ;6
(1)  195/    C2F3 :                                             ;STA emu_ptr2+1,X               ;4
(1)  195/    C2F3 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  195/    C2F3 :                                             
(1)  195/    C2F3 :                                             ;Method 2 - 46 cycles
(1)  195/    C2F3 :                                             ;Jump table must be page aligned!!!
(1)  195/    C2F3 :                                             ;LDA (emu_PC,X)                 ;6
(1)  195/    C2F3 :                                             ;STZ emu_ptr+1,X                ;4
(1)  195/    C2F3 :                                             ;ASL                                    ;2
(1)  195/    C2F3 :                                             ;ROL emu_ptr+1,X                ;6
(1)  195/    C2F3 :                                             ;ASL                                    ;2
(1)  195/    C2F3 :                                             ;ROL emu_ptr+1,X                ;6
(1)  195/    C2F3 :                                             ;STA emu_ptr,X                  ;4                              
(1)  195/    C2F3 :                                             ;LDA emu_ptr+1,X                ;4
(1)  195/    C2F3 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  195/    C2F3 :                                             ;STA emu_ptr+1,X                ;4
(1)  195/    C2F3 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  195/    C2F3 :                                             
(1)  195/    C2F3 :                                             ;Method 3 - 30 cycles
(1)  195/    C2F3 :                                             ;TXA                                                    ;2
(1)  195/    C2F3 :                                             ;TAY                                                    ;2
(1)  195/    C2F3 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  195/    C2F3 :                                             ;ASL                                                    ;2
(1)  195/    C2F3 :                                             ;BCS upper                                              ;2
(1)  195/    C2F3 :                                             ;lower:
(1)  195/    C2F3 :                                             ;       ASL                                                     ;2
(1)  195/    C2F3 :                                             ;       TAX                                                     ;2
(1)  195/    C2F3 :                                             ;       BCS upper_lower                         ;2
(1)  195/    C2F3 :                                             ;       lower_lower:
(1)  195/    C2F3 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  195/    C2F3 :                                             ;       upper_lower:
(1)  195/    C2F3 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  195/    C2F3 :                                             ;upper:
(1)  195/    C2F3 :                                             ;       ASL
(1)  195/    C2F3 :                                             ;       TAX
(1)  195/    C2F3 :                                             ;       BCS upper_upper
(1)  195/    C2F3 :                                             ;       lower_upper:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 63 - 1/5/2022 11:50:53


(1)  195/    C2F3 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  195/    C2F3 :                                             ;       upper_upper:
(1)  195/    C2F3 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  195/    C2F3 :                                             ;After jump:
(1)  195/    C2F3 :                                             ;TYA                                                    ;2
(1)  195/    C2F3 :                                             ;TAX                                                    ;2
(1)  195/    C2F3 :                                             
(1)  195/    C2F3 :                                             ;Method 4 - 28 cycles
(1)  195/    C2F3 :                                             ;LDA (emu_PC,X)                 ;6
(1)  195/    C2F3 :                                             ;TAY                                    ;2
(1)  195/    C2F3 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  195/    C2F3 :                                             ;PHA                                    ;3
(1)  195/    C2F3 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  195/    C2F3 :                                             ;PHA                                    ;3
(1)  195/    C2F3 :                                             ;RTS                                    ;6
(1)  195/    C2F3 :                                             
(1)  195/    C2F3 :                                             ;Method 5 - 30 cycles
(1)  195/    C2F3 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  195/    C2F5 : A8                                          TAY                                             ;2
(1)  195/    C2F6 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  195/    C2F9 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  195/    C2FB : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  195/    C2FE : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  195/    C300 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  195/    C303 :                                                                     
(1)  196/    C303 :                     
(1)  197/    C303 :                     	;0x27 - NOP
(1)  198/    C303 :                     	NOP_0x27:
(1)  199/    C303 : (MACRO)             		OP_MACRO 39, "NOP", "IMP", "NOP_0x27"
(1)  199/    C303 :                                             ;TODO
(1)  200/    C303 : (MACRO)             		NEXT_MACRO
(1)  200/    C303 :                                             
(1)  200/    C303 :  (MACRO-2)                                  halt
(1)  200/    C303 : 00                                  BRK
(1)  200/    C304 : 00                                  BRK
(1)  200/    C305 :                                             
(1)  200/    C305 :                                             ;Method 1 - 60 cycles
(1)  200/    C305 :                                             ;Jump table must be page aligned!!!
(1)  200/    C305 :                                             ;LDA (emu_PC,X)                 ;6
(1)  200/    C305 :                                             ;ASL                                    ;2
(1)  200/    C305 :                                             ;STA emu_ptr,X                  ;4
(1)  200/    C305 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  200/    C305 :                                             ;ADC #0                                 ;2
(1)  200/    C305 :                                             ;STA emu_ptr+1,X                ;4
(1)  200/    C305 :                                             ;LDA (emu_ptr,X)                ;6
(1)  200/    C305 :                                             ;STA emu_ptr2,X                 ;4
(1)  200/    C305 :                                             ;INC emu_ptr,X                  ;6
(1)  200/    C305 :                                             ;BCC .skip                              ;2
(1)  200/    C305 :                                             ;       INC emu_ptr+1,X         ;6
(1)  200/    C305 :                                             ;.skip:
(1)  200/    C305 :                                             ;LDA (emu_ptr,X)                ;6
(1)  200/    C305 :                                             ;STA emu_ptr2+1,X               ;4
(1)  200/    C305 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  200/    C305 :                                             
(1)  200/    C305 :                                             ;Method 2 - 46 cycles
(1)  200/    C305 :                                             ;Jump table must be page aligned!!!
(1)  200/    C305 :                                             ;LDA (emu_PC,X)                 ;6
(1)  200/    C305 :                                             ;STZ emu_ptr+1,X                ;4
(1)  200/    C305 :                                             ;ASL                                    ;2
(1)  200/    C305 :                                             ;ROL emu_ptr+1,X                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 64 - 1/5/2022 11:50:53


(1)  200/    C305 :                                             ;ASL                                    ;2
(1)  200/    C305 :                                             ;ROL emu_ptr+1,X                ;6
(1)  200/    C305 :                                             ;STA emu_ptr,X                  ;4                              
(1)  200/    C305 :                                             ;LDA emu_ptr+1,X                ;4
(1)  200/    C305 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  200/    C305 :                                             ;STA emu_ptr+1,X                ;4
(1)  200/    C305 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  200/    C305 :                                             
(1)  200/    C305 :                                             ;Method 3 - 30 cycles
(1)  200/    C305 :                                             ;TXA                                                    ;2
(1)  200/    C305 :                                             ;TAY                                                    ;2
(1)  200/    C305 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  200/    C305 :                                             ;ASL                                                    ;2
(1)  200/    C305 :                                             ;BCS upper                                              ;2
(1)  200/    C305 :                                             ;lower:
(1)  200/    C305 :                                             ;       ASL                                                     ;2
(1)  200/    C305 :                                             ;       TAX                                                     ;2
(1)  200/    C305 :                                             ;       BCS upper_lower                         ;2
(1)  200/    C305 :                                             ;       lower_lower:
(1)  200/    C305 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  200/    C305 :                                             ;       upper_lower:
(1)  200/    C305 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  200/    C305 :                                             ;upper:
(1)  200/    C305 :                                             ;       ASL
(1)  200/    C305 :                                             ;       TAX
(1)  200/    C305 :                                             ;       BCS upper_upper
(1)  200/    C305 :                                             ;       lower_upper:
(1)  200/    C305 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  200/    C305 :                                             ;       upper_upper:
(1)  200/    C305 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  200/    C305 :                                             ;After jump:
(1)  200/    C305 :                                             ;TYA                                                    ;2
(1)  200/    C305 :                                             ;TAX                                                    ;2
(1)  200/    C305 :                                             
(1)  200/    C305 :                                             ;Method 4 - 28 cycles
(1)  200/    C305 :                                             ;LDA (emu_PC,X)                 ;6
(1)  200/    C305 :                                             ;TAY                                    ;2
(1)  200/    C305 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  200/    C305 :                                             ;PHA                                    ;3
(1)  200/    C305 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  200/    C305 :                                             ;PHA                                    ;3
(1)  200/    C305 :                                             ;RTS                                    ;6
(1)  200/    C305 :                                             
(1)  200/    C305 :                                             ;Method 5 - 30 cycles
(1)  200/    C305 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  200/    C307 : A8                                          TAY                                             ;2
(1)  200/    C308 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  200/    C30B : 95 0A                                       STA emu_ptr,X                   ;4
(1)  200/    C30D : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  200/    C310 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  200/    C312 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  200/    C315 :                                                                     
(1)  201/    C315 :                     
(1)  202/    C315 :                     	;0x28 - PLP IMP
(1)  203/    C315 :                     	PLP_IMP:
(1)  204/    C315 : (MACRO)             		OP_MACRO 40, "PLP", "IMP", "PLP_IMP"
(1)  204/    C315 :                                             ;TODO
(1)  205/    C315 : (MACRO)             		NEXT_MACRO
(1)  205/    C315 :                                             
(1)  205/    C315 :  (MACRO-2)                                  halt
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 65 - 1/5/2022 11:50:53


(1)  205/    C315 : 00                                  BRK
(1)  205/    C316 : 00                                  BRK
(1)  205/    C317 :                                             
(1)  205/    C317 :                                             ;Method 1 - 60 cycles
(1)  205/    C317 :                                             ;Jump table must be page aligned!!!
(1)  205/    C317 :                                             ;LDA (emu_PC,X)                 ;6
(1)  205/    C317 :                                             ;ASL                                    ;2
(1)  205/    C317 :                                             ;STA emu_ptr,X                  ;4
(1)  205/    C317 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  205/    C317 :                                             ;ADC #0                                 ;2
(1)  205/    C317 :                                             ;STA emu_ptr+1,X                ;4
(1)  205/    C317 :                                             ;LDA (emu_ptr,X)                ;6
(1)  205/    C317 :                                             ;STA emu_ptr2,X                 ;4
(1)  205/    C317 :                                             ;INC emu_ptr,X                  ;6
(1)  205/    C317 :                                             ;BCC .skip                              ;2
(1)  205/    C317 :                                             ;       INC emu_ptr+1,X         ;6
(1)  205/    C317 :                                             ;.skip:
(1)  205/    C317 :                                             ;LDA (emu_ptr,X)                ;6
(1)  205/    C317 :                                             ;STA emu_ptr2+1,X               ;4
(1)  205/    C317 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  205/    C317 :                                             
(1)  205/    C317 :                                             ;Method 2 - 46 cycles
(1)  205/    C317 :                                             ;Jump table must be page aligned!!!
(1)  205/    C317 :                                             ;LDA (emu_PC,X)                 ;6
(1)  205/    C317 :                                             ;STZ emu_ptr+1,X                ;4
(1)  205/    C317 :                                             ;ASL                                    ;2
(1)  205/    C317 :                                             ;ROL emu_ptr+1,X                ;6
(1)  205/    C317 :                                             ;ASL                                    ;2
(1)  205/    C317 :                                             ;ROL emu_ptr+1,X                ;6
(1)  205/    C317 :                                             ;STA emu_ptr,X                  ;4                              
(1)  205/    C317 :                                             ;LDA emu_ptr+1,X                ;4
(1)  205/    C317 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  205/    C317 :                                             ;STA emu_ptr+1,X                ;4
(1)  205/    C317 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  205/    C317 :                                             
(1)  205/    C317 :                                             ;Method 3 - 30 cycles
(1)  205/    C317 :                                             ;TXA                                                    ;2
(1)  205/    C317 :                                             ;TAY                                                    ;2
(1)  205/    C317 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  205/    C317 :                                             ;ASL                                                    ;2
(1)  205/    C317 :                                             ;BCS upper                                              ;2
(1)  205/    C317 :                                             ;lower:
(1)  205/    C317 :                                             ;       ASL                                                     ;2
(1)  205/    C317 :                                             ;       TAX                                                     ;2
(1)  205/    C317 :                                             ;       BCS upper_lower                         ;2
(1)  205/    C317 :                                             ;       lower_lower:
(1)  205/    C317 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  205/    C317 :                                             ;       upper_lower:
(1)  205/    C317 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  205/    C317 :                                             ;upper:
(1)  205/    C317 :                                             ;       ASL
(1)  205/    C317 :                                             ;       TAX
(1)  205/    C317 :                                             ;       BCS upper_upper
(1)  205/    C317 :                                             ;       lower_upper:
(1)  205/    C317 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  205/    C317 :                                             ;       upper_upper:
(1)  205/    C317 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  205/    C317 :                                             ;After jump:
(1)  205/    C317 :                                             ;TYA                                                    ;2
(1)  205/    C317 :                                             ;TAX                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 66 - 1/5/2022 11:50:53


(1)  205/    C317 :                                             
(1)  205/    C317 :                                             ;Method 4 - 28 cycles
(1)  205/    C317 :                                             ;LDA (emu_PC,X)                 ;6
(1)  205/    C317 :                                             ;TAY                                    ;2
(1)  205/    C317 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  205/    C317 :                                             ;PHA                                    ;3
(1)  205/    C317 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  205/    C317 :                                             ;PHA                                    ;3
(1)  205/    C317 :                                             ;RTS                                    ;6
(1)  205/    C317 :                                             
(1)  205/    C317 :                                             ;Method 5 - 30 cycles
(1)  205/    C317 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  205/    C319 : A8                                          TAY                                             ;2
(1)  205/    C31A : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  205/    C31D : 95 0A                                       STA emu_ptr,X                   ;4
(1)  205/    C31F : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  205/    C322 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  205/    C324 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  205/    C327 :                                                                     
(1)  206/    C327 :                     
(1)  207/    C327 :                     	;0x29 - AND IMMED
(1)  208/    C327 :                     	AND_IMMED:
(1)  209/    C327 : (MACRO)             		OP_MACRO 41, "AND", "IMMED", "AND_IMMED"
(1)  209/    C327 :                                             ;TODO
(1)  210/    C327 : (MACRO)             		NEXT_MACRO
(1)  210/    C327 :                                             
(1)  210/    C327 :  (MACRO-2)                                  halt
(1)  210/    C327 : 00                                  BRK
(1)  210/    C328 : 00                                  BRK
(1)  210/    C329 :                                             
(1)  210/    C329 :                                             ;Method 1 - 60 cycles
(1)  210/    C329 :                                             ;Jump table must be page aligned!!!
(1)  210/    C329 :                                             ;LDA (emu_PC,X)                 ;6
(1)  210/    C329 :                                             ;ASL                                    ;2
(1)  210/    C329 :                                             ;STA emu_ptr,X                  ;4
(1)  210/    C329 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  210/    C329 :                                             ;ADC #0                                 ;2
(1)  210/    C329 :                                             ;STA emu_ptr+1,X                ;4
(1)  210/    C329 :                                             ;LDA (emu_ptr,X)                ;6
(1)  210/    C329 :                                             ;STA emu_ptr2,X                 ;4
(1)  210/    C329 :                                             ;INC emu_ptr,X                  ;6
(1)  210/    C329 :                                             ;BCC .skip                              ;2
(1)  210/    C329 :                                             ;       INC emu_ptr+1,X         ;6
(1)  210/    C329 :                                             ;.skip:
(1)  210/    C329 :                                             ;LDA (emu_ptr,X)                ;6
(1)  210/    C329 :                                             ;STA emu_ptr2+1,X               ;4
(1)  210/    C329 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  210/    C329 :                                             
(1)  210/    C329 :                                             ;Method 2 - 46 cycles
(1)  210/    C329 :                                             ;Jump table must be page aligned!!!
(1)  210/    C329 :                                             ;LDA (emu_PC,X)                 ;6
(1)  210/    C329 :                                             ;STZ emu_ptr+1,X                ;4
(1)  210/    C329 :                                             ;ASL                                    ;2
(1)  210/    C329 :                                             ;ROL emu_ptr+1,X                ;6
(1)  210/    C329 :                                             ;ASL                                    ;2
(1)  210/    C329 :                                             ;ROL emu_ptr+1,X                ;6
(1)  210/    C329 :                                             ;STA emu_ptr,X                  ;4                              
(1)  210/    C329 :                                             ;LDA emu_ptr+1,X                ;4
(1)  210/    C329 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  210/    C329 :                                             ;STA emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 67 - 1/5/2022 11:50:53


(1)  210/    C329 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  210/    C329 :                                             
(1)  210/    C329 :                                             ;Method 3 - 30 cycles
(1)  210/    C329 :                                             ;TXA                                                    ;2
(1)  210/    C329 :                                             ;TAY                                                    ;2
(1)  210/    C329 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  210/    C329 :                                             ;ASL                                                    ;2
(1)  210/    C329 :                                             ;BCS upper                                              ;2
(1)  210/    C329 :                                             ;lower:
(1)  210/    C329 :                                             ;       ASL                                                     ;2
(1)  210/    C329 :                                             ;       TAX                                                     ;2
(1)  210/    C329 :                                             ;       BCS upper_lower                         ;2
(1)  210/    C329 :                                             ;       lower_lower:
(1)  210/    C329 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  210/    C329 :                                             ;       upper_lower:
(1)  210/    C329 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  210/    C329 :                                             ;upper:
(1)  210/    C329 :                                             ;       ASL
(1)  210/    C329 :                                             ;       TAX
(1)  210/    C329 :                                             ;       BCS upper_upper
(1)  210/    C329 :                                             ;       lower_upper:
(1)  210/    C329 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  210/    C329 :                                             ;       upper_upper:
(1)  210/    C329 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  210/    C329 :                                             ;After jump:
(1)  210/    C329 :                                             ;TYA                                                    ;2
(1)  210/    C329 :                                             ;TAX                                                    ;2
(1)  210/    C329 :                                             
(1)  210/    C329 :                                             ;Method 4 - 28 cycles
(1)  210/    C329 :                                             ;LDA (emu_PC,X)                 ;6
(1)  210/    C329 :                                             ;TAY                                    ;2
(1)  210/    C329 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  210/    C329 :                                             ;PHA                                    ;3
(1)  210/    C329 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  210/    C329 :                                             ;PHA                                    ;3
(1)  210/    C329 :                                             ;RTS                                    ;6
(1)  210/    C329 :                                             
(1)  210/    C329 :                                             ;Method 5 - 30 cycles
(1)  210/    C329 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  210/    C32B : A8                                          TAY                                             ;2
(1)  210/    C32C : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  210/    C32F : 95 0A                                       STA emu_ptr,X                   ;4
(1)  210/    C331 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  210/    C334 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  210/    C336 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  210/    C339 :                                                                     
(1)  211/    C339 :                     
(1)  212/    C339 :                     	;0x2A - ROL A
(1)  213/    C339 :                     	ROL_A:
(1)  214/    C339 : (MACRO)             		OP_MACRO 42, "ROL", "A", "ROL_A"
(1)  214/    C339 :                                             ;TODO
(1)  215/    C339 : (MACRO)             		NEXT_MACRO
(1)  215/    C339 :                                             
(1)  215/    C339 :  (MACRO-2)                                  halt
(1)  215/    C339 : 00                                  BRK
(1)  215/    C33A : 00                                  BRK
(1)  215/    C33B :                                             
(1)  215/    C33B :                                             ;Method 1 - 60 cycles
(1)  215/    C33B :                                             ;Jump table must be page aligned!!!
(1)  215/    C33B :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 68 - 1/5/2022 11:50:53


(1)  215/    C33B :                                             ;ASL                                    ;2
(1)  215/    C33B :                                             ;STA emu_ptr,X                  ;4
(1)  215/    C33B :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  215/    C33B :                                             ;ADC #0                                 ;2
(1)  215/    C33B :                                             ;STA emu_ptr+1,X                ;4
(1)  215/    C33B :                                             ;LDA (emu_ptr,X)                ;6
(1)  215/    C33B :                                             ;STA emu_ptr2,X                 ;4
(1)  215/    C33B :                                             ;INC emu_ptr,X                  ;6
(1)  215/    C33B :                                             ;BCC .skip                              ;2
(1)  215/    C33B :                                             ;       INC emu_ptr+1,X         ;6
(1)  215/    C33B :                                             ;.skip:
(1)  215/    C33B :                                             ;LDA (emu_ptr,X)                ;6
(1)  215/    C33B :                                             ;STA emu_ptr2+1,X               ;4
(1)  215/    C33B :                                             ;JMP (emu_ptr2,X)               ;6
(1)  215/    C33B :                                             
(1)  215/    C33B :                                             ;Method 2 - 46 cycles
(1)  215/    C33B :                                             ;Jump table must be page aligned!!!
(1)  215/    C33B :                                             ;LDA (emu_PC,X)                 ;6
(1)  215/    C33B :                                             ;STZ emu_ptr+1,X                ;4
(1)  215/    C33B :                                             ;ASL                                    ;2
(1)  215/    C33B :                                             ;ROL emu_ptr+1,X                ;6
(1)  215/    C33B :                                             ;ASL                                    ;2
(1)  215/    C33B :                                             ;ROL emu_ptr+1,X                ;6
(1)  215/    C33B :                                             ;STA emu_ptr,X                  ;4                              
(1)  215/    C33B :                                             ;LDA emu_ptr+1,X                ;4
(1)  215/    C33B :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  215/    C33B :                                             ;STA emu_ptr+1,X                ;4
(1)  215/    C33B :                                             ;JMP (emu_ptr2,X)               ;6
(1)  215/    C33B :                                             
(1)  215/    C33B :                                             ;Method 3 - 30 cycles
(1)  215/    C33B :                                             ;TXA                                                    ;2
(1)  215/    C33B :                                             ;TAY                                                    ;2
(1)  215/    C33B :                                             ;LDA (emu_PC,X)                                 ;6
(1)  215/    C33B :                                             ;ASL                                                    ;2
(1)  215/    C33B :                                             ;BCS upper                                              ;2
(1)  215/    C33B :                                             ;lower:
(1)  215/    C33B :                                             ;       ASL                                                     ;2
(1)  215/    C33B :                                             ;       TAX                                                     ;2
(1)  215/    C33B :                                             ;       BCS upper_lower                         ;2
(1)  215/    C33B :                                             ;       lower_lower:
(1)  215/    C33B :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  215/    C33B :                                             ;       upper_lower:
(1)  215/    C33B :                                             ;               JMP (JUMP_TABLE2,X)
(1)  215/    C33B :                                             ;upper:
(1)  215/    C33B :                                             ;       ASL
(1)  215/    C33B :                                             ;       TAX
(1)  215/    C33B :                                             ;       BCS upper_upper
(1)  215/    C33B :                                             ;       lower_upper:
(1)  215/    C33B :                                             ;               JMP (JUMP_TABLE3,X)
(1)  215/    C33B :                                             ;       upper_upper:
(1)  215/    C33B :                                             ;               JMP (JUMP_TABLE4,X)
(1)  215/    C33B :                                             ;After jump:
(1)  215/    C33B :                                             ;TYA                                                    ;2
(1)  215/    C33B :                                             ;TAX                                                    ;2
(1)  215/    C33B :                                             
(1)  215/    C33B :                                             ;Method 4 - 28 cycles
(1)  215/    C33B :                                             ;LDA (emu_PC,X)                 ;6
(1)  215/    C33B :                                             ;TAY                                    ;2
(1)  215/    C33B :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  215/    C33B :                                             ;PHA                                    ;3
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 69 - 1/5/2022 11:50:53


(1)  215/    C33B :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  215/    C33B :                                             ;PHA                                    ;3
(1)  215/    C33B :                                             ;RTS                                    ;6
(1)  215/    C33B :                                             
(1)  215/    C33B :                                             ;Method 5 - 30 cycles
(1)  215/    C33B : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  215/    C33D : A8                                          TAY                                             ;2
(1)  215/    C33E : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  215/    C341 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  215/    C343 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  215/    C346 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  215/    C348 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  215/    C34B :                                                                     
(1)  216/    C34B :                     
(1)  217/    C34B :                     	;0x2B - NOP
(1)  218/    C34B :                     	NOP_0x2B:
(1)  219/    C34B : (MACRO)             		OP_MACRO 43, "NOP", "IMP", "NOP_0x2B"
(1)  219/    C34B :                                             ;TODO
(1)  220/    C34B : (MACRO)             		NEXT_MACRO
(1)  220/    C34B :                                             
(1)  220/    C34B :  (MACRO-2)                                  halt
(1)  220/    C34B : 00                                  BRK
(1)  220/    C34C : 00                                  BRK
(1)  220/    C34D :                                             
(1)  220/    C34D :                                             ;Method 1 - 60 cycles
(1)  220/    C34D :                                             ;Jump table must be page aligned!!!
(1)  220/    C34D :                                             ;LDA (emu_PC,X)                 ;6
(1)  220/    C34D :                                             ;ASL                                    ;2
(1)  220/    C34D :                                             ;STA emu_ptr,X                  ;4
(1)  220/    C34D :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  220/    C34D :                                             ;ADC #0                                 ;2
(1)  220/    C34D :                                             ;STA emu_ptr+1,X                ;4
(1)  220/    C34D :                                             ;LDA (emu_ptr,X)                ;6
(1)  220/    C34D :                                             ;STA emu_ptr2,X                 ;4
(1)  220/    C34D :                                             ;INC emu_ptr,X                  ;6
(1)  220/    C34D :                                             ;BCC .skip                              ;2
(1)  220/    C34D :                                             ;       INC emu_ptr+1,X         ;6
(1)  220/    C34D :                                             ;.skip:
(1)  220/    C34D :                                             ;LDA (emu_ptr,X)                ;6
(1)  220/    C34D :                                             ;STA emu_ptr2+1,X               ;4
(1)  220/    C34D :                                             ;JMP (emu_ptr2,X)               ;6
(1)  220/    C34D :                                             
(1)  220/    C34D :                                             ;Method 2 - 46 cycles
(1)  220/    C34D :                                             ;Jump table must be page aligned!!!
(1)  220/    C34D :                                             ;LDA (emu_PC,X)                 ;6
(1)  220/    C34D :                                             ;STZ emu_ptr+1,X                ;4
(1)  220/    C34D :                                             ;ASL                                    ;2
(1)  220/    C34D :                                             ;ROL emu_ptr+1,X                ;6
(1)  220/    C34D :                                             ;ASL                                    ;2
(1)  220/    C34D :                                             ;ROL emu_ptr+1,X                ;6
(1)  220/    C34D :                                             ;STA emu_ptr,X                  ;4                              
(1)  220/    C34D :                                             ;LDA emu_ptr+1,X                ;4
(1)  220/    C34D :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  220/    C34D :                                             ;STA emu_ptr+1,X                ;4
(1)  220/    C34D :                                             ;JMP (emu_ptr2,X)               ;6
(1)  220/    C34D :                                             
(1)  220/    C34D :                                             ;Method 3 - 30 cycles
(1)  220/    C34D :                                             ;TXA                                                    ;2
(1)  220/    C34D :                                             ;TAY                                                    ;2
(1)  220/    C34D :                                             ;LDA (emu_PC,X)                                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 70 - 1/5/2022 11:50:53


(1)  220/    C34D :                                             ;ASL                                                    ;2
(1)  220/    C34D :                                             ;BCS upper                                              ;2
(1)  220/    C34D :                                             ;lower:
(1)  220/    C34D :                                             ;       ASL                                                     ;2
(1)  220/    C34D :                                             ;       TAX                                                     ;2
(1)  220/    C34D :                                             ;       BCS upper_lower                         ;2
(1)  220/    C34D :                                             ;       lower_lower:
(1)  220/    C34D :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  220/    C34D :                                             ;       upper_lower:
(1)  220/    C34D :                                             ;               JMP (JUMP_TABLE2,X)
(1)  220/    C34D :                                             ;upper:
(1)  220/    C34D :                                             ;       ASL
(1)  220/    C34D :                                             ;       TAX
(1)  220/    C34D :                                             ;       BCS upper_upper
(1)  220/    C34D :                                             ;       lower_upper:
(1)  220/    C34D :                                             ;               JMP (JUMP_TABLE3,X)
(1)  220/    C34D :                                             ;       upper_upper:
(1)  220/    C34D :                                             ;               JMP (JUMP_TABLE4,X)
(1)  220/    C34D :                                             ;After jump:
(1)  220/    C34D :                                             ;TYA                                                    ;2
(1)  220/    C34D :                                             ;TAX                                                    ;2
(1)  220/    C34D :                                             
(1)  220/    C34D :                                             ;Method 4 - 28 cycles
(1)  220/    C34D :                                             ;LDA (emu_PC,X)                 ;6
(1)  220/    C34D :                                             ;TAY                                    ;2
(1)  220/    C34D :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  220/    C34D :                                             ;PHA                                    ;3
(1)  220/    C34D :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  220/    C34D :                                             ;PHA                                    ;3
(1)  220/    C34D :                                             ;RTS                                    ;6
(1)  220/    C34D :                                             
(1)  220/    C34D :                                             ;Method 5 - 30 cycles
(1)  220/    C34D : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  220/    C34F : A8                                          TAY                                             ;2
(1)  220/    C350 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  220/    C353 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  220/    C355 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  220/    C358 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  220/    C35A : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  220/    C35D :                                                                     
(1)  221/    C35D :                     
(1)  222/    C35D :                     	;0x2C - BIT ABS
(1)  223/    C35D :                     	BIT_ABS:
(1)  224/    C35D : (MACRO)             		OP_MACRO 44, "BIT", "ABS", "BIT_ABS"
(1)  224/    C35D :                                             ;TODO
(1)  225/    C35D : (MACRO)             		NEXT_MACRO
(1)  225/    C35D :                                             
(1)  225/    C35D :  (MACRO-2)                                  halt
(1)  225/    C35D : 00                                  BRK
(1)  225/    C35E : 00                                  BRK
(1)  225/    C35F :                                             
(1)  225/    C35F :                                             ;Method 1 - 60 cycles
(1)  225/    C35F :                                             ;Jump table must be page aligned!!!
(1)  225/    C35F :                                             ;LDA (emu_PC,X)                 ;6
(1)  225/    C35F :                                             ;ASL                                    ;2
(1)  225/    C35F :                                             ;STA emu_ptr,X                  ;4
(1)  225/    C35F :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  225/    C35F :                                             ;ADC #0                                 ;2
(1)  225/    C35F :                                             ;STA emu_ptr+1,X                ;4
(1)  225/    C35F :                                             ;LDA (emu_ptr,X)                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 71 - 1/5/2022 11:50:53


(1)  225/    C35F :                                             ;STA emu_ptr2,X                 ;4
(1)  225/    C35F :                                             ;INC emu_ptr,X                  ;6
(1)  225/    C35F :                                             ;BCC .skip                              ;2
(1)  225/    C35F :                                             ;       INC emu_ptr+1,X         ;6
(1)  225/    C35F :                                             ;.skip:
(1)  225/    C35F :                                             ;LDA (emu_ptr,X)                ;6
(1)  225/    C35F :                                             ;STA emu_ptr2+1,X               ;4
(1)  225/    C35F :                                             ;JMP (emu_ptr2,X)               ;6
(1)  225/    C35F :                                             
(1)  225/    C35F :                                             ;Method 2 - 46 cycles
(1)  225/    C35F :                                             ;Jump table must be page aligned!!!
(1)  225/    C35F :                                             ;LDA (emu_PC,X)                 ;6
(1)  225/    C35F :                                             ;STZ emu_ptr+1,X                ;4
(1)  225/    C35F :                                             ;ASL                                    ;2
(1)  225/    C35F :                                             ;ROL emu_ptr+1,X                ;6
(1)  225/    C35F :                                             ;ASL                                    ;2
(1)  225/    C35F :                                             ;ROL emu_ptr+1,X                ;6
(1)  225/    C35F :                                             ;STA emu_ptr,X                  ;4                              
(1)  225/    C35F :                                             ;LDA emu_ptr+1,X                ;4
(1)  225/    C35F :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  225/    C35F :                                             ;STA emu_ptr+1,X                ;4
(1)  225/    C35F :                                             ;JMP (emu_ptr2,X)               ;6
(1)  225/    C35F :                                             
(1)  225/    C35F :                                             ;Method 3 - 30 cycles
(1)  225/    C35F :                                             ;TXA                                                    ;2
(1)  225/    C35F :                                             ;TAY                                                    ;2
(1)  225/    C35F :                                             ;LDA (emu_PC,X)                                 ;6
(1)  225/    C35F :                                             ;ASL                                                    ;2
(1)  225/    C35F :                                             ;BCS upper                                              ;2
(1)  225/    C35F :                                             ;lower:
(1)  225/    C35F :                                             ;       ASL                                                     ;2
(1)  225/    C35F :                                             ;       TAX                                                     ;2
(1)  225/    C35F :                                             ;       BCS upper_lower                         ;2
(1)  225/    C35F :                                             ;       lower_lower:
(1)  225/    C35F :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  225/    C35F :                                             ;       upper_lower:
(1)  225/    C35F :                                             ;               JMP (JUMP_TABLE2,X)
(1)  225/    C35F :                                             ;upper:
(1)  225/    C35F :                                             ;       ASL
(1)  225/    C35F :                                             ;       TAX
(1)  225/    C35F :                                             ;       BCS upper_upper
(1)  225/    C35F :                                             ;       lower_upper:
(1)  225/    C35F :                                             ;               JMP (JUMP_TABLE3,X)
(1)  225/    C35F :                                             ;       upper_upper:
(1)  225/    C35F :                                             ;               JMP (JUMP_TABLE4,X)
(1)  225/    C35F :                                             ;After jump:
(1)  225/    C35F :                                             ;TYA                                                    ;2
(1)  225/    C35F :                                             ;TAX                                                    ;2
(1)  225/    C35F :                                             
(1)  225/    C35F :                                             ;Method 4 - 28 cycles
(1)  225/    C35F :                                             ;LDA (emu_PC,X)                 ;6
(1)  225/    C35F :                                             ;TAY                                    ;2
(1)  225/    C35F :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  225/    C35F :                                             ;PHA                                    ;3
(1)  225/    C35F :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  225/    C35F :                                             ;PHA                                    ;3
(1)  225/    C35F :                                             ;RTS                                    ;6
(1)  225/    C35F :                                             
(1)  225/    C35F :                                             ;Method 5 - 30 cycles
(1)  225/    C35F : A1 02                                       LDA (emu_PC,X)                  ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 72 - 1/5/2022 11:50:53


(1)  225/    C361 : A8                                          TAY                                             ;2
(1)  225/    C362 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  225/    C365 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  225/    C367 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  225/    C36A : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  225/    C36C : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  225/    C36F :                                                                     
(1)  226/    C36F :                     
(1)  227/    C36F :                     	;0x2D - AND ABS
(1)  228/    C36F :                     	AND_ABS:
(1)  229/    C36F : (MACRO)             		OP_MACRO 45, "AND", "ABS", "AND_ABS"
(1)  229/    C36F :                                             ;TODO
(1)  230/    C36F : (MACRO)             		NEXT_MACRO
(1)  230/    C36F :                                             
(1)  230/    C36F :  (MACRO-2)                                  halt
(1)  230/    C36F : 00                                  BRK
(1)  230/    C370 : 00                                  BRK
(1)  230/    C371 :                                             
(1)  230/    C371 :                                             ;Method 1 - 60 cycles
(1)  230/    C371 :                                             ;Jump table must be page aligned!!!
(1)  230/    C371 :                                             ;LDA (emu_PC,X)                 ;6
(1)  230/    C371 :                                             ;ASL                                    ;2
(1)  230/    C371 :                                             ;STA emu_ptr,X                  ;4
(1)  230/    C371 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  230/    C371 :                                             ;ADC #0                                 ;2
(1)  230/    C371 :                                             ;STA emu_ptr+1,X                ;4
(1)  230/    C371 :                                             ;LDA (emu_ptr,X)                ;6
(1)  230/    C371 :                                             ;STA emu_ptr2,X                 ;4
(1)  230/    C371 :                                             ;INC emu_ptr,X                  ;6
(1)  230/    C371 :                                             ;BCC .skip                              ;2
(1)  230/    C371 :                                             ;       INC emu_ptr+1,X         ;6
(1)  230/    C371 :                                             ;.skip:
(1)  230/    C371 :                                             ;LDA (emu_ptr,X)                ;6
(1)  230/    C371 :                                             ;STA emu_ptr2+1,X               ;4
(1)  230/    C371 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  230/    C371 :                                             
(1)  230/    C371 :                                             ;Method 2 - 46 cycles
(1)  230/    C371 :                                             ;Jump table must be page aligned!!!
(1)  230/    C371 :                                             ;LDA (emu_PC,X)                 ;6
(1)  230/    C371 :                                             ;STZ emu_ptr+1,X                ;4
(1)  230/    C371 :                                             ;ASL                                    ;2
(1)  230/    C371 :                                             ;ROL emu_ptr+1,X                ;6
(1)  230/    C371 :                                             ;ASL                                    ;2
(1)  230/    C371 :                                             ;ROL emu_ptr+1,X                ;6
(1)  230/    C371 :                                             ;STA emu_ptr,X                  ;4                              
(1)  230/    C371 :                                             ;LDA emu_ptr+1,X                ;4
(1)  230/    C371 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  230/    C371 :                                             ;STA emu_ptr+1,X                ;4
(1)  230/    C371 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  230/    C371 :                                             
(1)  230/    C371 :                                             ;Method 3 - 30 cycles
(1)  230/    C371 :                                             ;TXA                                                    ;2
(1)  230/    C371 :                                             ;TAY                                                    ;2
(1)  230/    C371 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  230/    C371 :                                             ;ASL                                                    ;2
(1)  230/    C371 :                                             ;BCS upper                                              ;2
(1)  230/    C371 :                                             ;lower:
(1)  230/    C371 :                                             ;       ASL                                                     ;2
(1)  230/    C371 :                                             ;       TAX                                                     ;2
(1)  230/    C371 :                                             ;       BCS upper_lower                         ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 73 - 1/5/2022 11:50:53


(1)  230/    C371 :                                             ;       lower_lower:
(1)  230/    C371 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  230/    C371 :                                             ;       upper_lower:
(1)  230/    C371 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  230/    C371 :                                             ;upper:
(1)  230/    C371 :                                             ;       ASL
(1)  230/    C371 :                                             ;       TAX
(1)  230/    C371 :                                             ;       BCS upper_upper
(1)  230/    C371 :                                             ;       lower_upper:
(1)  230/    C371 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  230/    C371 :                                             ;       upper_upper:
(1)  230/    C371 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  230/    C371 :                                             ;After jump:
(1)  230/    C371 :                                             ;TYA                                                    ;2
(1)  230/    C371 :                                             ;TAX                                                    ;2
(1)  230/    C371 :                                             
(1)  230/    C371 :                                             ;Method 4 - 28 cycles
(1)  230/    C371 :                                             ;LDA (emu_PC,X)                 ;6
(1)  230/    C371 :                                             ;TAY                                    ;2
(1)  230/    C371 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  230/    C371 :                                             ;PHA                                    ;3
(1)  230/    C371 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  230/    C371 :                                             ;PHA                                    ;3
(1)  230/    C371 :                                             ;RTS                                    ;6
(1)  230/    C371 :                                             
(1)  230/    C371 :                                             ;Method 5 - 30 cycles
(1)  230/    C371 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  230/    C373 : A8                                          TAY                                             ;2
(1)  230/    C374 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  230/    C377 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  230/    C379 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  230/    C37C : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  230/    C37E : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  230/    C381 :                                                                     
(1)  231/    C381 :                     
(1)  232/    C381 :                     	;0x2E - ROL ABS
(1)  233/    C381 :                     	ROL_ABS:
(1)  234/    C381 : (MACRO)             		OP_MACRO 46, "ROL", "ABS", "ROL_ABS"
(1)  234/    C381 :                                             ;TODO
(1)  235/    C381 : (MACRO)             		NEXT_MACRO
(1)  235/    C381 :                                             
(1)  235/    C381 :  (MACRO-2)                                  halt
(1)  235/    C381 : 00                                  BRK
(1)  235/    C382 : 00                                  BRK
(1)  235/    C383 :                                             
(1)  235/    C383 :                                             ;Method 1 - 60 cycles
(1)  235/    C383 :                                             ;Jump table must be page aligned!!!
(1)  235/    C383 :                                             ;LDA (emu_PC,X)                 ;6
(1)  235/    C383 :                                             ;ASL                                    ;2
(1)  235/    C383 :                                             ;STA emu_ptr,X                  ;4
(1)  235/    C383 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  235/    C383 :                                             ;ADC #0                                 ;2
(1)  235/    C383 :                                             ;STA emu_ptr+1,X                ;4
(1)  235/    C383 :                                             ;LDA (emu_ptr,X)                ;6
(1)  235/    C383 :                                             ;STA emu_ptr2,X                 ;4
(1)  235/    C383 :                                             ;INC emu_ptr,X                  ;6
(1)  235/    C383 :                                             ;BCC .skip                              ;2
(1)  235/    C383 :                                             ;       INC emu_ptr+1,X         ;6
(1)  235/    C383 :                                             ;.skip:
(1)  235/    C383 :                                             ;LDA (emu_ptr,X)                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 74 - 1/5/2022 11:50:53


(1)  235/    C383 :                                             ;STA emu_ptr2+1,X               ;4
(1)  235/    C383 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  235/    C383 :                                             
(1)  235/    C383 :                                             ;Method 2 - 46 cycles
(1)  235/    C383 :                                             ;Jump table must be page aligned!!!
(1)  235/    C383 :                                             ;LDA (emu_PC,X)                 ;6
(1)  235/    C383 :                                             ;STZ emu_ptr+1,X                ;4
(1)  235/    C383 :                                             ;ASL                                    ;2
(1)  235/    C383 :                                             ;ROL emu_ptr+1,X                ;6
(1)  235/    C383 :                                             ;ASL                                    ;2
(1)  235/    C383 :                                             ;ROL emu_ptr+1,X                ;6
(1)  235/    C383 :                                             ;STA emu_ptr,X                  ;4                              
(1)  235/    C383 :                                             ;LDA emu_ptr+1,X                ;4
(1)  235/    C383 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  235/    C383 :                                             ;STA emu_ptr+1,X                ;4
(1)  235/    C383 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  235/    C383 :                                             
(1)  235/    C383 :                                             ;Method 3 - 30 cycles
(1)  235/    C383 :                                             ;TXA                                                    ;2
(1)  235/    C383 :                                             ;TAY                                                    ;2
(1)  235/    C383 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  235/    C383 :                                             ;ASL                                                    ;2
(1)  235/    C383 :                                             ;BCS upper                                              ;2
(1)  235/    C383 :                                             ;lower:
(1)  235/    C383 :                                             ;       ASL                                                     ;2
(1)  235/    C383 :                                             ;       TAX                                                     ;2
(1)  235/    C383 :                                             ;       BCS upper_lower                         ;2
(1)  235/    C383 :                                             ;       lower_lower:
(1)  235/    C383 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  235/    C383 :                                             ;       upper_lower:
(1)  235/    C383 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  235/    C383 :                                             ;upper:
(1)  235/    C383 :                                             ;       ASL
(1)  235/    C383 :                                             ;       TAX
(1)  235/    C383 :                                             ;       BCS upper_upper
(1)  235/    C383 :                                             ;       lower_upper:
(1)  235/    C383 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  235/    C383 :                                             ;       upper_upper:
(1)  235/    C383 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  235/    C383 :                                             ;After jump:
(1)  235/    C383 :                                             ;TYA                                                    ;2
(1)  235/    C383 :                                             ;TAX                                                    ;2
(1)  235/    C383 :                                             
(1)  235/    C383 :                                             ;Method 4 - 28 cycles
(1)  235/    C383 :                                             ;LDA (emu_PC,X)                 ;6
(1)  235/    C383 :                                             ;TAY                                    ;2
(1)  235/    C383 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  235/    C383 :                                             ;PHA                                    ;3
(1)  235/    C383 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  235/    C383 :                                             ;PHA                                    ;3
(1)  235/    C383 :                                             ;RTS                                    ;6
(1)  235/    C383 :                                             
(1)  235/    C383 :                                             ;Method 5 - 30 cycles
(1)  235/    C383 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  235/    C385 : A8                                          TAY                                             ;2
(1)  235/    C386 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  235/    C389 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  235/    C38B : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  235/    C38E : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  235/    C390 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 75 - 1/5/2022 11:50:53


(1)  235/    C393 :                                                                     
(1)  236/    C393 :                     
(1)  237/    C393 :                     	;0x2F - NOP
(1)  238/    C393 :                     	NOP_0x2F:
(1)  239/    C393 : (MACRO)             		OP_MACRO 47, "NOP", "IMP", "NOP_0x2F"
(1)  239/    C393 :                                             ;TODO
(1)  240/    C393 : (MACRO)             		NEXT_MACRO
(1)  240/    C393 :                                             
(1)  240/    C393 :  (MACRO-2)                                  halt
(1)  240/    C393 : 00                                  BRK
(1)  240/    C394 : 00                                  BRK
(1)  240/    C395 :                                             
(1)  240/    C395 :                                             ;Method 1 - 60 cycles
(1)  240/    C395 :                                             ;Jump table must be page aligned!!!
(1)  240/    C395 :                                             ;LDA (emu_PC,X)                 ;6
(1)  240/    C395 :                                             ;ASL                                    ;2
(1)  240/    C395 :                                             ;STA emu_ptr,X                  ;4
(1)  240/    C395 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  240/    C395 :                                             ;ADC #0                                 ;2
(1)  240/    C395 :                                             ;STA emu_ptr+1,X                ;4
(1)  240/    C395 :                                             ;LDA (emu_ptr,X)                ;6
(1)  240/    C395 :                                             ;STA emu_ptr2,X                 ;4
(1)  240/    C395 :                                             ;INC emu_ptr,X                  ;6
(1)  240/    C395 :                                             ;BCC .skip                              ;2
(1)  240/    C395 :                                             ;       INC emu_ptr+1,X         ;6
(1)  240/    C395 :                                             ;.skip:
(1)  240/    C395 :                                             ;LDA (emu_ptr,X)                ;6
(1)  240/    C395 :                                             ;STA emu_ptr2+1,X               ;4
(1)  240/    C395 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  240/    C395 :                                             
(1)  240/    C395 :                                             ;Method 2 - 46 cycles
(1)  240/    C395 :                                             ;Jump table must be page aligned!!!
(1)  240/    C395 :                                             ;LDA (emu_PC,X)                 ;6
(1)  240/    C395 :                                             ;STZ emu_ptr+1,X                ;4
(1)  240/    C395 :                                             ;ASL                                    ;2
(1)  240/    C395 :                                             ;ROL emu_ptr+1,X                ;6
(1)  240/    C395 :                                             ;ASL                                    ;2
(1)  240/    C395 :                                             ;ROL emu_ptr+1,X                ;6
(1)  240/    C395 :                                             ;STA emu_ptr,X                  ;4                              
(1)  240/    C395 :                                             ;LDA emu_ptr+1,X                ;4
(1)  240/    C395 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  240/    C395 :                                             ;STA emu_ptr+1,X                ;4
(1)  240/    C395 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  240/    C395 :                                             
(1)  240/    C395 :                                             ;Method 3 - 30 cycles
(1)  240/    C395 :                                             ;TXA                                                    ;2
(1)  240/    C395 :                                             ;TAY                                                    ;2
(1)  240/    C395 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  240/    C395 :                                             ;ASL                                                    ;2
(1)  240/    C395 :                                             ;BCS upper                                              ;2
(1)  240/    C395 :                                             ;lower:
(1)  240/    C395 :                                             ;       ASL                                                     ;2
(1)  240/    C395 :                                             ;       TAX                                                     ;2
(1)  240/    C395 :                                             ;       BCS upper_lower                         ;2
(1)  240/    C395 :                                             ;       lower_lower:
(1)  240/    C395 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  240/    C395 :                                             ;       upper_lower:
(1)  240/    C395 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  240/    C395 :                                             ;upper:
(1)  240/    C395 :                                             ;       ASL
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 76 - 1/5/2022 11:50:53


(1)  240/    C395 :                                             ;       TAX
(1)  240/    C395 :                                             ;       BCS upper_upper
(1)  240/    C395 :                                             ;       lower_upper:
(1)  240/    C395 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  240/    C395 :                                             ;       upper_upper:
(1)  240/    C395 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  240/    C395 :                                             ;After jump:
(1)  240/    C395 :                                             ;TYA                                                    ;2
(1)  240/    C395 :                                             ;TAX                                                    ;2
(1)  240/    C395 :                                             
(1)  240/    C395 :                                             ;Method 4 - 28 cycles
(1)  240/    C395 :                                             ;LDA (emu_PC,X)                 ;6
(1)  240/    C395 :                                             ;TAY                                    ;2
(1)  240/    C395 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  240/    C395 :                                             ;PHA                                    ;3
(1)  240/    C395 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  240/    C395 :                                             ;PHA                                    ;3
(1)  240/    C395 :                                             ;RTS                                    ;6
(1)  240/    C395 :                                             
(1)  240/    C395 :                                             ;Method 5 - 30 cycles
(1)  240/    C395 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  240/    C397 : A8                                          TAY                                             ;2
(1)  240/    C398 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  240/    C39B : 95 0A                                       STA emu_ptr,X                   ;4
(1)  240/    C39D : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  240/    C3A0 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  240/    C3A2 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  240/    C3A5 :                                                                     
(1)  241/    C3A5 :                     
(1)  242/    C3A5 :                     	;0x30 - BMI REL
(1)  243/    C3A5 :                     	BMI_REL:
(1)  244/    C3A5 : (MACRO)             		OP_MACRO 48, "BMI", "REL", "BMI_REL"
(1)  244/    C3A5 :                                             ;TODO
(1)  245/    C3A5 : (MACRO)             		NEXT_MACRO
(1)  245/    C3A5 :                                             
(1)  245/    C3A5 :  (MACRO-2)                                  halt
(1)  245/    C3A5 : 00                                  BRK
(1)  245/    C3A6 : 00                                  BRK
(1)  245/    C3A7 :                                             
(1)  245/    C3A7 :                                             ;Method 1 - 60 cycles
(1)  245/    C3A7 :                                             ;Jump table must be page aligned!!!
(1)  245/    C3A7 :                                             ;LDA (emu_PC,X)                 ;6
(1)  245/    C3A7 :                                             ;ASL                                    ;2
(1)  245/    C3A7 :                                             ;STA emu_ptr,X                  ;4
(1)  245/    C3A7 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  245/    C3A7 :                                             ;ADC #0                                 ;2
(1)  245/    C3A7 :                                             ;STA emu_ptr+1,X                ;4
(1)  245/    C3A7 :                                             ;LDA (emu_ptr,X)                ;6
(1)  245/    C3A7 :                                             ;STA emu_ptr2,X                 ;4
(1)  245/    C3A7 :                                             ;INC emu_ptr,X                  ;6
(1)  245/    C3A7 :                                             ;BCC .skip                              ;2
(1)  245/    C3A7 :                                             ;       INC emu_ptr+1,X         ;6
(1)  245/    C3A7 :                                             ;.skip:
(1)  245/    C3A7 :                                             ;LDA (emu_ptr,X)                ;6
(1)  245/    C3A7 :                                             ;STA emu_ptr2+1,X               ;4
(1)  245/    C3A7 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  245/    C3A7 :                                             
(1)  245/    C3A7 :                                             ;Method 2 - 46 cycles
(1)  245/    C3A7 :                                             ;Jump table must be page aligned!!!
(1)  245/    C3A7 :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 77 - 1/5/2022 11:50:53


(1)  245/    C3A7 :                                             ;STZ emu_ptr+1,X                ;4
(1)  245/    C3A7 :                                             ;ASL                                    ;2
(1)  245/    C3A7 :                                             ;ROL emu_ptr+1,X                ;6
(1)  245/    C3A7 :                                             ;ASL                                    ;2
(1)  245/    C3A7 :                                             ;ROL emu_ptr+1,X                ;6
(1)  245/    C3A7 :                                             ;STA emu_ptr,X                  ;4                              
(1)  245/    C3A7 :                                             ;LDA emu_ptr+1,X                ;4
(1)  245/    C3A7 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  245/    C3A7 :                                             ;STA emu_ptr+1,X                ;4
(1)  245/    C3A7 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  245/    C3A7 :                                             
(1)  245/    C3A7 :                                             ;Method 3 - 30 cycles
(1)  245/    C3A7 :                                             ;TXA                                                    ;2
(1)  245/    C3A7 :                                             ;TAY                                                    ;2
(1)  245/    C3A7 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  245/    C3A7 :                                             ;ASL                                                    ;2
(1)  245/    C3A7 :                                             ;BCS upper                                              ;2
(1)  245/    C3A7 :                                             ;lower:
(1)  245/    C3A7 :                                             ;       ASL                                                     ;2
(1)  245/    C3A7 :                                             ;       TAX                                                     ;2
(1)  245/    C3A7 :                                             ;       BCS upper_lower                         ;2
(1)  245/    C3A7 :                                             ;       lower_lower:
(1)  245/    C3A7 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  245/    C3A7 :                                             ;       upper_lower:
(1)  245/    C3A7 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  245/    C3A7 :                                             ;upper:
(1)  245/    C3A7 :                                             ;       ASL
(1)  245/    C3A7 :                                             ;       TAX
(1)  245/    C3A7 :                                             ;       BCS upper_upper
(1)  245/    C3A7 :                                             ;       lower_upper:
(1)  245/    C3A7 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  245/    C3A7 :                                             ;       upper_upper:
(1)  245/    C3A7 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  245/    C3A7 :                                             ;After jump:
(1)  245/    C3A7 :                                             ;TYA                                                    ;2
(1)  245/    C3A7 :                                             ;TAX                                                    ;2
(1)  245/    C3A7 :                                             
(1)  245/    C3A7 :                                             ;Method 4 - 28 cycles
(1)  245/    C3A7 :                                             ;LDA (emu_PC,X)                 ;6
(1)  245/    C3A7 :                                             ;TAY                                    ;2
(1)  245/    C3A7 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  245/    C3A7 :                                             ;PHA                                    ;3
(1)  245/    C3A7 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  245/    C3A7 :                                             ;PHA                                    ;3
(1)  245/    C3A7 :                                             ;RTS                                    ;6
(1)  245/    C3A7 :                                             
(1)  245/    C3A7 :                                             ;Method 5 - 30 cycles
(1)  245/    C3A7 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  245/    C3A9 : A8                                          TAY                                             ;2
(1)  245/    C3AA : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  245/    C3AD : 95 0A                                       STA emu_ptr,X                   ;4
(1)  245/    C3AF : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  245/    C3B2 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  245/    C3B4 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  245/    C3B7 :                                                                     
(1)  246/    C3B7 :                     
(1)  247/    C3B7 :                     	;0x31 - AND IY
(1)  248/    C3B7 :                     	AND_IY:
(1)  249/    C3B7 : (MACRO)             		OP_MACRO 49, "AND", "IY", "AND_IY"
(1)  249/    C3B7 :                                             ;TODO
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 78 - 1/5/2022 11:50:53


(1)  250/    C3B7 : (MACRO)             		NEXT_MACRO
(1)  250/    C3B7 :                                             
(1)  250/    C3B7 :  (MACRO-2)                                  halt
(1)  250/    C3B7 : 00                                  BRK
(1)  250/    C3B8 : 00                                  BRK
(1)  250/    C3B9 :                                             
(1)  250/    C3B9 :                                             ;Method 1 - 60 cycles
(1)  250/    C3B9 :                                             ;Jump table must be page aligned!!!
(1)  250/    C3B9 :                                             ;LDA (emu_PC,X)                 ;6
(1)  250/    C3B9 :                                             ;ASL                                    ;2
(1)  250/    C3B9 :                                             ;STA emu_ptr,X                  ;4
(1)  250/    C3B9 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  250/    C3B9 :                                             ;ADC #0                                 ;2
(1)  250/    C3B9 :                                             ;STA emu_ptr+1,X                ;4
(1)  250/    C3B9 :                                             ;LDA (emu_ptr,X)                ;6
(1)  250/    C3B9 :                                             ;STA emu_ptr2,X                 ;4
(1)  250/    C3B9 :                                             ;INC emu_ptr,X                  ;6
(1)  250/    C3B9 :                                             ;BCC .skip                              ;2
(1)  250/    C3B9 :                                             ;       INC emu_ptr+1,X         ;6
(1)  250/    C3B9 :                                             ;.skip:
(1)  250/    C3B9 :                                             ;LDA (emu_ptr,X)                ;6
(1)  250/    C3B9 :                                             ;STA emu_ptr2+1,X               ;4
(1)  250/    C3B9 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  250/    C3B9 :                                             
(1)  250/    C3B9 :                                             ;Method 2 - 46 cycles
(1)  250/    C3B9 :                                             ;Jump table must be page aligned!!!
(1)  250/    C3B9 :                                             ;LDA (emu_PC,X)                 ;6
(1)  250/    C3B9 :                                             ;STZ emu_ptr+1,X                ;4
(1)  250/    C3B9 :                                             ;ASL                                    ;2
(1)  250/    C3B9 :                                             ;ROL emu_ptr+1,X                ;6
(1)  250/    C3B9 :                                             ;ASL                                    ;2
(1)  250/    C3B9 :                                             ;ROL emu_ptr+1,X                ;6
(1)  250/    C3B9 :                                             ;STA emu_ptr,X                  ;4                              
(1)  250/    C3B9 :                                             ;LDA emu_ptr+1,X                ;4
(1)  250/    C3B9 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  250/    C3B9 :                                             ;STA emu_ptr+1,X                ;4
(1)  250/    C3B9 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  250/    C3B9 :                                             
(1)  250/    C3B9 :                                             ;Method 3 - 30 cycles
(1)  250/    C3B9 :                                             ;TXA                                                    ;2
(1)  250/    C3B9 :                                             ;TAY                                                    ;2
(1)  250/    C3B9 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  250/    C3B9 :                                             ;ASL                                                    ;2
(1)  250/    C3B9 :                                             ;BCS upper                                              ;2
(1)  250/    C3B9 :                                             ;lower:
(1)  250/    C3B9 :                                             ;       ASL                                                     ;2
(1)  250/    C3B9 :                                             ;       TAX                                                     ;2
(1)  250/    C3B9 :                                             ;       BCS upper_lower                         ;2
(1)  250/    C3B9 :                                             ;       lower_lower:
(1)  250/    C3B9 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  250/    C3B9 :                                             ;       upper_lower:
(1)  250/    C3B9 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  250/    C3B9 :                                             ;upper:
(1)  250/    C3B9 :                                             ;       ASL
(1)  250/    C3B9 :                                             ;       TAX
(1)  250/    C3B9 :                                             ;       BCS upper_upper
(1)  250/    C3B9 :                                             ;       lower_upper:
(1)  250/    C3B9 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  250/    C3B9 :                                             ;       upper_upper:
(1)  250/    C3B9 :                                             ;               JMP (JUMP_TABLE4,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 79 - 1/5/2022 11:50:53


(1)  250/    C3B9 :                                             ;After jump:
(1)  250/    C3B9 :                                             ;TYA                                                    ;2
(1)  250/    C3B9 :                                             ;TAX                                                    ;2
(1)  250/    C3B9 :                                             
(1)  250/    C3B9 :                                             ;Method 4 - 28 cycles
(1)  250/    C3B9 :                                             ;LDA (emu_PC,X)                 ;6
(1)  250/    C3B9 :                                             ;TAY                                    ;2
(1)  250/    C3B9 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  250/    C3B9 :                                             ;PHA                                    ;3
(1)  250/    C3B9 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  250/    C3B9 :                                             ;PHA                                    ;3
(1)  250/    C3B9 :                                             ;RTS                                    ;6
(1)  250/    C3B9 :                                             
(1)  250/    C3B9 :                                             ;Method 5 - 30 cycles
(1)  250/    C3B9 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  250/    C3BB : A8                                          TAY                                             ;2
(1)  250/    C3BC : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  250/    C3BF : 95 0A                                       STA emu_ptr,X                   ;4
(1)  250/    C3C1 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  250/    C3C4 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  250/    C3C6 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  250/    C3C9 :                                                                     
(1)  251/    C3C9 :                     
(1)  252/    C3C9 :                     	;0x32 - NOP
(1)  253/    C3C9 :                     	NOP_0x32:
(1)  254/    C3C9 : (MACRO)             		OP_MACRO 50, "NOP", "IMP", "NOP_0x32"
(1)  254/    C3C9 :                                             ;TODO
(1)  255/    C3C9 : (MACRO)             		NEXT_MACRO
(1)  255/    C3C9 :                                             
(1)  255/    C3C9 :  (MACRO-2)                                  halt
(1)  255/    C3C9 : 00                                  BRK
(1)  255/    C3CA : 00                                  BRK
(1)  255/    C3CB :                                             
(1)  255/    C3CB :                                             ;Method 1 - 60 cycles
(1)  255/    C3CB :                                             ;Jump table must be page aligned!!!
(1)  255/    C3CB :                                             ;LDA (emu_PC,X)                 ;6
(1)  255/    C3CB :                                             ;ASL                                    ;2
(1)  255/    C3CB :                                             ;STA emu_ptr,X                  ;4
(1)  255/    C3CB :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  255/    C3CB :                                             ;ADC #0                                 ;2
(1)  255/    C3CB :                                             ;STA emu_ptr+1,X                ;4
(1)  255/    C3CB :                                             ;LDA (emu_ptr,X)                ;6
(1)  255/    C3CB :                                             ;STA emu_ptr2,X                 ;4
(1)  255/    C3CB :                                             ;INC emu_ptr,X                  ;6
(1)  255/    C3CB :                                             ;BCC .skip                              ;2
(1)  255/    C3CB :                                             ;       INC emu_ptr+1,X         ;6
(1)  255/    C3CB :                                             ;.skip:
(1)  255/    C3CB :                                             ;LDA (emu_ptr,X)                ;6
(1)  255/    C3CB :                                             ;STA emu_ptr2+1,X               ;4
(1)  255/    C3CB :                                             ;JMP (emu_ptr2,X)               ;6
(1)  255/    C3CB :                                             
(1)  255/    C3CB :                                             ;Method 2 - 46 cycles
(1)  255/    C3CB :                                             ;Jump table must be page aligned!!!
(1)  255/    C3CB :                                             ;LDA (emu_PC,X)                 ;6
(1)  255/    C3CB :                                             ;STZ emu_ptr+1,X                ;4
(1)  255/    C3CB :                                             ;ASL                                    ;2
(1)  255/    C3CB :                                             ;ROL emu_ptr+1,X                ;6
(1)  255/    C3CB :                                             ;ASL                                    ;2
(1)  255/    C3CB :                                             ;ROL emu_ptr+1,X                ;6
(1)  255/    C3CB :                                             ;STA emu_ptr,X                  ;4                              
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 80 - 1/5/2022 11:50:53


(1)  255/    C3CB :                                             ;LDA emu_ptr+1,X                ;4
(1)  255/    C3CB :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  255/    C3CB :                                             ;STA emu_ptr+1,X                ;4
(1)  255/    C3CB :                                             ;JMP (emu_ptr2,X)               ;6
(1)  255/    C3CB :                                             
(1)  255/    C3CB :                                             ;Method 3 - 30 cycles
(1)  255/    C3CB :                                             ;TXA                                                    ;2
(1)  255/    C3CB :                                             ;TAY                                                    ;2
(1)  255/    C3CB :                                             ;LDA (emu_PC,X)                                 ;6
(1)  255/    C3CB :                                             ;ASL                                                    ;2
(1)  255/    C3CB :                                             ;BCS upper                                              ;2
(1)  255/    C3CB :                                             ;lower:
(1)  255/    C3CB :                                             ;       ASL                                                     ;2
(1)  255/    C3CB :                                             ;       TAX                                                     ;2
(1)  255/    C3CB :                                             ;       BCS upper_lower                         ;2
(1)  255/    C3CB :                                             ;       lower_lower:
(1)  255/    C3CB :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  255/    C3CB :                                             ;       upper_lower:
(1)  255/    C3CB :                                             ;               JMP (JUMP_TABLE2,X)
(1)  255/    C3CB :                                             ;upper:
(1)  255/    C3CB :                                             ;       ASL
(1)  255/    C3CB :                                             ;       TAX
(1)  255/    C3CB :                                             ;       BCS upper_upper
(1)  255/    C3CB :                                             ;       lower_upper:
(1)  255/    C3CB :                                             ;               JMP (JUMP_TABLE3,X)
(1)  255/    C3CB :                                             ;       upper_upper:
(1)  255/    C3CB :                                             ;               JMP (JUMP_TABLE4,X)
(1)  255/    C3CB :                                             ;After jump:
(1)  255/    C3CB :                                             ;TYA                                                    ;2
(1)  255/    C3CB :                                             ;TAX                                                    ;2
(1)  255/    C3CB :                                             
(1)  255/    C3CB :                                             ;Method 4 - 28 cycles
(1)  255/    C3CB :                                             ;LDA (emu_PC,X)                 ;6
(1)  255/    C3CB :                                             ;TAY                                    ;2
(1)  255/    C3CB :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  255/    C3CB :                                             ;PHA                                    ;3
(1)  255/    C3CB :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  255/    C3CB :                                             ;PHA                                    ;3
(1)  255/    C3CB :                                             ;RTS                                    ;6
(1)  255/    C3CB :                                             
(1)  255/    C3CB :                                             ;Method 5 - 30 cycles
(1)  255/    C3CB : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  255/    C3CD : A8                                          TAY                                             ;2
(1)  255/    C3CE : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  255/    C3D1 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  255/    C3D3 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  255/    C3D6 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  255/    C3D8 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  255/    C3DB :                                                                     
(1)  256/    C3DB :                     
(1)  257/    C3DB :                     	;0x33 - NOP
(1)  258/    C3DB :                     	NOP_0x33:
(1)  259/    C3DB : (MACRO)             		OP_MACRO 51, "NOP", "IMP", "NOP_0x33"
(1)  259/    C3DB :                                             ;TODO
(1)  260/    C3DB : (MACRO)             		NEXT_MACRO
(1)  260/    C3DB :                                             
(1)  260/    C3DB :  (MACRO-2)                                  halt
(1)  260/    C3DB : 00                                  BRK
(1)  260/    C3DC : 00                                  BRK
(1)  260/    C3DD :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 81 - 1/5/2022 11:50:53


(1)  260/    C3DD :                                             ;Method 1 - 60 cycles
(1)  260/    C3DD :                                             ;Jump table must be page aligned!!!
(1)  260/    C3DD :                                             ;LDA (emu_PC,X)                 ;6
(1)  260/    C3DD :                                             ;ASL                                    ;2
(1)  260/    C3DD :                                             ;STA emu_ptr,X                  ;4
(1)  260/    C3DD :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  260/    C3DD :                                             ;ADC #0                                 ;2
(1)  260/    C3DD :                                             ;STA emu_ptr+1,X                ;4
(1)  260/    C3DD :                                             ;LDA (emu_ptr,X)                ;6
(1)  260/    C3DD :                                             ;STA emu_ptr2,X                 ;4
(1)  260/    C3DD :                                             ;INC emu_ptr,X                  ;6
(1)  260/    C3DD :                                             ;BCC .skip                              ;2
(1)  260/    C3DD :                                             ;       INC emu_ptr+1,X         ;6
(1)  260/    C3DD :                                             ;.skip:
(1)  260/    C3DD :                                             ;LDA (emu_ptr,X)                ;6
(1)  260/    C3DD :                                             ;STA emu_ptr2+1,X               ;4
(1)  260/    C3DD :                                             ;JMP (emu_ptr2,X)               ;6
(1)  260/    C3DD :                                             
(1)  260/    C3DD :                                             ;Method 2 - 46 cycles
(1)  260/    C3DD :                                             ;Jump table must be page aligned!!!
(1)  260/    C3DD :                                             ;LDA (emu_PC,X)                 ;6
(1)  260/    C3DD :                                             ;STZ emu_ptr+1,X                ;4
(1)  260/    C3DD :                                             ;ASL                                    ;2
(1)  260/    C3DD :                                             ;ROL emu_ptr+1,X                ;6
(1)  260/    C3DD :                                             ;ASL                                    ;2
(1)  260/    C3DD :                                             ;ROL emu_ptr+1,X                ;6
(1)  260/    C3DD :                                             ;STA emu_ptr,X                  ;4                              
(1)  260/    C3DD :                                             ;LDA emu_ptr+1,X                ;4
(1)  260/    C3DD :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  260/    C3DD :                                             ;STA emu_ptr+1,X                ;4
(1)  260/    C3DD :                                             ;JMP (emu_ptr2,X)               ;6
(1)  260/    C3DD :                                             
(1)  260/    C3DD :                                             ;Method 3 - 30 cycles
(1)  260/    C3DD :                                             ;TXA                                                    ;2
(1)  260/    C3DD :                                             ;TAY                                                    ;2
(1)  260/    C3DD :                                             ;LDA (emu_PC,X)                                 ;6
(1)  260/    C3DD :                                             ;ASL                                                    ;2
(1)  260/    C3DD :                                             ;BCS upper                                              ;2
(1)  260/    C3DD :                                             ;lower:
(1)  260/    C3DD :                                             ;       ASL                                                     ;2
(1)  260/    C3DD :                                             ;       TAX                                                     ;2
(1)  260/    C3DD :                                             ;       BCS upper_lower                         ;2
(1)  260/    C3DD :                                             ;       lower_lower:
(1)  260/    C3DD :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  260/    C3DD :                                             ;       upper_lower:
(1)  260/    C3DD :                                             ;               JMP (JUMP_TABLE2,X)
(1)  260/    C3DD :                                             ;upper:
(1)  260/    C3DD :                                             ;       ASL
(1)  260/    C3DD :                                             ;       TAX
(1)  260/    C3DD :                                             ;       BCS upper_upper
(1)  260/    C3DD :                                             ;       lower_upper:
(1)  260/    C3DD :                                             ;               JMP (JUMP_TABLE3,X)
(1)  260/    C3DD :                                             ;       upper_upper:
(1)  260/    C3DD :                                             ;               JMP (JUMP_TABLE4,X)
(1)  260/    C3DD :                                             ;After jump:
(1)  260/    C3DD :                                             ;TYA                                                    ;2
(1)  260/    C3DD :                                             ;TAX                                                    ;2
(1)  260/    C3DD :                                             
(1)  260/    C3DD :                                             ;Method 4 - 28 cycles
(1)  260/    C3DD :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 82 - 1/5/2022 11:50:53


(1)  260/    C3DD :                                             ;TAY                                    ;2
(1)  260/    C3DD :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  260/    C3DD :                                             ;PHA                                    ;3
(1)  260/    C3DD :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  260/    C3DD :                                             ;PHA                                    ;3
(1)  260/    C3DD :                                             ;RTS                                    ;6
(1)  260/    C3DD :                                             
(1)  260/    C3DD :                                             ;Method 5 - 30 cycles
(1)  260/    C3DD : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  260/    C3DF : A8                                          TAY                                             ;2
(1)  260/    C3E0 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  260/    C3E3 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  260/    C3E5 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  260/    C3E8 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  260/    C3EA : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  260/    C3ED :                                                                     
(1)  261/    C3ED :                     
(1)  262/    C3ED :                     	;0x34 - NOP
(1)  263/    C3ED :                     	NOP_0x34:
(1)  264/    C3ED : (MACRO)             		OP_MACRO 52, "NOP", "IMP", "NOP_0x34"
(1)  264/    C3ED :                                             ;TODO
(1)  265/    C3ED : (MACRO)             		NEXT_MACRO
(1)  265/    C3ED :                                             
(1)  265/    C3ED :  (MACRO-2)                                  halt
(1)  265/    C3ED : 00                                  BRK
(1)  265/    C3EE : 00                                  BRK
(1)  265/    C3EF :                                             
(1)  265/    C3EF :                                             ;Method 1 - 60 cycles
(1)  265/    C3EF :                                             ;Jump table must be page aligned!!!
(1)  265/    C3EF :                                             ;LDA (emu_PC,X)                 ;6
(1)  265/    C3EF :                                             ;ASL                                    ;2
(1)  265/    C3EF :                                             ;STA emu_ptr,X                  ;4
(1)  265/    C3EF :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  265/    C3EF :                                             ;ADC #0                                 ;2
(1)  265/    C3EF :                                             ;STA emu_ptr+1,X                ;4
(1)  265/    C3EF :                                             ;LDA (emu_ptr,X)                ;6
(1)  265/    C3EF :                                             ;STA emu_ptr2,X                 ;4
(1)  265/    C3EF :                                             ;INC emu_ptr,X                  ;6
(1)  265/    C3EF :                                             ;BCC .skip                              ;2
(1)  265/    C3EF :                                             ;       INC emu_ptr+1,X         ;6
(1)  265/    C3EF :                                             ;.skip:
(1)  265/    C3EF :                                             ;LDA (emu_ptr,X)                ;6
(1)  265/    C3EF :                                             ;STA emu_ptr2+1,X               ;4
(1)  265/    C3EF :                                             ;JMP (emu_ptr2,X)               ;6
(1)  265/    C3EF :                                             
(1)  265/    C3EF :                                             ;Method 2 - 46 cycles
(1)  265/    C3EF :                                             ;Jump table must be page aligned!!!
(1)  265/    C3EF :                                             ;LDA (emu_PC,X)                 ;6
(1)  265/    C3EF :                                             ;STZ emu_ptr+1,X                ;4
(1)  265/    C3EF :                                             ;ASL                                    ;2
(1)  265/    C3EF :                                             ;ROL emu_ptr+1,X                ;6
(1)  265/    C3EF :                                             ;ASL                                    ;2
(1)  265/    C3EF :                                             ;ROL emu_ptr+1,X                ;6
(1)  265/    C3EF :                                             ;STA emu_ptr,X                  ;4                              
(1)  265/    C3EF :                                             ;LDA emu_ptr+1,X                ;4
(1)  265/    C3EF :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  265/    C3EF :                                             ;STA emu_ptr+1,X                ;4
(1)  265/    C3EF :                                             ;JMP (emu_ptr2,X)               ;6
(1)  265/    C3EF :                                             
(1)  265/    C3EF :                                             ;Method 3 - 30 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 83 - 1/5/2022 11:50:53


(1)  265/    C3EF :                                             ;TXA                                                    ;2
(1)  265/    C3EF :                                             ;TAY                                                    ;2
(1)  265/    C3EF :                                             ;LDA (emu_PC,X)                                 ;6
(1)  265/    C3EF :                                             ;ASL                                                    ;2
(1)  265/    C3EF :                                             ;BCS upper                                              ;2
(1)  265/    C3EF :                                             ;lower:
(1)  265/    C3EF :                                             ;       ASL                                                     ;2
(1)  265/    C3EF :                                             ;       TAX                                                     ;2
(1)  265/    C3EF :                                             ;       BCS upper_lower                         ;2
(1)  265/    C3EF :                                             ;       lower_lower:
(1)  265/    C3EF :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  265/    C3EF :                                             ;       upper_lower:
(1)  265/    C3EF :                                             ;               JMP (JUMP_TABLE2,X)
(1)  265/    C3EF :                                             ;upper:
(1)  265/    C3EF :                                             ;       ASL
(1)  265/    C3EF :                                             ;       TAX
(1)  265/    C3EF :                                             ;       BCS upper_upper
(1)  265/    C3EF :                                             ;       lower_upper:
(1)  265/    C3EF :                                             ;               JMP (JUMP_TABLE3,X)
(1)  265/    C3EF :                                             ;       upper_upper:
(1)  265/    C3EF :                                             ;               JMP (JUMP_TABLE4,X)
(1)  265/    C3EF :                                             ;After jump:
(1)  265/    C3EF :                                             ;TYA                                                    ;2
(1)  265/    C3EF :                                             ;TAX                                                    ;2
(1)  265/    C3EF :                                             
(1)  265/    C3EF :                                             ;Method 4 - 28 cycles
(1)  265/    C3EF :                                             ;LDA (emu_PC,X)                 ;6
(1)  265/    C3EF :                                             ;TAY                                    ;2
(1)  265/    C3EF :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  265/    C3EF :                                             ;PHA                                    ;3
(1)  265/    C3EF :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  265/    C3EF :                                             ;PHA                                    ;3
(1)  265/    C3EF :                                             ;RTS                                    ;6
(1)  265/    C3EF :                                             
(1)  265/    C3EF :                                             ;Method 5 - 30 cycles
(1)  265/    C3EF : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  265/    C3F1 : A8                                          TAY                                             ;2
(1)  265/    C3F2 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  265/    C3F5 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  265/    C3F7 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  265/    C3FA : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  265/    C3FC : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  265/    C3FF :                                                                     
(1)  266/    C3FF :                     
(1)  267/    C3FF :                     	;0x35 - AND ZPX
(1)  268/    C3FF :                     	AND_ZPX:
(1)  269/    C3FF : (MACRO)             		OP_MACRO 53, "AND", "ZPX", "AND_ZPX"
(1)  269/    C3FF :                                             ;TODO
(1)  270/    C3FF : (MACRO)             		NEXT_MACRO
(1)  270/    C3FF :                                             
(1)  270/    C3FF :  (MACRO-2)                                  halt
(1)  270/    C3FF : 00                                  BRK
(1)  270/    C400 : 00                                  BRK
(1)  270/    C401 :                                             
(1)  270/    C401 :                                             ;Method 1 - 60 cycles
(1)  270/    C401 :                                             ;Jump table must be page aligned!!!
(1)  270/    C401 :                                             ;LDA (emu_PC,X)                 ;6
(1)  270/    C401 :                                             ;ASL                                    ;2
(1)  270/    C401 :                                             ;STA emu_ptr,X                  ;4
(1)  270/    C401 :                                             ;LDA #hi(JUMP_TABLE)    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 84 - 1/5/2022 11:50:53


(1)  270/    C401 :                                             ;ADC #0                                 ;2
(1)  270/    C401 :                                             ;STA emu_ptr+1,X                ;4
(1)  270/    C401 :                                             ;LDA (emu_ptr,X)                ;6
(1)  270/    C401 :                                             ;STA emu_ptr2,X                 ;4
(1)  270/    C401 :                                             ;INC emu_ptr,X                  ;6
(1)  270/    C401 :                                             ;BCC .skip                              ;2
(1)  270/    C401 :                                             ;       INC emu_ptr+1,X         ;6
(1)  270/    C401 :                                             ;.skip:
(1)  270/    C401 :                                             ;LDA (emu_ptr,X)                ;6
(1)  270/    C401 :                                             ;STA emu_ptr2+1,X               ;4
(1)  270/    C401 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  270/    C401 :                                             
(1)  270/    C401 :                                             ;Method 2 - 46 cycles
(1)  270/    C401 :                                             ;Jump table must be page aligned!!!
(1)  270/    C401 :                                             ;LDA (emu_PC,X)                 ;6
(1)  270/    C401 :                                             ;STZ emu_ptr+1,X                ;4
(1)  270/    C401 :                                             ;ASL                                    ;2
(1)  270/    C401 :                                             ;ROL emu_ptr+1,X                ;6
(1)  270/    C401 :                                             ;ASL                                    ;2
(1)  270/    C401 :                                             ;ROL emu_ptr+1,X                ;6
(1)  270/    C401 :                                             ;STA emu_ptr,X                  ;4                              
(1)  270/    C401 :                                             ;LDA emu_ptr+1,X                ;4
(1)  270/    C401 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  270/    C401 :                                             ;STA emu_ptr+1,X                ;4
(1)  270/    C401 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  270/    C401 :                                             
(1)  270/    C401 :                                             ;Method 3 - 30 cycles
(1)  270/    C401 :                                             ;TXA                                                    ;2
(1)  270/    C401 :                                             ;TAY                                                    ;2
(1)  270/    C401 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  270/    C401 :                                             ;ASL                                                    ;2
(1)  270/    C401 :                                             ;BCS upper                                              ;2
(1)  270/    C401 :                                             ;lower:
(1)  270/    C401 :                                             ;       ASL                                                     ;2
(1)  270/    C401 :                                             ;       TAX                                                     ;2
(1)  270/    C401 :                                             ;       BCS upper_lower                         ;2
(1)  270/    C401 :                                             ;       lower_lower:
(1)  270/    C401 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  270/    C401 :                                             ;       upper_lower:
(1)  270/    C401 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  270/    C401 :                                             ;upper:
(1)  270/    C401 :                                             ;       ASL
(1)  270/    C401 :                                             ;       TAX
(1)  270/    C401 :                                             ;       BCS upper_upper
(1)  270/    C401 :                                             ;       lower_upper:
(1)  270/    C401 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  270/    C401 :                                             ;       upper_upper:
(1)  270/    C401 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  270/    C401 :                                             ;After jump:
(1)  270/    C401 :                                             ;TYA                                                    ;2
(1)  270/    C401 :                                             ;TAX                                                    ;2
(1)  270/    C401 :                                             
(1)  270/    C401 :                                             ;Method 4 - 28 cycles
(1)  270/    C401 :                                             ;LDA (emu_PC,X)                 ;6
(1)  270/    C401 :                                             ;TAY                                    ;2
(1)  270/    C401 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  270/    C401 :                                             ;PHA                                    ;3
(1)  270/    C401 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  270/    C401 :                                             ;PHA                                    ;3
(1)  270/    C401 :                                             ;RTS                                    ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 85 - 1/5/2022 11:50:53


(1)  270/    C401 :                                             
(1)  270/    C401 :                                             ;Method 5 - 30 cycles
(1)  270/    C401 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  270/    C403 : A8                                          TAY                                             ;2
(1)  270/    C404 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  270/    C407 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  270/    C409 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  270/    C40C : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  270/    C40E : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  270/    C411 :                                                                     
(1)  271/    C411 :                     
(1)  272/    C411 :                     	;0x36 - ROL ZPX
(1)  273/    C411 :                     	ROL_ZPX:
(1)  274/    C411 : (MACRO)             		OP_MACRO 54, "ROL", "ZPX", "ROL_ZPX"
(1)  274/    C411 :                                             ;TODO
(1)  275/    C411 : (MACRO)             		NEXT_MACRO
(1)  275/    C411 :                                             
(1)  275/    C411 :  (MACRO-2)                                  halt
(1)  275/    C411 : 00                                  BRK
(1)  275/    C412 : 00                                  BRK
(1)  275/    C413 :                                             
(1)  275/    C413 :                                             ;Method 1 - 60 cycles
(1)  275/    C413 :                                             ;Jump table must be page aligned!!!
(1)  275/    C413 :                                             ;LDA (emu_PC,X)                 ;6
(1)  275/    C413 :                                             ;ASL                                    ;2
(1)  275/    C413 :                                             ;STA emu_ptr,X                  ;4
(1)  275/    C413 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  275/    C413 :                                             ;ADC #0                                 ;2
(1)  275/    C413 :                                             ;STA emu_ptr+1,X                ;4
(1)  275/    C413 :                                             ;LDA (emu_ptr,X)                ;6
(1)  275/    C413 :                                             ;STA emu_ptr2,X                 ;4
(1)  275/    C413 :                                             ;INC emu_ptr,X                  ;6
(1)  275/    C413 :                                             ;BCC .skip                              ;2
(1)  275/    C413 :                                             ;       INC emu_ptr+1,X         ;6
(1)  275/    C413 :                                             ;.skip:
(1)  275/    C413 :                                             ;LDA (emu_ptr,X)                ;6
(1)  275/    C413 :                                             ;STA emu_ptr2+1,X               ;4
(1)  275/    C413 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  275/    C413 :                                             
(1)  275/    C413 :                                             ;Method 2 - 46 cycles
(1)  275/    C413 :                                             ;Jump table must be page aligned!!!
(1)  275/    C413 :                                             ;LDA (emu_PC,X)                 ;6
(1)  275/    C413 :                                             ;STZ emu_ptr+1,X                ;4
(1)  275/    C413 :                                             ;ASL                                    ;2
(1)  275/    C413 :                                             ;ROL emu_ptr+1,X                ;6
(1)  275/    C413 :                                             ;ASL                                    ;2
(1)  275/    C413 :                                             ;ROL emu_ptr+1,X                ;6
(1)  275/    C413 :                                             ;STA emu_ptr,X                  ;4                              
(1)  275/    C413 :                                             ;LDA emu_ptr+1,X                ;4
(1)  275/    C413 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  275/    C413 :                                             ;STA emu_ptr+1,X                ;4
(1)  275/    C413 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  275/    C413 :                                             
(1)  275/    C413 :                                             ;Method 3 - 30 cycles
(1)  275/    C413 :                                             ;TXA                                                    ;2
(1)  275/    C413 :                                             ;TAY                                                    ;2
(1)  275/    C413 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  275/    C413 :                                             ;ASL                                                    ;2
(1)  275/    C413 :                                             ;BCS upper                                              ;2
(1)  275/    C413 :                                             ;lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 86 - 1/5/2022 11:50:53


(1)  275/    C413 :                                             ;       ASL                                                     ;2
(1)  275/    C413 :                                             ;       TAX                                                     ;2
(1)  275/    C413 :                                             ;       BCS upper_lower                         ;2
(1)  275/    C413 :                                             ;       lower_lower:
(1)  275/    C413 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  275/    C413 :                                             ;       upper_lower:
(1)  275/    C413 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  275/    C413 :                                             ;upper:
(1)  275/    C413 :                                             ;       ASL
(1)  275/    C413 :                                             ;       TAX
(1)  275/    C413 :                                             ;       BCS upper_upper
(1)  275/    C413 :                                             ;       lower_upper:
(1)  275/    C413 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  275/    C413 :                                             ;       upper_upper:
(1)  275/    C413 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  275/    C413 :                                             ;After jump:
(1)  275/    C413 :                                             ;TYA                                                    ;2
(1)  275/    C413 :                                             ;TAX                                                    ;2
(1)  275/    C413 :                                             
(1)  275/    C413 :                                             ;Method 4 - 28 cycles
(1)  275/    C413 :                                             ;LDA (emu_PC,X)                 ;6
(1)  275/    C413 :                                             ;TAY                                    ;2
(1)  275/    C413 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  275/    C413 :                                             ;PHA                                    ;3
(1)  275/    C413 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  275/    C413 :                                             ;PHA                                    ;3
(1)  275/    C413 :                                             ;RTS                                    ;6
(1)  275/    C413 :                                             
(1)  275/    C413 :                                             ;Method 5 - 30 cycles
(1)  275/    C413 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  275/    C415 : A8                                          TAY                                             ;2
(1)  275/    C416 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  275/    C419 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  275/    C41B : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  275/    C41E : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  275/    C420 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  275/    C423 :                                                                     
(1)  276/    C423 :                     
(1)  277/    C423 :                     	;0x37 - NOP
(1)  278/    C423 :                     	NOP_0x37:
(1)  279/    C423 : (MACRO)             		OP_MACRO 55, "NOP", "IMP", "NOP_0x37"
(1)  279/    C423 :                                             ;TODO
(1)  280/    C423 : (MACRO)             		NEXT_MACRO
(1)  280/    C423 :                                             
(1)  280/    C423 :  (MACRO-2)                                  halt
(1)  280/    C423 : 00                                  BRK
(1)  280/    C424 : 00                                  BRK
(1)  280/    C425 :                                             
(1)  280/    C425 :                                             ;Method 1 - 60 cycles
(1)  280/    C425 :                                             ;Jump table must be page aligned!!!
(1)  280/    C425 :                                             ;LDA (emu_PC,X)                 ;6
(1)  280/    C425 :                                             ;ASL                                    ;2
(1)  280/    C425 :                                             ;STA emu_ptr,X                  ;4
(1)  280/    C425 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  280/    C425 :                                             ;ADC #0                                 ;2
(1)  280/    C425 :                                             ;STA emu_ptr+1,X                ;4
(1)  280/    C425 :                                             ;LDA (emu_ptr,X)                ;6
(1)  280/    C425 :                                             ;STA emu_ptr2,X                 ;4
(1)  280/    C425 :                                             ;INC emu_ptr,X                  ;6
(1)  280/    C425 :                                             ;BCC .skip                              ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 87 - 1/5/2022 11:50:53


(1)  280/    C425 :                                             ;       INC emu_ptr+1,X         ;6
(1)  280/    C425 :                                             ;.skip:
(1)  280/    C425 :                                             ;LDA (emu_ptr,X)                ;6
(1)  280/    C425 :                                             ;STA emu_ptr2+1,X               ;4
(1)  280/    C425 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  280/    C425 :                                             
(1)  280/    C425 :                                             ;Method 2 - 46 cycles
(1)  280/    C425 :                                             ;Jump table must be page aligned!!!
(1)  280/    C425 :                                             ;LDA (emu_PC,X)                 ;6
(1)  280/    C425 :                                             ;STZ emu_ptr+1,X                ;4
(1)  280/    C425 :                                             ;ASL                                    ;2
(1)  280/    C425 :                                             ;ROL emu_ptr+1,X                ;6
(1)  280/    C425 :                                             ;ASL                                    ;2
(1)  280/    C425 :                                             ;ROL emu_ptr+1,X                ;6
(1)  280/    C425 :                                             ;STA emu_ptr,X                  ;4                              
(1)  280/    C425 :                                             ;LDA emu_ptr+1,X                ;4
(1)  280/    C425 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  280/    C425 :                                             ;STA emu_ptr+1,X                ;4
(1)  280/    C425 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  280/    C425 :                                             
(1)  280/    C425 :                                             ;Method 3 - 30 cycles
(1)  280/    C425 :                                             ;TXA                                                    ;2
(1)  280/    C425 :                                             ;TAY                                                    ;2
(1)  280/    C425 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  280/    C425 :                                             ;ASL                                                    ;2
(1)  280/    C425 :                                             ;BCS upper                                              ;2
(1)  280/    C425 :                                             ;lower:
(1)  280/    C425 :                                             ;       ASL                                                     ;2
(1)  280/    C425 :                                             ;       TAX                                                     ;2
(1)  280/    C425 :                                             ;       BCS upper_lower                         ;2
(1)  280/    C425 :                                             ;       lower_lower:
(1)  280/    C425 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  280/    C425 :                                             ;       upper_lower:
(1)  280/    C425 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  280/    C425 :                                             ;upper:
(1)  280/    C425 :                                             ;       ASL
(1)  280/    C425 :                                             ;       TAX
(1)  280/    C425 :                                             ;       BCS upper_upper
(1)  280/    C425 :                                             ;       lower_upper:
(1)  280/    C425 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  280/    C425 :                                             ;       upper_upper:
(1)  280/    C425 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  280/    C425 :                                             ;After jump:
(1)  280/    C425 :                                             ;TYA                                                    ;2
(1)  280/    C425 :                                             ;TAX                                                    ;2
(1)  280/    C425 :                                             
(1)  280/    C425 :                                             ;Method 4 - 28 cycles
(1)  280/    C425 :                                             ;LDA (emu_PC,X)                 ;6
(1)  280/    C425 :                                             ;TAY                                    ;2
(1)  280/    C425 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  280/    C425 :                                             ;PHA                                    ;3
(1)  280/    C425 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  280/    C425 :                                             ;PHA                                    ;3
(1)  280/    C425 :                                             ;RTS                                    ;6
(1)  280/    C425 :                                             
(1)  280/    C425 :                                             ;Method 5 - 30 cycles
(1)  280/    C425 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  280/    C427 : A8                                          TAY                                             ;2
(1)  280/    C428 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  280/    C42B : 95 0A                                       STA emu_ptr,X                   ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 88 - 1/5/2022 11:50:53


(1)  280/    C42D : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  280/    C430 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  280/    C432 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  280/    C435 :                                                                     
(1)  281/    C435 :                     
(1)  282/    C435 :                     	;0x38 - SEC IMP
(1)  283/    C435 :                     	SEC_IMP:
(1)  284/    C435 : (MACRO)             		OP_MACRO 56, "SEC", "IMP", "SEC_IMP"
(1)  284/    C435 :                                             ;TODO
(1)  285/    C435 : (MACRO)             		NEXT_MACRO
(1)  285/    C435 :                                             
(1)  285/    C435 :  (MACRO-2)                                  halt
(1)  285/    C435 : 00                                  BRK
(1)  285/    C436 : 00                                  BRK
(1)  285/    C437 :                                             
(1)  285/    C437 :                                             ;Method 1 - 60 cycles
(1)  285/    C437 :                                             ;Jump table must be page aligned!!!
(1)  285/    C437 :                                             ;LDA (emu_PC,X)                 ;6
(1)  285/    C437 :                                             ;ASL                                    ;2
(1)  285/    C437 :                                             ;STA emu_ptr,X                  ;4
(1)  285/    C437 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  285/    C437 :                                             ;ADC #0                                 ;2
(1)  285/    C437 :                                             ;STA emu_ptr+1,X                ;4
(1)  285/    C437 :                                             ;LDA (emu_ptr,X)                ;6
(1)  285/    C437 :                                             ;STA emu_ptr2,X                 ;4
(1)  285/    C437 :                                             ;INC emu_ptr,X                  ;6
(1)  285/    C437 :                                             ;BCC .skip                              ;2
(1)  285/    C437 :                                             ;       INC emu_ptr+1,X         ;6
(1)  285/    C437 :                                             ;.skip:
(1)  285/    C437 :                                             ;LDA (emu_ptr,X)                ;6
(1)  285/    C437 :                                             ;STA emu_ptr2+1,X               ;4
(1)  285/    C437 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  285/    C437 :                                             
(1)  285/    C437 :                                             ;Method 2 - 46 cycles
(1)  285/    C437 :                                             ;Jump table must be page aligned!!!
(1)  285/    C437 :                                             ;LDA (emu_PC,X)                 ;6
(1)  285/    C437 :                                             ;STZ emu_ptr+1,X                ;4
(1)  285/    C437 :                                             ;ASL                                    ;2
(1)  285/    C437 :                                             ;ROL emu_ptr+1,X                ;6
(1)  285/    C437 :                                             ;ASL                                    ;2
(1)  285/    C437 :                                             ;ROL emu_ptr+1,X                ;6
(1)  285/    C437 :                                             ;STA emu_ptr,X                  ;4                              
(1)  285/    C437 :                                             ;LDA emu_ptr+1,X                ;4
(1)  285/    C437 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  285/    C437 :                                             ;STA emu_ptr+1,X                ;4
(1)  285/    C437 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  285/    C437 :                                             
(1)  285/    C437 :                                             ;Method 3 - 30 cycles
(1)  285/    C437 :                                             ;TXA                                                    ;2
(1)  285/    C437 :                                             ;TAY                                                    ;2
(1)  285/    C437 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  285/    C437 :                                             ;ASL                                                    ;2
(1)  285/    C437 :                                             ;BCS upper                                              ;2
(1)  285/    C437 :                                             ;lower:
(1)  285/    C437 :                                             ;       ASL                                                     ;2
(1)  285/    C437 :                                             ;       TAX                                                     ;2
(1)  285/    C437 :                                             ;       BCS upper_lower                         ;2
(1)  285/    C437 :                                             ;       lower_lower:
(1)  285/    C437 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  285/    C437 :                                             ;       upper_lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 89 - 1/5/2022 11:50:53


(1)  285/    C437 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  285/    C437 :                                             ;upper:
(1)  285/    C437 :                                             ;       ASL
(1)  285/    C437 :                                             ;       TAX
(1)  285/    C437 :                                             ;       BCS upper_upper
(1)  285/    C437 :                                             ;       lower_upper:
(1)  285/    C437 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  285/    C437 :                                             ;       upper_upper:
(1)  285/    C437 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  285/    C437 :                                             ;After jump:
(1)  285/    C437 :                                             ;TYA                                                    ;2
(1)  285/    C437 :                                             ;TAX                                                    ;2
(1)  285/    C437 :                                             
(1)  285/    C437 :                                             ;Method 4 - 28 cycles
(1)  285/    C437 :                                             ;LDA (emu_PC,X)                 ;6
(1)  285/    C437 :                                             ;TAY                                    ;2
(1)  285/    C437 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  285/    C437 :                                             ;PHA                                    ;3
(1)  285/    C437 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  285/    C437 :                                             ;PHA                                    ;3
(1)  285/    C437 :                                             ;RTS                                    ;6
(1)  285/    C437 :                                             
(1)  285/    C437 :                                             ;Method 5 - 30 cycles
(1)  285/    C437 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  285/    C439 : A8                                          TAY                                             ;2
(1)  285/    C43A : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  285/    C43D : 95 0A                                       STA emu_ptr,X                   ;4
(1)  285/    C43F : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  285/    C442 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  285/    C444 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  285/    C447 :                                                                     
(1)  286/    C447 :                     
(1)  287/    C447 :                     	;0x39 - AND ABSY
(1)  288/    C447 :                     	AND_ABSY:
(1)  289/    C447 : (MACRO)             		OP_MACRO 57, "AND", "ABSY", "AND_ABSY"
(1)  289/    C447 :                                             ;TODO
(1)  290/    C447 : (MACRO)             		NEXT_MACRO
(1)  290/    C447 :                                             
(1)  290/    C447 :  (MACRO-2)                                  halt
(1)  290/    C447 : 00                                  BRK
(1)  290/    C448 : 00                                  BRK
(1)  290/    C449 :                                             
(1)  290/    C449 :                                             ;Method 1 - 60 cycles
(1)  290/    C449 :                                             ;Jump table must be page aligned!!!
(1)  290/    C449 :                                             ;LDA (emu_PC,X)                 ;6
(1)  290/    C449 :                                             ;ASL                                    ;2
(1)  290/    C449 :                                             ;STA emu_ptr,X                  ;4
(1)  290/    C449 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  290/    C449 :                                             ;ADC #0                                 ;2
(1)  290/    C449 :                                             ;STA emu_ptr+1,X                ;4
(1)  290/    C449 :                                             ;LDA (emu_ptr,X)                ;6
(1)  290/    C449 :                                             ;STA emu_ptr2,X                 ;4
(1)  290/    C449 :                                             ;INC emu_ptr,X                  ;6
(1)  290/    C449 :                                             ;BCC .skip                              ;2
(1)  290/    C449 :                                             ;       INC emu_ptr+1,X         ;6
(1)  290/    C449 :                                             ;.skip:
(1)  290/    C449 :                                             ;LDA (emu_ptr,X)                ;6
(1)  290/    C449 :                                             ;STA emu_ptr2+1,X               ;4
(1)  290/    C449 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  290/    C449 :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 90 - 1/5/2022 11:50:53


(1)  290/    C449 :                                             ;Method 2 - 46 cycles
(1)  290/    C449 :                                             ;Jump table must be page aligned!!!
(1)  290/    C449 :                                             ;LDA (emu_PC,X)                 ;6
(1)  290/    C449 :                                             ;STZ emu_ptr+1,X                ;4
(1)  290/    C449 :                                             ;ASL                                    ;2
(1)  290/    C449 :                                             ;ROL emu_ptr+1,X                ;6
(1)  290/    C449 :                                             ;ASL                                    ;2
(1)  290/    C449 :                                             ;ROL emu_ptr+1,X                ;6
(1)  290/    C449 :                                             ;STA emu_ptr,X                  ;4                              
(1)  290/    C449 :                                             ;LDA emu_ptr+1,X                ;4
(1)  290/    C449 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  290/    C449 :                                             ;STA emu_ptr+1,X                ;4
(1)  290/    C449 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  290/    C449 :                                             
(1)  290/    C449 :                                             ;Method 3 - 30 cycles
(1)  290/    C449 :                                             ;TXA                                                    ;2
(1)  290/    C449 :                                             ;TAY                                                    ;2
(1)  290/    C449 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  290/    C449 :                                             ;ASL                                                    ;2
(1)  290/    C449 :                                             ;BCS upper                                              ;2
(1)  290/    C449 :                                             ;lower:
(1)  290/    C449 :                                             ;       ASL                                                     ;2
(1)  290/    C449 :                                             ;       TAX                                                     ;2
(1)  290/    C449 :                                             ;       BCS upper_lower                         ;2
(1)  290/    C449 :                                             ;       lower_lower:
(1)  290/    C449 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  290/    C449 :                                             ;       upper_lower:
(1)  290/    C449 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  290/    C449 :                                             ;upper:
(1)  290/    C449 :                                             ;       ASL
(1)  290/    C449 :                                             ;       TAX
(1)  290/    C449 :                                             ;       BCS upper_upper
(1)  290/    C449 :                                             ;       lower_upper:
(1)  290/    C449 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  290/    C449 :                                             ;       upper_upper:
(1)  290/    C449 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  290/    C449 :                                             ;After jump:
(1)  290/    C449 :                                             ;TYA                                                    ;2
(1)  290/    C449 :                                             ;TAX                                                    ;2
(1)  290/    C449 :                                             
(1)  290/    C449 :                                             ;Method 4 - 28 cycles
(1)  290/    C449 :                                             ;LDA (emu_PC,X)                 ;6
(1)  290/    C449 :                                             ;TAY                                    ;2
(1)  290/    C449 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  290/    C449 :                                             ;PHA                                    ;3
(1)  290/    C449 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  290/    C449 :                                             ;PHA                                    ;3
(1)  290/    C449 :                                             ;RTS                                    ;6
(1)  290/    C449 :                                             
(1)  290/    C449 :                                             ;Method 5 - 30 cycles
(1)  290/    C449 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  290/    C44B : A8                                          TAY                                             ;2
(1)  290/    C44C : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  290/    C44F : 95 0A                                       STA emu_ptr,X                   ;4
(1)  290/    C451 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  290/    C454 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  290/    C456 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  290/    C459 :                                                                     
(1)  291/    C459 :                     
(1)  292/    C459 :                     	;0x3A - NOP
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 91 - 1/5/2022 11:50:53


(1)  293/    C459 :                     	NOP_0x3A:
(1)  294/    C459 : (MACRO)             		OP_MACRO 58, "NOP", "IMP", "NOP_0x3A"
(1)  294/    C459 :                                             ;TODO
(1)  295/    C459 : (MACRO)             		NEXT_MACRO
(1)  295/    C459 :                                             
(1)  295/    C459 :  (MACRO-2)                                  halt
(1)  295/    C459 : 00                                  BRK
(1)  295/    C45A : 00                                  BRK
(1)  295/    C45B :                                             
(1)  295/    C45B :                                             ;Method 1 - 60 cycles
(1)  295/    C45B :                                             ;Jump table must be page aligned!!!
(1)  295/    C45B :                                             ;LDA (emu_PC,X)                 ;6
(1)  295/    C45B :                                             ;ASL                                    ;2
(1)  295/    C45B :                                             ;STA emu_ptr,X                  ;4
(1)  295/    C45B :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  295/    C45B :                                             ;ADC #0                                 ;2
(1)  295/    C45B :                                             ;STA emu_ptr+1,X                ;4
(1)  295/    C45B :                                             ;LDA (emu_ptr,X)                ;6
(1)  295/    C45B :                                             ;STA emu_ptr2,X                 ;4
(1)  295/    C45B :                                             ;INC emu_ptr,X                  ;6
(1)  295/    C45B :                                             ;BCC .skip                              ;2
(1)  295/    C45B :                                             ;       INC emu_ptr+1,X         ;6
(1)  295/    C45B :                                             ;.skip:
(1)  295/    C45B :                                             ;LDA (emu_ptr,X)                ;6
(1)  295/    C45B :                                             ;STA emu_ptr2+1,X               ;4
(1)  295/    C45B :                                             ;JMP (emu_ptr2,X)               ;6
(1)  295/    C45B :                                             
(1)  295/    C45B :                                             ;Method 2 - 46 cycles
(1)  295/    C45B :                                             ;Jump table must be page aligned!!!
(1)  295/    C45B :                                             ;LDA (emu_PC,X)                 ;6
(1)  295/    C45B :                                             ;STZ emu_ptr+1,X                ;4
(1)  295/    C45B :                                             ;ASL                                    ;2
(1)  295/    C45B :                                             ;ROL emu_ptr+1,X                ;6
(1)  295/    C45B :                                             ;ASL                                    ;2
(1)  295/    C45B :                                             ;ROL emu_ptr+1,X                ;6
(1)  295/    C45B :                                             ;STA emu_ptr,X                  ;4                              
(1)  295/    C45B :                                             ;LDA emu_ptr+1,X                ;4
(1)  295/    C45B :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  295/    C45B :                                             ;STA emu_ptr+1,X                ;4
(1)  295/    C45B :                                             ;JMP (emu_ptr2,X)               ;6
(1)  295/    C45B :                                             
(1)  295/    C45B :                                             ;Method 3 - 30 cycles
(1)  295/    C45B :                                             ;TXA                                                    ;2
(1)  295/    C45B :                                             ;TAY                                                    ;2
(1)  295/    C45B :                                             ;LDA (emu_PC,X)                                 ;6
(1)  295/    C45B :                                             ;ASL                                                    ;2
(1)  295/    C45B :                                             ;BCS upper                                              ;2
(1)  295/    C45B :                                             ;lower:
(1)  295/    C45B :                                             ;       ASL                                                     ;2
(1)  295/    C45B :                                             ;       TAX                                                     ;2
(1)  295/    C45B :                                             ;       BCS upper_lower                         ;2
(1)  295/    C45B :                                             ;       lower_lower:
(1)  295/    C45B :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  295/    C45B :                                             ;       upper_lower:
(1)  295/    C45B :                                             ;               JMP (JUMP_TABLE2,X)
(1)  295/    C45B :                                             ;upper:
(1)  295/    C45B :                                             ;       ASL
(1)  295/    C45B :                                             ;       TAX
(1)  295/    C45B :                                             ;       BCS upper_upper
(1)  295/    C45B :                                             ;       lower_upper:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 92 - 1/5/2022 11:50:53


(1)  295/    C45B :                                             ;               JMP (JUMP_TABLE3,X)
(1)  295/    C45B :                                             ;       upper_upper:
(1)  295/    C45B :                                             ;               JMP (JUMP_TABLE4,X)
(1)  295/    C45B :                                             ;After jump:
(1)  295/    C45B :                                             ;TYA                                                    ;2
(1)  295/    C45B :                                             ;TAX                                                    ;2
(1)  295/    C45B :                                             
(1)  295/    C45B :                                             ;Method 4 - 28 cycles
(1)  295/    C45B :                                             ;LDA (emu_PC,X)                 ;6
(1)  295/    C45B :                                             ;TAY                                    ;2
(1)  295/    C45B :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  295/    C45B :                                             ;PHA                                    ;3
(1)  295/    C45B :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  295/    C45B :                                             ;PHA                                    ;3
(1)  295/    C45B :                                             ;RTS                                    ;6
(1)  295/    C45B :                                             
(1)  295/    C45B :                                             ;Method 5 - 30 cycles
(1)  295/    C45B : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  295/    C45D : A8                                          TAY                                             ;2
(1)  295/    C45E : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  295/    C461 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  295/    C463 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  295/    C466 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  295/    C468 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  295/    C46B :                                                                     
(1)  296/    C46B :                     
(1)  297/    C46B :                     	;0x3B - NOP
(1)  298/    C46B :                     	NOP_0x3B:
(1)  299/    C46B : (MACRO)             		OP_MACRO 59, "NOP", "IMP", "NOP_0x3B"
(1)  299/    C46B :                                             ;TODO
(1)  300/    C46B : (MACRO)             		NEXT_MACRO
(1)  300/    C46B :                                             
(1)  300/    C46B :  (MACRO-2)                                  halt
(1)  300/    C46B : 00                                  BRK
(1)  300/    C46C : 00                                  BRK
(1)  300/    C46D :                                             
(1)  300/    C46D :                                             ;Method 1 - 60 cycles
(1)  300/    C46D :                                             ;Jump table must be page aligned!!!
(1)  300/    C46D :                                             ;LDA (emu_PC,X)                 ;6
(1)  300/    C46D :                                             ;ASL                                    ;2
(1)  300/    C46D :                                             ;STA emu_ptr,X                  ;4
(1)  300/    C46D :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  300/    C46D :                                             ;ADC #0                                 ;2
(1)  300/    C46D :                                             ;STA emu_ptr+1,X                ;4
(1)  300/    C46D :                                             ;LDA (emu_ptr,X)                ;6
(1)  300/    C46D :                                             ;STA emu_ptr2,X                 ;4
(1)  300/    C46D :                                             ;INC emu_ptr,X                  ;6
(1)  300/    C46D :                                             ;BCC .skip                              ;2
(1)  300/    C46D :                                             ;       INC emu_ptr+1,X         ;6
(1)  300/    C46D :                                             ;.skip:
(1)  300/    C46D :                                             ;LDA (emu_ptr,X)                ;6
(1)  300/    C46D :                                             ;STA emu_ptr2+1,X               ;4
(1)  300/    C46D :                                             ;JMP (emu_ptr2,X)               ;6
(1)  300/    C46D :                                             
(1)  300/    C46D :                                             ;Method 2 - 46 cycles
(1)  300/    C46D :                                             ;Jump table must be page aligned!!!
(1)  300/    C46D :                                             ;LDA (emu_PC,X)                 ;6
(1)  300/    C46D :                                             ;STZ emu_ptr+1,X                ;4
(1)  300/    C46D :                                             ;ASL                                    ;2
(1)  300/    C46D :                                             ;ROL emu_ptr+1,X                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 93 - 1/5/2022 11:50:53


(1)  300/    C46D :                                             ;ASL                                    ;2
(1)  300/    C46D :                                             ;ROL emu_ptr+1,X                ;6
(1)  300/    C46D :                                             ;STA emu_ptr,X                  ;4                              
(1)  300/    C46D :                                             ;LDA emu_ptr+1,X                ;4
(1)  300/    C46D :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  300/    C46D :                                             ;STA emu_ptr+1,X                ;4
(1)  300/    C46D :                                             ;JMP (emu_ptr2,X)               ;6
(1)  300/    C46D :                                             
(1)  300/    C46D :                                             ;Method 3 - 30 cycles
(1)  300/    C46D :                                             ;TXA                                                    ;2
(1)  300/    C46D :                                             ;TAY                                                    ;2
(1)  300/    C46D :                                             ;LDA (emu_PC,X)                                 ;6
(1)  300/    C46D :                                             ;ASL                                                    ;2
(1)  300/    C46D :                                             ;BCS upper                                              ;2
(1)  300/    C46D :                                             ;lower:
(1)  300/    C46D :                                             ;       ASL                                                     ;2
(1)  300/    C46D :                                             ;       TAX                                                     ;2
(1)  300/    C46D :                                             ;       BCS upper_lower                         ;2
(1)  300/    C46D :                                             ;       lower_lower:
(1)  300/    C46D :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  300/    C46D :                                             ;       upper_lower:
(1)  300/    C46D :                                             ;               JMP (JUMP_TABLE2,X)
(1)  300/    C46D :                                             ;upper:
(1)  300/    C46D :                                             ;       ASL
(1)  300/    C46D :                                             ;       TAX
(1)  300/    C46D :                                             ;       BCS upper_upper
(1)  300/    C46D :                                             ;       lower_upper:
(1)  300/    C46D :                                             ;               JMP (JUMP_TABLE3,X)
(1)  300/    C46D :                                             ;       upper_upper:
(1)  300/    C46D :                                             ;               JMP (JUMP_TABLE4,X)
(1)  300/    C46D :                                             ;After jump:
(1)  300/    C46D :                                             ;TYA                                                    ;2
(1)  300/    C46D :                                             ;TAX                                                    ;2
(1)  300/    C46D :                                             
(1)  300/    C46D :                                             ;Method 4 - 28 cycles
(1)  300/    C46D :                                             ;LDA (emu_PC,X)                 ;6
(1)  300/    C46D :                                             ;TAY                                    ;2
(1)  300/    C46D :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  300/    C46D :                                             ;PHA                                    ;3
(1)  300/    C46D :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  300/    C46D :                                             ;PHA                                    ;3
(1)  300/    C46D :                                             ;RTS                                    ;6
(1)  300/    C46D :                                             
(1)  300/    C46D :                                             ;Method 5 - 30 cycles
(1)  300/    C46D : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  300/    C46F : A8                                          TAY                                             ;2
(1)  300/    C470 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  300/    C473 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  300/    C475 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  300/    C478 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  300/    C47A : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  300/    C47D :                                                                     
(1)  301/    C47D :                     
(1)  302/    C47D :                     	;0x3C - NOP
(1)  303/    C47D :                     	NOP_0x3C:
(1)  304/    C47D : (MACRO)             		OP_MACRO 60, "NOP", "IMP", "NOP_0x3C"
(1)  304/    C47D :                                             ;TODO
(1)  305/    C47D : (MACRO)             		NEXT_MACRO
(1)  305/    C47D :                                             
(1)  305/    C47D :  (MACRO-2)                                  halt
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 94 - 1/5/2022 11:50:53


(1)  305/    C47D : 00                                  BRK
(1)  305/    C47E : 00                                  BRK
(1)  305/    C47F :                                             
(1)  305/    C47F :                                             ;Method 1 - 60 cycles
(1)  305/    C47F :                                             ;Jump table must be page aligned!!!
(1)  305/    C47F :                                             ;LDA (emu_PC,X)                 ;6
(1)  305/    C47F :                                             ;ASL                                    ;2
(1)  305/    C47F :                                             ;STA emu_ptr,X                  ;4
(1)  305/    C47F :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  305/    C47F :                                             ;ADC #0                                 ;2
(1)  305/    C47F :                                             ;STA emu_ptr+1,X                ;4
(1)  305/    C47F :                                             ;LDA (emu_ptr,X)                ;6
(1)  305/    C47F :                                             ;STA emu_ptr2,X                 ;4
(1)  305/    C47F :                                             ;INC emu_ptr,X                  ;6
(1)  305/    C47F :                                             ;BCC .skip                              ;2
(1)  305/    C47F :                                             ;       INC emu_ptr+1,X         ;6
(1)  305/    C47F :                                             ;.skip:
(1)  305/    C47F :                                             ;LDA (emu_ptr,X)                ;6
(1)  305/    C47F :                                             ;STA emu_ptr2+1,X               ;4
(1)  305/    C47F :                                             ;JMP (emu_ptr2,X)               ;6
(1)  305/    C47F :                                             
(1)  305/    C47F :                                             ;Method 2 - 46 cycles
(1)  305/    C47F :                                             ;Jump table must be page aligned!!!
(1)  305/    C47F :                                             ;LDA (emu_PC,X)                 ;6
(1)  305/    C47F :                                             ;STZ emu_ptr+1,X                ;4
(1)  305/    C47F :                                             ;ASL                                    ;2
(1)  305/    C47F :                                             ;ROL emu_ptr+1,X                ;6
(1)  305/    C47F :                                             ;ASL                                    ;2
(1)  305/    C47F :                                             ;ROL emu_ptr+1,X                ;6
(1)  305/    C47F :                                             ;STA emu_ptr,X                  ;4                              
(1)  305/    C47F :                                             ;LDA emu_ptr+1,X                ;4
(1)  305/    C47F :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  305/    C47F :                                             ;STA emu_ptr+1,X                ;4
(1)  305/    C47F :                                             ;JMP (emu_ptr2,X)               ;6
(1)  305/    C47F :                                             
(1)  305/    C47F :                                             ;Method 3 - 30 cycles
(1)  305/    C47F :                                             ;TXA                                                    ;2
(1)  305/    C47F :                                             ;TAY                                                    ;2
(1)  305/    C47F :                                             ;LDA (emu_PC,X)                                 ;6
(1)  305/    C47F :                                             ;ASL                                                    ;2
(1)  305/    C47F :                                             ;BCS upper                                              ;2
(1)  305/    C47F :                                             ;lower:
(1)  305/    C47F :                                             ;       ASL                                                     ;2
(1)  305/    C47F :                                             ;       TAX                                                     ;2
(1)  305/    C47F :                                             ;       BCS upper_lower                         ;2
(1)  305/    C47F :                                             ;       lower_lower:
(1)  305/    C47F :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  305/    C47F :                                             ;       upper_lower:
(1)  305/    C47F :                                             ;               JMP (JUMP_TABLE2,X)
(1)  305/    C47F :                                             ;upper:
(1)  305/    C47F :                                             ;       ASL
(1)  305/    C47F :                                             ;       TAX
(1)  305/    C47F :                                             ;       BCS upper_upper
(1)  305/    C47F :                                             ;       lower_upper:
(1)  305/    C47F :                                             ;               JMP (JUMP_TABLE3,X)
(1)  305/    C47F :                                             ;       upper_upper:
(1)  305/    C47F :                                             ;               JMP (JUMP_TABLE4,X)
(1)  305/    C47F :                                             ;After jump:
(1)  305/    C47F :                                             ;TYA                                                    ;2
(1)  305/    C47F :                                             ;TAX                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 95 - 1/5/2022 11:50:53


(1)  305/    C47F :                                             
(1)  305/    C47F :                                             ;Method 4 - 28 cycles
(1)  305/    C47F :                                             ;LDA (emu_PC,X)                 ;6
(1)  305/    C47F :                                             ;TAY                                    ;2
(1)  305/    C47F :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  305/    C47F :                                             ;PHA                                    ;3
(1)  305/    C47F :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  305/    C47F :                                             ;PHA                                    ;3
(1)  305/    C47F :                                             ;RTS                                    ;6
(1)  305/    C47F :                                             
(1)  305/    C47F :                                             ;Method 5 - 30 cycles
(1)  305/    C47F : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  305/    C481 : A8                                          TAY                                             ;2
(1)  305/    C482 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  305/    C485 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  305/    C487 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  305/    C48A : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  305/    C48C : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  305/    C48F :                                                                     
(1)  306/    C48F :                     
(1)  307/    C48F :                     	;0x3D - AND ABSX
(1)  308/    C48F :                     	AND_ABSX:
(1)  309/    C48F : (MACRO)             		OP_MACRO 61, "AND", "ABSX", "AND_ABSX"
(1)  309/    C48F :                                             ;TODO
(1)  310/    C48F : (MACRO)             		NEXT_MACRO
(1)  310/    C48F :                                             
(1)  310/    C48F :  (MACRO-2)                                  halt
(1)  310/    C48F : 00                                  BRK
(1)  310/    C490 : 00                                  BRK
(1)  310/    C491 :                                             
(1)  310/    C491 :                                             ;Method 1 - 60 cycles
(1)  310/    C491 :                                             ;Jump table must be page aligned!!!
(1)  310/    C491 :                                             ;LDA (emu_PC,X)                 ;6
(1)  310/    C491 :                                             ;ASL                                    ;2
(1)  310/    C491 :                                             ;STA emu_ptr,X                  ;4
(1)  310/    C491 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  310/    C491 :                                             ;ADC #0                                 ;2
(1)  310/    C491 :                                             ;STA emu_ptr+1,X                ;4
(1)  310/    C491 :                                             ;LDA (emu_ptr,X)                ;6
(1)  310/    C491 :                                             ;STA emu_ptr2,X                 ;4
(1)  310/    C491 :                                             ;INC emu_ptr,X                  ;6
(1)  310/    C491 :                                             ;BCC .skip                              ;2
(1)  310/    C491 :                                             ;       INC emu_ptr+1,X         ;6
(1)  310/    C491 :                                             ;.skip:
(1)  310/    C491 :                                             ;LDA (emu_ptr,X)                ;6
(1)  310/    C491 :                                             ;STA emu_ptr2+1,X               ;4
(1)  310/    C491 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  310/    C491 :                                             
(1)  310/    C491 :                                             ;Method 2 - 46 cycles
(1)  310/    C491 :                                             ;Jump table must be page aligned!!!
(1)  310/    C491 :                                             ;LDA (emu_PC,X)                 ;6
(1)  310/    C491 :                                             ;STZ emu_ptr+1,X                ;4
(1)  310/    C491 :                                             ;ASL                                    ;2
(1)  310/    C491 :                                             ;ROL emu_ptr+1,X                ;6
(1)  310/    C491 :                                             ;ASL                                    ;2
(1)  310/    C491 :                                             ;ROL emu_ptr+1,X                ;6
(1)  310/    C491 :                                             ;STA emu_ptr,X                  ;4                              
(1)  310/    C491 :                                             ;LDA emu_ptr+1,X                ;4
(1)  310/    C491 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  310/    C491 :                                             ;STA emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 96 - 1/5/2022 11:50:53


(1)  310/    C491 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  310/    C491 :                                             
(1)  310/    C491 :                                             ;Method 3 - 30 cycles
(1)  310/    C491 :                                             ;TXA                                                    ;2
(1)  310/    C491 :                                             ;TAY                                                    ;2
(1)  310/    C491 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  310/    C491 :                                             ;ASL                                                    ;2
(1)  310/    C491 :                                             ;BCS upper                                              ;2
(1)  310/    C491 :                                             ;lower:
(1)  310/    C491 :                                             ;       ASL                                                     ;2
(1)  310/    C491 :                                             ;       TAX                                                     ;2
(1)  310/    C491 :                                             ;       BCS upper_lower                         ;2
(1)  310/    C491 :                                             ;       lower_lower:
(1)  310/    C491 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  310/    C491 :                                             ;       upper_lower:
(1)  310/    C491 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  310/    C491 :                                             ;upper:
(1)  310/    C491 :                                             ;       ASL
(1)  310/    C491 :                                             ;       TAX
(1)  310/    C491 :                                             ;       BCS upper_upper
(1)  310/    C491 :                                             ;       lower_upper:
(1)  310/    C491 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  310/    C491 :                                             ;       upper_upper:
(1)  310/    C491 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  310/    C491 :                                             ;After jump:
(1)  310/    C491 :                                             ;TYA                                                    ;2
(1)  310/    C491 :                                             ;TAX                                                    ;2
(1)  310/    C491 :                                             
(1)  310/    C491 :                                             ;Method 4 - 28 cycles
(1)  310/    C491 :                                             ;LDA (emu_PC,X)                 ;6
(1)  310/    C491 :                                             ;TAY                                    ;2
(1)  310/    C491 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  310/    C491 :                                             ;PHA                                    ;3
(1)  310/    C491 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  310/    C491 :                                             ;PHA                                    ;3
(1)  310/    C491 :                                             ;RTS                                    ;6
(1)  310/    C491 :                                             
(1)  310/    C491 :                                             ;Method 5 - 30 cycles
(1)  310/    C491 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  310/    C493 : A8                                          TAY                                             ;2
(1)  310/    C494 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  310/    C497 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  310/    C499 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  310/    C49C : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  310/    C49E : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  310/    C4A1 :                                                                     
(1)  311/    C4A1 :                     
(1)  312/    C4A1 :                     	;0x3E - ROL ABSX
(1)  313/    C4A1 :                     	ROL_ABSX:
(1)  314/    C4A1 : (MACRO)             		OP_MACRO 62, "ROL", "ABSX", "ROL_ABSX"
(1)  314/    C4A1 :                                             ;TODO
(1)  315/    C4A1 : (MACRO)             		NEXT_MACRO
(1)  315/    C4A1 :                                             
(1)  315/    C4A1 :  (MACRO-2)                                  halt
(1)  315/    C4A1 : 00                                  BRK
(1)  315/    C4A2 : 00                                  BRK
(1)  315/    C4A3 :                                             
(1)  315/    C4A3 :                                             ;Method 1 - 60 cycles
(1)  315/    C4A3 :                                             ;Jump table must be page aligned!!!
(1)  315/    C4A3 :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 97 - 1/5/2022 11:50:53


(1)  315/    C4A3 :                                             ;ASL                                    ;2
(1)  315/    C4A3 :                                             ;STA emu_ptr,X                  ;4
(1)  315/    C4A3 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  315/    C4A3 :                                             ;ADC #0                                 ;2
(1)  315/    C4A3 :                                             ;STA emu_ptr+1,X                ;4
(1)  315/    C4A3 :                                             ;LDA (emu_ptr,X)                ;6
(1)  315/    C4A3 :                                             ;STA emu_ptr2,X                 ;4
(1)  315/    C4A3 :                                             ;INC emu_ptr,X                  ;6
(1)  315/    C4A3 :                                             ;BCC .skip                              ;2
(1)  315/    C4A3 :                                             ;       INC emu_ptr+1,X         ;6
(1)  315/    C4A3 :                                             ;.skip:
(1)  315/    C4A3 :                                             ;LDA (emu_ptr,X)                ;6
(1)  315/    C4A3 :                                             ;STA emu_ptr2+1,X               ;4
(1)  315/    C4A3 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  315/    C4A3 :                                             
(1)  315/    C4A3 :                                             ;Method 2 - 46 cycles
(1)  315/    C4A3 :                                             ;Jump table must be page aligned!!!
(1)  315/    C4A3 :                                             ;LDA (emu_PC,X)                 ;6
(1)  315/    C4A3 :                                             ;STZ emu_ptr+1,X                ;4
(1)  315/    C4A3 :                                             ;ASL                                    ;2
(1)  315/    C4A3 :                                             ;ROL emu_ptr+1,X                ;6
(1)  315/    C4A3 :                                             ;ASL                                    ;2
(1)  315/    C4A3 :                                             ;ROL emu_ptr+1,X                ;6
(1)  315/    C4A3 :                                             ;STA emu_ptr,X                  ;4                              
(1)  315/    C4A3 :                                             ;LDA emu_ptr+1,X                ;4
(1)  315/    C4A3 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  315/    C4A3 :                                             ;STA emu_ptr+1,X                ;4
(1)  315/    C4A3 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  315/    C4A3 :                                             
(1)  315/    C4A3 :                                             ;Method 3 - 30 cycles
(1)  315/    C4A3 :                                             ;TXA                                                    ;2
(1)  315/    C4A3 :                                             ;TAY                                                    ;2
(1)  315/    C4A3 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  315/    C4A3 :                                             ;ASL                                                    ;2
(1)  315/    C4A3 :                                             ;BCS upper                                              ;2
(1)  315/    C4A3 :                                             ;lower:
(1)  315/    C4A3 :                                             ;       ASL                                                     ;2
(1)  315/    C4A3 :                                             ;       TAX                                                     ;2
(1)  315/    C4A3 :                                             ;       BCS upper_lower                         ;2
(1)  315/    C4A3 :                                             ;       lower_lower:
(1)  315/    C4A3 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  315/    C4A3 :                                             ;       upper_lower:
(1)  315/    C4A3 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  315/    C4A3 :                                             ;upper:
(1)  315/    C4A3 :                                             ;       ASL
(1)  315/    C4A3 :                                             ;       TAX
(1)  315/    C4A3 :                                             ;       BCS upper_upper
(1)  315/    C4A3 :                                             ;       lower_upper:
(1)  315/    C4A3 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  315/    C4A3 :                                             ;       upper_upper:
(1)  315/    C4A3 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  315/    C4A3 :                                             ;After jump:
(1)  315/    C4A3 :                                             ;TYA                                                    ;2
(1)  315/    C4A3 :                                             ;TAX                                                    ;2
(1)  315/    C4A3 :                                             
(1)  315/    C4A3 :                                             ;Method 4 - 28 cycles
(1)  315/    C4A3 :                                             ;LDA (emu_PC,X)                 ;6
(1)  315/    C4A3 :                                             ;TAY                                    ;2
(1)  315/    C4A3 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  315/    C4A3 :                                             ;PHA                                    ;3
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 98 - 1/5/2022 11:50:53


(1)  315/    C4A3 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  315/    C4A3 :                                             ;PHA                                    ;3
(1)  315/    C4A3 :                                             ;RTS                                    ;6
(1)  315/    C4A3 :                                             
(1)  315/    C4A3 :                                             ;Method 5 - 30 cycles
(1)  315/    C4A3 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  315/    C4A5 : A8                                          TAY                                             ;2
(1)  315/    C4A6 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  315/    C4A9 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  315/    C4AB : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  315/    C4AE : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  315/    C4B0 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  315/    C4B3 :                                                                     
(1)  316/    C4B3 :                     
(1)  317/    C4B3 :                     	;0x3F - NOP
(1)  318/    C4B3 :                     	NOP_0x3F:
(1)  319/    C4B3 : (MACRO)             		OP_MACRO 63, "NOP", "IMP", "NOP_0x3F"
(1)  319/    C4B3 :                                             ;TODO
(1)  320/    C4B3 : (MACRO)             		NEXT_MACRO
(1)  320/    C4B3 :                                             
(1)  320/    C4B3 :  (MACRO-2)                                  halt
(1)  320/    C4B3 : 00                                  BRK
(1)  320/    C4B4 : 00                                  BRK
(1)  320/    C4B5 :                                             
(1)  320/    C4B5 :                                             ;Method 1 - 60 cycles
(1)  320/    C4B5 :                                             ;Jump table must be page aligned!!!
(1)  320/    C4B5 :                                             ;LDA (emu_PC,X)                 ;6
(1)  320/    C4B5 :                                             ;ASL                                    ;2
(1)  320/    C4B5 :                                             ;STA emu_ptr,X                  ;4
(1)  320/    C4B5 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  320/    C4B5 :                                             ;ADC #0                                 ;2
(1)  320/    C4B5 :                                             ;STA emu_ptr+1,X                ;4
(1)  320/    C4B5 :                                             ;LDA (emu_ptr,X)                ;6
(1)  320/    C4B5 :                                             ;STA emu_ptr2,X                 ;4
(1)  320/    C4B5 :                                             ;INC emu_ptr,X                  ;6
(1)  320/    C4B5 :                                             ;BCC .skip                              ;2
(1)  320/    C4B5 :                                             ;       INC emu_ptr+1,X         ;6
(1)  320/    C4B5 :                                             ;.skip:
(1)  320/    C4B5 :                                             ;LDA (emu_ptr,X)                ;6
(1)  320/    C4B5 :                                             ;STA emu_ptr2+1,X               ;4
(1)  320/    C4B5 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  320/    C4B5 :                                             
(1)  320/    C4B5 :                                             ;Method 2 - 46 cycles
(1)  320/    C4B5 :                                             ;Jump table must be page aligned!!!
(1)  320/    C4B5 :                                             ;LDA (emu_PC,X)                 ;6
(1)  320/    C4B5 :                                             ;STZ emu_ptr+1,X                ;4
(1)  320/    C4B5 :                                             ;ASL                                    ;2
(1)  320/    C4B5 :                                             ;ROL emu_ptr+1,X                ;6
(1)  320/    C4B5 :                                             ;ASL                                    ;2
(1)  320/    C4B5 :                                             ;ROL emu_ptr+1,X                ;6
(1)  320/    C4B5 :                                             ;STA emu_ptr,X                  ;4                              
(1)  320/    C4B5 :                                             ;LDA emu_ptr+1,X                ;4
(1)  320/    C4B5 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  320/    C4B5 :                                             ;STA emu_ptr+1,X                ;4
(1)  320/    C4B5 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  320/    C4B5 :                                             
(1)  320/    C4B5 :                                             ;Method 3 - 30 cycles
(1)  320/    C4B5 :                                             ;TXA                                                    ;2
(1)  320/    C4B5 :                                             ;TAY                                                    ;2
(1)  320/    C4B5 :                                             ;LDA (emu_PC,X)                                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 99 - 1/5/2022 11:50:53


(1)  320/    C4B5 :                                             ;ASL                                                    ;2
(1)  320/    C4B5 :                                             ;BCS upper                                              ;2
(1)  320/    C4B5 :                                             ;lower:
(1)  320/    C4B5 :                                             ;       ASL                                                     ;2
(1)  320/    C4B5 :                                             ;       TAX                                                     ;2
(1)  320/    C4B5 :                                             ;       BCS upper_lower                         ;2
(1)  320/    C4B5 :                                             ;       lower_lower:
(1)  320/    C4B5 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  320/    C4B5 :                                             ;       upper_lower:
(1)  320/    C4B5 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  320/    C4B5 :                                             ;upper:
(1)  320/    C4B5 :                                             ;       ASL
(1)  320/    C4B5 :                                             ;       TAX
(1)  320/    C4B5 :                                             ;       BCS upper_upper
(1)  320/    C4B5 :                                             ;       lower_upper:
(1)  320/    C4B5 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  320/    C4B5 :                                             ;       upper_upper:
(1)  320/    C4B5 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  320/    C4B5 :                                             ;After jump:
(1)  320/    C4B5 :                                             ;TYA                                                    ;2
(1)  320/    C4B5 :                                             ;TAX                                                    ;2
(1)  320/    C4B5 :                                             
(1)  320/    C4B5 :                                             ;Method 4 - 28 cycles
(1)  320/    C4B5 :                                             ;LDA (emu_PC,X)                 ;6
(1)  320/    C4B5 :                                             ;TAY                                    ;2
(1)  320/    C4B5 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  320/    C4B5 :                                             ;PHA                                    ;3
(1)  320/    C4B5 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  320/    C4B5 :                                             ;PHA                                    ;3
(1)  320/    C4B5 :                                             ;RTS                                    ;6
(1)  320/    C4B5 :                                             
(1)  320/    C4B5 :                                             ;Method 5 - 30 cycles
(1)  320/    C4B5 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  320/    C4B7 : A8                                          TAY                                             ;2
(1)  320/    C4B8 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  320/    C4BB : 95 0A                                       STA emu_ptr,X                   ;4
(1)  320/    C4BD : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  320/    C4C0 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  320/    C4C2 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  320/    C4C5 :                                                                     
(1)  321/    C4C5 :                     
(1)  322/    C4C5 :                     	;0x40 - RTI IMP
(1)  323/    C4C5 :                     	RTI_IMP:
(1)  324/    C4C5 : (MACRO)             		OP_MACRO 64, "RTI", "IMP", "RTI_IMP"
(1)  324/    C4C5 :                                             ;TODO
(1)  325/    C4C5 : (MACRO)             		NEXT_MACRO
(1)  325/    C4C5 :                                             
(1)  325/    C4C5 :  (MACRO-2)                                  halt
(1)  325/    C4C5 : 00                                  BRK
(1)  325/    C4C6 : 00                                  BRK
(1)  325/    C4C7 :                                             
(1)  325/    C4C7 :                                             ;Method 1 - 60 cycles
(1)  325/    C4C7 :                                             ;Jump table must be page aligned!!!
(1)  325/    C4C7 :                                             ;LDA (emu_PC,X)                 ;6
(1)  325/    C4C7 :                                             ;ASL                                    ;2
(1)  325/    C4C7 :                                             ;STA emu_ptr,X                  ;4
(1)  325/    C4C7 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  325/    C4C7 :                                             ;ADC #0                                 ;2
(1)  325/    C4C7 :                                             ;STA emu_ptr+1,X                ;4
(1)  325/    C4C7 :                                             ;LDA (emu_ptr,X)                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 100 - 1/5/2022 11:50:53


(1)  325/    C4C7 :                                             ;STA emu_ptr2,X                 ;4
(1)  325/    C4C7 :                                             ;INC emu_ptr,X                  ;6
(1)  325/    C4C7 :                                             ;BCC .skip                              ;2
(1)  325/    C4C7 :                                             ;       INC emu_ptr+1,X         ;6
(1)  325/    C4C7 :                                             ;.skip:
(1)  325/    C4C7 :                                             ;LDA (emu_ptr,X)                ;6
(1)  325/    C4C7 :                                             ;STA emu_ptr2+1,X               ;4
(1)  325/    C4C7 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  325/    C4C7 :                                             
(1)  325/    C4C7 :                                             ;Method 2 - 46 cycles
(1)  325/    C4C7 :                                             ;Jump table must be page aligned!!!
(1)  325/    C4C7 :                                             ;LDA (emu_PC,X)                 ;6
(1)  325/    C4C7 :                                             ;STZ emu_ptr+1,X                ;4
(1)  325/    C4C7 :                                             ;ASL                                    ;2
(1)  325/    C4C7 :                                             ;ROL emu_ptr+1,X                ;6
(1)  325/    C4C7 :                                             ;ASL                                    ;2
(1)  325/    C4C7 :                                             ;ROL emu_ptr+1,X                ;6
(1)  325/    C4C7 :                                             ;STA emu_ptr,X                  ;4                              
(1)  325/    C4C7 :                                             ;LDA emu_ptr+1,X                ;4
(1)  325/    C4C7 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  325/    C4C7 :                                             ;STA emu_ptr+1,X                ;4
(1)  325/    C4C7 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  325/    C4C7 :                                             
(1)  325/    C4C7 :                                             ;Method 3 - 30 cycles
(1)  325/    C4C7 :                                             ;TXA                                                    ;2
(1)  325/    C4C7 :                                             ;TAY                                                    ;2
(1)  325/    C4C7 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  325/    C4C7 :                                             ;ASL                                                    ;2
(1)  325/    C4C7 :                                             ;BCS upper                                              ;2
(1)  325/    C4C7 :                                             ;lower:
(1)  325/    C4C7 :                                             ;       ASL                                                     ;2
(1)  325/    C4C7 :                                             ;       TAX                                                     ;2
(1)  325/    C4C7 :                                             ;       BCS upper_lower                         ;2
(1)  325/    C4C7 :                                             ;       lower_lower:
(1)  325/    C4C7 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  325/    C4C7 :                                             ;       upper_lower:
(1)  325/    C4C7 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  325/    C4C7 :                                             ;upper:
(1)  325/    C4C7 :                                             ;       ASL
(1)  325/    C4C7 :                                             ;       TAX
(1)  325/    C4C7 :                                             ;       BCS upper_upper
(1)  325/    C4C7 :                                             ;       lower_upper:
(1)  325/    C4C7 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  325/    C4C7 :                                             ;       upper_upper:
(1)  325/    C4C7 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  325/    C4C7 :                                             ;After jump:
(1)  325/    C4C7 :                                             ;TYA                                                    ;2
(1)  325/    C4C7 :                                             ;TAX                                                    ;2
(1)  325/    C4C7 :                                             
(1)  325/    C4C7 :                                             ;Method 4 - 28 cycles
(1)  325/    C4C7 :                                             ;LDA (emu_PC,X)                 ;6
(1)  325/    C4C7 :                                             ;TAY                                    ;2
(1)  325/    C4C7 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  325/    C4C7 :                                             ;PHA                                    ;3
(1)  325/    C4C7 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  325/    C4C7 :                                             ;PHA                                    ;3
(1)  325/    C4C7 :                                             ;RTS                                    ;6
(1)  325/    C4C7 :                                             
(1)  325/    C4C7 :                                             ;Method 5 - 30 cycles
(1)  325/    C4C7 : A1 02                                       LDA (emu_PC,X)                  ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 101 - 1/5/2022 11:50:53


(1)  325/    C4C9 : A8                                          TAY                                             ;2
(1)  325/    C4CA : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  325/    C4CD : 95 0A                                       STA emu_ptr,X                   ;4
(1)  325/    C4CF : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  325/    C4D2 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  325/    C4D4 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  325/    C4D7 :                                                                     
(1)  326/    C4D7 :                     
(1)  327/    C4D7 :                     	;0x41 - EOR IX
(1)  328/    C4D7 :                     	EOR_IX:
(1)  329/    C4D7 : (MACRO)             		OP_MACRO 65, "EOR", "IX", "EOR_IX"
(1)  329/    C4D7 :                                             ;TODO
(1)  330/    C4D7 : (MACRO)             		NEXT_MACRO
(1)  330/    C4D7 :                                             
(1)  330/    C4D7 :  (MACRO-2)                                  halt
(1)  330/    C4D7 : 00                                  BRK
(1)  330/    C4D8 : 00                                  BRK
(1)  330/    C4D9 :                                             
(1)  330/    C4D9 :                                             ;Method 1 - 60 cycles
(1)  330/    C4D9 :                                             ;Jump table must be page aligned!!!
(1)  330/    C4D9 :                                             ;LDA (emu_PC,X)                 ;6
(1)  330/    C4D9 :                                             ;ASL                                    ;2
(1)  330/    C4D9 :                                             ;STA emu_ptr,X                  ;4
(1)  330/    C4D9 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  330/    C4D9 :                                             ;ADC #0                                 ;2
(1)  330/    C4D9 :                                             ;STA emu_ptr+1,X                ;4
(1)  330/    C4D9 :                                             ;LDA (emu_ptr,X)                ;6
(1)  330/    C4D9 :                                             ;STA emu_ptr2,X                 ;4
(1)  330/    C4D9 :                                             ;INC emu_ptr,X                  ;6
(1)  330/    C4D9 :                                             ;BCC .skip                              ;2
(1)  330/    C4D9 :                                             ;       INC emu_ptr+1,X         ;6
(1)  330/    C4D9 :                                             ;.skip:
(1)  330/    C4D9 :                                             ;LDA (emu_ptr,X)                ;6
(1)  330/    C4D9 :                                             ;STA emu_ptr2+1,X               ;4
(1)  330/    C4D9 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  330/    C4D9 :                                             
(1)  330/    C4D9 :                                             ;Method 2 - 46 cycles
(1)  330/    C4D9 :                                             ;Jump table must be page aligned!!!
(1)  330/    C4D9 :                                             ;LDA (emu_PC,X)                 ;6
(1)  330/    C4D9 :                                             ;STZ emu_ptr+1,X                ;4
(1)  330/    C4D9 :                                             ;ASL                                    ;2
(1)  330/    C4D9 :                                             ;ROL emu_ptr+1,X                ;6
(1)  330/    C4D9 :                                             ;ASL                                    ;2
(1)  330/    C4D9 :                                             ;ROL emu_ptr+1,X                ;6
(1)  330/    C4D9 :                                             ;STA emu_ptr,X                  ;4                              
(1)  330/    C4D9 :                                             ;LDA emu_ptr+1,X                ;4
(1)  330/    C4D9 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  330/    C4D9 :                                             ;STA emu_ptr+1,X                ;4
(1)  330/    C4D9 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  330/    C4D9 :                                             
(1)  330/    C4D9 :                                             ;Method 3 - 30 cycles
(1)  330/    C4D9 :                                             ;TXA                                                    ;2
(1)  330/    C4D9 :                                             ;TAY                                                    ;2
(1)  330/    C4D9 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  330/    C4D9 :                                             ;ASL                                                    ;2
(1)  330/    C4D9 :                                             ;BCS upper                                              ;2
(1)  330/    C4D9 :                                             ;lower:
(1)  330/    C4D9 :                                             ;       ASL                                                     ;2
(1)  330/    C4D9 :                                             ;       TAX                                                     ;2
(1)  330/    C4D9 :                                             ;       BCS upper_lower                         ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 102 - 1/5/2022 11:50:53


(1)  330/    C4D9 :                                             ;       lower_lower:
(1)  330/    C4D9 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  330/    C4D9 :                                             ;       upper_lower:
(1)  330/    C4D9 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  330/    C4D9 :                                             ;upper:
(1)  330/    C4D9 :                                             ;       ASL
(1)  330/    C4D9 :                                             ;       TAX
(1)  330/    C4D9 :                                             ;       BCS upper_upper
(1)  330/    C4D9 :                                             ;       lower_upper:
(1)  330/    C4D9 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  330/    C4D9 :                                             ;       upper_upper:
(1)  330/    C4D9 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  330/    C4D9 :                                             ;After jump:
(1)  330/    C4D9 :                                             ;TYA                                                    ;2
(1)  330/    C4D9 :                                             ;TAX                                                    ;2
(1)  330/    C4D9 :                                             
(1)  330/    C4D9 :                                             ;Method 4 - 28 cycles
(1)  330/    C4D9 :                                             ;LDA (emu_PC,X)                 ;6
(1)  330/    C4D9 :                                             ;TAY                                    ;2
(1)  330/    C4D9 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  330/    C4D9 :                                             ;PHA                                    ;3
(1)  330/    C4D9 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  330/    C4D9 :                                             ;PHA                                    ;3
(1)  330/    C4D9 :                                             ;RTS                                    ;6
(1)  330/    C4D9 :                                             
(1)  330/    C4D9 :                                             ;Method 5 - 30 cycles
(1)  330/    C4D9 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  330/    C4DB : A8                                          TAY                                             ;2
(1)  330/    C4DC : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  330/    C4DF : 95 0A                                       STA emu_ptr,X                   ;4
(1)  330/    C4E1 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  330/    C4E4 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  330/    C4E6 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  330/    C4E9 :                                                                     
(1)  331/    C4E9 :                     
(1)  332/    C4E9 :                     	;0x42 - NOP
(1)  333/    C4E9 :                     	NOP_0x42:
(1)  334/    C4E9 : (MACRO)             		OP_MACRO 66, "NOP", "IMP", "NOP_0x42"
(1)  334/    C4E9 :                                             ;TODO
(1)  335/    C4E9 : (MACRO)             		NEXT_MACRO
(1)  335/    C4E9 :                                             
(1)  335/    C4E9 :  (MACRO-2)                                  halt
(1)  335/    C4E9 : 00                                  BRK
(1)  335/    C4EA : 00                                  BRK
(1)  335/    C4EB :                                             
(1)  335/    C4EB :                                             ;Method 1 - 60 cycles
(1)  335/    C4EB :                                             ;Jump table must be page aligned!!!
(1)  335/    C4EB :                                             ;LDA (emu_PC,X)                 ;6
(1)  335/    C4EB :                                             ;ASL                                    ;2
(1)  335/    C4EB :                                             ;STA emu_ptr,X                  ;4
(1)  335/    C4EB :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  335/    C4EB :                                             ;ADC #0                                 ;2
(1)  335/    C4EB :                                             ;STA emu_ptr+1,X                ;4
(1)  335/    C4EB :                                             ;LDA (emu_ptr,X)                ;6
(1)  335/    C4EB :                                             ;STA emu_ptr2,X                 ;4
(1)  335/    C4EB :                                             ;INC emu_ptr,X                  ;6
(1)  335/    C4EB :                                             ;BCC .skip                              ;2
(1)  335/    C4EB :                                             ;       INC emu_ptr+1,X         ;6
(1)  335/    C4EB :                                             ;.skip:
(1)  335/    C4EB :                                             ;LDA (emu_ptr,X)                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 103 - 1/5/2022 11:50:53


(1)  335/    C4EB :                                             ;STA emu_ptr2+1,X               ;4
(1)  335/    C4EB :                                             ;JMP (emu_ptr2,X)               ;6
(1)  335/    C4EB :                                             
(1)  335/    C4EB :                                             ;Method 2 - 46 cycles
(1)  335/    C4EB :                                             ;Jump table must be page aligned!!!
(1)  335/    C4EB :                                             ;LDA (emu_PC,X)                 ;6
(1)  335/    C4EB :                                             ;STZ emu_ptr+1,X                ;4
(1)  335/    C4EB :                                             ;ASL                                    ;2
(1)  335/    C4EB :                                             ;ROL emu_ptr+1,X                ;6
(1)  335/    C4EB :                                             ;ASL                                    ;2
(1)  335/    C4EB :                                             ;ROL emu_ptr+1,X                ;6
(1)  335/    C4EB :                                             ;STA emu_ptr,X                  ;4                              
(1)  335/    C4EB :                                             ;LDA emu_ptr+1,X                ;4
(1)  335/    C4EB :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  335/    C4EB :                                             ;STA emu_ptr+1,X                ;4
(1)  335/    C4EB :                                             ;JMP (emu_ptr2,X)               ;6
(1)  335/    C4EB :                                             
(1)  335/    C4EB :                                             ;Method 3 - 30 cycles
(1)  335/    C4EB :                                             ;TXA                                                    ;2
(1)  335/    C4EB :                                             ;TAY                                                    ;2
(1)  335/    C4EB :                                             ;LDA (emu_PC,X)                                 ;6
(1)  335/    C4EB :                                             ;ASL                                                    ;2
(1)  335/    C4EB :                                             ;BCS upper                                              ;2
(1)  335/    C4EB :                                             ;lower:
(1)  335/    C4EB :                                             ;       ASL                                                     ;2
(1)  335/    C4EB :                                             ;       TAX                                                     ;2
(1)  335/    C4EB :                                             ;       BCS upper_lower                         ;2
(1)  335/    C4EB :                                             ;       lower_lower:
(1)  335/    C4EB :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  335/    C4EB :                                             ;       upper_lower:
(1)  335/    C4EB :                                             ;               JMP (JUMP_TABLE2,X)
(1)  335/    C4EB :                                             ;upper:
(1)  335/    C4EB :                                             ;       ASL
(1)  335/    C4EB :                                             ;       TAX
(1)  335/    C4EB :                                             ;       BCS upper_upper
(1)  335/    C4EB :                                             ;       lower_upper:
(1)  335/    C4EB :                                             ;               JMP (JUMP_TABLE3,X)
(1)  335/    C4EB :                                             ;       upper_upper:
(1)  335/    C4EB :                                             ;               JMP (JUMP_TABLE4,X)
(1)  335/    C4EB :                                             ;After jump:
(1)  335/    C4EB :                                             ;TYA                                                    ;2
(1)  335/    C4EB :                                             ;TAX                                                    ;2
(1)  335/    C4EB :                                             
(1)  335/    C4EB :                                             ;Method 4 - 28 cycles
(1)  335/    C4EB :                                             ;LDA (emu_PC,X)                 ;6
(1)  335/    C4EB :                                             ;TAY                                    ;2
(1)  335/    C4EB :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  335/    C4EB :                                             ;PHA                                    ;3
(1)  335/    C4EB :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  335/    C4EB :                                             ;PHA                                    ;3
(1)  335/    C4EB :                                             ;RTS                                    ;6
(1)  335/    C4EB :                                             
(1)  335/    C4EB :                                             ;Method 5 - 30 cycles
(1)  335/    C4EB : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  335/    C4ED : A8                                          TAY                                             ;2
(1)  335/    C4EE : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  335/    C4F1 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  335/    C4F3 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  335/    C4F6 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  335/    C4F8 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 104 - 1/5/2022 11:50:53


(1)  335/    C4FB :                                                                     
(1)  336/    C4FB :                     
(1)  337/    C4FB :                     	;0x43 - NOP
(1)  338/    C4FB :                     	NOP_0x43:
(1)  339/    C4FB : (MACRO)             		OP_MACRO 67, "NOP", "IMP", "NOP_0x43"
(1)  339/    C4FB :                                             ;TODO
(1)  340/    C4FB : (MACRO)             		NEXT_MACRO
(1)  340/    C4FB :                                             
(1)  340/    C4FB :  (MACRO-2)                                  halt
(1)  340/    C4FB : 00                                  BRK
(1)  340/    C4FC : 00                                  BRK
(1)  340/    C4FD :                                             
(1)  340/    C4FD :                                             ;Method 1 - 60 cycles
(1)  340/    C4FD :                                             ;Jump table must be page aligned!!!
(1)  340/    C4FD :                                             ;LDA (emu_PC,X)                 ;6
(1)  340/    C4FD :                                             ;ASL                                    ;2
(1)  340/    C4FD :                                             ;STA emu_ptr,X                  ;4
(1)  340/    C4FD :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  340/    C4FD :                                             ;ADC #0                                 ;2
(1)  340/    C4FD :                                             ;STA emu_ptr+1,X                ;4
(1)  340/    C4FD :                                             ;LDA (emu_ptr,X)                ;6
(1)  340/    C4FD :                                             ;STA emu_ptr2,X                 ;4
(1)  340/    C4FD :                                             ;INC emu_ptr,X                  ;6
(1)  340/    C4FD :                                             ;BCC .skip                              ;2
(1)  340/    C4FD :                                             ;       INC emu_ptr+1,X         ;6
(1)  340/    C4FD :                                             ;.skip:
(1)  340/    C4FD :                                             ;LDA (emu_ptr,X)                ;6
(1)  340/    C4FD :                                             ;STA emu_ptr2+1,X               ;4
(1)  340/    C4FD :                                             ;JMP (emu_ptr2,X)               ;6
(1)  340/    C4FD :                                             
(1)  340/    C4FD :                                             ;Method 2 - 46 cycles
(1)  340/    C4FD :                                             ;Jump table must be page aligned!!!
(1)  340/    C4FD :                                             ;LDA (emu_PC,X)                 ;6
(1)  340/    C4FD :                                             ;STZ emu_ptr+1,X                ;4
(1)  340/    C4FD :                                             ;ASL                                    ;2
(1)  340/    C4FD :                                             ;ROL emu_ptr+1,X                ;6
(1)  340/    C4FD :                                             ;ASL                                    ;2
(1)  340/    C4FD :                                             ;ROL emu_ptr+1,X                ;6
(1)  340/    C4FD :                                             ;STA emu_ptr,X                  ;4                              
(1)  340/    C4FD :                                             ;LDA emu_ptr+1,X                ;4
(1)  340/    C4FD :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  340/    C4FD :                                             ;STA emu_ptr+1,X                ;4
(1)  340/    C4FD :                                             ;JMP (emu_ptr2,X)               ;6
(1)  340/    C4FD :                                             
(1)  340/    C4FD :                                             ;Method 3 - 30 cycles
(1)  340/    C4FD :                                             ;TXA                                                    ;2
(1)  340/    C4FD :                                             ;TAY                                                    ;2
(1)  340/    C4FD :                                             ;LDA (emu_PC,X)                                 ;6
(1)  340/    C4FD :                                             ;ASL                                                    ;2
(1)  340/    C4FD :                                             ;BCS upper                                              ;2
(1)  340/    C4FD :                                             ;lower:
(1)  340/    C4FD :                                             ;       ASL                                                     ;2
(1)  340/    C4FD :                                             ;       TAX                                                     ;2
(1)  340/    C4FD :                                             ;       BCS upper_lower                         ;2
(1)  340/    C4FD :                                             ;       lower_lower:
(1)  340/    C4FD :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  340/    C4FD :                                             ;       upper_lower:
(1)  340/    C4FD :                                             ;               JMP (JUMP_TABLE2,X)
(1)  340/    C4FD :                                             ;upper:
(1)  340/    C4FD :                                             ;       ASL
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 105 - 1/5/2022 11:50:53


(1)  340/    C4FD :                                             ;       TAX
(1)  340/    C4FD :                                             ;       BCS upper_upper
(1)  340/    C4FD :                                             ;       lower_upper:
(1)  340/    C4FD :                                             ;               JMP (JUMP_TABLE3,X)
(1)  340/    C4FD :                                             ;       upper_upper:
(1)  340/    C4FD :                                             ;               JMP (JUMP_TABLE4,X)
(1)  340/    C4FD :                                             ;After jump:
(1)  340/    C4FD :                                             ;TYA                                                    ;2
(1)  340/    C4FD :                                             ;TAX                                                    ;2
(1)  340/    C4FD :                                             
(1)  340/    C4FD :                                             ;Method 4 - 28 cycles
(1)  340/    C4FD :                                             ;LDA (emu_PC,X)                 ;6
(1)  340/    C4FD :                                             ;TAY                                    ;2
(1)  340/    C4FD :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  340/    C4FD :                                             ;PHA                                    ;3
(1)  340/    C4FD :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  340/    C4FD :                                             ;PHA                                    ;3
(1)  340/    C4FD :                                             ;RTS                                    ;6
(1)  340/    C4FD :                                             
(1)  340/    C4FD :                                             ;Method 5 - 30 cycles
(1)  340/    C4FD : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  340/    C4FF : A8                                          TAY                                             ;2
(1)  340/    C500 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  340/    C503 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  340/    C505 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  340/    C508 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  340/    C50A : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  340/    C50D :                                                                     
(1)  341/    C50D :                     
(1)  342/    C50D :                     	;0x44 - NOP
(1)  343/    C50D :                     	NOP_0x44:
(1)  344/    C50D : (MACRO)             		OP_MACRO 68, "NOP", "IMP", "NOP_0x44"
(1)  344/    C50D :                                             ;TODO
(1)  345/    C50D : (MACRO)             		NEXT_MACRO
(1)  345/    C50D :                                             
(1)  345/    C50D :  (MACRO-2)                                  halt
(1)  345/    C50D : 00                                  BRK
(1)  345/    C50E : 00                                  BRK
(1)  345/    C50F :                                             
(1)  345/    C50F :                                             ;Method 1 - 60 cycles
(1)  345/    C50F :                                             ;Jump table must be page aligned!!!
(1)  345/    C50F :                                             ;LDA (emu_PC,X)                 ;6
(1)  345/    C50F :                                             ;ASL                                    ;2
(1)  345/    C50F :                                             ;STA emu_ptr,X                  ;4
(1)  345/    C50F :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  345/    C50F :                                             ;ADC #0                                 ;2
(1)  345/    C50F :                                             ;STA emu_ptr+1,X                ;4
(1)  345/    C50F :                                             ;LDA (emu_ptr,X)                ;6
(1)  345/    C50F :                                             ;STA emu_ptr2,X                 ;4
(1)  345/    C50F :                                             ;INC emu_ptr,X                  ;6
(1)  345/    C50F :                                             ;BCC .skip                              ;2
(1)  345/    C50F :                                             ;       INC emu_ptr+1,X         ;6
(1)  345/    C50F :                                             ;.skip:
(1)  345/    C50F :                                             ;LDA (emu_ptr,X)                ;6
(1)  345/    C50F :                                             ;STA emu_ptr2+1,X               ;4
(1)  345/    C50F :                                             ;JMP (emu_ptr2,X)               ;6
(1)  345/    C50F :                                             
(1)  345/    C50F :                                             ;Method 2 - 46 cycles
(1)  345/    C50F :                                             ;Jump table must be page aligned!!!
(1)  345/    C50F :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 106 - 1/5/2022 11:50:53


(1)  345/    C50F :                                             ;STZ emu_ptr+1,X                ;4
(1)  345/    C50F :                                             ;ASL                                    ;2
(1)  345/    C50F :                                             ;ROL emu_ptr+1,X                ;6
(1)  345/    C50F :                                             ;ASL                                    ;2
(1)  345/    C50F :                                             ;ROL emu_ptr+1,X                ;6
(1)  345/    C50F :                                             ;STA emu_ptr,X                  ;4                              
(1)  345/    C50F :                                             ;LDA emu_ptr+1,X                ;4
(1)  345/    C50F :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  345/    C50F :                                             ;STA emu_ptr+1,X                ;4
(1)  345/    C50F :                                             ;JMP (emu_ptr2,X)               ;6
(1)  345/    C50F :                                             
(1)  345/    C50F :                                             ;Method 3 - 30 cycles
(1)  345/    C50F :                                             ;TXA                                                    ;2
(1)  345/    C50F :                                             ;TAY                                                    ;2
(1)  345/    C50F :                                             ;LDA (emu_PC,X)                                 ;6
(1)  345/    C50F :                                             ;ASL                                                    ;2
(1)  345/    C50F :                                             ;BCS upper                                              ;2
(1)  345/    C50F :                                             ;lower:
(1)  345/    C50F :                                             ;       ASL                                                     ;2
(1)  345/    C50F :                                             ;       TAX                                                     ;2
(1)  345/    C50F :                                             ;       BCS upper_lower                         ;2
(1)  345/    C50F :                                             ;       lower_lower:
(1)  345/    C50F :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  345/    C50F :                                             ;       upper_lower:
(1)  345/    C50F :                                             ;               JMP (JUMP_TABLE2,X)
(1)  345/    C50F :                                             ;upper:
(1)  345/    C50F :                                             ;       ASL
(1)  345/    C50F :                                             ;       TAX
(1)  345/    C50F :                                             ;       BCS upper_upper
(1)  345/    C50F :                                             ;       lower_upper:
(1)  345/    C50F :                                             ;               JMP (JUMP_TABLE3,X)
(1)  345/    C50F :                                             ;       upper_upper:
(1)  345/    C50F :                                             ;               JMP (JUMP_TABLE4,X)
(1)  345/    C50F :                                             ;After jump:
(1)  345/    C50F :                                             ;TYA                                                    ;2
(1)  345/    C50F :                                             ;TAX                                                    ;2
(1)  345/    C50F :                                             
(1)  345/    C50F :                                             ;Method 4 - 28 cycles
(1)  345/    C50F :                                             ;LDA (emu_PC,X)                 ;6
(1)  345/    C50F :                                             ;TAY                                    ;2
(1)  345/    C50F :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  345/    C50F :                                             ;PHA                                    ;3
(1)  345/    C50F :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  345/    C50F :                                             ;PHA                                    ;3
(1)  345/    C50F :                                             ;RTS                                    ;6
(1)  345/    C50F :                                             
(1)  345/    C50F :                                             ;Method 5 - 30 cycles
(1)  345/    C50F : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  345/    C511 : A8                                          TAY                                             ;2
(1)  345/    C512 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  345/    C515 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  345/    C517 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  345/    C51A : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  345/    C51C : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  345/    C51F :                                                                     
(1)  346/    C51F :                     
(1)  347/    C51F :                     	;0x45 - EOR ZP
(1)  348/    C51F :                     	EOR_ZP:
(1)  349/    C51F : (MACRO)             		OP_MACRO 69, "EOR", "ZP", "EOR_ZP"
(1)  349/    C51F :                                             ;TODO
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 107 - 1/5/2022 11:50:53


(1)  350/    C51F : (MACRO)             		NEXT_MACRO
(1)  350/    C51F :                                             
(1)  350/    C51F :  (MACRO-2)                                  halt
(1)  350/    C51F : 00                                  BRK
(1)  350/    C520 : 00                                  BRK
(1)  350/    C521 :                                             
(1)  350/    C521 :                                             ;Method 1 - 60 cycles
(1)  350/    C521 :                                             ;Jump table must be page aligned!!!
(1)  350/    C521 :                                             ;LDA (emu_PC,X)                 ;6
(1)  350/    C521 :                                             ;ASL                                    ;2
(1)  350/    C521 :                                             ;STA emu_ptr,X                  ;4
(1)  350/    C521 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  350/    C521 :                                             ;ADC #0                                 ;2
(1)  350/    C521 :                                             ;STA emu_ptr+1,X                ;4
(1)  350/    C521 :                                             ;LDA (emu_ptr,X)                ;6
(1)  350/    C521 :                                             ;STA emu_ptr2,X                 ;4
(1)  350/    C521 :                                             ;INC emu_ptr,X                  ;6
(1)  350/    C521 :                                             ;BCC .skip                              ;2
(1)  350/    C521 :                                             ;       INC emu_ptr+1,X         ;6
(1)  350/    C521 :                                             ;.skip:
(1)  350/    C521 :                                             ;LDA (emu_ptr,X)                ;6
(1)  350/    C521 :                                             ;STA emu_ptr2+1,X               ;4
(1)  350/    C521 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  350/    C521 :                                             
(1)  350/    C521 :                                             ;Method 2 - 46 cycles
(1)  350/    C521 :                                             ;Jump table must be page aligned!!!
(1)  350/    C521 :                                             ;LDA (emu_PC,X)                 ;6
(1)  350/    C521 :                                             ;STZ emu_ptr+1,X                ;4
(1)  350/    C521 :                                             ;ASL                                    ;2
(1)  350/    C521 :                                             ;ROL emu_ptr+1,X                ;6
(1)  350/    C521 :                                             ;ASL                                    ;2
(1)  350/    C521 :                                             ;ROL emu_ptr+1,X                ;6
(1)  350/    C521 :                                             ;STA emu_ptr,X                  ;4                              
(1)  350/    C521 :                                             ;LDA emu_ptr+1,X                ;4
(1)  350/    C521 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  350/    C521 :                                             ;STA emu_ptr+1,X                ;4
(1)  350/    C521 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  350/    C521 :                                             
(1)  350/    C521 :                                             ;Method 3 - 30 cycles
(1)  350/    C521 :                                             ;TXA                                                    ;2
(1)  350/    C521 :                                             ;TAY                                                    ;2
(1)  350/    C521 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  350/    C521 :                                             ;ASL                                                    ;2
(1)  350/    C521 :                                             ;BCS upper                                              ;2
(1)  350/    C521 :                                             ;lower:
(1)  350/    C521 :                                             ;       ASL                                                     ;2
(1)  350/    C521 :                                             ;       TAX                                                     ;2
(1)  350/    C521 :                                             ;       BCS upper_lower                         ;2
(1)  350/    C521 :                                             ;       lower_lower:
(1)  350/    C521 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  350/    C521 :                                             ;       upper_lower:
(1)  350/    C521 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  350/    C521 :                                             ;upper:
(1)  350/    C521 :                                             ;       ASL
(1)  350/    C521 :                                             ;       TAX
(1)  350/    C521 :                                             ;       BCS upper_upper
(1)  350/    C521 :                                             ;       lower_upper:
(1)  350/    C521 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  350/    C521 :                                             ;       upper_upper:
(1)  350/    C521 :                                             ;               JMP (JUMP_TABLE4,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 108 - 1/5/2022 11:50:53


(1)  350/    C521 :                                             ;After jump:
(1)  350/    C521 :                                             ;TYA                                                    ;2
(1)  350/    C521 :                                             ;TAX                                                    ;2
(1)  350/    C521 :                                             
(1)  350/    C521 :                                             ;Method 4 - 28 cycles
(1)  350/    C521 :                                             ;LDA (emu_PC,X)                 ;6
(1)  350/    C521 :                                             ;TAY                                    ;2
(1)  350/    C521 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  350/    C521 :                                             ;PHA                                    ;3
(1)  350/    C521 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  350/    C521 :                                             ;PHA                                    ;3
(1)  350/    C521 :                                             ;RTS                                    ;6
(1)  350/    C521 :                                             
(1)  350/    C521 :                                             ;Method 5 - 30 cycles
(1)  350/    C521 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  350/    C523 : A8                                          TAY                                             ;2
(1)  350/    C524 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  350/    C527 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  350/    C529 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  350/    C52C : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  350/    C52E : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  350/    C531 :                                                                     
(1)  351/    C531 :                     
(1)  352/    C531 :                     	;0x46 - LSR ZP
(1)  353/    C531 :                     	LSR_ZP:
(1)  354/    C531 : (MACRO)             		OP_MACRO 70, "LSR", "ZP", "LSR_ZP"
(1)  354/    C531 :                                             ;TODO
(1)  355/    C531 : (MACRO)             		NEXT_MACRO
(1)  355/    C531 :                                             
(1)  355/    C531 :  (MACRO-2)                                  halt
(1)  355/    C531 : 00                                  BRK
(1)  355/    C532 : 00                                  BRK
(1)  355/    C533 :                                             
(1)  355/    C533 :                                             ;Method 1 - 60 cycles
(1)  355/    C533 :                                             ;Jump table must be page aligned!!!
(1)  355/    C533 :                                             ;LDA (emu_PC,X)                 ;6
(1)  355/    C533 :                                             ;ASL                                    ;2
(1)  355/    C533 :                                             ;STA emu_ptr,X                  ;4
(1)  355/    C533 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  355/    C533 :                                             ;ADC #0                                 ;2
(1)  355/    C533 :                                             ;STA emu_ptr+1,X                ;4
(1)  355/    C533 :                                             ;LDA (emu_ptr,X)                ;6
(1)  355/    C533 :                                             ;STA emu_ptr2,X                 ;4
(1)  355/    C533 :                                             ;INC emu_ptr,X                  ;6
(1)  355/    C533 :                                             ;BCC .skip                              ;2
(1)  355/    C533 :                                             ;       INC emu_ptr+1,X         ;6
(1)  355/    C533 :                                             ;.skip:
(1)  355/    C533 :                                             ;LDA (emu_ptr,X)                ;6
(1)  355/    C533 :                                             ;STA emu_ptr2+1,X               ;4
(1)  355/    C533 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  355/    C533 :                                             
(1)  355/    C533 :                                             ;Method 2 - 46 cycles
(1)  355/    C533 :                                             ;Jump table must be page aligned!!!
(1)  355/    C533 :                                             ;LDA (emu_PC,X)                 ;6
(1)  355/    C533 :                                             ;STZ emu_ptr+1,X                ;4
(1)  355/    C533 :                                             ;ASL                                    ;2
(1)  355/    C533 :                                             ;ROL emu_ptr+1,X                ;6
(1)  355/    C533 :                                             ;ASL                                    ;2
(1)  355/    C533 :                                             ;ROL emu_ptr+1,X                ;6
(1)  355/    C533 :                                             ;STA emu_ptr,X                  ;4                              
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 109 - 1/5/2022 11:50:53


(1)  355/    C533 :                                             ;LDA emu_ptr+1,X                ;4
(1)  355/    C533 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  355/    C533 :                                             ;STA emu_ptr+1,X                ;4
(1)  355/    C533 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  355/    C533 :                                             
(1)  355/    C533 :                                             ;Method 3 - 30 cycles
(1)  355/    C533 :                                             ;TXA                                                    ;2
(1)  355/    C533 :                                             ;TAY                                                    ;2
(1)  355/    C533 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  355/    C533 :                                             ;ASL                                                    ;2
(1)  355/    C533 :                                             ;BCS upper                                              ;2
(1)  355/    C533 :                                             ;lower:
(1)  355/    C533 :                                             ;       ASL                                                     ;2
(1)  355/    C533 :                                             ;       TAX                                                     ;2
(1)  355/    C533 :                                             ;       BCS upper_lower                         ;2
(1)  355/    C533 :                                             ;       lower_lower:
(1)  355/    C533 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  355/    C533 :                                             ;       upper_lower:
(1)  355/    C533 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  355/    C533 :                                             ;upper:
(1)  355/    C533 :                                             ;       ASL
(1)  355/    C533 :                                             ;       TAX
(1)  355/    C533 :                                             ;       BCS upper_upper
(1)  355/    C533 :                                             ;       lower_upper:
(1)  355/    C533 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  355/    C533 :                                             ;       upper_upper:
(1)  355/    C533 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  355/    C533 :                                             ;After jump:
(1)  355/    C533 :                                             ;TYA                                                    ;2
(1)  355/    C533 :                                             ;TAX                                                    ;2
(1)  355/    C533 :                                             
(1)  355/    C533 :                                             ;Method 4 - 28 cycles
(1)  355/    C533 :                                             ;LDA (emu_PC,X)                 ;6
(1)  355/    C533 :                                             ;TAY                                    ;2
(1)  355/    C533 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  355/    C533 :                                             ;PHA                                    ;3
(1)  355/    C533 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  355/    C533 :                                             ;PHA                                    ;3
(1)  355/    C533 :                                             ;RTS                                    ;6
(1)  355/    C533 :                                             
(1)  355/    C533 :                                             ;Method 5 - 30 cycles
(1)  355/    C533 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  355/    C535 : A8                                          TAY                                             ;2
(1)  355/    C536 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  355/    C539 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  355/    C53B : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  355/    C53E : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  355/    C540 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  355/    C543 :                                                                     
(1)  356/    C543 :                     
(1)  357/    C543 :                     	;0x47 - NOP
(1)  358/    C543 :                     	NOP_0x47:
(1)  359/    C543 : (MACRO)             		OP_MACRO 71, "NOP", "IMP", "NOP_0x47"
(1)  359/    C543 :                                             ;TODO
(1)  360/    C543 : (MACRO)             		NEXT_MACRO
(1)  360/    C543 :                                             
(1)  360/    C543 :  (MACRO-2)                                  halt
(1)  360/    C543 : 00                                  BRK
(1)  360/    C544 : 00                                  BRK
(1)  360/    C545 :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 110 - 1/5/2022 11:50:53


(1)  360/    C545 :                                             ;Method 1 - 60 cycles
(1)  360/    C545 :                                             ;Jump table must be page aligned!!!
(1)  360/    C545 :                                             ;LDA (emu_PC,X)                 ;6
(1)  360/    C545 :                                             ;ASL                                    ;2
(1)  360/    C545 :                                             ;STA emu_ptr,X                  ;4
(1)  360/    C545 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  360/    C545 :                                             ;ADC #0                                 ;2
(1)  360/    C545 :                                             ;STA emu_ptr+1,X                ;4
(1)  360/    C545 :                                             ;LDA (emu_ptr,X)                ;6
(1)  360/    C545 :                                             ;STA emu_ptr2,X                 ;4
(1)  360/    C545 :                                             ;INC emu_ptr,X                  ;6
(1)  360/    C545 :                                             ;BCC .skip                              ;2
(1)  360/    C545 :                                             ;       INC emu_ptr+1,X         ;6
(1)  360/    C545 :                                             ;.skip:
(1)  360/    C545 :                                             ;LDA (emu_ptr,X)                ;6
(1)  360/    C545 :                                             ;STA emu_ptr2+1,X               ;4
(1)  360/    C545 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  360/    C545 :                                             
(1)  360/    C545 :                                             ;Method 2 - 46 cycles
(1)  360/    C545 :                                             ;Jump table must be page aligned!!!
(1)  360/    C545 :                                             ;LDA (emu_PC,X)                 ;6
(1)  360/    C545 :                                             ;STZ emu_ptr+1,X                ;4
(1)  360/    C545 :                                             ;ASL                                    ;2
(1)  360/    C545 :                                             ;ROL emu_ptr+1,X                ;6
(1)  360/    C545 :                                             ;ASL                                    ;2
(1)  360/    C545 :                                             ;ROL emu_ptr+1,X                ;6
(1)  360/    C545 :                                             ;STA emu_ptr,X                  ;4                              
(1)  360/    C545 :                                             ;LDA emu_ptr+1,X                ;4
(1)  360/    C545 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  360/    C545 :                                             ;STA emu_ptr+1,X                ;4
(1)  360/    C545 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  360/    C545 :                                             
(1)  360/    C545 :                                             ;Method 3 - 30 cycles
(1)  360/    C545 :                                             ;TXA                                                    ;2
(1)  360/    C545 :                                             ;TAY                                                    ;2
(1)  360/    C545 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  360/    C545 :                                             ;ASL                                                    ;2
(1)  360/    C545 :                                             ;BCS upper                                              ;2
(1)  360/    C545 :                                             ;lower:
(1)  360/    C545 :                                             ;       ASL                                                     ;2
(1)  360/    C545 :                                             ;       TAX                                                     ;2
(1)  360/    C545 :                                             ;       BCS upper_lower                         ;2
(1)  360/    C545 :                                             ;       lower_lower:
(1)  360/    C545 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  360/    C545 :                                             ;       upper_lower:
(1)  360/    C545 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  360/    C545 :                                             ;upper:
(1)  360/    C545 :                                             ;       ASL
(1)  360/    C545 :                                             ;       TAX
(1)  360/    C545 :                                             ;       BCS upper_upper
(1)  360/    C545 :                                             ;       lower_upper:
(1)  360/    C545 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  360/    C545 :                                             ;       upper_upper:
(1)  360/    C545 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  360/    C545 :                                             ;After jump:
(1)  360/    C545 :                                             ;TYA                                                    ;2
(1)  360/    C545 :                                             ;TAX                                                    ;2
(1)  360/    C545 :                                             
(1)  360/    C545 :                                             ;Method 4 - 28 cycles
(1)  360/    C545 :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 111 - 1/5/2022 11:50:53


(1)  360/    C545 :                                             ;TAY                                    ;2
(1)  360/    C545 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  360/    C545 :                                             ;PHA                                    ;3
(1)  360/    C545 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  360/    C545 :                                             ;PHA                                    ;3
(1)  360/    C545 :                                             ;RTS                                    ;6
(1)  360/    C545 :                                             
(1)  360/    C545 :                                             ;Method 5 - 30 cycles
(1)  360/    C545 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  360/    C547 : A8                                          TAY                                             ;2
(1)  360/    C548 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  360/    C54B : 95 0A                                       STA emu_ptr,X                   ;4
(1)  360/    C54D : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  360/    C550 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  360/    C552 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  360/    C555 :                                                                     
(1)  361/    C555 :                     
(1)  362/    C555 :                     	;0x48 - PHA IMP
(1)  363/    C555 :                     	PHA_IMP:
(1)  364/    C555 : (MACRO)             		OP_MACRO 72, "PHA", "IMP", "PHA_IMP"
(1)  364/    C555 :                                             ;TODO
(1)  365/    C555 : (MACRO)             		NEXT_MACRO
(1)  365/    C555 :                                             
(1)  365/    C555 :  (MACRO-2)                                  halt
(1)  365/    C555 : 00                                  BRK
(1)  365/    C556 : 00                                  BRK
(1)  365/    C557 :                                             
(1)  365/    C557 :                                             ;Method 1 - 60 cycles
(1)  365/    C557 :                                             ;Jump table must be page aligned!!!
(1)  365/    C557 :                                             ;LDA (emu_PC,X)                 ;6
(1)  365/    C557 :                                             ;ASL                                    ;2
(1)  365/    C557 :                                             ;STA emu_ptr,X                  ;4
(1)  365/    C557 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  365/    C557 :                                             ;ADC #0                                 ;2
(1)  365/    C557 :                                             ;STA emu_ptr+1,X                ;4
(1)  365/    C557 :                                             ;LDA (emu_ptr,X)                ;6
(1)  365/    C557 :                                             ;STA emu_ptr2,X                 ;4
(1)  365/    C557 :                                             ;INC emu_ptr,X                  ;6
(1)  365/    C557 :                                             ;BCC .skip                              ;2
(1)  365/    C557 :                                             ;       INC emu_ptr+1,X         ;6
(1)  365/    C557 :                                             ;.skip:
(1)  365/    C557 :                                             ;LDA (emu_ptr,X)                ;6
(1)  365/    C557 :                                             ;STA emu_ptr2+1,X               ;4
(1)  365/    C557 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  365/    C557 :                                             
(1)  365/    C557 :                                             ;Method 2 - 46 cycles
(1)  365/    C557 :                                             ;Jump table must be page aligned!!!
(1)  365/    C557 :                                             ;LDA (emu_PC,X)                 ;6
(1)  365/    C557 :                                             ;STZ emu_ptr+1,X                ;4
(1)  365/    C557 :                                             ;ASL                                    ;2
(1)  365/    C557 :                                             ;ROL emu_ptr+1,X                ;6
(1)  365/    C557 :                                             ;ASL                                    ;2
(1)  365/    C557 :                                             ;ROL emu_ptr+1,X                ;6
(1)  365/    C557 :                                             ;STA emu_ptr,X                  ;4                              
(1)  365/    C557 :                                             ;LDA emu_ptr+1,X                ;4
(1)  365/    C557 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  365/    C557 :                                             ;STA emu_ptr+1,X                ;4
(1)  365/    C557 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  365/    C557 :                                             
(1)  365/    C557 :                                             ;Method 3 - 30 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 112 - 1/5/2022 11:50:53


(1)  365/    C557 :                                             ;TXA                                                    ;2
(1)  365/    C557 :                                             ;TAY                                                    ;2
(1)  365/    C557 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  365/    C557 :                                             ;ASL                                                    ;2
(1)  365/    C557 :                                             ;BCS upper                                              ;2
(1)  365/    C557 :                                             ;lower:
(1)  365/    C557 :                                             ;       ASL                                                     ;2
(1)  365/    C557 :                                             ;       TAX                                                     ;2
(1)  365/    C557 :                                             ;       BCS upper_lower                         ;2
(1)  365/    C557 :                                             ;       lower_lower:
(1)  365/    C557 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  365/    C557 :                                             ;       upper_lower:
(1)  365/    C557 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  365/    C557 :                                             ;upper:
(1)  365/    C557 :                                             ;       ASL
(1)  365/    C557 :                                             ;       TAX
(1)  365/    C557 :                                             ;       BCS upper_upper
(1)  365/    C557 :                                             ;       lower_upper:
(1)  365/    C557 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  365/    C557 :                                             ;       upper_upper:
(1)  365/    C557 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  365/    C557 :                                             ;After jump:
(1)  365/    C557 :                                             ;TYA                                                    ;2
(1)  365/    C557 :                                             ;TAX                                                    ;2
(1)  365/    C557 :                                             
(1)  365/    C557 :                                             ;Method 4 - 28 cycles
(1)  365/    C557 :                                             ;LDA (emu_PC,X)                 ;6
(1)  365/    C557 :                                             ;TAY                                    ;2
(1)  365/    C557 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  365/    C557 :                                             ;PHA                                    ;3
(1)  365/    C557 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  365/    C557 :                                             ;PHA                                    ;3
(1)  365/    C557 :                                             ;RTS                                    ;6
(1)  365/    C557 :                                             
(1)  365/    C557 :                                             ;Method 5 - 30 cycles
(1)  365/    C557 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  365/    C559 : A8                                          TAY                                             ;2
(1)  365/    C55A : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  365/    C55D : 95 0A                                       STA emu_ptr,X                   ;4
(1)  365/    C55F : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  365/    C562 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  365/    C564 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  365/    C567 :                                                                     
(1)  366/    C567 :                     
(1)  367/    C567 :                     	;0x49 - EOR IMMED
(1)  368/    C567 :                     	EOR_IMMED:
(1)  369/    C567 : (MACRO)             		OP_MACRO 73, "EOR", "IMMED", "EOR_IMMED"
(1)  369/    C567 :                                             ;TODO
(1)  370/    C567 : (MACRO)             		NEXT_MACRO
(1)  370/    C567 :                                             
(1)  370/    C567 :  (MACRO-2)                                  halt
(1)  370/    C567 : 00                                  BRK
(1)  370/    C568 : 00                                  BRK
(1)  370/    C569 :                                             
(1)  370/    C569 :                                             ;Method 1 - 60 cycles
(1)  370/    C569 :                                             ;Jump table must be page aligned!!!
(1)  370/    C569 :                                             ;LDA (emu_PC,X)                 ;6
(1)  370/    C569 :                                             ;ASL                                    ;2
(1)  370/    C569 :                                             ;STA emu_ptr,X                  ;4
(1)  370/    C569 :                                             ;LDA #hi(JUMP_TABLE)    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 113 - 1/5/2022 11:50:53


(1)  370/    C569 :                                             ;ADC #0                                 ;2
(1)  370/    C569 :                                             ;STA emu_ptr+1,X                ;4
(1)  370/    C569 :                                             ;LDA (emu_ptr,X)                ;6
(1)  370/    C569 :                                             ;STA emu_ptr2,X                 ;4
(1)  370/    C569 :                                             ;INC emu_ptr,X                  ;6
(1)  370/    C569 :                                             ;BCC .skip                              ;2
(1)  370/    C569 :                                             ;       INC emu_ptr+1,X         ;6
(1)  370/    C569 :                                             ;.skip:
(1)  370/    C569 :                                             ;LDA (emu_ptr,X)                ;6
(1)  370/    C569 :                                             ;STA emu_ptr2+1,X               ;4
(1)  370/    C569 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  370/    C569 :                                             
(1)  370/    C569 :                                             ;Method 2 - 46 cycles
(1)  370/    C569 :                                             ;Jump table must be page aligned!!!
(1)  370/    C569 :                                             ;LDA (emu_PC,X)                 ;6
(1)  370/    C569 :                                             ;STZ emu_ptr+1,X                ;4
(1)  370/    C569 :                                             ;ASL                                    ;2
(1)  370/    C569 :                                             ;ROL emu_ptr+1,X                ;6
(1)  370/    C569 :                                             ;ASL                                    ;2
(1)  370/    C569 :                                             ;ROL emu_ptr+1,X                ;6
(1)  370/    C569 :                                             ;STA emu_ptr,X                  ;4                              
(1)  370/    C569 :                                             ;LDA emu_ptr+1,X                ;4
(1)  370/    C569 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  370/    C569 :                                             ;STA emu_ptr+1,X                ;4
(1)  370/    C569 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  370/    C569 :                                             
(1)  370/    C569 :                                             ;Method 3 - 30 cycles
(1)  370/    C569 :                                             ;TXA                                                    ;2
(1)  370/    C569 :                                             ;TAY                                                    ;2
(1)  370/    C569 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  370/    C569 :                                             ;ASL                                                    ;2
(1)  370/    C569 :                                             ;BCS upper                                              ;2
(1)  370/    C569 :                                             ;lower:
(1)  370/    C569 :                                             ;       ASL                                                     ;2
(1)  370/    C569 :                                             ;       TAX                                                     ;2
(1)  370/    C569 :                                             ;       BCS upper_lower                         ;2
(1)  370/    C569 :                                             ;       lower_lower:
(1)  370/    C569 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  370/    C569 :                                             ;       upper_lower:
(1)  370/    C569 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  370/    C569 :                                             ;upper:
(1)  370/    C569 :                                             ;       ASL
(1)  370/    C569 :                                             ;       TAX
(1)  370/    C569 :                                             ;       BCS upper_upper
(1)  370/    C569 :                                             ;       lower_upper:
(1)  370/    C569 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  370/    C569 :                                             ;       upper_upper:
(1)  370/    C569 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  370/    C569 :                                             ;After jump:
(1)  370/    C569 :                                             ;TYA                                                    ;2
(1)  370/    C569 :                                             ;TAX                                                    ;2
(1)  370/    C569 :                                             
(1)  370/    C569 :                                             ;Method 4 - 28 cycles
(1)  370/    C569 :                                             ;LDA (emu_PC,X)                 ;6
(1)  370/    C569 :                                             ;TAY                                    ;2
(1)  370/    C569 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  370/    C569 :                                             ;PHA                                    ;3
(1)  370/    C569 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  370/    C569 :                                             ;PHA                                    ;3
(1)  370/    C569 :                                             ;RTS                                    ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 114 - 1/5/2022 11:50:53


(1)  370/    C569 :                                             
(1)  370/    C569 :                                             ;Method 5 - 30 cycles
(1)  370/    C569 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  370/    C56B : A8                                          TAY                                             ;2
(1)  370/    C56C : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  370/    C56F : 95 0A                                       STA emu_ptr,X                   ;4
(1)  370/    C571 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  370/    C574 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  370/    C576 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  370/    C579 :                                                                     
(1)  371/    C579 :                     
(1)  372/    C579 :                     	;0x4A - LSR A
(1)  373/    C579 :                     	LSR_A:
(1)  374/    C579 : (MACRO)             		OP_MACRO 74, "LSR", "A", "LSR_A"
(1)  374/    C579 :                                             ;TODO
(1)  375/    C579 : (MACRO)             		NEXT_MACRO
(1)  375/    C579 :                                             
(1)  375/    C579 :  (MACRO-2)                                  halt
(1)  375/    C579 : 00                                  BRK
(1)  375/    C57A : 00                                  BRK
(1)  375/    C57B :                                             
(1)  375/    C57B :                                             ;Method 1 - 60 cycles
(1)  375/    C57B :                                             ;Jump table must be page aligned!!!
(1)  375/    C57B :                                             ;LDA (emu_PC,X)                 ;6
(1)  375/    C57B :                                             ;ASL                                    ;2
(1)  375/    C57B :                                             ;STA emu_ptr,X                  ;4
(1)  375/    C57B :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  375/    C57B :                                             ;ADC #0                                 ;2
(1)  375/    C57B :                                             ;STA emu_ptr+1,X                ;4
(1)  375/    C57B :                                             ;LDA (emu_ptr,X)                ;6
(1)  375/    C57B :                                             ;STA emu_ptr2,X                 ;4
(1)  375/    C57B :                                             ;INC emu_ptr,X                  ;6
(1)  375/    C57B :                                             ;BCC .skip                              ;2
(1)  375/    C57B :                                             ;       INC emu_ptr+1,X         ;6
(1)  375/    C57B :                                             ;.skip:
(1)  375/    C57B :                                             ;LDA (emu_ptr,X)                ;6
(1)  375/    C57B :                                             ;STA emu_ptr2+1,X               ;4
(1)  375/    C57B :                                             ;JMP (emu_ptr2,X)               ;6
(1)  375/    C57B :                                             
(1)  375/    C57B :                                             ;Method 2 - 46 cycles
(1)  375/    C57B :                                             ;Jump table must be page aligned!!!
(1)  375/    C57B :                                             ;LDA (emu_PC,X)                 ;6
(1)  375/    C57B :                                             ;STZ emu_ptr+1,X                ;4
(1)  375/    C57B :                                             ;ASL                                    ;2
(1)  375/    C57B :                                             ;ROL emu_ptr+1,X                ;6
(1)  375/    C57B :                                             ;ASL                                    ;2
(1)  375/    C57B :                                             ;ROL emu_ptr+1,X                ;6
(1)  375/    C57B :                                             ;STA emu_ptr,X                  ;4                              
(1)  375/    C57B :                                             ;LDA emu_ptr+1,X                ;4
(1)  375/    C57B :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  375/    C57B :                                             ;STA emu_ptr+1,X                ;4
(1)  375/    C57B :                                             ;JMP (emu_ptr2,X)               ;6
(1)  375/    C57B :                                             
(1)  375/    C57B :                                             ;Method 3 - 30 cycles
(1)  375/    C57B :                                             ;TXA                                                    ;2
(1)  375/    C57B :                                             ;TAY                                                    ;2
(1)  375/    C57B :                                             ;LDA (emu_PC,X)                                 ;6
(1)  375/    C57B :                                             ;ASL                                                    ;2
(1)  375/    C57B :                                             ;BCS upper                                              ;2
(1)  375/    C57B :                                             ;lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 115 - 1/5/2022 11:50:53


(1)  375/    C57B :                                             ;       ASL                                                     ;2
(1)  375/    C57B :                                             ;       TAX                                                     ;2
(1)  375/    C57B :                                             ;       BCS upper_lower                         ;2
(1)  375/    C57B :                                             ;       lower_lower:
(1)  375/    C57B :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  375/    C57B :                                             ;       upper_lower:
(1)  375/    C57B :                                             ;               JMP (JUMP_TABLE2,X)
(1)  375/    C57B :                                             ;upper:
(1)  375/    C57B :                                             ;       ASL
(1)  375/    C57B :                                             ;       TAX
(1)  375/    C57B :                                             ;       BCS upper_upper
(1)  375/    C57B :                                             ;       lower_upper:
(1)  375/    C57B :                                             ;               JMP (JUMP_TABLE3,X)
(1)  375/    C57B :                                             ;       upper_upper:
(1)  375/    C57B :                                             ;               JMP (JUMP_TABLE4,X)
(1)  375/    C57B :                                             ;After jump:
(1)  375/    C57B :                                             ;TYA                                                    ;2
(1)  375/    C57B :                                             ;TAX                                                    ;2
(1)  375/    C57B :                                             
(1)  375/    C57B :                                             ;Method 4 - 28 cycles
(1)  375/    C57B :                                             ;LDA (emu_PC,X)                 ;6
(1)  375/    C57B :                                             ;TAY                                    ;2
(1)  375/    C57B :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  375/    C57B :                                             ;PHA                                    ;3
(1)  375/    C57B :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  375/    C57B :                                             ;PHA                                    ;3
(1)  375/    C57B :                                             ;RTS                                    ;6
(1)  375/    C57B :                                             
(1)  375/    C57B :                                             ;Method 5 - 30 cycles
(1)  375/    C57B : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  375/    C57D : A8                                          TAY                                             ;2
(1)  375/    C57E : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  375/    C581 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  375/    C583 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  375/    C586 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  375/    C588 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  375/    C58B :                                                                     
(1)  376/    C58B :                     
(1)  377/    C58B :                     	;0x4B - NOP
(1)  378/    C58B :                     	NOP_0x4B:
(1)  379/    C58B : (MACRO)             		OP_MACRO 75, "NOP", "IMP", "NOP_0x4B"
(1)  379/    C58B :                                             ;TODO
(1)  380/    C58B : (MACRO)             		NEXT_MACRO
(1)  380/    C58B :                                             
(1)  380/    C58B :  (MACRO-2)                                  halt
(1)  380/    C58B : 00                                  BRK
(1)  380/    C58C : 00                                  BRK
(1)  380/    C58D :                                             
(1)  380/    C58D :                                             ;Method 1 - 60 cycles
(1)  380/    C58D :                                             ;Jump table must be page aligned!!!
(1)  380/    C58D :                                             ;LDA (emu_PC,X)                 ;6
(1)  380/    C58D :                                             ;ASL                                    ;2
(1)  380/    C58D :                                             ;STA emu_ptr,X                  ;4
(1)  380/    C58D :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  380/    C58D :                                             ;ADC #0                                 ;2
(1)  380/    C58D :                                             ;STA emu_ptr+1,X                ;4
(1)  380/    C58D :                                             ;LDA (emu_ptr,X)                ;6
(1)  380/    C58D :                                             ;STA emu_ptr2,X                 ;4
(1)  380/    C58D :                                             ;INC emu_ptr,X                  ;6
(1)  380/    C58D :                                             ;BCC .skip                              ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 116 - 1/5/2022 11:50:53


(1)  380/    C58D :                                             ;       INC emu_ptr+1,X         ;6
(1)  380/    C58D :                                             ;.skip:
(1)  380/    C58D :                                             ;LDA (emu_ptr,X)                ;6
(1)  380/    C58D :                                             ;STA emu_ptr2+1,X               ;4
(1)  380/    C58D :                                             ;JMP (emu_ptr2,X)               ;6
(1)  380/    C58D :                                             
(1)  380/    C58D :                                             ;Method 2 - 46 cycles
(1)  380/    C58D :                                             ;Jump table must be page aligned!!!
(1)  380/    C58D :                                             ;LDA (emu_PC,X)                 ;6
(1)  380/    C58D :                                             ;STZ emu_ptr+1,X                ;4
(1)  380/    C58D :                                             ;ASL                                    ;2
(1)  380/    C58D :                                             ;ROL emu_ptr+1,X                ;6
(1)  380/    C58D :                                             ;ASL                                    ;2
(1)  380/    C58D :                                             ;ROL emu_ptr+1,X                ;6
(1)  380/    C58D :                                             ;STA emu_ptr,X                  ;4                              
(1)  380/    C58D :                                             ;LDA emu_ptr+1,X                ;4
(1)  380/    C58D :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  380/    C58D :                                             ;STA emu_ptr+1,X                ;4
(1)  380/    C58D :                                             ;JMP (emu_ptr2,X)               ;6
(1)  380/    C58D :                                             
(1)  380/    C58D :                                             ;Method 3 - 30 cycles
(1)  380/    C58D :                                             ;TXA                                                    ;2
(1)  380/    C58D :                                             ;TAY                                                    ;2
(1)  380/    C58D :                                             ;LDA (emu_PC,X)                                 ;6
(1)  380/    C58D :                                             ;ASL                                                    ;2
(1)  380/    C58D :                                             ;BCS upper                                              ;2
(1)  380/    C58D :                                             ;lower:
(1)  380/    C58D :                                             ;       ASL                                                     ;2
(1)  380/    C58D :                                             ;       TAX                                                     ;2
(1)  380/    C58D :                                             ;       BCS upper_lower                         ;2
(1)  380/    C58D :                                             ;       lower_lower:
(1)  380/    C58D :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  380/    C58D :                                             ;       upper_lower:
(1)  380/    C58D :                                             ;               JMP (JUMP_TABLE2,X)
(1)  380/    C58D :                                             ;upper:
(1)  380/    C58D :                                             ;       ASL
(1)  380/    C58D :                                             ;       TAX
(1)  380/    C58D :                                             ;       BCS upper_upper
(1)  380/    C58D :                                             ;       lower_upper:
(1)  380/    C58D :                                             ;               JMP (JUMP_TABLE3,X)
(1)  380/    C58D :                                             ;       upper_upper:
(1)  380/    C58D :                                             ;               JMP (JUMP_TABLE4,X)
(1)  380/    C58D :                                             ;After jump:
(1)  380/    C58D :                                             ;TYA                                                    ;2
(1)  380/    C58D :                                             ;TAX                                                    ;2
(1)  380/    C58D :                                             
(1)  380/    C58D :                                             ;Method 4 - 28 cycles
(1)  380/    C58D :                                             ;LDA (emu_PC,X)                 ;6
(1)  380/    C58D :                                             ;TAY                                    ;2
(1)  380/    C58D :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  380/    C58D :                                             ;PHA                                    ;3
(1)  380/    C58D :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  380/    C58D :                                             ;PHA                                    ;3
(1)  380/    C58D :                                             ;RTS                                    ;6
(1)  380/    C58D :                                             
(1)  380/    C58D :                                             ;Method 5 - 30 cycles
(1)  380/    C58D : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  380/    C58F : A8                                          TAY                                             ;2
(1)  380/    C590 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  380/    C593 : 95 0A                                       STA emu_ptr,X                   ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 117 - 1/5/2022 11:50:53


(1)  380/    C595 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  380/    C598 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  380/    C59A : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  380/    C59D :                                                                     
(1)  381/    C59D :                     
(1)  382/    C59D :                     	;0x4C - JMP ABS
(1)  383/    C59D :                     	JMP_ABS:
(1)  384/    C59D : (MACRO)             		OP_MACRO 76, "JMP", "ABS", "JMP_ABS"
(1)  384/    C59D :                                             ;TODO
(1)  385/    C59D : (MACRO)             		NEXT_MACRO
(1)  385/    C59D :                                             
(1)  385/    C59D :  (MACRO-2)                                  halt
(1)  385/    C59D : 00                                  BRK
(1)  385/    C59E : 00                                  BRK
(1)  385/    C59F :                                             
(1)  385/    C59F :                                             ;Method 1 - 60 cycles
(1)  385/    C59F :                                             ;Jump table must be page aligned!!!
(1)  385/    C59F :                                             ;LDA (emu_PC,X)                 ;6
(1)  385/    C59F :                                             ;ASL                                    ;2
(1)  385/    C59F :                                             ;STA emu_ptr,X                  ;4
(1)  385/    C59F :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  385/    C59F :                                             ;ADC #0                                 ;2
(1)  385/    C59F :                                             ;STA emu_ptr+1,X                ;4
(1)  385/    C59F :                                             ;LDA (emu_ptr,X)                ;6
(1)  385/    C59F :                                             ;STA emu_ptr2,X                 ;4
(1)  385/    C59F :                                             ;INC emu_ptr,X                  ;6
(1)  385/    C59F :                                             ;BCC .skip                              ;2
(1)  385/    C59F :                                             ;       INC emu_ptr+1,X         ;6
(1)  385/    C59F :                                             ;.skip:
(1)  385/    C59F :                                             ;LDA (emu_ptr,X)                ;6
(1)  385/    C59F :                                             ;STA emu_ptr2+1,X               ;4
(1)  385/    C59F :                                             ;JMP (emu_ptr2,X)               ;6
(1)  385/    C59F :                                             
(1)  385/    C59F :                                             ;Method 2 - 46 cycles
(1)  385/    C59F :                                             ;Jump table must be page aligned!!!
(1)  385/    C59F :                                             ;LDA (emu_PC,X)                 ;6
(1)  385/    C59F :                                             ;STZ emu_ptr+1,X                ;4
(1)  385/    C59F :                                             ;ASL                                    ;2
(1)  385/    C59F :                                             ;ROL emu_ptr+1,X                ;6
(1)  385/    C59F :                                             ;ASL                                    ;2
(1)  385/    C59F :                                             ;ROL emu_ptr+1,X                ;6
(1)  385/    C59F :                                             ;STA emu_ptr,X                  ;4                              
(1)  385/    C59F :                                             ;LDA emu_ptr+1,X                ;4
(1)  385/    C59F :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  385/    C59F :                                             ;STA emu_ptr+1,X                ;4
(1)  385/    C59F :                                             ;JMP (emu_ptr2,X)               ;6
(1)  385/    C59F :                                             
(1)  385/    C59F :                                             ;Method 3 - 30 cycles
(1)  385/    C59F :                                             ;TXA                                                    ;2
(1)  385/    C59F :                                             ;TAY                                                    ;2
(1)  385/    C59F :                                             ;LDA (emu_PC,X)                                 ;6
(1)  385/    C59F :                                             ;ASL                                                    ;2
(1)  385/    C59F :                                             ;BCS upper                                              ;2
(1)  385/    C59F :                                             ;lower:
(1)  385/    C59F :                                             ;       ASL                                                     ;2
(1)  385/    C59F :                                             ;       TAX                                                     ;2
(1)  385/    C59F :                                             ;       BCS upper_lower                         ;2
(1)  385/    C59F :                                             ;       lower_lower:
(1)  385/    C59F :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  385/    C59F :                                             ;       upper_lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 118 - 1/5/2022 11:50:53


(1)  385/    C59F :                                             ;               JMP (JUMP_TABLE2,X)
(1)  385/    C59F :                                             ;upper:
(1)  385/    C59F :                                             ;       ASL
(1)  385/    C59F :                                             ;       TAX
(1)  385/    C59F :                                             ;       BCS upper_upper
(1)  385/    C59F :                                             ;       lower_upper:
(1)  385/    C59F :                                             ;               JMP (JUMP_TABLE3,X)
(1)  385/    C59F :                                             ;       upper_upper:
(1)  385/    C59F :                                             ;               JMP (JUMP_TABLE4,X)
(1)  385/    C59F :                                             ;After jump:
(1)  385/    C59F :                                             ;TYA                                                    ;2
(1)  385/    C59F :                                             ;TAX                                                    ;2
(1)  385/    C59F :                                             
(1)  385/    C59F :                                             ;Method 4 - 28 cycles
(1)  385/    C59F :                                             ;LDA (emu_PC,X)                 ;6
(1)  385/    C59F :                                             ;TAY                                    ;2
(1)  385/    C59F :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  385/    C59F :                                             ;PHA                                    ;3
(1)  385/    C59F :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  385/    C59F :                                             ;PHA                                    ;3
(1)  385/    C59F :                                             ;RTS                                    ;6
(1)  385/    C59F :                                             
(1)  385/    C59F :                                             ;Method 5 - 30 cycles
(1)  385/    C59F : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  385/    C5A1 : A8                                          TAY                                             ;2
(1)  385/    C5A2 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  385/    C5A5 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  385/    C5A7 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  385/    C5AA : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  385/    C5AC : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  385/    C5AF :                                                                     
(1)  386/    C5AF :                     
(1)  387/    C5AF :                     	;0x4D - EOR ABS
(1)  388/    C5AF :                     	EOR_ABS:
(1)  389/    C5AF : (MACRO)             		OP_MACRO 77, "EOR", "ABS", "EOR_ABS"
(1)  389/    C5AF :                                             ;TODO
(1)  390/    C5AF : (MACRO)             		NEXT_MACRO
(1)  390/    C5AF :                                             
(1)  390/    C5AF :  (MACRO-2)                                  halt
(1)  390/    C5AF : 00                                  BRK
(1)  390/    C5B0 : 00                                  BRK
(1)  390/    C5B1 :                                             
(1)  390/    C5B1 :                                             ;Method 1 - 60 cycles
(1)  390/    C5B1 :                                             ;Jump table must be page aligned!!!
(1)  390/    C5B1 :                                             ;LDA (emu_PC,X)                 ;6
(1)  390/    C5B1 :                                             ;ASL                                    ;2
(1)  390/    C5B1 :                                             ;STA emu_ptr,X                  ;4
(1)  390/    C5B1 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  390/    C5B1 :                                             ;ADC #0                                 ;2
(1)  390/    C5B1 :                                             ;STA emu_ptr+1,X                ;4
(1)  390/    C5B1 :                                             ;LDA (emu_ptr,X)                ;6
(1)  390/    C5B1 :                                             ;STA emu_ptr2,X                 ;4
(1)  390/    C5B1 :                                             ;INC emu_ptr,X                  ;6
(1)  390/    C5B1 :                                             ;BCC .skip                              ;2
(1)  390/    C5B1 :                                             ;       INC emu_ptr+1,X         ;6
(1)  390/    C5B1 :                                             ;.skip:
(1)  390/    C5B1 :                                             ;LDA (emu_ptr,X)                ;6
(1)  390/    C5B1 :                                             ;STA emu_ptr2+1,X               ;4
(1)  390/    C5B1 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  390/    C5B1 :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 119 - 1/5/2022 11:50:53


(1)  390/    C5B1 :                                             ;Method 2 - 46 cycles
(1)  390/    C5B1 :                                             ;Jump table must be page aligned!!!
(1)  390/    C5B1 :                                             ;LDA (emu_PC,X)                 ;6
(1)  390/    C5B1 :                                             ;STZ emu_ptr+1,X                ;4
(1)  390/    C5B1 :                                             ;ASL                                    ;2
(1)  390/    C5B1 :                                             ;ROL emu_ptr+1,X                ;6
(1)  390/    C5B1 :                                             ;ASL                                    ;2
(1)  390/    C5B1 :                                             ;ROL emu_ptr+1,X                ;6
(1)  390/    C5B1 :                                             ;STA emu_ptr,X                  ;4                              
(1)  390/    C5B1 :                                             ;LDA emu_ptr+1,X                ;4
(1)  390/    C5B1 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  390/    C5B1 :                                             ;STA emu_ptr+1,X                ;4
(1)  390/    C5B1 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  390/    C5B1 :                                             
(1)  390/    C5B1 :                                             ;Method 3 - 30 cycles
(1)  390/    C5B1 :                                             ;TXA                                                    ;2
(1)  390/    C5B1 :                                             ;TAY                                                    ;2
(1)  390/    C5B1 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  390/    C5B1 :                                             ;ASL                                                    ;2
(1)  390/    C5B1 :                                             ;BCS upper                                              ;2
(1)  390/    C5B1 :                                             ;lower:
(1)  390/    C5B1 :                                             ;       ASL                                                     ;2
(1)  390/    C5B1 :                                             ;       TAX                                                     ;2
(1)  390/    C5B1 :                                             ;       BCS upper_lower                         ;2
(1)  390/    C5B1 :                                             ;       lower_lower:
(1)  390/    C5B1 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  390/    C5B1 :                                             ;       upper_lower:
(1)  390/    C5B1 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  390/    C5B1 :                                             ;upper:
(1)  390/    C5B1 :                                             ;       ASL
(1)  390/    C5B1 :                                             ;       TAX
(1)  390/    C5B1 :                                             ;       BCS upper_upper
(1)  390/    C5B1 :                                             ;       lower_upper:
(1)  390/    C5B1 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  390/    C5B1 :                                             ;       upper_upper:
(1)  390/    C5B1 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  390/    C5B1 :                                             ;After jump:
(1)  390/    C5B1 :                                             ;TYA                                                    ;2
(1)  390/    C5B1 :                                             ;TAX                                                    ;2
(1)  390/    C5B1 :                                             
(1)  390/    C5B1 :                                             ;Method 4 - 28 cycles
(1)  390/    C5B1 :                                             ;LDA (emu_PC,X)                 ;6
(1)  390/    C5B1 :                                             ;TAY                                    ;2
(1)  390/    C5B1 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  390/    C5B1 :                                             ;PHA                                    ;3
(1)  390/    C5B1 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  390/    C5B1 :                                             ;PHA                                    ;3
(1)  390/    C5B1 :                                             ;RTS                                    ;6
(1)  390/    C5B1 :                                             
(1)  390/    C5B1 :                                             ;Method 5 - 30 cycles
(1)  390/    C5B1 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  390/    C5B3 : A8                                          TAY                                             ;2
(1)  390/    C5B4 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  390/    C5B7 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  390/    C5B9 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  390/    C5BC : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  390/    C5BE : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  390/    C5C1 :                                                                     
(1)  391/    C5C1 :                     
(1)  392/    C5C1 :                     	;0x4E - LSR ABS
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 120 - 1/5/2022 11:50:53


(1)  393/    C5C1 :                     	LSR_ABS:
(1)  394/    C5C1 : (MACRO)             		OP_MACRO 78, "LSR", "ABS", "LSR_ABS"
(1)  394/    C5C1 :                                             ;TODO
(1)  395/    C5C1 : (MACRO)             		NEXT_MACRO
(1)  395/    C5C1 :                                             
(1)  395/    C5C1 :  (MACRO-2)                                  halt
(1)  395/    C5C1 : 00                                  BRK
(1)  395/    C5C2 : 00                                  BRK
(1)  395/    C5C3 :                                             
(1)  395/    C5C3 :                                             ;Method 1 - 60 cycles
(1)  395/    C5C3 :                                             ;Jump table must be page aligned!!!
(1)  395/    C5C3 :                                             ;LDA (emu_PC,X)                 ;6
(1)  395/    C5C3 :                                             ;ASL                                    ;2
(1)  395/    C5C3 :                                             ;STA emu_ptr,X                  ;4
(1)  395/    C5C3 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  395/    C5C3 :                                             ;ADC #0                                 ;2
(1)  395/    C5C3 :                                             ;STA emu_ptr+1,X                ;4
(1)  395/    C5C3 :                                             ;LDA (emu_ptr,X)                ;6
(1)  395/    C5C3 :                                             ;STA emu_ptr2,X                 ;4
(1)  395/    C5C3 :                                             ;INC emu_ptr,X                  ;6
(1)  395/    C5C3 :                                             ;BCC .skip                              ;2
(1)  395/    C5C3 :                                             ;       INC emu_ptr+1,X         ;6
(1)  395/    C5C3 :                                             ;.skip:
(1)  395/    C5C3 :                                             ;LDA (emu_ptr,X)                ;6
(1)  395/    C5C3 :                                             ;STA emu_ptr2+1,X               ;4
(1)  395/    C5C3 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  395/    C5C3 :                                             
(1)  395/    C5C3 :                                             ;Method 2 - 46 cycles
(1)  395/    C5C3 :                                             ;Jump table must be page aligned!!!
(1)  395/    C5C3 :                                             ;LDA (emu_PC,X)                 ;6
(1)  395/    C5C3 :                                             ;STZ emu_ptr+1,X                ;4
(1)  395/    C5C3 :                                             ;ASL                                    ;2
(1)  395/    C5C3 :                                             ;ROL emu_ptr+1,X                ;6
(1)  395/    C5C3 :                                             ;ASL                                    ;2
(1)  395/    C5C3 :                                             ;ROL emu_ptr+1,X                ;6
(1)  395/    C5C3 :                                             ;STA emu_ptr,X                  ;4                              
(1)  395/    C5C3 :                                             ;LDA emu_ptr+1,X                ;4
(1)  395/    C5C3 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  395/    C5C3 :                                             ;STA emu_ptr+1,X                ;4
(1)  395/    C5C3 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  395/    C5C3 :                                             
(1)  395/    C5C3 :                                             ;Method 3 - 30 cycles
(1)  395/    C5C3 :                                             ;TXA                                                    ;2
(1)  395/    C5C3 :                                             ;TAY                                                    ;2
(1)  395/    C5C3 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  395/    C5C3 :                                             ;ASL                                                    ;2
(1)  395/    C5C3 :                                             ;BCS upper                                              ;2
(1)  395/    C5C3 :                                             ;lower:
(1)  395/    C5C3 :                                             ;       ASL                                                     ;2
(1)  395/    C5C3 :                                             ;       TAX                                                     ;2
(1)  395/    C5C3 :                                             ;       BCS upper_lower                         ;2
(1)  395/    C5C3 :                                             ;       lower_lower:
(1)  395/    C5C3 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  395/    C5C3 :                                             ;       upper_lower:
(1)  395/    C5C3 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  395/    C5C3 :                                             ;upper:
(1)  395/    C5C3 :                                             ;       ASL
(1)  395/    C5C3 :                                             ;       TAX
(1)  395/    C5C3 :                                             ;       BCS upper_upper
(1)  395/    C5C3 :                                             ;       lower_upper:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 121 - 1/5/2022 11:50:53


(1)  395/    C5C3 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  395/    C5C3 :                                             ;       upper_upper:
(1)  395/    C5C3 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  395/    C5C3 :                                             ;After jump:
(1)  395/    C5C3 :                                             ;TYA                                                    ;2
(1)  395/    C5C3 :                                             ;TAX                                                    ;2
(1)  395/    C5C3 :                                             
(1)  395/    C5C3 :                                             ;Method 4 - 28 cycles
(1)  395/    C5C3 :                                             ;LDA (emu_PC,X)                 ;6
(1)  395/    C5C3 :                                             ;TAY                                    ;2
(1)  395/    C5C3 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  395/    C5C3 :                                             ;PHA                                    ;3
(1)  395/    C5C3 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  395/    C5C3 :                                             ;PHA                                    ;3
(1)  395/    C5C3 :                                             ;RTS                                    ;6
(1)  395/    C5C3 :                                             
(1)  395/    C5C3 :                                             ;Method 5 - 30 cycles
(1)  395/    C5C3 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  395/    C5C5 : A8                                          TAY                                             ;2
(1)  395/    C5C6 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  395/    C5C9 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  395/    C5CB : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  395/    C5CE : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  395/    C5D0 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  395/    C5D3 :                                                                     
(1)  396/    C5D3 :                     
(1)  397/    C5D3 :                     	;0x4F - NOP
(1)  398/    C5D3 :                     	NOP_0x4F:
(1)  399/    C5D3 : (MACRO)             		OP_MACRO 79, "NOP", "IMP", "NOP_0x4F"
(1)  399/    C5D3 :                                             ;TODO
(1)  400/    C5D3 : (MACRO)             		NEXT_MACRO
(1)  400/    C5D3 :                                             
(1)  400/    C5D3 :  (MACRO-2)                                  halt
(1)  400/    C5D3 : 00                                  BRK
(1)  400/    C5D4 : 00                                  BRK
(1)  400/    C5D5 :                                             
(1)  400/    C5D5 :                                             ;Method 1 - 60 cycles
(1)  400/    C5D5 :                                             ;Jump table must be page aligned!!!
(1)  400/    C5D5 :                                             ;LDA (emu_PC,X)                 ;6
(1)  400/    C5D5 :                                             ;ASL                                    ;2
(1)  400/    C5D5 :                                             ;STA emu_ptr,X                  ;4
(1)  400/    C5D5 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  400/    C5D5 :                                             ;ADC #0                                 ;2
(1)  400/    C5D5 :                                             ;STA emu_ptr+1,X                ;4
(1)  400/    C5D5 :                                             ;LDA (emu_ptr,X)                ;6
(1)  400/    C5D5 :                                             ;STA emu_ptr2,X                 ;4
(1)  400/    C5D5 :                                             ;INC emu_ptr,X                  ;6
(1)  400/    C5D5 :                                             ;BCC .skip                              ;2
(1)  400/    C5D5 :                                             ;       INC emu_ptr+1,X         ;6
(1)  400/    C5D5 :                                             ;.skip:
(1)  400/    C5D5 :                                             ;LDA (emu_ptr,X)                ;6
(1)  400/    C5D5 :                                             ;STA emu_ptr2+1,X               ;4
(1)  400/    C5D5 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  400/    C5D5 :                                             
(1)  400/    C5D5 :                                             ;Method 2 - 46 cycles
(1)  400/    C5D5 :                                             ;Jump table must be page aligned!!!
(1)  400/    C5D5 :                                             ;LDA (emu_PC,X)                 ;6
(1)  400/    C5D5 :                                             ;STZ emu_ptr+1,X                ;4
(1)  400/    C5D5 :                                             ;ASL                                    ;2
(1)  400/    C5D5 :                                             ;ROL emu_ptr+1,X                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 122 - 1/5/2022 11:50:53


(1)  400/    C5D5 :                                             ;ASL                                    ;2
(1)  400/    C5D5 :                                             ;ROL emu_ptr+1,X                ;6
(1)  400/    C5D5 :                                             ;STA emu_ptr,X                  ;4                              
(1)  400/    C5D5 :                                             ;LDA emu_ptr+1,X                ;4
(1)  400/    C5D5 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  400/    C5D5 :                                             ;STA emu_ptr+1,X                ;4
(1)  400/    C5D5 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  400/    C5D5 :                                             
(1)  400/    C5D5 :                                             ;Method 3 - 30 cycles
(1)  400/    C5D5 :                                             ;TXA                                                    ;2
(1)  400/    C5D5 :                                             ;TAY                                                    ;2
(1)  400/    C5D5 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  400/    C5D5 :                                             ;ASL                                                    ;2
(1)  400/    C5D5 :                                             ;BCS upper                                              ;2
(1)  400/    C5D5 :                                             ;lower:
(1)  400/    C5D5 :                                             ;       ASL                                                     ;2
(1)  400/    C5D5 :                                             ;       TAX                                                     ;2
(1)  400/    C5D5 :                                             ;       BCS upper_lower                         ;2
(1)  400/    C5D5 :                                             ;       lower_lower:
(1)  400/    C5D5 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  400/    C5D5 :                                             ;       upper_lower:
(1)  400/    C5D5 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  400/    C5D5 :                                             ;upper:
(1)  400/    C5D5 :                                             ;       ASL
(1)  400/    C5D5 :                                             ;       TAX
(1)  400/    C5D5 :                                             ;       BCS upper_upper
(1)  400/    C5D5 :                                             ;       lower_upper:
(1)  400/    C5D5 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  400/    C5D5 :                                             ;       upper_upper:
(1)  400/    C5D5 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  400/    C5D5 :                                             ;After jump:
(1)  400/    C5D5 :                                             ;TYA                                                    ;2
(1)  400/    C5D5 :                                             ;TAX                                                    ;2
(1)  400/    C5D5 :                                             
(1)  400/    C5D5 :                                             ;Method 4 - 28 cycles
(1)  400/    C5D5 :                                             ;LDA (emu_PC,X)                 ;6
(1)  400/    C5D5 :                                             ;TAY                                    ;2
(1)  400/    C5D5 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  400/    C5D5 :                                             ;PHA                                    ;3
(1)  400/    C5D5 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  400/    C5D5 :                                             ;PHA                                    ;3
(1)  400/    C5D5 :                                             ;RTS                                    ;6
(1)  400/    C5D5 :                                             
(1)  400/    C5D5 :                                             ;Method 5 - 30 cycles
(1)  400/    C5D5 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  400/    C5D7 : A8                                          TAY                                             ;2
(1)  400/    C5D8 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  400/    C5DB : 95 0A                                       STA emu_ptr,X                   ;4
(1)  400/    C5DD : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  400/    C5E0 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  400/    C5E2 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  400/    C5E5 :                                                                     
(1)  401/    C5E5 :                     
(1)  402/    C5E5 :                     	;0x50 - BVC REL
(1)  403/    C5E5 :                     	BVC_REL:
(1)  404/    C5E5 : (MACRO)             		OP_MACRO 80, "BVC", "REL", "BVC_REL"
(1)  404/    C5E5 :                                             ;TODO
(1)  405/    C5E5 : (MACRO)             		NEXT_MACRO
(1)  405/    C5E5 :                                             
(1)  405/    C5E5 :  (MACRO-2)                                  halt
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 123 - 1/5/2022 11:50:53


(1)  405/    C5E5 : 00                                  BRK
(1)  405/    C5E6 : 00                                  BRK
(1)  405/    C5E7 :                                             
(1)  405/    C5E7 :                                             ;Method 1 - 60 cycles
(1)  405/    C5E7 :                                             ;Jump table must be page aligned!!!
(1)  405/    C5E7 :                                             ;LDA (emu_PC,X)                 ;6
(1)  405/    C5E7 :                                             ;ASL                                    ;2
(1)  405/    C5E7 :                                             ;STA emu_ptr,X                  ;4
(1)  405/    C5E7 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  405/    C5E7 :                                             ;ADC #0                                 ;2
(1)  405/    C5E7 :                                             ;STA emu_ptr+1,X                ;4
(1)  405/    C5E7 :                                             ;LDA (emu_ptr,X)                ;6
(1)  405/    C5E7 :                                             ;STA emu_ptr2,X                 ;4
(1)  405/    C5E7 :                                             ;INC emu_ptr,X                  ;6
(1)  405/    C5E7 :                                             ;BCC .skip                              ;2
(1)  405/    C5E7 :                                             ;       INC emu_ptr+1,X         ;6
(1)  405/    C5E7 :                                             ;.skip:
(1)  405/    C5E7 :                                             ;LDA (emu_ptr,X)                ;6
(1)  405/    C5E7 :                                             ;STA emu_ptr2+1,X               ;4
(1)  405/    C5E7 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  405/    C5E7 :                                             
(1)  405/    C5E7 :                                             ;Method 2 - 46 cycles
(1)  405/    C5E7 :                                             ;Jump table must be page aligned!!!
(1)  405/    C5E7 :                                             ;LDA (emu_PC,X)                 ;6
(1)  405/    C5E7 :                                             ;STZ emu_ptr+1,X                ;4
(1)  405/    C5E7 :                                             ;ASL                                    ;2
(1)  405/    C5E7 :                                             ;ROL emu_ptr+1,X                ;6
(1)  405/    C5E7 :                                             ;ASL                                    ;2
(1)  405/    C5E7 :                                             ;ROL emu_ptr+1,X                ;6
(1)  405/    C5E7 :                                             ;STA emu_ptr,X                  ;4                              
(1)  405/    C5E7 :                                             ;LDA emu_ptr+1,X                ;4
(1)  405/    C5E7 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  405/    C5E7 :                                             ;STA emu_ptr+1,X                ;4
(1)  405/    C5E7 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  405/    C5E7 :                                             
(1)  405/    C5E7 :                                             ;Method 3 - 30 cycles
(1)  405/    C5E7 :                                             ;TXA                                                    ;2
(1)  405/    C5E7 :                                             ;TAY                                                    ;2
(1)  405/    C5E7 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  405/    C5E7 :                                             ;ASL                                                    ;2
(1)  405/    C5E7 :                                             ;BCS upper                                              ;2
(1)  405/    C5E7 :                                             ;lower:
(1)  405/    C5E7 :                                             ;       ASL                                                     ;2
(1)  405/    C5E7 :                                             ;       TAX                                                     ;2
(1)  405/    C5E7 :                                             ;       BCS upper_lower                         ;2
(1)  405/    C5E7 :                                             ;       lower_lower:
(1)  405/    C5E7 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  405/    C5E7 :                                             ;       upper_lower:
(1)  405/    C5E7 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  405/    C5E7 :                                             ;upper:
(1)  405/    C5E7 :                                             ;       ASL
(1)  405/    C5E7 :                                             ;       TAX
(1)  405/    C5E7 :                                             ;       BCS upper_upper
(1)  405/    C5E7 :                                             ;       lower_upper:
(1)  405/    C5E7 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  405/    C5E7 :                                             ;       upper_upper:
(1)  405/    C5E7 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  405/    C5E7 :                                             ;After jump:
(1)  405/    C5E7 :                                             ;TYA                                                    ;2
(1)  405/    C5E7 :                                             ;TAX                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 124 - 1/5/2022 11:50:53


(1)  405/    C5E7 :                                             
(1)  405/    C5E7 :                                             ;Method 4 - 28 cycles
(1)  405/    C5E7 :                                             ;LDA (emu_PC,X)                 ;6
(1)  405/    C5E7 :                                             ;TAY                                    ;2
(1)  405/    C5E7 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  405/    C5E7 :                                             ;PHA                                    ;3
(1)  405/    C5E7 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  405/    C5E7 :                                             ;PHA                                    ;3
(1)  405/    C5E7 :                                             ;RTS                                    ;6
(1)  405/    C5E7 :                                             
(1)  405/    C5E7 :                                             ;Method 5 - 30 cycles
(1)  405/    C5E7 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  405/    C5E9 : A8                                          TAY                                             ;2
(1)  405/    C5EA : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  405/    C5ED : 95 0A                                       STA emu_ptr,X                   ;4
(1)  405/    C5EF : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  405/    C5F2 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  405/    C5F4 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  405/    C5F7 :                                                                     
(1)  406/    C5F7 :                     
(1)  407/    C5F7 :                     	;0x51 - EOR IY
(1)  408/    C5F7 :                     	EOR_IY:
(1)  409/    C5F7 : (MACRO)             		OP_MACRO 81, "EOR", "IY", "EOR_IY"
(1)  409/    C5F7 :                                             ;TODO
(1)  410/    C5F7 : (MACRO)             		NEXT_MACRO
(1)  410/    C5F7 :                                             
(1)  410/    C5F7 :  (MACRO-2)                                  halt
(1)  410/    C5F7 : 00                                  BRK
(1)  410/    C5F8 : 00                                  BRK
(1)  410/    C5F9 :                                             
(1)  410/    C5F9 :                                             ;Method 1 - 60 cycles
(1)  410/    C5F9 :                                             ;Jump table must be page aligned!!!
(1)  410/    C5F9 :                                             ;LDA (emu_PC,X)                 ;6
(1)  410/    C5F9 :                                             ;ASL                                    ;2
(1)  410/    C5F9 :                                             ;STA emu_ptr,X                  ;4
(1)  410/    C5F9 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  410/    C5F9 :                                             ;ADC #0                                 ;2
(1)  410/    C5F9 :                                             ;STA emu_ptr+1,X                ;4
(1)  410/    C5F9 :                                             ;LDA (emu_ptr,X)                ;6
(1)  410/    C5F9 :                                             ;STA emu_ptr2,X                 ;4
(1)  410/    C5F9 :                                             ;INC emu_ptr,X                  ;6
(1)  410/    C5F9 :                                             ;BCC .skip                              ;2
(1)  410/    C5F9 :                                             ;       INC emu_ptr+1,X         ;6
(1)  410/    C5F9 :                                             ;.skip:
(1)  410/    C5F9 :                                             ;LDA (emu_ptr,X)                ;6
(1)  410/    C5F9 :                                             ;STA emu_ptr2+1,X               ;4
(1)  410/    C5F9 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  410/    C5F9 :                                             
(1)  410/    C5F9 :                                             ;Method 2 - 46 cycles
(1)  410/    C5F9 :                                             ;Jump table must be page aligned!!!
(1)  410/    C5F9 :                                             ;LDA (emu_PC,X)                 ;6
(1)  410/    C5F9 :                                             ;STZ emu_ptr+1,X                ;4
(1)  410/    C5F9 :                                             ;ASL                                    ;2
(1)  410/    C5F9 :                                             ;ROL emu_ptr+1,X                ;6
(1)  410/    C5F9 :                                             ;ASL                                    ;2
(1)  410/    C5F9 :                                             ;ROL emu_ptr+1,X                ;6
(1)  410/    C5F9 :                                             ;STA emu_ptr,X                  ;4                              
(1)  410/    C5F9 :                                             ;LDA emu_ptr+1,X                ;4
(1)  410/    C5F9 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  410/    C5F9 :                                             ;STA emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 125 - 1/5/2022 11:50:53


(1)  410/    C5F9 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  410/    C5F9 :                                             
(1)  410/    C5F9 :                                             ;Method 3 - 30 cycles
(1)  410/    C5F9 :                                             ;TXA                                                    ;2
(1)  410/    C5F9 :                                             ;TAY                                                    ;2
(1)  410/    C5F9 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  410/    C5F9 :                                             ;ASL                                                    ;2
(1)  410/    C5F9 :                                             ;BCS upper                                              ;2
(1)  410/    C5F9 :                                             ;lower:
(1)  410/    C5F9 :                                             ;       ASL                                                     ;2
(1)  410/    C5F9 :                                             ;       TAX                                                     ;2
(1)  410/    C5F9 :                                             ;       BCS upper_lower                         ;2
(1)  410/    C5F9 :                                             ;       lower_lower:
(1)  410/    C5F9 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  410/    C5F9 :                                             ;       upper_lower:
(1)  410/    C5F9 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  410/    C5F9 :                                             ;upper:
(1)  410/    C5F9 :                                             ;       ASL
(1)  410/    C5F9 :                                             ;       TAX
(1)  410/    C5F9 :                                             ;       BCS upper_upper
(1)  410/    C5F9 :                                             ;       lower_upper:
(1)  410/    C5F9 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  410/    C5F9 :                                             ;       upper_upper:
(1)  410/    C5F9 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  410/    C5F9 :                                             ;After jump:
(1)  410/    C5F9 :                                             ;TYA                                                    ;2
(1)  410/    C5F9 :                                             ;TAX                                                    ;2
(1)  410/    C5F9 :                                             
(1)  410/    C5F9 :                                             ;Method 4 - 28 cycles
(1)  410/    C5F9 :                                             ;LDA (emu_PC,X)                 ;6
(1)  410/    C5F9 :                                             ;TAY                                    ;2
(1)  410/    C5F9 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  410/    C5F9 :                                             ;PHA                                    ;3
(1)  410/    C5F9 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  410/    C5F9 :                                             ;PHA                                    ;3
(1)  410/    C5F9 :                                             ;RTS                                    ;6
(1)  410/    C5F9 :                                             
(1)  410/    C5F9 :                                             ;Method 5 - 30 cycles
(1)  410/    C5F9 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  410/    C5FB : A8                                          TAY                                             ;2
(1)  410/    C5FC : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  410/    C5FF : 95 0A                                       STA emu_ptr,X                   ;4
(1)  410/    C601 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  410/    C604 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  410/    C606 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  410/    C609 :                                                                     
(1)  411/    C609 :                     
(1)  412/    C609 :                     	;0x52 - NOP
(1)  413/    C609 :                     	NOP_0x52:
(1)  414/    C609 : (MACRO)             		OP_MACRO 82, "NOP", "IMP", "NOP_0x52"
(1)  414/    C609 :                                             ;TODO
(1)  415/    C609 : (MACRO)             		NEXT_MACRO
(1)  415/    C609 :                                             
(1)  415/    C609 :  (MACRO-2)                                  halt
(1)  415/    C609 : 00                                  BRK
(1)  415/    C60A : 00                                  BRK
(1)  415/    C60B :                                             
(1)  415/    C60B :                                             ;Method 1 - 60 cycles
(1)  415/    C60B :                                             ;Jump table must be page aligned!!!
(1)  415/    C60B :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 126 - 1/5/2022 11:50:53


(1)  415/    C60B :                                             ;ASL                                    ;2
(1)  415/    C60B :                                             ;STA emu_ptr,X                  ;4
(1)  415/    C60B :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  415/    C60B :                                             ;ADC #0                                 ;2
(1)  415/    C60B :                                             ;STA emu_ptr+1,X                ;4
(1)  415/    C60B :                                             ;LDA (emu_ptr,X)                ;6
(1)  415/    C60B :                                             ;STA emu_ptr2,X                 ;4
(1)  415/    C60B :                                             ;INC emu_ptr,X                  ;6
(1)  415/    C60B :                                             ;BCC .skip                              ;2
(1)  415/    C60B :                                             ;       INC emu_ptr+1,X         ;6
(1)  415/    C60B :                                             ;.skip:
(1)  415/    C60B :                                             ;LDA (emu_ptr,X)                ;6
(1)  415/    C60B :                                             ;STA emu_ptr2+1,X               ;4
(1)  415/    C60B :                                             ;JMP (emu_ptr2,X)               ;6
(1)  415/    C60B :                                             
(1)  415/    C60B :                                             ;Method 2 - 46 cycles
(1)  415/    C60B :                                             ;Jump table must be page aligned!!!
(1)  415/    C60B :                                             ;LDA (emu_PC,X)                 ;6
(1)  415/    C60B :                                             ;STZ emu_ptr+1,X                ;4
(1)  415/    C60B :                                             ;ASL                                    ;2
(1)  415/    C60B :                                             ;ROL emu_ptr+1,X                ;6
(1)  415/    C60B :                                             ;ASL                                    ;2
(1)  415/    C60B :                                             ;ROL emu_ptr+1,X                ;6
(1)  415/    C60B :                                             ;STA emu_ptr,X                  ;4                              
(1)  415/    C60B :                                             ;LDA emu_ptr+1,X                ;4
(1)  415/    C60B :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  415/    C60B :                                             ;STA emu_ptr+1,X                ;4
(1)  415/    C60B :                                             ;JMP (emu_ptr2,X)               ;6
(1)  415/    C60B :                                             
(1)  415/    C60B :                                             ;Method 3 - 30 cycles
(1)  415/    C60B :                                             ;TXA                                                    ;2
(1)  415/    C60B :                                             ;TAY                                                    ;2
(1)  415/    C60B :                                             ;LDA (emu_PC,X)                                 ;6
(1)  415/    C60B :                                             ;ASL                                                    ;2
(1)  415/    C60B :                                             ;BCS upper                                              ;2
(1)  415/    C60B :                                             ;lower:
(1)  415/    C60B :                                             ;       ASL                                                     ;2
(1)  415/    C60B :                                             ;       TAX                                                     ;2
(1)  415/    C60B :                                             ;       BCS upper_lower                         ;2
(1)  415/    C60B :                                             ;       lower_lower:
(1)  415/    C60B :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  415/    C60B :                                             ;       upper_lower:
(1)  415/    C60B :                                             ;               JMP (JUMP_TABLE2,X)
(1)  415/    C60B :                                             ;upper:
(1)  415/    C60B :                                             ;       ASL
(1)  415/    C60B :                                             ;       TAX
(1)  415/    C60B :                                             ;       BCS upper_upper
(1)  415/    C60B :                                             ;       lower_upper:
(1)  415/    C60B :                                             ;               JMP (JUMP_TABLE3,X)
(1)  415/    C60B :                                             ;       upper_upper:
(1)  415/    C60B :                                             ;               JMP (JUMP_TABLE4,X)
(1)  415/    C60B :                                             ;After jump:
(1)  415/    C60B :                                             ;TYA                                                    ;2
(1)  415/    C60B :                                             ;TAX                                                    ;2
(1)  415/    C60B :                                             
(1)  415/    C60B :                                             ;Method 4 - 28 cycles
(1)  415/    C60B :                                             ;LDA (emu_PC,X)                 ;6
(1)  415/    C60B :                                             ;TAY                                    ;2
(1)  415/    C60B :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  415/    C60B :                                             ;PHA                                    ;3
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 127 - 1/5/2022 11:50:53


(1)  415/    C60B :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  415/    C60B :                                             ;PHA                                    ;3
(1)  415/    C60B :                                             ;RTS                                    ;6
(1)  415/    C60B :                                             
(1)  415/    C60B :                                             ;Method 5 - 30 cycles
(1)  415/    C60B : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  415/    C60D : A8                                          TAY                                             ;2
(1)  415/    C60E : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  415/    C611 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  415/    C613 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  415/    C616 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  415/    C618 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  415/    C61B :                                                                     
(1)  416/    C61B :                     
(1)  417/    C61B :                     	;0x53 - NOP
(1)  418/    C61B :                     	NOP_0x53:
(1)  419/    C61B : (MACRO)             		OP_MACRO 83, "NOP", "IMP", "NOP_0x53"
(1)  419/    C61B :                                             ;TODO
(1)  420/    C61B : (MACRO)             		NEXT_MACRO
(1)  420/    C61B :                                             
(1)  420/    C61B :  (MACRO-2)                                  halt
(1)  420/    C61B : 00                                  BRK
(1)  420/    C61C : 00                                  BRK
(1)  420/    C61D :                                             
(1)  420/    C61D :                                             ;Method 1 - 60 cycles
(1)  420/    C61D :                                             ;Jump table must be page aligned!!!
(1)  420/    C61D :                                             ;LDA (emu_PC,X)                 ;6
(1)  420/    C61D :                                             ;ASL                                    ;2
(1)  420/    C61D :                                             ;STA emu_ptr,X                  ;4
(1)  420/    C61D :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  420/    C61D :                                             ;ADC #0                                 ;2
(1)  420/    C61D :                                             ;STA emu_ptr+1,X                ;4
(1)  420/    C61D :                                             ;LDA (emu_ptr,X)                ;6
(1)  420/    C61D :                                             ;STA emu_ptr2,X                 ;4
(1)  420/    C61D :                                             ;INC emu_ptr,X                  ;6
(1)  420/    C61D :                                             ;BCC .skip                              ;2
(1)  420/    C61D :                                             ;       INC emu_ptr+1,X         ;6
(1)  420/    C61D :                                             ;.skip:
(1)  420/    C61D :                                             ;LDA (emu_ptr,X)                ;6
(1)  420/    C61D :                                             ;STA emu_ptr2+1,X               ;4
(1)  420/    C61D :                                             ;JMP (emu_ptr2,X)               ;6
(1)  420/    C61D :                                             
(1)  420/    C61D :                                             ;Method 2 - 46 cycles
(1)  420/    C61D :                                             ;Jump table must be page aligned!!!
(1)  420/    C61D :                                             ;LDA (emu_PC,X)                 ;6
(1)  420/    C61D :                                             ;STZ emu_ptr+1,X                ;4
(1)  420/    C61D :                                             ;ASL                                    ;2
(1)  420/    C61D :                                             ;ROL emu_ptr+1,X                ;6
(1)  420/    C61D :                                             ;ASL                                    ;2
(1)  420/    C61D :                                             ;ROL emu_ptr+1,X                ;6
(1)  420/    C61D :                                             ;STA emu_ptr,X                  ;4                              
(1)  420/    C61D :                                             ;LDA emu_ptr+1,X                ;4
(1)  420/    C61D :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  420/    C61D :                                             ;STA emu_ptr+1,X                ;4
(1)  420/    C61D :                                             ;JMP (emu_ptr2,X)               ;6
(1)  420/    C61D :                                             
(1)  420/    C61D :                                             ;Method 3 - 30 cycles
(1)  420/    C61D :                                             ;TXA                                                    ;2
(1)  420/    C61D :                                             ;TAY                                                    ;2
(1)  420/    C61D :                                             ;LDA (emu_PC,X)                                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 128 - 1/5/2022 11:50:53


(1)  420/    C61D :                                             ;ASL                                                    ;2
(1)  420/    C61D :                                             ;BCS upper                                              ;2
(1)  420/    C61D :                                             ;lower:
(1)  420/    C61D :                                             ;       ASL                                                     ;2
(1)  420/    C61D :                                             ;       TAX                                                     ;2
(1)  420/    C61D :                                             ;       BCS upper_lower                         ;2
(1)  420/    C61D :                                             ;       lower_lower:
(1)  420/    C61D :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  420/    C61D :                                             ;       upper_lower:
(1)  420/    C61D :                                             ;               JMP (JUMP_TABLE2,X)
(1)  420/    C61D :                                             ;upper:
(1)  420/    C61D :                                             ;       ASL
(1)  420/    C61D :                                             ;       TAX
(1)  420/    C61D :                                             ;       BCS upper_upper
(1)  420/    C61D :                                             ;       lower_upper:
(1)  420/    C61D :                                             ;               JMP (JUMP_TABLE3,X)
(1)  420/    C61D :                                             ;       upper_upper:
(1)  420/    C61D :                                             ;               JMP (JUMP_TABLE4,X)
(1)  420/    C61D :                                             ;After jump:
(1)  420/    C61D :                                             ;TYA                                                    ;2
(1)  420/    C61D :                                             ;TAX                                                    ;2
(1)  420/    C61D :                                             
(1)  420/    C61D :                                             ;Method 4 - 28 cycles
(1)  420/    C61D :                                             ;LDA (emu_PC,X)                 ;6
(1)  420/    C61D :                                             ;TAY                                    ;2
(1)  420/    C61D :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  420/    C61D :                                             ;PHA                                    ;3
(1)  420/    C61D :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  420/    C61D :                                             ;PHA                                    ;3
(1)  420/    C61D :                                             ;RTS                                    ;6
(1)  420/    C61D :                                             
(1)  420/    C61D :                                             ;Method 5 - 30 cycles
(1)  420/    C61D : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  420/    C61F : A8                                          TAY                                             ;2
(1)  420/    C620 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  420/    C623 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  420/    C625 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  420/    C628 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  420/    C62A : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  420/    C62D :                                                                     
(1)  421/    C62D :                     
(1)  422/    C62D :                     	;0x54 - NOP
(1)  423/    C62D :                     	NOP_0x54:
(1)  424/    C62D : (MACRO)             		OP_MACRO 84, "NOP", "IMP", "NOP_0x54"
(1)  424/    C62D :                                             ;TODO
(1)  425/    C62D : (MACRO)             		NEXT_MACRO
(1)  425/    C62D :                                             
(1)  425/    C62D :  (MACRO-2)                                  halt
(1)  425/    C62D : 00                                  BRK
(1)  425/    C62E : 00                                  BRK
(1)  425/    C62F :                                             
(1)  425/    C62F :                                             ;Method 1 - 60 cycles
(1)  425/    C62F :                                             ;Jump table must be page aligned!!!
(1)  425/    C62F :                                             ;LDA (emu_PC,X)                 ;6
(1)  425/    C62F :                                             ;ASL                                    ;2
(1)  425/    C62F :                                             ;STA emu_ptr,X                  ;4
(1)  425/    C62F :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  425/    C62F :                                             ;ADC #0                                 ;2
(1)  425/    C62F :                                             ;STA emu_ptr+1,X                ;4
(1)  425/    C62F :                                             ;LDA (emu_ptr,X)                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 129 - 1/5/2022 11:50:53


(1)  425/    C62F :                                             ;STA emu_ptr2,X                 ;4
(1)  425/    C62F :                                             ;INC emu_ptr,X                  ;6
(1)  425/    C62F :                                             ;BCC .skip                              ;2
(1)  425/    C62F :                                             ;       INC emu_ptr+1,X         ;6
(1)  425/    C62F :                                             ;.skip:
(1)  425/    C62F :                                             ;LDA (emu_ptr,X)                ;6
(1)  425/    C62F :                                             ;STA emu_ptr2+1,X               ;4
(1)  425/    C62F :                                             ;JMP (emu_ptr2,X)               ;6
(1)  425/    C62F :                                             
(1)  425/    C62F :                                             ;Method 2 - 46 cycles
(1)  425/    C62F :                                             ;Jump table must be page aligned!!!
(1)  425/    C62F :                                             ;LDA (emu_PC,X)                 ;6
(1)  425/    C62F :                                             ;STZ emu_ptr+1,X                ;4
(1)  425/    C62F :                                             ;ASL                                    ;2
(1)  425/    C62F :                                             ;ROL emu_ptr+1,X                ;6
(1)  425/    C62F :                                             ;ASL                                    ;2
(1)  425/    C62F :                                             ;ROL emu_ptr+1,X                ;6
(1)  425/    C62F :                                             ;STA emu_ptr,X                  ;4                              
(1)  425/    C62F :                                             ;LDA emu_ptr+1,X                ;4
(1)  425/    C62F :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  425/    C62F :                                             ;STA emu_ptr+1,X                ;4
(1)  425/    C62F :                                             ;JMP (emu_ptr2,X)               ;6
(1)  425/    C62F :                                             
(1)  425/    C62F :                                             ;Method 3 - 30 cycles
(1)  425/    C62F :                                             ;TXA                                                    ;2
(1)  425/    C62F :                                             ;TAY                                                    ;2
(1)  425/    C62F :                                             ;LDA (emu_PC,X)                                 ;6
(1)  425/    C62F :                                             ;ASL                                                    ;2
(1)  425/    C62F :                                             ;BCS upper                                              ;2
(1)  425/    C62F :                                             ;lower:
(1)  425/    C62F :                                             ;       ASL                                                     ;2
(1)  425/    C62F :                                             ;       TAX                                                     ;2
(1)  425/    C62F :                                             ;       BCS upper_lower                         ;2
(1)  425/    C62F :                                             ;       lower_lower:
(1)  425/    C62F :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  425/    C62F :                                             ;       upper_lower:
(1)  425/    C62F :                                             ;               JMP (JUMP_TABLE2,X)
(1)  425/    C62F :                                             ;upper:
(1)  425/    C62F :                                             ;       ASL
(1)  425/    C62F :                                             ;       TAX
(1)  425/    C62F :                                             ;       BCS upper_upper
(1)  425/    C62F :                                             ;       lower_upper:
(1)  425/    C62F :                                             ;               JMP (JUMP_TABLE3,X)
(1)  425/    C62F :                                             ;       upper_upper:
(1)  425/    C62F :                                             ;               JMP (JUMP_TABLE4,X)
(1)  425/    C62F :                                             ;After jump:
(1)  425/    C62F :                                             ;TYA                                                    ;2
(1)  425/    C62F :                                             ;TAX                                                    ;2
(1)  425/    C62F :                                             
(1)  425/    C62F :                                             ;Method 4 - 28 cycles
(1)  425/    C62F :                                             ;LDA (emu_PC,X)                 ;6
(1)  425/    C62F :                                             ;TAY                                    ;2
(1)  425/    C62F :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  425/    C62F :                                             ;PHA                                    ;3
(1)  425/    C62F :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  425/    C62F :                                             ;PHA                                    ;3
(1)  425/    C62F :                                             ;RTS                                    ;6
(1)  425/    C62F :                                             
(1)  425/    C62F :                                             ;Method 5 - 30 cycles
(1)  425/    C62F : A1 02                                       LDA (emu_PC,X)                  ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 130 - 1/5/2022 11:50:53


(1)  425/    C631 : A8                                          TAY                                             ;2
(1)  425/    C632 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  425/    C635 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  425/    C637 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  425/    C63A : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  425/    C63C : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  425/    C63F :                                                                     
(1)  426/    C63F :                     
(1)  427/    C63F :                     	;0x55 - EOR ZPX
(1)  428/    C63F :                     	EOR_ZPX:
(1)  429/    C63F : (MACRO)             		OP_MACRO 85, "EOR", "ZPX", "EOR_ZPX"
(1)  429/    C63F :                                             ;TODO
(1)  430/    C63F : (MACRO)             		NEXT_MACRO
(1)  430/    C63F :                                             
(1)  430/    C63F :  (MACRO-2)                                  halt
(1)  430/    C63F : 00                                  BRK
(1)  430/    C640 : 00                                  BRK
(1)  430/    C641 :                                             
(1)  430/    C641 :                                             ;Method 1 - 60 cycles
(1)  430/    C641 :                                             ;Jump table must be page aligned!!!
(1)  430/    C641 :                                             ;LDA (emu_PC,X)                 ;6
(1)  430/    C641 :                                             ;ASL                                    ;2
(1)  430/    C641 :                                             ;STA emu_ptr,X                  ;4
(1)  430/    C641 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  430/    C641 :                                             ;ADC #0                                 ;2
(1)  430/    C641 :                                             ;STA emu_ptr+1,X                ;4
(1)  430/    C641 :                                             ;LDA (emu_ptr,X)                ;6
(1)  430/    C641 :                                             ;STA emu_ptr2,X                 ;4
(1)  430/    C641 :                                             ;INC emu_ptr,X                  ;6
(1)  430/    C641 :                                             ;BCC .skip                              ;2
(1)  430/    C641 :                                             ;       INC emu_ptr+1,X         ;6
(1)  430/    C641 :                                             ;.skip:
(1)  430/    C641 :                                             ;LDA (emu_ptr,X)                ;6
(1)  430/    C641 :                                             ;STA emu_ptr2+1,X               ;4
(1)  430/    C641 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  430/    C641 :                                             
(1)  430/    C641 :                                             ;Method 2 - 46 cycles
(1)  430/    C641 :                                             ;Jump table must be page aligned!!!
(1)  430/    C641 :                                             ;LDA (emu_PC,X)                 ;6
(1)  430/    C641 :                                             ;STZ emu_ptr+1,X                ;4
(1)  430/    C641 :                                             ;ASL                                    ;2
(1)  430/    C641 :                                             ;ROL emu_ptr+1,X                ;6
(1)  430/    C641 :                                             ;ASL                                    ;2
(1)  430/    C641 :                                             ;ROL emu_ptr+1,X                ;6
(1)  430/    C641 :                                             ;STA emu_ptr,X                  ;4                              
(1)  430/    C641 :                                             ;LDA emu_ptr+1,X                ;4
(1)  430/    C641 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  430/    C641 :                                             ;STA emu_ptr+1,X                ;4
(1)  430/    C641 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  430/    C641 :                                             
(1)  430/    C641 :                                             ;Method 3 - 30 cycles
(1)  430/    C641 :                                             ;TXA                                                    ;2
(1)  430/    C641 :                                             ;TAY                                                    ;2
(1)  430/    C641 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  430/    C641 :                                             ;ASL                                                    ;2
(1)  430/    C641 :                                             ;BCS upper                                              ;2
(1)  430/    C641 :                                             ;lower:
(1)  430/    C641 :                                             ;       ASL                                                     ;2
(1)  430/    C641 :                                             ;       TAX                                                     ;2
(1)  430/    C641 :                                             ;       BCS upper_lower                         ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 131 - 1/5/2022 11:50:53


(1)  430/    C641 :                                             ;       lower_lower:
(1)  430/    C641 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  430/    C641 :                                             ;       upper_lower:
(1)  430/    C641 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  430/    C641 :                                             ;upper:
(1)  430/    C641 :                                             ;       ASL
(1)  430/    C641 :                                             ;       TAX
(1)  430/    C641 :                                             ;       BCS upper_upper
(1)  430/    C641 :                                             ;       lower_upper:
(1)  430/    C641 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  430/    C641 :                                             ;       upper_upper:
(1)  430/    C641 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  430/    C641 :                                             ;After jump:
(1)  430/    C641 :                                             ;TYA                                                    ;2
(1)  430/    C641 :                                             ;TAX                                                    ;2
(1)  430/    C641 :                                             
(1)  430/    C641 :                                             ;Method 4 - 28 cycles
(1)  430/    C641 :                                             ;LDA (emu_PC,X)                 ;6
(1)  430/    C641 :                                             ;TAY                                    ;2
(1)  430/    C641 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  430/    C641 :                                             ;PHA                                    ;3
(1)  430/    C641 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  430/    C641 :                                             ;PHA                                    ;3
(1)  430/    C641 :                                             ;RTS                                    ;6
(1)  430/    C641 :                                             
(1)  430/    C641 :                                             ;Method 5 - 30 cycles
(1)  430/    C641 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  430/    C643 : A8                                          TAY                                             ;2
(1)  430/    C644 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  430/    C647 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  430/    C649 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  430/    C64C : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  430/    C64E : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  430/    C651 :                                                                     
(1)  431/    C651 :                     
(1)  432/    C651 :                     	;0x56 - LSR ZPX
(1)  433/    C651 :                     	LSR_ZPX:
(1)  434/    C651 : (MACRO)             		OP_MACRO 86, "LSR", "ZPX", "LSR_ZPX"
(1)  434/    C651 :                                             ;TODO
(1)  435/    C651 : (MACRO)             		NEXT_MACRO
(1)  435/    C651 :                                             
(1)  435/    C651 :  (MACRO-2)                                  halt
(1)  435/    C651 : 00                                  BRK
(1)  435/    C652 : 00                                  BRK
(1)  435/    C653 :                                             
(1)  435/    C653 :                                             ;Method 1 - 60 cycles
(1)  435/    C653 :                                             ;Jump table must be page aligned!!!
(1)  435/    C653 :                                             ;LDA (emu_PC,X)                 ;6
(1)  435/    C653 :                                             ;ASL                                    ;2
(1)  435/    C653 :                                             ;STA emu_ptr,X                  ;4
(1)  435/    C653 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  435/    C653 :                                             ;ADC #0                                 ;2
(1)  435/    C653 :                                             ;STA emu_ptr+1,X                ;4
(1)  435/    C653 :                                             ;LDA (emu_ptr,X)                ;6
(1)  435/    C653 :                                             ;STA emu_ptr2,X                 ;4
(1)  435/    C653 :                                             ;INC emu_ptr,X                  ;6
(1)  435/    C653 :                                             ;BCC .skip                              ;2
(1)  435/    C653 :                                             ;       INC emu_ptr+1,X         ;6
(1)  435/    C653 :                                             ;.skip:
(1)  435/    C653 :                                             ;LDA (emu_ptr,X)                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 132 - 1/5/2022 11:50:53


(1)  435/    C653 :                                             ;STA emu_ptr2+1,X               ;4
(1)  435/    C653 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  435/    C653 :                                             
(1)  435/    C653 :                                             ;Method 2 - 46 cycles
(1)  435/    C653 :                                             ;Jump table must be page aligned!!!
(1)  435/    C653 :                                             ;LDA (emu_PC,X)                 ;6
(1)  435/    C653 :                                             ;STZ emu_ptr+1,X                ;4
(1)  435/    C653 :                                             ;ASL                                    ;2
(1)  435/    C653 :                                             ;ROL emu_ptr+1,X                ;6
(1)  435/    C653 :                                             ;ASL                                    ;2
(1)  435/    C653 :                                             ;ROL emu_ptr+1,X                ;6
(1)  435/    C653 :                                             ;STA emu_ptr,X                  ;4                              
(1)  435/    C653 :                                             ;LDA emu_ptr+1,X                ;4
(1)  435/    C653 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  435/    C653 :                                             ;STA emu_ptr+1,X                ;4
(1)  435/    C653 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  435/    C653 :                                             
(1)  435/    C653 :                                             ;Method 3 - 30 cycles
(1)  435/    C653 :                                             ;TXA                                                    ;2
(1)  435/    C653 :                                             ;TAY                                                    ;2
(1)  435/    C653 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  435/    C653 :                                             ;ASL                                                    ;2
(1)  435/    C653 :                                             ;BCS upper                                              ;2
(1)  435/    C653 :                                             ;lower:
(1)  435/    C653 :                                             ;       ASL                                                     ;2
(1)  435/    C653 :                                             ;       TAX                                                     ;2
(1)  435/    C653 :                                             ;       BCS upper_lower                         ;2
(1)  435/    C653 :                                             ;       lower_lower:
(1)  435/    C653 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  435/    C653 :                                             ;       upper_lower:
(1)  435/    C653 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  435/    C653 :                                             ;upper:
(1)  435/    C653 :                                             ;       ASL
(1)  435/    C653 :                                             ;       TAX
(1)  435/    C653 :                                             ;       BCS upper_upper
(1)  435/    C653 :                                             ;       lower_upper:
(1)  435/    C653 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  435/    C653 :                                             ;       upper_upper:
(1)  435/    C653 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  435/    C653 :                                             ;After jump:
(1)  435/    C653 :                                             ;TYA                                                    ;2
(1)  435/    C653 :                                             ;TAX                                                    ;2
(1)  435/    C653 :                                             
(1)  435/    C653 :                                             ;Method 4 - 28 cycles
(1)  435/    C653 :                                             ;LDA (emu_PC,X)                 ;6
(1)  435/    C653 :                                             ;TAY                                    ;2
(1)  435/    C653 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  435/    C653 :                                             ;PHA                                    ;3
(1)  435/    C653 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  435/    C653 :                                             ;PHA                                    ;3
(1)  435/    C653 :                                             ;RTS                                    ;6
(1)  435/    C653 :                                             
(1)  435/    C653 :                                             ;Method 5 - 30 cycles
(1)  435/    C653 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  435/    C655 : A8                                          TAY                                             ;2
(1)  435/    C656 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  435/    C659 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  435/    C65B : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  435/    C65E : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  435/    C660 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 133 - 1/5/2022 11:50:53


(1)  435/    C663 :                                                                     
(1)  436/    C663 :                     
(1)  437/    C663 :                     	;0x57 - NOP
(1)  438/    C663 :                     	NOP_0x57:
(1)  439/    C663 : (MACRO)             		OP_MACRO 87, "NOP", "IMP", "NOP_0x57"
(1)  439/    C663 :                                             ;TODO
(1)  440/    C663 : (MACRO)             		NEXT_MACRO
(1)  440/    C663 :                                             
(1)  440/    C663 :  (MACRO-2)                                  halt
(1)  440/    C663 : 00                                  BRK
(1)  440/    C664 : 00                                  BRK
(1)  440/    C665 :                                             
(1)  440/    C665 :                                             ;Method 1 - 60 cycles
(1)  440/    C665 :                                             ;Jump table must be page aligned!!!
(1)  440/    C665 :                                             ;LDA (emu_PC,X)                 ;6
(1)  440/    C665 :                                             ;ASL                                    ;2
(1)  440/    C665 :                                             ;STA emu_ptr,X                  ;4
(1)  440/    C665 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  440/    C665 :                                             ;ADC #0                                 ;2
(1)  440/    C665 :                                             ;STA emu_ptr+1,X                ;4
(1)  440/    C665 :                                             ;LDA (emu_ptr,X)                ;6
(1)  440/    C665 :                                             ;STA emu_ptr2,X                 ;4
(1)  440/    C665 :                                             ;INC emu_ptr,X                  ;6
(1)  440/    C665 :                                             ;BCC .skip                              ;2
(1)  440/    C665 :                                             ;       INC emu_ptr+1,X         ;6
(1)  440/    C665 :                                             ;.skip:
(1)  440/    C665 :                                             ;LDA (emu_ptr,X)                ;6
(1)  440/    C665 :                                             ;STA emu_ptr2+1,X               ;4
(1)  440/    C665 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  440/    C665 :                                             
(1)  440/    C665 :                                             ;Method 2 - 46 cycles
(1)  440/    C665 :                                             ;Jump table must be page aligned!!!
(1)  440/    C665 :                                             ;LDA (emu_PC,X)                 ;6
(1)  440/    C665 :                                             ;STZ emu_ptr+1,X                ;4
(1)  440/    C665 :                                             ;ASL                                    ;2
(1)  440/    C665 :                                             ;ROL emu_ptr+1,X                ;6
(1)  440/    C665 :                                             ;ASL                                    ;2
(1)  440/    C665 :                                             ;ROL emu_ptr+1,X                ;6
(1)  440/    C665 :                                             ;STA emu_ptr,X                  ;4                              
(1)  440/    C665 :                                             ;LDA emu_ptr+1,X                ;4
(1)  440/    C665 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  440/    C665 :                                             ;STA emu_ptr+1,X                ;4
(1)  440/    C665 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  440/    C665 :                                             
(1)  440/    C665 :                                             ;Method 3 - 30 cycles
(1)  440/    C665 :                                             ;TXA                                                    ;2
(1)  440/    C665 :                                             ;TAY                                                    ;2
(1)  440/    C665 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  440/    C665 :                                             ;ASL                                                    ;2
(1)  440/    C665 :                                             ;BCS upper                                              ;2
(1)  440/    C665 :                                             ;lower:
(1)  440/    C665 :                                             ;       ASL                                                     ;2
(1)  440/    C665 :                                             ;       TAX                                                     ;2
(1)  440/    C665 :                                             ;       BCS upper_lower                         ;2
(1)  440/    C665 :                                             ;       lower_lower:
(1)  440/    C665 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  440/    C665 :                                             ;       upper_lower:
(1)  440/    C665 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  440/    C665 :                                             ;upper:
(1)  440/    C665 :                                             ;       ASL
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 134 - 1/5/2022 11:50:53


(1)  440/    C665 :                                             ;       TAX
(1)  440/    C665 :                                             ;       BCS upper_upper
(1)  440/    C665 :                                             ;       lower_upper:
(1)  440/    C665 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  440/    C665 :                                             ;       upper_upper:
(1)  440/    C665 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  440/    C665 :                                             ;After jump:
(1)  440/    C665 :                                             ;TYA                                                    ;2
(1)  440/    C665 :                                             ;TAX                                                    ;2
(1)  440/    C665 :                                             
(1)  440/    C665 :                                             ;Method 4 - 28 cycles
(1)  440/    C665 :                                             ;LDA (emu_PC,X)                 ;6
(1)  440/    C665 :                                             ;TAY                                    ;2
(1)  440/    C665 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  440/    C665 :                                             ;PHA                                    ;3
(1)  440/    C665 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  440/    C665 :                                             ;PHA                                    ;3
(1)  440/    C665 :                                             ;RTS                                    ;6
(1)  440/    C665 :                                             
(1)  440/    C665 :                                             ;Method 5 - 30 cycles
(1)  440/    C665 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  440/    C667 : A8                                          TAY                                             ;2
(1)  440/    C668 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  440/    C66B : 95 0A                                       STA emu_ptr,X                   ;4
(1)  440/    C66D : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  440/    C670 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  440/    C672 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  440/    C675 :                                                                     
(1)  441/    C675 :                     
(1)  442/    C675 :                     	;0x58 - CLI IMP
(1)  443/    C675 :                     	CLI_IMP:
(1)  444/    C675 : (MACRO)             		OP_MACRO 88, "CLI", "IMP", "CLI_IMP"
(1)  444/    C675 :                                             ;TODO
(1)  445/    C675 : (MACRO)             		NEXT_MACRO
(1)  445/    C675 :                                             
(1)  445/    C675 :  (MACRO-2)                                  halt
(1)  445/    C675 : 00                                  BRK
(1)  445/    C676 : 00                                  BRK
(1)  445/    C677 :                                             
(1)  445/    C677 :                                             ;Method 1 - 60 cycles
(1)  445/    C677 :                                             ;Jump table must be page aligned!!!
(1)  445/    C677 :                                             ;LDA (emu_PC,X)                 ;6
(1)  445/    C677 :                                             ;ASL                                    ;2
(1)  445/    C677 :                                             ;STA emu_ptr,X                  ;4
(1)  445/    C677 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  445/    C677 :                                             ;ADC #0                                 ;2
(1)  445/    C677 :                                             ;STA emu_ptr+1,X                ;4
(1)  445/    C677 :                                             ;LDA (emu_ptr,X)                ;6
(1)  445/    C677 :                                             ;STA emu_ptr2,X                 ;4
(1)  445/    C677 :                                             ;INC emu_ptr,X                  ;6
(1)  445/    C677 :                                             ;BCC .skip                              ;2
(1)  445/    C677 :                                             ;       INC emu_ptr+1,X         ;6
(1)  445/    C677 :                                             ;.skip:
(1)  445/    C677 :                                             ;LDA (emu_ptr,X)                ;6
(1)  445/    C677 :                                             ;STA emu_ptr2+1,X               ;4
(1)  445/    C677 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  445/    C677 :                                             
(1)  445/    C677 :                                             ;Method 2 - 46 cycles
(1)  445/    C677 :                                             ;Jump table must be page aligned!!!
(1)  445/    C677 :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 135 - 1/5/2022 11:50:53


(1)  445/    C677 :                                             ;STZ emu_ptr+1,X                ;4
(1)  445/    C677 :                                             ;ASL                                    ;2
(1)  445/    C677 :                                             ;ROL emu_ptr+1,X                ;6
(1)  445/    C677 :                                             ;ASL                                    ;2
(1)  445/    C677 :                                             ;ROL emu_ptr+1,X                ;6
(1)  445/    C677 :                                             ;STA emu_ptr,X                  ;4                              
(1)  445/    C677 :                                             ;LDA emu_ptr+1,X                ;4
(1)  445/    C677 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  445/    C677 :                                             ;STA emu_ptr+1,X                ;4
(1)  445/    C677 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  445/    C677 :                                             
(1)  445/    C677 :                                             ;Method 3 - 30 cycles
(1)  445/    C677 :                                             ;TXA                                                    ;2
(1)  445/    C677 :                                             ;TAY                                                    ;2
(1)  445/    C677 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  445/    C677 :                                             ;ASL                                                    ;2
(1)  445/    C677 :                                             ;BCS upper                                              ;2
(1)  445/    C677 :                                             ;lower:
(1)  445/    C677 :                                             ;       ASL                                                     ;2
(1)  445/    C677 :                                             ;       TAX                                                     ;2
(1)  445/    C677 :                                             ;       BCS upper_lower                         ;2
(1)  445/    C677 :                                             ;       lower_lower:
(1)  445/    C677 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  445/    C677 :                                             ;       upper_lower:
(1)  445/    C677 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  445/    C677 :                                             ;upper:
(1)  445/    C677 :                                             ;       ASL
(1)  445/    C677 :                                             ;       TAX
(1)  445/    C677 :                                             ;       BCS upper_upper
(1)  445/    C677 :                                             ;       lower_upper:
(1)  445/    C677 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  445/    C677 :                                             ;       upper_upper:
(1)  445/    C677 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  445/    C677 :                                             ;After jump:
(1)  445/    C677 :                                             ;TYA                                                    ;2
(1)  445/    C677 :                                             ;TAX                                                    ;2
(1)  445/    C677 :                                             
(1)  445/    C677 :                                             ;Method 4 - 28 cycles
(1)  445/    C677 :                                             ;LDA (emu_PC,X)                 ;6
(1)  445/    C677 :                                             ;TAY                                    ;2
(1)  445/    C677 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  445/    C677 :                                             ;PHA                                    ;3
(1)  445/    C677 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  445/    C677 :                                             ;PHA                                    ;3
(1)  445/    C677 :                                             ;RTS                                    ;6
(1)  445/    C677 :                                             
(1)  445/    C677 :                                             ;Method 5 - 30 cycles
(1)  445/    C677 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  445/    C679 : A8                                          TAY                                             ;2
(1)  445/    C67A : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  445/    C67D : 95 0A                                       STA emu_ptr,X                   ;4
(1)  445/    C67F : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  445/    C682 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  445/    C684 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  445/    C687 :                                                                     
(1)  446/    C687 :                     
(1)  447/    C687 :                     	;0x59 - EOR ABSY
(1)  448/    C687 :                     	EOR_ABSY:
(1)  449/    C687 : (MACRO)             		OP_MACRO 89, "EOR", "ABSY", "EOR_ABSY"
(1)  449/    C687 :                                             ;TODO
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 136 - 1/5/2022 11:50:53


(1)  450/    C687 : (MACRO)             		NEXT_MACRO
(1)  450/    C687 :                                             
(1)  450/    C687 :  (MACRO-2)                                  halt
(1)  450/    C687 : 00                                  BRK
(1)  450/    C688 : 00                                  BRK
(1)  450/    C689 :                                             
(1)  450/    C689 :                                             ;Method 1 - 60 cycles
(1)  450/    C689 :                                             ;Jump table must be page aligned!!!
(1)  450/    C689 :                                             ;LDA (emu_PC,X)                 ;6
(1)  450/    C689 :                                             ;ASL                                    ;2
(1)  450/    C689 :                                             ;STA emu_ptr,X                  ;4
(1)  450/    C689 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  450/    C689 :                                             ;ADC #0                                 ;2
(1)  450/    C689 :                                             ;STA emu_ptr+1,X                ;4
(1)  450/    C689 :                                             ;LDA (emu_ptr,X)                ;6
(1)  450/    C689 :                                             ;STA emu_ptr2,X                 ;4
(1)  450/    C689 :                                             ;INC emu_ptr,X                  ;6
(1)  450/    C689 :                                             ;BCC .skip                              ;2
(1)  450/    C689 :                                             ;       INC emu_ptr+1,X         ;6
(1)  450/    C689 :                                             ;.skip:
(1)  450/    C689 :                                             ;LDA (emu_ptr,X)                ;6
(1)  450/    C689 :                                             ;STA emu_ptr2+1,X               ;4
(1)  450/    C689 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  450/    C689 :                                             
(1)  450/    C689 :                                             ;Method 2 - 46 cycles
(1)  450/    C689 :                                             ;Jump table must be page aligned!!!
(1)  450/    C689 :                                             ;LDA (emu_PC,X)                 ;6
(1)  450/    C689 :                                             ;STZ emu_ptr+1,X                ;4
(1)  450/    C689 :                                             ;ASL                                    ;2
(1)  450/    C689 :                                             ;ROL emu_ptr+1,X                ;6
(1)  450/    C689 :                                             ;ASL                                    ;2
(1)  450/    C689 :                                             ;ROL emu_ptr+1,X                ;6
(1)  450/    C689 :                                             ;STA emu_ptr,X                  ;4                              
(1)  450/    C689 :                                             ;LDA emu_ptr+1,X                ;4
(1)  450/    C689 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  450/    C689 :                                             ;STA emu_ptr+1,X                ;4
(1)  450/    C689 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  450/    C689 :                                             
(1)  450/    C689 :                                             ;Method 3 - 30 cycles
(1)  450/    C689 :                                             ;TXA                                                    ;2
(1)  450/    C689 :                                             ;TAY                                                    ;2
(1)  450/    C689 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  450/    C689 :                                             ;ASL                                                    ;2
(1)  450/    C689 :                                             ;BCS upper                                              ;2
(1)  450/    C689 :                                             ;lower:
(1)  450/    C689 :                                             ;       ASL                                                     ;2
(1)  450/    C689 :                                             ;       TAX                                                     ;2
(1)  450/    C689 :                                             ;       BCS upper_lower                         ;2
(1)  450/    C689 :                                             ;       lower_lower:
(1)  450/    C689 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  450/    C689 :                                             ;       upper_lower:
(1)  450/    C689 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  450/    C689 :                                             ;upper:
(1)  450/    C689 :                                             ;       ASL
(1)  450/    C689 :                                             ;       TAX
(1)  450/    C689 :                                             ;       BCS upper_upper
(1)  450/    C689 :                                             ;       lower_upper:
(1)  450/    C689 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  450/    C689 :                                             ;       upper_upper:
(1)  450/    C689 :                                             ;               JMP (JUMP_TABLE4,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 137 - 1/5/2022 11:50:53


(1)  450/    C689 :                                             ;After jump:
(1)  450/    C689 :                                             ;TYA                                                    ;2
(1)  450/    C689 :                                             ;TAX                                                    ;2
(1)  450/    C689 :                                             
(1)  450/    C689 :                                             ;Method 4 - 28 cycles
(1)  450/    C689 :                                             ;LDA (emu_PC,X)                 ;6
(1)  450/    C689 :                                             ;TAY                                    ;2
(1)  450/    C689 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  450/    C689 :                                             ;PHA                                    ;3
(1)  450/    C689 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  450/    C689 :                                             ;PHA                                    ;3
(1)  450/    C689 :                                             ;RTS                                    ;6
(1)  450/    C689 :                                             
(1)  450/    C689 :                                             ;Method 5 - 30 cycles
(1)  450/    C689 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  450/    C68B : A8                                          TAY                                             ;2
(1)  450/    C68C : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  450/    C68F : 95 0A                                       STA emu_ptr,X                   ;4
(1)  450/    C691 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  450/    C694 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  450/    C696 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  450/    C699 :                                                                     
(1)  451/    C699 :                     
(1)  452/    C699 :                     	;0x5A - NOP
(1)  453/    C699 :                     	NOP_0x5A:
(1)  454/    C699 : (MACRO)             		OP_MACRO 90, "NOP", "IMP", "NOP_0x5A"
(1)  454/    C699 :                                             ;TODO
(1)  455/    C699 : (MACRO)             		NEXT_MACRO
(1)  455/    C699 :                                             
(1)  455/    C699 :  (MACRO-2)                                  halt
(1)  455/    C699 : 00                                  BRK
(1)  455/    C69A : 00                                  BRK
(1)  455/    C69B :                                             
(1)  455/    C69B :                                             ;Method 1 - 60 cycles
(1)  455/    C69B :                                             ;Jump table must be page aligned!!!
(1)  455/    C69B :                                             ;LDA (emu_PC,X)                 ;6
(1)  455/    C69B :                                             ;ASL                                    ;2
(1)  455/    C69B :                                             ;STA emu_ptr,X                  ;4
(1)  455/    C69B :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  455/    C69B :                                             ;ADC #0                                 ;2
(1)  455/    C69B :                                             ;STA emu_ptr+1,X                ;4
(1)  455/    C69B :                                             ;LDA (emu_ptr,X)                ;6
(1)  455/    C69B :                                             ;STA emu_ptr2,X                 ;4
(1)  455/    C69B :                                             ;INC emu_ptr,X                  ;6
(1)  455/    C69B :                                             ;BCC .skip                              ;2
(1)  455/    C69B :                                             ;       INC emu_ptr+1,X         ;6
(1)  455/    C69B :                                             ;.skip:
(1)  455/    C69B :                                             ;LDA (emu_ptr,X)                ;6
(1)  455/    C69B :                                             ;STA emu_ptr2+1,X               ;4
(1)  455/    C69B :                                             ;JMP (emu_ptr2,X)               ;6
(1)  455/    C69B :                                             
(1)  455/    C69B :                                             ;Method 2 - 46 cycles
(1)  455/    C69B :                                             ;Jump table must be page aligned!!!
(1)  455/    C69B :                                             ;LDA (emu_PC,X)                 ;6
(1)  455/    C69B :                                             ;STZ emu_ptr+1,X                ;4
(1)  455/    C69B :                                             ;ASL                                    ;2
(1)  455/    C69B :                                             ;ROL emu_ptr+1,X                ;6
(1)  455/    C69B :                                             ;ASL                                    ;2
(1)  455/    C69B :                                             ;ROL emu_ptr+1,X                ;6
(1)  455/    C69B :                                             ;STA emu_ptr,X                  ;4                              
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 138 - 1/5/2022 11:50:53


(1)  455/    C69B :                                             ;LDA emu_ptr+1,X                ;4
(1)  455/    C69B :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  455/    C69B :                                             ;STA emu_ptr+1,X                ;4
(1)  455/    C69B :                                             ;JMP (emu_ptr2,X)               ;6
(1)  455/    C69B :                                             
(1)  455/    C69B :                                             ;Method 3 - 30 cycles
(1)  455/    C69B :                                             ;TXA                                                    ;2
(1)  455/    C69B :                                             ;TAY                                                    ;2
(1)  455/    C69B :                                             ;LDA (emu_PC,X)                                 ;6
(1)  455/    C69B :                                             ;ASL                                                    ;2
(1)  455/    C69B :                                             ;BCS upper                                              ;2
(1)  455/    C69B :                                             ;lower:
(1)  455/    C69B :                                             ;       ASL                                                     ;2
(1)  455/    C69B :                                             ;       TAX                                                     ;2
(1)  455/    C69B :                                             ;       BCS upper_lower                         ;2
(1)  455/    C69B :                                             ;       lower_lower:
(1)  455/    C69B :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  455/    C69B :                                             ;       upper_lower:
(1)  455/    C69B :                                             ;               JMP (JUMP_TABLE2,X)
(1)  455/    C69B :                                             ;upper:
(1)  455/    C69B :                                             ;       ASL
(1)  455/    C69B :                                             ;       TAX
(1)  455/    C69B :                                             ;       BCS upper_upper
(1)  455/    C69B :                                             ;       lower_upper:
(1)  455/    C69B :                                             ;               JMP (JUMP_TABLE3,X)
(1)  455/    C69B :                                             ;       upper_upper:
(1)  455/    C69B :                                             ;               JMP (JUMP_TABLE4,X)
(1)  455/    C69B :                                             ;After jump:
(1)  455/    C69B :                                             ;TYA                                                    ;2
(1)  455/    C69B :                                             ;TAX                                                    ;2
(1)  455/    C69B :                                             
(1)  455/    C69B :                                             ;Method 4 - 28 cycles
(1)  455/    C69B :                                             ;LDA (emu_PC,X)                 ;6
(1)  455/    C69B :                                             ;TAY                                    ;2
(1)  455/    C69B :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  455/    C69B :                                             ;PHA                                    ;3
(1)  455/    C69B :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  455/    C69B :                                             ;PHA                                    ;3
(1)  455/    C69B :                                             ;RTS                                    ;6
(1)  455/    C69B :                                             
(1)  455/    C69B :                                             ;Method 5 - 30 cycles
(1)  455/    C69B : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  455/    C69D : A8                                          TAY                                             ;2
(1)  455/    C69E : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  455/    C6A1 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  455/    C6A3 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  455/    C6A6 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  455/    C6A8 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  455/    C6AB :                                                                     
(1)  456/    C6AB :                     
(1)  457/    C6AB :                     	;0x5B - NOP
(1)  458/    C6AB :                     	NOP_0x5B:
(1)  459/    C6AB : (MACRO)             		OP_MACRO 91, "NOP", "IMP", "NOP_0x5B"
(1)  459/    C6AB :                                             ;TODO
(1)  460/    C6AB : (MACRO)             		NEXT_MACRO
(1)  460/    C6AB :                                             
(1)  460/    C6AB :  (MACRO-2)                                  halt
(1)  460/    C6AB : 00                                  BRK
(1)  460/    C6AC : 00                                  BRK
(1)  460/    C6AD :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 139 - 1/5/2022 11:50:53


(1)  460/    C6AD :                                             ;Method 1 - 60 cycles
(1)  460/    C6AD :                                             ;Jump table must be page aligned!!!
(1)  460/    C6AD :                                             ;LDA (emu_PC,X)                 ;6
(1)  460/    C6AD :                                             ;ASL                                    ;2
(1)  460/    C6AD :                                             ;STA emu_ptr,X                  ;4
(1)  460/    C6AD :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  460/    C6AD :                                             ;ADC #0                                 ;2
(1)  460/    C6AD :                                             ;STA emu_ptr+1,X                ;4
(1)  460/    C6AD :                                             ;LDA (emu_ptr,X)                ;6
(1)  460/    C6AD :                                             ;STA emu_ptr2,X                 ;4
(1)  460/    C6AD :                                             ;INC emu_ptr,X                  ;6
(1)  460/    C6AD :                                             ;BCC .skip                              ;2
(1)  460/    C6AD :                                             ;       INC emu_ptr+1,X         ;6
(1)  460/    C6AD :                                             ;.skip:
(1)  460/    C6AD :                                             ;LDA (emu_ptr,X)                ;6
(1)  460/    C6AD :                                             ;STA emu_ptr2+1,X               ;4
(1)  460/    C6AD :                                             ;JMP (emu_ptr2,X)               ;6
(1)  460/    C6AD :                                             
(1)  460/    C6AD :                                             ;Method 2 - 46 cycles
(1)  460/    C6AD :                                             ;Jump table must be page aligned!!!
(1)  460/    C6AD :                                             ;LDA (emu_PC,X)                 ;6
(1)  460/    C6AD :                                             ;STZ emu_ptr+1,X                ;4
(1)  460/    C6AD :                                             ;ASL                                    ;2
(1)  460/    C6AD :                                             ;ROL emu_ptr+1,X                ;6
(1)  460/    C6AD :                                             ;ASL                                    ;2
(1)  460/    C6AD :                                             ;ROL emu_ptr+1,X                ;6
(1)  460/    C6AD :                                             ;STA emu_ptr,X                  ;4                              
(1)  460/    C6AD :                                             ;LDA emu_ptr+1,X                ;4
(1)  460/    C6AD :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  460/    C6AD :                                             ;STA emu_ptr+1,X                ;4
(1)  460/    C6AD :                                             ;JMP (emu_ptr2,X)               ;6
(1)  460/    C6AD :                                             
(1)  460/    C6AD :                                             ;Method 3 - 30 cycles
(1)  460/    C6AD :                                             ;TXA                                                    ;2
(1)  460/    C6AD :                                             ;TAY                                                    ;2
(1)  460/    C6AD :                                             ;LDA (emu_PC,X)                                 ;6
(1)  460/    C6AD :                                             ;ASL                                                    ;2
(1)  460/    C6AD :                                             ;BCS upper                                              ;2
(1)  460/    C6AD :                                             ;lower:
(1)  460/    C6AD :                                             ;       ASL                                                     ;2
(1)  460/    C6AD :                                             ;       TAX                                                     ;2
(1)  460/    C6AD :                                             ;       BCS upper_lower                         ;2
(1)  460/    C6AD :                                             ;       lower_lower:
(1)  460/    C6AD :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  460/    C6AD :                                             ;       upper_lower:
(1)  460/    C6AD :                                             ;               JMP (JUMP_TABLE2,X)
(1)  460/    C6AD :                                             ;upper:
(1)  460/    C6AD :                                             ;       ASL
(1)  460/    C6AD :                                             ;       TAX
(1)  460/    C6AD :                                             ;       BCS upper_upper
(1)  460/    C6AD :                                             ;       lower_upper:
(1)  460/    C6AD :                                             ;               JMP (JUMP_TABLE3,X)
(1)  460/    C6AD :                                             ;       upper_upper:
(1)  460/    C6AD :                                             ;               JMP (JUMP_TABLE4,X)
(1)  460/    C6AD :                                             ;After jump:
(1)  460/    C6AD :                                             ;TYA                                                    ;2
(1)  460/    C6AD :                                             ;TAX                                                    ;2
(1)  460/    C6AD :                                             
(1)  460/    C6AD :                                             ;Method 4 - 28 cycles
(1)  460/    C6AD :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 140 - 1/5/2022 11:50:53


(1)  460/    C6AD :                                             ;TAY                                    ;2
(1)  460/    C6AD :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  460/    C6AD :                                             ;PHA                                    ;3
(1)  460/    C6AD :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  460/    C6AD :                                             ;PHA                                    ;3
(1)  460/    C6AD :                                             ;RTS                                    ;6
(1)  460/    C6AD :                                             
(1)  460/    C6AD :                                             ;Method 5 - 30 cycles
(1)  460/    C6AD : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  460/    C6AF : A8                                          TAY                                             ;2
(1)  460/    C6B0 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  460/    C6B3 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  460/    C6B5 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  460/    C6B8 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  460/    C6BA : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  460/    C6BD :                                                                     
(1)  461/    C6BD :                     
(1)  462/    C6BD :                     	;0x5C - NOP
(1)  463/    C6BD :                     	NOP_0x5C:
(1)  464/    C6BD : (MACRO)             		OP_MACRO 92, "NOP", "IMP", "NOP_0x5C"
(1)  464/    C6BD :                                             ;TODO
(1)  465/    C6BD : (MACRO)             		NEXT_MACRO
(1)  465/    C6BD :                                             
(1)  465/    C6BD :  (MACRO-2)                                  halt
(1)  465/    C6BD : 00                                  BRK
(1)  465/    C6BE : 00                                  BRK
(1)  465/    C6BF :                                             
(1)  465/    C6BF :                                             ;Method 1 - 60 cycles
(1)  465/    C6BF :                                             ;Jump table must be page aligned!!!
(1)  465/    C6BF :                                             ;LDA (emu_PC,X)                 ;6
(1)  465/    C6BF :                                             ;ASL                                    ;2
(1)  465/    C6BF :                                             ;STA emu_ptr,X                  ;4
(1)  465/    C6BF :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  465/    C6BF :                                             ;ADC #0                                 ;2
(1)  465/    C6BF :                                             ;STA emu_ptr+1,X                ;4
(1)  465/    C6BF :                                             ;LDA (emu_ptr,X)                ;6
(1)  465/    C6BF :                                             ;STA emu_ptr2,X                 ;4
(1)  465/    C6BF :                                             ;INC emu_ptr,X                  ;6
(1)  465/    C6BF :                                             ;BCC .skip                              ;2
(1)  465/    C6BF :                                             ;       INC emu_ptr+1,X         ;6
(1)  465/    C6BF :                                             ;.skip:
(1)  465/    C6BF :                                             ;LDA (emu_ptr,X)                ;6
(1)  465/    C6BF :                                             ;STA emu_ptr2+1,X               ;4
(1)  465/    C6BF :                                             ;JMP (emu_ptr2,X)               ;6
(1)  465/    C6BF :                                             
(1)  465/    C6BF :                                             ;Method 2 - 46 cycles
(1)  465/    C6BF :                                             ;Jump table must be page aligned!!!
(1)  465/    C6BF :                                             ;LDA (emu_PC,X)                 ;6
(1)  465/    C6BF :                                             ;STZ emu_ptr+1,X                ;4
(1)  465/    C6BF :                                             ;ASL                                    ;2
(1)  465/    C6BF :                                             ;ROL emu_ptr+1,X                ;6
(1)  465/    C6BF :                                             ;ASL                                    ;2
(1)  465/    C6BF :                                             ;ROL emu_ptr+1,X                ;6
(1)  465/    C6BF :                                             ;STA emu_ptr,X                  ;4                              
(1)  465/    C6BF :                                             ;LDA emu_ptr+1,X                ;4
(1)  465/    C6BF :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  465/    C6BF :                                             ;STA emu_ptr+1,X                ;4
(1)  465/    C6BF :                                             ;JMP (emu_ptr2,X)               ;6
(1)  465/    C6BF :                                             
(1)  465/    C6BF :                                             ;Method 3 - 30 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 141 - 1/5/2022 11:50:53


(1)  465/    C6BF :                                             ;TXA                                                    ;2
(1)  465/    C6BF :                                             ;TAY                                                    ;2
(1)  465/    C6BF :                                             ;LDA (emu_PC,X)                                 ;6
(1)  465/    C6BF :                                             ;ASL                                                    ;2
(1)  465/    C6BF :                                             ;BCS upper                                              ;2
(1)  465/    C6BF :                                             ;lower:
(1)  465/    C6BF :                                             ;       ASL                                                     ;2
(1)  465/    C6BF :                                             ;       TAX                                                     ;2
(1)  465/    C6BF :                                             ;       BCS upper_lower                         ;2
(1)  465/    C6BF :                                             ;       lower_lower:
(1)  465/    C6BF :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  465/    C6BF :                                             ;       upper_lower:
(1)  465/    C6BF :                                             ;               JMP (JUMP_TABLE2,X)
(1)  465/    C6BF :                                             ;upper:
(1)  465/    C6BF :                                             ;       ASL
(1)  465/    C6BF :                                             ;       TAX
(1)  465/    C6BF :                                             ;       BCS upper_upper
(1)  465/    C6BF :                                             ;       lower_upper:
(1)  465/    C6BF :                                             ;               JMP (JUMP_TABLE3,X)
(1)  465/    C6BF :                                             ;       upper_upper:
(1)  465/    C6BF :                                             ;               JMP (JUMP_TABLE4,X)
(1)  465/    C6BF :                                             ;After jump:
(1)  465/    C6BF :                                             ;TYA                                                    ;2
(1)  465/    C6BF :                                             ;TAX                                                    ;2
(1)  465/    C6BF :                                             
(1)  465/    C6BF :                                             ;Method 4 - 28 cycles
(1)  465/    C6BF :                                             ;LDA (emu_PC,X)                 ;6
(1)  465/    C6BF :                                             ;TAY                                    ;2
(1)  465/    C6BF :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  465/    C6BF :                                             ;PHA                                    ;3
(1)  465/    C6BF :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  465/    C6BF :                                             ;PHA                                    ;3
(1)  465/    C6BF :                                             ;RTS                                    ;6
(1)  465/    C6BF :                                             
(1)  465/    C6BF :                                             ;Method 5 - 30 cycles
(1)  465/    C6BF : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  465/    C6C1 : A8                                          TAY                                             ;2
(1)  465/    C6C2 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  465/    C6C5 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  465/    C6C7 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  465/    C6CA : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  465/    C6CC : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  465/    C6CF :                                                                     
(1)  466/    C6CF :                     
(1)  467/    C6CF :                     	;0x5D - EOR ABSX
(1)  468/    C6CF :                     	EOR_ABSX:
(1)  469/    C6CF : (MACRO)             		OP_MACRO 93, "EOR", "ABSX", "EOR_ABSX"
(1)  469/    C6CF :                                             ;TODO
(1)  470/    C6CF : (MACRO)             		NEXT_MACRO
(1)  470/    C6CF :                                             
(1)  470/    C6CF :  (MACRO-2)                                  halt
(1)  470/    C6CF : 00                                  BRK
(1)  470/    C6D0 : 00                                  BRK
(1)  470/    C6D1 :                                             
(1)  470/    C6D1 :                                             ;Method 1 - 60 cycles
(1)  470/    C6D1 :                                             ;Jump table must be page aligned!!!
(1)  470/    C6D1 :                                             ;LDA (emu_PC,X)                 ;6
(1)  470/    C6D1 :                                             ;ASL                                    ;2
(1)  470/    C6D1 :                                             ;STA emu_ptr,X                  ;4
(1)  470/    C6D1 :                                             ;LDA #hi(JUMP_TABLE)    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 142 - 1/5/2022 11:50:53


(1)  470/    C6D1 :                                             ;ADC #0                                 ;2
(1)  470/    C6D1 :                                             ;STA emu_ptr+1,X                ;4
(1)  470/    C6D1 :                                             ;LDA (emu_ptr,X)                ;6
(1)  470/    C6D1 :                                             ;STA emu_ptr2,X                 ;4
(1)  470/    C6D1 :                                             ;INC emu_ptr,X                  ;6
(1)  470/    C6D1 :                                             ;BCC .skip                              ;2
(1)  470/    C6D1 :                                             ;       INC emu_ptr+1,X         ;6
(1)  470/    C6D1 :                                             ;.skip:
(1)  470/    C6D1 :                                             ;LDA (emu_ptr,X)                ;6
(1)  470/    C6D1 :                                             ;STA emu_ptr2+1,X               ;4
(1)  470/    C6D1 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  470/    C6D1 :                                             
(1)  470/    C6D1 :                                             ;Method 2 - 46 cycles
(1)  470/    C6D1 :                                             ;Jump table must be page aligned!!!
(1)  470/    C6D1 :                                             ;LDA (emu_PC,X)                 ;6
(1)  470/    C6D1 :                                             ;STZ emu_ptr+1,X                ;4
(1)  470/    C6D1 :                                             ;ASL                                    ;2
(1)  470/    C6D1 :                                             ;ROL emu_ptr+1,X                ;6
(1)  470/    C6D1 :                                             ;ASL                                    ;2
(1)  470/    C6D1 :                                             ;ROL emu_ptr+1,X                ;6
(1)  470/    C6D1 :                                             ;STA emu_ptr,X                  ;4                              
(1)  470/    C6D1 :                                             ;LDA emu_ptr+1,X                ;4
(1)  470/    C6D1 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  470/    C6D1 :                                             ;STA emu_ptr+1,X                ;4
(1)  470/    C6D1 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  470/    C6D1 :                                             
(1)  470/    C6D1 :                                             ;Method 3 - 30 cycles
(1)  470/    C6D1 :                                             ;TXA                                                    ;2
(1)  470/    C6D1 :                                             ;TAY                                                    ;2
(1)  470/    C6D1 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  470/    C6D1 :                                             ;ASL                                                    ;2
(1)  470/    C6D1 :                                             ;BCS upper                                              ;2
(1)  470/    C6D1 :                                             ;lower:
(1)  470/    C6D1 :                                             ;       ASL                                                     ;2
(1)  470/    C6D1 :                                             ;       TAX                                                     ;2
(1)  470/    C6D1 :                                             ;       BCS upper_lower                         ;2
(1)  470/    C6D1 :                                             ;       lower_lower:
(1)  470/    C6D1 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  470/    C6D1 :                                             ;       upper_lower:
(1)  470/    C6D1 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  470/    C6D1 :                                             ;upper:
(1)  470/    C6D1 :                                             ;       ASL
(1)  470/    C6D1 :                                             ;       TAX
(1)  470/    C6D1 :                                             ;       BCS upper_upper
(1)  470/    C6D1 :                                             ;       lower_upper:
(1)  470/    C6D1 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  470/    C6D1 :                                             ;       upper_upper:
(1)  470/    C6D1 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  470/    C6D1 :                                             ;After jump:
(1)  470/    C6D1 :                                             ;TYA                                                    ;2
(1)  470/    C6D1 :                                             ;TAX                                                    ;2
(1)  470/    C6D1 :                                             
(1)  470/    C6D1 :                                             ;Method 4 - 28 cycles
(1)  470/    C6D1 :                                             ;LDA (emu_PC,X)                 ;6
(1)  470/    C6D1 :                                             ;TAY                                    ;2
(1)  470/    C6D1 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  470/    C6D1 :                                             ;PHA                                    ;3
(1)  470/    C6D1 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  470/    C6D1 :                                             ;PHA                                    ;3
(1)  470/    C6D1 :                                             ;RTS                                    ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 143 - 1/5/2022 11:50:53


(1)  470/    C6D1 :                                             
(1)  470/    C6D1 :                                             ;Method 5 - 30 cycles
(1)  470/    C6D1 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  470/    C6D3 : A8                                          TAY                                             ;2
(1)  470/    C6D4 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  470/    C6D7 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  470/    C6D9 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  470/    C6DC : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  470/    C6DE : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  470/    C6E1 :                                                                     
(1)  471/    C6E1 :                     
(1)  472/    C6E1 :                     	;0x5E - LSR ABSX
(1)  473/    C6E1 :                     	LSR_ABSX:
(1)  474/    C6E1 : (MACRO)             		OP_MACRO 94, "LSR", "ABSX", "LSR_ABSX"
(1)  474/    C6E1 :                                             ;TODO
(1)  475/    C6E1 : (MACRO)             		NEXT_MACRO
(1)  475/    C6E1 :                                             
(1)  475/    C6E1 :  (MACRO-2)                                  halt
(1)  475/    C6E1 : 00                                  BRK
(1)  475/    C6E2 : 00                                  BRK
(1)  475/    C6E3 :                                             
(1)  475/    C6E3 :                                             ;Method 1 - 60 cycles
(1)  475/    C6E3 :                                             ;Jump table must be page aligned!!!
(1)  475/    C6E3 :                                             ;LDA (emu_PC,X)                 ;6
(1)  475/    C6E3 :                                             ;ASL                                    ;2
(1)  475/    C6E3 :                                             ;STA emu_ptr,X                  ;4
(1)  475/    C6E3 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  475/    C6E3 :                                             ;ADC #0                                 ;2
(1)  475/    C6E3 :                                             ;STA emu_ptr+1,X                ;4
(1)  475/    C6E3 :                                             ;LDA (emu_ptr,X)                ;6
(1)  475/    C6E3 :                                             ;STA emu_ptr2,X                 ;4
(1)  475/    C6E3 :                                             ;INC emu_ptr,X                  ;6
(1)  475/    C6E3 :                                             ;BCC .skip                              ;2
(1)  475/    C6E3 :                                             ;       INC emu_ptr+1,X         ;6
(1)  475/    C6E3 :                                             ;.skip:
(1)  475/    C6E3 :                                             ;LDA (emu_ptr,X)                ;6
(1)  475/    C6E3 :                                             ;STA emu_ptr2+1,X               ;4
(1)  475/    C6E3 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  475/    C6E3 :                                             
(1)  475/    C6E3 :                                             ;Method 2 - 46 cycles
(1)  475/    C6E3 :                                             ;Jump table must be page aligned!!!
(1)  475/    C6E3 :                                             ;LDA (emu_PC,X)                 ;6
(1)  475/    C6E3 :                                             ;STZ emu_ptr+1,X                ;4
(1)  475/    C6E3 :                                             ;ASL                                    ;2
(1)  475/    C6E3 :                                             ;ROL emu_ptr+1,X                ;6
(1)  475/    C6E3 :                                             ;ASL                                    ;2
(1)  475/    C6E3 :                                             ;ROL emu_ptr+1,X                ;6
(1)  475/    C6E3 :                                             ;STA emu_ptr,X                  ;4                              
(1)  475/    C6E3 :                                             ;LDA emu_ptr+1,X                ;4
(1)  475/    C6E3 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  475/    C6E3 :                                             ;STA emu_ptr+1,X                ;4
(1)  475/    C6E3 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  475/    C6E3 :                                             
(1)  475/    C6E3 :                                             ;Method 3 - 30 cycles
(1)  475/    C6E3 :                                             ;TXA                                                    ;2
(1)  475/    C6E3 :                                             ;TAY                                                    ;2
(1)  475/    C6E3 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  475/    C6E3 :                                             ;ASL                                                    ;2
(1)  475/    C6E3 :                                             ;BCS upper                                              ;2
(1)  475/    C6E3 :                                             ;lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 144 - 1/5/2022 11:50:53


(1)  475/    C6E3 :                                             ;       ASL                                                     ;2
(1)  475/    C6E3 :                                             ;       TAX                                                     ;2
(1)  475/    C6E3 :                                             ;       BCS upper_lower                         ;2
(1)  475/    C6E3 :                                             ;       lower_lower:
(1)  475/    C6E3 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  475/    C6E3 :                                             ;       upper_lower:
(1)  475/    C6E3 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  475/    C6E3 :                                             ;upper:
(1)  475/    C6E3 :                                             ;       ASL
(1)  475/    C6E3 :                                             ;       TAX
(1)  475/    C6E3 :                                             ;       BCS upper_upper
(1)  475/    C6E3 :                                             ;       lower_upper:
(1)  475/    C6E3 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  475/    C6E3 :                                             ;       upper_upper:
(1)  475/    C6E3 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  475/    C6E3 :                                             ;After jump:
(1)  475/    C6E3 :                                             ;TYA                                                    ;2
(1)  475/    C6E3 :                                             ;TAX                                                    ;2
(1)  475/    C6E3 :                                             
(1)  475/    C6E3 :                                             ;Method 4 - 28 cycles
(1)  475/    C6E3 :                                             ;LDA (emu_PC,X)                 ;6
(1)  475/    C6E3 :                                             ;TAY                                    ;2
(1)  475/    C6E3 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  475/    C6E3 :                                             ;PHA                                    ;3
(1)  475/    C6E3 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  475/    C6E3 :                                             ;PHA                                    ;3
(1)  475/    C6E3 :                                             ;RTS                                    ;6
(1)  475/    C6E3 :                                             
(1)  475/    C6E3 :                                             ;Method 5 - 30 cycles
(1)  475/    C6E3 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  475/    C6E5 : A8                                          TAY                                             ;2
(1)  475/    C6E6 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  475/    C6E9 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  475/    C6EB : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  475/    C6EE : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  475/    C6F0 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  475/    C6F3 :                                                                     
(1)  476/    C6F3 :                     
(1)  477/    C6F3 :                     	;0x5F - NOP
(1)  478/    C6F3 :                     	NOP_0x5F:
(1)  479/    C6F3 : (MACRO)             		OP_MACRO 95, "NOP", "IMP", "NOP_0x5F"
(1)  479/    C6F3 :                                             ;TODO
(1)  480/    C6F3 : (MACRO)             		NEXT_MACRO
(1)  480/    C6F3 :                                             
(1)  480/    C6F3 :  (MACRO-2)                                  halt
(1)  480/    C6F3 : 00                                  BRK
(1)  480/    C6F4 : 00                                  BRK
(1)  480/    C6F5 :                                             
(1)  480/    C6F5 :                                             ;Method 1 - 60 cycles
(1)  480/    C6F5 :                                             ;Jump table must be page aligned!!!
(1)  480/    C6F5 :                                             ;LDA (emu_PC,X)                 ;6
(1)  480/    C6F5 :                                             ;ASL                                    ;2
(1)  480/    C6F5 :                                             ;STA emu_ptr,X                  ;4
(1)  480/    C6F5 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  480/    C6F5 :                                             ;ADC #0                                 ;2
(1)  480/    C6F5 :                                             ;STA emu_ptr+1,X                ;4
(1)  480/    C6F5 :                                             ;LDA (emu_ptr,X)                ;6
(1)  480/    C6F5 :                                             ;STA emu_ptr2,X                 ;4
(1)  480/    C6F5 :                                             ;INC emu_ptr,X                  ;6
(1)  480/    C6F5 :                                             ;BCC .skip                              ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 145 - 1/5/2022 11:50:53


(1)  480/    C6F5 :                                             ;       INC emu_ptr+1,X         ;6
(1)  480/    C6F5 :                                             ;.skip:
(1)  480/    C6F5 :                                             ;LDA (emu_ptr,X)                ;6
(1)  480/    C6F5 :                                             ;STA emu_ptr2+1,X               ;4
(1)  480/    C6F5 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  480/    C6F5 :                                             
(1)  480/    C6F5 :                                             ;Method 2 - 46 cycles
(1)  480/    C6F5 :                                             ;Jump table must be page aligned!!!
(1)  480/    C6F5 :                                             ;LDA (emu_PC,X)                 ;6
(1)  480/    C6F5 :                                             ;STZ emu_ptr+1,X                ;4
(1)  480/    C6F5 :                                             ;ASL                                    ;2
(1)  480/    C6F5 :                                             ;ROL emu_ptr+1,X                ;6
(1)  480/    C6F5 :                                             ;ASL                                    ;2
(1)  480/    C6F5 :                                             ;ROL emu_ptr+1,X                ;6
(1)  480/    C6F5 :                                             ;STA emu_ptr,X                  ;4                              
(1)  480/    C6F5 :                                             ;LDA emu_ptr+1,X                ;4
(1)  480/    C6F5 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  480/    C6F5 :                                             ;STA emu_ptr+1,X                ;4
(1)  480/    C6F5 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  480/    C6F5 :                                             
(1)  480/    C6F5 :                                             ;Method 3 - 30 cycles
(1)  480/    C6F5 :                                             ;TXA                                                    ;2
(1)  480/    C6F5 :                                             ;TAY                                                    ;2
(1)  480/    C6F5 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  480/    C6F5 :                                             ;ASL                                                    ;2
(1)  480/    C6F5 :                                             ;BCS upper                                              ;2
(1)  480/    C6F5 :                                             ;lower:
(1)  480/    C6F5 :                                             ;       ASL                                                     ;2
(1)  480/    C6F5 :                                             ;       TAX                                                     ;2
(1)  480/    C6F5 :                                             ;       BCS upper_lower                         ;2
(1)  480/    C6F5 :                                             ;       lower_lower:
(1)  480/    C6F5 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  480/    C6F5 :                                             ;       upper_lower:
(1)  480/    C6F5 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  480/    C6F5 :                                             ;upper:
(1)  480/    C6F5 :                                             ;       ASL
(1)  480/    C6F5 :                                             ;       TAX
(1)  480/    C6F5 :                                             ;       BCS upper_upper
(1)  480/    C6F5 :                                             ;       lower_upper:
(1)  480/    C6F5 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  480/    C6F5 :                                             ;       upper_upper:
(1)  480/    C6F5 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  480/    C6F5 :                                             ;After jump:
(1)  480/    C6F5 :                                             ;TYA                                                    ;2
(1)  480/    C6F5 :                                             ;TAX                                                    ;2
(1)  480/    C6F5 :                                             
(1)  480/    C6F5 :                                             ;Method 4 - 28 cycles
(1)  480/    C6F5 :                                             ;LDA (emu_PC,X)                 ;6
(1)  480/    C6F5 :                                             ;TAY                                    ;2
(1)  480/    C6F5 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  480/    C6F5 :                                             ;PHA                                    ;3
(1)  480/    C6F5 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  480/    C6F5 :                                             ;PHA                                    ;3
(1)  480/    C6F5 :                                             ;RTS                                    ;6
(1)  480/    C6F5 :                                             
(1)  480/    C6F5 :                                             ;Method 5 - 30 cycles
(1)  480/    C6F5 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  480/    C6F7 : A8                                          TAY                                             ;2
(1)  480/    C6F8 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  480/    C6FB : 95 0A                                       STA emu_ptr,X                   ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 146 - 1/5/2022 11:50:53


(1)  480/    C6FD : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  480/    C700 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  480/    C702 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  480/    C705 :                                                                     
(1)  481/    C705 :                     
(1)  482/    C705 :                     	;0x60 - RTS IMP
(1)  483/    C705 :                     	RTS_IMP:
(1)  484/    C705 : (MACRO)             		OP_MACRO 96, "RTS", "IMP", "RTS_IMP"
(1)  484/    C705 :                                             ;TODO
(1)  485/    C705 : (MACRO)             		NEXT_MACRO
(1)  485/    C705 :                                             
(1)  485/    C705 :  (MACRO-2)                                  halt
(1)  485/    C705 : 00                                  BRK
(1)  485/    C706 : 00                                  BRK
(1)  485/    C707 :                                             
(1)  485/    C707 :                                             ;Method 1 - 60 cycles
(1)  485/    C707 :                                             ;Jump table must be page aligned!!!
(1)  485/    C707 :                                             ;LDA (emu_PC,X)                 ;6
(1)  485/    C707 :                                             ;ASL                                    ;2
(1)  485/    C707 :                                             ;STA emu_ptr,X                  ;4
(1)  485/    C707 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  485/    C707 :                                             ;ADC #0                                 ;2
(1)  485/    C707 :                                             ;STA emu_ptr+1,X                ;4
(1)  485/    C707 :                                             ;LDA (emu_ptr,X)                ;6
(1)  485/    C707 :                                             ;STA emu_ptr2,X                 ;4
(1)  485/    C707 :                                             ;INC emu_ptr,X                  ;6
(1)  485/    C707 :                                             ;BCC .skip                              ;2
(1)  485/    C707 :                                             ;       INC emu_ptr+1,X         ;6
(1)  485/    C707 :                                             ;.skip:
(1)  485/    C707 :                                             ;LDA (emu_ptr,X)                ;6
(1)  485/    C707 :                                             ;STA emu_ptr2+1,X               ;4
(1)  485/    C707 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  485/    C707 :                                             
(1)  485/    C707 :                                             ;Method 2 - 46 cycles
(1)  485/    C707 :                                             ;Jump table must be page aligned!!!
(1)  485/    C707 :                                             ;LDA (emu_PC,X)                 ;6
(1)  485/    C707 :                                             ;STZ emu_ptr+1,X                ;4
(1)  485/    C707 :                                             ;ASL                                    ;2
(1)  485/    C707 :                                             ;ROL emu_ptr+1,X                ;6
(1)  485/    C707 :                                             ;ASL                                    ;2
(1)  485/    C707 :                                             ;ROL emu_ptr+1,X                ;6
(1)  485/    C707 :                                             ;STA emu_ptr,X                  ;4                              
(1)  485/    C707 :                                             ;LDA emu_ptr+1,X                ;4
(1)  485/    C707 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  485/    C707 :                                             ;STA emu_ptr+1,X                ;4
(1)  485/    C707 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  485/    C707 :                                             
(1)  485/    C707 :                                             ;Method 3 - 30 cycles
(1)  485/    C707 :                                             ;TXA                                                    ;2
(1)  485/    C707 :                                             ;TAY                                                    ;2
(1)  485/    C707 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  485/    C707 :                                             ;ASL                                                    ;2
(1)  485/    C707 :                                             ;BCS upper                                              ;2
(1)  485/    C707 :                                             ;lower:
(1)  485/    C707 :                                             ;       ASL                                                     ;2
(1)  485/    C707 :                                             ;       TAX                                                     ;2
(1)  485/    C707 :                                             ;       BCS upper_lower                         ;2
(1)  485/    C707 :                                             ;       lower_lower:
(1)  485/    C707 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  485/    C707 :                                             ;       upper_lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 147 - 1/5/2022 11:50:53


(1)  485/    C707 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  485/    C707 :                                             ;upper:
(1)  485/    C707 :                                             ;       ASL
(1)  485/    C707 :                                             ;       TAX
(1)  485/    C707 :                                             ;       BCS upper_upper
(1)  485/    C707 :                                             ;       lower_upper:
(1)  485/    C707 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  485/    C707 :                                             ;       upper_upper:
(1)  485/    C707 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  485/    C707 :                                             ;After jump:
(1)  485/    C707 :                                             ;TYA                                                    ;2
(1)  485/    C707 :                                             ;TAX                                                    ;2
(1)  485/    C707 :                                             
(1)  485/    C707 :                                             ;Method 4 - 28 cycles
(1)  485/    C707 :                                             ;LDA (emu_PC,X)                 ;6
(1)  485/    C707 :                                             ;TAY                                    ;2
(1)  485/    C707 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  485/    C707 :                                             ;PHA                                    ;3
(1)  485/    C707 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  485/    C707 :                                             ;PHA                                    ;3
(1)  485/    C707 :                                             ;RTS                                    ;6
(1)  485/    C707 :                                             
(1)  485/    C707 :                                             ;Method 5 - 30 cycles
(1)  485/    C707 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  485/    C709 : A8                                          TAY                                             ;2
(1)  485/    C70A : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  485/    C70D : 95 0A                                       STA emu_ptr,X                   ;4
(1)  485/    C70F : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  485/    C712 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  485/    C714 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  485/    C717 :                                                                     
(1)  486/    C717 :                     
(1)  487/    C717 :                     	;0x61 - ADC IX
(1)  488/    C717 :                     	ADC_IX:
(1)  489/    C717 : (MACRO)             		OP_MACRO 97, "ADC", "IX", "ADC_IX"
(1)  489/    C717 :                                             ;TODO
(1)  490/    C717 : (MACRO)             		NEXT_MACRO
(1)  490/    C717 :                                             
(1)  490/    C717 :  (MACRO-2)                                  halt
(1)  490/    C717 : 00                                  BRK
(1)  490/    C718 : 00                                  BRK
(1)  490/    C719 :                                             
(1)  490/    C719 :                                             ;Method 1 - 60 cycles
(1)  490/    C719 :                                             ;Jump table must be page aligned!!!
(1)  490/    C719 :                                             ;LDA (emu_PC,X)                 ;6
(1)  490/    C719 :                                             ;ASL                                    ;2
(1)  490/    C719 :                                             ;STA emu_ptr,X                  ;4
(1)  490/    C719 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  490/    C719 :                                             ;ADC #0                                 ;2
(1)  490/    C719 :                                             ;STA emu_ptr+1,X                ;4
(1)  490/    C719 :                                             ;LDA (emu_ptr,X)                ;6
(1)  490/    C719 :                                             ;STA emu_ptr2,X                 ;4
(1)  490/    C719 :                                             ;INC emu_ptr,X                  ;6
(1)  490/    C719 :                                             ;BCC .skip                              ;2
(1)  490/    C719 :                                             ;       INC emu_ptr+1,X         ;6
(1)  490/    C719 :                                             ;.skip:
(1)  490/    C719 :                                             ;LDA (emu_ptr,X)                ;6
(1)  490/    C719 :                                             ;STA emu_ptr2+1,X               ;4
(1)  490/    C719 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  490/    C719 :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 148 - 1/5/2022 11:50:53


(1)  490/    C719 :                                             ;Method 2 - 46 cycles
(1)  490/    C719 :                                             ;Jump table must be page aligned!!!
(1)  490/    C719 :                                             ;LDA (emu_PC,X)                 ;6
(1)  490/    C719 :                                             ;STZ emu_ptr+1,X                ;4
(1)  490/    C719 :                                             ;ASL                                    ;2
(1)  490/    C719 :                                             ;ROL emu_ptr+1,X                ;6
(1)  490/    C719 :                                             ;ASL                                    ;2
(1)  490/    C719 :                                             ;ROL emu_ptr+1,X                ;6
(1)  490/    C719 :                                             ;STA emu_ptr,X                  ;4                              
(1)  490/    C719 :                                             ;LDA emu_ptr+1,X                ;4
(1)  490/    C719 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  490/    C719 :                                             ;STA emu_ptr+1,X                ;4
(1)  490/    C719 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  490/    C719 :                                             
(1)  490/    C719 :                                             ;Method 3 - 30 cycles
(1)  490/    C719 :                                             ;TXA                                                    ;2
(1)  490/    C719 :                                             ;TAY                                                    ;2
(1)  490/    C719 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  490/    C719 :                                             ;ASL                                                    ;2
(1)  490/    C719 :                                             ;BCS upper                                              ;2
(1)  490/    C719 :                                             ;lower:
(1)  490/    C719 :                                             ;       ASL                                                     ;2
(1)  490/    C719 :                                             ;       TAX                                                     ;2
(1)  490/    C719 :                                             ;       BCS upper_lower                         ;2
(1)  490/    C719 :                                             ;       lower_lower:
(1)  490/    C719 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  490/    C719 :                                             ;       upper_lower:
(1)  490/    C719 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  490/    C719 :                                             ;upper:
(1)  490/    C719 :                                             ;       ASL
(1)  490/    C719 :                                             ;       TAX
(1)  490/    C719 :                                             ;       BCS upper_upper
(1)  490/    C719 :                                             ;       lower_upper:
(1)  490/    C719 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  490/    C719 :                                             ;       upper_upper:
(1)  490/    C719 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  490/    C719 :                                             ;After jump:
(1)  490/    C719 :                                             ;TYA                                                    ;2
(1)  490/    C719 :                                             ;TAX                                                    ;2
(1)  490/    C719 :                                             
(1)  490/    C719 :                                             ;Method 4 - 28 cycles
(1)  490/    C719 :                                             ;LDA (emu_PC,X)                 ;6
(1)  490/    C719 :                                             ;TAY                                    ;2
(1)  490/    C719 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  490/    C719 :                                             ;PHA                                    ;3
(1)  490/    C719 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  490/    C719 :                                             ;PHA                                    ;3
(1)  490/    C719 :                                             ;RTS                                    ;6
(1)  490/    C719 :                                             
(1)  490/    C719 :                                             ;Method 5 - 30 cycles
(1)  490/    C719 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  490/    C71B : A8                                          TAY                                             ;2
(1)  490/    C71C : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  490/    C71F : 95 0A                                       STA emu_ptr,X                   ;4
(1)  490/    C721 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  490/    C724 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  490/    C726 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  490/    C729 :                                                                     
(1)  491/    C729 :                     
(1)  492/    C729 :                     	;0x62 - NOP
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 149 - 1/5/2022 11:50:53


(1)  493/    C729 :                     	NOP_0x62:
(1)  494/    C729 : (MACRO)             		OP_MACRO 98, "NOP", "IMP", "NOP_0x62"
(1)  494/    C729 :                                             ;TODO
(1)  495/    C729 : (MACRO)             		NEXT_MACRO
(1)  495/    C729 :                                             
(1)  495/    C729 :  (MACRO-2)                                  halt
(1)  495/    C729 : 00                                  BRK
(1)  495/    C72A : 00                                  BRK
(1)  495/    C72B :                                             
(1)  495/    C72B :                                             ;Method 1 - 60 cycles
(1)  495/    C72B :                                             ;Jump table must be page aligned!!!
(1)  495/    C72B :                                             ;LDA (emu_PC,X)                 ;6
(1)  495/    C72B :                                             ;ASL                                    ;2
(1)  495/    C72B :                                             ;STA emu_ptr,X                  ;4
(1)  495/    C72B :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  495/    C72B :                                             ;ADC #0                                 ;2
(1)  495/    C72B :                                             ;STA emu_ptr+1,X                ;4
(1)  495/    C72B :                                             ;LDA (emu_ptr,X)                ;6
(1)  495/    C72B :                                             ;STA emu_ptr2,X                 ;4
(1)  495/    C72B :                                             ;INC emu_ptr,X                  ;6
(1)  495/    C72B :                                             ;BCC .skip                              ;2
(1)  495/    C72B :                                             ;       INC emu_ptr+1,X         ;6
(1)  495/    C72B :                                             ;.skip:
(1)  495/    C72B :                                             ;LDA (emu_ptr,X)                ;6
(1)  495/    C72B :                                             ;STA emu_ptr2+1,X               ;4
(1)  495/    C72B :                                             ;JMP (emu_ptr2,X)               ;6
(1)  495/    C72B :                                             
(1)  495/    C72B :                                             ;Method 2 - 46 cycles
(1)  495/    C72B :                                             ;Jump table must be page aligned!!!
(1)  495/    C72B :                                             ;LDA (emu_PC,X)                 ;6
(1)  495/    C72B :                                             ;STZ emu_ptr+1,X                ;4
(1)  495/    C72B :                                             ;ASL                                    ;2
(1)  495/    C72B :                                             ;ROL emu_ptr+1,X                ;6
(1)  495/    C72B :                                             ;ASL                                    ;2
(1)  495/    C72B :                                             ;ROL emu_ptr+1,X                ;6
(1)  495/    C72B :                                             ;STA emu_ptr,X                  ;4                              
(1)  495/    C72B :                                             ;LDA emu_ptr+1,X                ;4
(1)  495/    C72B :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  495/    C72B :                                             ;STA emu_ptr+1,X                ;4
(1)  495/    C72B :                                             ;JMP (emu_ptr2,X)               ;6
(1)  495/    C72B :                                             
(1)  495/    C72B :                                             ;Method 3 - 30 cycles
(1)  495/    C72B :                                             ;TXA                                                    ;2
(1)  495/    C72B :                                             ;TAY                                                    ;2
(1)  495/    C72B :                                             ;LDA (emu_PC,X)                                 ;6
(1)  495/    C72B :                                             ;ASL                                                    ;2
(1)  495/    C72B :                                             ;BCS upper                                              ;2
(1)  495/    C72B :                                             ;lower:
(1)  495/    C72B :                                             ;       ASL                                                     ;2
(1)  495/    C72B :                                             ;       TAX                                                     ;2
(1)  495/    C72B :                                             ;       BCS upper_lower                         ;2
(1)  495/    C72B :                                             ;       lower_lower:
(1)  495/    C72B :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  495/    C72B :                                             ;       upper_lower:
(1)  495/    C72B :                                             ;               JMP (JUMP_TABLE2,X)
(1)  495/    C72B :                                             ;upper:
(1)  495/    C72B :                                             ;       ASL
(1)  495/    C72B :                                             ;       TAX
(1)  495/    C72B :                                             ;       BCS upper_upper
(1)  495/    C72B :                                             ;       lower_upper:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 150 - 1/5/2022 11:50:53


(1)  495/    C72B :                                             ;               JMP (JUMP_TABLE3,X)
(1)  495/    C72B :                                             ;       upper_upper:
(1)  495/    C72B :                                             ;               JMP (JUMP_TABLE4,X)
(1)  495/    C72B :                                             ;After jump:
(1)  495/    C72B :                                             ;TYA                                                    ;2
(1)  495/    C72B :                                             ;TAX                                                    ;2
(1)  495/    C72B :                                             
(1)  495/    C72B :                                             ;Method 4 - 28 cycles
(1)  495/    C72B :                                             ;LDA (emu_PC,X)                 ;6
(1)  495/    C72B :                                             ;TAY                                    ;2
(1)  495/    C72B :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  495/    C72B :                                             ;PHA                                    ;3
(1)  495/    C72B :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  495/    C72B :                                             ;PHA                                    ;3
(1)  495/    C72B :                                             ;RTS                                    ;6
(1)  495/    C72B :                                             
(1)  495/    C72B :                                             ;Method 5 - 30 cycles
(1)  495/    C72B : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  495/    C72D : A8                                          TAY                                             ;2
(1)  495/    C72E : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  495/    C731 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  495/    C733 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  495/    C736 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  495/    C738 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  495/    C73B :                                                                     
(1)  496/    C73B :                     
(1)  497/    C73B :                     	;0x63 - NOP
(1)  498/    C73B :                     	NOP_0x63:
(1)  499/    C73B : (MACRO)             		OP_MACRO 99, "NOP", "IMP", "NOP_0x63"
(1)  499/    C73B :                                             ;TODO
(1)  500/    C73B : (MACRO)             		NEXT_MACRO
(1)  500/    C73B :                                             
(1)  500/    C73B :  (MACRO-2)                                  halt
(1)  500/    C73B : 00                                  BRK
(1)  500/    C73C : 00                                  BRK
(1)  500/    C73D :                                             
(1)  500/    C73D :                                             ;Method 1 - 60 cycles
(1)  500/    C73D :                                             ;Jump table must be page aligned!!!
(1)  500/    C73D :                                             ;LDA (emu_PC,X)                 ;6
(1)  500/    C73D :                                             ;ASL                                    ;2
(1)  500/    C73D :                                             ;STA emu_ptr,X                  ;4
(1)  500/    C73D :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  500/    C73D :                                             ;ADC #0                                 ;2
(1)  500/    C73D :                                             ;STA emu_ptr+1,X                ;4
(1)  500/    C73D :                                             ;LDA (emu_ptr,X)                ;6
(1)  500/    C73D :                                             ;STA emu_ptr2,X                 ;4
(1)  500/    C73D :                                             ;INC emu_ptr,X                  ;6
(1)  500/    C73D :                                             ;BCC .skip                              ;2
(1)  500/    C73D :                                             ;       INC emu_ptr+1,X         ;6
(1)  500/    C73D :                                             ;.skip:
(1)  500/    C73D :                                             ;LDA (emu_ptr,X)                ;6
(1)  500/    C73D :                                             ;STA emu_ptr2+1,X               ;4
(1)  500/    C73D :                                             ;JMP (emu_ptr2,X)               ;6
(1)  500/    C73D :                                             
(1)  500/    C73D :                                             ;Method 2 - 46 cycles
(1)  500/    C73D :                                             ;Jump table must be page aligned!!!
(1)  500/    C73D :                                             ;LDA (emu_PC,X)                 ;6
(1)  500/    C73D :                                             ;STZ emu_ptr+1,X                ;4
(1)  500/    C73D :                                             ;ASL                                    ;2
(1)  500/    C73D :                                             ;ROL emu_ptr+1,X                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 151 - 1/5/2022 11:50:53


(1)  500/    C73D :                                             ;ASL                                    ;2
(1)  500/    C73D :                                             ;ROL emu_ptr+1,X                ;6
(1)  500/    C73D :                                             ;STA emu_ptr,X                  ;4                              
(1)  500/    C73D :                                             ;LDA emu_ptr+1,X                ;4
(1)  500/    C73D :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  500/    C73D :                                             ;STA emu_ptr+1,X                ;4
(1)  500/    C73D :                                             ;JMP (emu_ptr2,X)               ;6
(1)  500/    C73D :                                             
(1)  500/    C73D :                                             ;Method 3 - 30 cycles
(1)  500/    C73D :                                             ;TXA                                                    ;2
(1)  500/    C73D :                                             ;TAY                                                    ;2
(1)  500/    C73D :                                             ;LDA (emu_PC,X)                                 ;6
(1)  500/    C73D :                                             ;ASL                                                    ;2
(1)  500/    C73D :                                             ;BCS upper                                              ;2
(1)  500/    C73D :                                             ;lower:
(1)  500/    C73D :                                             ;       ASL                                                     ;2
(1)  500/    C73D :                                             ;       TAX                                                     ;2
(1)  500/    C73D :                                             ;       BCS upper_lower                         ;2
(1)  500/    C73D :                                             ;       lower_lower:
(1)  500/    C73D :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  500/    C73D :                                             ;       upper_lower:
(1)  500/    C73D :                                             ;               JMP (JUMP_TABLE2,X)
(1)  500/    C73D :                                             ;upper:
(1)  500/    C73D :                                             ;       ASL
(1)  500/    C73D :                                             ;       TAX
(1)  500/    C73D :                                             ;       BCS upper_upper
(1)  500/    C73D :                                             ;       lower_upper:
(1)  500/    C73D :                                             ;               JMP (JUMP_TABLE3,X)
(1)  500/    C73D :                                             ;       upper_upper:
(1)  500/    C73D :                                             ;               JMP (JUMP_TABLE4,X)
(1)  500/    C73D :                                             ;After jump:
(1)  500/    C73D :                                             ;TYA                                                    ;2
(1)  500/    C73D :                                             ;TAX                                                    ;2
(1)  500/    C73D :                                             
(1)  500/    C73D :                                             ;Method 4 - 28 cycles
(1)  500/    C73D :                                             ;LDA (emu_PC,X)                 ;6
(1)  500/    C73D :                                             ;TAY                                    ;2
(1)  500/    C73D :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  500/    C73D :                                             ;PHA                                    ;3
(1)  500/    C73D :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  500/    C73D :                                             ;PHA                                    ;3
(1)  500/    C73D :                                             ;RTS                                    ;6
(1)  500/    C73D :                                             
(1)  500/    C73D :                                             ;Method 5 - 30 cycles
(1)  500/    C73D : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  500/    C73F : A8                                          TAY                                             ;2
(1)  500/    C740 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  500/    C743 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  500/    C745 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  500/    C748 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  500/    C74A : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  500/    C74D :                                                                     
(1)  501/    C74D :                     
(1)  502/    C74D :                     	;0x64 - NOP
(1)  503/    C74D :                     	NOP_0x64:
(1)  504/    C74D : (MACRO)             		OP_MACRO 100, "NOP", "IMP", "NOP_0x64"
(1)  504/    C74D :                                             ;TODO
(1)  505/    C74D : (MACRO)             		NEXT_MACRO
(1)  505/    C74D :                                             
(1)  505/    C74D :  (MACRO-2)                                  halt
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 152 - 1/5/2022 11:50:53


(1)  505/    C74D : 00                                  BRK
(1)  505/    C74E : 00                                  BRK
(1)  505/    C74F :                                             
(1)  505/    C74F :                                             ;Method 1 - 60 cycles
(1)  505/    C74F :                                             ;Jump table must be page aligned!!!
(1)  505/    C74F :                                             ;LDA (emu_PC,X)                 ;6
(1)  505/    C74F :                                             ;ASL                                    ;2
(1)  505/    C74F :                                             ;STA emu_ptr,X                  ;4
(1)  505/    C74F :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  505/    C74F :                                             ;ADC #0                                 ;2
(1)  505/    C74F :                                             ;STA emu_ptr+1,X                ;4
(1)  505/    C74F :                                             ;LDA (emu_ptr,X)                ;6
(1)  505/    C74F :                                             ;STA emu_ptr2,X                 ;4
(1)  505/    C74F :                                             ;INC emu_ptr,X                  ;6
(1)  505/    C74F :                                             ;BCC .skip                              ;2
(1)  505/    C74F :                                             ;       INC emu_ptr+1,X         ;6
(1)  505/    C74F :                                             ;.skip:
(1)  505/    C74F :                                             ;LDA (emu_ptr,X)                ;6
(1)  505/    C74F :                                             ;STA emu_ptr2+1,X               ;4
(1)  505/    C74F :                                             ;JMP (emu_ptr2,X)               ;6
(1)  505/    C74F :                                             
(1)  505/    C74F :                                             ;Method 2 - 46 cycles
(1)  505/    C74F :                                             ;Jump table must be page aligned!!!
(1)  505/    C74F :                                             ;LDA (emu_PC,X)                 ;6
(1)  505/    C74F :                                             ;STZ emu_ptr+1,X                ;4
(1)  505/    C74F :                                             ;ASL                                    ;2
(1)  505/    C74F :                                             ;ROL emu_ptr+1,X                ;6
(1)  505/    C74F :                                             ;ASL                                    ;2
(1)  505/    C74F :                                             ;ROL emu_ptr+1,X                ;6
(1)  505/    C74F :                                             ;STA emu_ptr,X                  ;4                              
(1)  505/    C74F :                                             ;LDA emu_ptr+1,X                ;4
(1)  505/    C74F :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  505/    C74F :                                             ;STA emu_ptr+1,X                ;4
(1)  505/    C74F :                                             ;JMP (emu_ptr2,X)               ;6
(1)  505/    C74F :                                             
(1)  505/    C74F :                                             ;Method 3 - 30 cycles
(1)  505/    C74F :                                             ;TXA                                                    ;2
(1)  505/    C74F :                                             ;TAY                                                    ;2
(1)  505/    C74F :                                             ;LDA (emu_PC,X)                                 ;6
(1)  505/    C74F :                                             ;ASL                                                    ;2
(1)  505/    C74F :                                             ;BCS upper                                              ;2
(1)  505/    C74F :                                             ;lower:
(1)  505/    C74F :                                             ;       ASL                                                     ;2
(1)  505/    C74F :                                             ;       TAX                                                     ;2
(1)  505/    C74F :                                             ;       BCS upper_lower                         ;2
(1)  505/    C74F :                                             ;       lower_lower:
(1)  505/    C74F :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  505/    C74F :                                             ;       upper_lower:
(1)  505/    C74F :                                             ;               JMP (JUMP_TABLE2,X)
(1)  505/    C74F :                                             ;upper:
(1)  505/    C74F :                                             ;       ASL
(1)  505/    C74F :                                             ;       TAX
(1)  505/    C74F :                                             ;       BCS upper_upper
(1)  505/    C74F :                                             ;       lower_upper:
(1)  505/    C74F :                                             ;               JMP (JUMP_TABLE3,X)
(1)  505/    C74F :                                             ;       upper_upper:
(1)  505/    C74F :                                             ;               JMP (JUMP_TABLE4,X)
(1)  505/    C74F :                                             ;After jump:
(1)  505/    C74F :                                             ;TYA                                                    ;2
(1)  505/    C74F :                                             ;TAX                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 153 - 1/5/2022 11:50:53


(1)  505/    C74F :                                             
(1)  505/    C74F :                                             ;Method 4 - 28 cycles
(1)  505/    C74F :                                             ;LDA (emu_PC,X)                 ;6
(1)  505/    C74F :                                             ;TAY                                    ;2
(1)  505/    C74F :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  505/    C74F :                                             ;PHA                                    ;3
(1)  505/    C74F :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  505/    C74F :                                             ;PHA                                    ;3
(1)  505/    C74F :                                             ;RTS                                    ;6
(1)  505/    C74F :                                             
(1)  505/    C74F :                                             ;Method 5 - 30 cycles
(1)  505/    C74F : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  505/    C751 : A8                                          TAY                                             ;2
(1)  505/    C752 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  505/    C755 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  505/    C757 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  505/    C75A : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  505/    C75C : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  505/    C75F :                                                                     
(1)  506/    C75F :                     
(1)  507/    C75F :                     	;0x65 - ADC ZP
(1)  508/    C75F :                     	ADC_ZP:
(1)  509/    C75F : (MACRO)             		OP_MACRO 101, "ADC", "ZP", "ADC_ZP"
(1)  509/    C75F :                                             ;TODO
(1)  510/    C75F : (MACRO)             		NEXT_MACRO
(1)  510/    C75F :                                             
(1)  510/    C75F :  (MACRO-2)                                  halt
(1)  510/    C75F : 00                                  BRK
(1)  510/    C760 : 00                                  BRK
(1)  510/    C761 :                                             
(1)  510/    C761 :                                             ;Method 1 - 60 cycles
(1)  510/    C761 :                                             ;Jump table must be page aligned!!!
(1)  510/    C761 :                                             ;LDA (emu_PC,X)                 ;6
(1)  510/    C761 :                                             ;ASL                                    ;2
(1)  510/    C761 :                                             ;STA emu_ptr,X                  ;4
(1)  510/    C761 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  510/    C761 :                                             ;ADC #0                                 ;2
(1)  510/    C761 :                                             ;STA emu_ptr+1,X                ;4
(1)  510/    C761 :                                             ;LDA (emu_ptr,X)                ;6
(1)  510/    C761 :                                             ;STA emu_ptr2,X                 ;4
(1)  510/    C761 :                                             ;INC emu_ptr,X                  ;6
(1)  510/    C761 :                                             ;BCC .skip                              ;2
(1)  510/    C761 :                                             ;       INC emu_ptr+1,X         ;6
(1)  510/    C761 :                                             ;.skip:
(1)  510/    C761 :                                             ;LDA (emu_ptr,X)                ;6
(1)  510/    C761 :                                             ;STA emu_ptr2+1,X               ;4
(1)  510/    C761 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  510/    C761 :                                             
(1)  510/    C761 :                                             ;Method 2 - 46 cycles
(1)  510/    C761 :                                             ;Jump table must be page aligned!!!
(1)  510/    C761 :                                             ;LDA (emu_PC,X)                 ;6
(1)  510/    C761 :                                             ;STZ emu_ptr+1,X                ;4
(1)  510/    C761 :                                             ;ASL                                    ;2
(1)  510/    C761 :                                             ;ROL emu_ptr+1,X                ;6
(1)  510/    C761 :                                             ;ASL                                    ;2
(1)  510/    C761 :                                             ;ROL emu_ptr+1,X                ;6
(1)  510/    C761 :                                             ;STA emu_ptr,X                  ;4                              
(1)  510/    C761 :                                             ;LDA emu_ptr+1,X                ;4
(1)  510/    C761 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  510/    C761 :                                             ;STA emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 154 - 1/5/2022 11:50:53


(1)  510/    C761 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  510/    C761 :                                             
(1)  510/    C761 :                                             ;Method 3 - 30 cycles
(1)  510/    C761 :                                             ;TXA                                                    ;2
(1)  510/    C761 :                                             ;TAY                                                    ;2
(1)  510/    C761 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  510/    C761 :                                             ;ASL                                                    ;2
(1)  510/    C761 :                                             ;BCS upper                                              ;2
(1)  510/    C761 :                                             ;lower:
(1)  510/    C761 :                                             ;       ASL                                                     ;2
(1)  510/    C761 :                                             ;       TAX                                                     ;2
(1)  510/    C761 :                                             ;       BCS upper_lower                         ;2
(1)  510/    C761 :                                             ;       lower_lower:
(1)  510/    C761 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  510/    C761 :                                             ;       upper_lower:
(1)  510/    C761 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  510/    C761 :                                             ;upper:
(1)  510/    C761 :                                             ;       ASL
(1)  510/    C761 :                                             ;       TAX
(1)  510/    C761 :                                             ;       BCS upper_upper
(1)  510/    C761 :                                             ;       lower_upper:
(1)  510/    C761 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  510/    C761 :                                             ;       upper_upper:
(1)  510/    C761 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  510/    C761 :                                             ;After jump:
(1)  510/    C761 :                                             ;TYA                                                    ;2
(1)  510/    C761 :                                             ;TAX                                                    ;2
(1)  510/    C761 :                                             
(1)  510/    C761 :                                             ;Method 4 - 28 cycles
(1)  510/    C761 :                                             ;LDA (emu_PC,X)                 ;6
(1)  510/    C761 :                                             ;TAY                                    ;2
(1)  510/    C761 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  510/    C761 :                                             ;PHA                                    ;3
(1)  510/    C761 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  510/    C761 :                                             ;PHA                                    ;3
(1)  510/    C761 :                                             ;RTS                                    ;6
(1)  510/    C761 :                                             
(1)  510/    C761 :                                             ;Method 5 - 30 cycles
(1)  510/    C761 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  510/    C763 : A8                                          TAY                                             ;2
(1)  510/    C764 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  510/    C767 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  510/    C769 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  510/    C76C : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  510/    C76E : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  510/    C771 :                                                                     
(1)  511/    C771 :                     
(1)  512/    C771 :                     	;0x66 - ROR ZP
(1)  513/    C771 :                     	ROR_ZP:
(1)  514/    C771 : (MACRO)             		OP_MACRO 102, "ROR", "ZP", "ROR_ZP"
(1)  514/    C771 :                                             ;TODO
(1)  515/    C771 : (MACRO)             		NEXT_MACRO
(1)  515/    C771 :                                             
(1)  515/    C771 :  (MACRO-2)                                  halt
(1)  515/    C771 : 00                                  BRK
(1)  515/    C772 : 00                                  BRK
(1)  515/    C773 :                                             
(1)  515/    C773 :                                             ;Method 1 - 60 cycles
(1)  515/    C773 :                                             ;Jump table must be page aligned!!!
(1)  515/    C773 :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 155 - 1/5/2022 11:50:53


(1)  515/    C773 :                                             ;ASL                                    ;2
(1)  515/    C773 :                                             ;STA emu_ptr,X                  ;4
(1)  515/    C773 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  515/    C773 :                                             ;ADC #0                                 ;2
(1)  515/    C773 :                                             ;STA emu_ptr+1,X                ;4
(1)  515/    C773 :                                             ;LDA (emu_ptr,X)                ;6
(1)  515/    C773 :                                             ;STA emu_ptr2,X                 ;4
(1)  515/    C773 :                                             ;INC emu_ptr,X                  ;6
(1)  515/    C773 :                                             ;BCC .skip                              ;2
(1)  515/    C773 :                                             ;       INC emu_ptr+1,X         ;6
(1)  515/    C773 :                                             ;.skip:
(1)  515/    C773 :                                             ;LDA (emu_ptr,X)                ;6
(1)  515/    C773 :                                             ;STA emu_ptr2+1,X               ;4
(1)  515/    C773 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  515/    C773 :                                             
(1)  515/    C773 :                                             ;Method 2 - 46 cycles
(1)  515/    C773 :                                             ;Jump table must be page aligned!!!
(1)  515/    C773 :                                             ;LDA (emu_PC,X)                 ;6
(1)  515/    C773 :                                             ;STZ emu_ptr+1,X                ;4
(1)  515/    C773 :                                             ;ASL                                    ;2
(1)  515/    C773 :                                             ;ROL emu_ptr+1,X                ;6
(1)  515/    C773 :                                             ;ASL                                    ;2
(1)  515/    C773 :                                             ;ROL emu_ptr+1,X                ;6
(1)  515/    C773 :                                             ;STA emu_ptr,X                  ;4                              
(1)  515/    C773 :                                             ;LDA emu_ptr+1,X                ;4
(1)  515/    C773 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  515/    C773 :                                             ;STA emu_ptr+1,X                ;4
(1)  515/    C773 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  515/    C773 :                                             
(1)  515/    C773 :                                             ;Method 3 - 30 cycles
(1)  515/    C773 :                                             ;TXA                                                    ;2
(1)  515/    C773 :                                             ;TAY                                                    ;2
(1)  515/    C773 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  515/    C773 :                                             ;ASL                                                    ;2
(1)  515/    C773 :                                             ;BCS upper                                              ;2
(1)  515/    C773 :                                             ;lower:
(1)  515/    C773 :                                             ;       ASL                                                     ;2
(1)  515/    C773 :                                             ;       TAX                                                     ;2
(1)  515/    C773 :                                             ;       BCS upper_lower                         ;2
(1)  515/    C773 :                                             ;       lower_lower:
(1)  515/    C773 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  515/    C773 :                                             ;       upper_lower:
(1)  515/    C773 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  515/    C773 :                                             ;upper:
(1)  515/    C773 :                                             ;       ASL
(1)  515/    C773 :                                             ;       TAX
(1)  515/    C773 :                                             ;       BCS upper_upper
(1)  515/    C773 :                                             ;       lower_upper:
(1)  515/    C773 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  515/    C773 :                                             ;       upper_upper:
(1)  515/    C773 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  515/    C773 :                                             ;After jump:
(1)  515/    C773 :                                             ;TYA                                                    ;2
(1)  515/    C773 :                                             ;TAX                                                    ;2
(1)  515/    C773 :                                             
(1)  515/    C773 :                                             ;Method 4 - 28 cycles
(1)  515/    C773 :                                             ;LDA (emu_PC,X)                 ;6
(1)  515/    C773 :                                             ;TAY                                    ;2
(1)  515/    C773 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  515/    C773 :                                             ;PHA                                    ;3
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 156 - 1/5/2022 11:50:53


(1)  515/    C773 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  515/    C773 :                                             ;PHA                                    ;3
(1)  515/    C773 :                                             ;RTS                                    ;6
(1)  515/    C773 :                                             
(1)  515/    C773 :                                             ;Method 5 - 30 cycles
(1)  515/    C773 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  515/    C775 : A8                                          TAY                                             ;2
(1)  515/    C776 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  515/    C779 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  515/    C77B : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  515/    C77E : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  515/    C780 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  515/    C783 :                                                                     
(1)  516/    C783 :                     
(1)  517/    C783 :                     	;0x67 - NOP
(1)  518/    C783 :                     	NOP_0x67:
(1)  519/    C783 : (MACRO)             		OP_MACRO 103, "NOP", "IMP", "NOP_0x67"
(1)  519/    C783 :                                             ;TODO
(1)  520/    C783 : (MACRO)             		NEXT_MACRO
(1)  520/    C783 :                                             
(1)  520/    C783 :  (MACRO-2)                                  halt
(1)  520/    C783 : 00                                  BRK
(1)  520/    C784 : 00                                  BRK
(1)  520/    C785 :                                             
(1)  520/    C785 :                                             ;Method 1 - 60 cycles
(1)  520/    C785 :                                             ;Jump table must be page aligned!!!
(1)  520/    C785 :                                             ;LDA (emu_PC,X)                 ;6
(1)  520/    C785 :                                             ;ASL                                    ;2
(1)  520/    C785 :                                             ;STA emu_ptr,X                  ;4
(1)  520/    C785 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  520/    C785 :                                             ;ADC #0                                 ;2
(1)  520/    C785 :                                             ;STA emu_ptr+1,X                ;4
(1)  520/    C785 :                                             ;LDA (emu_ptr,X)                ;6
(1)  520/    C785 :                                             ;STA emu_ptr2,X                 ;4
(1)  520/    C785 :                                             ;INC emu_ptr,X                  ;6
(1)  520/    C785 :                                             ;BCC .skip                              ;2
(1)  520/    C785 :                                             ;       INC emu_ptr+1,X         ;6
(1)  520/    C785 :                                             ;.skip:
(1)  520/    C785 :                                             ;LDA (emu_ptr,X)                ;6
(1)  520/    C785 :                                             ;STA emu_ptr2+1,X               ;4
(1)  520/    C785 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  520/    C785 :                                             
(1)  520/    C785 :                                             ;Method 2 - 46 cycles
(1)  520/    C785 :                                             ;Jump table must be page aligned!!!
(1)  520/    C785 :                                             ;LDA (emu_PC,X)                 ;6
(1)  520/    C785 :                                             ;STZ emu_ptr+1,X                ;4
(1)  520/    C785 :                                             ;ASL                                    ;2
(1)  520/    C785 :                                             ;ROL emu_ptr+1,X                ;6
(1)  520/    C785 :                                             ;ASL                                    ;2
(1)  520/    C785 :                                             ;ROL emu_ptr+1,X                ;6
(1)  520/    C785 :                                             ;STA emu_ptr,X                  ;4                              
(1)  520/    C785 :                                             ;LDA emu_ptr+1,X                ;4
(1)  520/    C785 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  520/    C785 :                                             ;STA emu_ptr+1,X                ;4
(1)  520/    C785 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  520/    C785 :                                             
(1)  520/    C785 :                                             ;Method 3 - 30 cycles
(1)  520/    C785 :                                             ;TXA                                                    ;2
(1)  520/    C785 :                                             ;TAY                                                    ;2
(1)  520/    C785 :                                             ;LDA (emu_PC,X)                                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 157 - 1/5/2022 11:50:53


(1)  520/    C785 :                                             ;ASL                                                    ;2
(1)  520/    C785 :                                             ;BCS upper                                              ;2
(1)  520/    C785 :                                             ;lower:
(1)  520/    C785 :                                             ;       ASL                                                     ;2
(1)  520/    C785 :                                             ;       TAX                                                     ;2
(1)  520/    C785 :                                             ;       BCS upper_lower                         ;2
(1)  520/    C785 :                                             ;       lower_lower:
(1)  520/    C785 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  520/    C785 :                                             ;       upper_lower:
(1)  520/    C785 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  520/    C785 :                                             ;upper:
(1)  520/    C785 :                                             ;       ASL
(1)  520/    C785 :                                             ;       TAX
(1)  520/    C785 :                                             ;       BCS upper_upper
(1)  520/    C785 :                                             ;       lower_upper:
(1)  520/    C785 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  520/    C785 :                                             ;       upper_upper:
(1)  520/    C785 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  520/    C785 :                                             ;After jump:
(1)  520/    C785 :                                             ;TYA                                                    ;2
(1)  520/    C785 :                                             ;TAX                                                    ;2
(1)  520/    C785 :                                             
(1)  520/    C785 :                                             ;Method 4 - 28 cycles
(1)  520/    C785 :                                             ;LDA (emu_PC,X)                 ;6
(1)  520/    C785 :                                             ;TAY                                    ;2
(1)  520/    C785 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  520/    C785 :                                             ;PHA                                    ;3
(1)  520/    C785 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  520/    C785 :                                             ;PHA                                    ;3
(1)  520/    C785 :                                             ;RTS                                    ;6
(1)  520/    C785 :                                             
(1)  520/    C785 :                                             ;Method 5 - 30 cycles
(1)  520/    C785 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  520/    C787 : A8                                          TAY                                             ;2
(1)  520/    C788 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  520/    C78B : 95 0A                                       STA emu_ptr,X                   ;4
(1)  520/    C78D : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  520/    C790 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  520/    C792 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  520/    C795 :                                                                     
(1)  521/    C795 :                     
(1)  522/    C795 :                     	;0x68 - PLA IMP
(1)  523/    C795 :                     	PLA_IMP:
(1)  524/    C795 : (MACRO)             		OP_MACRO 104, "PLA", "IMP", "PLA_IMP"
(1)  524/    C795 :                                             ;TODO
(1)  525/    C795 : (MACRO)             		NEXT_MACRO
(1)  525/    C795 :                                             
(1)  525/    C795 :  (MACRO-2)                                  halt
(1)  525/    C795 : 00                                  BRK
(1)  525/    C796 : 00                                  BRK
(1)  525/    C797 :                                             
(1)  525/    C797 :                                             ;Method 1 - 60 cycles
(1)  525/    C797 :                                             ;Jump table must be page aligned!!!
(1)  525/    C797 :                                             ;LDA (emu_PC,X)                 ;6
(1)  525/    C797 :                                             ;ASL                                    ;2
(1)  525/    C797 :                                             ;STA emu_ptr,X                  ;4
(1)  525/    C797 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  525/    C797 :                                             ;ADC #0                                 ;2
(1)  525/    C797 :                                             ;STA emu_ptr+1,X                ;4
(1)  525/    C797 :                                             ;LDA (emu_ptr,X)                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 158 - 1/5/2022 11:50:53


(1)  525/    C797 :                                             ;STA emu_ptr2,X                 ;4
(1)  525/    C797 :                                             ;INC emu_ptr,X                  ;6
(1)  525/    C797 :                                             ;BCC .skip                              ;2
(1)  525/    C797 :                                             ;       INC emu_ptr+1,X         ;6
(1)  525/    C797 :                                             ;.skip:
(1)  525/    C797 :                                             ;LDA (emu_ptr,X)                ;6
(1)  525/    C797 :                                             ;STA emu_ptr2+1,X               ;4
(1)  525/    C797 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  525/    C797 :                                             
(1)  525/    C797 :                                             ;Method 2 - 46 cycles
(1)  525/    C797 :                                             ;Jump table must be page aligned!!!
(1)  525/    C797 :                                             ;LDA (emu_PC,X)                 ;6
(1)  525/    C797 :                                             ;STZ emu_ptr+1,X                ;4
(1)  525/    C797 :                                             ;ASL                                    ;2
(1)  525/    C797 :                                             ;ROL emu_ptr+1,X                ;6
(1)  525/    C797 :                                             ;ASL                                    ;2
(1)  525/    C797 :                                             ;ROL emu_ptr+1,X                ;6
(1)  525/    C797 :                                             ;STA emu_ptr,X                  ;4                              
(1)  525/    C797 :                                             ;LDA emu_ptr+1,X                ;4
(1)  525/    C797 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  525/    C797 :                                             ;STA emu_ptr+1,X                ;4
(1)  525/    C797 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  525/    C797 :                                             
(1)  525/    C797 :                                             ;Method 3 - 30 cycles
(1)  525/    C797 :                                             ;TXA                                                    ;2
(1)  525/    C797 :                                             ;TAY                                                    ;2
(1)  525/    C797 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  525/    C797 :                                             ;ASL                                                    ;2
(1)  525/    C797 :                                             ;BCS upper                                              ;2
(1)  525/    C797 :                                             ;lower:
(1)  525/    C797 :                                             ;       ASL                                                     ;2
(1)  525/    C797 :                                             ;       TAX                                                     ;2
(1)  525/    C797 :                                             ;       BCS upper_lower                         ;2
(1)  525/    C797 :                                             ;       lower_lower:
(1)  525/    C797 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  525/    C797 :                                             ;       upper_lower:
(1)  525/    C797 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  525/    C797 :                                             ;upper:
(1)  525/    C797 :                                             ;       ASL
(1)  525/    C797 :                                             ;       TAX
(1)  525/    C797 :                                             ;       BCS upper_upper
(1)  525/    C797 :                                             ;       lower_upper:
(1)  525/    C797 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  525/    C797 :                                             ;       upper_upper:
(1)  525/    C797 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  525/    C797 :                                             ;After jump:
(1)  525/    C797 :                                             ;TYA                                                    ;2
(1)  525/    C797 :                                             ;TAX                                                    ;2
(1)  525/    C797 :                                             
(1)  525/    C797 :                                             ;Method 4 - 28 cycles
(1)  525/    C797 :                                             ;LDA (emu_PC,X)                 ;6
(1)  525/    C797 :                                             ;TAY                                    ;2
(1)  525/    C797 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  525/    C797 :                                             ;PHA                                    ;3
(1)  525/    C797 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  525/    C797 :                                             ;PHA                                    ;3
(1)  525/    C797 :                                             ;RTS                                    ;6
(1)  525/    C797 :                                             
(1)  525/    C797 :                                             ;Method 5 - 30 cycles
(1)  525/    C797 : A1 02                                       LDA (emu_PC,X)                  ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 159 - 1/5/2022 11:50:53


(1)  525/    C799 : A8                                          TAY                                             ;2
(1)  525/    C79A : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  525/    C79D : 95 0A                                       STA emu_ptr,X                   ;4
(1)  525/    C79F : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  525/    C7A2 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  525/    C7A4 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  525/    C7A7 :                                                                     
(1)  526/    C7A7 :                     
(1)  527/    C7A7 :                     	;0x69 - ADC IMMED
(1)  528/    C7A7 :                     	ADC_IMMED:
(1)  529/    C7A7 : (MACRO)             		OP_MACRO 105, "ADC", "IMMED", "ADC_IMMED"
(1)  529/    C7A7 :                                             ;TODO
(1)  530/    C7A7 : (MACRO)             		NEXT_MACRO
(1)  530/    C7A7 :                                             
(1)  530/    C7A7 :  (MACRO-2)                                  halt
(1)  530/    C7A7 : 00                                  BRK
(1)  530/    C7A8 : 00                                  BRK
(1)  530/    C7A9 :                                             
(1)  530/    C7A9 :                                             ;Method 1 - 60 cycles
(1)  530/    C7A9 :                                             ;Jump table must be page aligned!!!
(1)  530/    C7A9 :                                             ;LDA (emu_PC,X)                 ;6
(1)  530/    C7A9 :                                             ;ASL                                    ;2
(1)  530/    C7A9 :                                             ;STA emu_ptr,X                  ;4
(1)  530/    C7A9 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  530/    C7A9 :                                             ;ADC #0                                 ;2
(1)  530/    C7A9 :                                             ;STA emu_ptr+1,X                ;4
(1)  530/    C7A9 :                                             ;LDA (emu_ptr,X)                ;6
(1)  530/    C7A9 :                                             ;STA emu_ptr2,X                 ;4
(1)  530/    C7A9 :                                             ;INC emu_ptr,X                  ;6
(1)  530/    C7A9 :                                             ;BCC .skip                              ;2
(1)  530/    C7A9 :                                             ;       INC emu_ptr+1,X         ;6
(1)  530/    C7A9 :                                             ;.skip:
(1)  530/    C7A9 :                                             ;LDA (emu_ptr,X)                ;6
(1)  530/    C7A9 :                                             ;STA emu_ptr2+1,X               ;4
(1)  530/    C7A9 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  530/    C7A9 :                                             
(1)  530/    C7A9 :                                             ;Method 2 - 46 cycles
(1)  530/    C7A9 :                                             ;Jump table must be page aligned!!!
(1)  530/    C7A9 :                                             ;LDA (emu_PC,X)                 ;6
(1)  530/    C7A9 :                                             ;STZ emu_ptr+1,X                ;4
(1)  530/    C7A9 :                                             ;ASL                                    ;2
(1)  530/    C7A9 :                                             ;ROL emu_ptr+1,X                ;6
(1)  530/    C7A9 :                                             ;ASL                                    ;2
(1)  530/    C7A9 :                                             ;ROL emu_ptr+1,X                ;6
(1)  530/    C7A9 :                                             ;STA emu_ptr,X                  ;4                              
(1)  530/    C7A9 :                                             ;LDA emu_ptr+1,X                ;4
(1)  530/    C7A9 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  530/    C7A9 :                                             ;STA emu_ptr+1,X                ;4
(1)  530/    C7A9 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  530/    C7A9 :                                             
(1)  530/    C7A9 :                                             ;Method 3 - 30 cycles
(1)  530/    C7A9 :                                             ;TXA                                                    ;2
(1)  530/    C7A9 :                                             ;TAY                                                    ;2
(1)  530/    C7A9 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  530/    C7A9 :                                             ;ASL                                                    ;2
(1)  530/    C7A9 :                                             ;BCS upper                                              ;2
(1)  530/    C7A9 :                                             ;lower:
(1)  530/    C7A9 :                                             ;       ASL                                                     ;2
(1)  530/    C7A9 :                                             ;       TAX                                                     ;2
(1)  530/    C7A9 :                                             ;       BCS upper_lower                         ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 160 - 1/5/2022 11:50:53


(1)  530/    C7A9 :                                             ;       lower_lower:
(1)  530/    C7A9 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  530/    C7A9 :                                             ;       upper_lower:
(1)  530/    C7A9 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  530/    C7A9 :                                             ;upper:
(1)  530/    C7A9 :                                             ;       ASL
(1)  530/    C7A9 :                                             ;       TAX
(1)  530/    C7A9 :                                             ;       BCS upper_upper
(1)  530/    C7A9 :                                             ;       lower_upper:
(1)  530/    C7A9 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  530/    C7A9 :                                             ;       upper_upper:
(1)  530/    C7A9 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  530/    C7A9 :                                             ;After jump:
(1)  530/    C7A9 :                                             ;TYA                                                    ;2
(1)  530/    C7A9 :                                             ;TAX                                                    ;2
(1)  530/    C7A9 :                                             
(1)  530/    C7A9 :                                             ;Method 4 - 28 cycles
(1)  530/    C7A9 :                                             ;LDA (emu_PC,X)                 ;6
(1)  530/    C7A9 :                                             ;TAY                                    ;2
(1)  530/    C7A9 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  530/    C7A9 :                                             ;PHA                                    ;3
(1)  530/    C7A9 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  530/    C7A9 :                                             ;PHA                                    ;3
(1)  530/    C7A9 :                                             ;RTS                                    ;6
(1)  530/    C7A9 :                                             
(1)  530/    C7A9 :                                             ;Method 5 - 30 cycles
(1)  530/    C7A9 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  530/    C7AB : A8                                          TAY                                             ;2
(1)  530/    C7AC : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  530/    C7AF : 95 0A                                       STA emu_ptr,X                   ;4
(1)  530/    C7B1 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  530/    C7B4 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  530/    C7B6 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  530/    C7B9 :                                                                     
(1)  531/    C7B9 :                     
(1)  532/    C7B9 :                     	;0x6A - ROR A
(1)  533/    C7B9 :                     	ROR_A:
(1)  534/    C7B9 : (MACRO)             		OP_MACRO 106, "ROR", "A", "ROR_A"
(1)  534/    C7B9 :                                             ;TODO
(1)  535/    C7B9 : (MACRO)             		NEXT_MACRO
(1)  535/    C7B9 :                                             
(1)  535/    C7B9 :  (MACRO-2)                                  halt
(1)  535/    C7B9 : 00                                  BRK
(1)  535/    C7BA : 00                                  BRK
(1)  535/    C7BB :                                             
(1)  535/    C7BB :                                             ;Method 1 - 60 cycles
(1)  535/    C7BB :                                             ;Jump table must be page aligned!!!
(1)  535/    C7BB :                                             ;LDA (emu_PC,X)                 ;6
(1)  535/    C7BB :                                             ;ASL                                    ;2
(1)  535/    C7BB :                                             ;STA emu_ptr,X                  ;4
(1)  535/    C7BB :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  535/    C7BB :                                             ;ADC #0                                 ;2
(1)  535/    C7BB :                                             ;STA emu_ptr+1,X                ;4
(1)  535/    C7BB :                                             ;LDA (emu_ptr,X)                ;6
(1)  535/    C7BB :                                             ;STA emu_ptr2,X                 ;4
(1)  535/    C7BB :                                             ;INC emu_ptr,X                  ;6
(1)  535/    C7BB :                                             ;BCC .skip                              ;2
(1)  535/    C7BB :                                             ;       INC emu_ptr+1,X         ;6
(1)  535/    C7BB :                                             ;.skip:
(1)  535/    C7BB :                                             ;LDA (emu_ptr,X)                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 161 - 1/5/2022 11:50:53


(1)  535/    C7BB :                                             ;STA emu_ptr2+1,X               ;4
(1)  535/    C7BB :                                             ;JMP (emu_ptr2,X)               ;6
(1)  535/    C7BB :                                             
(1)  535/    C7BB :                                             ;Method 2 - 46 cycles
(1)  535/    C7BB :                                             ;Jump table must be page aligned!!!
(1)  535/    C7BB :                                             ;LDA (emu_PC,X)                 ;6
(1)  535/    C7BB :                                             ;STZ emu_ptr+1,X                ;4
(1)  535/    C7BB :                                             ;ASL                                    ;2
(1)  535/    C7BB :                                             ;ROL emu_ptr+1,X                ;6
(1)  535/    C7BB :                                             ;ASL                                    ;2
(1)  535/    C7BB :                                             ;ROL emu_ptr+1,X                ;6
(1)  535/    C7BB :                                             ;STA emu_ptr,X                  ;4                              
(1)  535/    C7BB :                                             ;LDA emu_ptr+1,X                ;4
(1)  535/    C7BB :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  535/    C7BB :                                             ;STA emu_ptr+1,X                ;4
(1)  535/    C7BB :                                             ;JMP (emu_ptr2,X)               ;6
(1)  535/    C7BB :                                             
(1)  535/    C7BB :                                             ;Method 3 - 30 cycles
(1)  535/    C7BB :                                             ;TXA                                                    ;2
(1)  535/    C7BB :                                             ;TAY                                                    ;2
(1)  535/    C7BB :                                             ;LDA (emu_PC,X)                                 ;6
(1)  535/    C7BB :                                             ;ASL                                                    ;2
(1)  535/    C7BB :                                             ;BCS upper                                              ;2
(1)  535/    C7BB :                                             ;lower:
(1)  535/    C7BB :                                             ;       ASL                                                     ;2
(1)  535/    C7BB :                                             ;       TAX                                                     ;2
(1)  535/    C7BB :                                             ;       BCS upper_lower                         ;2
(1)  535/    C7BB :                                             ;       lower_lower:
(1)  535/    C7BB :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  535/    C7BB :                                             ;       upper_lower:
(1)  535/    C7BB :                                             ;               JMP (JUMP_TABLE2,X)
(1)  535/    C7BB :                                             ;upper:
(1)  535/    C7BB :                                             ;       ASL
(1)  535/    C7BB :                                             ;       TAX
(1)  535/    C7BB :                                             ;       BCS upper_upper
(1)  535/    C7BB :                                             ;       lower_upper:
(1)  535/    C7BB :                                             ;               JMP (JUMP_TABLE3,X)
(1)  535/    C7BB :                                             ;       upper_upper:
(1)  535/    C7BB :                                             ;               JMP (JUMP_TABLE4,X)
(1)  535/    C7BB :                                             ;After jump:
(1)  535/    C7BB :                                             ;TYA                                                    ;2
(1)  535/    C7BB :                                             ;TAX                                                    ;2
(1)  535/    C7BB :                                             
(1)  535/    C7BB :                                             ;Method 4 - 28 cycles
(1)  535/    C7BB :                                             ;LDA (emu_PC,X)                 ;6
(1)  535/    C7BB :                                             ;TAY                                    ;2
(1)  535/    C7BB :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  535/    C7BB :                                             ;PHA                                    ;3
(1)  535/    C7BB :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  535/    C7BB :                                             ;PHA                                    ;3
(1)  535/    C7BB :                                             ;RTS                                    ;6
(1)  535/    C7BB :                                             
(1)  535/    C7BB :                                             ;Method 5 - 30 cycles
(1)  535/    C7BB : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  535/    C7BD : A8                                          TAY                                             ;2
(1)  535/    C7BE : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  535/    C7C1 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  535/    C7C3 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  535/    C7C6 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  535/    C7C8 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 162 - 1/5/2022 11:50:53


(1)  535/    C7CB :                                                                     
(1)  536/    C7CB :                     
(1)  537/    C7CB :                     	;0x6B - NOP
(1)  538/    C7CB :                     	NOP_0x6B:
(1)  539/    C7CB : (MACRO)             		OP_MACRO 107, "NOP", "IMP", "NOP_0x6B"
(1)  539/    C7CB :                                             ;TODO
(1)  540/    C7CB : (MACRO)             		NEXT_MACRO
(1)  540/    C7CB :                                             
(1)  540/    C7CB :  (MACRO-2)                                  halt
(1)  540/    C7CB : 00                                  BRK
(1)  540/    C7CC : 00                                  BRK
(1)  540/    C7CD :                                             
(1)  540/    C7CD :                                             ;Method 1 - 60 cycles
(1)  540/    C7CD :                                             ;Jump table must be page aligned!!!
(1)  540/    C7CD :                                             ;LDA (emu_PC,X)                 ;6
(1)  540/    C7CD :                                             ;ASL                                    ;2
(1)  540/    C7CD :                                             ;STA emu_ptr,X                  ;4
(1)  540/    C7CD :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  540/    C7CD :                                             ;ADC #0                                 ;2
(1)  540/    C7CD :                                             ;STA emu_ptr+1,X                ;4
(1)  540/    C7CD :                                             ;LDA (emu_ptr,X)                ;6
(1)  540/    C7CD :                                             ;STA emu_ptr2,X                 ;4
(1)  540/    C7CD :                                             ;INC emu_ptr,X                  ;6
(1)  540/    C7CD :                                             ;BCC .skip                              ;2
(1)  540/    C7CD :                                             ;       INC emu_ptr+1,X         ;6
(1)  540/    C7CD :                                             ;.skip:
(1)  540/    C7CD :                                             ;LDA (emu_ptr,X)                ;6
(1)  540/    C7CD :                                             ;STA emu_ptr2+1,X               ;4
(1)  540/    C7CD :                                             ;JMP (emu_ptr2,X)               ;6
(1)  540/    C7CD :                                             
(1)  540/    C7CD :                                             ;Method 2 - 46 cycles
(1)  540/    C7CD :                                             ;Jump table must be page aligned!!!
(1)  540/    C7CD :                                             ;LDA (emu_PC,X)                 ;6
(1)  540/    C7CD :                                             ;STZ emu_ptr+1,X                ;4
(1)  540/    C7CD :                                             ;ASL                                    ;2
(1)  540/    C7CD :                                             ;ROL emu_ptr+1,X                ;6
(1)  540/    C7CD :                                             ;ASL                                    ;2
(1)  540/    C7CD :                                             ;ROL emu_ptr+1,X                ;6
(1)  540/    C7CD :                                             ;STA emu_ptr,X                  ;4                              
(1)  540/    C7CD :                                             ;LDA emu_ptr+1,X                ;4
(1)  540/    C7CD :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  540/    C7CD :                                             ;STA emu_ptr+1,X                ;4
(1)  540/    C7CD :                                             ;JMP (emu_ptr2,X)               ;6
(1)  540/    C7CD :                                             
(1)  540/    C7CD :                                             ;Method 3 - 30 cycles
(1)  540/    C7CD :                                             ;TXA                                                    ;2
(1)  540/    C7CD :                                             ;TAY                                                    ;2
(1)  540/    C7CD :                                             ;LDA (emu_PC,X)                                 ;6
(1)  540/    C7CD :                                             ;ASL                                                    ;2
(1)  540/    C7CD :                                             ;BCS upper                                              ;2
(1)  540/    C7CD :                                             ;lower:
(1)  540/    C7CD :                                             ;       ASL                                                     ;2
(1)  540/    C7CD :                                             ;       TAX                                                     ;2
(1)  540/    C7CD :                                             ;       BCS upper_lower                         ;2
(1)  540/    C7CD :                                             ;       lower_lower:
(1)  540/    C7CD :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  540/    C7CD :                                             ;       upper_lower:
(1)  540/    C7CD :                                             ;               JMP (JUMP_TABLE2,X)
(1)  540/    C7CD :                                             ;upper:
(1)  540/    C7CD :                                             ;       ASL
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 163 - 1/5/2022 11:50:53


(1)  540/    C7CD :                                             ;       TAX
(1)  540/    C7CD :                                             ;       BCS upper_upper
(1)  540/    C7CD :                                             ;       lower_upper:
(1)  540/    C7CD :                                             ;               JMP (JUMP_TABLE3,X)
(1)  540/    C7CD :                                             ;       upper_upper:
(1)  540/    C7CD :                                             ;               JMP (JUMP_TABLE4,X)
(1)  540/    C7CD :                                             ;After jump:
(1)  540/    C7CD :                                             ;TYA                                                    ;2
(1)  540/    C7CD :                                             ;TAX                                                    ;2
(1)  540/    C7CD :                                             
(1)  540/    C7CD :                                             ;Method 4 - 28 cycles
(1)  540/    C7CD :                                             ;LDA (emu_PC,X)                 ;6
(1)  540/    C7CD :                                             ;TAY                                    ;2
(1)  540/    C7CD :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  540/    C7CD :                                             ;PHA                                    ;3
(1)  540/    C7CD :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  540/    C7CD :                                             ;PHA                                    ;3
(1)  540/    C7CD :                                             ;RTS                                    ;6
(1)  540/    C7CD :                                             
(1)  540/    C7CD :                                             ;Method 5 - 30 cycles
(1)  540/    C7CD : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  540/    C7CF : A8                                          TAY                                             ;2
(1)  540/    C7D0 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  540/    C7D3 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  540/    C7D5 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  540/    C7D8 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  540/    C7DA : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  540/    C7DD :                                                                     
(1)  541/    C7DD :                     
(1)  542/    C7DD :                     	;0x6C - JMP I
(1)  543/    C7DD :                     	JMP_I:
(1)  544/    C7DD : (MACRO)             		OP_MACRO 108, "JMP", "I", "JMP_I"
(1)  544/    C7DD :                                             ;TODO
(1)  545/    C7DD : (MACRO)             		NEXT_MACRO
(1)  545/    C7DD :                                             
(1)  545/    C7DD :  (MACRO-2)                                  halt
(1)  545/    C7DD : 00                                  BRK
(1)  545/    C7DE : 00                                  BRK
(1)  545/    C7DF :                                             
(1)  545/    C7DF :                                             ;Method 1 - 60 cycles
(1)  545/    C7DF :                                             ;Jump table must be page aligned!!!
(1)  545/    C7DF :                                             ;LDA (emu_PC,X)                 ;6
(1)  545/    C7DF :                                             ;ASL                                    ;2
(1)  545/    C7DF :                                             ;STA emu_ptr,X                  ;4
(1)  545/    C7DF :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  545/    C7DF :                                             ;ADC #0                                 ;2
(1)  545/    C7DF :                                             ;STA emu_ptr+1,X                ;4
(1)  545/    C7DF :                                             ;LDA (emu_ptr,X)                ;6
(1)  545/    C7DF :                                             ;STA emu_ptr2,X                 ;4
(1)  545/    C7DF :                                             ;INC emu_ptr,X                  ;6
(1)  545/    C7DF :                                             ;BCC .skip                              ;2
(1)  545/    C7DF :                                             ;       INC emu_ptr+1,X         ;6
(1)  545/    C7DF :                                             ;.skip:
(1)  545/    C7DF :                                             ;LDA (emu_ptr,X)                ;6
(1)  545/    C7DF :                                             ;STA emu_ptr2+1,X               ;4
(1)  545/    C7DF :                                             ;JMP (emu_ptr2,X)               ;6
(1)  545/    C7DF :                                             
(1)  545/    C7DF :                                             ;Method 2 - 46 cycles
(1)  545/    C7DF :                                             ;Jump table must be page aligned!!!
(1)  545/    C7DF :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 164 - 1/5/2022 11:50:53


(1)  545/    C7DF :                                             ;STZ emu_ptr+1,X                ;4
(1)  545/    C7DF :                                             ;ASL                                    ;2
(1)  545/    C7DF :                                             ;ROL emu_ptr+1,X                ;6
(1)  545/    C7DF :                                             ;ASL                                    ;2
(1)  545/    C7DF :                                             ;ROL emu_ptr+1,X                ;6
(1)  545/    C7DF :                                             ;STA emu_ptr,X                  ;4                              
(1)  545/    C7DF :                                             ;LDA emu_ptr+1,X                ;4
(1)  545/    C7DF :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  545/    C7DF :                                             ;STA emu_ptr+1,X                ;4
(1)  545/    C7DF :                                             ;JMP (emu_ptr2,X)               ;6
(1)  545/    C7DF :                                             
(1)  545/    C7DF :                                             ;Method 3 - 30 cycles
(1)  545/    C7DF :                                             ;TXA                                                    ;2
(1)  545/    C7DF :                                             ;TAY                                                    ;2
(1)  545/    C7DF :                                             ;LDA (emu_PC,X)                                 ;6
(1)  545/    C7DF :                                             ;ASL                                                    ;2
(1)  545/    C7DF :                                             ;BCS upper                                              ;2
(1)  545/    C7DF :                                             ;lower:
(1)  545/    C7DF :                                             ;       ASL                                                     ;2
(1)  545/    C7DF :                                             ;       TAX                                                     ;2
(1)  545/    C7DF :                                             ;       BCS upper_lower                         ;2
(1)  545/    C7DF :                                             ;       lower_lower:
(1)  545/    C7DF :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  545/    C7DF :                                             ;       upper_lower:
(1)  545/    C7DF :                                             ;               JMP (JUMP_TABLE2,X)
(1)  545/    C7DF :                                             ;upper:
(1)  545/    C7DF :                                             ;       ASL
(1)  545/    C7DF :                                             ;       TAX
(1)  545/    C7DF :                                             ;       BCS upper_upper
(1)  545/    C7DF :                                             ;       lower_upper:
(1)  545/    C7DF :                                             ;               JMP (JUMP_TABLE3,X)
(1)  545/    C7DF :                                             ;       upper_upper:
(1)  545/    C7DF :                                             ;               JMP (JUMP_TABLE4,X)
(1)  545/    C7DF :                                             ;After jump:
(1)  545/    C7DF :                                             ;TYA                                                    ;2
(1)  545/    C7DF :                                             ;TAX                                                    ;2
(1)  545/    C7DF :                                             
(1)  545/    C7DF :                                             ;Method 4 - 28 cycles
(1)  545/    C7DF :                                             ;LDA (emu_PC,X)                 ;6
(1)  545/    C7DF :                                             ;TAY                                    ;2
(1)  545/    C7DF :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  545/    C7DF :                                             ;PHA                                    ;3
(1)  545/    C7DF :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  545/    C7DF :                                             ;PHA                                    ;3
(1)  545/    C7DF :                                             ;RTS                                    ;6
(1)  545/    C7DF :                                             
(1)  545/    C7DF :                                             ;Method 5 - 30 cycles
(1)  545/    C7DF : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  545/    C7E1 : A8                                          TAY                                             ;2
(1)  545/    C7E2 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  545/    C7E5 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  545/    C7E7 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  545/    C7EA : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  545/    C7EC : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  545/    C7EF :                                                                     
(1)  546/    C7EF :                     
(1)  547/    C7EF :                     	;0x6D - ADC ABS
(1)  548/    C7EF :                     	ADC_ABS:
(1)  549/    C7EF : (MACRO)             		OP_MACRO 109, "ADC", "ABS", "ADC_ABS"
(1)  549/    C7EF :                                             ;TODO
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 165 - 1/5/2022 11:50:53


(1)  550/    C7EF : (MACRO)             		NEXT_MACRO
(1)  550/    C7EF :                                             
(1)  550/    C7EF :  (MACRO-2)                                  halt
(1)  550/    C7EF : 00                                  BRK
(1)  550/    C7F0 : 00                                  BRK
(1)  550/    C7F1 :                                             
(1)  550/    C7F1 :                                             ;Method 1 - 60 cycles
(1)  550/    C7F1 :                                             ;Jump table must be page aligned!!!
(1)  550/    C7F1 :                                             ;LDA (emu_PC,X)                 ;6
(1)  550/    C7F1 :                                             ;ASL                                    ;2
(1)  550/    C7F1 :                                             ;STA emu_ptr,X                  ;4
(1)  550/    C7F1 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  550/    C7F1 :                                             ;ADC #0                                 ;2
(1)  550/    C7F1 :                                             ;STA emu_ptr+1,X                ;4
(1)  550/    C7F1 :                                             ;LDA (emu_ptr,X)                ;6
(1)  550/    C7F1 :                                             ;STA emu_ptr2,X                 ;4
(1)  550/    C7F1 :                                             ;INC emu_ptr,X                  ;6
(1)  550/    C7F1 :                                             ;BCC .skip                              ;2
(1)  550/    C7F1 :                                             ;       INC emu_ptr+1,X         ;6
(1)  550/    C7F1 :                                             ;.skip:
(1)  550/    C7F1 :                                             ;LDA (emu_ptr,X)                ;6
(1)  550/    C7F1 :                                             ;STA emu_ptr2+1,X               ;4
(1)  550/    C7F1 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  550/    C7F1 :                                             
(1)  550/    C7F1 :                                             ;Method 2 - 46 cycles
(1)  550/    C7F1 :                                             ;Jump table must be page aligned!!!
(1)  550/    C7F1 :                                             ;LDA (emu_PC,X)                 ;6
(1)  550/    C7F1 :                                             ;STZ emu_ptr+1,X                ;4
(1)  550/    C7F1 :                                             ;ASL                                    ;2
(1)  550/    C7F1 :                                             ;ROL emu_ptr+1,X                ;6
(1)  550/    C7F1 :                                             ;ASL                                    ;2
(1)  550/    C7F1 :                                             ;ROL emu_ptr+1,X                ;6
(1)  550/    C7F1 :                                             ;STA emu_ptr,X                  ;4                              
(1)  550/    C7F1 :                                             ;LDA emu_ptr+1,X                ;4
(1)  550/    C7F1 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  550/    C7F1 :                                             ;STA emu_ptr+1,X                ;4
(1)  550/    C7F1 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  550/    C7F1 :                                             
(1)  550/    C7F1 :                                             ;Method 3 - 30 cycles
(1)  550/    C7F1 :                                             ;TXA                                                    ;2
(1)  550/    C7F1 :                                             ;TAY                                                    ;2
(1)  550/    C7F1 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  550/    C7F1 :                                             ;ASL                                                    ;2
(1)  550/    C7F1 :                                             ;BCS upper                                              ;2
(1)  550/    C7F1 :                                             ;lower:
(1)  550/    C7F1 :                                             ;       ASL                                                     ;2
(1)  550/    C7F1 :                                             ;       TAX                                                     ;2
(1)  550/    C7F1 :                                             ;       BCS upper_lower                         ;2
(1)  550/    C7F1 :                                             ;       lower_lower:
(1)  550/    C7F1 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  550/    C7F1 :                                             ;       upper_lower:
(1)  550/    C7F1 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  550/    C7F1 :                                             ;upper:
(1)  550/    C7F1 :                                             ;       ASL
(1)  550/    C7F1 :                                             ;       TAX
(1)  550/    C7F1 :                                             ;       BCS upper_upper
(1)  550/    C7F1 :                                             ;       lower_upper:
(1)  550/    C7F1 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  550/    C7F1 :                                             ;       upper_upper:
(1)  550/    C7F1 :                                             ;               JMP (JUMP_TABLE4,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 166 - 1/5/2022 11:50:53


(1)  550/    C7F1 :                                             ;After jump:
(1)  550/    C7F1 :                                             ;TYA                                                    ;2
(1)  550/    C7F1 :                                             ;TAX                                                    ;2
(1)  550/    C7F1 :                                             
(1)  550/    C7F1 :                                             ;Method 4 - 28 cycles
(1)  550/    C7F1 :                                             ;LDA (emu_PC,X)                 ;6
(1)  550/    C7F1 :                                             ;TAY                                    ;2
(1)  550/    C7F1 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  550/    C7F1 :                                             ;PHA                                    ;3
(1)  550/    C7F1 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  550/    C7F1 :                                             ;PHA                                    ;3
(1)  550/    C7F1 :                                             ;RTS                                    ;6
(1)  550/    C7F1 :                                             
(1)  550/    C7F1 :                                             ;Method 5 - 30 cycles
(1)  550/    C7F1 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  550/    C7F3 : A8                                          TAY                                             ;2
(1)  550/    C7F4 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  550/    C7F7 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  550/    C7F9 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  550/    C7FC : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  550/    C7FE : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  550/    C801 :                                                                     
(1)  551/    C801 :                     
(1)  552/    C801 :                     	;0x6E - ROR ABS
(1)  553/    C801 :                     	ROR_ABS:
(1)  554/    C801 : (MACRO)             		OP_MACRO 110, "ROR", "ABS", "ROR_ABS"
(1)  554/    C801 :                                             ;TODO
(1)  555/    C801 : (MACRO)             		NEXT_MACRO
(1)  555/    C801 :                                             
(1)  555/    C801 :  (MACRO-2)                                  halt
(1)  555/    C801 : 00                                  BRK
(1)  555/    C802 : 00                                  BRK
(1)  555/    C803 :                                             
(1)  555/    C803 :                                             ;Method 1 - 60 cycles
(1)  555/    C803 :                                             ;Jump table must be page aligned!!!
(1)  555/    C803 :                                             ;LDA (emu_PC,X)                 ;6
(1)  555/    C803 :                                             ;ASL                                    ;2
(1)  555/    C803 :                                             ;STA emu_ptr,X                  ;4
(1)  555/    C803 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  555/    C803 :                                             ;ADC #0                                 ;2
(1)  555/    C803 :                                             ;STA emu_ptr+1,X                ;4
(1)  555/    C803 :                                             ;LDA (emu_ptr,X)                ;6
(1)  555/    C803 :                                             ;STA emu_ptr2,X                 ;4
(1)  555/    C803 :                                             ;INC emu_ptr,X                  ;6
(1)  555/    C803 :                                             ;BCC .skip                              ;2
(1)  555/    C803 :                                             ;       INC emu_ptr+1,X         ;6
(1)  555/    C803 :                                             ;.skip:
(1)  555/    C803 :                                             ;LDA (emu_ptr,X)                ;6
(1)  555/    C803 :                                             ;STA emu_ptr2+1,X               ;4
(1)  555/    C803 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  555/    C803 :                                             
(1)  555/    C803 :                                             ;Method 2 - 46 cycles
(1)  555/    C803 :                                             ;Jump table must be page aligned!!!
(1)  555/    C803 :                                             ;LDA (emu_PC,X)                 ;6
(1)  555/    C803 :                                             ;STZ emu_ptr+1,X                ;4
(1)  555/    C803 :                                             ;ASL                                    ;2
(1)  555/    C803 :                                             ;ROL emu_ptr+1,X                ;6
(1)  555/    C803 :                                             ;ASL                                    ;2
(1)  555/    C803 :                                             ;ROL emu_ptr+1,X                ;6
(1)  555/    C803 :                                             ;STA emu_ptr,X                  ;4                              
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 167 - 1/5/2022 11:50:53


(1)  555/    C803 :                                             ;LDA emu_ptr+1,X                ;4
(1)  555/    C803 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  555/    C803 :                                             ;STA emu_ptr+1,X                ;4
(1)  555/    C803 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  555/    C803 :                                             
(1)  555/    C803 :                                             ;Method 3 - 30 cycles
(1)  555/    C803 :                                             ;TXA                                                    ;2
(1)  555/    C803 :                                             ;TAY                                                    ;2
(1)  555/    C803 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  555/    C803 :                                             ;ASL                                                    ;2
(1)  555/    C803 :                                             ;BCS upper                                              ;2
(1)  555/    C803 :                                             ;lower:
(1)  555/    C803 :                                             ;       ASL                                                     ;2
(1)  555/    C803 :                                             ;       TAX                                                     ;2
(1)  555/    C803 :                                             ;       BCS upper_lower                         ;2
(1)  555/    C803 :                                             ;       lower_lower:
(1)  555/    C803 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  555/    C803 :                                             ;       upper_lower:
(1)  555/    C803 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  555/    C803 :                                             ;upper:
(1)  555/    C803 :                                             ;       ASL
(1)  555/    C803 :                                             ;       TAX
(1)  555/    C803 :                                             ;       BCS upper_upper
(1)  555/    C803 :                                             ;       lower_upper:
(1)  555/    C803 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  555/    C803 :                                             ;       upper_upper:
(1)  555/    C803 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  555/    C803 :                                             ;After jump:
(1)  555/    C803 :                                             ;TYA                                                    ;2
(1)  555/    C803 :                                             ;TAX                                                    ;2
(1)  555/    C803 :                                             
(1)  555/    C803 :                                             ;Method 4 - 28 cycles
(1)  555/    C803 :                                             ;LDA (emu_PC,X)                 ;6
(1)  555/    C803 :                                             ;TAY                                    ;2
(1)  555/    C803 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  555/    C803 :                                             ;PHA                                    ;3
(1)  555/    C803 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  555/    C803 :                                             ;PHA                                    ;3
(1)  555/    C803 :                                             ;RTS                                    ;6
(1)  555/    C803 :                                             
(1)  555/    C803 :                                             ;Method 5 - 30 cycles
(1)  555/    C803 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  555/    C805 : A8                                          TAY                                             ;2
(1)  555/    C806 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  555/    C809 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  555/    C80B : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  555/    C80E : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  555/    C810 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  555/    C813 :                                                                     
(1)  556/    C813 :                     
(1)  557/    C813 :                     	;0x6F - NOP
(1)  558/    C813 :                     	NOP_0x6F:
(1)  559/    C813 : (MACRO)             		OP_MACRO 111, "NOP", "IMP", "NOP_0x6F"
(1)  559/    C813 :                                             ;TODO
(1)  560/    C813 : (MACRO)             		NEXT_MACRO
(1)  560/    C813 :                                             
(1)  560/    C813 :  (MACRO-2)                                  halt
(1)  560/    C813 : 00                                  BRK
(1)  560/    C814 : 00                                  BRK
(1)  560/    C815 :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 168 - 1/5/2022 11:50:53


(1)  560/    C815 :                                             ;Method 1 - 60 cycles
(1)  560/    C815 :                                             ;Jump table must be page aligned!!!
(1)  560/    C815 :                                             ;LDA (emu_PC,X)                 ;6
(1)  560/    C815 :                                             ;ASL                                    ;2
(1)  560/    C815 :                                             ;STA emu_ptr,X                  ;4
(1)  560/    C815 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  560/    C815 :                                             ;ADC #0                                 ;2
(1)  560/    C815 :                                             ;STA emu_ptr+1,X                ;4
(1)  560/    C815 :                                             ;LDA (emu_ptr,X)                ;6
(1)  560/    C815 :                                             ;STA emu_ptr2,X                 ;4
(1)  560/    C815 :                                             ;INC emu_ptr,X                  ;6
(1)  560/    C815 :                                             ;BCC .skip                              ;2
(1)  560/    C815 :                                             ;       INC emu_ptr+1,X         ;6
(1)  560/    C815 :                                             ;.skip:
(1)  560/    C815 :                                             ;LDA (emu_ptr,X)                ;6
(1)  560/    C815 :                                             ;STA emu_ptr2+1,X               ;4
(1)  560/    C815 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  560/    C815 :                                             
(1)  560/    C815 :                                             ;Method 2 - 46 cycles
(1)  560/    C815 :                                             ;Jump table must be page aligned!!!
(1)  560/    C815 :                                             ;LDA (emu_PC,X)                 ;6
(1)  560/    C815 :                                             ;STZ emu_ptr+1,X                ;4
(1)  560/    C815 :                                             ;ASL                                    ;2
(1)  560/    C815 :                                             ;ROL emu_ptr+1,X                ;6
(1)  560/    C815 :                                             ;ASL                                    ;2
(1)  560/    C815 :                                             ;ROL emu_ptr+1,X                ;6
(1)  560/    C815 :                                             ;STA emu_ptr,X                  ;4                              
(1)  560/    C815 :                                             ;LDA emu_ptr+1,X                ;4
(1)  560/    C815 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  560/    C815 :                                             ;STA emu_ptr+1,X                ;4
(1)  560/    C815 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  560/    C815 :                                             
(1)  560/    C815 :                                             ;Method 3 - 30 cycles
(1)  560/    C815 :                                             ;TXA                                                    ;2
(1)  560/    C815 :                                             ;TAY                                                    ;2
(1)  560/    C815 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  560/    C815 :                                             ;ASL                                                    ;2
(1)  560/    C815 :                                             ;BCS upper                                              ;2
(1)  560/    C815 :                                             ;lower:
(1)  560/    C815 :                                             ;       ASL                                                     ;2
(1)  560/    C815 :                                             ;       TAX                                                     ;2
(1)  560/    C815 :                                             ;       BCS upper_lower                         ;2
(1)  560/    C815 :                                             ;       lower_lower:
(1)  560/    C815 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  560/    C815 :                                             ;       upper_lower:
(1)  560/    C815 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  560/    C815 :                                             ;upper:
(1)  560/    C815 :                                             ;       ASL
(1)  560/    C815 :                                             ;       TAX
(1)  560/    C815 :                                             ;       BCS upper_upper
(1)  560/    C815 :                                             ;       lower_upper:
(1)  560/    C815 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  560/    C815 :                                             ;       upper_upper:
(1)  560/    C815 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  560/    C815 :                                             ;After jump:
(1)  560/    C815 :                                             ;TYA                                                    ;2
(1)  560/    C815 :                                             ;TAX                                                    ;2
(1)  560/    C815 :                                             
(1)  560/    C815 :                                             ;Method 4 - 28 cycles
(1)  560/    C815 :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 169 - 1/5/2022 11:50:53


(1)  560/    C815 :                                             ;TAY                                    ;2
(1)  560/    C815 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  560/    C815 :                                             ;PHA                                    ;3
(1)  560/    C815 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  560/    C815 :                                             ;PHA                                    ;3
(1)  560/    C815 :                                             ;RTS                                    ;6
(1)  560/    C815 :                                             
(1)  560/    C815 :                                             ;Method 5 - 30 cycles
(1)  560/    C815 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  560/    C817 : A8                                          TAY                                             ;2
(1)  560/    C818 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  560/    C81B : 95 0A                                       STA emu_ptr,X                   ;4
(1)  560/    C81D : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  560/    C820 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  560/    C822 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  560/    C825 :                                                                     
(1)  561/    C825 :                     
(1)  562/    C825 :                     	;0x70 - BVS REL
(1)  563/    C825 :                     	BVS_REL:
(1)  564/    C825 : (MACRO)             		OP_MACRO 112, "BVS", "REL", "BVS_REL"
(1)  564/    C825 :                                             ;TODO
(1)  565/    C825 : (MACRO)             		NEXT_MACRO
(1)  565/    C825 :                                             
(1)  565/    C825 :  (MACRO-2)                                  halt
(1)  565/    C825 : 00                                  BRK
(1)  565/    C826 : 00                                  BRK
(1)  565/    C827 :                                             
(1)  565/    C827 :                                             ;Method 1 - 60 cycles
(1)  565/    C827 :                                             ;Jump table must be page aligned!!!
(1)  565/    C827 :                                             ;LDA (emu_PC,X)                 ;6
(1)  565/    C827 :                                             ;ASL                                    ;2
(1)  565/    C827 :                                             ;STA emu_ptr,X                  ;4
(1)  565/    C827 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  565/    C827 :                                             ;ADC #0                                 ;2
(1)  565/    C827 :                                             ;STA emu_ptr+1,X                ;4
(1)  565/    C827 :                                             ;LDA (emu_ptr,X)                ;6
(1)  565/    C827 :                                             ;STA emu_ptr2,X                 ;4
(1)  565/    C827 :                                             ;INC emu_ptr,X                  ;6
(1)  565/    C827 :                                             ;BCC .skip                              ;2
(1)  565/    C827 :                                             ;       INC emu_ptr+1,X         ;6
(1)  565/    C827 :                                             ;.skip:
(1)  565/    C827 :                                             ;LDA (emu_ptr,X)                ;6
(1)  565/    C827 :                                             ;STA emu_ptr2+1,X               ;4
(1)  565/    C827 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  565/    C827 :                                             
(1)  565/    C827 :                                             ;Method 2 - 46 cycles
(1)  565/    C827 :                                             ;Jump table must be page aligned!!!
(1)  565/    C827 :                                             ;LDA (emu_PC,X)                 ;6
(1)  565/    C827 :                                             ;STZ emu_ptr+1,X                ;4
(1)  565/    C827 :                                             ;ASL                                    ;2
(1)  565/    C827 :                                             ;ROL emu_ptr+1,X                ;6
(1)  565/    C827 :                                             ;ASL                                    ;2
(1)  565/    C827 :                                             ;ROL emu_ptr+1,X                ;6
(1)  565/    C827 :                                             ;STA emu_ptr,X                  ;4                              
(1)  565/    C827 :                                             ;LDA emu_ptr+1,X                ;4
(1)  565/    C827 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  565/    C827 :                                             ;STA emu_ptr+1,X                ;4
(1)  565/    C827 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  565/    C827 :                                             
(1)  565/    C827 :                                             ;Method 3 - 30 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 170 - 1/5/2022 11:50:53


(1)  565/    C827 :                                             ;TXA                                                    ;2
(1)  565/    C827 :                                             ;TAY                                                    ;2
(1)  565/    C827 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  565/    C827 :                                             ;ASL                                                    ;2
(1)  565/    C827 :                                             ;BCS upper                                              ;2
(1)  565/    C827 :                                             ;lower:
(1)  565/    C827 :                                             ;       ASL                                                     ;2
(1)  565/    C827 :                                             ;       TAX                                                     ;2
(1)  565/    C827 :                                             ;       BCS upper_lower                         ;2
(1)  565/    C827 :                                             ;       lower_lower:
(1)  565/    C827 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  565/    C827 :                                             ;       upper_lower:
(1)  565/    C827 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  565/    C827 :                                             ;upper:
(1)  565/    C827 :                                             ;       ASL
(1)  565/    C827 :                                             ;       TAX
(1)  565/    C827 :                                             ;       BCS upper_upper
(1)  565/    C827 :                                             ;       lower_upper:
(1)  565/    C827 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  565/    C827 :                                             ;       upper_upper:
(1)  565/    C827 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  565/    C827 :                                             ;After jump:
(1)  565/    C827 :                                             ;TYA                                                    ;2
(1)  565/    C827 :                                             ;TAX                                                    ;2
(1)  565/    C827 :                                             
(1)  565/    C827 :                                             ;Method 4 - 28 cycles
(1)  565/    C827 :                                             ;LDA (emu_PC,X)                 ;6
(1)  565/    C827 :                                             ;TAY                                    ;2
(1)  565/    C827 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  565/    C827 :                                             ;PHA                                    ;3
(1)  565/    C827 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  565/    C827 :                                             ;PHA                                    ;3
(1)  565/    C827 :                                             ;RTS                                    ;6
(1)  565/    C827 :                                             
(1)  565/    C827 :                                             ;Method 5 - 30 cycles
(1)  565/    C827 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  565/    C829 : A8                                          TAY                                             ;2
(1)  565/    C82A : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  565/    C82D : 95 0A                                       STA emu_ptr,X                   ;4
(1)  565/    C82F : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  565/    C832 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  565/    C834 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  565/    C837 :                                                                     
(1)  566/    C837 :                     
(1)  567/    C837 :                     	;0x71 - ADC IY
(1)  568/    C837 :                     	ADC_IY:
(1)  569/    C837 : (MACRO)             		OP_MACRO 113, "ADC", "IY", "ADC_IY"
(1)  569/    C837 :                                             ;TODO
(1)  570/    C837 : (MACRO)             		NEXT_MACRO
(1)  570/    C837 :                                             
(1)  570/    C837 :  (MACRO-2)                                  halt
(1)  570/    C837 : 00                                  BRK
(1)  570/    C838 : 00                                  BRK
(1)  570/    C839 :                                             
(1)  570/    C839 :                                             ;Method 1 - 60 cycles
(1)  570/    C839 :                                             ;Jump table must be page aligned!!!
(1)  570/    C839 :                                             ;LDA (emu_PC,X)                 ;6
(1)  570/    C839 :                                             ;ASL                                    ;2
(1)  570/    C839 :                                             ;STA emu_ptr,X                  ;4
(1)  570/    C839 :                                             ;LDA #hi(JUMP_TABLE)    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 171 - 1/5/2022 11:50:53


(1)  570/    C839 :                                             ;ADC #0                                 ;2
(1)  570/    C839 :                                             ;STA emu_ptr+1,X                ;4
(1)  570/    C839 :                                             ;LDA (emu_ptr,X)                ;6
(1)  570/    C839 :                                             ;STA emu_ptr2,X                 ;4
(1)  570/    C839 :                                             ;INC emu_ptr,X                  ;6
(1)  570/    C839 :                                             ;BCC .skip                              ;2
(1)  570/    C839 :                                             ;       INC emu_ptr+1,X         ;6
(1)  570/    C839 :                                             ;.skip:
(1)  570/    C839 :                                             ;LDA (emu_ptr,X)                ;6
(1)  570/    C839 :                                             ;STA emu_ptr2+1,X               ;4
(1)  570/    C839 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  570/    C839 :                                             
(1)  570/    C839 :                                             ;Method 2 - 46 cycles
(1)  570/    C839 :                                             ;Jump table must be page aligned!!!
(1)  570/    C839 :                                             ;LDA (emu_PC,X)                 ;6
(1)  570/    C839 :                                             ;STZ emu_ptr+1,X                ;4
(1)  570/    C839 :                                             ;ASL                                    ;2
(1)  570/    C839 :                                             ;ROL emu_ptr+1,X                ;6
(1)  570/    C839 :                                             ;ASL                                    ;2
(1)  570/    C839 :                                             ;ROL emu_ptr+1,X                ;6
(1)  570/    C839 :                                             ;STA emu_ptr,X                  ;4                              
(1)  570/    C839 :                                             ;LDA emu_ptr+1,X                ;4
(1)  570/    C839 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  570/    C839 :                                             ;STA emu_ptr+1,X                ;4
(1)  570/    C839 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  570/    C839 :                                             
(1)  570/    C839 :                                             ;Method 3 - 30 cycles
(1)  570/    C839 :                                             ;TXA                                                    ;2
(1)  570/    C839 :                                             ;TAY                                                    ;2
(1)  570/    C839 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  570/    C839 :                                             ;ASL                                                    ;2
(1)  570/    C839 :                                             ;BCS upper                                              ;2
(1)  570/    C839 :                                             ;lower:
(1)  570/    C839 :                                             ;       ASL                                                     ;2
(1)  570/    C839 :                                             ;       TAX                                                     ;2
(1)  570/    C839 :                                             ;       BCS upper_lower                         ;2
(1)  570/    C839 :                                             ;       lower_lower:
(1)  570/    C839 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  570/    C839 :                                             ;       upper_lower:
(1)  570/    C839 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  570/    C839 :                                             ;upper:
(1)  570/    C839 :                                             ;       ASL
(1)  570/    C839 :                                             ;       TAX
(1)  570/    C839 :                                             ;       BCS upper_upper
(1)  570/    C839 :                                             ;       lower_upper:
(1)  570/    C839 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  570/    C839 :                                             ;       upper_upper:
(1)  570/    C839 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  570/    C839 :                                             ;After jump:
(1)  570/    C839 :                                             ;TYA                                                    ;2
(1)  570/    C839 :                                             ;TAX                                                    ;2
(1)  570/    C839 :                                             
(1)  570/    C839 :                                             ;Method 4 - 28 cycles
(1)  570/    C839 :                                             ;LDA (emu_PC,X)                 ;6
(1)  570/    C839 :                                             ;TAY                                    ;2
(1)  570/    C839 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  570/    C839 :                                             ;PHA                                    ;3
(1)  570/    C839 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  570/    C839 :                                             ;PHA                                    ;3
(1)  570/    C839 :                                             ;RTS                                    ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 172 - 1/5/2022 11:50:53


(1)  570/    C839 :                                             
(1)  570/    C839 :                                             ;Method 5 - 30 cycles
(1)  570/    C839 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  570/    C83B : A8                                          TAY                                             ;2
(1)  570/    C83C : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  570/    C83F : 95 0A                                       STA emu_ptr,X                   ;4
(1)  570/    C841 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  570/    C844 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  570/    C846 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  570/    C849 :                                                                     
(1)  571/    C849 :                     
(1)  572/    C849 :                     	;0x72 - NOP
(1)  573/    C849 :                     	NOP_0x72:
(1)  574/    C849 : (MACRO)             		OP_MACRO 114, "NOP", "IMP", "NOP_0x72"
(1)  574/    C849 :                                             ;TODO
(1)  575/    C849 : (MACRO)             		NEXT_MACRO
(1)  575/    C849 :                                             
(1)  575/    C849 :  (MACRO-2)                                  halt
(1)  575/    C849 : 00                                  BRK
(1)  575/    C84A : 00                                  BRK
(1)  575/    C84B :                                             
(1)  575/    C84B :                                             ;Method 1 - 60 cycles
(1)  575/    C84B :                                             ;Jump table must be page aligned!!!
(1)  575/    C84B :                                             ;LDA (emu_PC,X)                 ;6
(1)  575/    C84B :                                             ;ASL                                    ;2
(1)  575/    C84B :                                             ;STA emu_ptr,X                  ;4
(1)  575/    C84B :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  575/    C84B :                                             ;ADC #0                                 ;2
(1)  575/    C84B :                                             ;STA emu_ptr+1,X                ;4
(1)  575/    C84B :                                             ;LDA (emu_ptr,X)                ;6
(1)  575/    C84B :                                             ;STA emu_ptr2,X                 ;4
(1)  575/    C84B :                                             ;INC emu_ptr,X                  ;6
(1)  575/    C84B :                                             ;BCC .skip                              ;2
(1)  575/    C84B :                                             ;       INC emu_ptr+1,X         ;6
(1)  575/    C84B :                                             ;.skip:
(1)  575/    C84B :                                             ;LDA (emu_ptr,X)                ;6
(1)  575/    C84B :                                             ;STA emu_ptr2+1,X               ;4
(1)  575/    C84B :                                             ;JMP (emu_ptr2,X)               ;6
(1)  575/    C84B :                                             
(1)  575/    C84B :                                             ;Method 2 - 46 cycles
(1)  575/    C84B :                                             ;Jump table must be page aligned!!!
(1)  575/    C84B :                                             ;LDA (emu_PC,X)                 ;6
(1)  575/    C84B :                                             ;STZ emu_ptr+1,X                ;4
(1)  575/    C84B :                                             ;ASL                                    ;2
(1)  575/    C84B :                                             ;ROL emu_ptr+1,X                ;6
(1)  575/    C84B :                                             ;ASL                                    ;2
(1)  575/    C84B :                                             ;ROL emu_ptr+1,X                ;6
(1)  575/    C84B :                                             ;STA emu_ptr,X                  ;4                              
(1)  575/    C84B :                                             ;LDA emu_ptr+1,X                ;4
(1)  575/    C84B :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  575/    C84B :                                             ;STA emu_ptr+1,X                ;4
(1)  575/    C84B :                                             ;JMP (emu_ptr2,X)               ;6
(1)  575/    C84B :                                             
(1)  575/    C84B :                                             ;Method 3 - 30 cycles
(1)  575/    C84B :                                             ;TXA                                                    ;2
(1)  575/    C84B :                                             ;TAY                                                    ;2
(1)  575/    C84B :                                             ;LDA (emu_PC,X)                                 ;6
(1)  575/    C84B :                                             ;ASL                                                    ;2
(1)  575/    C84B :                                             ;BCS upper                                              ;2
(1)  575/    C84B :                                             ;lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 173 - 1/5/2022 11:50:53


(1)  575/    C84B :                                             ;       ASL                                                     ;2
(1)  575/    C84B :                                             ;       TAX                                                     ;2
(1)  575/    C84B :                                             ;       BCS upper_lower                         ;2
(1)  575/    C84B :                                             ;       lower_lower:
(1)  575/    C84B :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  575/    C84B :                                             ;       upper_lower:
(1)  575/    C84B :                                             ;               JMP (JUMP_TABLE2,X)
(1)  575/    C84B :                                             ;upper:
(1)  575/    C84B :                                             ;       ASL
(1)  575/    C84B :                                             ;       TAX
(1)  575/    C84B :                                             ;       BCS upper_upper
(1)  575/    C84B :                                             ;       lower_upper:
(1)  575/    C84B :                                             ;               JMP (JUMP_TABLE3,X)
(1)  575/    C84B :                                             ;       upper_upper:
(1)  575/    C84B :                                             ;               JMP (JUMP_TABLE4,X)
(1)  575/    C84B :                                             ;After jump:
(1)  575/    C84B :                                             ;TYA                                                    ;2
(1)  575/    C84B :                                             ;TAX                                                    ;2
(1)  575/    C84B :                                             
(1)  575/    C84B :                                             ;Method 4 - 28 cycles
(1)  575/    C84B :                                             ;LDA (emu_PC,X)                 ;6
(1)  575/    C84B :                                             ;TAY                                    ;2
(1)  575/    C84B :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  575/    C84B :                                             ;PHA                                    ;3
(1)  575/    C84B :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  575/    C84B :                                             ;PHA                                    ;3
(1)  575/    C84B :                                             ;RTS                                    ;6
(1)  575/    C84B :                                             
(1)  575/    C84B :                                             ;Method 5 - 30 cycles
(1)  575/    C84B : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  575/    C84D : A8                                          TAY                                             ;2
(1)  575/    C84E : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  575/    C851 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  575/    C853 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  575/    C856 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  575/    C858 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  575/    C85B :                                                                     
(1)  576/    C85B :                     
(1)  577/    C85B :                     	;0x73 - NOP
(1)  578/    C85B :                     	NOP_0x73:
(1)  579/    C85B : (MACRO)             		OP_MACRO 115, "NOP", "IMP", "NOP_0x73"
(1)  579/    C85B :                                             ;TODO
(1)  580/    C85B : (MACRO)             		NEXT_MACRO
(1)  580/    C85B :                                             
(1)  580/    C85B :  (MACRO-2)                                  halt
(1)  580/    C85B : 00                                  BRK
(1)  580/    C85C : 00                                  BRK
(1)  580/    C85D :                                             
(1)  580/    C85D :                                             ;Method 1 - 60 cycles
(1)  580/    C85D :                                             ;Jump table must be page aligned!!!
(1)  580/    C85D :                                             ;LDA (emu_PC,X)                 ;6
(1)  580/    C85D :                                             ;ASL                                    ;2
(1)  580/    C85D :                                             ;STA emu_ptr,X                  ;4
(1)  580/    C85D :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  580/    C85D :                                             ;ADC #0                                 ;2
(1)  580/    C85D :                                             ;STA emu_ptr+1,X                ;4
(1)  580/    C85D :                                             ;LDA (emu_ptr,X)                ;6
(1)  580/    C85D :                                             ;STA emu_ptr2,X                 ;4
(1)  580/    C85D :                                             ;INC emu_ptr,X                  ;6
(1)  580/    C85D :                                             ;BCC .skip                              ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 174 - 1/5/2022 11:50:53


(1)  580/    C85D :                                             ;       INC emu_ptr+1,X         ;6
(1)  580/    C85D :                                             ;.skip:
(1)  580/    C85D :                                             ;LDA (emu_ptr,X)                ;6
(1)  580/    C85D :                                             ;STA emu_ptr2+1,X               ;4
(1)  580/    C85D :                                             ;JMP (emu_ptr2,X)               ;6
(1)  580/    C85D :                                             
(1)  580/    C85D :                                             ;Method 2 - 46 cycles
(1)  580/    C85D :                                             ;Jump table must be page aligned!!!
(1)  580/    C85D :                                             ;LDA (emu_PC,X)                 ;6
(1)  580/    C85D :                                             ;STZ emu_ptr+1,X                ;4
(1)  580/    C85D :                                             ;ASL                                    ;2
(1)  580/    C85D :                                             ;ROL emu_ptr+1,X                ;6
(1)  580/    C85D :                                             ;ASL                                    ;2
(1)  580/    C85D :                                             ;ROL emu_ptr+1,X                ;6
(1)  580/    C85D :                                             ;STA emu_ptr,X                  ;4                              
(1)  580/    C85D :                                             ;LDA emu_ptr+1,X                ;4
(1)  580/    C85D :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  580/    C85D :                                             ;STA emu_ptr+1,X                ;4
(1)  580/    C85D :                                             ;JMP (emu_ptr2,X)               ;6
(1)  580/    C85D :                                             
(1)  580/    C85D :                                             ;Method 3 - 30 cycles
(1)  580/    C85D :                                             ;TXA                                                    ;2
(1)  580/    C85D :                                             ;TAY                                                    ;2
(1)  580/    C85D :                                             ;LDA (emu_PC,X)                                 ;6
(1)  580/    C85D :                                             ;ASL                                                    ;2
(1)  580/    C85D :                                             ;BCS upper                                              ;2
(1)  580/    C85D :                                             ;lower:
(1)  580/    C85D :                                             ;       ASL                                                     ;2
(1)  580/    C85D :                                             ;       TAX                                                     ;2
(1)  580/    C85D :                                             ;       BCS upper_lower                         ;2
(1)  580/    C85D :                                             ;       lower_lower:
(1)  580/    C85D :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  580/    C85D :                                             ;       upper_lower:
(1)  580/    C85D :                                             ;               JMP (JUMP_TABLE2,X)
(1)  580/    C85D :                                             ;upper:
(1)  580/    C85D :                                             ;       ASL
(1)  580/    C85D :                                             ;       TAX
(1)  580/    C85D :                                             ;       BCS upper_upper
(1)  580/    C85D :                                             ;       lower_upper:
(1)  580/    C85D :                                             ;               JMP (JUMP_TABLE3,X)
(1)  580/    C85D :                                             ;       upper_upper:
(1)  580/    C85D :                                             ;               JMP (JUMP_TABLE4,X)
(1)  580/    C85D :                                             ;After jump:
(1)  580/    C85D :                                             ;TYA                                                    ;2
(1)  580/    C85D :                                             ;TAX                                                    ;2
(1)  580/    C85D :                                             
(1)  580/    C85D :                                             ;Method 4 - 28 cycles
(1)  580/    C85D :                                             ;LDA (emu_PC,X)                 ;6
(1)  580/    C85D :                                             ;TAY                                    ;2
(1)  580/    C85D :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  580/    C85D :                                             ;PHA                                    ;3
(1)  580/    C85D :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  580/    C85D :                                             ;PHA                                    ;3
(1)  580/    C85D :                                             ;RTS                                    ;6
(1)  580/    C85D :                                             
(1)  580/    C85D :                                             ;Method 5 - 30 cycles
(1)  580/    C85D : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  580/    C85F : A8                                          TAY                                             ;2
(1)  580/    C860 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  580/    C863 : 95 0A                                       STA emu_ptr,X                   ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 175 - 1/5/2022 11:50:53


(1)  580/    C865 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  580/    C868 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  580/    C86A : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  580/    C86D :                                                                     
(1)  581/    C86D :                     
(1)  582/    C86D :                     	;0x74 - NOP
(1)  583/    C86D :                     	NOP_0x74:
(1)  584/    C86D : (MACRO)             		OP_MACRO 116, "NOP", "IMP", "NOP_0x74"
(1)  584/    C86D :                                             ;TODO
(1)  585/    C86D : (MACRO)             		NEXT_MACRO
(1)  585/    C86D :                                             
(1)  585/    C86D :  (MACRO-2)                                  halt
(1)  585/    C86D : 00                                  BRK
(1)  585/    C86E : 00                                  BRK
(1)  585/    C86F :                                             
(1)  585/    C86F :                                             ;Method 1 - 60 cycles
(1)  585/    C86F :                                             ;Jump table must be page aligned!!!
(1)  585/    C86F :                                             ;LDA (emu_PC,X)                 ;6
(1)  585/    C86F :                                             ;ASL                                    ;2
(1)  585/    C86F :                                             ;STA emu_ptr,X                  ;4
(1)  585/    C86F :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  585/    C86F :                                             ;ADC #0                                 ;2
(1)  585/    C86F :                                             ;STA emu_ptr+1,X                ;4
(1)  585/    C86F :                                             ;LDA (emu_ptr,X)                ;6
(1)  585/    C86F :                                             ;STA emu_ptr2,X                 ;4
(1)  585/    C86F :                                             ;INC emu_ptr,X                  ;6
(1)  585/    C86F :                                             ;BCC .skip                              ;2
(1)  585/    C86F :                                             ;       INC emu_ptr+1,X         ;6
(1)  585/    C86F :                                             ;.skip:
(1)  585/    C86F :                                             ;LDA (emu_ptr,X)                ;6
(1)  585/    C86F :                                             ;STA emu_ptr2+1,X               ;4
(1)  585/    C86F :                                             ;JMP (emu_ptr2,X)               ;6
(1)  585/    C86F :                                             
(1)  585/    C86F :                                             ;Method 2 - 46 cycles
(1)  585/    C86F :                                             ;Jump table must be page aligned!!!
(1)  585/    C86F :                                             ;LDA (emu_PC,X)                 ;6
(1)  585/    C86F :                                             ;STZ emu_ptr+1,X                ;4
(1)  585/    C86F :                                             ;ASL                                    ;2
(1)  585/    C86F :                                             ;ROL emu_ptr+1,X                ;6
(1)  585/    C86F :                                             ;ASL                                    ;2
(1)  585/    C86F :                                             ;ROL emu_ptr+1,X                ;6
(1)  585/    C86F :                                             ;STA emu_ptr,X                  ;4                              
(1)  585/    C86F :                                             ;LDA emu_ptr+1,X                ;4
(1)  585/    C86F :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  585/    C86F :                                             ;STA emu_ptr+1,X                ;4
(1)  585/    C86F :                                             ;JMP (emu_ptr2,X)               ;6
(1)  585/    C86F :                                             
(1)  585/    C86F :                                             ;Method 3 - 30 cycles
(1)  585/    C86F :                                             ;TXA                                                    ;2
(1)  585/    C86F :                                             ;TAY                                                    ;2
(1)  585/    C86F :                                             ;LDA (emu_PC,X)                                 ;6
(1)  585/    C86F :                                             ;ASL                                                    ;2
(1)  585/    C86F :                                             ;BCS upper                                              ;2
(1)  585/    C86F :                                             ;lower:
(1)  585/    C86F :                                             ;       ASL                                                     ;2
(1)  585/    C86F :                                             ;       TAX                                                     ;2
(1)  585/    C86F :                                             ;       BCS upper_lower                         ;2
(1)  585/    C86F :                                             ;       lower_lower:
(1)  585/    C86F :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  585/    C86F :                                             ;       upper_lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 176 - 1/5/2022 11:50:53


(1)  585/    C86F :                                             ;               JMP (JUMP_TABLE2,X)
(1)  585/    C86F :                                             ;upper:
(1)  585/    C86F :                                             ;       ASL
(1)  585/    C86F :                                             ;       TAX
(1)  585/    C86F :                                             ;       BCS upper_upper
(1)  585/    C86F :                                             ;       lower_upper:
(1)  585/    C86F :                                             ;               JMP (JUMP_TABLE3,X)
(1)  585/    C86F :                                             ;       upper_upper:
(1)  585/    C86F :                                             ;               JMP (JUMP_TABLE4,X)
(1)  585/    C86F :                                             ;After jump:
(1)  585/    C86F :                                             ;TYA                                                    ;2
(1)  585/    C86F :                                             ;TAX                                                    ;2
(1)  585/    C86F :                                             
(1)  585/    C86F :                                             ;Method 4 - 28 cycles
(1)  585/    C86F :                                             ;LDA (emu_PC,X)                 ;6
(1)  585/    C86F :                                             ;TAY                                    ;2
(1)  585/    C86F :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  585/    C86F :                                             ;PHA                                    ;3
(1)  585/    C86F :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  585/    C86F :                                             ;PHA                                    ;3
(1)  585/    C86F :                                             ;RTS                                    ;6
(1)  585/    C86F :                                             
(1)  585/    C86F :                                             ;Method 5 - 30 cycles
(1)  585/    C86F : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  585/    C871 : A8                                          TAY                                             ;2
(1)  585/    C872 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  585/    C875 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  585/    C877 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  585/    C87A : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  585/    C87C : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  585/    C87F :                                                                     
(1)  586/    C87F :                     
(1)  587/    C87F :                     	;0x75 - ADC ZPX
(1)  588/    C87F :                     	ADC_ZPX:
(1)  589/    C87F : (MACRO)             		OP_MACRO 117, "ADC", "ZPX", "ADC_ZPX"
(1)  589/    C87F :                                             ;TODO
(1)  590/    C87F : (MACRO)             		NEXT_MACRO
(1)  590/    C87F :                                             
(1)  590/    C87F :  (MACRO-2)                                  halt
(1)  590/    C87F : 00                                  BRK
(1)  590/    C880 : 00                                  BRK
(1)  590/    C881 :                                             
(1)  590/    C881 :                                             ;Method 1 - 60 cycles
(1)  590/    C881 :                                             ;Jump table must be page aligned!!!
(1)  590/    C881 :                                             ;LDA (emu_PC,X)                 ;6
(1)  590/    C881 :                                             ;ASL                                    ;2
(1)  590/    C881 :                                             ;STA emu_ptr,X                  ;4
(1)  590/    C881 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  590/    C881 :                                             ;ADC #0                                 ;2
(1)  590/    C881 :                                             ;STA emu_ptr+1,X                ;4
(1)  590/    C881 :                                             ;LDA (emu_ptr,X)                ;6
(1)  590/    C881 :                                             ;STA emu_ptr2,X                 ;4
(1)  590/    C881 :                                             ;INC emu_ptr,X                  ;6
(1)  590/    C881 :                                             ;BCC .skip                              ;2
(1)  590/    C881 :                                             ;       INC emu_ptr+1,X         ;6
(1)  590/    C881 :                                             ;.skip:
(1)  590/    C881 :                                             ;LDA (emu_ptr,X)                ;6
(1)  590/    C881 :                                             ;STA emu_ptr2+1,X               ;4
(1)  590/    C881 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  590/    C881 :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 177 - 1/5/2022 11:50:53


(1)  590/    C881 :                                             ;Method 2 - 46 cycles
(1)  590/    C881 :                                             ;Jump table must be page aligned!!!
(1)  590/    C881 :                                             ;LDA (emu_PC,X)                 ;6
(1)  590/    C881 :                                             ;STZ emu_ptr+1,X                ;4
(1)  590/    C881 :                                             ;ASL                                    ;2
(1)  590/    C881 :                                             ;ROL emu_ptr+1,X                ;6
(1)  590/    C881 :                                             ;ASL                                    ;2
(1)  590/    C881 :                                             ;ROL emu_ptr+1,X                ;6
(1)  590/    C881 :                                             ;STA emu_ptr,X                  ;4                              
(1)  590/    C881 :                                             ;LDA emu_ptr+1,X                ;4
(1)  590/    C881 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  590/    C881 :                                             ;STA emu_ptr+1,X                ;4
(1)  590/    C881 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  590/    C881 :                                             
(1)  590/    C881 :                                             ;Method 3 - 30 cycles
(1)  590/    C881 :                                             ;TXA                                                    ;2
(1)  590/    C881 :                                             ;TAY                                                    ;2
(1)  590/    C881 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  590/    C881 :                                             ;ASL                                                    ;2
(1)  590/    C881 :                                             ;BCS upper                                              ;2
(1)  590/    C881 :                                             ;lower:
(1)  590/    C881 :                                             ;       ASL                                                     ;2
(1)  590/    C881 :                                             ;       TAX                                                     ;2
(1)  590/    C881 :                                             ;       BCS upper_lower                         ;2
(1)  590/    C881 :                                             ;       lower_lower:
(1)  590/    C881 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  590/    C881 :                                             ;       upper_lower:
(1)  590/    C881 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  590/    C881 :                                             ;upper:
(1)  590/    C881 :                                             ;       ASL
(1)  590/    C881 :                                             ;       TAX
(1)  590/    C881 :                                             ;       BCS upper_upper
(1)  590/    C881 :                                             ;       lower_upper:
(1)  590/    C881 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  590/    C881 :                                             ;       upper_upper:
(1)  590/    C881 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  590/    C881 :                                             ;After jump:
(1)  590/    C881 :                                             ;TYA                                                    ;2
(1)  590/    C881 :                                             ;TAX                                                    ;2
(1)  590/    C881 :                                             
(1)  590/    C881 :                                             ;Method 4 - 28 cycles
(1)  590/    C881 :                                             ;LDA (emu_PC,X)                 ;6
(1)  590/    C881 :                                             ;TAY                                    ;2
(1)  590/    C881 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  590/    C881 :                                             ;PHA                                    ;3
(1)  590/    C881 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  590/    C881 :                                             ;PHA                                    ;3
(1)  590/    C881 :                                             ;RTS                                    ;6
(1)  590/    C881 :                                             
(1)  590/    C881 :                                             ;Method 5 - 30 cycles
(1)  590/    C881 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  590/    C883 : A8                                          TAY                                             ;2
(1)  590/    C884 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  590/    C887 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  590/    C889 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  590/    C88C : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  590/    C88E : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  590/    C891 :                                                                     
(1)  591/    C891 :                     
(1)  592/    C891 :                     	;0x76 - ROR ZPX
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 178 - 1/5/2022 11:50:53


(1)  593/    C891 :                     	ROR_ZPX:
(1)  594/    C891 : (MACRO)             		OP_MACRO 118, "ROR", "ZPX", "ROR_ZPX"
(1)  594/    C891 :                                             ;TODO
(1)  595/    C891 : (MACRO)             		NEXT_MACRO
(1)  595/    C891 :                                             
(1)  595/    C891 :  (MACRO-2)                                  halt
(1)  595/    C891 : 00                                  BRK
(1)  595/    C892 : 00                                  BRK
(1)  595/    C893 :                                             
(1)  595/    C893 :                                             ;Method 1 - 60 cycles
(1)  595/    C893 :                                             ;Jump table must be page aligned!!!
(1)  595/    C893 :                                             ;LDA (emu_PC,X)                 ;6
(1)  595/    C893 :                                             ;ASL                                    ;2
(1)  595/    C893 :                                             ;STA emu_ptr,X                  ;4
(1)  595/    C893 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  595/    C893 :                                             ;ADC #0                                 ;2
(1)  595/    C893 :                                             ;STA emu_ptr+1,X                ;4
(1)  595/    C893 :                                             ;LDA (emu_ptr,X)                ;6
(1)  595/    C893 :                                             ;STA emu_ptr2,X                 ;4
(1)  595/    C893 :                                             ;INC emu_ptr,X                  ;6
(1)  595/    C893 :                                             ;BCC .skip                              ;2
(1)  595/    C893 :                                             ;       INC emu_ptr+1,X         ;6
(1)  595/    C893 :                                             ;.skip:
(1)  595/    C893 :                                             ;LDA (emu_ptr,X)                ;6
(1)  595/    C893 :                                             ;STA emu_ptr2+1,X               ;4
(1)  595/    C893 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  595/    C893 :                                             
(1)  595/    C893 :                                             ;Method 2 - 46 cycles
(1)  595/    C893 :                                             ;Jump table must be page aligned!!!
(1)  595/    C893 :                                             ;LDA (emu_PC,X)                 ;6
(1)  595/    C893 :                                             ;STZ emu_ptr+1,X                ;4
(1)  595/    C893 :                                             ;ASL                                    ;2
(1)  595/    C893 :                                             ;ROL emu_ptr+1,X                ;6
(1)  595/    C893 :                                             ;ASL                                    ;2
(1)  595/    C893 :                                             ;ROL emu_ptr+1,X                ;6
(1)  595/    C893 :                                             ;STA emu_ptr,X                  ;4                              
(1)  595/    C893 :                                             ;LDA emu_ptr+1,X                ;4
(1)  595/    C893 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  595/    C893 :                                             ;STA emu_ptr+1,X                ;4
(1)  595/    C893 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  595/    C893 :                                             
(1)  595/    C893 :                                             ;Method 3 - 30 cycles
(1)  595/    C893 :                                             ;TXA                                                    ;2
(1)  595/    C893 :                                             ;TAY                                                    ;2
(1)  595/    C893 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  595/    C893 :                                             ;ASL                                                    ;2
(1)  595/    C893 :                                             ;BCS upper                                              ;2
(1)  595/    C893 :                                             ;lower:
(1)  595/    C893 :                                             ;       ASL                                                     ;2
(1)  595/    C893 :                                             ;       TAX                                                     ;2
(1)  595/    C893 :                                             ;       BCS upper_lower                         ;2
(1)  595/    C893 :                                             ;       lower_lower:
(1)  595/    C893 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  595/    C893 :                                             ;       upper_lower:
(1)  595/    C893 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  595/    C893 :                                             ;upper:
(1)  595/    C893 :                                             ;       ASL
(1)  595/    C893 :                                             ;       TAX
(1)  595/    C893 :                                             ;       BCS upper_upper
(1)  595/    C893 :                                             ;       lower_upper:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 179 - 1/5/2022 11:50:53


(1)  595/    C893 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  595/    C893 :                                             ;       upper_upper:
(1)  595/    C893 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  595/    C893 :                                             ;After jump:
(1)  595/    C893 :                                             ;TYA                                                    ;2
(1)  595/    C893 :                                             ;TAX                                                    ;2
(1)  595/    C893 :                                             
(1)  595/    C893 :                                             ;Method 4 - 28 cycles
(1)  595/    C893 :                                             ;LDA (emu_PC,X)                 ;6
(1)  595/    C893 :                                             ;TAY                                    ;2
(1)  595/    C893 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  595/    C893 :                                             ;PHA                                    ;3
(1)  595/    C893 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  595/    C893 :                                             ;PHA                                    ;3
(1)  595/    C893 :                                             ;RTS                                    ;6
(1)  595/    C893 :                                             
(1)  595/    C893 :                                             ;Method 5 - 30 cycles
(1)  595/    C893 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  595/    C895 : A8                                          TAY                                             ;2
(1)  595/    C896 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  595/    C899 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  595/    C89B : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  595/    C89E : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  595/    C8A0 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  595/    C8A3 :                                                                     
(1)  596/    C8A3 :                     
(1)  597/    C8A3 :                     	;0x77 - NOP
(1)  598/    C8A3 :                     	NOP_0x77:
(1)  599/    C8A3 : (MACRO)             		OP_MACRO 119, "NOP", "IMP", "NOP_0x77"
(1)  599/    C8A3 :                                             ;TODO
(1)  600/    C8A3 : (MACRO)             		NEXT_MACRO
(1)  600/    C8A3 :                                             
(1)  600/    C8A3 :  (MACRO-2)                                  halt
(1)  600/    C8A3 : 00                                  BRK
(1)  600/    C8A4 : 00                                  BRK
(1)  600/    C8A5 :                                             
(1)  600/    C8A5 :                                             ;Method 1 - 60 cycles
(1)  600/    C8A5 :                                             ;Jump table must be page aligned!!!
(1)  600/    C8A5 :                                             ;LDA (emu_PC,X)                 ;6
(1)  600/    C8A5 :                                             ;ASL                                    ;2
(1)  600/    C8A5 :                                             ;STA emu_ptr,X                  ;4
(1)  600/    C8A5 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  600/    C8A5 :                                             ;ADC #0                                 ;2
(1)  600/    C8A5 :                                             ;STA emu_ptr+1,X                ;4
(1)  600/    C8A5 :                                             ;LDA (emu_ptr,X)                ;6
(1)  600/    C8A5 :                                             ;STA emu_ptr2,X                 ;4
(1)  600/    C8A5 :                                             ;INC emu_ptr,X                  ;6
(1)  600/    C8A5 :                                             ;BCC .skip                              ;2
(1)  600/    C8A5 :                                             ;       INC emu_ptr+1,X         ;6
(1)  600/    C8A5 :                                             ;.skip:
(1)  600/    C8A5 :                                             ;LDA (emu_ptr,X)                ;6
(1)  600/    C8A5 :                                             ;STA emu_ptr2+1,X               ;4
(1)  600/    C8A5 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  600/    C8A5 :                                             
(1)  600/    C8A5 :                                             ;Method 2 - 46 cycles
(1)  600/    C8A5 :                                             ;Jump table must be page aligned!!!
(1)  600/    C8A5 :                                             ;LDA (emu_PC,X)                 ;6
(1)  600/    C8A5 :                                             ;STZ emu_ptr+1,X                ;4
(1)  600/    C8A5 :                                             ;ASL                                    ;2
(1)  600/    C8A5 :                                             ;ROL emu_ptr+1,X                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 180 - 1/5/2022 11:50:53


(1)  600/    C8A5 :                                             ;ASL                                    ;2
(1)  600/    C8A5 :                                             ;ROL emu_ptr+1,X                ;6
(1)  600/    C8A5 :                                             ;STA emu_ptr,X                  ;4                              
(1)  600/    C8A5 :                                             ;LDA emu_ptr+1,X                ;4
(1)  600/    C8A5 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  600/    C8A5 :                                             ;STA emu_ptr+1,X                ;4
(1)  600/    C8A5 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  600/    C8A5 :                                             
(1)  600/    C8A5 :                                             ;Method 3 - 30 cycles
(1)  600/    C8A5 :                                             ;TXA                                                    ;2
(1)  600/    C8A5 :                                             ;TAY                                                    ;2
(1)  600/    C8A5 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  600/    C8A5 :                                             ;ASL                                                    ;2
(1)  600/    C8A5 :                                             ;BCS upper                                              ;2
(1)  600/    C8A5 :                                             ;lower:
(1)  600/    C8A5 :                                             ;       ASL                                                     ;2
(1)  600/    C8A5 :                                             ;       TAX                                                     ;2
(1)  600/    C8A5 :                                             ;       BCS upper_lower                         ;2
(1)  600/    C8A5 :                                             ;       lower_lower:
(1)  600/    C8A5 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  600/    C8A5 :                                             ;       upper_lower:
(1)  600/    C8A5 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  600/    C8A5 :                                             ;upper:
(1)  600/    C8A5 :                                             ;       ASL
(1)  600/    C8A5 :                                             ;       TAX
(1)  600/    C8A5 :                                             ;       BCS upper_upper
(1)  600/    C8A5 :                                             ;       lower_upper:
(1)  600/    C8A5 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  600/    C8A5 :                                             ;       upper_upper:
(1)  600/    C8A5 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  600/    C8A5 :                                             ;After jump:
(1)  600/    C8A5 :                                             ;TYA                                                    ;2
(1)  600/    C8A5 :                                             ;TAX                                                    ;2
(1)  600/    C8A5 :                                             
(1)  600/    C8A5 :                                             ;Method 4 - 28 cycles
(1)  600/    C8A5 :                                             ;LDA (emu_PC,X)                 ;6
(1)  600/    C8A5 :                                             ;TAY                                    ;2
(1)  600/    C8A5 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  600/    C8A5 :                                             ;PHA                                    ;3
(1)  600/    C8A5 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  600/    C8A5 :                                             ;PHA                                    ;3
(1)  600/    C8A5 :                                             ;RTS                                    ;6
(1)  600/    C8A5 :                                             
(1)  600/    C8A5 :                                             ;Method 5 - 30 cycles
(1)  600/    C8A5 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  600/    C8A7 : A8                                          TAY                                             ;2
(1)  600/    C8A8 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  600/    C8AB : 95 0A                                       STA emu_ptr,X                   ;4
(1)  600/    C8AD : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  600/    C8B0 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  600/    C8B2 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  600/    C8B5 :                                                                     
(1)  601/    C8B5 :                     
(1)  602/    C8B5 :                     	;0x78 - SEI IMP
(1)  603/    C8B5 :                     	SEI_IMP:
(1)  604/    C8B5 : (MACRO)             		OP_MACRO 120, "SEI", "IMP", "SEI_IMP"
(1)  604/    C8B5 :                                             ;TODO
(1)  605/    C8B5 : (MACRO)             		NEXT_MACRO
(1)  605/    C8B5 :                                             
(1)  605/    C8B5 :  (MACRO-2)                                  halt
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 181 - 1/5/2022 11:50:53


(1)  605/    C8B5 : 00                                  BRK
(1)  605/    C8B6 : 00                                  BRK
(1)  605/    C8B7 :                                             
(1)  605/    C8B7 :                                             ;Method 1 - 60 cycles
(1)  605/    C8B7 :                                             ;Jump table must be page aligned!!!
(1)  605/    C8B7 :                                             ;LDA (emu_PC,X)                 ;6
(1)  605/    C8B7 :                                             ;ASL                                    ;2
(1)  605/    C8B7 :                                             ;STA emu_ptr,X                  ;4
(1)  605/    C8B7 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  605/    C8B7 :                                             ;ADC #0                                 ;2
(1)  605/    C8B7 :                                             ;STA emu_ptr+1,X                ;4
(1)  605/    C8B7 :                                             ;LDA (emu_ptr,X)                ;6
(1)  605/    C8B7 :                                             ;STA emu_ptr2,X                 ;4
(1)  605/    C8B7 :                                             ;INC emu_ptr,X                  ;6
(1)  605/    C8B7 :                                             ;BCC .skip                              ;2
(1)  605/    C8B7 :                                             ;       INC emu_ptr+1,X         ;6
(1)  605/    C8B7 :                                             ;.skip:
(1)  605/    C8B7 :                                             ;LDA (emu_ptr,X)                ;6
(1)  605/    C8B7 :                                             ;STA emu_ptr2+1,X               ;4
(1)  605/    C8B7 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  605/    C8B7 :                                             
(1)  605/    C8B7 :                                             ;Method 2 - 46 cycles
(1)  605/    C8B7 :                                             ;Jump table must be page aligned!!!
(1)  605/    C8B7 :                                             ;LDA (emu_PC,X)                 ;6
(1)  605/    C8B7 :                                             ;STZ emu_ptr+1,X                ;4
(1)  605/    C8B7 :                                             ;ASL                                    ;2
(1)  605/    C8B7 :                                             ;ROL emu_ptr+1,X                ;6
(1)  605/    C8B7 :                                             ;ASL                                    ;2
(1)  605/    C8B7 :                                             ;ROL emu_ptr+1,X                ;6
(1)  605/    C8B7 :                                             ;STA emu_ptr,X                  ;4                              
(1)  605/    C8B7 :                                             ;LDA emu_ptr+1,X                ;4
(1)  605/    C8B7 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  605/    C8B7 :                                             ;STA emu_ptr+1,X                ;4
(1)  605/    C8B7 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  605/    C8B7 :                                             
(1)  605/    C8B7 :                                             ;Method 3 - 30 cycles
(1)  605/    C8B7 :                                             ;TXA                                                    ;2
(1)  605/    C8B7 :                                             ;TAY                                                    ;2
(1)  605/    C8B7 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  605/    C8B7 :                                             ;ASL                                                    ;2
(1)  605/    C8B7 :                                             ;BCS upper                                              ;2
(1)  605/    C8B7 :                                             ;lower:
(1)  605/    C8B7 :                                             ;       ASL                                                     ;2
(1)  605/    C8B7 :                                             ;       TAX                                                     ;2
(1)  605/    C8B7 :                                             ;       BCS upper_lower                         ;2
(1)  605/    C8B7 :                                             ;       lower_lower:
(1)  605/    C8B7 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  605/    C8B7 :                                             ;       upper_lower:
(1)  605/    C8B7 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  605/    C8B7 :                                             ;upper:
(1)  605/    C8B7 :                                             ;       ASL
(1)  605/    C8B7 :                                             ;       TAX
(1)  605/    C8B7 :                                             ;       BCS upper_upper
(1)  605/    C8B7 :                                             ;       lower_upper:
(1)  605/    C8B7 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  605/    C8B7 :                                             ;       upper_upper:
(1)  605/    C8B7 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  605/    C8B7 :                                             ;After jump:
(1)  605/    C8B7 :                                             ;TYA                                                    ;2
(1)  605/    C8B7 :                                             ;TAX                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 182 - 1/5/2022 11:50:53


(1)  605/    C8B7 :                                             
(1)  605/    C8B7 :                                             ;Method 4 - 28 cycles
(1)  605/    C8B7 :                                             ;LDA (emu_PC,X)                 ;6
(1)  605/    C8B7 :                                             ;TAY                                    ;2
(1)  605/    C8B7 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  605/    C8B7 :                                             ;PHA                                    ;3
(1)  605/    C8B7 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  605/    C8B7 :                                             ;PHA                                    ;3
(1)  605/    C8B7 :                                             ;RTS                                    ;6
(1)  605/    C8B7 :                                             
(1)  605/    C8B7 :                                             ;Method 5 - 30 cycles
(1)  605/    C8B7 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  605/    C8B9 : A8                                          TAY                                             ;2
(1)  605/    C8BA : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  605/    C8BD : 95 0A                                       STA emu_ptr,X                   ;4
(1)  605/    C8BF : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  605/    C8C2 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  605/    C8C4 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  605/    C8C7 :                                                                     
(1)  606/    C8C7 :                     
(1)  607/    C8C7 :                     	;0x79 - ADC ABSY
(1)  608/    C8C7 :                     	ADC_ABSY:
(1)  609/    C8C7 : (MACRO)             		OP_MACRO 121, "ADC", "ABSY", "ADC_ABSY"
(1)  609/    C8C7 :                                             ;TODO
(1)  610/    C8C7 : (MACRO)             		NEXT_MACRO
(1)  610/    C8C7 :                                             
(1)  610/    C8C7 :  (MACRO-2)                                  halt
(1)  610/    C8C7 : 00                                  BRK
(1)  610/    C8C8 : 00                                  BRK
(1)  610/    C8C9 :                                             
(1)  610/    C8C9 :                                             ;Method 1 - 60 cycles
(1)  610/    C8C9 :                                             ;Jump table must be page aligned!!!
(1)  610/    C8C9 :                                             ;LDA (emu_PC,X)                 ;6
(1)  610/    C8C9 :                                             ;ASL                                    ;2
(1)  610/    C8C9 :                                             ;STA emu_ptr,X                  ;4
(1)  610/    C8C9 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  610/    C8C9 :                                             ;ADC #0                                 ;2
(1)  610/    C8C9 :                                             ;STA emu_ptr+1,X                ;4
(1)  610/    C8C9 :                                             ;LDA (emu_ptr,X)                ;6
(1)  610/    C8C9 :                                             ;STA emu_ptr2,X                 ;4
(1)  610/    C8C9 :                                             ;INC emu_ptr,X                  ;6
(1)  610/    C8C9 :                                             ;BCC .skip                              ;2
(1)  610/    C8C9 :                                             ;       INC emu_ptr+1,X         ;6
(1)  610/    C8C9 :                                             ;.skip:
(1)  610/    C8C9 :                                             ;LDA (emu_ptr,X)                ;6
(1)  610/    C8C9 :                                             ;STA emu_ptr2+1,X               ;4
(1)  610/    C8C9 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  610/    C8C9 :                                             
(1)  610/    C8C9 :                                             ;Method 2 - 46 cycles
(1)  610/    C8C9 :                                             ;Jump table must be page aligned!!!
(1)  610/    C8C9 :                                             ;LDA (emu_PC,X)                 ;6
(1)  610/    C8C9 :                                             ;STZ emu_ptr+1,X                ;4
(1)  610/    C8C9 :                                             ;ASL                                    ;2
(1)  610/    C8C9 :                                             ;ROL emu_ptr+1,X                ;6
(1)  610/    C8C9 :                                             ;ASL                                    ;2
(1)  610/    C8C9 :                                             ;ROL emu_ptr+1,X                ;6
(1)  610/    C8C9 :                                             ;STA emu_ptr,X                  ;4                              
(1)  610/    C8C9 :                                             ;LDA emu_ptr+1,X                ;4
(1)  610/    C8C9 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  610/    C8C9 :                                             ;STA emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 183 - 1/5/2022 11:50:53


(1)  610/    C8C9 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  610/    C8C9 :                                             
(1)  610/    C8C9 :                                             ;Method 3 - 30 cycles
(1)  610/    C8C9 :                                             ;TXA                                                    ;2
(1)  610/    C8C9 :                                             ;TAY                                                    ;2
(1)  610/    C8C9 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  610/    C8C9 :                                             ;ASL                                                    ;2
(1)  610/    C8C9 :                                             ;BCS upper                                              ;2
(1)  610/    C8C9 :                                             ;lower:
(1)  610/    C8C9 :                                             ;       ASL                                                     ;2
(1)  610/    C8C9 :                                             ;       TAX                                                     ;2
(1)  610/    C8C9 :                                             ;       BCS upper_lower                         ;2
(1)  610/    C8C9 :                                             ;       lower_lower:
(1)  610/    C8C9 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  610/    C8C9 :                                             ;       upper_lower:
(1)  610/    C8C9 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  610/    C8C9 :                                             ;upper:
(1)  610/    C8C9 :                                             ;       ASL
(1)  610/    C8C9 :                                             ;       TAX
(1)  610/    C8C9 :                                             ;       BCS upper_upper
(1)  610/    C8C9 :                                             ;       lower_upper:
(1)  610/    C8C9 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  610/    C8C9 :                                             ;       upper_upper:
(1)  610/    C8C9 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  610/    C8C9 :                                             ;After jump:
(1)  610/    C8C9 :                                             ;TYA                                                    ;2
(1)  610/    C8C9 :                                             ;TAX                                                    ;2
(1)  610/    C8C9 :                                             
(1)  610/    C8C9 :                                             ;Method 4 - 28 cycles
(1)  610/    C8C9 :                                             ;LDA (emu_PC,X)                 ;6
(1)  610/    C8C9 :                                             ;TAY                                    ;2
(1)  610/    C8C9 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  610/    C8C9 :                                             ;PHA                                    ;3
(1)  610/    C8C9 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  610/    C8C9 :                                             ;PHA                                    ;3
(1)  610/    C8C9 :                                             ;RTS                                    ;6
(1)  610/    C8C9 :                                             
(1)  610/    C8C9 :                                             ;Method 5 - 30 cycles
(1)  610/    C8C9 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  610/    C8CB : A8                                          TAY                                             ;2
(1)  610/    C8CC : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  610/    C8CF : 95 0A                                       STA emu_ptr,X                   ;4
(1)  610/    C8D1 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  610/    C8D4 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  610/    C8D6 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  610/    C8D9 :                                                                     
(1)  611/    C8D9 :                     
(1)  612/    C8D9 :                     	;0x7A - NOP
(1)  613/    C8D9 :                     	NOP_0x7A:
(1)  614/    C8D9 : (MACRO)             		OP_MACRO 122, "NOP", "IMP", "NOP_0x7A"
(1)  614/    C8D9 :                                             ;TODO
(1)  615/    C8D9 : (MACRO)             		NEXT_MACRO
(1)  615/    C8D9 :                                             
(1)  615/    C8D9 :  (MACRO-2)                                  halt
(1)  615/    C8D9 : 00                                  BRK
(1)  615/    C8DA : 00                                  BRK
(1)  615/    C8DB :                                             
(1)  615/    C8DB :                                             ;Method 1 - 60 cycles
(1)  615/    C8DB :                                             ;Jump table must be page aligned!!!
(1)  615/    C8DB :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 184 - 1/5/2022 11:50:53


(1)  615/    C8DB :                                             ;ASL                                    ;2
(1)  615/    C8DB :                                             ;STA emu_ptr,X                  ;4
(1)  615/    C8DB :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  615/    C8DB :                                             ;ADC #0                                 ;2
(1)  615/    C8DB :                                             ;STA emu_ptr+1,X                ;4
(1)  615/    C8DB :                                             ;LDA (emu_ptr,X)                ;6
(1)  615/    C8DB :                                             ;STA emu_ptr2,X                 ;4
(1)  615/    C8DB :                                             ;INC emu_ptr,X                  ;6
(1)  615/    C8DB :                                             ;BCC .skip                              ;2
(1)  615/    C8DB :                                             ;       INC emu_ptr+1,X         ;6
(1)  615/    C8DB :                                             ;.skip:
(1)  615/    C8DB :                                             ;LDA (emu_ptr,X)                ;6
(1)  615/    C8DB :                                             ;STA emu_ptr2+1,X               ;4
(1)  615/    C8DB :                                             ;JMP (emu_ptr2,X)               ;6
(1)  615/    C8DB :                                             
(1)  615/    C8DB :                                             ;Method 2 - 46 cycles
(1)  615/    C8DB :                                             ;Jump table must be page aligned!!!
(1)  615/    C8DB :                                             ;LDA (emu_PC,X)                 ;6
(1)  615/    C8DB :                                             ;STZ emu_ptr+1,X                ;4
(1)  615/    C8DB :                                             ;ASL                                    ;2
(1)  615/    C8DB :                                             ;ROL emu_ptr+1,X                ;6
(1)  615/    C8DB :                                             ;ASL                                    ;2
(1)  615/    C8DB :                                             ;ROL emu_ptr+1,X                ;6
(1)  615/    C8DB :                                             ;STA emu_ptr,X                  ;4                              
(1)  615/    C8DB :                                             ;LDA emu_ptr+1,X                ;4
(1)  615/    C8DB :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  615/    C8DB :                                             ;STA emu_ptr+1,X                ;4
(1)  615/    C8DB :                                             ;JMP (emu_ptr2,X)               ;6
(1)  615/    C8DB :                                             
(1)  615/    C8DB :                                             ;Method 3 - 30 cycles
(1)  615/    C8DB :                                             ;TXA                                                    ;2
(1)  615/    C8DB :                                             ;TAY                                                    ;2
(1)  615/    C8DB :                                             ;LDA (emu_PC,X)                                 ;6
(1)  615/    C8DB :                                             ;ASL                                                    ;2
(1)  615/    C8DB :                                             ;BCS upper                                              ;2
(1)  615/    C8DB :                                             ;lower:
(1)  615/    C8DB :                                             ;       ASL                                                     ;2
(1)  615/    C8DB :                                             ;       TAX                                                     ;2
(1)  615/    C8DB :                                             ;       BCS upper_lower                         ;2
(1)  615/    C8DB :                                             ;       lower_lower:
(1)  615/    C8DB :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  615/    C8DB :                                             ;       upper_lower:
(1)  615/    C8DB :                                             ;               JMP (JUMP_TABLE2,X)
(1)  615/    C8DB :                                             ;upper:
(1)  615/    C8DB :                                             ;       ASL
(1)  615/    C8DB :                                             ;       TAX
(1)  615/    C8DB :                                             ;       BCS upper_upper
(1)  615/    C8DB :                                             ;       lower_upper:
(1)  615/    C8DB :                                             ;               JMP (JUMP_TABLE3,X)
(1)  615/    C8DB :                                             ;       upper_upper:
(1)  615/    C8DB :                                             ;               JMP (JUMP_TABLE4,X)
(1)  615/    C8DB :                                             ;After jump:
(1)  615/    C8DB :                                             ;TYA                                                    ;2
(1)  615/    C8DB :                                             ;TAX                                                    ;2
(1)  615/    C8DB :                                             
(1)  615/    C8DB :                                             ;Method 4 - 28 cycles
(1)  615/    C8DB :                                             ;LDA (emu_PC,X)                 ;6
(1)  615/    C8DB :                                             ;TAY                                    ;2
(1)  615/    C8DB :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  615/    C8DB :                                             ;PHA                                    ;3
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 185 - 1/5/2022 11:50:53


(1)  615/    C8DB :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  615/    C8DB :                                             ;PHA                                    ;3
(1)  615/    C8DB :                                             ;RTS                                    ;6
(1)  615/    C8DB :                                             
(1)  615/    C8DB :                                             ;Method 5 - 30 cycles
(1)  615/    C8DB : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  615/    C8DD : A8                                          TAY                                             ;2
(1)  615/    C8DE : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  615/    C8E1 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  615/    C8E3 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  615/    C8E6 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  615/    C8E8 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  615/    C8EB :                                                                     
(1)  616/    C8EB :                     
(1)  617/    C8EB :                     	;0x7B - NOP
(1)  618/    C8EB :                     	NOP_0x7B:
(1)  619/    C8EB : (MACRO)             		OP_MACRO 123, "NOP", "IMP", "NOP_0x7B"
(1)  619/    C8EB :                                             ;TODO
(1)  620/    C8EB : (MACRO)             		NEXT_MACRO
(1)  620/    C8EB :                                             
(1)  620/    C8EB :  (MACRO-2)                                  halt
(1)  620/    C8EB : 00                                  BRK
(1)  620/    C8EC : 00                                  BRK
(1)  620/    C8ED :                                             
(1)  620/    C8ED :                                             ;Method 1 - 60 cycles
(1)  620/    C8ED :                                             ;Jump table must be page aligned!!!
(1)  620/    C8ED :                                             ;LDA (emu_PC,X)                 ;6
(1)  620/    C8ED :                                             ;ASL                                    ;2
(1)  620/    C8ED :                                             ;STA emu_ptr,X                  ;4
(1)  620/    C8ED :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  620/    C8ED :                                             ;ADC #0                                 ;2
(1)  620/    C8ED :                                             ;STA emu_ptr+1,X                ;4
(1)  620/    C8ED :                                             ;LDA (emu_ptr,X)                ;6
(1)  620/    C8ED :                                             ;STA emu_ptr2,X                 ;4
(1)  620/    C8ED :                                             ;INC emu_ptr,X                  ;6
(1)  620/    C8ED :                                             ;BCC .skip                              ;2
(1)  620/    C8ED :                                             ;       INC emu_ptr+1,X         ;6
(1)  620/    C8ED :                                             ;.skip:
(1)  620/    C8ED :                                             ;LDA (emu_ptr,X)                ;6
(1)  620/    C8ED :                                             ;STA emu_ptr2+1,X               ;4
(1)  620/    C8ED :                                             ;JMP (emu_ptr2,X)               ;6
(1)  620/    C8ED :                                             
(1)  620/    C8ED :                                             ;Method 2 - 46 cycles
(1)  620/    C8ED :                                             ;Jump table must be page aligned!!!
(1)  620/    C8ED :                                             ;LDA (emu_PC,X)                 ;6
(1)  620/    C8ED :                                             ;STZ emu_ptr+1,X                ;4
(1)  620/    C8ED :                                             ;ASL                                    ;2
(1)  620/    C8ED :                                             ;ROL emu_ptr+1,X                ;6
(1)  620/    C8ED :                                             ;ASL                                    ;2
(1)  620/    C8ED :                                             ;ROL emu_ptr+1,X                ;6
(1)  620/    C8ED :                                             ;STA emu_ptr,X                  ;4                              
(1)  620/    C8ED :                                             ;LDA emu_ptr+1,X                ;4
(1)  620/    C8ED :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  620/    C8ED :                                             ;STA emu_ptr+1,X                ;4
(1)  620/    C8ED :                                             ;JMP (emu_ptr2,X)               ;6
(1)  620/    C8ED :                                             
(1)  620/    C8ED :                                             ;Method 3 - 30 cycles
(1)  620/    C8ED :                                             ;TXA                                                    ;2
(1)  620/    C8ED :                                             ;TAY                                                    ;2
(1)  620/    C8ED :                                             ;LDA (emu_PC,X)                                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 186 - 1/5/2022 11:50:53


(1)  620/    C8ED :                                             ;ASL                                                    ;2
(1)  620/    C8ED :                                             ;BCS upper                                              ;2
(1)  620/    C8ED :                                             ;lower:
(1)  620/    C8ED :                                             ;       ASL                                                     ;2
(1)  620/    C8ED :                                             ;       TAX                                                     ;2
(1)  620/    C8ED :                                             ;       BCS upper_lower                         ;2
(1)  620/    C8ED :                                             ;       lower_lower:
(1)  620/    C8ED :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  620/    C8ED :                                             ;       upper_lower:
(1)  620/    C8ED :                                             ;               JMP (JUMP_TABLE2,X)
(1)  620/    C8ED :                                             ;upper:
(1)  620/    C8ED :                                             ;       ASL
(1)  620/    C8ED :                                             ;       TAX
(1)  620/    C8ED :                                             ;       BCS upper_upper
(1)  620/    C8ED :                                             ;       lower_upper:
(1)  620/    C8ED :                                             ;               JMP (JUMP_TABLE3,X)
(1)  620/    C8ED :                                             ;       upper_upper:
(1)  620/    C8ED :                                             ;               JMP (JUMP_TABLE4,X)
(1)  620/    C8ED :                                             ;After jump:
(1)  620/    C8ED :                                             ;TYA                                                    ;2
(1)  620/    C8ED :                                             ;TAX                                                    ;2
(1)  620/    C8ED :                                             
(1)  620/    C8ED :                                             ;Method 4 - 28 cycles
(1)  620/    C8ED :                                             ;LDA (emu_PC,X)                 ;6
(1)  620/    C8ED :                                             ;TAY                                    ;2
(1)  620/    C8ED :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  620/    C8ED :                                             ;PHA                                    ;3
(1)  620/    C8ED :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  620/    C8ED :                                             ;PHA                                    ;3
(1)  620/    C8ED :                                             ;RTS                                    ;6
(1)  620/    C8ED :                                             
(1)  620/    C8ED :                                             ;Method 5 - 30 cycles
(1)  620/    C8ED : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  620/    C8EF : A8                                          TAY                                             ;2
(1)  620/    C8F0 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  620/    C8F3 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  620/    C8F5 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  620/    C8F8 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  620/    C8FA : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  620/    C8FD :                                                                     
(1)  621/    C8FD :                     
(1)  622/    C8FD :                     	;0x7C - NOP
(1)  623/    C8FD :                     	NOP_0x7C:
(1)  624/    C8FD : (MACRO)             		OP_MACRO 124, "NOP", "IMP", "NOP_0x7C"
(1)  624/    C8FD :                                             ;TODO
(1)  625/    C8FD : (MACRO)             		NEXT_MACRO
(1)  625/    C8FD :                                             
(1)  625/    C8FD :  (MACRO-2)                                  halt
(1)  625/    C8FD : 00                                  BRK
(1)  625/    C8FE : 00                                  BRK
(1)  625/    C8FF :                                             
(1)  625/    C8FF :                                             ;Method 1 - 60 cycles
(1)  625/    C8FF :                                             ;Jump table must be page aligned!!!
(1)  625/    C8FF :                                             ;LDA (emu_PC,X)                 ;6
(1)  625/    C8FF :                                             ;ASL                                    ;2
(1)  625/    C8FF :                                             ;STA emu_ptr,X                  ;4
(1)  625/    C8FF :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  625/    C8FF :                                             ;ADC #0                                 ;2
(1)  625/    C8FF :                                             ;STA emu_ptr+1,X                ;4
(1)  625/    C8FF :                                             ;LDA (emu_ptr,X)                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 187 - 1/5/2022 11:50:53


(1)  625/    C8FF :                                             ;STA emu_ptr2,X                 ;4
(1)  625/    C8FF :                                             ;INC emu_ptr,X                  ;6
(1)  625/    C8FF :                                             ;BCC .skip                              ;2
(1)  625/    C8FF :                                             ;       INC emu_ptr+1,X         ;6
(1)  625/    C8FF :                                             ;.skip:
(1)  625/    C8FF :                                             ;LDA (emu_ptr,X)                ;6
(1)  625/    C8FF :                                             ;STA emu_ptr2+1,X               ;4
(1)  625/    C8FF :                                             ;JMP (emu_ptr2,X)               ;6
(1)  625/    C8FF :                                             
(1)  625/    C8FF :                                             ;Method 2 - 46 cycles
(1)  625/    C8FF :                                             ;Jump table must be page aligned!!!
(1)  625/    C8FF :                                             ;LDA (emu_PC,X)                 ;6
(1)  625/    C8FF :                                             ;STZ emu_ptr+1,X                ;4
(1)  625/    C8FF :                                             ;ASL                                    ;2
(1)  625/    C8FF :                                             ;ROL emu_ptr+1,X                ;6
(1)  625/    C8FF :                                             ;ASL                                    ;2
(1)  625/    C8FF :                                             ;ROL emu_ptr+1,X                ;6
(1)  625/    C8FF :                                             ;STA emu_ptr,X                  ;4                              
(1)  625/    C8FF :                                             ;LDA emu_ptr+1,X                ;4
(1)  625/    C8FF :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  625/    C8FF :                                             ;STA emu_ptr+1,X                ;4
(1)  625/    C8FF :                                             ;JMP (emu_ptr2,X)               ;6
(1)  625/    C8FF :                                             
(1)  625/    C8FF :                                             ;Method 3 - 30 cycles
(1)  625/    C8FF :                                             ;TXA                                                    ;2
(1)  625/    C8FF :                                             ;TAY                                                    ;2
(1)  625/    C8FF :                                             ;LDA (emu_PC,X)                                 ;6
(1)  625/    C8FF :                                             ;ASL                                                    ;2
(1)  625/    C8FF :                                             ;BCS upper                                              ;2
(1)  625/    C8FF :                                             ;lower:
(1)  625/    C8FF :                                             ;       ASL                                                     ;2
(1)  625/    C8FF :                                             ;       TAX                                                     ;2
(1)  625/    C8FF :                                             ;       BCS upper_lower                         ;2
(1)  625/    C8FF :                                             ;       lower_lower:
(1)  625/    C8FF :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  625/    C8FF :                                             ;       upper_lower:
(1)  625/    C8FF :                                             ;               JMP (JUMP_TABLE2,X)
(1)  625/    C8FF :                                             ;upper:
(1)  625/    C8FF :                                             ;       ASL
(1)  625/    C8FF :                                             ;       TAX
(1)  625/    C8FF :                                             ;       BCS upper_upper
(1)  625/    C8FF :                                             ;       lower_upper:
(1)  625/    C8FF :                                             ;               JMP (JUMP_TABLE3,X)
(1)  625/    C8FF :                                             ;       upper_upper:
(1)  625/    C8FF :                                             ;               JMP (JUMP_TABLE4,X)
(1)  625/    C8FF :                                             ;After jump:
(1)  625/    C8FF :                                             ;TYA                                                    ;2
(1)  625/    C8FF :                                             ;TAX                                                    ;2
(1)  625/    C8FF :                                             
(1)  625/    C8FF :                                             ;Method 4 - 28 cycles
(1)  625/    C8FF :                                             ;LDA (emu_PC,X)                 ;6
(1)  625/    C8FF :                                             ;TAY                                    ;2
(1)  625/    C8FF :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  625/    C8FF :                                             ;PHA                                    ;3
(1)  625/    C8FF :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  625/    C8FF :                                             ;PHA                                    ;3
(1)  625/    C8FF :                                             ;RTS                                    ;6
(1)  625/    C8FF :                                             
(1)  625/    C8FF :                                             ;Method 5 - 30 cycles
(1)  625/    C8FF : A1 02                                       LDA (emu_PC,X)                  ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 188 - 1/5/2022 11:50:53


(1)  625/    C901 : A8                                          TAY                                             ;2
(1)  625/    C902 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  625/    C905 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  625/    C907 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  625/    C90A : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  625/    C90C : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  625/    C90F :                                                                     
(1)  626/    C90F :                     
(1)  627/    C90F :                     	;0x7D - ADC ABSX
(1)  628/    C90F :                     	ADC_ABSX:
(1)  629/    C90F : (MACRO)             		OP_MACRO 125, "ADC", "ABSX", "ADC_ABSX"
(1)  629/    C90F :                                             ;TODO
(1)  630/    C90F : (MACRO)             		NEXT_MACRO
(1)  630/    C90F :                                             
(1)  630/    C90F :  (MACRO-2)                                  halt
(1)  630/    C90F : 00                                  BRK
(1)  630/    C910 : 00                                  BRK
(1)  630/    C911 :                                             
(1)  630/    C911 :                                             ;Method 1 - 60 cycles
(1)  630/    C911 :                                             ;Jump table must be page aligned!!!
(1)  630/    C911 :                                             ;LDA (emu_PC,X)                 ;6
(1)  630/    C911 :                                             ;ASL                                    ;2
(1)  630/    C911 :                                             ;STA emu_ptr,X                  ;4
(1)  630/    C911 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  630/    C911 :                                             ;ADC #0                                 ;2
(1)  630/    C911 :                                             ;STA emu_ptr+1,X                ;4
(1)  630/    C911 :                                             ;LDA (emu_ptr,X)                ;6
(1)  630/    C911 :                                             ;STA emu_ptr2,X                 ;4
(1)  630/    C911 :                                             ;INC emu_ptr,X                  ;6
(1)  630/    C911 :                                             ;BCC .skip                              ;2
(1)  630/    C911 :                                             ;       INC emu_ptr+1,X         ;6
(1)  630/    C911 :                                             ;.skip:
(1)  630/    C911 :                                             ;LDA (emu_ptr,X)                ;6
(1)  630/    C911 :                                             ;STA emu_ptr2+1,X               ;4
(1)  630/    C911 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  630/    C911 :                                             
(1)  630/    C911 :                                             ;Method 2 - 46 cycles
(1)  630/    C911 :                                             ;Jump table must be page aligned!!!
(1)  630/    C911 :                                             ;LDA (emu_PC,X)                 ;6
(1)  630/    C911 :                                             ;STZ emu_ptr+1,X                ;4
(1)  630/    C911 :                                             ;ASL                                    ;2
(1)  630/    C911 :                                             ;ROL emu_ptr+1,X                ;6
(1)  630/    C911 :                                             ;ASL                                    ;2
(1)  630/    C911 :                                             ;ROL emu_ptr+1,X                ;6
(1)  630/    C911 :                                             ;STA emu_ptr,X                  ;4                              
(1)  630/    C911 :                                             ;LDA emu_ptr+1,X                ;4
(1)  630/    C911 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  630/    C911 :                                             ;STA emu_ptr+1,X                ;4
(1)  630/    C911 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  630/    C911 :                                             
(1)  630/    C911 :                                             ;Method 3 - 30 cycles
(1)  630/    C911 :                                             ;TXA                                                    ;2
(1)  630/    C911 :                                             ;TAY                                                    ;2
(1)  630/    C911 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  630/    C911 :                                             ;ASL                                                    ;2
(1)  630/    C911 :                                             ;BCS upper                                              ;2
(1)  630/    C911 :                                             ;lower:
(1)  630/    C911 :                                             ;       ASL                                                     ;2
(1)  630/    C911 :                                             ;       TAX                                                     ;2
(1)  630/    C911 :                                             ;       BCS upper_lower                         ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 189 - 1/5/2022 11:50:53


(1)  630/    C911 :                                             ;       lower_lower:
(1)  630/    C911 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  630/    C911 :                                             ;       upper_lower:
(1)  630/    C911 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  630/    C911 :                                             ;upper:
(1)  630/    C911 :                                             ;       ASL
(1)  630/    C911 :                                             ;       TAX
(1)  630/    C911 :                                             ;       BCS upper_upper
(1)  630/    C911 :                                             ;       lower_upper:
(1)  630/    C911 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  630/    C911 :                                             ;       upper_upper:
(1)  630/    C911 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  630/    C911 :                                             ;After jump:
(1)  630/    C911 :                                             ;TYA                                                    ;2
(1)  630/    C911 :                                             ;TAX                                                    ;2
(1)  630/    C911 :                                             
(1)  630/    C911 :                                             ;Method 4 - 28 cycles
(1)  630/    C911 :                                             ;LDA (emu_PC,X)                 ;6
(1)  630/    C911 :                                             ;TAY                                    ;2
(1)  630/    C911 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  630/    C911 :                                             ;PHA                                    ;3
(1)  630/    C911 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  630/    C911 :                                             ;PHA                                    ;3
(1)  630/    C911 :                                             ;RTS                                    ;6
(1)  630/    C911 :                                             
(1)  630/    C911 :                                             ;Method 5 - 30 cycles
(1)  630/    C911 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  630/    C913 : A8                                          TAY                                             ;2
(1)  630/    C914 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  630/    C917 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  630/    C919 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  630/    C91C : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  630/    C91E : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  630/    C921 :                                                                     
(1)  631/    C921 :                     
(1)  632/    C921 :                     	;0x7E - ROR ABSX
(1)  633/    C921 :                     	ROR_ABSX:
(1)  634/    C921 : (MACRO)             		OP_MACRO 126, "ROR", "ABSX", "ROR_ABSX"
(1)  634/    C921 :                                             ;TODO
(1)  635/    C921 : (MACRO)             		NEXT_MACRO
(1)  635/    C921 :                                             
(1)  635/    C921 :  (MACRO-2)                                  halt
(1)  635/    C921 : 00                                  BRK
(1)  635/    C922 : 00                                  BRK
(1)  635/    C923 :                                             
(1)  635/    C923 :                                             ;Method 1 - 60 cycles
(1)  635/    C923 :                                             ;Jump table must be page aligned!!!
(1)  635/    C923 :                                             ;LDA (emu_PC,X)                 ;6
(1)  635/    C923 :                                             ;ASL                                    ;2
(1)  635/    C923 :                                             ;STA emu_ptr,X                  ;4
(1)  635/    C923 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  635/    C923 :                                             ;ADC #0                                 ;2
(1)  635/    C923 :                                             ;STA emu_ptr+1,X                ;4
(1)  635/    C923 :                                             ;LDA (emu_ptr,X)                ;6
(1)  635/    C923 :                                             ;STA emu_ptr2,X                 ;4
(1)  635/    C923 :                                             ;INC emu_ptr,X                  ;6
(1)  635/    C923 :                                             ;BCC .skip                              ;2
(1)  635/    C923 :                                             ;       INC emu_ptr+1,X         ;6
(1)  635/    C923 :                                             ;.skip:
(1)  635/    C923 :                                             ;LDA (emu_ptr,X)                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 190 - 1/5/2022 11:50:53


(1)  635/    C923 :                                             ;STA emu_ptr2+1,X               ;4
(1)  635/    C923 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  635/    C923 :                                             
(1)  635/    C923 :                                             ;Method 2 - 46 cycles
(1)  635/    C923 :                                             ;Jump table must be page aligned!!!
(1)  635/    C923 :                                             ;LDA (emu_PC,X)                 ;6
(1)  635/    C923 :                                             ;STZ emu_ptr+1,X                ;4
(1)  635/    C923 :                                             ;ASL                                    ;2
(1)  635/    C923 :                                             ;ROL emu_ptr+1,X                ;6
(1)  635/    C923 :                                             ;ASL                                    ;2
(1)  635/    C923 :                                             ;ROL emu_ptr+1,X                ;6
(1)  635/    C923 :                                             ;STA emu_ptr,X                  ;4                              
(1)  635/    C923 :                                             ;LDA emu_ptr+1,X                ;4
(1)  635/    C923 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  635/    C923 :                                             ;STA emu_ptr+1,X                ;4
(1)  635/    C923 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  635/    C923 :                                             
(1)  635/    C923 :                                             ;Method 3 - 30 cycles
(1)  635/    C923 :                                             ;TXA                                                    ;2
(1)  635/    C923 :                                             ;TAY                                                    ;2
(1)  635/    C923 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  635/    C923 :                                             ;ASL                                                    ;2
(1)  635/    C923 :                                             ;BCS upper                                              ;2
(1)  635/    C923 :                                             ;lower:
(1)  635/    C923 :                                             ;       ASL                                                     ;2
(1)  635/    C923 :                                             ;       TAX                                                     ;2
(1)  635/    C923 :                                             ;       BCS upper_lower                         ;2
(1)  635/    C923 :                                             ;       lower_lower:
(1)  635/    C923 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  635/    C923 :                                             ;       upper_lower:
(1)  635/    C923 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  635/    C923 :                                             ;upper:
(1)  635/    C923 :                                             ;       ASL
(1)  635/    C923 :                                             ;       TAX
(1)  635/    C923 :                                             ;       BCS upper_upper
(1)  635/    C923 :                                             ;       lower_upper:
(1)  635/    C923 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  635/    C923 :                                             ;       upper_upper:
(1)  635/    C923 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  635/    C923 :                                             ;After jump:
(1)  635/    C923 :                                             ;TYA                                                    ;2
(1)  635/    C923 :                                             ;TAX                                                    ;2
(1)  635/    C923 :                                             
(1)  635/    C923 :                                             ;Method 4 - 28 cycles
(1)  635/    C923 :                                             ;LDA (emu_PC,X)                 ;6
(1)  635/    C923 :                                             ;TAY                                    ;2
(1)  635/    C923 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  635/    C923 :                                             ;PHA                                    ;3
(1)  635/    C923 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  635/    C923 :                                             ;PHA                                    ;3
(1)  635/    C923 :                                             ;RTS                                    ;6
(1)  635/    C923 :                                             
(1)  635/    C923 :                                             ;Method 5 - 30 cycles
(1)  635/    C923 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  635/    C925 : A8                                          TAY                                             ;2
(1)  635/    C926 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  635/    C929 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  635/    C92B : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  635/    C92E : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  635/    C930 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 191 - 1/5/2022 11:50:53


(1)  635/    C933 :                                                                     
(1)  636/    C933 :                     
(1)  637/    C933 :                     	;0x7F - NOP
(1)  638/    C933 :                     	NOP_0x7F:
(1)  639/    C933 : (MACRO)             		OP_MACRO 127, "NOP", "IMP", "NOP_0x7F"
(1)  639/    C933 :                                             ;TODO
(1)  640/    C933 : (MACRO)             		NEXT_MACRO
(1)  640/    C933 :                                             
(1)  640/    C933 :  (MACRO-2)                                  halt
(1)  640/    C933 : 00                                  BRK
(1)  640/    C934 : 00                                  BRK
(1)  640/    C935 :                                             
(1)  640/    C935 :                                             ;Method 1 - 60 cycles
(1)  640/    C935 :                                             ;Jump table must be page aligned!!!
(1)  640/    C935 :                                             ;LDA (emu_PC,X)                 ;6
(1)  640/    C935 :                                             ;ASL                                    ;2
(1)  640/    C935 :                                             ;STA emu_ptr,X                  ;4
(1)  640/    C935 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  640/    C935 :                                             ;ADC #0                                 ;2
(1)  640/    C935 :                                             ;STA emu_ptr+1,X                ;4
(1)  640/    C935 :                                             ;LDA (emu_ptr,X)                ;6
(1)  640/    C935 :                                             ;STA emu_ptr2,X                 ;4
(1)  640/    C935 :                                             ;INC emu_ptr,X                  ;6
(1)  640/    C935 :                                             ;BCC .skip                              ;2
(1)  640/    C935 :                                             ;       INC emu_ptr+1,X         ;6
(1)  640/    C935 :                                             ;.skip:
(1)  640/    C935 :                                             ;LDA (emu_ptr,X)                ;6
(1)  640/    C935 :                                             ;STA emu_ptr2+1,X               ;4
(1)  640/    C935 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  640/    C935 :                                             
(1)  640/    C935 :                                             ;Method 2 - 46 cycles
(1)  640/    C935 :                                             ;Jump table must be page aligned!!!
(1)  640/    C935 :                                             ;LDA (emu_PC,X)                 ;6
(1)  640/    C935 :                                             ;STZ emu_ptr+1,X                ;4
(1)  640/    C935 :                                             ;ASL                                    ;2
(1)  640/    C935 :                                             ;ROL emu_ptr+1,X                ;6
(1)  640/    C935 :                                             ;ASL                                    ;2
(1)  640/    C935 :                                             ;ROL emu_ptr+1,X                ;6
(1)  640/    C935 :                                             ;STA emu_ptr,X                  ;4                              
(1)  640/    C935 :                                             ;LDA emu_ptr+1,X                ;4
(1)  640/    C935 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  640/    C935 :                                             ;STA emu_ptr+1,X                ;4
(1)  640/    C935 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  640/    C935 :                                             
(1)  640/    C935 :                                             ;Method 3 - 30 cycles
(1)  640/    C935 :                                             ;TXA                                                    ;2
(1)  640/    C935 :                                             ;TAY                                                    ;2
(1)  640/    C935 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  640/    C935 :                                             ;ASL                                                    ;2
(1)  640/    C935 :                                             ;BCS upper                                              ;2
(1)  640/    C935 :                                             ;lower:
(1)  640/    C935 :                                             ;       ASL                                                     ;2
(1)  640/    C935 :                                             ;       TAX                                                     ;2
(1)  640/    C935 :                                             ;       BCS upper_lower                         ;2
(1)  640/    C935 :                                             ;       lower_lower:
(1)  640/    C935 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  640/    C935 :                                             ;       upper_lower:
(1)  640/    C935 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  640/    C935 :                                             ;upper:
(1)  640/    C935 :                                             ;       ASL
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 192 - 1/5/2022 11:50:53


(1)  640/    C935 :                                             ;       TAX
(1)  640/    C935 :                                             ;       BCS upper_upper
(1)  640/    C935 :                                             ;       lower_upper:
(1)  640/    C935 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  640/    C935 :                                             ;       upper_upper:
(1)  640/    C935 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  640/    C935 :                                             ;After jump:
(1)  640/    C935 :                                             ;TYA                                                    ;2
(1)  640/    C935 :                                             ;TAX                                                    ;2
(1)  640/    C935 :                                             
(1)  640/    C935 :                                             ;Method 4 - 28 cycles
(1)  640/    C935 :                                             ;LDA (emu_PC,X)                 ;6
(1)  640/    C935 :                                             ;TAY                                    ;2
(1)  640/    C935 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  640/    C935 :                                             ;PHA                                    ;3
(1)  640/    C935 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  640/    C935 :                                             ;PHA                                    ;3
(1)  640/    C935 :                                             ;RTS                                    ;6
(1)  640/    C935 :                                             
(1)  640/    C935 :                                             ;Method 5 - 30 cycles
(1)  640/    C935 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  640/    C937 : A8                                          TAY                                             ;2
(1)  640/    C938 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  640/    C93B : 95 0A                                       STA emu_ptr,X                   ;4
(1)  640/    C93D : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  640/    C940 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  640/    C942 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  640/    C945 :                                                                     
(1)  641/    C945 :                     
(1)  642/    C945 :                     	;0x80 - NOP
(1)  643/    C945 :                     	NOP_0x80:
(1)  644/    C945 : (MACRO)             		OP_MACRO 128, "NOP", "IMP", "NOP_0x80"
(1)  644/    C945 :                                             ;TODO
(1)  645/    C945 : (MACRO)             		NEXT_MACRO
(1)  645/    C945 :                                             
(1)  645/    C945 :  (MACRO-2)                                  halt
(1)  645/    C945 : 00                                  BRK
(1)  645/    C946 : 00                                  BRK
(1)  645/    C947 :                                             
(1)  645/    C947 :                                             ;Method 1 - 60 cycles
(1)  645/    C947 :                                             ;Jump table must be page aligned!!!
(1)  645/    C947 :                                             ;LDA (emu_PC,X)                 ;6
(1)  645/    C947 :                                             ;ASL                                    ;2
(1)  645/    C947 :                                             ;STA emu_ptr,X                  ;4
(1)  645/    C947 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  645/    C947 :                                             ;ADC #0                                 ;2
(1)  645/    C947 :                                             ;STA emu_ptr+1,X                ;4
(1)  645/    C947 :                                             ;LDA (emu_ptr,X)                ;6
(1)  645/    C947 :                                             ;STA emu_ptr2,X                 ;4
(1)  645/    C947 :                                             ;INC emu_ptr,X                  ;6
(1)  645/    C947 :                                             ;BCC .skip                              ;2
(1)  645/    C947 :                                             ;       INC emu_ptr+1,X         ;6
(1)  645/    C947 :                                             ;.skip:
(1)  645/    C947 :                                             ;LDA (emu_ptr,X)                ;6
(1)  645/    C947 :                                             ;STA emu_ptr2+1,X               ;4
(1)  645/    C947 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  645/    C947 :                                             
(1)  645/    C947 :                                             ;Method 2 - 46 cycles
(1)  645/    C947 :                                             ;Jump table must be page aligned!!!
(1)  645/    C947 :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 193 - 1/5/2022 11:50:53


(1)  645/    C947 :                                             ;STZ emu_ptr+1,X                ;4
(1)  645/    C947 :                                             ;ASL                                    ;2
(1)  645/    C947 :                                             ;ROL emu_ptr+1,X                ;6
(1)  645/    C947 :                                             ;ASL                                    ;2
(1)  645/    C947 :                                             ;ROL emu_ptr+1,X                ;6
(1)  645/    C947 :                                             ;STA emu_ptr,X                  ;4                              
(1)  645/    C947 :                                             ;LDA emu_ptr+1,X                ;4
(1)  645/    C947 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  645/    C947 :                                             ;STA emu_ptr+1,X                ;4
(1)  645/    C947 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  645/    C947 :                                             
(1)  645/    C947 :                                             ;Method 3 - 30 cycles
(1)  645/    C947 :                                             ;TXA                                                    ;2
(1)  645/    C947 :                                             ;TAY                                                    ;2
(1)  645/    C947 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  645/    C947 :                                             ;ASL                                                    ;2
(1)  645/    C947 :                                             ;BCS upper                                              ;2
(1)  645/    C947 :                                             ;lower:
(1)  645/    C947 :                                             ;       ASL                                                     ;2
(1)  645/    C947 :                                             ;       TAX                                                     ;2
(1)  645/    C947 :                                             ;       BCS upper_lower                         ;2
(1)  645/    C947 :                                             ;       lower_lower:
(1)  645/    C947 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  645/    C947 :                                             ;       upper_lower:
(1)  645/    C947 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  645/    C947 :                                             ;upper:
(1)  645/    C947 :                                             ;       ASL
(1)  645/    C947 :                                             ;       TAX
(1)  645/    C947 :                                             ;       BCS upper_upper
(1)  645/    C947 :                                             ;       lower_upper:
(1)  645/    C947 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  645/    C947 :                                             ;       upper_upper:
(1)  645/    C947 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  645/    C947 :                                             ;After jump:
(1)  645/    C947 :                                             ;TYA                                                    ;2
(1)  645/    C947 :                                             ;TAX                                                    ;2
(1)  645/    C947 :                                             
(1)  645/    C947 :                                             ;Method 4 - 28 cycles
(1)  645/    C947 :                                             ;LDA (emu_PC,X)                 ;6
(1)  645/    C947 :                                             ;TAY                                    ;2
(1)  645/    C947 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  645/    C947 :                                             ;PHA                                    ;3
(1)  645/    C947 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  645/    C947 :                                             ;PHA                                    ;3
(1)  645/    C947 :                                             ;RTS                                    ;6
(1)  645/    C947 :                                             
(1)  645/    C947 :                                             ;Method 5 - 30 cycles
(1)  645/    C947 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  645/    C949 : A8                                          TAY                                             ;2
(1)  645/    C94A : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  645/    C94D : 95 0A                                       STA emu_ptr,X                   ;4
(1)  645/    C94F : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  645/    C952 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  645/    C954 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  645/    C957 :                                                                     
(1)  646/    C957 :                     
(1)  647/    C957 :                     	;0x81 - STA IX
(1)  648/    C957 :                     	STA_IX:
(1)  649/    C957 : (MACRO)             		OP_MACRO 129, "STA", "IX", "STA_IX"
(1)  649/    C957 :                                             ;TODO
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 194 - 1/5/2022 11:50:53


(1)  650/    C957 : (MACRO)             		NEXT_MACRO
(1)  650/    C957 :                                             
(1)  650/    C957 :  (MACRO-2)                                  halt
(1)  650/    C957 : 00                                  BRK
(1)  650/    C958 : 00                                  BRK
(1)  650/    C959 :                                             
(1)  650/    C959 :                                             ;Method 1 - 60 cycles
(1)  650/    C959 :                                             ;Jump table must be page aligned!!!
(1)  650/    C959 :                                             ;LDA (emu_PC,X)                 ;6
(1)  650/    C959 :                                             ;ASL                                    ;2
(1)  650/    C959 :                                             ;STA emu_ptr,X                  ;4
(1)  650/    C959 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  650/    C959 :                                             ;ADC #0                                 ;2
(1)  650/    C959 :                                             ;STA emu_ptr+1,X                ;4
(1)  650/    C959 :                                             ;LDA (emu_ptr,X)                ;6
(1)  650/    C959 :                                             ;STA emu_ptr2,X                 ;4
(1)  650/    C959 :                                             ;INC emu_ptr,X                  ;6
(1)  650/    C959 :                                             ;BCC .skip                              ;2
(1)  650/    C959 :                                             ;       INC emu_ptr+1,X         ;6
(1)  650/    C959 :                                             ;.skip:
(1)  650/    C959 :                                             ;LDA (emu_ptr,X)                ;6
(1)  650/    C959 :                                             ;STA emu_ptr2+1,X               ;4
(1)  650/    C959 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  650/    C959 :                                             
(1)  650/    C959 :                                             ;Method 2 - 46 cycles
(1)  650/    C959 :                                             ;Jump table must be page aligned!!!
(1)  650/    C959 :                                             ;LDA (emu_PC,X)                 ;6
(1)  650/    C959 :                                             ;STZ emu_ptr+1,X                ;4
(1)  650/    C959 :                                             ;ASL                                    ;2
(1)  650/    C959 :                                             ;ROL emu_ptr+1,X                ;6
(1)  650/    C959 :                                             ;ASL                                    ;2
(1)  650/    C959 :                                             ;ROL emu_ptr+1,X                ;6
(1)  650/    C959 :                                             ;STA emu_ptr,X                  ;4                              
(1)  650/    C959 :                                             ;LDA emu_ptr+1,X                ;4
(1)  650/    C959 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  650/    C959 :                                             ;STA emu_ptr+1,X                ;4
(1)  650/    C959 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  650/    C959 :                                             
(1)  650/    C959 :                                             ;Method 3 - 30 cycles
(1)  650/    C959 :                                             ;TXA                                                    ;2
(1)  650/    C959 :                                             ;TAY                                                    ;2
(1)  650/    C959 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  650/    C959 :                                             ;ASL                                                    ;2
(1)  650/    C959 :                                             ;BCS upper                                              ;2
(1)  650/    C959 :                                             ;lower:
(1)  650/    C959 :                                             ;       ASL                                                     ;2
(1)  650/    C959 :                                             ;       TAX                                                     ;2
(1)  650/    C959 :                                             ;       BCS upper_lower                         ;2
(1)  650/    C959 :                                             ;       lower_lower:
(1)  650/    C959 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  650/    C959 :                                             ;       upper_lower:
(1)  650/    C959 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  650/    C959 :                                             ;upper:
(1)  650/    C959 :                                             ;       ASL
(1)  650/    C959 :                                             ;       TAX
(1)  650/    C959 :                                             ;       BCS upper_upper
(1)  650/    C959 :                                             ;       lower_upper:
(1)  650/    C959 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  650/    C959 :                                             ;       upper_upper:
(1)  650/    C959 :                                             ;               JMP (JUMP_TABLE4,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 195 - 1/5/2022 11:50:53


(1)  650/    C959 :                                             ;After jump:
(1)  650/    C959 :                                             ;TYA                                                    ;2
(1)  650/    C959 :                                             ;TAX                                                    ;2
(1)  650/    C959 :                                             
(1)  650/    C959 :                                             ;Method 4 - 28 cycles
(1)  650/    C959 :                                             ;LDA (emu_PC,X)                 ;6
(1)  650/    C959 :                                             ;TAY                                    ;2
(1)  650/    C959 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  650/    C959 :                                             ;PHA                                    ;3
(1)  650/    C959 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  650/    C959 :                                             ;PHA                                    ;3
(1)  650/    C959 :                                             ;RTS                                    ;6
(1)  650/    C959 :                                             
(1)  650/    C959 :                                             ;Method 5 - 30 cycles
(1)  650/    C959 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  650/    C95B : A8                                          TAY                                             ;2
(1)  650/    C95C : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  650/    C95F : 95 0A                                       STA emu_ptr,X                   ;4
(1)  650/    C961 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  650/    C964 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  650/    C966 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  650/    C969 :                                                                     
(1)  651/    C969 :                     
(1)  652/    C969 :                     	;0x82 - NOP
(1)  653/    C969 :                     	NOP_0x82:
(1)  654/    C969 : (MACRO)             		OP_MACRO 130, "NOP", "IMP", "NOP_0x82"
(1)  654/    C969 :                                             ;TODO
(1)  655/    C969 : (MACRO)             		NEXT_MACRO
(1)  655/    C969 :                                             
(1)  655/    C969 :  (MACRO-2)                                  halt
(1)  655/    C969 : 00                                  BRK
(1)  655/    C96A : 00                                  BRK
(1)  655/    C96B :                                             
(1)  655/    C96B :                                             ;Method 1 - 60 cycles
(1)  655/    C96B :                                             ;Jump table must be page aligned!!!
(1)  655/    C96B :                                             ;LDA (emu_PC,X)                 ;6
(1)  655/    C96B :                                             ;ASL                                    ;2
(1)  655/    C96B :                                             ;STA emu_ptr,X                  ;4
(1)  655/    C96B :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  655/    C96B :                                             ;ADC #0                                 ;2
(1)  655/    C96B :                                             ;STA emu_ptr+1,X                ;4
(1)  655/    C96B :                                             ;LDA (emu_ptr,X)                ;6
(1)  655/    C96B :                                             ;STA emu_ptr2,X                 ;4
(1)  655/    C96B :                                             ;INC emu_ptr,X                  ;6
(1)  655/    C96B :                                             ;BCC .skip                              ;2
(1)  655/    C96B :                                             ;       INC emu_ptr+1,X         ;6
(1)  655/    C96B :                                             ;.skip:
(1)  655/    C96B :                                             ;LDA (emu_ptr,X)                ;6
(1)  655/    C96B :                                             ;STA emu_ptr2+1,X               ;4
(1)  655/    C96B :                                             ;JMP (emu_ptr2,X)               ;6
(1)  655/    C96B :                                             
(1)  655/    C96B :                                             ;Method 2 - 46 cycles
(1)  655/    C96B :                                             ;Jump table must be page aligned!!!
(1)  655/    C96B :                                             ;LDA (emu_PC,X)                 ;6
(1)  655/    C96B :                                             ;STZ emu_ptr+1,X                ;4
(1)  655/    C96B :                                             ;ASL                                    ;2
(1)  655/    C96B :                                             ;ROL emu_ptr+1,X                ;6
(1)  655/    C96B :                                             ;ASL                                    ;2
(1)  655/    C96B :                                             ;ROL emu_ptr+1,X                ;6
(1)  655/    C96B :                                             ;STA emu_ptr,X                  ;4                              
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 196 - 1/5/2022 11:50:53


(1)  655/    C96B :                                             ;LDA emu_ptr+1,X                ;4
(1)  655/    C96B :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  655/    C96B :                                             ;STA emu_ptr+1,X                ;4
(1)  655/    C96B :                                             ;JMP (emu_ptr2,X)               ;6
(1)  655/    C96B :                                             
(1)  655/    C96B :                                             ;Method 3 - 30 cycles
(1)  655/    C96B :                                             ;TXA                                                    ;2
(1)  655/    C96B :                                             ;TAY                                                    ;2
(1)  655/    C96B :                                             ;LDA (emu_PC,X)                                 ;6
(1)  655/    C96B :                                             ;ASL                                                    ;2
(1)  655/    C96B :                                             ;BCS upper                                              ;2
(1)  655/    C96B :                                             ;lower:
(1)  655/    C96B :                                             ;       ASL                                                     ;2
(1)  655/    C96B :                                             ;       TAX                                                     ;2
(1)  655/    C96B :                                             ;       BCS upper_lower                         ;2
(1)  655/    C96B :                                             ;       lower_lower:
(1)  655/    C96B :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  655/    C96B :                                             ;       upper_lower:
(1)  655/    C96B :                                             ;               JMP (JUMP_TABLE2,X)
(1)  655/    C96B :                                             ;upper:
(1)  655/    C96B :                                             ;       ASL
(1)  655/    C96B :                                             ;       TAX
(1)  655/    C96B :                                             ;       BCS upper_upper
(1)  655/    C96B :                                             ;       lower_upper:
(1)  655/    C96B :                                             ;               JMP (JUMP_TABLE3,X)
(1)  655/    C96B :                                             ;       upper_upper:
(1)  655/    C96B :                                             ;               JMP (JUMP_TABLE4,X)
(1)  655/    C96B :                                             ;After jump:
(1)  655/    C96B :                                             ;TYA                                                    ;2
(1)  655/    C96B :                                             ;TAX                                                    ;2
(1)  655/    C96B :                                             
(1)  655/    C96B :                                             ;Method 4 - 28 cycles
(1)  655/    C96B :                                             ;LDA (emu_PC,X)                 ;6
(1)  655/    C96B :                                             ;TAY                                    ;2
(1)  655/    C96B :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  655/    C96B :                                             ;PHA                                    ;3
(1)  655/    C96B :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  655/    C96B :                                             ;PHA                                    ;3
(1)  655/    C96B :                                             ;RTS                                    ;6
(1)  655/    C96B :                                             
(1)  655/    C96B :                                             ;Method 5 - 30 cycles
(1)  655/    C96B : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  655/    C96D : A8                                          TAY                                             ;2
(1)  655/    C96E : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  655/    C971 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  655/    C973 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  655/    C976 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  655/    C978 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  655/    C97B :                                                                     
(1)  656/    C97B :                     
(1)  657/    C97B :                     	;0x83 - NOP
(1)  658/    C97B :                     	NOP_0x83:
(1)  659/    C97B : (MACRO)             		OP_MACRO 131, "NOP", "IMP", "NOP_0x83"
(1)  659/    C97B :                                             ;TODO
(1)  660/    C97B : (MACRO)             		NEXT_MACRO
(1)  660/    C97B :                                             
(1)  660/    C97B :  (MACRO-2)                                  halt
(1)  660/    C97B : 00                                  BRK
(1)  660/    C97C : 00                                  BRK
(1)  660/    C97D :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 197 - 1/5/2022 11:50:53


(1)  660/    C97D :                                             ;Method 1 - 60 cycles
(1)  660/    C97D :                                             ;Jump table must be page aligned!!!
(1)  660/    C97D :                                             ;LDA (emu_PC,X)                 ;6
(1)  660/    C97D :                                             ;ASL                                    ;2
(1)  660/    C97D :                                             ;STA emu_ptr,X                  ;4
(1)  660/    C97D :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  660/    C97D :                                             ;ADC #0                                 ;2
(1)  660/    C97D :                                             ;STA emu_ptr+1,X                ;4
(1)  660/    C97D :                                             ;LDA (emu_ptr,X)                ;6
(1)  660/    C97D :                                             ;STA emu_ptr2,X                 ;4
(1)  660/    C97D :                                             ;INC emu_ptr,X                  ;6
(1)  660/    C97D :                                             ;BCC .skip                              ;2
(1)  660/    C97D :                                             ;       INC emu_ptr+1,X         ;6
(1)  660/    C97D :                                             ;.skip:
(1)  660/    C97D :                                             ;LDA (emu_ptr,X)                ;6
(1)  660/    C97D :                                             ;STA emu_ptr2+1,X               ;4
(1)  660/    C97D :                                             ;JMP (emu_ptr2,X)               ;6
(1)  660/    C97D :                                             
(1)  660/    C97D :                                             ;Method 2 - 46 cycles
(1)  660/    C97D :                                             ;Jump table must be page aligned!!!
(1)  660/    C97D :                                             ;LDA (emu_PC,X)                 ;6
(1)  660/    C97D :                                             ;STZ emu_ptr+1,X                ;4
(1)  660/    C97D :                                             ;ASL                                    ;2
(1)  660/    C97D :                                             ;ROL emu_ptr+1,X                ;6
(1)  660/    C97D :                                             ;ASL                                    ;2
(1)  660/    C97D :                                             ;ROL emu_ptr+1,X                ;6
(1)  660/    C97D :                                             ;STA emu_ptr,X                  ;4                              
(1)  660/    C97D :                                             ;LDA emu_ptr+1,X                ;4
(1)  660/    C97D :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  660/    C97D :                                             ;STA emu_ptr+1,X                ;4
(1)  660/    C97D :                                             ;JMP (emu_ptr2,X)               ;6
(1)  660/    C97D :                                             
(1)  660/    C97D :                                             ;Method 3 - 30 cycles
(1)  660/    C97D :                                             ;TXA                                                    ;2
(1)  660/    C97D :                                             ;TAY                                                    ;2
(1)  660/    C97D :                                             ;LDA (emu_PC,X)                                 ;6
(1)  660/    C97D :                                             ;ASL                                                    ;2
(1)  660/    C97D :                                             ;BCS upper                                              ;2
(1)  660/    C97D :                                             ;lower:
(1)  660/    C97D :                                             ;       ASL                                                     ;2
(1)  660/    C97D :                                             ;       TAX                                                     ;2
(1)  660/    C97D :                                             ;       BCS upper_lower                         ;2
(1)  660/    C97D :                                             ;       lower_lower:
(1)  660/    C97D :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  660/    C97D :                                             ;       upper_lower:
(1)  660/    C97D :                                             ;               JMP (JUMP_TABLE2,X)
(1)  660/    C97D :                                             ;upper:
(1)  660/    C97D :                                             ;       ASL
(1)  660/    C97D :                                             ;       TAX
(1)  660/    C97D :                                             ;       BCS upper_upper
(1)  660/    C97D :                                             ;       lower_upper:
(1)  660/    C97D :                                             ;               JMP (JUMP_TABLE3,X)
(1)  660/    C97D :                                             ;       upper_upper:
(1)  660/    C97D :                                             ;               JMP (JUMP_TABLE4,X)
(1)  660/    C97D :                                             ;After jump:
(1)  660/    C97D :                                             ;TYA                                                    ;2
(1)  660/    C97D :                                             ;TAX                                                    ;2
(1)  660/    C97D :                                             
(1)  660/    C97D :                                             ;Method 4 - 28 cycles
(1)  660/    C97D :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 198 - 1/5/2022 11:50:53


(1)  660/    C97D :                                             ;TAY                                    ;2
(1)  660/    C97D :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  660/    C97D :                                             ;PHA                                    ;3
(1)  660/    C97D :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  660/    C97D :                                             ;PHA                                    ;3
(1)  660/    C97D :                                             ;RTS                                    ;6
(1)  660/    C97D :                                             
(1)  660/    C97D :                                             ;Method 5 - 30 cycles
(1)  660/    C97D : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  660/    C97F : A8                                          TAY                                             ;2
(1)  660/    C980 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  660/    C983 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  660/    C985 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  660/    C988 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  660/    C98A : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  660/    C98D :                                                                     
(1)  661/    C98D :                     
(1)  662/    C98D :                     	;0x84 - STY ZP
(1)  663/    C98D :                     	STY_ZP:
(1)  664/    C98D : (MACRO)             		OP_MACRO 132, "STY", "ZP", "STY_ZP"
(1)  664/    C98D :                                             ;TODO
(1)  665/    C98D : (MACRO)             		NEXT_MACRO
(1)  665/    C98D :                                             
(1)  665/    C98D :  (MACRO-2)                                  halt
(1)  665/    C98D : 00                                  BRK
(1)  665/    C98E : 00                                  BRK
(1)  665/    C98F :                                             
(1)  665/    C98F :                                             ;Method 1 - 60 cycles
(1)  665/    C98F :                                             ;Jump table must be page aligned!!!
(1)  665/    C98F :                                             ;LDA (emu_PC,X)                 ;6
(1)  665/    C98F :                                             ;ASL                                    ;2
(1)  665/    C98F :                                             ;STA emu_ptr,X                  ;4
(1)  665/    C98F :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  665/    C98F :                                             ;ADC #0                                 ;2
(1)  665/    C98F :                                             ;STA emu_ptr+1,X                ;4
(1)  665/    C98F :                                             ;LDA (emu_ptr,X)                ;6
(1)  665/    C98F :                                             ;STA emu_ptr2,X                 ;4
(1)  665/    C98F :                                             ;INC emu_ptr,X                  ;6
(1)  665/    C98F :                                             ;BCC .skip                              ;2
(1)  665/    C98F :                                             ;       INC emu_ptr+1,X         ;6
(1)  665/    C98F :                                             ;.skip:
(1)  665/    C98F :                                             ;LDA (emu_ptr,X)                ;6
(1)  665/    C98F :                                             ;STA emu_ptr2+1,X               ;4
(1)  665/    C98F :                                             ;JMP (emu_ptr2,X)               ;6
(1)  665/    C98F :                                             
(1)  665/    C98F :                                             ;Method 2 - 46 cycles
(1)  665/    C98F :                                             ;Jump table must be page aligned!!!
(1)  665/    C98F :                                             ;LDA (emu_PC,X)                 ;6
(1)  665/    C98F :                                             ;STZ emu_ptr+1,X                ;4
(1)  665/    C98F :                                             ;ASL                                    ;2
(1)  665/    C98F :                                             ;ROL emu_ptr+1,X                ;6
(1)  665/    C98F :                                             ;ASL                                    ;2
(1)  665/    C98F :                                             ;ROL emu_ptr+1,X                ;6
(1)  665/    C98F :                                             ;STA emu_ptr,X                  ;4                              
(1)  665/    C98F :                                             ;LDA emu_ptr+1,X                ;4
(1)  665/    C98F :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  665/    C98F :                                             ;STA emu_ptr+1,X                ;4
(1)  665/    C98F :                                             ;JMP (emu_ptr2,X)               ;6
(1)  665/    C98F :                                             
(1)  665/    C98F :                                             ;Method 3 - 30 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 199 - 1/5/2022 11:50:53


(1)  665/    C98F :                                             ;TXA                                                    ;2
(1)  665/    C98F :                                             ;TAY                                                    ;2
(1)  665/    C98F :                                             ;LDA (emu_PC,X)                                 ;6
(1)  665/    C98F :                                             ;ASL                                                    ;2
(1)  665/    C98F :                                             ;BCS upper                                              ;2
(1)  665/    C98F :                                             ;lower:
(1)  665/    C98F :                                             ;       ASL                                                     ;2
(1)  665/    C98F :                                             ;       TAX                                                     ;2
(1)  665/    C98F :                                             ;       BCS upper_lower                         ;2
(1)  665/    C98F :                                             ;       lower_lower:
(1)  665/    C98F :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  665/    C98F :                                             ;       upper_lower:
(1)  665/    C98F :                                             ;               JMP (JUMP_TABLE2,X)
(1)  665/    C98F :                                             ;upper:
(1)  665/    C98F :                                             ;       ASL
(1)  665/    C98F :                                             ;       TAX
(1)  665/    C98F :                                             ;       BCS upper_upper
(1)  665/    C98F :                                             ;       lower_upper:
(1)  665/    C98F :                                             ;               JMP (JUMP_TABLE3,X)
(1)  665/    C98F :                                             ;       upper_upper:
(1)  665/    C98F :                                             ;               JMP (JUMP_TABLE4,X)
(1)  665/    C98F :                                             ;After jump:
(1)  665/    C98F :                                             ;TYA                                                    ;2
(1)  665/    C98F :                                             ;TAX                                                    ;2
(1)  665/    C98F :                                             
(1)  665/    C98F :                                             ;Method 4 - 28 cycles
(1)  665/    C98F :                                             ;LDA (emu_PC,X)                 ;6
(1)  665/    C98F :                                             ;TAY                                    ;2
(1)  665/    C98F :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  665/    C98F :                                             ;PHA                                    ;3
(1)  665/    C98F :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  665/    C98F :                                             ;PHA                                    ;3
(1)  665/    C98F :                                             ;RTS                                    ;6
(1)  665/    C98F :                                             
(1)  665/    C98F :                                             ;Method 5 - 30 cycles
(1)  665/    C98F : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  665/    C991 : A8                                          TAY                                             ;2
(1)  665/    C992 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  665/    C995 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  665/    C997 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  665/    C99A : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  665/    C99C : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  665/    C99F :                                                                     
(1)  666/    C99F :                     
(1)  667/    C99F :                     	;0x85 - STA ZP
(1)  668/    C99F :                     	STA_ZP:
(1)  669/    C99F : (MACRO)             		OP_MACRO 133, "STA", "ZP", "STA_ZP"
(1)  669/    C99F :                                             ;TODO
(1)  670/    C99F : (MACRO)             		NEXT_MACRO
(1)  670/    C99F :                                             
(1)  670/    C99F :  (MACRO-2)                                  halt
(1)  670/    C99F : 00                                  BRK
(1)  670/    C9A0 : 00                                  BRK
(1)  670/    C9A1 :                                             
(1)  670/    C9A1 :                                             ;Method 1 - 60 cycles
(1)  670/    C9A1 :                                             ;Jump table must be page aligned!!!
(1)  670/    C9A1 :                                             ;LDA (emu_PC,X)                 ;6
(1)  670/    C9A1 :                                             ;ASL                                    ;2
(1)  670/    C9A1 :                                             ;STA emu_ptr,X                  ;4
(1)  670/    C9A1 :                                             ;LDA #hi(JUMP_TABLE)    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 200 - 1/5/2022 11:50:53


(1)  670/    C9A1 :                                             ;ADC #0                                 ;2
(1)  670/    C9A1 :                                             ;STA emu_ptr+1,X                ;4
(1)  670/    C9A1 :                                             ;LDA (emu_ptr,X)                ;6
(1)  670/    C9A1 :                                             ;STA emu_ptr2,X                 ;4
(1)  670/    C9A1 :                                             ;INC emu_ptr,X                  ;6
(1)  670/    C9A1 :                                             ;BCC .skip                              ;2
(1)  670/    C9A1 :                                             ;       INC emu_ptr+1,X         ;6
(1)  670/    C9A1 :                                             ;.skip:
(1)  670/    C9A1 :                                             ;LDA (emu_ptr,X)                ;6
(1)  670/    C9A1 :                                             ;STA emu_ptr2+1,X               ;4
(1)  670/    C9A1 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  670/    C9A1 :                                             
(1)  670/    C9A1 :                                             ;Method 2 - 46 cycles
(1)  670/    C9A1 :                                             ;Jump table must be page aligned!!!
(1)  670/    C9A1 :                                             ;LDA (emu_PC,X)                 ;6
(1)  670/    C9A1 :                                             ;STZ emu_ptr+1,X                ;4
(1)  670/    C9A1 :                                             ;ASL                                    ;2
(1)  670/    C9A1 :                                             ;ROL emu_ptr+1,X                ;6
(1)  670/    C9A1 :                                             ;ASL                                    ;2
(1)  670/    C9A1 :                                             ;ROL emu_ptr+1,X                ;6
(1)  670/    C9A1 :                                             ;STA emu_ptr,X                  ;4                              
(1)  670/    C9A1 :                                             ;LDA emu_ptr+1,X                ;4
(1)  670/    C9A1 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  670/    C9A1 :                                             ;STA emu_ptr+1,X                ;4
(1)  670/    C9A1 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  670/    C9A1 :                                             
(1)  670/    C9A1 :                                             ;Method 3 - 30 cycles
(1)  670/    C9A1 :                                             ;TXA                                                    ;2
(1)  670/    C9A1 :                                             ;TAY                                                    ;2
(1)  670/    C9A1 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  670/    C9A1 :                                             ;ASL                                                    ;2
(1)  670/    C9A1 :                                             ;BCS upper                                              ;2
(1)  670/    C9A1 :                                             ;lower:
(1)  670/    C9A1 :                                             ;       ASL                                                     ;2
(1)  670/    C9A1 :                                             ;       TAX                                                     ;2
(1)  670/    C9A1 :                                             ;       BCS upper_lower                         ;2
(1)  670/    C9A1 :                                             ;       lower_lower:
(1)  670/    C9A1 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  670/    C9A1 :                                             ;       upper_lower:
(1)  670/    C9A1 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  670/    C9A1 :                                             ;upper:
(1)  670/    C9A1 :                                             ;       ASL
(1)  670/    C9A1 :                                             ;       TAX
(1)  670/    C9A1 :                                             ;       BCS upper_upper
(1)  670/    C9A1 :                                             ;       lower_upper:
(1)  670/    C9A1 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  670/    C9A1 :                                             ;       upper_upper:
(1)  670/    C9A1 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  670/    C9A1 :                                             ;After jump:
(1)  670/    C9A1 :                                             ;TYA                                                    ;2
(1)  670/    C9A1 :                                             ;TAX                                                    ;2
(1)  670/    C9A1 :                                             
(1)  670/    C9A1 :                                             ;Method 4 - 28 cycles
(1)  670/    C9A1 :                                             ;LDA (emu_PC,X)                 ;6
(1)  670/    C9A1 :                                             ;TAY                                    ;2
(1)  670/    C9A1 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  670/    C9A1 :                                             ;PHA                                    ;3
(1)  670/    C9A1 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  670/    C9A1 :                                             ;PHA                                    ;3
(1)  670/    C9A1 :                                             ;RTS                                    ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 201 - 1/5/2022 11:50:53


(1)  670/    C9A1 :                                             
(1)  670/    C9A1 :                                             ;Method 5 - 30 cycles
(1)  670/    C9A1 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  670/    C9A3 : A8                                          TAY                                             ;2
(1)  670/    C9A4 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  670/    C9A7 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  670/    C9A9 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  670/    C9AC : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  670/    C9AE : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  670/    C9B1 :                                                                     
(1)  671/    C9B1 :                     
(1)  672/    C9B1 :                     	;0x86 - STX ZP
(1)  673/    C9B1 :                     	STX_ZP:
(1)  674/    C9B1 : (MACRO)             		OP_MACRO 134, "STX", "ZP", "STX_ZP"
(1)  674/    C9B1 :                                             ;TODO
(1)  675/    C9B1 : (MACRO)             		NEXT_MACRO
(1)  675/    C9B1 :                                             
(1)  675/    C9B1 :  (MACRO-2)                                  halt
(1)  675/    C9B1 : 00                                  BRK
(1)  675/    C9B2 : 00                                  BRK
(1)  675/    C9B3 :                                             
(1)  675/    C9B3 :                                             ;Method 1 - 60 cycles
(1)  675/    C9B3 :                                             ;Jump table must be page aligned!!!
(1)  675/    C9B3 :                                             ;LDA (emu_PC,X)                 ;6
(1)  675/    C9B3 :                                             ;ASL                                    ;2
(1)  675/    C9B3 :                                             ;STA emu_ptr,X                  ;4
(1)  675/    C9B3 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  675/    C9B3 :                                             ;ADC #0                                 ;2
(1)  675/    C9B3 :                                             ;STA emu_ptr+1,X                ;4
(1)  675/    C9B3 :                                             ;LDA (emu_ptr,X)                ;6
(1)  675/    C9B3 :                                             ;STA emu_ptr2,X                 ;4
(1)  675/    C9B3 :                                             ;INC emu_ptr,X                  ;6
(1)  675/    C9B3 :                                             ;BCC .skip                              ;2
(1)  675/    C9B3 :                                             ;       INC emu_ptr+1,X         ;6
(1)  675/    C9B3 :                                             ;.skip:
(1)  675/    C9B3 :                                             ;LDA (emu_ptr,X)                ;6
(1)  675/    C9B3 :                                             ;STA emu_ptr2+1,X               ;4
(1)  675/    C9B3 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  675/    C9B3 :                                             
(1)  675/    C9B3 :                                             ;Method 2 - 46 cycles
(1)  675/    C9B3 :                                             ;Jump table must be page aligned!!!
(1)  675/    C9B3 :                                             ;LDA (emu_PC,X)                 ;6
(1)  675/    C9B3 :                                             ;STZ emu_ptr+1,X                ;4
(1)  675/    C9B3 :                                             ;ASL                                    ;2
(1)  675/    C9B3 :                                             ;ROL emu_ptr+1,X                ;6
(1)  675/    C9B3 :                                             ;ASL                                    ;2
(1)  675/    C9B3 :                                             ;ROL emu_ptr+1,X                ;6
(1)  675/    C9B3 :                                             ;STA emu_ptr,X                  ;4                              
(1)  675/    C9B3 :                                             ;LDA emu_ptr+1,X                ;4
(1)  675/    C9B3 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  675/    C9B3 :                                             ;STA emu_ptr+1,X                ;4
(1)  675/    C9B3 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  675/    C9B3 :                                             
(1)  675/    C9B3 :                                             ;Method 3 - 30 cycles
(1)  675/    C9B3 :                                             ;TXA                                                    ;2
(1)  675/    C9B3 :                                             ;TAY                                                    ;2
(1)  675/    C9B3 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  675/    C9B3 :                                             ;ASL                                                    ;2
(1)  675/    C9B3 :                                             ;BCS upper                                              ;2
(1)  675/    C9B3 :                                             ;lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 202 - 1/5/2022 11:50:53


(1)  675/    C9B3 :                                             ;       ASL                                                     ;2
(1)  675/    C9B3 :                                             ;       TAX                                                     ;2
(1)  675/    C9B3 :                                             ;       BCS upper_lower                         ;2
(1)  675/    C9B3 :                                             ;       lower_lower:
(1)  675/    C9B3 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  675/    C9B3 :                                             ;       upper_lower:
(1)  675/    C9B3 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  675/    C9B3 :                                             ;upper:
(1)  675/    C9B3 :                                             ;       ASL
(1)  675/    C9B3 :                                             ;       TAX
(1)  675/    C9B3 :                                             ;       BCS upper_upper
(1)  675/    C9B3 :                                             ;       lower_upper:
(1)  675/    C9B3 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  675/    C9B3 :                                             ;       upper_upper:
(1)  675/    C9B3 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  675/    C9B3 :                                             ;After jump:
(1)  675/    C9B3 :                                             ;TYA                                                    ;2
(1)  675/    C9B3 :                                             ;TAX                                                    ;2
(1)  675/    C9B3 :                                             
(1)  675/    C9B3 :                                             ;Method 4 - 28 cycles
(1)  675/    C9B3 :                                             ;LDA (emu_PC,X)                 ;6
(1)  675/    C9B3 :                                             ;TAY                                    ;2
(1)  675/    C9B3 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  675/    C9B3 :                                             ;PHA                                    ;3
(1)  675/    C9B3 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  675/    C9B3 :                                             ;PHA                                    ;3
(1)  675/    C9B3 :                                             ;RTS                                    ;6
(1)  675/    C9B3 :                                             
(1)  675/    C9B3 :                                             ;Method 5 - 30 cycles
(1)  675/    C9B3 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  675/    C9B5 : A8                                          TAY                                             ;2
(1)  675/    C9B6 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  675/    C9B9 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  675/    C9BB : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  675/    C9BE : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  675/    C9C0 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  675/    C9C3 :                                                                     
(1)  676/    C9C3 :                     
(1)  677/    C9C3 :                     	;0x87 - NOP
(1)  678/    C9C3 :                     	NOP_0x87:
(1)  679/    C9C3 : (MACRO)             		OP_MACRO 135, "NOP", "IMP", "NOP_0x87"
(1)  679/    C9C3 :                                             ;TODO
(1)  680/    C9C3 : (MACRO)             		NEXT_MACRO
(1)  680/    C9C3 :                                             
(1)  680/    C9C3 :  (MACRO-2)                                  halt
(1)  680/    C9C3 : 00                                  BRK
(1)  680/    C9C4 : 00                                  BRK
(1)  680/    C9C5 :                                             
(1)  680/    C9C5 :                                             ;Method 1 - 60 cycles
(1)  680/    C9C5 :                                             ;Jump table must be page aligned!!!
(1)  680/    C9C5 :                                             ;LDA (emu_PC,X)                 ;6
(1)  680/    C9C5 :                                             ;ASL                                    ;2
(1)  680/    C9C5 :                                             ;STA emu_ptr,X                  ;4
(1)  680/    C9C5 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  680/    C9C5 :                                             ;ADC #0                                 ;2
(1)  680/    C9C5 :                                             ;STA emu_ptr+1,X                ;4
(1)  680/    C9C5 :                                             ;LDA (emu_ptr,X)                ;6
(1)  680/    C9C5 :                                             ;STA emu_ptr2,X                 ;4
(1)  680/    C9C5 :                                             ;INC emu_ptr,X                  ;6
(1)  680/    C9C5 :                                             ;BCC .skip                              ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 203 - 1/5/2022 11:50:53


(1)  680/    C9C5 :                                             ;       INC emu_ptr+1,X         ;6
(1)  680/    C9C5 :                                             ;.skip:
(1)  680/    C9C5 :                                             ;LDA (emu_ptr,X)                ;6
(1)  680/    C9C5 :                                             ;STA emu_ptr2+1,X               ;4
(1)  680/    C9C5 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  680/    C9C5 :                                             
(1)  680/    C9C5 :                                             ;Method 2 - 46 cycles
(1)  680/    C9C5 :                                             ;Jump table must be page aligned!!!
(1)  680/    C9C5 :                                             ;LDA (emu_PC,X)                 ;6
(1)  680/    C9C5 :                                             ;STZ emu_ptr+1,X                ;4
(1)  680/    C9C5 :                                             ;ASL                                    ;2
(1)  680/    C9C5 :                                             ;ROL emu_ptr+1,X                ;6
(1)  680/    C9C5 :                                             ;ASL                                    ;2
(1)  680/    C9C5 :                                             ;ROL emu_ptr+1,X                ;6
(1)  680/    C9C5 :                                             ;STA emu_ptr,X                  ;4                              
(1)  680/    C9C5 :                                             ;LDA emu_ptr+1,X                ;4
(1)  680/    C9C5 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  680/    C9C5 :                                             ;STA emu_ptr+1,X                ;4
(1)  680/    C9C5 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  680/    C9C5 :                                             
(1)  680/    C9C5 :                                             ;Method 3 - 30 cycles
(1)  680/    C9C5 :                                             ;TXA                                                    ;2
(1)  680/    C9C5 :                                             ;TAY                                                    ;2
(1)  680/    C9C5 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  680/    C9C5 :                                             ;ASL                                                    ;2
(1)  680/    C9C5 :                                             ;BCS upper                                              ;2
(1)  680/    C9C5 :                                             ;lower:
(1)  680/    C9C5 :                                             ;       ASL                                                     ;2
(1)  680/    C9C5 :                                             ;       TAX                                                     ;2
(1)  680/    C9C5 :                                             ;       BCS upper_lower                         ;2
(1)  680/    C9C5 :                                             ;       lower_lower:
(1)  680/    C9C5 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  680/    C9C5 :                                             ;       upper_lower:
(1)  680/    C9C5 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  680/    C9C5 :                                             ;upper:
(1)  680/    C9C5 :                                             ;       ASL
(1)  680/    C9C5 :                                             ;       TAX
(1)  680/    C9C5 :                                             ;       BCS upper_upper
(1)  680/    C9C5 :                                             ;       lower_upper:
(1)  680/    C9C5 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  680/    C9C5 :                                             ;       upper_upper:
(1)  680/    C9C5 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  680/    C9C5 :                                             ;After jump:
(1)  680/    C9C5 :                                             ;TYA                                                    ;2
(1)  680/    C9C5 :                                             ;TAX                                                    ;2
(1)  680/    C9C5 :                                             
(1)  680/    C9C5 :                                             ;Method 4 - 28 cycles
(1)  680/    C9C5 :                                             ;LDA (emu_PC,X)                 ;6
(1)  680/    C9C5 :                                             ;TAY                                    ;2
(1)  680/    C9C5 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  680/    C9C5 :                                             ;PHA                                    ;3
(1)  680/    C9C5 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  680/    C9C5 :                                             ;PHA                                    ;3
(1)  680/    C9C5 :                                             ;RTS                                    ;6
(1)  680/    C9C5 :                                             
(1)  680/    C9C5 :                                             ;Method 5 - 30 cycles
(1)  680/    C9C5 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  680/    C9C7 : A8                                          TAY                                             ;2
(1)  680/    C9C8 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  680/    C9CB : 95 0A                                       STA emu_ptr,X                   ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 204 - 1/5/2022 11:50:53


(1)  680/    C9CD : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  680/    C9D0 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  680/    C9D2 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  680/    C9D5 :                                                                     
(1)  681/    C9D5 :                     
(1)  682/    C9D5 :                     	;0x88 - DEY IMP
(1)  683/    C9D5 :                     	DEY_IMP:
(1)  684/    C9D5 : (MACRO)             		OP_MACRO 136, "DEY", "IMP", "DEY_IMP"
(1)  684/    C9D5 :                                             ;TODO
(1)  685/    C9D5 : (MACRO)             		NEXT_MACRO
(1)  685/    C9D5 :                                             
(1)  685/    C9D5 :  (MACRO-2)                                  halt
(1)  685/    C9D5 : 00                                  BRK
(1)  685/    C9D6 : 00                                  BRK
(1)  685/    C9D7 :                                             
(1)  685/    C9D7 :                                             ;Method 1 - 60 cycles
(1)  685/    C9D7 :                                             ;Jump table must be page aligned!!!
(1)  685/    C9D7 :                                             ;LDA (emu_PC,X)                 ;6
(1)  685/    C9D7 :                                             ;ASL                                    ;2
(1)  685/    C9D7 :                                             ;STA emu_ptr,X                  ;4
(1)  685/    C9D7 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  685/    C9D7 :                                             ;ADC #0                                 ;2
(1)  685/    C9D7 :                                             ;STA emu_ptr+1,X                ;4
(1)  685/    C9D7 :                                             ;LDA (emu_ptr,X)                ;6
(1)  685/    C9D7 :                                             ;STA emu_ptr2,X                 ;4
(1)  685/    C9D7 :                                             ;INC emu_ptr,X                  ;6
(1)  685/    C9D7 :                                             ;BCC .skip                              ;2
(1)  685/    C9D7 :                                             ;       INC emu_ptr+1,X         ;6
(1)  685/    C9D7 :                                             ;.skip:
(1)  685/    C9D7 :                                             ;LDA (emu_ptr,X)                ;6
(1)  685/    C9D7 :                                             ;STA emu_ptr2+1,X               ;4
(1)  685/    C9D7 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  685/    C9D7 :                                             
(1)  685/    C9D7 :                                             ;Method 2 - 46 cycles
(1)  685/    C9D7 :                                             ;Jump table must be page aligned!!!
(1)  685/    C9D7 :                                             ;LDA (emu_PC,X)                 ;6
(1)  685/    C9D7 :                                             ;STZ emu_ptr+1,X                ;4
(1)  685/    C9D7 :                                             ;ASL                                    ;2
(1)  685/    C9D7 :                                             ;ROL emu_ptr+1,X                ;6
(1)  685/    C9D7 :                                             ;ASL                                    ;2
(1)  685/    C9D7 :                                             ;ROL emu_ptr+1,X                ;6
(1)  685/    C9D7 :                                             ;STA emu_ptr,X                  ;4                              
(1)  685/    C9D7 :                                             ;LDA emu_ptr+1,X                ;4
(1)  685/    C9D7 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  685/    C9D7 :                                             ;STA emu_ptr+1,X                ;4
(1)  685/    C9D7 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  685/    C9D7 :                                             
(1)  685/    C9D7 :                                             ;Method 3 - 30 cycles
(1)  685/    C9D7 :                                             ;TXA                                                    ;2
(1)  685/    C9D7 :                                             ;TAY                                                    ;2
(1)  685/    C9D7 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  685/    C9D7 :                                             ;ASL                                                    ;2
(1)  685/    C9D7 :                                             ;BCS upper                                              ;2
(1)  685/    C9D7 :                                             ;lower:
(1)  685/    C9D7 :                                             ;       ASL                                                     ;2
(1)  685/    C9D7 :                                             ;       TAX                                                     ;2
(1)  685/    C9D7 :                                             ;       BCS upper_lower                         ;2
(1)  685/    C9D7 :                                             ;       lower_lower:
(1)  685/    C9D7 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  685/    C9D7 :                                             ;       upper_lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 205 - 1/5/2022 11:50:53


(1)  685/    C9D7 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  685/    C9D7 :                                             ;upper:
(1)  685/    C9D7 :                                             ;       ASL
(1)  685/    C9D7 :                                             ;       TAX
(1)  685/    C9D7 :                                             ;       BCS upper_upper
(1)  685/    C9D7 :                                             ;       lower_upper:
(1)  685/    C9D7 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  685/    C9D7 :                                             ;       upper_upper:
(1)  685/    C9D7 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  685/    C9D7 :                                             ;After jump:
(1)  685/    C9D7 :                                             ;TYA                                                    ;2
(1)  685/    C9D7 :                                             ;TAX                                                    ;2
(1)  685/    C9D7 :                                             
(1)  685/    C9D7 :                                             ;Method 4 - 28 cycles
(1)  685/    C9D7 :                                             ;LDA (emu_PC,X)                 ;6
(1)  685/    C9D7 :                                             ;TAY                                    ;2
(1)  685/    C9D7 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  685/    C9D7 :                                             ;PHA                                    ;3
(1)  685/    C9D7 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  685/    C9D7 :                                             ;PHA                                    ;3
(1)  685/    C9D7 :                                             ;RTS                                    ;6
(1)  685/    C9D7 :                                             
(1)  685/    C9D7 :                                             ;Method 5 - 30 cycles
(1)  685/    C9D7 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  685/    C9D9 : A8                                          TAY                                             ;2
(1)  685/    C9DA : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  685/    C9DD : 95 0A                                       STA emu_ptr,X                   ;4
(1)  685/    C9DF : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  685/    C9E2 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  685/    C9E4 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  685/    C9E7 :                                                                     
(1)  686/    C9E7 :                     
(1)  687/    C9E7 :                     	;0x89 - NOP
(1)  688/    C9E7 :                     	NOP_0x89:
(1)  689/    C9E7 : (MACRO)             		OP_MACRO 137, "NOP", "IMP", "NOP_0x89"
(1)  689/    C9E7 :                                             ;TODO
(1)  690/    C9E7 : (MACRO)             		NEXT_MACRO
(1)  690/    C9E7 :                                             
(1)  690/    C9E7 :  (MACRO-2)                                  halt
(1)  690/    C9E7 : 00                                  BRK
(1)  690/    C9E8 : 00                                  BRK
(1)  690/    C9E9 :                                             
(1)  690/    C9E9 :                                             ;Method 1 - 60 cycles
(1)  690/    C9E9 :                                             ;Jump table must be page aligned!!!
(1)  690/    C9E9 :                                             ;LDA (emu_PC,X)                 ;6
(1)  690/    C9E9 :                                             ;ASL                                    ;2
(1)  690/    C9E9 :                                             ;STA emu_ptr,X                  ;4
(1)  690/    C9E9 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  690/    C9E9 :                                             ;ADC #0                                 ;2
(1)  690/    C9E9 :                                             ;STA emu_ptr+1,X                ;4
(1)  690/    C9E9 :                                             ;LDA (emu_ptr,X)                ;6
(1)  690/    C9E9 :                                             ;STA emu_ptr2,X                 ;4
(1)  690/    C9E9 :                                             ;INC emu_ptr,X                  ;6
(1)  690/    C9E9 :                                             ;BCC .skip                              ;2
(1)  690/    C9E9 :                                             ;       INC emu_ptr+1,X         ;6
(1)  690/    C9E9 :                                             ;.skip:
(1)  690/    C9E9 :                                             ;LDA (emu_ptr,X)                ;6
(1)  690/    C9E9 :                                             ;STA emu_ptr2+1,X               ;4
(1)  690/    C9E9 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  690/    C9E9 :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 206 - 1/5/2022 11:50:53


(1)  690/    C9E9 :                                             ;Method 2 - 46 cycles
(1)  690/    C9E9 :                                             ;Jump table must be page aligned!!!
(1)  690/    C9E9 :                                             ;LDA (emu_PC,X)                 ;6
(1)  690/    C9E9 :                                             ;STZ emu_ptr+1,X                ;4
(1)  690/    C9E9 :                                             ;ASL                                    ;2
(1)  690/    C9E9 :                                             ;ROL emu_ptr+1,X                ;6
(1)  690/    C9E9 :                                             ;ASL                                    ;2
(1)  690/    C9E9 :                                             ;ROL emu_ptr+1,X                ;6
(1)  690/    C9E9 :                                             ;STA emu_ptr,X                  ;4                              
(1)  690/    C9E9 :                                             ;LDA emu_ptr+1,X                ;4
(1)  690/    C9E9 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  690/    C9E9 :                                             ;STA emu_ptr+1,X                ;4
(1)  690/    C9E9 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  690/    C9E9 :                                             
(1)  690/    C9E9 :                                             ;Method 3 - 30 cycles
(1)  690/    C9E9 :                                             ;TXA                                                    ;2
(1)  690/    C9E9 :                                             ;TAY                                                    ;2
(1)  690/    C9E9 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  690/    C9E9 :                                             ;ASL                                                    ;2
(1)  690/    C9E9 :                                             ;BCS upper                                              ;2
(1)  690/    C9E9 :                                             ;lower:
(1)  690/    C9E9 :                                             ;       ASL                                                     ;2
(1)  690/    C9E9 :                                             ;       TAX                                                     ;2
(1)  690/    C9E9 :                                             ;       BCS upper_lower                         ;2
(1)  690/    C9E9 :                                             ;       lower_lower:
(1)  690/    C9E9 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  690/    C9E9 :                                             ;       upper_lower:
(1)  690/    C9E9 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  690/    C9E9 :                                             ;upper:
(1)  690/    C9E9 :                                             ;       ASL
(1)  690/    C9E9 :                                             ;       TAX
(1)  690/    C9E9 :                                             ;       BCS upper_upper
(1)  690/    C9E9 :                                             ;       lower_upper:
(1)  690/    C9E9 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  690/    C9E9 :                                             ;       upper_upper:
(1)  690/    C9E9 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  690/    C9E9 :                                             ;After jump:
(1)  690/    C9E9 :                                             ;TYA                                                    ;2
(1)  690/    C9E9 :                                             ;TAX                                                    ;2
(1)  690/    C9E9 :                                             
(1)  690/    C9E9 :                                             ;Method 4 - 28 cycles
(1)  690/    C9E9 :                                             ;LDA (emu_PC,X)                 ;6
(1)  690/    C9E9 :                                             ;TAY                                    ;2
(1)  690/    C9E9 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  690/    C9E9 :                                             ;PHA                                    ;3
(1)  690/    C9E9 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  690/    C9E9 :                                             ;PHA                                    ;3
(1)  690/    C9E9 :                                             ;RTS                                    ;6
(1)  690/    C9E9 :                                             
(1)  690/    C9E9 :                                             ;Method 5 - 30 cycles
(1)  690/    C9E9 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  690/    C9EB : A8                                          TAY                                             ;2
(1)  690/    C9EC : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  690/    C9EF : 95 0A                                       STA emu_ptr,X                   ;4
(1)  690/    C9F1 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  690/    C9F4 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  690/    C9F6 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  690/    C9F9 :                                                                     
(1)  691/    C9F9 :                     
(1)  692/    C9F9 :                     	;0x8A - TXA IMP
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 207 - 1/5/2022 11:50:53


(1)  693/    C9F9 :                     	TXA_IMP:
(1)  694/    C9F9 : (MACRO)             		OP_MACRO 138, "TXA", "IMP", "TXA_IMP"
(1)  694/    C9F9 :                                             ;TODO
(1)  695/    C9F9 : (MACRO)             		NEXT_MACRO
(1)  695/    C9F9 :                                             
(1)  695/    C9F9 :  (MACRO-2)                                  halt
(1)  695/    C9F9 : 00                                  BRK
(1)  695/    C9FA : 00                                  BRK
(1)  695/    C9FB :                                             
(1)  695/    C9FB :                                             ;Method 1 - 60 cycles
(1)  695/    C9FB :                                             ;Jump table must be page aligned!!!
(1)  695/    C9FB :                                             ;LDA (emu_PC,X)                 ;6
(1)  695/    C9FB :                                             ;ASL                                    ;2
(1)  695/    C9FB :                                             ;STA emu_ptr,X                  ;4
(1)  695/    C9FB :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  695/    C9FB :                                             ;ADC #0                                 ;2
(1)  695/    C9FB :                                             ;STA emu_ptr+1,X                ;4
(1)  695/    C9FB :                                             ;LDA (emu_ptr,X)                ;6
(1)  695/    C9FB :                                             ;STA emu_ptr2,X                 ;4
(1)  695/    C9FB :                                             ;INC emu_ptr,X                  ;6
(1)  695/    C9FB :                                             ;BCC .skip                              ;2
(1)  695/    C9FB :                                             ;       INC emu_ptr+1,X         ;6
(1)  695/    C9FB :                                             ;.skip:
(1)  695/    C9FB :                                             ;LDA (emu_ptr,X)                ;6
(1)  695/    C9FB :                                             ;STA emu_ptr2+1,X               ;4
(1)  695/    C9FB :                                             ;JMP (emu_ptr2,X)               ;6
(1)  695/    C9FB :                                             
(1)  695/    C9FB :                                             ;Method 2 - 46 cycles
(1)  695/    C9FB :                                             ;Jump table must be page aligned!!!
(1)  695/    C9FB :                                             ;LDA (emu_PC,X)                 ;6
(1)  695/    C9FB :                                             ;STZ emu_ptr+1,X                ;4
(1)  695/    C9FB :                                             ;ASL                                    ;2
(1)  695/    C9FB :                                             ;ROL emu_ptr+1,X                ;6
(1)  695/    C9FB :                                             ;ASL                                    ;2
(1)  695/    C9FB :                                             ;ROL emu_ptr+1,X                ;6
(1)  695/    C9FB :                                             ;STA emu_ptr,X                  ;4                              
(1)  695/    C9FB :                                             ;LDA emu_ptr+1,X                ;4
(1)  695/    C9FB :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  695/    C9FB :                                             ;STA emu_ptr+1,X                ;4
(1)  695/    C9FB :                                             ;JMP (emu_ptr2,X)               ;6
(1)  695/    C9FB :                                             
(1)  695/    C9FB :                                             ;Method 3 - 30 cycles
(1)  695/    C9FB :                                             ;TXA                                                    ;2
(1)  695/    C9FB :                                             ;TAY                                                    ;2
(1)  695/    C9FB :                                             ;LDA (emu_PC,X)                                 ;6
(1)  695/    C9FB :                                             ;ASL                                                    ;2
(1)  695/    C9FB :                                             ;BCS upper                                              ;2
(1)  695/    C9FB :                                             ;lower:
(1)  695/    C9FB :                                             ;       ASL                                                     ;2
(1)  695/    C9FB :                                             ;       TAX                                                     ;2
(1)  695/    C9FB :                                             ;       BCS upper_lower                         ;2
(1)  695/    C9FB :                                             ;       lower_lower:
(1)  695/    C9FB :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  695/    C9FB :                                             ;       upper_lower:
(1)  695/    C9FB :                                             ;               JMP (JUMP_TABLE2,X)
(1)  695/    C9FB :                                             ;upper:
(1)  695/    C9FB :                                             ;       ASL
(1)  695/    C9FB :                                             ;       TAX
(1)  695/    C9FB :                                             ;       BCS upper_upper
(1)  695/    C9FB :                                             ;       lower_upper:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 208 - 1/5/2022 11:50:53


(1)  695/    C9FB :                                             ;               JMP (JUMP_TABLE3,X)
(1)  695/    C9FB :                                             ;       upper_upper:
(1)  695/    C9FB :                                             ;               JMP (JUMP_TABLE4,X)
(1)  695/    C9FB :                                             ;After jump:
(1)  695/    C9FB :                                             ;TYA                                                    ;2
(1)  695/    C9FB :                                             ;TAX                                                    ;2
(1)  695/    C9FB :                                             
(1)  695/    C9FB :                                             ;Method 4 - 28 cycles
(1)  695/    C9FB :                                             ;LDA (emu_PC,X)                 ;6
(1)  695/    C9FB :                                             ;TAY                                    ;2
(1)  695/    C9FB :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  695/    C9FB :                                             ;PHA                                    ;3
(1)  695/    C9FB :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  695/    C9FB :                                             ;PHA                                    ;3
(1)  695/    C9FB :                                             ;RTS                                    ;6
(1)  695/    C9FB :                                             
(1)  695/    C9FB :                                             ;Method 5 - 30 cycles
(1)  695/    C9FB : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  695/    C9FD : A8                                          TAY                                             ;2
(1)  695/    C9FE : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  695/    CA01 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  695/    CA03 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  695/    CA06 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  695/    CA08 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  695/    CA0B :                                                                     
(1)  696/    CA0B :                     
(1)  697/    CA0B :                     	;0x8B - NOP
(1)  698/    CA0B :                     	NOP_0x8B:
(1)  699/    CA0B : (MACRO)             		OP_MACRO 139, "NOP", "IMP", "NOP_0x8B"
(1)  699/    CA0B :                                             ;TODO
(1)  700/    CA0B : (MACRO)             		NEXT_MACRO
(1)  700/    CA0B :                                             
(1)  700/    CA0B :  (MACRO-2)                                  halt
(1)  700/    CA0B : 00                                  BRK
(1)  700/    CA0C : 00                                  BRK
(1)  700/    CA0D :                                             
(1)  700/    CA0D :                                             ;Method 1 - 60 cycles
(1)  700/    CA0D :                                             ;Jump table must be page aligned!!!
(1)  700/    CA0D :                                             ;LDA (emu_PC,X)                 ;6
(1)  700/    CA0D :                                             ;ASL                                    ;2
(1)  700/    CA0D :                                             ;STA emu_ptr,X                  ;4
(1)  700/    CA0D :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  700/    CA0D :                                             ;ADC #0                                 ;2
(1)  700/    CA0D :                                             ;STA emu_ptr+1,X                ;4
(1)  700/    CA0D :                                             ;LDA (emu_ptr,X)                ;6
(1)  700/    CA0D :                                             ;STA emu_ptr2,X                 ;4
(1)  700/    CA0D :                                             ;INC emu_ptr,X                  ;6
(1)  700/    CA0D :                                             ;BCC .skip                              ;2
(1)  700/    CA0D :                                             ;       INC emu_ptr+1,X         ;6
(1)  700/    CA0D :                                             ;.skip:
(1)  700/    CA0D :                                             ;LDA (emu_ptr,X)                ;6
(1)  700/    CA0D :                                             ;STA emu_ptr2+1,X               ;4
(1)  700/    CA0D :                                             ;JMP (emu_ptr2,X)               ;6
(1)  700/    CA0D :                                             
(1)  700/    CA0D :                                             ;Method 2 - 46 cycles
(1)  700/    CA0D :                                             ;Jump table must be page aligned!!!
(1)  700/    CA0D :                                             ;LDA (emu_PC,X)                 ;6
(1)  700/    CA0D :                                             ;STZ emu_ptr+1,X                ;4
(1)  700/    CA0D :                                             ;ASL                                    ;2
(1)  700/    CA0D :                                             ;ROL emu_ptr+1,X                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 209 - 1/5/2022 11:50:53


(1)  700/    CA0D :                                             ;ASL                                    ;2
(1)  700/    CA0D :                                             ;ROL emu_ptr+1,X                ;6
(1)  700/    CA0D :                                             ;STA emu_ptr,X                  ;4                              
(1)  700/    CA0D :                                             ;LDA emu_ptr+1,X                ;4
(1)  700/    CA0D :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  700/    CA0D :                                             ;STA emu_ptr+1,X                ;4
(1)  700/    CA0D :                                             ;JMP (emu_ptr2,X)               ;6
(1)  700/    CA0D :                                             
(1)  700/    CA0D :                                             ;Method 3 - 30 cycles
(1)  700/    CA0D :                                             ;TXA                                                    ;2
(1)  700/    CA0D :                                             ;TAY                                                    ;2
(1)  700/    CA0D :                                             ;LDA (emu_PC,X)                                 ;6
(1)  700/    CA0D :                                             ;ASL                                                    ;2
(1)  700/    CA0D :                                             ;BCS upper                                              ;2
(1)  700/    CA0D :                                             ;lower:
(1)  700/    CA0D :                                             ;       ASL                                                     ;2
(1)  700/    CA0D :                                             ;       TAX                                                     ;2
(1)  700/    CA0D :                                             ;       BCS upper_lower                         ;2
(1)  700/    CA0D :                                             ;       lower_lower:
(1)  700/    CA0D :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  700/    CA0D :                                             ;       upper_lower:
(1)  700/    CA0D :                                             ;               JMP (JUMP_TABLE2,X)
(1)  700/    CA0D :                                             ;upper:
(1)  700/    CA0D :                                             ;       ASL
(1)  700/    CA0D :                                             ;       TAX
(1)  700/    CA0D :                                             ;       BCS upper_upper
(1)  700/    CA0D :                                             ;       lower_upper:
(1)  700/    CA0D :                                             ;               JMP (JUMP_TABLE3,X)
(1)  700/    CA0D :                                             ;       upper_upper:
(1)  700/    CA0D :                                             ;               JMP (JUMP_TABLE4,X)
(1)  700/    CA0D :                                             ;After jump:
(1)  700/    CA0D :                                             ;TYA                                                    ;2
(1)  700/    CA0D :                                             ;TAX                                                    ;2
(1)  700/    CA0D :                                             
(1)  700/    CA0D :                                             ;Method 4 - 28 cycles
(1)  700/    CA0D :                                             ;LDA (emu_PC,X)                 ;6
(1)  700/    CA0D :                                             ;TAY                                    ;2
(1)  700/    CA0D :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  700/    CA0D :                                             ;PHA                                    ;3
(1)  700/    CA0D :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  700/    CA0D :                                             ;PHA                                    ;3
(1)  700/    CA0D :                                             ;RTS                                    ;6
(1)  700/    CA0D :                                             
(1)  700/    CA0D :                                             ;Method 5 - 30 cycles
(1)  700/    CA0D : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  700/    CA0F : A8                                          TAY                                             ;2
(1)  700/    CA10 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  700/    CA13 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  700/    CA15 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  700/    CA18 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  700/    CA1A : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  700/    CA1D :                                                                     
(1)  701/    CA1D :                     
(1)  702/    CA1D :                     	;0x8C - STY ABS
(1)  703/    CA1D :                     	STY_ABS:
(1)  704/    CA1D : (MACRO)             		OP_MACRO 140, "STY", "ABS", "STY_ABS"
(1)  704/    CA1D :                                             ;TODO
(1)  705/    CA1D : (MACRO)             		NEXT_MACRO
(1)  705/    CA1D :                                             
(1)  705/    CA1D :  (MACRO-2)                                  halt
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 210 - 1/5/2022 11:50:53


(1)  705/    CA1D : 00                                  BRK
(1)  705/    CA1E : 00                                  BRK
(1)  705/    CA1F :                                             
(1)  705/    CA1F :                                             ;Method 1 - 60 cycles
(1)  705/    CA1F :                                             ;Jump table must be page aligned!!!
(1)  705/    CA1F :                                             ;LDA (emu_PC,X)                 ;6
(1)  705/    CA1F :                                             ;ASL                                    ;2
(1)  705/    CA1F :                                             ;STA emu_ptr,X                  ;4
(1)  705/    CA1F :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  705/    CA1F :                                             ;ADC #0                                 ;2
(1)  705/    CA1F :                                             ;STA emu_ptr+1,X                ;4
(1)  705/    CA1F :                                             ;LDA (emu_ptr,X)                ;6
(1)  705/    CA1F :                                             ;STA emu_ptr2,X                 ;4
(1)  705/    CA1F :                                             ;INC emu_ptr,X                  ;6
(1)  705/    CA1F :                                             ;BCC .skip                              ;2
(1)  705/    CA1F :                                             ;       INC emu_ptr+1,X         ;6
(1)  705/    CA1F :                                             ;.skip:
(1)  705/    CA1F :                                             ;LDA (emu_ptr,X)                ;6
(1)  705/    CA1F :                                             ;STA emu_ptr2+1,X               ;4
(1)  705/    CA1F :                                             ;JMP (emu_ptr2,X)               ;6
(1)  705/    CA1F :                                             
(1)  705/    CA1F :                                             ;Method 2 - 46 cycles
(1)  705/    CA1F :                                             ;Jump table must be page aligned!!!
(1)  705/    CA1F :                                             ;LDA (emu_PC,X)                 ;6
(1)  705/    CA1F :                                             ;STZ emu_ptr+1,X                ;4
(1)  705/    CA1F :                                             ;ASL                                    ;2
(1)  705/    CA1F :                                             ;ROL emu_ptr+1,X                ;6
(1)  705/    CA1F :                                             ;ASL                                    ;2
(1)  705/    CA1F :                                             ;ROL emu_ptr+1,X                ;6
(1)  705/    CA1F :                                             ;STA emu_ptr,X                  ;4                              
(1)  705/    CA1F :                                             ;LDA emu_ptr+1,X                ;4
(1)  705/    CA1F :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  705/    CA1F :                                             ;STA emu_ptr+1,X                ;4
(1)  705/    CA1F :                                             ;JMP (emu_ptr2,X)               ;6
(1)  705/    CA1F :                                             
(1)  705/    CA1F :                                             ;Method 3 - 30 cycles
(1)  705/    CA1F :                                             ;TXA                                                    ;2
(1)  705/    CA1F :                                             ;TAY                                                    ;2
(1)  705/    CA1F :                                             ;LDA (emu_PC,X)                                 ;6
(1)  705/    CA1F :                                             ;ASL                                                    ;2
(1)  705/    CA1F :                                             ;BCS upper                                              ;2
(1)  705/    CA1F :                                             ;lower:
(1)  705/    CA1F :                                             ;       ASL                                                     ;2
(1)  705/    CA1F :                                             ;       TAX                                                     ;2
(1)  705/    CA1F :                                             ;       BCS upper_lower                         ;2
(1)  705/    CA1F :                                             ;       lower_lower:
(1)  705/    CA1F :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  705/    CA1F :                                             ;       upper_lower:
(1)  705/    CA1F :                                             ;               JMP (JUMP_TABLE2,X)
(1)  705/    CA1F :                                             ;upper:
(1)  705/    CA1F :                                             ;       ASL
(1)  705/    CA1F :                                             ;       TAX
(1)  705/    CA1F :                                             ;       BCS upper_upper
(1)  705/    CA1F :                                             ;       lower_upper:
(1)  705/    CA1F :                                             ;               JMP (JUMP_TABLE3,X)
(1)  705/    CA1F :                                             ;       upper_upper:
(1)  705/    CA1F :                                             ;               JMP (JUMP_TABLE4,X)
(1)  705/    CA1F :                                             ;After jump:
(1)  705/    CA1F :                                             ;TYA                                                    ;2
(1)  705/    CA1F :                                             ;TAX                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 211 - 1/5/2022 11:50:53


(1)  705/    CA1F :                                             
(1)  705/    CA1F :                                             ;Method 4 - 28 cycles
(1)  705/    CA1F :                                             ;LDA (emu_PC,X)                 ;6
(1)  705/    CA1F :                                             ;TAY                                    ;2
(1)  705/    CA1F :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  705/    CA1F :                                             ;PHA                                    ;3
(1)  705/    CA1F :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  705/    CA1F :                                             ;PHA                                    ;3
(1)  705/    CA1F :                                             ;RTS                                    ;6
(1)  705/    CA1F :                                             
(1)  705/    CA1F :                                             ;Method 5 - 30 cycles
(1)  705/    CA1F : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  705/    CA21 : A8                                          TAY                                             ;2
(1)  705/    CA22 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  705/    CA25 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  705/    CA27 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  705/    CA2A : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  705/    CA2C : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  705/    CA2F :                                                                     
(1)  706/    CA2F :                     
(1)  707/    CA2F :                     	;0x8D - STA ABS
(1)  708/    CA2F :                     	STA_ABS:
(1)  709/    CA2F : (MACRO)             		OP_MACRO 141, "STA", "ABS", "STA_ABS"
(1)  709/    CA2F :                                             ;TODO
(1)  710/    CA2F : (MACRO)             		NEXT_MACRO
(1)  710/    CA2F :                                             
(1)  710/    CA2F :  (MACRO-2)                                  halt
(1)  710/    CA2F : 00                                  BRK
(1)  710/    CA30 : 00                                  BRK
(1)  710/    CA31 :                                             
(1)  710/    CA31 :                                             ;Method 1 - 60 cycles
(1)  710/    CA31 :                                             ;Jump table must be page aligned!!!
(1)  710/    CA31 :                                             ;LDA (emu_PC,X)                 ;6
(1)  710/    CA31 :                                             ;ASL                                    ;2
(1)  710/    CA31 :                                             ;STA emu_ptr,X                  ;4
(1)  710/    CA31 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  710/    CA31 :                                             ;ADC #0                                 ;2
(1)  710/    CA31 :                                             ;STA emu_ptr+1,X                ;4
(1)  710/    CA31 :                                             ;LDA (emu_ptr,X)                ;6
(1)  710/    CA31 :                                             ;STA emu_ptr2,X                 ;4
(1)  710/    CA31 :                                             ;INC emu_ptr,X                  ;6
(1)  710/    CA31 :                                             ;BCC .skip                              ;2
(1)  710/    CA31 :                                             ;       INC emu_ptr+1,X         ;6
(1)  710/    CA31 :                                             ;.skip:
(1)  710/    CA31 :                                             ;LDA (emu_ptr,X)                ;6
(1)  710/    CA31 :                                             ;STA emu_ptr2+1,X               ;4
(1)  710/    CA31 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  710/    CA31 :                                             
(1)  710/    CA31 :                                             ;Method 2 - 46 cycles
(1)  710/    CA31 :                                             ;Jump table must be page aligned!!!
(1)  710/    CA31 :                                             ;LDA (emu_PC,X)                 ;6
(1)  710/    CA31 :                                             ;STZ emu_ptr+1,X                ;4
(1)  710/    CA31 :                                             ;ASL                                    ;2
(1)  710/    CA31 :                                             ;ROL emu_ptr+1,X                ;6
(1)  710/    CA31 :                                             ;ASL                                    ;2
(1)  710/    CA31 :                                             ;ROL emu_ptr+1,X                ;6
(1)  710/    CA31 :                                             ;STA emu_ptr,X                  ;4                              
(1)  710/    CA31 :                                             ;LDA emu_ptr+1,X                ;4
(1)  710/    CA31 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  710/    CA31 :                                             ;STA emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 212 - 1/5/2022 11:50:53


(1)  710/    CA31 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  710/    CA31 :                                             
(1)  710/    CA31 :                                             ;Method 3 - 30 cycles
(1)  710/    CA31 :                                             ;TXA                                                    ;2
(1)  710/    CA31 :                                             ;TAY                                                    ;2
(1)  710/    CA31 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  710/    CA31 :                                             ;ASL                                                    ;2
(1)  710/    CA31 :                                             ;BCS upper                                              ;2
(1)  710/    CA31 :                                             ;lower:
(1)  710/    CA31 :                                             ;       ASL                                                     ;2
(1)  710/    CA31 :                                             ;       TAX                                                     ;2
(1)  710/    CA31 :                                             ;       BCS upper_lower                         ;2
(1)  710/    CA31 :                                             ;       lower_lower:
(1)  710/    CA31 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  710/    CA31 :                                             ;       upper_lower:
(1)  710/    CA31 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  710/    CA31 :                                             ;upper:
(1)  710/    CA31 :                                             ;       ASL
(1)  710/    CA31 :                                             ;       TAX
(1)  710/    CA31 :                                             ;       BCS upper_upper
(1)  710/    CA31 :                                             ;       lower_upper:
(1)  710/    CA31 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  710/    CA31 :                                             ;       upper_upper:
(1)  710/    CA31 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  710/    CA31 :                                             ;After jump:
(1)  710/    CA31 :                                             ;TYA                                                    ;2
(1)  710/    CA31 :                                             ;TAX                                                    ;2
(1)  710/    CA31 :                                             
(1)  710/    CA31 :                                             ;Method 4 - 28 cycles
(1)  710/    CA31 :                                             ;LDA (emu_PC,X)                 ;6
(1)  710/    CA31 :                                             ;TAY                                    ;2
(1)  710/    CA31 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  710/    CA31 :                                             ;PHA                                    ;3
(1)  710/    CA31 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  710/    CA31 :                                             ;PHA                                    ;3
(1)  710/    CA31 :                                             ;RTS                                    ;6
(1)  710/    CA31 :                                             
(1)  710/    CA31 :                                             ;Method 5 - 30 cycles
(1)  710/    CA31 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  710/    CA33 : A8                                          TAY                                             ;2
(1)  710/    CA34 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  710/    CA37 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  710/    CA39 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  710/    CA3C : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  710/    CA3E : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  710/    CA41 :                                                                     
(1)  711/    CA41 :                     
(1)  712/    CA41 :                     	;0x8E - STX ABS
(1)  713/    CA41 :                     	STX_ABS:
(1)  714/    CA41 : (MACRO)             		OP_MACRO 142, "STX", "ABS", "STX_ABS"
(1)  714/    CA41 :                                             ;TODO
(1)  715/    CA41 : (MACRO)             		NEXT_MACRO
(1)  715/    CA41 :                                             
(1)  715/    CA41 :  (MACRO-2)                                  halt
(1)  715/    CA41 : 00                                  BRK
(1)  715/    CA42 : 00                                  BRK
(1)  715/    CA43 :                                             
(1)  715/    CA43 :                                             ;Method 1 - 60 cycles
(1)  715/    CA43 :                                             ;Jump table must be page aligned!!!
(1)  715/    CA43 :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 213 - 1/5/2022 11:50:53


(1)  715/    CA43 :                                             ;ASL                                    ;2
(1)  715/    CA43 :                                             ;STA emu_ptr,X                  ;4
(1)  715/    CA43 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  715/    CA43 :                                             ;ADC #0                                 ;2
(1)  715/    CA43 :                                             ;STA emu_ptr+1,X                ;4
(1)  715/    CA43 :                                             ;LDA (emu_ptr,X)                ;6
(1)  715/    CA43 :                                             ;STA emu_ptr2,X                 ;4
(1)  715/    CA43 :                                             ;INC emu_ptr,X                  ;6
(1)  715/    CA43 :                                             ;BCC .skip                              ;2
(1)  715/    CA43 :                                             ;       INC emu_ptr+1,X         ;6
(1)  715/    CA43 :                                             ;.skip:
(1)  715/    CA43 :                                             ;LDA (emu_ptr,X)                ;6
(1)  715/    CA43 :                                             ;STA emu_ptr2+1,X               ;4
(1)  715/    CA43 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  715/    CA43 :                                             
(1)  715/    CA43 :                                             ;Method 2 - 46 cycles
(1)  715/    CA43 :                                             ;Jump table must be page aligned!!!
(1)  715/    CA43 :                                             ;LDA (emu_PC,X)                 ;6
(1)  715/    CA43 :                                             ;STZ emu_ptr+1,X                ;4
(1)  715/    CA43 :                                             ;ASL                                    ;2
(1)  715/    CA43 :                                             ;ROL emu_ptr+1,X                ;6
(1)  715/    CA43 :                                             ;ASL                                    ;2
(1)  715/    CA43 :                                             ;ROL emu_ptr+1,X                ;6
(1)  715/    CA43 :                                             ;STA emu_ptr,X                  ;4                              
(1)  715/    CA43 :                                             ;LDA emu_ptr+1,X                ;4
(1)  715/    CA43 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  715/    CA43 :                                             ;STA emu_ptr+1,X                ;4
(1)  715/    CA43 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  715/    CA43 :                                             
(1)  715/    CA43 :                                             ;Method 3 - 30 cycles
(1)  715/    CA43 :                                             ;TXA                                                    ;2
(1)  715/    CA43 :                                             ;TAY                                                    ;2
(1)  715/    CA43 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  715/    CA43 :                                             ;ASL                                                    ;2
(1)  715/    CA43 :                                             ;BCS upper                                              ;2
(1)  715/    CA43 :                                             ;lower:
(1)  715/    CA43 :                                             ;       ASL                                                     ;2
(1)  715/    CA43 :                                             ;       TAX                                                     ;2
(1)  715/    CA43 :                                             ;       BCS upper_lower                         ;2
(1)  715/    CA43 :                                             ;       lower_lower:
(1)  715/    CA43 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  715/    CA43 :                                             ;       upper_lower:
(1)  715/    CA43 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  715/    CA43 :                                             ;upper:
(1)  715/    CA43 :                                             ;       ASL
(1)  715/    CA43 :                                             ;       TAX
(1)  715/    CA43 :                                             ;       BCS upper_upper
(1)  715/    CA43 :                                             ;       lower_upper:
(1)  715/    CA43 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  715/    CA43 :                                             ;       upper_upper:
(1)  715/    CA43 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  715/    CA43 :                                             ;After jump:
(1)  715/    CA43 :                                             ;TYA                                                    ;2
(1)  715/    CA43 :                                             ;TAX                                                    ;2
(1)  715/    CA43 :                                             
(1)  715/    CA43 :                                             ;Method 4 - 28 cycles
(1)  715/    CA43 :                                             ;LDA (emu_PC,X)                 ;6
(1)  715/    CA43 :                                             ;TAY                                    ;2
(1)  715/    CA43 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  715/    CA43 :                                             ;PHA                                    ;3
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 214 - 1/5/2022 11:50:53


(1)  715/    CA43 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  715/    CA43 :                                             ;PHA                                    ;3
(1)  715/    CA43 :                                             ;RTS                                    ;6
(1)  715/    CA43 :                                             
(1)  715/    CA43 :                                             ;Method 5 - 30 cycles
(1)  715/    CA43 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  715/    CA45 : A8                                          TAY                                             ;2
(1)  715/    CA46 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  715/    CA49 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  715/    CA4B : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  715/    CA4E : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  715/    CA50 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  715/    CA53 :                                                                     
(1)  716/    CA53 :                     
(1)  717/    CA53 :                     	;0x8F - NOP
(1)  718/    CA53 :                     	NOP_0x8F:
(1)  719/    CA53 : (MACRO)             		OP_MACRO 143, "NOP", "IMP", "NOP_0x8F"
(1)  719/    CA53 :                                             ;TODO
(1)  720/    CA53 : (MACRO)             		NEXT_MACRO
(1)  720/    CA53 :                                             
(1)  720/    CA53 :  (MACRO-2)                                  halt
(1)  720/    CA53 : 00                                  BRK
(1)  720/    CA54 : 00                                  BRK
(1)  720/    CA55 :                                             
(1)  720/    CA55 :                                             ;Method 1 - 60 cycles
(1)  720/    CA55 :                                             ;Jump table must be page aligned!!!
(1)  720/    CA55 :                                             ;LDA (emu_PC,X)                 ;6
(1)  720/    CA55 :                                             ;ASL                                    ;2
(1)  720/    CA55 :                                             ;STA emu_ptr,X                  ;4
(1)  720/    CA55 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  720/    CA55 :                                             ;ADC #0                                 ;2
(1)  720/    CA55 :                                             ;STA emu_ptr+1,X                ;4
(1)  720/    CA55 :                                             ;LDA (emu_ptr,X)                ;6
(1)  720/    CA55 :                                             ;STA emu_ptr2,X                 ;4
(1)  720/    CA55 :                                             ;INC emu_ptr,X                  ;6
(1)  720/    CA55 :                                             ;BCC .skip                              ;2
(1)  720/    CA55 :                                             ;       INC emu_ptr+1,X         ;6
(1)  720/    CA55 :                                             ;.skip:
(1)  720/    CA55 :                                             ;LDA (emu_ptr,X)                ;6
(1)  720/    CA55 :                                             ;STA emu_ptr2+1,X               ;4
(1)  720/    CA55 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  720/    CA55 :                                             
(1)  720/    CA55 :                                             ;Method 2 - 46 cycles
(1)  720/    CA55 :                                             ;Jump table must be page aligned!!!
(1)  720/    CA55 :                                             ;LDA (emu_PC,X)                 ;6
(1)  720/    CA55 :                                             ;STZ emu_ptr+1,X                ;4
(1)  720/    CA55 :                                             ;ASL                                    ;2
(1)  720/    CA55 :                                             ;ROL emu_ptr+1,X                ;6
(1)  720/    CA55 :                                             ;ASL                                    ;2
(1)  720/    CA55 :                                             ;ROL emu_ptr+1,X                ;6
(1)  720/    CA55 :                                             ;STA emu_ptr,X                  ;4                              
(1)  720/    CA55 :                                             ;LDA emu_ptr+1,X                ;4
(1)  720/    CA55 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  720/    CA55 :                                             ;STA emu_ptr+1,X                ;4
(1)  720/    CA55 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  720/    CA55 :                                             
(1)  720/    CA55 :                                             ;Method 3 - 30 cycles
(1)  720/    CA55 :                                             ;TXA                                                    ;2
(1)  720/    CA55 :                                             ;TAY                                                    ;2
(1)  720/    CA55 :                                             ;LDA (emu_PC,X)                                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 215 - 1/5/2022 11:50:53


(1)  720/    CA55 :                                             ;ASL                                                    ;2
(1)  720/    CA55 :                                             ;BCS upper                                              ;2
(1)  720/    CA55 :                                             ;lower:
(1)  720/    CA55 :                                             ;       ASL                                                     ;2
(1)  720/    CA55 :                                             ;       TAX                                                     ;2
(1)  720/    CA55 :                                             ;       BCS upper_lower                         ;2
(1)  720/    CA55 :                                             ;       lower_lower:
(1)  720/    CA55 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  720/    CA55 :                                             ;       upper_lower:
(1)  720/    CA55 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  720/    CA55 :                                             ;upper:
(1)  720/    CA55 :                                             ;       ASL
(1)  720/    CA55 :                                             ;       TAX
(1)  720/    CA55 :                                             ;       BCS upper_upper
(1)  720/    CA55 :                                             ;       lower_upper:
(1)  720/    CA55 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  720/    CA55 :                                             ;       upper_upper:
(1)  720/    CA55 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  720/    CA55 :                                             ;After jump:
(1)  720/    CA55 :                                             ;TYA                                                    ;2
(1)  720/    CA55 :                                             ;TAX                                                    ;2
(1)  720/    CA55 :                                             
(1)  720/    CA55 :                                             ;Method 4 - 28 cycles
(1)  720/    CA55 :                                             ;LDA (emu_PC,X)                 ;6
(1)  720/    CA55 :                                             ;TAY                                    ;2
(1)  720/    CA55 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  720/    CA55 :                                             ;PHA                                    ;3
(1)  720/    CA55 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  720/    CA55 :                                             ;PHA                                    ;3
(1)  720/    CA55 :                                             ;RTS                                    ;6
(1)  720/    CA55 :                                             
(1)  720/    CA55 :                                             ;Method 5 - 30 cycles
(1)  720/    CA55 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  720/    CA57 : A8                                          TAY                                             ;2
(1)  720/    CA58 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  720/    CA5B : 95 0A                                       STA emu_ptr,X                   ;4
(1)  720/    CA5D : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  720/    CA60 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  720/    CA62 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  720/    CA65 :                                                                     
(1)  721/    CA65 :                     
(1)  722/    CA65 :                     	;0x90 - BCC REL
(1)  723/    CA65 :                     	BCC_REL:
(1)  724/    CA65 : (MACRO)             		OP_MACRO 144, "BCC", "REL", "BCC_REL"
(1)  724/    CA65 :                                             ;TODO
(1)  725/    CA65 : (MACRO)             		NEXT_MACRO
(1)  725/    CA65 :                                             
(1)  725/    CA65 :  (MACRO-2)                                  halt
(1)  725/    CA65 : 00                                  BRK
(1)  725/    CA66 : 00                                  BRK
(1)  725/    CA67 :                                             
(1)  725/    CA67 :                                             ;Method 1 - 60 cycles
(1)  725/    CA67 :                                             ;Jump table must be page aligned!!!
(1)  725/    CA67 :                                             ;LDA (emu_PC,X)                 ;6
(1)  725/    CA67 :                                             ;ASL                                    ;2
(1)  725/    CA67 :                                             ;STA emu_ptr,X                  ;4
(1)  725/    CA67 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  725/    CA67 :                                             ;ADC #0                                 ;2
(1)  725/    CA67 :                                             ;STA emu_ptr+1,X                ;4
(1)  725/    CA67 :                                             ;LDA (emu_ptr,X)                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 216 - 1/5/2022 11:50:53


(1)  725/    CA67 :                                             ;STA emu_ptr2,X                 ;4
(1)  725/    CA67 :                                             ;INC emu_ptr,X                  ;6
(1)  725/    CA67 :                                             ;BCC .skip                              ;2
(1)  725/    CA67 :                                             ;       INC emu_ptr+1,X         ;6
(1)  725/    CA67 :                                             ;.skip:
(1)  725/    CA67 :                                             ;LDA (emu_ptr,X)                ;6
(1)  725/    CA67 :                                             ;STA emu_ptr2+1,X               ;4
(1)  725/    CA67 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  725/    CA67 :                                             
(1)  725/    CA67 :                                             ;Method 2 - 46 cycles
(1)  725/    CA67 :                                             ;Jump table must be page aligned!!!
(1)  725/    CA67 :                                             ;LDA (emu_PC,X)                 ;6
(1)  725/    CA67 :                                             ;STZ emu_ptr+1,X                ;4
(1)  725/    CA67 :                                             ;ASL                                    ;2
(1)  725/    CA67 :                                             ;ROL emu_ptr+1,X                ;6
(1)  725/    CA67 :                                             ;ASL                                    ;2
(1)  725/    CA67 :                                             ;ROL emu_ptr+1,X                ;6
(1)  725/    CA67 :                                             ;STA emu_ptr,X                  ;4                              
(1)  725/    CA67 :                                             ;LDA emu_ptr+1,X                ;4
(1)  725/    CA67 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  725/    CA67 :                                             ;STA emu_ptr+1,X                ;4
(1)  725/    CA67 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  725/    CA67 :                                             
(1)  725/    CA67 :                                             ;Method 3 - 30 cycles
(1)  725/    CA67 :                                             ;TXA                                                    ;2
(1)  725/    CA67 :                                             ;TAY                                                    ;2
(1)  725/    CA67 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  725/    CA67 :                                             ;ASL                                                    ;2
(1)  725/    CA67 :                                             ;BCS upper                                              ;2
(1)  725/    CA67 :                                             ;lower:
(1)  725/    CA67 :                                             ;       ASL                                                     ;2
(1)  725/    CA67 :                                             ;       TAX                                                     ;2
(1)  725/    CA67 :                                             ;       BCS upper_lower                         ;2
(1)  725/    CA67 :                                             ;       lower_lower:
(1)  725/    CA67 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  725/    CA67 :                                             ;       upper_lower:
(1)  725/    CA67 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  725/    CA67 :                                             ;upper:
(1)  725/    CA67 :                                             ;       ASL
(1)  725/    CA67 :                                             ;       TAX
(1)  725/    CA67 :                                             ;       BCS upper_upper
(1)  725/    CA67 :                                             ;       lower_upper:
(1)  725/    CA67 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  725/    CA67 :                                             ;       upper_upper:
(1)  725/    CA67 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  725/    CA67 :                                             ;After jump:
(1)  725/    CA67 :                                             ;TYA                                                    ;2
(1)  725/    CA67 :                                             ;TAX                                                    ;2
(1)  725/    CA67 :                                             
(1)  725/    CA67 :                                             ;Method 4 - 28 cycles
(1)  725/    CA67 :                                             ;LDA (emu_PC,X)                 ;6
(1)  725/    CA67 :                                             ;TAY                                    ;2
(1)  725/    CA67 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  725/    CA67 :                                             ;PHA                                    ;3
(1)  725/    CA67 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  725/    CA67 :                                             ;PHA                                    ;3
(1)  725/    CA67 :                                             ;RTS                                    ;6
(1)  725/    CA67 :                                             
(1)  725/    CA67 :                                             ;Method 5 - 30 cycles
(1)  725/    CA67 : A1 02                                       LDA (emu_PC,X)                  ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 217 - 1/5/2022 11:50:53


(1)  725/    CA69 : A8                                          TAY                                             ;2
(1)  725/    CA6A : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  725/    CA6D : 95 0A                                       STA emu_ptr,X                   ;4
(1)  725/    CA6F : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  725/    CA72 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  725/    CA74 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  725/    CA77 :                                                                     
(1)  726/    CA77 :                     
(1)  727/    CA77 :                     	;0x91 - STA IY
(1)  728/    CA77 :                     	STA_IY:
(1)  729/    CA77 : (MACRO)             		OP_MACRO 145, "STA", "IY", "STA_IY"
(1)  729/    CA77 :                                             ;TODO
(1)  730/    CA77 : (MACRO)             		NEXT_MACRO
(1)  730/    CA77 :                                             
(1)  730/    CA77 :  (MACRO-2)                                  halt
(1)  730/    CA77 : 00                                  BRK
(1)  730/    CA78 : 00                                  BRK
(1)  730/    CA79 :                                             
(1)  730/    CA79 :                                             ;Method 1 - 60 cycles
(1)  730/    CA79 :                                             ;Jump table must be page aligned!!!
(1)  730/    CA79 :                                             ;LDA (emu_PC,X)                 ;6
(1)  730/    CA79 :                                             ;ASL                                    ;2
(1)  730/    CA79 :                                             ;STA emu_ptr,X                  ;4
(1)  730/    CA79 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  730/    CA79 :                                             ;ADC #0                                 ;2
(1)  730/    CA79 :                                             ;STA emu_ptr+1,X                ;4
(1)  730/    CA79 :                                             ;LDA (emu_ptr,X)                ;6
(1)  730/    CA79 :                                             ;STA emu_ptr2,X                 ;4
(1)  730/    CA79 :                                             ;INC emu_ptr,X                  ;6
(1)  730/    CA79 :                                             ;BCC .skip                              ;2
(1)  730/    CA79 :                                             ;       INC emu_ptr+1,X         ;6
(1)  730/    CA79 :                                             ;.skip:
(1)  730/    CA79 :                                             ;LDA (emu_ptr,X)                ;6
(1)  730/    CA79 :                                             ;STA emu_ptr2+1,X               ;4
(1)  730/    CA79 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  730/    CA79 :                                             
(1)  730/    CA79 :                                             ;Method 2 - 46 cycles
(1)  730/    CA79 :                                             ;Jump table must be page aligned!!!
(1)  730/    CA79 :                                             ;LDA (emu_PC,X)                 ;6
(1)  730/    CA79 :                                             ;STZ emu_ptr+1,X                ;4
(1)  730/    CA79 :                                             ;ASL                                    ;2
(1)  730/    CA79 :                                             ;ROL emu_ptr+1,X                ;6
(1)  730/    CA79 :                                             ;ASL                                    ;2
(1)  730/    CA79 :                                             ;ROL emu_ptr+1,X                ;6
(1)  730/    CA79 :                                             ;STA emu_ptr,X                  ;4                              
(1)  730/    CA79 :                                             ;LDA emu_ptr+1,X                ;4
(1)  730/    CA79 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  730/    CA79 :                                             ;STA emu_ptr+1,X                ;4
(1)  730/    CA79 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  730/    CA79 :                                             
(1)  730/    CA79 :                                             ;Method 3 - 30 cycles
(1)  730/    CA79 :                                             ;TXA                                                    ;2
(1)  730/    CA79 :                                             ;TAY                                                    ;2
(1)  730/    CA79 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  730/    CA79 :                                             ;ASL                                                    ;2
(1)  730/    CA79 :                                             ;BCS upper                                              ;2
(1)  730/    CA79 :                                             ;lower:
(1)  730/    CA79 :                                             ;       ASL                                                     ;2
(1)  730/    CA79 :                                             ;       TAX                                                     ;2
(1)  730/    CA79 :                                             ;       BCS upper_lower                         ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 218 - 1/5/2022 11:50:53


(1)  730/    CA79 :                                             ;       lower_lower:
(1)  730/    CA79 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  730/    CA79 :                                             ;       upper_lower:
(1)  730/    CA79 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  730/    CA79 :                                             ;upper:
(1)  730/    CA79 :                                             ;       ASL
(1)  730/    CA79 :                                             ;       TAX
(1)  730/    CA79 :                                             ;       BCS upper_upper
(1)  730/    CA79 :                                             ;       lower_upper:
(1)  730/    CA79 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  730/    CA79 :                                             ;       upper_upper:
(1)  730/    CA79 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  730/    CA79 :                                             ;After jump:
(1)  730/    CA79 :                                             ;TYA                                                    ;2
(1)  730/    CA79 :                                             ;TAX                                                    ;2
(1)  730/    CA79 :                                             
(1)  730/    CA79 :                                             ;Method 4 - 28 cycles
(1)  730/    CA79 :                                             ;LDA (emu_PC,X)                 ;6
(1)  730/    CA79 :                                             ;TAY                                    ;2
(1)  730/    CA79 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  730/    CA79 :                                             ;PHA                                    ;3
(1)  730/    CA79 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  730/    CA79 :                                             ;PHA                                    ;3
(1)  730/    CA79 :                                             ;RTS                                    ;6
(1)  730/    CA79 :                                             
(1)  730/    CA79 :                                             ;Method 5 - 30 cycles
(1)  730/    CA79 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  730/    CA7B : A8                                          TAY                                             ;2
(1)  730/    CA7C : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  730/    CA7F : 95 0A                                       STA emu_ptr,X                   ;4
(1)  730/    CA81 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  730/    CA84 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  730/    CA86 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  730/    CA89 :                                                                     
(1)  731/    CA89 :                     
(1)  732/    CA89 :                     	;0x92 - NOP
(1)  733/    CA89 :                     	NOP_0x92:
(1)  734/    CA89 : (MACRO)             		OP_MACRO 146, "NOP", "IMP", "NOP_0x92"
(1)  734/    CA89 :                                             ;TODO
(1)  735/    CA89 : (MACRO)             		NEXT_MACRO
(1)  735/    CA89 :                                             
(1)  735/    CA89 :  (MACRO-2)                                  halt
(1)  735/    CA89 : 00                                  BRK
(1)  735/    CA8A : 00                                  BRK
(1)  735/    CA8B :                                             
(1)  735/    CA8B :                                             ;Method 1 - 60 cycles
(1)  735/    CA8B :                                             ;Jump table must be page aligned!!!
(1)  735/    CA8B :                                             ;LDA (emu_PC,X)                 ;6
(1)  735/    CA8B :                                             ;ASL                                    ;2
(1)  735/    CA8B :                                             ;STA emu_ptr,X                  ;4
(1)  735/    CA8B :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  735/    CA8B :                                             ;ADC #0                                 ;2
(1)  735/    CA8B :                                             ;STA emu_ptr+1,X                ;4
(1)  735/    CA8B :                                             ;LDA (emu_ptr,X)                ;6
(1)  735/    CA8B :                                             ;STA emu_ptr2,X                 ;4
(1)  735/    CA8B :                                             ;INC emu_ptr,X                  ;6
(1)  735/    CA8B :                                             ;BCC .skip                              ;2
(1)  735/    CA8B :                                             ;       INC emu_ptr+1,X         ;6
(1)  735/    CA8B :                                             ;.skip:
(1)  735/    CA8B :                                             ;LDA (emu_ptr,X)                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 219 - 1/5/2022 11:50:53


(1)  735/    CA8B :                                             ;STA emu_ptr2+1,X               ;4
(1)  735/    CA8B :                                             ;JMP (emu_ptr2,X)               ;6
(1)  735/    CA8B :                                             
(1)  735/    CA8B :                                             ;Method 2 - 46 cycles
(1)  735/    CA8B :                                             ;Jump table must be page aligned!!!
(1)  735/    CA8B :                                             ;LDA (emu_PC,X)                 ;6
(1)  735/    CA8B :                                             ;STZ emu_ptr+1,X                ;4
(1)  735/    CA8B :                                             ;ASL                                    ;2
(1)  735/    CA8B :                                             ;ROL emu_ptr+1,X                ;6
(1)  735/    CA8B :                                             ;ASL                                    ;2
(1)  735/    CA8B :                                             ;ROL emu_ptr+1,X                ;6
(1)  735/    CA8B :                                             ;STA emu_ptr,X                  ;4                              
(1)  735/    CA8B :                                             ;LDA emu_ptr+1,X                ;4
(1)  735/    CA8B :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  735/    CA8B :                                             ;STA emu_ptr+1,X                ;4
(1)  735/    CA8B :                                             ;JMP (emu_ptr2,X)               ;6
(1)  735/    CA8B :                                             
(1)  735/    CA8B :                                             ;Method 3 - 30 cycles
(1)  735/    CA8B :                                             ;TXA                                                    ;2
(1)  735/    CA8B :                                             ;TAY                                                    ;2
(1)  735/    CA8B :                                             ;LDA (emu_PC,X)                                 ;6
(1)  735/    CA8B :                                             ;ASL                                                    ;2
(1)  735/    CA8B :                                             ;BCS upper                                              ;2
(1)  735/    CA8B :                                             ;lower:
(1)  735/    CA8B :                                             ;       ASL                                                     ;2
(1)  735/    CA8B :                                             ;       TAX                                                     ;2
(1)  735/    CA8B :                                             ;       BCS upper_lower                         ;2
(1)  735/    CA8B :                                             ;       lower_lower:
(1)  735/    CA8B :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  735/    CA8B :                                             ;       upper_lower:
(1)  735/    CA8B :                                             ;               JMP (JUMP_TABLE2,X)
(1)  735/    CA8B :                                             ;upper:
(1)  735/    CA8B :                                             ;       ASL
(1)  735/    CA8B :                                             ;       TAX
(1)  735/    CA8B :                                             ;       BCS upper_upper
(1)  735/    CA8B :                                             ;       lower_upper:
(1)  735/    CA8B :                                             ;               JMP (JUMP_TABLE3,X)
(1)  735/    CA8B :                                             ;       upper_upper:
(1)  735/    CA8B :                                             ;               JMP (JUMP_TABLE4,X)
(1)  735/    CA8B :                                             ;After jump:
(1)  735/    CA8B :                                             ;TYA                                                    ;2
(1)  735/    CA8B :                                             ;TAX                                                    ;2
(1)  735/    CA8B :                                             
(1)  735/    CA8B :                                             ;Method 4 - 28 cycles
(1)  735/    CA8B :                                             ;LDA (emu_PC,X)                 ;6
(1)  735/    CA8B :                                             ;TAY                                    ;2
(1)  735/    CA8B :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  735/    CA8B :                                             ;PHA                                    ;3
(1)  735/    CA8B :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  735/    CA8B :                                             ;PHA                                    ;3
(1)  735/    CA8B :                                             ;RTS                                    ;6
(1)  735/    CA8B :                                             
(1)  735/    CA8B :                                             ;Method 5 - 30 cycles
(1)  735/    CA8B : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  735/    CA8D : A8                                          TAY                                             ;2
(1)  735/    CA8E : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  735/    CA91 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  735/    CA93 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  735/    CA96 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  735/    CA98 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 220 - 1/5/2022 11:50:53


(1)  735/    CA9B :                                                                     
(1)  736/    CA9B :                     
(1)  737/    CA9B :                     	;0x93 - NOP
(1)  738/    CA9B :                     	NOP_0x93:
(1)  739/    CA9B : (MACRO)             		OP_MACRO 147, "NOP", "IMP", "NOP_0x93"
(1)  739/    CA9B :                                             ;TODO
(1)  740/    CA9B : (MACRO)             		NEXT_MACRO
(1)  740/    CA9B :                                             
(1)  740/    CA9B :  (MACRO-2)                                  halt
(1)  740/    CA9B : 00                                  BRK
(1)  740/    CA9C : 00                                  BRK
(1)  740/    CA9D :                                             
(1)  740/    CA9D :                                             ;Method 1 - 60 cycles
(1)  740/    CA9D :                                             ;Jump table must be page aligned!!!
(1)  740/    CA9D :                                             ;LDA (emu_PC,X)                 ;6
(1)  740/    CA9D :                                             ;ASL                                    ;2
(1)  740/    CA9D :                                             ;STA emu_ptr,X                  ;4
(1)  740/    CA9D :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  740/    CA9D :                                             ;ADC #0                                 ;2
(1)  740/    CA9D :                                             ;STA emu_ptr+1,X                ;4
(1)  740/    CA9D :                                             ;LDA (emu_ptr,X)                ;6
(1)  740/    CA9D :                                             ;STA emu_ptr2,X                 ;4
(1)  740/    CA9D :                                             ;INC emu_ptr,X                  ;6
(1)  740/    CA9D :                                             ;BCC .skip                              ;2
(1)  740/    CA9D :                                             ;       INC emu_ptr+1,X         ;6
(1)  740/    CA9D :                                             ;.skip:
(1)  740/    CA9D :                                             ;LDA (emu_ptr,X)                ;6
(1)  740/    CA9D :                                             ;STA emu_ptr2+1,X               ;4
(1)  740/    CA9D :                                             ;JMP (emu_ptr2,X)               ;6
(1)  740/    CA9D :                                             
(1)  740/    CA9D :                                             ;Method 2 - 46 cycles
(1)  740/    CA9D :                                             ;Jump table must be page aligned!!!
(1)  740/    CA9D :                                             ;LDA (emu_PC,X)                 ;6
(1)  740/    CA9D :                                             ;STZ emu_ptr+1,X                ;4
(1)  740/    CA9D :                                             ;ASL                                    ;2
(1)  740/    CA9D :                                             ;ROL emu_ptr+1,X                ;6
(1)  740/    CA9D :                                             ;ASL                                    ;2
(1)  740/    CA9D :                                             ;ROL emu_ptr+1,X                ;6
(1)  740/    CA9D :                                             ;STA emu_ptr,X                  ;4                              
(1)  740/    CA9D :                                             ;LDA emu_ptr+1,X                ;4
(1)  740/    CA9D :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  740/    CA9D :                                             ;STA emu_ptr+1,X                ;4
(1)  740/    CA9D :                                             ;JMP (emu_ptr2,X)               ;6
(1)  740/    CA9D :                                             
(1)  740/    CA9D :                                             ;Method 3 - 30 cycles
(1)  740/    CA9D :                                             ;TXA                                                    ;2
(1)  740/    CA9D :                                             ;TAY                                                    ;2
(1)  740/    CA9D :                                             ;LDA (emu_PC,X)                                 ;6
(1)  740/    CA9D :                                             ;ASL                                                    ;2
(1)  740/    CA9D :                                             ;BCS upper                                              ;2
(1)  740/    CA9D :                                             ;lower:
(1)  740/    CA9D :                                             ;       ASL                                                     ;2
(1)  740/    CA9D :                                             ;       TAX                                                     ;2
(1)  740/    CA9D :                                             ;       BCS upper_lower                         ;2
(1)  740/    CA9D :                                             ;       lower_lower:
(1)  740/    CA9D :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  740/    CA9D :                                             ;       upper_lower:
(1)  740/    CA9D :                                             ;               JMP (JUMP_TABLE2,X)
(1)  740/    CA9D :                                             ;upper:
(1)  740/    CA9D :                                             ;       ASL
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 221 - 1/5/2022 11:50:53


(1)  740/    CA9D :                                             ;       TAX
(1)  740/    CA9D :                                             ;       BCS upper_upper
(1)  740/    CA9D :                                             ;       lower_upper:
(1)  740/    CA9D :                                             ;               JMP (JUMP_TABLE3,X)
(1)  740/    CA9D :                                             ;       upper_upper:
(1)  740/    CA9D :                                             ;               JMP (JUMP_TABLE4,X)
(1)  740/    CA9D :                                             ;After jump:
(1)  740/    CA9D :                                             ;TYA                                                    ;2
(1)  740/    CA9D :                                             ;TAX                                                    ;2
(1)  740/    CA9D :                                             
(1)  740/    CA9D :                                             ;Method 4 - 28 cycles
(1)  740/    CA9D :                                             ;LDA (emu_PC,X)                 ;6
(1)  740/    CA9D :                                             ;TAY                                    ;2
(1)  740/    CA9D :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  740/    CA9D :                                             ;PHA                                    ;3
(1)  740/    CA9D :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  740/    CA9D :                                             ;PHA                                    ;3
(1)  740/    CA9D :                                             ;RTS                                    ;6
(1)  740/    CA9D :                                             
(1)  740/    CA9D :                                             ;Method 5 - 30 cycles
(1)  740/    CA9D : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  740/    CA9F : A8                                          TAY                                             ;2
(1)  740/    CAA0 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  740/    CAA3 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  740/    CAA5 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  740/    CAA8 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  740/    CAAA : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  740/    CAAD :                                                                     
(1)  741/    CAAD :                     
(1)  742/    CAAD :                     	;0x94 - STY ZPX
(1)  743/    CAAD :                     	STY_ZPX:
(1)  744/    CAAD : (MACRO)             		OP_MACRO 148, "STY", "ZPX", "STY_ZPX"
(1)  744/    CAAD :                                             ;TODO
(1)  745/    CAAD : (MACRO)             		NEXT_MACRO
(1)  745/    CAAD :                                             
(1)  745/    CAAD :  (MACRO-2)                                  halt
(1)  745/    CAAD : 00                                  BRK
(1)  745/    CAAE : 00                                  BRK
(1)  745/    CAAF :                                             
(1)  745/    CAAF :                                             ;Method 1 - 60 cycles
(1)  745/    CAAF :                                             ;Jump table must be page aligned!!!
(1)  745/    CAAF :                                             ;LDA (emu_PC,X)                 ;6
(1)  745/    CAAF :                                             ;ASL                                    ;2
(1)  745/    CAAF :                                             ;STA emu_ptr,X                  ;4
(1)  745/    CAAF :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  745/    CAAF :                                             ;ADC #0                                 ;2
(1)  745/    CAAF :                                             ;STA emu_ptr+1,X                ;4
(1)  745/    CAAF :                                             ;LDA (emu_ptr,X)                ;6
(1)  745/    CAAF :                                             ;STA emu_ptr2,X                 ;4
(1)  745/    CAAF :                                             ;INC emu_ptr,X                  ;6
(1)  745/    CAAF :                                             ;BCC .skip                              ;2
(1)  745/    CAAF :                                             ;       INC emu_ptr+1,X         ;6
(1)  745/    CAAF :                                             ;.skip:
(1)  745/    CAAF :                                             ;LDA (emu_ptr,X)                ;6
(1)  745/    CAAF :                                             ;STA emu_ptr2+1,X               ;4
(1)  745/    CAAF :                                             ;JMP (emu_ptr2,X)               ;6
(1)  745/    CAAF :                                             
(1)  745/    CAAF :                                             ;Method 2 - 46 cycles
(1)  745/    CAAF :                                             ;Jump table must be page aligned!!!
(1)  745/    CAAF :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 222 - 1/5/2022 11:50:53


(1)  745/    CAAF :                                             ;STZ emu_ptr+1,X                ;4
(1)  745/    CAAF :                                             ;ASL                                    ;2
(1)  745/    CAAF :                                             ;ROL emu_ptr+1,X                ;6
(1)  745/    CAAF :                                             ;ASL                                    ;2
(1)  745/    CAAF :                                             ;ROL emu_ptr+1,X                ;6
(1)  745/    CAAF :                                             ;STA emu_ptr,X                  ;4                              
(1)  745/    CAAF :                                             ;LDA emu_ptr+1,X                ;4
(1)  745/    CAAF :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  745/    CAAF :                                             ;STA emu_ptr+1,X                ;4
(1)  745/    CAAF :                                             ;JMP (emu_ptr2,X)               ;6
(1)  745/    CAAF :                                             
(1)  745/    CAAF :                                             ;Method 3 - 30 cycles
(1)  745/    CAAF :                                             ;TXA                                                    ;2
(1)  745/    CAAF :                                             ;TAY                                                    ;2
(1)  745/    CAAF :                                             ;LDA (emu_PC,X)                                 ;6
(1)  745/    CAAF :                                             ;ASL                                                    ;2
(1)  745/    CAAF :                                             ;BCS upper                                              ;2
(1)  745/    CAAF :                                             ;lower:
(1)  745/    CAAF :                                             ;       ASL                                                     ;2
(1)  745/    CAAF :                                             ;       TAX                                                     ;2
(1)  745/    CAAF :                                             ;       BCS upper_lower                         ;2
(1)  745/    CAAF :                                             ;       lower_lower:
(1)  745/    CAAF :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  745/    CAAF :                                             ;       upper_lower:
(1)  745/    CAAF :                                             ;               JMP (JUMP_TABLE2,X)
(1)  745/    CAAF :                                             ;upper:
(1)  745/    CAAF :                                             ;       ASL
(1)  745/    CAAF :                                             ;       TAX
(1)  745/    CAAF :                                             ;       BCS upper_upper
(1)  745/    CAAF :                                             ;       lower_upper:
(1)  745/    CAAF :                                             ;               JMP (JUMP_TABLE3,X)
(1)  745/    CAAF :                                             ;       upper_upper:
(1)  745/    CAAF :                                             ;               JMP (JUMP_TABLE4,X)
(1)  745/    CAAF :                                             ;After jump:
(1)  745/    CAAF :                                             ;TYA                                                    ;2
(1)  745/    CAAF :                                             ;TAX                                                    ;2
(1)  745/    CAAF :                                             
(1)  745/    CAAF :                                             ;Method 4 - 28 cycles
(1)  745/    CAAF :                                             ;LDA (emu_PC,X)                 ;6
(1)  745/    CAAF :                                             ;TAY                                    ;2
(1)  745/    CAAF :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  745/    CAAF :                                             ;PHA                                    ;3
(1)  745/    CAAF :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  745/    CAAF :                                             ;PHA                                    ;3
(1)  745/    CAAF :                                             ;RTS                                    ;6
(1)  745/    CAAF :                                             
(1)  745/    CAAF :                                             ;Method 5 - 30 cycles
(1)  745/    CAAF : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  745/    CAB1 : A8                                          TAY                                             ;2
(1)  745/    CAB2 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  745/    CAB5 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  745/    CAB7 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  745/    CABA : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  745/    CABC : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  745/    CABF :                                                                     
(1)  746/    CABF :                     
(1)  747/    CABF :                     	;0x95 - STA ZPX
(1)  748/    CABF :                     	STA_ZPX:
(1)  749/    CABF : (MACRO)             		OP_MACRO 149, "STA", "ZPX", "STA_ZPX"
(1)  749/    CABF :                                             ;TODO
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 223 - 1/5/2022 11:50:53


(1)  750/    CABF : (MACRO)             		NEXT_MACRO
(1)  750/    CABF :                                             
(1)  750/    CABF :  (MACRO-2)                                  halt
(1)  750/    CABF : 00                                  BRK
(1)  750/    CAC0 : 00                                  BRK
(1)  750/    CAC1 :                                             
(1)  750/    CAC1 :                                             ;Method 1 - 60 cycles
(1)  750/    CAC1 :                                             ;Jump table must be page aligned!!!
(1)  750/    CAC1 :                                             ;LDA (emu_PC,X)                 ;6
(1)  750/    CAC1 :                                             ;ASL                                    ;2
(1)  750/    CAC1 :                                             ;STA emu_ptr,X                  ;4
(1)  750/    CAC1 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  750/    CAC1 :                                             ;ADC #0                                 ;2
(1)  750/    CAC1 :                                             ;STA emu_ptr+1,X                ;4
(1)  750/    CAC1 :                                             ;LDA (emu_ptr,X)                ;6
(1)  750/    CAC1 :                                             ;STA emu_ptr2,X                 ;4
(1)  750/    CAC1 :                                             ;INC emu_ptr,X                  ;6
(1)  750/    CAC1 :                                             ;BCC .skip                              ;2
(1)  750/    CAC1 :                                             ;       INC emu_ptr+1,X         ;6
(1)  750/    CAC1 :                                             ;.skip:
(1)  750/    CAC1 :                                             ;LDA (emu_ptr,X)                ;6
(1)  750/    CAC1 :                                             ;STA emu_ptr2+1,X               ;4
(1)  750/    CAC1 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  750/    CAC1 :                                             
(1)  750/    CAC1 :                                             ;Method 2 - 46 cycles
(1)  750/    CAC1 :                                             ;Jump table must be page aligned!!!
(1)  750/    CAC1 :                                             ;LDA (emu_PC,X)                 ;6
(1)  750/    CAC1 :                                             ;STZ emu_ptr+1,X                ;4
(1)  750/    CAC1 :                                             ;ASL                                    ;2
(1)  750/    CAC1 :                                             ;ROL emu_ptr+1,X                ;6
(1)  750/    CAC1 :                                             ;ASL                                    ;2
(1)  750/    CAC1 :                                             ;ROL emu_ptr+1,X                ;6
(1)  750/    CAC1 :                                             ;STA emu_ptr,X                  ;4                              
(1)  750/    CAC1 :                                             ;LDA emu_ptr+1,X                ;4
(1)  750/    CAC1 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  750/    CAC1 :                                             ;STA emu_ptr+1,X                ;4
(1)  750/    CAC1 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  750/    CAC1 :                                             
(1)  750/    CAC1 :                                             ;Method 3 - 30 cycles
(1)  750/    CAC1 :                                             ;TXA                                                    ;2
(1)  750/    CAC1 :                                             ;TAY                                                    ;2
(1)  750/    CAC1 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  750/    CAC1 :                                             ;ASL                                                    ;2
(1)  750/    CAC1 :                                             ;BCS upper                                              ;2
(1)  750/    CAC1 :                                             ;lower:
(1)  750/    CAC1 :                                             ;       ASL                                                     ;2
(1)  750/    CAC1 :                                             ;       TAX                                                     ;2
(1)  750/    CAC1 :                                             ;       BCS upper_lower                         ;2
(1)  750/    CAC1 :                                             ;       lower_lower:
(1)  750/    CAC1 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  750/    CAC1 :                                             ;       upper_lower:
(1)  750/    CAC1 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  750/    CAC1 :                                             ;upper:
(1)  750/    CAC1 :                                             ;       ASL
(1)  750/    CAC1 :                                             ;       TAX
(1)  750/    CAC1 :                                             ;       BCS upper_upper
(1)  750/    CAC1 :                                             ;       lower_upper:
(1)  750/    CAC1 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  750/    CAC1 :                                             ;       upper_upper:
(1)  750/    CAC1 :                                             ;               JMP (JUMP_TABLE4,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 224 - 1/5/2022 11:50:53


(1)  750/    CAC1 :                                             ;After jump:
(1)  750/    CAC1 :                                             ;TYA                                                    ;2
(1)  750/    CAC1 :                                             ;TAX                                                    ;2
(1)  750/    CAC1 :                                             
(1)  750/    CAC1 :                                             ;Method 4 - 28 cycles
(1)  750/    CAC1 :                                             ;LDA (emu_PC,X)                 ;6
(1)  750/    CAC1 :                                             ;TAY                                    ;2
(1)  750/    CAC1 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  750/    CAC1 :                                             ;PHA                                    ;3
(1)  750/    CAC1 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  750/    CAC1 :                                             ;PHA                                    ;3
(1)  750/    CAC1 :                                             ;RTS                                    ;6
(1)  750/    CAC1 :                                             
(1)  750/    CAC1 :                                             ;Method 5 - 30 cycles
(1)  750/    CAC1 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  750/    CAC3 : A8                                          TAY                                             ;2
(1)  750/    CAC4 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  750/    CAC7 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  750/    CAC9 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  750/    CACC : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  750/    CACE : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  750/    CAD1 :                                                                     
(1)  751/    CAD1 :                     
(1)  752/    CAD1 :                     	;0x96 - STX ZPY
(1)  753/    CAD1 :                     	STX_ZPY:
(1)  754/    CAD1 : (MACRO)             		OP_MACRO 150, "STX", "ZPY", "STX_ZPY"
(1)  754/    CAD1 :                                             ;TODO
(1)  755/    CAD1 : (MACRO)             		NEXT_MACRO
(1)  755/    CAD1 :                                             
(1)  755/    CAD1 :  (MACRO-2)                                  halt
(1)  755/    CAD1 : 00                                  BRK
(1)  755/    CAD2 : 00                                  BRK
(1)  755/    CAD3 :                                             
(1)  755/    CAD3 :                                             ;Method 1 - 60 cycles
(1)  755/    CAD3 :                                             ;Jump table must be page aligned!!!
(1)  755/    CAD3 :                                             ;LDA (emu_PC,X)                 ;6
(1)  755/    CAD3 :                                             ;ASL                                    ;2
(1)  755/    CAD3 :                                             ;STA emu_ptr,X                  ;4
(1)  755/    CAD3 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  755/    CAD3 :                                             ;ADC #0                                 ;2
(1)  755/    CAD3 :                                             ;STA emu_ptr+1,X                ;4
(1)  755/    CAD3 :                                             ;LDA (emu_ptr,X)                ;6
(1)  755/    CAD3 :                                             ;STA emu_ptr2,X                 ;4
(1)  755/    CAD3 :                                             ;INC emu_ptr,X                  ;6
(1)  755/    CAD3 :                                             ;BCC .skip                              ;2
(1)  755/    CAD3 :                                             ;       INC emu_ptr+1,X         ;6
(1)  755/    CAD3 :                                             ;.skip:
(1)  755/    CAD3 :                                             ;LDA (emu_ptr,X)                ;6
(1)  755/    CAD3 :                                             ;STA emu_ptr2+1,X               ;4
(1)  755/    CAD3 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  755/    CAD3 :                                             
(1)  755/    CAD3 :                                             ;Method 2 - 46 cycles
(1)  755/    CAD3 :                                             ;Jump table must be page aligned!!!
(1)  755/    CAD3 :                                             ;LDA (emu_PC,X)                 ;6
(1)  755/    CAD3 :                                             ;STZ emu_ptr+1,X                ;4
(1)  755/    CAD3 :                                             ;ASL                                    ;2
(1)  755/    CAD3 :                                             ;ROL emu_ptr+1,X                ;6
(1)  755/    CAD3 :                                             ;ASL                                    ;2
(1)  755/    CAD3 :                                             ;ROL emu_ptr+1,X                ;6
(1)  755/    CAD3 :                                             ;STA emu_ptr,X                  ;4                              
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 225 - 1/5/2022 11:50:53


(1)  755/    CAD3 :                                             ;LDA emu_ptr+1,X                ;4
(1)  755/    CAD3 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  755/    CAD3 :                                             ;STA emu_ptr+1,X                ;4
(1)  755/    CAD3 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  755/    CAD3 :                                             
(1)  755/    CAD3 :                                             ;Method 3 - 30 cycles
(1)  755/    CAD3 :                                             ;TXA                                                    ;2
(1)  755/    CAD3 :                                             ;TAY                                                    ;2
(1)  755/    CAD3 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  755/    CAD3 :                                             ;ASL                                                    ;2
(1)  755/    CAD3 :                                             ;BCS upper                                              ;2
(1)  755/    CAD3 :                                             ;lower:
(1)  755/    CAD3 :                                             ;       ASL                                                     ;2
(1)  755/    CAD3 :                                             ;       TAX                                                     ;2
(1)  755/    CAD3 :                                             ;       BCS upper_lower                         ;2
(1)  755/    CAD3 :                                             ;       lower_lower:
(1)  755/    CAD3 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  755/    CAD3 :                                             ;       upper_lower:
(1)  755/    CAD3 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  755/    CAD3 :                                             ;upper:
(1)  755/    CAD3 :                                             ;       ASL
(1)  755/    CAD3 :                                             ;       TAX
(1)  755/    CAD3 :                                             ;       BCS upper_upper
(1)  755/    CAD3 :                                             ;       lower_upper:
(1)  755/    CAD3 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  755/    CAD3 :                                             ;       upper_upper:
(1)  755/    CAD3 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  755/    CAD3 :                                             ;After jump:
(1)  755/    CAD3 :                                             ;TYA                                                    ;2
(1)  755/    CAD3 :                                             ;TAX                                                    ;2
(1)  755/    CAD3 :                                             
(1)  755/    CAD3 :                                             ;Method 4 - 28 cycles
(1)  755/    CAD3 :                                             ;LDA (emu_PC,X)                 ;6
(1)  755/    CAD3 :                                             ;TAY                                    ;2
(1)  755/    CAD3 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  755/    CAD3 :                                             ;PHA                                    ;3
(1)  755/    CAD3 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  755/    CAD3 :                                             ;PHA                                    ;3
(1)  755/    CAD3 :                                             ;RTS                                    ;6
(1)  755/    CAD3 :                                             
(1)  755/    CAD3 :                                             ;Method 5 - 30 cycles
(1)  755/    CAD3 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  755/    CAD5 : A8                                          TAY                                             ;2
(1)  755/    CAD6 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  755/    CAD9 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  755/    CADB : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  755/    CADE : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  755/    CAE0 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  755/    CAE3 :                                                                     
(1)  756/    CAE3 :                     
(1)  757/    CAE3 :                     	;0x97 - NOP
(1)  758/    CAE3 :                     	NOP_0x97:
(1)  759/    CAE3 : (MACRO)             		OP_MACRO 151, "NOP", "IMP", "NOP_0x97"
(1)  759/    CAE3 :                                             ;TODO
(1)  760/    CAE3 : (MACRO)             		NEXT_MACRO
(1)  760/    CAE3 :                                             
(1)  760/    CAE3 :  (MACRO-2)                                  halt
(1)  760/    CAE3 : 00                                  BRK
(1)  760/    CAE4 : 00                                  BRK
(1)  760/    CAE5 :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 226 - 1/5/2022 11:50:53


(1)  760/    CAE5 :                                             ;Method 1 - 60 cycles
(1)  760/    CAE5 :                                             ;Jump table must be page aligned!!!
(1)  760/    CAE5 :                                             ;LDA (emu_PC,X)                 ;6
(1)  760/    CAE5 :                                             ;ASL                                    ;2
(1)  760/    CAE5 :                                             ;STA emu_ptr,X                  ;4
(1)  760/    CAE5 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  760/    CAE5 :                                             ;ADC #0                                 ;2
(1)  760/    CAE5 :                                             ;STA emu_ptr+1,X                ;4
(1)  760/    CAE5 :                                             ;LDA (emu_ptr,X)                ;6
(1)  760/    CAE5 :                                             ;STA emu_ptr2,X                 ;4
(1)  760/    CAE5 :                                             ;INC emu_ptr,X                  ;6
(1)  760/    CAE5 :                                             ;BCC .skip                              ;2
(1)  760/    CAE5 :                                             ;       INC emu_ptr+1,X         ;6
(1)  760/    CAE5 :                                             ;.skip:
(1)  760/    CAE5 :                                             ;LDA (emu_ptr,X)                ;6
(1)  760/    CAE5 :                                             ;STA emu_ptr2+1,X               ;4
(1)  760/    CAE5 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  760/    CAE5 :                                             
(1)  760/    CAE5 :                                             ;Method 2 - 46 cycles
(1)  760/    CAE5 :                                             ;Jump table must be page aligned!!!
(1)  760/    CAE5 :                                             ;LDA (emu_PC,X)                 ;6
(1)  760/    CAE5 :                                             ;STZ emu_ptr+1,X                ;4
(1)  760/    CAE5 :                                             ;ASL                                    ;2
(1)  760/    CAE5 :                                             ;ROL emu_ptr+1,X                ;6
(1)  760/    CAE5 :                                             ;ASL                                    ;2
(1)  760/    CAE5 :                                             ;ROL emu_ptr+1,X                ;6
(1)  760/    CAE5 :                                             ;STA emu_ptr,X                  ;4                              
(1)  760/    CAE5 :                                             ;LDA emu_ptr+1,X                ;4
(1)  760/    CAE5 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  760/    CAE5 :                                             ;STA emu_ptr+1,X                ;4
(1)  760/    CAE5 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  760/    CAE5 :                                             
(1)  760/    CAE5 :                                             ;Method 3 - 30 cycles
(1)  760/    CAE5 :                                             ;TXA                                                    ;2
(1)  760/    CAE5 :                                             ;TAY                                                    ;2
(1)  760/    CAE5 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  760/    CAE5 :                                             ;ASL                                                    ;2
(1)  760/    CAE5 :                                             ;BCS upper                                              ;2
(1)  760/    CAE5 :                                             ;lower:
(1)  760/    CAE5 :                                             ;       ASL                                                     ;2
(1)  760/    CAE5 :                                             ;       TAX                                                     ;2
(1)  760/    CAE5 :                                             ;       BCS upper_lower                         ;2
(1)  760/    CAE5 :                                             ;       lower_lower:
(1)  760/    CAE5 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  760/    CAE5 :                                             ;       upper_lower:
(1)  760/    CAE5 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  760/    CAE5 :                                             ;upper:
(1)  760/    CAE5 :                                             ;       ASL
(1)  760/    CAE5 :                                             ;       TAX
(1)  760/    CAE5 :                                             ;       BCS upper_upper
(1)  760/    CAE5 :                                             ;       lower_upper:
(1)  760/    CAE5 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  760/    CAE5 :                                             ;       upper_upper:
(1)  760/    CAE5 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  760/    CAE5 :                                             ;After jump:
(1)  760/    CAE5 :                                             ;TYA                                                    ;2
(1)  760/    CAE5 :                                             ;TAX                                                    ;2
(1)  760/    CAE5 :                                             
(1)  760/    CAE5 :                                             ;Method 4 - 28 cycles
(1)  760/    CAE5 :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 227 - 1/5/2022 11:50:53


(1)  760/    CAE5 :                                             ;TAY                                    ;2
(1)  760/    CAE5 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  760/    CAE5 :                                             ;PHA                                    ;3
(1)  760/    CAE5 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  760/    CAE5 :                                             ;PHA                                    ;3
(1)  760/    CAE5 :                                             ;RTS                                    ;6
(1)  760/    CAE5 :                                             
(1)  760/    CAE5 :                                             ;Method 5 - 30 cycles
(1)  760/    CAE5 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  760/    CAE7 : A8                                          TAY                                             ;2
(1)  760/    CAE8 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  760/    CAEB : 95 0A                                       STA emu_ptr,X                   ;4
(1)  760/    CAED : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  760/    CAF0 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  760/    CAF2 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  760/    CAF5 :                                                                     
(1)  761/    CAF5 :                     
(1)  762/    CAF5 :                     	;0x98 - TYA IMP
(1)  763/    CAF5 :                     	TYA_IMP:
(1)  764/    CAF5 : (MACRO)             		OP_MACRO 152, "TYA", "IMP", "TYA_IMP"
(1)  764/    CAF5 :                                             ;TODO
(1)  765/    CAF5 : (MACRO)             		NEXT_MACRO
(1)  765/    CAF5 :                                             
(1)  765/    CAF5 :  (MACRO-2)                                  halt
(1)  765/    CAF5 : 00                                  BRK
(1)  765/    CAF6 : 00                                  BRK
(1)  765/    CAF7 :                                             
(1)  765/    CAF7 :                                             ;Method 1 - 60 cycles
(1)  765/    CAF7 :                                             ;Jump table must be page aligned!!!
(1)  765/    CAF7 :                                             ;LDA (emu_PC,X)                 ;6
(1)  765/    CAF7 :                                             ;ASL                                    ;2
(1)  765/    CAF7 :                                             ;STA emu_ptr,X                  ;4
(1)  765/    CAF7 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  765/    CAF7 :                                             ;ADC #0                                 ;2
(1)  765/    CAF7 :                                             ;STA emu_ptr+1,X                ;4
(1)  765/    CAF7 :                                             ;LDA (emu_ptr,X)                ;6
(1)  765/    CAF7 :                                             ;STA emu_ptr2,X                 ;4
(1)  765/    CAF7 :                                             ;INC emu_ptr,X                  ;6
(1)  765/    CAF7 :                                             ;BCC .skip                              ;2
(1)  765/    CAF7 :                                             ;       INC emu_ptr+1,X         ;6
(1)  765/    CAF7 :                                             ;.skip:
(1)  765/    CAF7 :                                             ;LDA (emu_ptr,X)                ;6
(1)  765/    CAF7 :                                             ;STA emu_ptr2+1,X               ;4
(1)  765/    CAF7 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  765/    CAF7 :                                             
(1)  765/    CAF7 :                                             ;Method 2 - 46 cycles
(1)  765/    CAF7 :                                             ;Jump table must be page aligned!!!
(1)  765/    CAF7 :                                             ;LDA (emu_PC,X)                 ;6
(1)  765/    CAF7 :                                             ;STZ emu_ptr+1,X                ;4
(1)  765/    CAF7 :                                             ;ASL                                    ;2
(1)  765/    CAF7 :                                             ;ROL emu_ptr+1,X                ;6
(1)  765/    CAF7 :                                             ;ASL                                    ;2
(1)  765/    CAF7 :                                             ;ROL emu_ptr+1,X                ;6
(1)  765/    CAF7 :                                             ;STA emu_ptr,X                  ;4                              
(1)  765/    CAF7 :                                             ;LDA emu_ptr+1,X                ;4
(1)  765/    CAF7 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  765/    CAF7 :                                             ;STA emu_ptr+1,X                ;4
(1)  765/    CAF7 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  765/    CAF7 :                                             
(1)  765/    CAF7 :                                             ;Method 3 - 30 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 228 - 1/5/2022 11:50:53


(1)  765/    CAF7 :                                             ;TXA                                                    ;2
(1)  765/    CAF7 :                                             ;TAY                                                    ;2
(1)  765/    CAF7 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  765/    CAF7 :                                             ;ASL                                                    ;2
(1)  765/    CAF7 :                                             ;BCS upper                                              ;2
(1)  765/    CAF7 :                                             ;lower:
(1)  765/    CAF7 :                                             ;       ASL                                                     ;2
(1)  765/    CAF7 :                                             ;       TAX                                                     ;2
(1)  765/    CAF7 :                                             ;       BCS upper_lower                         ;2
(1)  765/    CAF7 :                                             ;       lower_lower:
(1)  765/    CAF7 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  765/    CAF7 :                                             ;       upper_lower:
(1)  765/    CAF7 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  765/    CAF7 :                                             ;upper:
(1)  765/    CAF7 :                                             ;       ASL
(1)  765/    CAF7 :                                             ;       TAX
(1)  765/    CAF7 :                                             ;       BCS upper_upper
(1)  765/    CAF7 :                                             ;       lower_upper:
(1)  765/    CAF7 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  765/    CAF7 :                                             ;       upper_upper:
(1)  765/    CAF7 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  765/    CAF7 :                                             ;After jump:
(1)  765/    CAF7 :                                             ;TYA                                                    ;2
(1)  765/    CAF7 :                                             ;TAX                                                    ;2
(1)  765/    CAF7 :                                             
(1)  765/    CAF7 :                                             ;Method 4 - 28 cycles
(1)  765/    CAF7 :                                             ;LDA (emu_PC,X)                 ;6
(1)  765/    CAF7 :                                             ;TAY                                    ;2
(1)  765/    CAF7 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  765/    CAF7 :                                             ;PHA                                    ;3
(1)  765/    CAF7 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  765/    CAF7 :                                             ;PHA                                    ;3
(1)  765/    CAF7 :                                             ;RTS                                    ;6
(1)  765/    CAF7 :                                             
(1)  765/    CAF7 :                                             ;Method 5 - 30 cycles
(1)  765/    CAF7 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  765/    CAF9 : A8                                          TAY                                             ;2
(1)  765/    CAFA : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  765/    CAFD : 95 0A                                       STA emu_ptr,X                   ;4
(1)  765/    CAFF : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  765/    CB02 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  765/    CB04 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  765/    CB07 :                                                                     
(1)  766/    CB07 :                     
(1)  767/    CB07 :                     	;0x99 - STA ABSY
(1)  768/    CB07 :                     	STA_ABSY:
(1)  769/    CB07 : (MACRO)             		OP_MACRO 153, "STA", "ABSY", "STA_ABSY"
(1)  769/    CB07 :                                             ;TODO
(1)  770/    CB07 : (MACRO)             		NEXT_MACRO
(1)  770/    CB07 :                                             
(1)  770/    CB07 :  (MACRO-2)                                  halt
(1)  770/    CB07 : 00                                  BRK
(1)  770/    CB08 : 00                                  BRK
(1)  770/    CB09 :                                             
(1)  770/    CB09 :                                             ;Method 1 - 60 cycles
(1)  770/    CB09 :                                             ;Jump table must be page aligned!!!
(1)  770/    CB09 :                                             ;LDA (emu_PC,X)                 ;6
(1)  770/    CB09 :                                             ;ASL                                    ;2
(1)  770/    CB09 :                                             ;STA emu_ptr,X                  ;4
(1)  770/    CB09 :                                             ;LDA #hi(JUMP_TABLE)    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 229 - 1/5/2022 11:50:53


(1)  770/    CB09 :                                             ;ADC #0                                 ;2
(1)  770/    CB09 :                                             ;STA emu_ptr+1,X                ;4
(1)  770/    CB09 :                                             ;LDA (emu_ptr,X)                ;6
(1)  770/    CB09 :                                             ;STA emu_ptr2,X                 ;4
(1)  770/    CB09 :                                             ;INC emu_ptr,X                  ;6
(1)  770/    CB09 :                                             ;BCC .skip                              ;2
(1)  770/    CB09 :                                             ;       INC emu_ptr+1,X         ;6
(1)  770/    CB09 :                                             ;.skip:
(1)  770/    CB09 :                                             ;LDA (emu_ptr,X)                ;6
(1)  770/    CB09 :                                             ;STA emu_ptr2+1,X               ;4
(1)  770/    CB09 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  770/    CB09 :                                             
(1)  770/    CB09 :                                             ;Method 2 - 46 cycles
(1)  770/    CB09 :                                             ;Jump table must be page aligned!!!
(1)  770/    CB09 :                                             ;LDA (emu_PC,X)                 ;6
(1)  770/    CB09 :                                             ;STZ emu_ptr+1,X                ;4
(1)  770/    CB09 :                                             ;ASL                                    ;2
(1)  770/    CB09 :                                             ;ROL emu_ptr+1,X                ;6
(1)  770/    CB09 :                                             ;ASL                                    ;2
(1)  770/    CB09 :                                             ;ROL emu_ptr+1,X                ;6
(1)  770/    CB09 :                                             ;STA emu_ptr,X                  ;4                              
(1)  770/    CB09 :                                             ;LDA emu_ptr+1,X                ;4
(1)  770/    CB09 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  770/    CB09 :                                             ;STA emu_ptr+1,X                ;4
(1)  770/    CB09 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  770/    CB09 :                                             
(1)  770/    CB09 :                                             ;Method 3 - 30 cycles
(1)  770/    CB09 :                                             ;TXA                                                    ;2
(1)  770/    CB09 :                                             ;TAY                                                    ;2
(1)  770/    CB09 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  770/    CB09 :                                             ;ASL                                                    ;2
(1)  770/    CB09 :                                             ;BCS upper                                              ;2
(1)  770/    CB09 :                                             ;lower:
(1)  770/    CB09 :                                             ;       ASL                                                     ;2
(1)  770/    CB09 :                                             ;       TAX                                                     ;2
(1)  770/    CB09 :                                             ;       BCS upper_lower                         ;2
(1)  770/    CB09 :                                             ;       lower_lower:
(1)  770/    CB09 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  770/    CB09 :                                             ;       upper_lower:
(1)  770/    CB09 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  770/    CB09 :                                             ;upper:
(1)  770/    CB09 :                                             ;       ASL
(1)  770/    CB09 :                                             ;       TAX
(1)  770/    CB09 :                                             ;       BCS upper_upper
(1)  770/    CB09 :                                             ;       lower_upper:
(1)  770/    CB09 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  770/    CB09 :                                             ;       upper_upper:
(1)  770/    CB09 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  770/    CB09 :                                             ;After jump:
(1)  770/    CB09 :                                             ;TYA                                                    ;2
(1)  770/    CB09 :                                             ;TAX                                                    ;2
(1)  770/    CB09 :                                             
(1)  770/    CB09 :                                             ;Method 4 - 28 cycles
(1)  770/    CB09 :                                             ;LDA (emu_PC,X)                 ;6
(1)  770/    CB09 :                                             ;TAY                                    ;2
(1)  770/    CB09 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  770/    CB09 :                                             ;PHA                                    ;3
(1)  770/    CB09 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  770/    CB09 :                                             ;PHA                                    ;3
(1)  770/    CB09 :                                             ;RTS                                    ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 230 - 1/5/2022 11:50:53


(1)  770/    CB09 :                                             
(1)  770/    CB09 :                                             ;Method 5 - 30 cycles
(1)  770/    CB09 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  770/    CB0B : A8                                          TAY                                             ;2
(1)  770/    CB0C : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  770/    CB0F : 95 0A                                       STA emu_ptr,X                   ;4
(1)  770/    CB11 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  770/    CB14 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  770/    CB16 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  770/    CB19 :                                                                     
(1)  771/    CB19 :                     
(1)  772/    CB19 :                     	;0x9A - TXS IMP
(1)  773/    CB19 :                     	TXS_IMP:
(1)  774/    CB19 : (MACRO)             		OP_MACRO 154, "TXS", "IMP", "TXS_IMP"
(1)  774/    CB19 :                                             ;TODO
(1)  775/    CB19 : (MACRO)             		NEXT_MACRO
(1)  775/    CB19 :                                             
(1)  775/    CB19 :  (MACRO-2)                                  halt
(1)  775/    CB19 : 00                                  BRK
(1)  775/    CB1A : 00                                  BRK
(1)  775/    CB1B :                                             
(1)  775/    CB1B :                                             ;Method 1 - 60 cycles
(1)  775/    CB1B :                                             ;Jump table must be page aligned!!!
(1)  775/    CB1B :                                             ;LDA (emu_PC,X)                 ;6
(1)  775/    CB1B :                                             ;ASL                                    ;2
(1)  775/    CB1B :                                             ;STA emu_ptr,X                  ;4
(1)  775/    CB1B :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  775/    CB1B :                                             ;ADC #0                                 ;2
(1)  775/    CB1B :                                             ;STA emu_ptr+1,X                ;4
(1)  775/    CB1B :                                             ;LDA (emu_ptr,X)                ;6
(1)  775/    CB1B :                                             ;STA emu_ptr2,X                 ;4
(1)  775/    CB1B :                                             ;INC emu_ptr,X                  ;6
(1)  775/    CB1B :                                             ;BCC .skip                              ;2
(1)  775/    CB1B :                                             ;       INC emu_ptr+1,X         ;6
(1)  775/    CB1B :                                             ;.skip:
(1)  775/    CB1B :                                             ;LDA (emu_ptr,X)                ;6
(1)  775/    CB1B :                                             ;STA emu_ptr2+1,X               ;4
(1)  775/    CB1B :                                             ;JMP (emu_ptr2,X)               ;6
(1)  775/    CB1B :                                             
(1)  775/    CB1B :                                             ;Method 2 - 46 cycles
(1)  775/    CB1B :                                             ;Jump table must be page aligned!!!
(1)  775/    CB1B :                                             ;LDA (emu_PC,X)                 ;6
(1)  775/    CB1B :                                             ;STZ emu_ptr+1,X                ;4
(1)  775/    CB1B :                                             ;ASL                                    ;2
(1)  775/    CB1B :                                             ;ROL emu_ptr+1,X                ;6
(1)  775/    CB1B :                                             ;ASL                                    ;2
(1)  775/    CB1B :                                             ;ROL emu_ptr+1,X                ;6
(1)  775/    CB1B :                                             ;STA emu_ptr,X                  ;4                              
(1)  775/    CB1B :                                             ;LDA emu_ptr+1,X                ;4
(1)  775/    CB1B :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  775/    CB1B :                                             ;STA emu_ptr+1,X                ;4
(1)  775/    CB1B :                                             ;JMP (emu_ptr2,X)               ;6
(1)  775/    CB1B :                                             
(1)  775/    CB1B :                                             ;Method 3 - 30 cycles
(1)  775/    CB1B :                                             ;TXA                                                    ;2
(1)  775/    CB1B :                                             ;TAY                                                    ;2
(1)  775/    CB1B :                                             ;LDA (emu_PC,X)                                 ;6
(1)  775/    CB1B :                                             ;ASL                                                    ;2
(1)  775/    CB1B :                                             ;BCS upper                                              ;2
(1)  775/    CB1B :                                             ;lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 231 - 1/5/2022 11:50:53


(1)  775/    CB1B :                                             ;       ASL                                                     ;2
(1)  775/    CB1B :                                             ;       TAX                                                     ;2
(1)  775/    CB1B :                                             ;       BCS upper_lower                         ;2
(1)  775/    CB1B :                                             ;       lower_lower:
(1)  775/    CB1B :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  775/    CB1B :                                             ;       upper_lower:
(1)  775/    CB1B :                                             ;               JMP (JUMP_TABLE2,X)
(1)  775/    CB1B :                                             ;upper:
(1)  775/    CB1B :                                             ;       ASL
(1)  775/    CB1B :                                             ;       TAX
(1)  775/    CB1B :                                             ;       BCS upper_upper
(1)  775/    CB1B :                                             ;       lower_upper:
(1)  775/    CB1B :                                             ;               JMP (JUMP_TABLE3,X)
(1)  775/    CB1B :                                             ;       upper_upper:
(1)  775/    CB1B :                                             ;               JMP (JUMP_TABLE4,X)
(1)  775/    CB1B :                                             ;After jump:
(1)  775/    CB1B :                                             ;TYA                                                    ;2
(1)  775/    CB1B :                                             ;TAX                                                    ;2
(1)  775/    CB1B :                                             
(1)  775/    CB1B :                                             ;Method 4 - 28 cycles
(1)  775/    CB1B :                                             ;LDA (emu_PC,X)                 ;6
(1)  775/    CB1B :                                             ;TAY                                    ;2
(1)  775/    CB1B :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  775/    CB1B :                                             ;PHA                                    ;3
(1)  775/    CB1B :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  775/    CB1B :                                             ;PHA                                    ;3
(1)  775/    CB1B :                                             ;RTS                                    ;6
(1)  775/    CB1B :                                             
(1)  775/    CB1B :                                             ;Method 5 - 30 cycles
(1)  775/    CB1B : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  775/    CB1D : A8                                          TAY                                             ;2
(1)  775/    CB1E : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  775/    CB21 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  775/    CB23 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  775/    CB26 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  775/    CB28 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  775/    CB2B :                                                                     
(1)  776/    CB2B :                     
(1)  777/    CB2B :                     	;0x9B - NOP
(1)  778/    CB2B :                     	NOP_0x9B:
(1)  779/    CB2B : (MACRO)             		OP_MACRO 155, "NOP", "IMP", "NOP_0x9B"
(1)  779/    CB2B :                                             ;TODO
(1)  780/    CB2B : (MACRO)             		NEXT_MACRO
(1)  780/    CB2B :                                             
(1)  780/    CB2B :  (MACRO-2)                                  halt
(1)  780/    CB2B : 00                                  BRK
(1)  780/    CB2C : 00                                  BRK
(1)  780/    CB2D :                                             
(1)  780/    CB2D :                                             ;Method 1 - 60 cycles
(1)  780/    CB2D :                                             ;Jump table must be page aligned!!!
(1)  780/    CB2D :                                             ;LDA (emu_PC,X)                 ;6
(1)  780/    CB2D :                                             ;ASL                                    ;2
(1)  780/    CB2D :                                             ;STA emu_ptr,X                  ;4
(1)  780/    CB2D :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  780/    CB2D :                                             ;ADC #0                                 ;2
(1)  780/    CB2D :                                             ;STA emu_ptr+1,X                ;4
(1)  780/    CB2D :                                             ;LDA (emu_ptr,X)                ;6
(1)  780/    CB2D :                                             ;STA emu_ptr2,X                 ;4
(1)  780/    CB2D :                                             ;INC emu_ptr,X                  ;6
(1)  780/    CB2D :                                             ;BCC .skip                              ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 232 - 1/5/2022 11:50:53


(1)  780/    CB2D :                                             ;       INC emu_ptr+1,X         ;6
(1)  780/    CB2D :                                             ;.skip:
(1)  780/    CB2D :                                             ;LDA (emu_ptr,X)                ;6
(1)  780/    CB2D :                                             ;STA emu_ptr2+1,X               ;4
(1)  780/    CB2D :                                             ;JMP (emu_ptr2,X)               ;6
(1)  780/    CB2D :                                             
(1)  780/    CB2D :                                             ;Method 2 - 46 cycles
(1)  780/    CB2D :                                             ;Jump table must be page aligned!!!
(1)  780/    CB2D :                                             ;LDA (emu_PC,X)                 ;6
(1)  780/    CB2D :                                             ;STZ emu_ptr+1,X                ;4
(1)  780/    CB2D :                                             ;ASL                                    ;2
(1)  780/    CB2D :                                             ;ROL emu_ptr+1,X                ;6
(1)  780/    CB2D :                                             ;ASL                                    ;2
(1)  780/    CB2D :                                             ;ROL emu_ptr+1,X                ;6
(1)  780/    CB2D :                                             ;STA emu_ptr,X                  ;4                              
(1)  780/    CB2D :                                             ;LDA emu_ptr+1,X                ;4
(1)  780/    CB2D :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  780/    CB2D :                                             ;STA emu_ptr+1,X                ;4
(1)  780/    CB2D :                                             ;JMP (emu_ptr2,X)               ;6
(1)  780/    CB2D :                                             
(1)  780/    CB2D :                                             ;Method 3 - 30 cycles
(1)  780/    CB2D :                                             ;TXA                                                    ;2
(1)  780/    CB2D :                                             ;TAY                                                    ;2
(1)  780/    CB2D :                                             ;LDA (emu_PC,X)                                 ;6
(1)  780/    CB2D :                                             ;ASL                                                    ;2
(1)  780/    CB2D :                                             ;BCS upper                                              ;2
(1)  780/    CB2D :                                             ;lower:
(1)  780/    CB2D :                                             ;       ASL                                                     ;2
(1)  780/    CB2D :                                             ;       TAX                                                     ;2
(1)  780/    CB2D :                                             ;       BCS upper_lower                         ;2
(1)  780/    CB2D :                                             ;       lower_lower:
(1)  780/    CB2D :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  780/    CB2D :                                             ;       upper_lower:
(1)  780/    CB2D :                                             ;               JMP (JUMP_TABLE2,X)
(1)  780/    CB2D :                                             ;upper:
(1)  780/    CB2D :                                             ;       ASL
(1)  780/    CB2D :                                             ;       TAX
(1)  780/    CB2D :                                             ;       BCS upper_upper
(1)  780/    CB2D :                                             ;       lower_upper:
(1)  780/    CB2D :                                             ;               JMP (JUMP_TABLE3,X)
(1)  780/    CB2D :                                             ;       upper_upper:
(1)  780/    CB2D :                                             ;               JMP (JUMP_TABLE4,X)
(1)  780/    CB2D :                                             ;After jump:
(1)  780/    CB2D :                                             ;TYA                                                    ;2
(1)  780/    CB2D :                                             ;TAX                                                    ;2
(1)  780/    CB2D :                                             
(1)  780/    CB2D :                                             ;Method 4 - 28 cycles
(1)  780/    CB2D :                                             ;LDA (emu_PC,X)                 ;6
(1)  780/    CB2D :                                             ;TAY                                    ;2
(1)  780/    CB2D :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  780/    CB2D :                                             ;PHA                                    ;3
(1)  780/    CB2D :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  780/    CB2D :                                             ;PHA                                    ;3
(1)  780/    CB2D :                                             ;RTS                                    ;6
(1)  780/    CB2D :                                             
(1)  780/    CB2D :                                             ;Method 5 - 30 cycles
(1)  780/    CB2D : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  780/    CB2F : A8                                          TAY                                             ;2
(1)  780/    CB30 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  780/    CB33 : 95 0A                                       STA emu_ptr,X                   ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 233 - 1/5/2022 11:50:53


(1)  780/    CB35 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  780/    CB38 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  780/    CB3A : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  780/    CB3D :                                                                     
(1)  781/    CB3D :                     
(1)  782/    CB3D :                     	;0x9C - NOP
(1)  783/    CB3D :                     	NOP_0x9C:
(1)  784/    CB3D : (MACRO)             		OP_MACRO 156, "NOP", "IMP", "NOP_0x9C"
(1)  784/    CB3D :                                             ;TODO
(1)  785/    CB3D : (MACRO)             		NEXT_MACRO
(1)  785/    CB3D :                                             
(1)  785/    CB3D :  (MACRO-2)                                  halt
(1)  785/    CB3D : 00                                  BRK
(1)  785/    CB3E : 00                                  BRK
(1)  785/    CB3F :                                             
(1)  785/    CB3F :                                             ;Method 1 - 60 cycles
(1)  785/    CB3F :                                             ;Jump table must be page aligned!!!
(1)  785/    CB3F :                                             ;LDA (emu_PC,X)                 ;6
(1)  785/    CB3F :                                             ;ASL                                    ;2
(1)  785/    CB3F :                                             ;STA emu_ptr,X                  ;4
(1)  785/    CB3F :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  785/    CB3F :                                             ;ADC #0                                 ;2
(1)  785/    CB3F :                                             ;STA emu_ptr+1,X                ;4
(1)  785/    CB3F :                                             ;LDA (emu_ptr,X)                ;6
(1)  785/    CB3F :                                             ;STA emu_ptr2,X                 ;4
(1)  785/    CB3F :                                             ;INC emu_ptr,X                  ;6
(1)  785/    CB3F :                                             ;BCC .skip                              ;2
(1)  785/    CB3F :                                             ;       INC emu_ptr+1,X         ;6
(1)  785/    CB3F :                                             ;.skip:
(1)  785/    CB3F :                                             ;LDA (emu_ptr,X)                ;6
(1)  785/    CB3F :                                             ;STA emu_ptr2+1,X               ;4
(1)  785/    CB3F :                                             ;JMP (emu_ptr2,X)               ;6
(1)  785/    CB3F :                                             
(1)  785/    CB3F :                                             ;Method 2 - 46 cycles
(1)  785/    CB3F :                                             ;Jump table must be page aligned!!!
(1)  785/    CB3F :                                             ;LDA (emu_PC,X)                 ;6
(1)  785/    CB3F :                                             ;STZ emu_ptr+1,X                ;4
(1)  785/    CB3F :                                             ;ASL                                    ;2
(1)  785/    CB3F :                                             ;ROL emu_ptr+1,X                ;6
(1)  785/    CB3F :                                             ;ASL                                    ;2
(1)  785/    CB3F :                                             ;ROL emu_ptr+1,X                ;6
(1)  785/    CB3F :                                             ;STA emu_ptr,X                  ;4                              
(1)  785/    CB3F :                                             ;LDA emu_ptr+1,X                ;4
(1)  785/    CB3F :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  785/    CB3F :                                             ;STA emu_ptr+1,X                ;4
(1)  785/    CB3F :                                             ;JMP (emu_ptr2,X)               ;6
(1)  785/    CB3F :                                             
(1)  785/    CB3F :                                             ;Method 3 - 30 cycles
(1)  785/    CB3F :                                             ;TXA                                                    ;2
(1)  785/    CB3F :                                             ;TAY                                                    ;2
(1)  785/    CB3F :                                             ;LDA (emu_PC,X)                                 ;6
(1)  785/    CB3F :                                             ;ASL                                                    ;2
(1)  785/    CB3F :                                             ;BCS upper                                              ;2
(1)  785/    CB3F :                                             ;lower:
(1)  785/    CB3F :                                             ;       ASL                                                     ;2
(1)  785/    CB3F :                                             ;       TAX                                                     ;2
(1)  785/    CB3F :                                             ;       BCS upper_lower                         ;2
(1)  785/    CB3F :                                             ;       lower_lower:
(1)  785/    CB3F :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  785/    CB3F :                                             ;       upper_lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 234 - 1/5/2022 11:50:53


(1)  785/    CB3F :                                             ;               JMP (JUMP_TABLE2,X)
(1)  785/    CB3F :                                             ;upper:
(1)  785/    CB3F :                                             ;       ASL
(1)  785/    CB3F :                                             ;       TAX
(1)  785/    CB3F :                                             ;       BCS upper_upper
(1)  785/    CB3F :                                             ;       lower_upper:
(1)  785/    CB3F :                                             ;               JMP (JUMP_TABLE3,X)
(1)  785/    CB3F :                                             ;       upper_upper:
(1)  785/    CB3F :                                             ;               JMP (JUMP_TABLE4,X)
(1)  785/    CB3F :                                             ;After jump:
(1)  785/    CB3F :                                             ;TYA                                                    ;2
(1)  785/    CB3F :                                             ;TAX                                                    ;2
(1)  785/    CB3F :                                             
(1)  785/    CB3F :                                             ;Method 4 - 28 cycles
(1)  785/    CB3F :                                             ;LDA (emu_PC,X)                 ;6
(1)  785/    CB3F :                                             ;TAY                                    ;2
(1)  785/    CB3F :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  785/    CB3F :                                             ;PHA                                    ;3
(1)  785/    CB3F :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  785/    CB3F :                                             ;PHA                                    ;3
(1)  785/    CB3F :                                             ;RTS                                    ;6
(1)  785/    CB3F :                                             
(1)  785/    CB3F :                                             ;Method 5 - 30 cycles
(1)  785/    CB3F : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  785/    CB41 : A8                                          TAY                                             ;2
(1)  785/    CB42 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  785/    CB45 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  785/    CB47 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  785/    CB4A : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  785/    CB4C : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  785/    CB4F :                                                                     
(1)  786/    CB4F :                     
(1)  787/    CB4F :                     	;0x9D - STA ABSX
(1)  788/    CB4F :                     	STA_ABSX:
(1)  789/    CB4F : (MACRO)             		OP_MACRO 157, "STA", "ABSX", "STA_ABSX"
(1)  789/    CB4F :                                             ;TODO
(1)  790/    CB4F : (MACRO)             		NEXT_MACRO
(1)  790/    CB4F :                                             
(1)  790/    CB4F :  (MACRO-2)                                  halt
(1)  790/    CB4F : 00                                  BRK
(1)  790/    CB50 : 00                                  BRK
(1)  790/    CB51 :                                             
(1)  790/    CB51 :                                             ;Method 1 - 60 cycles
(1)  790/    CB51 :                                             ;Jump table must be page aligned!!!
(1)  790/    CB51 :                                             ;LDA (emu_PC,X)                 ;6
(1)  790/    CB51 :                                             ;ASL                                    ;2
(1)  790/    CB51 :                                             ;STA emu_ptr,X                  ;4
(1)  790/    CB51 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  790/    CB51 :                                             ;ADC #0                                 ;2
(1)  790/    CB51 :                                             ;STA emu_ptr+1,X                ;4
(1)  790/    CB51 :                                             ;LDA (emu_ptr,X)                ;6
(1)  790/    CB51 :                                             ;STA emu_ptr2,X                 ;4
(1)  790/    CB51 :                                             ;INC emu_ptr,X                  ;6
(1)  790/    CB51 :                                             ;BCC .skip                              ;2
(1)  790/    CB51 :                                             ;       INC emu_ptr+1,X         ;6
(1)  790/    CB51 :                                             ;.skip:
(1)  790/    CB51 :                                             ;LDA (emu_ptr,X)                ;6
(1)  790/    CB51 :                                             ;STA emu_ptr2+1,X               ;4
(1)  790/    CB51 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  790/    CB51 :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 235 - 1/5/2022 11:50:53


(1)  790/    CB51 :                                             ;Method 2 - 46 cycles
(1)  790/    CB51 :                                             ;Jump table must be page aligned!!!
(1)  790/    CB51 :                                             ;LDA (emu_PC,X)                 ;6
(1)  790/    CB51 :                                             ;STZ emu_ptr+1,X                ;4
(1)  790/    CB51 :                                             ;ASL                                    ;2
(1)  790/    CB51 :                                             ;ROL emu_ptr+1,X                ;6
(1)  790/    CB51 :                                             ;ASL                                    ;2
(1)  790/    CB51 :                                             ;ROL emu_ptr+1,X                ;6
(1)  790/    CB51 :                                             ;STA emu_ptr,X                  ;4                              
(1)  790/    CB51 :                                             ;LDA emu_ptr+1,X                ;4
(1)  790/    CB51 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  790/    CB51 :                                             ;STA emu_ptr+1,X                ;4
(1)  790/    CB51 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  790/    CB51 :                                             
(1)  790/    CB51 :                                             ;Method 3 - 30 cycles
(1)  790/    CB51 :                                             ;TXA                                                    ;2
(1)  790/    CB51 :                                             ;TAY                                                    ;2
(1)  790/    CB51 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  790/    CB51 :                                             ;ASL                                                    ;2
(1)  790/    CB51 :                                             ;BCS upper                                              ;2
(1)  790/    CB51 :                                             ;lower:
(1)  790/    CB51 :                                             ;       ASL                                                     ;2
(1)  790/    CB51 :                                             ;       TAX                                                     ;2
(1)  790/    CB51 :                                             ;       BCS upper_lower                         ;2
(1)  790/    CB51 :                                             ;       lower_lower:
(1)  790/    CB51 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  790/    CB51 :                                             ;       upper_lower:
(1)  790/    CB51 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  790/    CB51 :                                             ;upper:
(1)  790/    CB51 :                                             ;       ASL
(1)  790/    CB51 :                                             ;       TAX
(1)  790/    CB51 :                                             ;       BCS upper_upper
(1)  790/    CB51 :                                             ;       lower_upper:
(1)  790/    CB51 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  790/    CB51 :                                             ;       upper_upper:
(1)  790/    CB51 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  790/    CB51 :                                             ;After jump:
(1)  790/    CB51 :                                             ;TYA                                                    ;2
(1)  790/    CB51 :                                             ;TAX                                                    ;2
(1)  790/    CB51 :                                             
(1)  790/    CB51 :                                             ;Method 4 - 28 cycles
(1)  790/    CB51 :                                             ;LDA (emu_PC,X)                 ;6
(1)  790/    CB51 :                                             ;TAY                                    ;2
(1)  790/    CB51 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  790/    CB51 :                                             ;PHA                                    ;3
(1)  790/    CB51 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  790/    CB51 :                                             ;PHA                                    ;3
(1)  790/    CB51 :                                             ;RTS                                    ;6
(1)  790/    CB51 :                                             
(1)  790/    CB51 :                                             ;Method 5 - 30 cycles
(1)  790/    CB51 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  790/    CB53 : A8                                          TAY                                             ;2
(1)  790/    CB54 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  790/    CB57 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  790/    CB59 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  790/    CB5C : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  790/    CB5E : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  790/    CB61 :                                                                     
(1)  791/    CB61 :                     
(1)  792/    CB61 :                     	;0x9E - NOP
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 236 - 1/5/2022 11:50:53


(1)  793/    CB61 :                     	NOP_0x9E:
(1)  794/    CB61 : (MACRO)             		OP_MACRO 158, "NOP", "IMP", "NOP_0x9E"
(1)  794/    CB61 :                                             ;TODO
(1)  795/    CB61 : (MACRO)             		NEXT_MACRO
(1)  795/    CB61 :                                             
(1)  795/    CB61 :  (MACRO-2)                                  halt
(1)  795/    CB61 : 00                                  BRK
(1)  795/    CB62 : 00                                  BRK
(1)  795/    CB63 :                                             
(1)  795/    CB63 :                                             ;Method 1 - 60 cycles
(1)  795/    CB63 :                                             ;Jump table must be page aligned!!!
(1)  795/    CB63 :                                             ;LDA (emu_PC,X)                 ;6
(1)  795/    CB63 :                                             ;ASL                                    ;2
(1)  795/    CB63 :                                             ;STA emu_ptr,X                  ;4
(1)  795/    CB63 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  795/    CB63 :                                             ;ADC #0                                 ;2
(1)  795/    CB63 :                                             ;STA emu_ptr+1,X                ;4
(1)  795/    CB63 :                                             ;LDA (emu_ptr,X)                ;6
(1)  795/    CB63 :                                             ;STA emu_ptr2,X                 ;4
(1)  795/    CB63 :                                             ;INC emu_ptr,X                  ;6
(1)  795/    CB63 :                                             ;BCC .skip                              ;2
(1)  795/    CB63 :                                             ;       INC emu_ptr+1,X         ;6
(1)  795/    CB63 :                                             ;.skip:
(1)  795/    CB63 :                                             ;LDA (emu_ptr,X)                ;6
(1)  795/    CB63 :                                             ;STA emu_ptr2+1,X               ;4
(1)  795/    CB63 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  795/    CB63 :                                             
(1)  795/    CB63 :                                             ;Method 2 - 46 cycles
(1)  795/    CB63 :                                             ;Jump table must be page aligned!!!
(1)  795/    CB63 :                                             ;LDA (emu_PC,X)                 ;6
(1)  795/    CB63 :                                             ;STZ emu_ptr+1,X                ;4
(1)  795/    CB63 :                                             ;ASL                                    ;2
(1)  795/    CB63 :                                             ;ROL emu_ptr+1,X                ;6
(1)  795/    CB63 :                                             ;ASL                                    ;2
(1)  795/    CB63 :                                             ;ROL emu_ptr+1,X                ;6
(1)  795/    CB63 :                                             ;STA emu_ptr,X                  ;4                              
(1)  795/    CB63 :                                             ;LDA emu_ptr+1,X                ;4
(1)  795/    CB63 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  795/    CB63 :                                             ;STA emu_ptr+1,X                ;4
(1)  795/    CB63 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  795/    CB63 :                                             
(1)  795/    CB63 :                                             ;Method 3 - 30 cycles
(1)  795/    CB63 :                                             ;TXA                                                    ;2
(1)  795/    CB63 :                                             ;TAY                                                    ;2
(1)  795/    CB63 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  795/    CB63 :                                             ;ASL                                                    ;2
(1)  795/    CB63 :                                             ;BCS upper                                              ;2
(1)  795/    CB63 :                                             ;lower:
(1)  795/    CB63 :                                             ;       ASL                                                     ;2
(1)  795/    CB63 :                                             ;       TAX                                                     ;2
(1)  795/    CB63 :                                             ;       BCS upper_lower                         ;2
(1)  795/    CB63 :                                             ;       lower_lower:
(1)  795/    CB63 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  795/    CB63 :                                             ;       upper_lower:
(1)  795/    CB63 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  795/    CB63 :                                             ;upper:
(1)  795/    CB63 :                                             ;       ASL
(1)  795/    CB63 :                                             ;       TAX
(1)  795/    CB63 :                                             ;       BCS upper_upper
(1)  795/    CB63 :                                             ;       lower_upper:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 237 - 1/5/2022 11:50:53


(1)  795/    CB63 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  795/    CB63 :                                             ;       upper_upper:
(1)  795/    CB63 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  795/    CB63 :                                             ;After jump:
(1)  795/    CB63 :                                             ;TYA                                                    ;2
(1)  795/    CB63 :                                             ;TAX                                                    ;2
(1)  795/    CB63 :                                             
(1)  795/    CB63 :                                             ;Method 4 - 28 cycles
(1)  795/    CB63 :                                             ;LDA (emu_PC,X)                 ;6
(1)  795/    CB63 :                                             ;TAY                                    ;2
(1)  795/    CB63 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  795/    CB63 :                                             ;PHA                                    ;3
(1)  795/    CB63 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  795/    CB63 :                                             ;PHA                                    ;3
(1)  795/    CB63 :                                             ;RTS                                    ;6
(1)  795/    CB63 :                                             
(1)  795/    CB63 :                                             ;Method 5 - 30 cycles
(1)  795/    CB63 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  795/    CB65 : A8                                          TAY                                             ;2
(1)  795/    CB66 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  795/    CB69 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  795/    CB6B : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  795/    CB6E : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  795/    CB70 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  795/    CB73 :                                                                     
(1)  796/    CB73 :                     
(1)  797/    CB73 :                     	;0x9F - NOP
(1)  798/    CB73 :                     	NOP_0x9F:
(1)  799/    CB73 : (MACRO)             		OP_MACRO 159, "NOP", "IMP", "NOP_0x9F"
(1)  799/    CB73 :                                             ;TODO
(1)  800/    CB73 : (MACRO)             		NEXT_MACRO
(1)  800/    CB73 :                                             
(1)  800/    CB73 :  (MACRO-2)                                  halt
(1)  800/    CB73 : 00                                  BRK
(1)  800/    CB74 : 00                                  BRK
(1)  800/    CB75 :                                             
(1)  800/    CB75 :                                             ;Method 1 - 60 cycles
(1)  800/    CB75 :                                             ;Jump table must be page aligned!!!
(1)  800/    CB75 :                                             ;LDA (emu_PC,X)                 ;6
(1)  800/    CB75 :                                             ;ASL                                    ;2
(1)  800/    CB75 :                                             ;STA emu_ptr,X                  ;4
(1)  800/    CB75 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  800/    CB75 :                                             ;ADC #0                                 ;2
(1)  800/    CB75 :                                             ;STA emu_ptr+1,X                ;4
(1)  800/    CB75 :                                             ;LDA (emu_ptr,X)                ;6
(1)  800/    CB75 :                                             ;STA emu_ptr2,X                 ;4
(1)  800/    CB75 :                                             ;INC emu_ptr,X                  ;6
(1)  800/    CB75 :                                             ;BCC .skip                              ;2
(1)  800/    CB75 :                                             ;       INC emu_ptr+1,X         ;6
(1)  800/    CB75 :                                             ;.skip:
(1)  800/    CB75 :                                             ;LDA (emu_ptr,X)                ;6
(1)  800/    CB75 :                                             ;STA emu_ptr2+1,X               ;4
(1)  800/    CB75 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  800/    CB75 :                                             
(1)  800/    CB75 :                                             ;Method 2 - 46 cycles
(1)  800/    CB75 :                                             ;Jump table must be page aligned!!!
(1)  800/    CB75 :                                             ;LDA (emu_PC,X)                 ;6
(1)  800/    CB75 :                                             ;STZ emu_ptr+1,X                ;4
(1)  800/    CB75 :                                             ;ASL                                    ;2
(1)  800/    CB75 :                                             ;ROL emu_ptr+1,X                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 238 - 1/5/2022 11:50:53


(1)  800/    CB75 :                                             ;ASL                                    ;2
(1)  800/    CB75 :                                             ;ROL emu_ptr+1,X                ;6
(1)  800/    CB75 :                                             ;STA emu_ptr,X                  ;4                              
(1)  800/    CB75 :                                             ;LDA emu_ptr+1,X                ;4
(1)  800/    CB75 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  800/    CB75 :                                             ;STA emu_ptr+1,X                ;4
(1)  800/    CB75 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  800/    CB75 :                                             
(1)  800/    CB75 :                                             ;Method 3 - 30 cycles
(1)  800/    CB75 :                                             ;TXA                                                    ;2
(1)  800/    CB75 :                                             ;TAY                                                    ;2
(1)  800/    CB75 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  800/    CB75 :                                             ;ASL                                                    ;2
(1)  800/    CB75 :                                             ;BCS upper                                              ;2
(1)  800/    CB75 :                                             ;lower:
(1)  800/    CB75 :                                             ;       ASL                                                     ;2
(1)  800/    CB75 :                                             ;       TAX                                                     ;2
(1)  800/    CB75 :                                             ;       BCS upper_lower                         ;2
(1)  800/    CB75 :                                             ;       lower_lower:
(1)  800/    CB75 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  800/    CB75 :                                             ;       upper_lower:
(1)  800/    CB75 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  800/    CB75 :                                             ;upper:
(1)  800/    CB75 :                                             ;       ASL
(1)  800/    CB75 :                                             ;       TAX
(1)  800/    CB75 :                                             ;       BCS upper_upper
(1)  800/    CB75 :                                             ;       lower_upper:
(1)  800/    CB75 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  800/    CB75 :                                             ;       upper_upper:
(1)  800/    CB75 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  800/    CB75 :                                             ;After jump:
(1)  800/    CB75 :                                             ;TYA                                                    ;2
(1)  800/    CB75 :                                             ;TAX                                                    ;2
(1)  800/    CB75 :                                             
(1)  800/    CB75 :                                             ;Method 4 - 28 cycles
(1)  800/    CB75 :                                             ;LDA (emu_PC,X)                 ;6
(1)  800/    CB75 :                                             ;TAY                                    ;2
(1)  800/    CB75 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  800/    CB75 :                                             ;PHA                                    ;3
(1)  800/    CB75 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  800/    CB75 :                                             ;PHA                                    ;3
(1)  800/    CB75 :                                             ;RTS                                    ;6
(1)  800/    CB75 :                                             
(1)  800/    CB75 :                                             ;Method 5 - 30 cycles
(1)  800/    CB75 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  800/    CB77 : A8                                          TAY                                             ;2
(1)  800/    CB78 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  800/    CB7B : 95 0A                                       STA emu_ptr,X                   ;4
(1)  800/    CB7D : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  800/    CB80 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  800/    CB82 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  800/    CB85 :                                                                     
(1)  801/    CB85 :                     
(1)  802/    CB85 :                     	;0xA0 - LDY IMMED
(1)  803/    CB85 :                     	LDY_IMMED:
(1)  804/    CB85 : (MACRO)             		OP_MACRO 160, "LDY", "IMMED", "LDY_IMMED"
(1)  804/    CB85 :                                             ;TODO
(1)  805/    CB85 : (MACRO)             		NEXT_MACRO
(1)  805/    CB85 :                                             
(1)  805/    CB85 :  (MACRO-2)                                  halt
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 239 - 1/5/2022 11:50:53


(1)  805/    CB85 : 00                                  BRK
(1)  805/    CB86 : 00                                  BRK
(1)  805/    CB87 :                                             
(1)  805/    CB87 :                                             ;Method 1 - 60 cycles
(1)  805/    CB87 :                                             ;Jump table must be page aligned!!!
(1)  805/    CB87 :                                             ;LDA (emu_PC,X)                 ;6
(1)  805/    CB87 :                                             ;ASL                                    ;2
(1)  805/    CB87 :                                             ;STA emu_ptr,X                  ;4
(1)  805/    CB87 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  805/    CB87 :                                             ;ADC #0                                 ;2
(1)  805/    CB87 :                                             ;STA emu_ptr+1,X                ;4
(1)  805/    CB87 :                                             ;LDA (emu_ptr,X)                ;6
(1)  805/    CB87 :                                             ;STA emu_ptr2,X                 ;4
(1)  805/    CB87 :                                             ;INC emu_ptr,X                  ;6
(1)  805/    CB87 :                                             ;BCC .skip                              ;2
(1)  805/    CB87 :                                             ;       INC emu_ptr+1,X         ;6
(1)  805/    CB87 :                                             ;.skip:
(1)  805/    CB87 :                                             ;LDA (emu_ptr,X)                ;6
(1)  805/    CB87 :                                             ;STA emu_ptr2+1,X               ;4
(1)  805/    CB87 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  805/    CB87 :                                             
(1)  805/    CB87 :                                             ;Method 2 - 46 cycles
(1)  805/    CB87 :                                             ;Jump table must be page aligned!!!
(1)  805/    CB87 :                                             ;LDA (emu_PC,X)                 ;6
(1)  805/    CB87 :                                             ;STZ emu_ptr+1,X                ;4
(1)  805/    CB87 :                                             ;ASL                                    ;2
(1)  805/    CB87 :                                             ;ROL emu_ptr+1,X                ;6
(1)  805/    CB87 :                                             ;ASL                                    ;2
(1)  805/    CB87 :                                             ;ROL emu_ptr+1,X                ;6
(1)  805/    CB87 :                                             ;STA emu_ptr,X                  ;4                              
(1)  805/    CB87 :                                             ;LDA emu_ptr+1,X                ;4
(1)  805/    CB87 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  805/    CB87 :                                             ;STA emu_ptr+1,X                ;4
(1)  805/    CB87 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  805/    CB87 :                                             
(1)  805/    CB87 :                                             ;Method 3 - 30 cycles
(1)  805/    CB87 :                                             ;TXA                                                    ;2
(1)  805/    CB87 :                                             ;TAY                                                    ;2
(1)  805/    CB87 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  805/    CB87 :                                             ;ASL                                                    ;2
(1)  805/    CB87 :                                             ;BCS upper                                              ;2
(1)  805/    CB87 :                                             ;lower:
(1)  805/    CB87 :                                             ;       ASL                                                     ;2
(1)  805/    CB87 :                                             ;       TAX                                                     ;2
(1)  805/    CB87 :                                             ;       BCS upper_lower                         ;2
(1)  805/    CB87 :                                             ;       lower_lower:
(1)  805/    CB87 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  805/    CB87 :                                             ;       upper_lower:
(1)  805/    CB87 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  805/    CB87 :                                             ;upper:
(1)  805/    CB87 :                                             ;       ASL
(1)  805/    CB87 :                                             ;       TAX
(1)  805/    CB87 :                                             ;       BCS upper_upper
(1)  805/    CB87 :                                             ;       lower_upper:
(1)  805/    CB87 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  805/    CB87 :                                             ;       upper_upper:
(1)  805/    CB87 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  805/    CB87 :                                             ;After jump:
(1)  805/    CB87 :                                             ;TYA                                                    ;2
(1)  805/    CB87 :                                             ;TAX                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 240 - 1/5/2022 11:50:53


(1)  805/    CB87 :                                             
(1)  805/    CB87 :                                             ;Method 4 - 28 cycles
(1)  805/    CB87 :                                             ;LDA (emu_PC,X)                 ;6
(1)  805/    CB87 :                                             ;TAY                                    ;2
(1)  805/    CB87 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  805/    CB87 :                                             ;PHA                                    ;3
(1)  805/    CB87 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  805/    CB87 :                                             ;PHA                                    ;3
(1)  805/    CB87 :                                             ;RTS                                    ;6
(1)  805/    CB87 :                                             
(1)  805/    CB87 :                                             ;Method 5 - 30 cycles
(1)  805/    CB87 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  805/    CB89 : A8                                          TAY                                             ;2
(1)  805/    CB8A : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  805/    CB8D : 95 0A                                       STA emu_ptr,X                   ;4
(1)  805/    CB8F : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  805/    CB92 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  805/    CB94 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  805/    CB97 :                                                                     
(1)  806/    CB97 :                     
(1)  807/    CB97 :                     	;0xA1 - LDA IX
(1)  808/    CB97 :                     	LDA_IX:
(1)  809/    CB97 : (MACRO)             		OP_MACRO 161, "LDA", "IX", "LDA_IX"
(1)  809/    CB97 :                                             ;TODO
(1)  810/    CB97 : (MACRO)             		NEXT_MACRO
(1)  810/    CB97 :                                             
(1)  810/    CB97 :  (MACRO-2)                                  halt
(1)  810/    CB97 : 00                                  BRK
(1)  810/    CB98 : 00                                  BRK
(1)  810/    CB99 :                                             
(1)  810/    CB99 :                                             ;Method 1 - 60 cycles
(1)  810/    CB99 :                                             ;Jump table must be page aligned!!!
(1)  810/    CB99 :                                             ;LDA (emu_PC,X)                 ;6
(1)  810/    CB99 :                                             ;ASL                                    ;2
(1)  810/    CB99 :                                             ;STA emu_ptr,X                  ;4
(1)  810/    CB99 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  810/    CB99 :                                             ;ADC #0                                 ;2
(1)  810/    CB99 :                                             ;STA emu_ptr+1,X                ;4
(1)  810/    CB99 :                                             ;LDA (emu_ptr,X)                ;6
(1)  810/    CB99 :                                             ;STA emu_ptr2,X                 ;4
(1)  810/    CB99 :                                             ;INC emu_ptr,X                  ;6
(1)  810/    CB99 :                                             ;BCC .skip                              ;2
(1)  810/    CB99 :                                             ;       INC emu_ptr+1,X         ;6
(1)  810/    CB99 :                                             ;.skip:
(1)  810/    CB99 :                                             ;LDA (emu_ptr,X)                ;6
(1)  810/    CB99 :                                             ;STA emu_ptr2+1,X               ;4
(1)  810/    CB99 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  810/    CB99 :                                             
(1)  810/    CB99 :                                             ;Method 2 - 46 cycles
(1)  810/    CB99 :                                             ;Jump table must be page aligned!!!
(1)  810/    CB99 :                                             ;LDA (emu_PC,X)                 ;6
(1)  810/    CB99 :                                             ;STZ emu_ptr+1,X                ;4
(1)  810/    CB99 :                                             ;ASL                                    ;2
(1)  810/    CB99 :                                             ;ROL emu_ptr+1,X                ;6
(1)  810/    CB99 :                                             ;ASL                                    ;2
(1)  810/    CB99 :                                             ;ROL emu_ptr+1,X                ;6
(1)  810/    CB99 :                                             ;STA emu_ptr,X                  ;4                              
(1)  810/    CB99 :                                             ;LDA emu_ptr+1,X                ;4
(1)  810/    CB99 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  810/    CB99 :                                             ;STA emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 241 - 1/5/2022 11:50:53


(1)  810/    CB99 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  810/    CB99 :                                             
(1)  810/    CB99 :                                             ;Method 3 - 30 cycles
(1)  810/    CB99 :                                             ;TXA                                                    ;2
(1)  810/    CB99 :                                             ;TAY                                                    ;2
(1)  810/    CB99 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  810/    CB99 :                                             ;ASL                                                    ;2
(1)  810/    CB99 :                                             ;BCS upper                                              ;2
(1)  810/    CB99 :                                             ;lower:
(1)  810/    CB99 :                                             ;       ASL                                                     ;2
(1)  810/    CB99 :                                             ;       TAX                                                     ;2
(1)  810/    CB99 :                                             ;       BCS upper_lower                         ;2
(1)  810/    CB99 :                                             ;       lower_lower:
(1)  810/    CB99 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  810/    CB99 :                                             ;       upper_lower:
(1)  810/    CB99 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  810/    CB99 :                                             ;upper:
(1)  810/    CB99 :                                             ;       ASL
(1)  810/    CB99 :                                             ;       TAX
(1)  810/    CB99 :                                             ;       BCS upper_upper
(1)  810/    CB99 :                                             ;       lower_upper:
(1)  810/    CB99 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  810/    CB99 :                                             ;       upper_upper:
(1)  810/    CB99 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  810/    CB99 :                                             ;After jump:
(1)  810/    CB99 :                                             ;TYA                                                    ;2
(1)  810/    CB99 :                                             ;TAX                                                    ;2
(1)  810/    CB99 :                                             
(1)  810/    CB99 :                                             ;Method 4 - 28 cycles
(1)  810/    CB99 :                                             ;LDA (emu_PC,X)                 ;6
(1)  810/    CB99 :                                             ;TAY                                    ;2
(1)  810/    CB99 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  810/    CB99 :                                             ;PHA                                    ;3
(1)  810/    CB99 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  810/    CB99 :                                             ;PHA                                    ;3
(1)  810/    CB99 :                                             ;RTS                                    ;6
(1)  810/    CB99 :                                             
(1)  810/    CB99 :                                             ;Method 5 - 30 cycles
(1)  810/    CB99 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  810/    CB9B : A8                                          TAY                                             ;2
(1)  810/    CB9C : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  810/    CB9F : 95 0A                                       STA emu_ptr,X                   ;4
(1)  810/    CBA1 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  810/    CBA4 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  810/    CBA6 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  810/    CBA9 :                                                                     
(1)  811/    CBA9 :                     
(1)  812/    CBA9 :                     	;0xA2 - LDX IMMED
(1)  813/    CBA9 :                     	LDX_IMMED:
(1)  814/    CBA9 : (MACRO)             		OP_MACRO 162, "LDX", "IMMED", "LDX_IMMED"
(1)  814/    CBA9 :                                             ;TODO
(1)  815/    CBA9 : (MACRO)             		NEXT_MACRO
(1)  815/    CBA9 :                                             
(1)  815/    CBA9 :  (MACRO-2)                                  halt
(1)  815/    CBA9 : 00                                  BRK
(1)  815/    CBAA : 00                                  BRK
(1)  815/    CBAB :                                             
(1)  815/    CBAB :                                             ;Method 1 - 60 cycles
(1)  815/    CBAB :                                             ;Jump table must be page aligned!!!
(1)  815/    CBAB :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 242 - 1/5/2022 11:50:53


(1)  815/    CBAB :                                             ;ASL                                    ;2
(1)  815/    CBAB :                                             ;STA emu_ptr,X                  ;4
(1)  815/    CBAB :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  815/    CBAB :                                             ;ADC #0                                 ;2
(1)  815/    CBAB :                                             ;STA emu_ptr+1,X                ;4
(1)  815/    CBAB :                                             ;LDA (emu_ptr,X)                ;6
(1)  815/    CBAB :                                             ;STA emu_ptr2,X                 ;4
(1)  815/    CBAB :                                             ;INC emu_ptr,X                  ;6
(1)  815/    CBAB :                                             ;BCC .skip                              ;2
(1)  815/    CBAB :                                             ;       INC emu_ptr+1,X         ;6
(1)  815/    CBAB :                                             ;.skip:
(1)  815/    CBAB :                                             ;LDA (emu_ptr,X)                ;6
(1)  815/    CBAB :                                             ;STA emu_ptr2+1,X               ;4
(1)  815/    CBAB :                                             ;JMP (emu_ptr2,X)               ;6
(1)  815/    CBAB :                                             
(1)  815/    CBAB :                                             ;Method 2 - 46 cycles
(1)  815/    CBAB :                                             ;Jump table must be page aligned!!!
(1)  815/    CBAB :                                             ;LDA (emu_PC,X)                 ;6
(1)  815/    CBAB :                                             ;STZ emu_ptr+1,X                ;4
(1)  815/    CBAB :                                             ;ASL                                    ;2
(1)  815/    CBAB :                                             ;ROL emu_ptr+1,X                ;6
(1)  815/    CBAB :                                             ;ASL                                    ;2
(1)  815/    CBAB :                                             ;ROL emu_ptr+1,X                ;6
(1)  815/    CBAB :                                             ;STA emu_ptr,X                  ;4                              
(1)  815/    CBAB :                                             ;LDA emu_ptr+1,X                ;4
(1)  815/    CBAB :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  815/    CBAB :                                             ;STA emu_ptr+1,X                ;4
(1)  815/    CBAB :                                             ;JMP (emu_ptr2,X)               ;6
(1)  815/    CBAB :                                             
(1)  815/    CBAB :                                             ;Method 3 - 30 cycles
(1)  815/    CBAB :                                             ;TXA                                                    ;2
(1)  815/    CBAB :                                             ;TAY                                                    ;2
(1)  815/    CBAB :                                             ;LDA (emu_PC,X)                                 ;6
(1)  815/    CBAB :                                             ;ASL                                                    ;2
(1)  815/    CBAB :                                             ;BCS upper                                              ;2
(1)  815/    CBAB :                                             ;lower:
(1)  815/    CBAB :                                             ;       ASL                                                     ;2
(1)  815/    CBAB :                                             ;       TAX                                                     ;2
(1)  815/    CBAB :                                             ;       BCS upper_lower                         ;2
(1)  815/    CBAB :                                             ;       lower_lower:
(1)  815/    CBAB :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  815/    CBAB :                                             ;       upper_lower:
(1)  815/    CBAB :                                             ;               JMP (JUMP_TABLE2,X)
(1)  815/    CBAB :                                             ;upper:
(1)  815/    CBAB :                                             ;       ASL
(1)  815/    CBAB :                                             ;       TAX
(1)  815/    CBAB :                                             ;       BCS upper_upper
(1)  815/    CBAB :                                             ;       lower_upper:
(1)  815/    CBAB :                                             ;               JMP (JUMP_TABLE3,X)
(1)  815/    CBAB :                                             ;       upper_upper:
(1)  815/    CBAB :                                             ;               JMP (JUMP_TABLE4,X)
(1)  815/    CBAB :                                             ;After jump:
(1)  815/    CBAB :                                             ;TYA                                                    ;2
(1)  815/    CBAB :                                             ;TAX                                                    ;2
(1)  815/    CBAB :                                             
(1)  815/    CBAB :                                             ;Method 4 - 28 cycles
(1)  815/    CBAB :                                             ;LDA (emu_PC,X)                 ;6
(1)  815/    CBAB :                                             ;TAY                                    ;2
(1)  815/    CBAB :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  815/    CBAB :                                             ;PHA                                    ;3
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 243 - 1/5/2022 11:50:53


(1)  815/    CBAB :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  815/    CBAB :                                             ;PHA                                    ;3
(1)  815/    CBAB :                                             ;RTS                                    ;6
(1)  815/    CBAB :                                             
(1)  815/    CBAB :                                             ;Method 5 - 30 cycles
(1)  815/    CBAB : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  815/    CBAD : A8                                          TAY                                             ;2
(1)  815/    CBAE : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  815/    CBB1 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  815/    CBB3 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  815/    CBB6 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  815/    CBB8 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  815/    CBBB :                                                                     
(1)  816/    CBBB :                     
(1)  817/    CBBB :                     	;0xA3 - NOP
(1)  818/    CBBB :                     	NOP_0xA3:
(1)  819/    CBBB : (MACRO)             		OP_MACRO 163, "NOP", "IMP", "NOP_0xA3"
(1)  819/    CBBB :                                             ;TODO
(1)  820/    CBBB : (MACRO)             		NEXT_MACRO
(1)  820/    CBBB :                                             
(1)  820/    CBBB :  (MACRO-2)                                  halt
(1)  820/    CBBB : 00                                  BRK
(1)  820/    CBBC : 00                                  BRK
(1)  820/    CBBD :                                             
(1)  820/    CBBD :                                             ;Method 1 - 60 cycles
(1)  820/    CBBD :                                             ;Jump table must be page aligned!!!
(1)  820/    CBBD :                                             ;LDA (emu_PC,X)                 ;6
(1)  820/    CBBD :                                             ;ASL                                    ;2
(1)  820/    CBBD :                                             ;STA emu_ptr,X                  ;4
(1)  820/    CBBD :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  820/    CBBD :                                             ;ADC #0                                 ;2
(1)  820/    CBBD :                                             ;STA emu_ptr+1,X                ;4
(1)  820/    CBBD :                                             ;LDA (emu_ptr,X)                ;6
(1)  820/    CBBD :                                             ;STA emu_ptr2,X                 ;4
(1)  820/    CBBD :                                             ;INC emu_ptr,X                  ;6
(1)  820/    CBBD :                                             ;BCC .skip                              ;2
(1)  820/    CBBD :                                             ;       INC emu_ptr+1,X         ;6
(1)  820/    CBBD :                                             ;.skip:
(1)  820/    CBBD :                                             ;LDA (emu_ptr,X)                ;6
(1)  820/    CBBD :                                             ;STA emu_ptr2+1,X               ;4
(1)  820/    CBBD :                                             ;JMP (emu_ptr2,X)               ;6
(1)  820/    CBBD :                                             
(1)  820/    CBBD :                                             ;Method 2 - 46 cycles
(1)  820/    CBBD :                                             ;Jump table must be page aligned!!!
(1)  820/    CBBD :                                             ;LDA (emu_PC,X)                 ;6
(1)  820/    CBBD :                                             ;STZ emu_ptr+1,X                ;4
(1)  820/    CBBD :                                             ;ASL                                    ;2
(1)  820/    CBBD :                                             ;ROL emu_ptr+1,X                ;6
(1)  820/    CBBD :                                             ;ASL                                    ;2
(1)  820/    CBBD :                                             ;ROL emu_ptr+1,X                ;6
(1)  820/    CBBD :                                             ;STA emu_ptr,X                  ;4                              
(1)  820/    CBBD :                                             ;LDA emu_ptr+1,X                ;4
(1)  820/    CBBD :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  820/    CBBD :                                             ;STA emu_ptr+1,X                ;4
(1)  820/    CBBD :                                             ;JMP (emu_ptr2,X)               ;6
(1)  820/    CBBD :                                             
(1)  820/    CBBD :                                             ;Method 3 - 30 cycles
(1)  820/    CBBD :                                             ;TXA                                                    ;2
(1)  820/    CBBD :                                             ;TAY                                                    ;2
(1)  820/    CBBD :                                             ;LDA (emu_PC,X)                                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 244 - 1/5/2022 11:50:53


(1)  820/    CBBD :                                             ;ASL                                                    ;2
(1)  820/    CBBD :                                             ;BCS upper                                              ;2
(1)  820/    CBBD :                                             ;lower:
(1)  820/    CBBD :                                             ;       ASL                                                     ;2
(1)  820/    CBBD :                                             ;       TAX                                                     ;2
(1)  820/    CBBD :                                             ;       BCS upper_lower                         ;2
(1)  820/    CBBD :                                             ;       lower_lower:
(1)  820/    CBBD :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  820/    CBBD :                                             ;       upper_lower:
(1)  820/    CBBD :                                             ;               JMP (JUMP_TABLE2,X)
(1)  820/    CBBD :                                             ;upper:
(1)  820/    CBBD :                                             ;       ASL
(1)  820/    CBBD :                                             ;       TAX
(1)  820/    CBBD :                                             ;       BCS upper_upper
(1)  820/    CBBD :                                             ;       lower_upper:
(1)  820/    CBBD :                                             ;               JMP (JUMP_TABLE3,X)
(1)  820/    CBBD :                                             ;       upper_upper:
(1)  820/    CBBD :                                             ;               JMP (JUMP_TABLE4,X)
(1)  820/    CBBD :                                             ;After jump:
(1)  820/    CBBD :                                             ;TYA                                                    ;2
(1)  820/    CBBD :                                             ;TAX                                                    ;2
(1)  820/    CBBD :                                             
(1)  820/    CBBD :                                             ;Method 4 - 28 cycles
(1)  820/    CBBD :                                             ;LDA (emu_PC,X)                 ;6
(1)  820/    CBBD :                                             ;TAY                                    ;2
(1)  820/    CBBD :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  820/    CBBD :                                             ;PHA                                    ;3
(1)  820/    CBBD :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  820/    CBBD :                                             ;PHA                                    ;3
(1)  820/    CBBD :                                             ;RTS                                    ;6
(1)  820/    CBBD :                                             
(1)  820/    CBBD :                                             ;Method 5 - 30 cycles
(1)  820/    CBBD : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  820/    CBBF : A8                                          TAY                                             ;2
(1)  820/    CBC0 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  820/    CBC3 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  820/    CBC5 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  820/    CBC8 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  820/    CBCA : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  820/    CBCD :                                                                     
(1)  821/    CBCD :                     
(1)  822/    CBCD :                     	;0xA4 - LDY ZP
(1)  823/    CBCD :                     	LDY_ZP:
(1)  824/    CBCD : (MACRO)             		OP_MACRO 164, "LDY", "ZP", "LDY_ZP"
(1)  824/    CBCD :                                             ;TODO
(1)  825/    CBCD : (MACRO)             		NEXT_MACRO
(1)  825/    CBCD :                                             
(1)  825/    CBCD :  (MACRO-2)                                  halt
(1)  825/    CBCD : 00                                  BRK
(1)  825/    CBCE : 00                                  BRK
(1)  825/    CBCF :                                             
(1)  825/    CBCF :                                             ;Method 1 - 60 cycles
(1)  825/    CBCF :                                             ;Jump table must be page aligned!!!
(1)  825/    CBCF :                                             ;LDA (emu_PC,X)                 ;6
(1)  825/    CBCF :                                             ;ASL                                    ;2
(1)  825/    CBCF :                                             ;STA emu_ptr,X                  ;4
(1)  825/    CBCF :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  825/    CBCF :                                             ;ADC #0                                 ;2
(1)  825/    CBCF :                                             ;STA emu_ptr+1,X                ;4
(1)  825/    CBCF :                                             ;LDA (emu_ptr,X)                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 245 - 1/5/2022 11:50:53


(1)  825/    CBCF :                                             ;STA emu_ptr2,X                 ;4
(1)  825/    CBCF :                                             ;INC emu_ptr,X                  ;6
(1)  825/    CBCF :                                             ;BCC .skip                              ;2
(1)  825/    CBCF :                                             ;       INC emu_ptr+1,X         ;6
(1)  825/    CBCF :                                             ;.skip:
(1)  825/    CBCF :                                             ;LDA (emu_ptr,X)                ;6
(1)  825/    CBCF :                                             ;STA emu_ptr2+1,X               ;4
(1)  825/    CBCF :                                             ;JMP (emu_ptr2,X)               ;6
(1)  825/    CBCF :                                             
(1)  825/    CBCF :                                             ;Method 2 - 46 cycles
(1)  825/    CBCF :                                             ;Jump table must be page aligned!!!
(1)  825/    CBCF :                                             ;LDA (emu_PC,X)                 ;6
(1)  825/    CBCF :                                             ;STZ emu_ptr+1,X                ;4
(1)  825/    CBCF :                                             ;ASL                                    ;2
(1)  825/    CBCF :                                             ;ROL emu_ptr+1,X                ;6
(1)  825/    CBCF :                                             ;ASL                                    ;2
(1)  825/    CBCF :                                             ;ROL emu_ptr+1,X                ;6
(1)  825/    CBCF :                                             ;STA emu_ptr,X                  ;4                              
(1)  825/    CBCF :                                             ;LDA emu_ptr+1,X                ;4
(1)  825/    CBCF :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  825/    CBCF :                                             ;STA emu_ptr+1,X                ;4
(1)  825/    CBCF :                                             ;JMP (emu_ptr2,X)               ;6
(1)  825/    CBCF :                                             
(1)  825/    CBCF :                                             ;Method 3 - 30 cycles
(1)  825/    CBCF :                                             ;TXA                                                    ;2
(1)  825/    CBCF :                                             ;TAY                                                    ;2
(1)  825/    CBCF :                                             ;LDA (emu_PC,X)                                 ;6
(1)  825/    CBCF :                                             ;ASL                                                    ;2
(1)  825/    CBCF :                                             ;BCS upper                                              ;2
(1)  825/    CBCF :                                             ;lower:
(1)  825/    CBCF :                                             ;       ASL                                                     ;2
(1)  825/    CBCF :                                             ;       TAX                                                     ;2
(1)  825/    CBCF :                                             ;       BCS upper_lower                         ;2
(1)  825/    CBCF :                                             ;       lower_lower:
(1)  825/    CBCF :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  825/    CBCF :                                             ;       upper_lower:
(1)  825/    CBCF :                                             ;               JMP (JUMP_TABLE2,X)
(1)  825/    CBCF :                                             ;upper:
(1)  825/    CBCF :                                             ;       ASL
(1)  825/    CBCF :                                             ;       TAX
(1)  825/    CBCF :                                             ;       BCS upper_upper
(1)  825/    CBCF :                                             ;       lower_upper:
(1)  825/    CBCF :                                             ;               JMP (JUMP_TABLE3,X)
(1)  825/    CBCF :                                             ;       upper_upper:
(1)  825/    CBCF :                                             ;               JMP (JUMP_TABLE4,X)
(1)  825/    CBCF :                                             ;After jump:
(1)  825/    CBCF :                                             ;TYA                                                    ;2
(1)  825/    CBCF :                                             ;TAX                                                    ;2
(1)  825/    CBCF :                                             
(1)  825/    CBCF :                                             ;Method 4 - 28 cycles
(1)  825/    CBCF :                                             ;LDA (emu_PC,X)                 ;6
(1)  825/    CBCF :                                             ;TAY                                    ;2
(1)  825/    CBCF :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  825/    CBCF :                                             ;PHA                                    ;3
(1)  825/    CBCF :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  825/    CBCF :                                             ;PHA                                    ;3
(1)  825/    CBCF :                                             ;RTS                                    ;6
(1)  825/    CBCF :                                             
(1)  825/    CBCF :                                             ;Method 5 - 30 cycles
(1)  825/    CBCF : A1 02                                       LDA (emu_PC,X)                  ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 246 - 1/5/2022 11:50:53


(1)  825/    CBD1 : A8                                          TAY                                             ;2
(1)  825/    CBD2 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  825/    CBD5 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  825/    CBD7 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  825/    CBDA : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  825/    CBDC : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  825/    CBDF :                                                                     
(1)  826/    CBDF :                     
(1)  827/    CBDF :                     	;0xA5 - LDA ZP
(1)  828/    CBDF :                     	LDA_ZP:
(1)  829/    CBDF : (MACRO)             		OP_MACRO 165, "LDA", "ZP", "LDA_ZP"
(1)  829/    CBDF :                                             ;TODO
(1)  830/    CBDF : (MACRO)             		NEXT_MACRO
(1)  830/    CBDF :                                             
(1)  830/    CBDF :  (MACRO-2)                                  halt
(1)  830/    CBDF : 00                                  BRK
(1)  830/    CBE0 : 00                                  BRK
(1)  830/    CBE1 :                                             
(1)  830/    CBE1 :                                             ;Method 1 - 60 cycles
(1)  830/    CBE1 :                                             ;Jump table must be page aligned!!!
(1)  830/    CBE1 :                                             ;LDA (emu_PC,X)                 ;6
(1)  830/    CBE1 :                                             ;ASL                                    ;2
(1)  830/    CBE1 :                                             ;STA emu_ptr,X                  ;4
(1)  830/    CBE1 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  830/    CBE1 :                                             ;ADC #0                                 ;2
(1)  830/    CBE1 :                                             ;STA emu_ptr+1,X                ;4
(1)  830/    CBE1 :                                             ;LDA (emu_ptr,X)                ;6
(1)  830/    CBE1 :                                             ;STA emu_ptr2,X                 ;4
(1)  830/    CBE1 :                                             ;INC emu_ptr,X                  ;6
(1)  830/    CBE1 :                                             ;BCC .skip                              ;2
(1)  830/    CBE1 :                                             ;       INC emu_ptr+1,X         ;6
(1)  830/    CBE1 :                                             ;.skip:
(1)  830/    CBE1 :                                             ;LDA (emu_ptr,X)                ;6
(1)  830/    CBE1 :                                             ;STA emu_ptr2+1,X               ;4
(1)  830/    CBE1 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  830/    CBE1 :                                             
(1)  830/    CBE1 :                                             ;Method 2 - 46 cycles
(1)  830/    CBE1 :                                             ;Jump table must be page aligned!!!
(1)  830/    CBE1 :                                             ;LDA (emu_PC,X)                 ;6
(1)  830/    CBE1 :                                             ;STZ emu_ptr+1,X                ;4
(1)  830/    CBE1 :                                             ;ASL                                    ;2
(1)  830/    CBE1 :                                             ;ROL emu_ptr+1,X                ;6
(1)  830/    CBE1 :                                             ;ASL                                    ;2
(1)  830/    CBE1 :                                             ;ROL emu_ptr+1,X                ;6
(1)  830/    CBE1 :                                             ;STA emu_ptr,X                  ;4                              
(1)  830/    CBE1 :                                             ;LDA emu_ptr+1,X                ;4
(1)  830/    CBE1 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  830/    CBE1 :                                             ;STA emu_ptr+1,X                ;4
(1)  830/    CBE1 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  830/    CBE1 :                                             
(1)  830/    CBE1 :                                             ;Method 3 - 30 cycles
(1)  830/    CBE1 :                                             ;TXA                                                    ;2
(1)  830/    CBE1 :                                             ;TAY                                                    ;2
(1)  830/    CBE1 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  830/    CBE1 :                                             ;ASL                                                    ;2
(1)  830/    CBE1 :                                             ;BCS upper                                              ;2
(1)  830/    CBE1 :                                             ;lower:
(1)  830/    CBE1 :                                             ;       ASL                                                     ;2
(1)  830/    CBE1 :                                             ;       TAX                                                     ;2
(1)  830/    CBE1 :                                             ;       BCS upper_lower                         ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 247 - 1/5/2022 11:50:53


(1)  830/    CBE1 :                                             ;       lower_lower:
(1)  830/    CBE1 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  830/    CBE1 :                                             ;       upper_lower:
(1)  830/    CBE1 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  830/    CBE1 :                                             ;upper:
(1)  830/    CBE1 :                                             ;       ASL
(1)  830/    CBE1 :                                             ;       TAX
(1)  830/    CBE1 :                                             ;       BCS upper_upper
(1)  830/    CBE1 :                                             ;       lower_upper:
(1)  830/    CBE1 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  830/    CBE1 :                                             ;       upper_upper:
(1)  830/    CBE1 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  830/    CBE1 :                                             ;After jump:
(1)  830/    CBE1 :                                             ;TYA                                                    ;2
(1)  830/    CBE1 :                                             ;TAX                                                    ;2
(1)  830/    CBE1 :                                             
(1)  830/    CBE1 :                                             ;Method 4 - 28 cycles
(1)  830/    CBE1 :                                             ;LDA (emu_PC,X)                 ;6
(1)  830/    CBE1 :                                             ;TAY                                    ;2
(1)  830/    CBE1 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  830/    CBE1 :                                             ;PHA                                    ;3
(1)  830/    CBE1 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  830/    CBE1 :                                             ;PHA                                    ;3
(1)  830/    CBE1 :                                             ;RTS                                    ;6
(1)  830/    CBE1 :                                             
(1)  830/    CBE1 :                                             ;Method 5 - 30 cycles
(1)  830/    CBE1 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  830/    CBE3 : A8                                          TAY                                             ;2
(1)  830/    CBE4 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  830/    CBE7 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  830/    CBE9 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  830/    CBEC : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  830/    CBEE : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  830/    CBF1 :                                                                     
(1)  831/    CBF1 :                     
(1)  832/    CBF1 :                     	;0xA6 - LDX ZP
(1)  833/    CBF1 :                     	LDX_ZP:
(1)  834/    CBF1 : (MACRO)             		OP_MACRO 166, "LDX", "ZP", "LDX_ZP"
(1)  834/    CBF1 :                                             ;TODO
(1)  835/    CBF1 : (MACRO)             		NEXT_MACRO
(1)  835/    CBF1 :                                             
(1)  835/    CBF1 :  (MACRO-2)                                  halt
(1)  835/    CBF1 : 00                                  BRK
(1)  835/    CBF2 : 00                                  BRK
(1)  835/    CBF3 :                                             
(1)  835/    CBF3 :                                             ;Method 1 - 60 cycles
(1)  835/    CBF3 :                                             ;Jump table must be page aligned!!!
(1)  835/    CBF3 :                                             ;LDA (emu_PC,X)                 ;6
(1)  835/    CBF3 :                                             ;ASL                                    ;2
(1)  835/    CBF3 :                                             ;STA emu_ptr,X                  ;4
(1)  835/    CBF3 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  835/    CBF3 :                                             ;ADC #0                                 ;2
(1)  835/    CBF3 :                                             ;STA emu_ptr+1,X                ;4
(1)  835/    CBF3 :                                             ;LDA (emu_ptr,X)                ;6
(1)  835/    CBF3 :                                             ;STA emu_ptr2,X                 ;4
(1)  835/    CBF3 :                                             ;INC emu_ptr,X                  ;6
(1)  835/    CBF3 :                                             ;BCC .skip                              ;2
(1)  835/    CBF3 :                                             ;       INC emu_ptr+1,X         ;6
(1)  835/    CBF3 :                                             ;.skip:
(1)  835/    CBF3 :                                             ;LDA (emu_ptr,X)                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 248 - 1/5/2022 11:50:53


(1)  835/    CBF3 :                                             ;STA emu_ptr2+1,X               ;4
(1)  835/    CBF3 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  835/    CBF3 :                                             
(1)  835/    CBF3 :                                             ;Method 2 - 46 cycles
(1)  835/    CBF3 :                                             ;Jump table must be page aligned!!!
(1)  835/    CBF3 :                                             ;LDA (emu_PC,X)                 ;6
(1)  835/    CBF3 :                                             ;STZ emu_ptr+1,X                ;4
(1)  835/    CBF3 :                                             ;ASL                                    ;2
(1)  835/    CBF3 :                                             ;ROL emu_ptr+1,X                ;6
(1)  835/    CBF3 :                                             ;ASL                                    ;2
(1)  835/    CBF3 :                                             ;ROL emu_ptr+1,X                ;6
(1)  835/    CBF3 :                                             ;STA emu_ptr,X                  ;4                              
(1)  835/    CBF3 :                                             ;LDA emu_ptr+1,X                ;4
(1)  835/    CBF3 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  835/    CBF3 :                                             ;STA emu_ptr+1,X                ;4
(1)  835/    CBF3 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  835/    CBF3 :                                             
(1)  835/    CBF3 :                                             ;Method 3 - 30 cycles
(1)  835/    CBF3 :                                             ;TXA                                                    ;2
(1)  835/    CBF3 :                                             ;TAY                                                    ;2
(1)  835/    CBF3 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  835/    CBF3 :                                             ;ASL                                                    ;2
(1)  835/    CBF3 :                                             ;BCS upper                                              ;2
(1)  835/    CBF3 :                                             ;lower:
(1)  835/    CBF3 :                                             ;       ASL                                                     ;2
(1)  835/    CBF3 :                                             ;       TAX                                                     ;2
(1)  835/    CBF3 :                                             ;       BCS upper_lower                         ;2
(1)  835/    CBF3 :                                             ;       lower_lower:
(1)  835/    CBF3 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  835/    CBF3 :                                             ;       upper_lower:
(1)  835/    CBF3 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  835/    CBF3 :                                             ;upper:
(1)  835/    CBF3 :                                             ;       ASL
(1)  835/    CBF3 :                                             ;       TAX
(1)  835/    CBF3 :                                             ;       BCS upper_upper
(1)  835/    CBF3 :                                             ;       lower_upper:
(1)  835/    CBF3 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  835/    CBF3 :                                             ;       upper_upper:
(1)  835/    CBF3 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  835/    CBF3 :                                             ;After jump:
(1)  835/    CBF3 :                                             ;TYA                                                    ;2
(1)  835/    CBF3 :                                             ;TAX                                                    ;2
(1)  835/    CBF3 :                                             
(1)  835/    CBF3 :                                             ;Method 4 - 28 cycles
(1)  835/    CBF3 :                                             ;LDA (emu_PC,X)                 ;6
(1)  835/    CBF3 :                                             ;TAY                                    ;2
(1)  835/    CBF3 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  835/    CBF3 :                                             ;PHA                                    ;3
(1)  835/    CBF3 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  835/    CBF3 :                                             ;PHA                                    ;3
(1)  835/    CBF3 :                                             ;RTS                                    ;6
(1)  835/    CBF3 :                                             
(1)  835/    CBF3 :                                             ;Method 5 - 30 cycles
(1)  835/    CBF3 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  835/    CBF5 : A8                                          TAY                                             ;2
(1)  835/    CBF6 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  835/    CBF9 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  835/    CBFB : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  835/    CBFE : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  835/    CC00 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 249 - 1/5/2022 11:50:53


(1)  835/    CC03 :                                                                     
(1)  836/    CC03 :                     
(1)  837/    CC03 :                     	;0xA7 - NOP
(1)  838/    CC03 :                     	NOP_0xA7:
(1)  839/    CC03 : (MACRO)             		OP_MACRO 167, "NOP", "IMP", "NOP_0xA7"
(1)  839/    CC03 :                                             ;TODO
(1)  840/    CC03 : (MACRO)             		NEXT_MACRO
(1)  840/    CC03 :                                             
(1)  840/    CC03 :  (MACRO-2)                                  halt
(1)  840/    CC03 : 00                                  BRK
(1)  840/    CC04 : 00                                  BRK
(1)  840/    CC05 :                                             
(1)  840/    CC05 :                                             ;Method 1 - 60 cycles
(1)  840/    CC05 :                                             ;Jump table must be page aligned!!!
(1)  840/    CC05 :                                             ;LDA (emu_PC,X)                 ;6
(1)  840/    CC05 :                                             ;ASL                                    ;2
(1)  840/    CC05 :                                             ;STA emu_ptr,X                  ;4
(1)  840/    CC05 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  840/    CC05 :                                             ;ADC #0                                 ;2
(1)  840/    CC05 :                                             ;STA emu_ptr+1,X                ;4
(1)  840/    CC05 :                                             ;LDA (emu_ptr,X)                ;6
(1)  840/    CC05 :                                             ;STA emu_ptr2,X                 ;4
(1)  840/    CC05 :                                             ;INC emu_ptr,X                  ;6
(1)  840/    CC05 :                                             ;BCC .skip                              ;2
(1)  840/    CC05 :                                             ;       INC emu_ptr+1,X         ;6
(1)  840/    CC05 :                                             ;.skip:
(1)  840/    CC05 :                                             ;LDA (emu_ptr,X)                ;6
(1)  840/    CC05 :                                             ;STA emu_ptr2+1,X               ;4
(1)  840/    CC05 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  840/    CC05 :                                             
(1)  840/    CC05 :                                             ;Method 2 - 46 cycles
(1)  840/    CC05 :                                             ;Jump table must be page aligned!!!
(1)  840/    CC05 :                                             ;LDA (emu_PC,X)                 ;6
(1)  840/    CC05 :                                             ;STZ emu_ptr+1,X                ;4
(1)  840/    CC05 :                                             ;ASL                                    ;2
(1)  840/    CC05 :                                             ;ROL emu_ptr+1,X                ;6
(1)  840/    CC05 :                                             ;ASL                                    ;2
(1)  840/    CC05 :                                             ;ROL emu_ptr+1,X                ;6
(1)  840/    CC05 :                                             ;STA emu_ptr,X                  ;4                              
(1)  840/    CC05 :                                             ;LDA emu_ptr+1,X                ;4
(1)  840/    CC05 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  840/    CC05 :                                             ;STA emu_ptr+1,X                ;4
(1)  840/    CC05 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  840/    CC05 :                                             
(1)  840/    CC05 :                                             ;Method 3 - 30 cycles
(1)  840/    CC05 :                                             ;TXA                                                    ;2
(1)  840/    CC05 :                                             ;TAY                                                    ;2
(1)  840/    CC05 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  840/    CC05 :                                             ;ASL                                                    ;2
(1)  840/    CC05 :                                             ;BCS upper                                              ;2
(1)  840/    CC05 :                                             ;lower:
(1)  840/    CC05 :                                             ;       ASL                                                     ;2
(1)  840/    CC05 :                                             ;       TAX                                                     ;2
(1)  840/    CC05 :                                             ;       BCS upper_lower                         ;2
(1)  840/    CC05 :                                             ;       lower_lower:
(1)  840/    CC05 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  840/    CC05 :                                             ;       upper_lower:
(1)  840/    CC05 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  840/    CC05 :                                             ;upper:
(1)  840/    CC05 :                                             ;       ASL
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 250 - 1/5/2022 11:50:53


(1)  840/    CC05 :                                             ;       TAX
(1)  840/    CC05 :                                             ;       BCS upper_upper
(1)  840/    CC05 :                                             ;       lower_upper:
(1)  840/    CC05 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  840/    CC05 :                                             ;       upper_upper:
(1)  840/    CC05 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  840/    CC05 :                                             ;After jump:
(1)  840/    CC05 :                                             ;TYA                                                    ;2
(1)  840/    CC05 :                                             ;TAX                                                    ;2
(1)  840/    CC05 :                                             
(1)  840/    CC05 :                                             ;Method 4 - 28 cycles
(1)  840/    CC05 :                                             ;LDA (emu_PC,X)                 ;6
(1)  840/    CC05 :                                             ;TAY                                    ;2
(1)  840/    CC05 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  840/    CC05 :                                             ;PHA                                    ;3
(1)  840/    CC05 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  840/    CC05 :                                             ;PHA                                    ;3
(1)  840/    CC05 :                                             ;RTS                                    ;6
(1)  840/    CC05 :                                             
(1)  840/    CC05 :                                             ;Method 5 - 30 cycles
(1)  840/    CC05 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  840/    CC07 : A8                                          TAY                                             ;2
(1)  840/    CC08 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  840/    CC0B : 95 0A                                       STA emu_ptr,X                   ;4
(1)  840/    CC0D : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  840/    CC10 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  840/    CC12 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  840/    CC15 :                                                                     
(1)  841/    CC15 :                     
(1)  842/    CC15 :                     	;0xA8 - TAY IMP
(1)  843/    CC15 :                     	TAY_IMP:
(1)  844/    CC15 : (MACRO)             		OP_MACRO 168, "TAY", "IMP", "TAY_IMP"
(1)  844/    CC15 :                                             ;TODO
(1)  845/    CC15 : (MACRO)             		NEXT_MACRO
(1)  845/    CC15 :                                             
(1)  845/    CC15 :  (MACRO-2)                                  halt
(1)  845/    CC15 : 00                                  BRK
(1)  845/    CC16 : 00                                  BRK
(1)  845/    CC17 :                                             
(1)  845/    CC17 :                                             ;Method 1 - 60 cycles
(1)  845/    CC17 :                                             ;Jump table must be page aligned!!!
(1)  845/    CC17 :                                             ;LDA (emu_PC,X)                 ;6
(1)  845/    CC17 :                                             ;ASL                                    ;2
(1)  845/    CC17 :                                             ;STA emu_ptr,X                  ;4
(1)  845/    CC17 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  845/    CC17 :                                             ;ADC #0                                 ;2
(1)  845/    CC17 :                                             ;STA emu_ptr+1,X                ;4
(1)  845/    CC17 :                                             ;LDA (emu_ptr,X)                ;6
(1)  845/    CC17 :                                             ;STA emu_ptr2,X                 ;4
(1)  845/    CC17 :                                             ;INC emu_ptr,X                  ;6
(1)  845/    CC17 :                                             ;BCC .skip                              ;2
(1)  845/    CC17 :                                             ;       INC emu_ptr+1,X         ;6
(1)  845/    CC17 :                                             ;.skip:
(1)  845/    CC17 :                                             ;LDA (emu_ptr,X)                ;6
(1)  845/    CC17 :                                             ;STA emu_ptr2+1,X               ;4
(1)  845/    CC17 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  845/    CC17 :                                             
(1)  845/    CC17 :                                             ;Method 2 - 46 cycles
(1)  845/    CC17 :                                             ;Jump table must be page aligned!!!
(1)  845/    CC17 :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 251 - 1/5/2022 11:50:53


(1)  845/    CC17 :                                             ;STZ emu_ptr+1,X                ;4
(1)  845/    CC17 :                                             ;ASL                                    ;2
(1)  845/    CC17 :                                             ;ROL emu_ptr+1,X                ;6
(1)  845/    CC17 :                                             ;ASL                                    ;2
(1)  845/    CC17 :                                             ;ROL emu_ptr+1,X                ;6
(1)  845/    CC17 :                                             ;STA emu_ptr,X                  ;4                              
(1)  845/    CC17 :                                             ;LDA emu_ptr+1,X                ;4
(1)  845/    CC17 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  845/    CC17 :                                             ;STA emu_ptr+1,X                ;4
(1)  845/    CC17 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  845/    CC17 :                                             
(1)  845/    CC17 :                                             ;Method 3 - 30 cycles
(1)  845/    CC17 :                                             ;TXA                                                    ;2
(1)  845/    CC17 :                                             ;TAY                                                    ;2
(1)  845/    CC17 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  845/    CC17 :                                             ;ASL                                                    ;2
(1)  845/    CC17 :                                             ;BCS upper                                              ;2
(1)  845/    CC17 :                                             ;lower:
(1)  845/    CC17 :                                             ;       ASL                                                     ;2
(1)  845/    CC17 :                                             ;       TAX                                                     ;2
(1)  845/    CC17 :                                             ;       BCS upper_lower                         ;2
(1)  845/    CC17 :                                             ;       lower_lower:
(1)  845/    CC17 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  845/    CC17 :                                             ;       upper_lower:
(1)  845/    CC17 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  845/    CC17 :                                             ;upper:
(1)  845/    CC17 :                                             ;       ASL
(1)  845/    CC17 :                                             ;       TAX
(1)  845/    CC17 :                                             ;       BCS upper_upper
(1)  845/    CC17 :                                             ;       lower_upper:
(1)  845/    CC17 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  845/    CC17 :                                             ;       upper_upper:
(1)  845/    CC17 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  845/    CC17 :                                             ;After jump:
(1)  845/    CC17 :                                             ;TYA                                                    ;2
(1)  845/    CC17 :                                             ;TAX                                                    ;2
(1)  845/    CC17 :                                             
(1)  845/    CC17 :                                             ;Method 4 - 28 cycles
(1)  845/    CC17 :                                             ;LDA (emu_PC,X)                 ;6
(1)  845/    CC17 :                                             ;TAY                                    ;2
(1)  845/    CC17 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  845/    CC17 :                                             ;PHA                                    ;3
(1)  845/    CC17 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  845/    CC17 :                                             ;PHA                                    ;3
(1)  845/    CC17 :                                             ;RTS                                    ;6
(1)  845/    CC17 :                                             
(1)  845/    CC17 :                                             ;Method 5 - 30 cycles
(1)  845/    CC17 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  845/    CC19 : A8                                          TAY                                             ;2
(1)  845/    CC1A : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  845/    CC1D : 95 0A                                       STA emu_ptr,X                   ;4
(1)  845/    CC1F : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  845/    CC22 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  845/    CC24 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  845/    CC27 :                                                                     
(1)  846/    CC27 :                     
(1)  847/    CC27 :                     	;0xA9 - LDA IMMED
(1)  848/    CC27 :                     	LDA_IMMED:
(1)  849/    CC27 : (MACRO)             		OP_MACRO 169, "LDA", "IMMED", "LDA_IMMED"
(1)  849/    CC27 :                                             ;TODO
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 252 - 1/5/2022 11:50:53


(1)  850/    CC27 : (MACRO)             		NEXT_MACRO
(1)  850/    CC27 :                                             
(1)  850/    CC27 :  (MACRO-2)                                  halt
(1)  850/    CC27 : 00                                  BRK
(1)  850/    CC28 : 00                                  BRK
(1)  850/    CC29 :                                             
(1)  850/    CC29 :                                             ;Method 1 - 60 cycles
(1)  850/    CC29 :                                             ;Jump table must be page aligned!!!
(1)  850/    CC29 :                                             ;LDA (emu_PC,X)                 ;6
(1)  850/    CC29 :                                             ;ASL                                    ;2
(1)  850/    CC29 :                                             ;STA emu_ptr,X                  ;4
(1)  850/    CC29 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  850/    CC29 :                                             ;ADC #0                                 ;2
(1)  850/    CC29 :                                             ;STA emu_ptr+1,X                ;4
(1)  850/    CC29 :                                             ;LDA (emu_ptr,X)                ;6
(1)  850/    CC29 :                                             ;STA emu_ptr2,X                 ;4
(1)  850/    CC29 :                                             ;INC emu_ptr,X                  ;6
(1)  850/    CC29 :                                             ;BCC .skip                              ;2
(1)  850/    CC29 :                                             ;       INC emu_ptr+1,X         ;6
(1)  850/    CC29 :                                             ;.skip:
(1)  850/    CC29 :                                             ;LDA (emu_ptr,X)                ;6
(1)  850/    CC29 :                                             ;STA emu_ptr2+1,X               ;4
(1)  850/    CC29 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  850/    CC29 :                                             
(1)  850/    CC29 :                                             ;Method 2 - 46 cycles
(1)  850/    CC29 :                                             ;Jump table must be page aligned!!!
(1)  850/    CC29 :                                             ;LDA (emu_PC,X)                 ;6
(1)  850/    CC29 :                                             ;STZ emu_ptr+1,X                ;4
(1)  850/    CC29 :                                             ;ASL                                    ;2
(1)  850/    CC29 :                                             ;ROL emu_ptr+1,X                ;6
(1)  850/    CC29 :                                             ;ASL                                    ;2
(1)  850/    CC29 :                                             ;ROL emu_ptr+1,X                ;6
(1)  850/    CC29 :                                             ;STA emu_ptr,X                  ;4                              
(1)  850/    CC29 :                                             ;LDA emu_ptr+1,X                ;4
(1)  850/    CC29 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  850/    CC29 :                                             ;STA emu_ptr+1,X                ;4
(1)  850/    CC29 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  850/    CC29 :                                             
(1)  850/    CC29 :                                             ;Method 3 - 30 cycles
(1)  850/    CC29 :                                             ;TXA                                                    ;2
(1)  850/    CC29 :                                             ;TAY                                                    ;2
(1)  850/    CC29 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  850/    CC29 :                                             ;ASL                                                    ;2
(1)  850/    CC29 :                                             ;BCS upper                                              ;2
(1)  850/    CC29 :                                             ;lower:
(1)  850/    CC29 :                                             ;       ASL                                                     ;2
(1)  850/    CC29 :                                             ;       TAX                                                     ;2
(1)  850/    CC29 :                                             ;       BCS upper_lower                         ;2
(1)  850/    CC29 :                                             ;       lower_lower:
(1)  850/    CC29 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  850/    CC29 :                                             ;       upper_lower:
(1)  850/    CC29 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  850/    CC29 :                                             ;upper:
(1)  850/    CC29 :                                             ;       ASL
(1)  850/    CC29 :                                             ;       TAX
(1)  850/    CC29 :                                             ;       BCS upper_upper
(1)  850/    CC29 :                                             ;       lower_upper:
(1)  850/    CC29 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  850/    CC29 :                                             ;       upper_upper:
(1)  850/    CC29 :                                             ;               JMP (JUMP_TABLE4,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 253 - 1/5/2022 11:50:53


(1)  850/    CC29 :                                             ;After jump:
(1)  850/    CC29 :                                             ;TYA                                                    ;2
(1)  850/    CC29 :                                             ;TAX                                                    ;2
(1)  850/    CC29 :                                             
(1)  850/    CC29 :                                             ;Method 4 - 28 cycles
(1)  850/    CC29 :                                             ;LDA (emu_PC,X)                 ;6
(1)  850/    CC29 :                                             ;TAY                                    ;2
(1)  850/    CC29 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  850/    CC29 :                                             ;PHA                                    ;3
(1)  850/    CC29 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  850/    CC29 :                                             ;PHA                                    ;3
(1)  850/    CC29 :                                             ;RTS                                    ;6
(1)  850/    CC29 :                                             
(1)  850/    CC29 :                                             ;Method 5 - 30 cycles
(1)  850/    CC29 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  850/    CC2B : A8                                          TAY                                             ;2
(1)  850/    CC2C : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  850/    CC2F : 95 0A                                       STA emu_ptr,X                   ;4
(1)  850/    CC31 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  850/    CC34 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  850/    CC36 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  850/    CC39 :                                                                     
(1)  851/    CC39 :                     
(1)  852/    CC39 :                     	;0xAA - TAX IMP
(1)  853/    CC39 :                     	TAX_IMP:
(1)  854/    CC39 : (MACRO)             		OP_MACRO 170, "TAX", "IMP", "TAX_IMP"
(1)  854/    CC39 :                                             ;TODO
(1)  855/    CC39 : (MACRO)             		NEXT_MACRO
(1)  855/    CC39 :                                             
(1)  855/    CC39 :  (MACRO-2)                                  halt
(1)  855/    CC39 : 00                                  BRK
(1)  855/    CC3A : 00                                  BRK
(1)  855/    CC3B :                                             
(1)  855/    CC3B :                                             ;Method 1 - 60 cycles
(1)  855/    CC3B :                                             ;Jump table must be page aligned!!!
(1)  855/    CC3B :                                             ;LDA (emu_PC,X)                 ;6
(1)  855/    CC3B :                                             ;ASL                                    ;2
(1)  855/    CC3B :                                             ;STA emu_ptr,X                  ;4
(1)  855/    CC3B :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  855/    CC3B :                                             ;ADC #0                                 ;2
(1)  855/    CC3B :                                             ;STA emu_ptr+1,X                ;4
(1)  855/    CC3B :                                             ;LDA (emu_ptr,X)                ;6
(1)  855/    CC3B :                                             ;STA emu_ptr2,X                 ;4
(1)  855/    CC3B :                                             ;INC emu_ptr,X                  ;6
(1)  855/    CC3B :                                             ;BCC .skip                              ;2
(1)  855/    CC3B :                                             ;       INC emu_ptr+1,X         ;6
(1)  855/    CC3B :                                             ;.skip:
(1)  855/    CC3B :                                             ;LDA (emu_ptr,X)                ;6
(1)  855/    CC3B :                                             ;STA emu_ptr2+1,X               ;4
(1)  855/    CC3B :                                             ;JMP (emu_ptr2,X)               ;6
(1)  855/    CC3B :                                             
(1)  855/    CC3B :                                             ;Method 2 - 46 cycles
(1)  855/    CC3B :                                             ;Jump table must be page aligned!!!
(1)  855/    CC3B :                                             ;LDA (emu_PC,X)                 ;6
(1)  855/    CC3B :                                             ;STZ emu_ptr+1,X                ;4
(1)  855/    CC3B :                                             ;ASL                                    ;2
(1)  855/    CC3B :                                             ;ROL emu_ptr+1,X                ;6
(1)  855/    CC3B :                                             ;ASL                                    ;2
(1)  855/    CC3B :                                             ;ROL emu_ptr+1,X                ;6
(1)  855/    CC3B :                                             ;STA emu_ptr,X                  ;4                              
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 254 - 1/5/2022 11:50:53


(1)  855/    CC3B :                                             ;LDA emu_ptr+1,X                ;4
(1)  855/    CC3B :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  855/    CC3B :                                             ;STA emu_ptr+1,X                ;4
(1)  855/    CC3B :                                             ;JMP (emu_ptr2,X)               ;6
(1)  855/    CC3B :                                             
(1)  855/    CC3B :                                             ;Method 3 - 30 cycles
(1)  855/    CC3B :                                             ;TXA                                                    ;2
(1)  855/    CC3B :                                             ;TAY                                                    ;2
(1)  855/    CC3B :                                             ;LDA (emu_PC,X)                                 ;6
(1)  855/    CC3B :                                             ;ASL                                                    ;2
(1)  855/    CC3B :                                             ;BCS upper                                              ;2
(1)  855/    CC3B :                                             ;lower:
(1)  855/    CC3B :                                             ;       ASL                                                     ;2
(1)  855/    CC3B :                                             ;       TAX                                                     ;2
(1)  855/    CC3B :                                             ;       BCS upper_lower                         ;2
(1)  855/    CC3B :                                             ;       lower_lower:
(1)  855/    CC3B :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  855/    CC3B :                                             ;       upper_lower:
(1)  855/    CC3B :                                             ;               JMP (JUMP_TABLE2,X)
(1)  855/    CC3B :                                             ;upper:
(1)  855/    CC3B :                                             ;       ASL
(1)  855/    CC3B :                                             ;       TAX
(1)  855/    CC3B :                                             ;       BCS upper_upper
(1)  855/    CC3B :                                             ;       lower_upper:
(1)  855/    CC3B :                                             ;               JMP (JUMP_TABLE3,X)
(1)  855/    CC3B :                                             ;       upper_upper:
(1)  855/    CC3B :                                             ;               JMP (JUMP_TABLE4,X)
(1)  855/    CC3B :                                             ;After jump:
(1)  855/    CC3B :                                             ;TYA                                                    ;2
(1)  855/    CC3B :                                             ;TAX                                                    ;2
(1)  855/    CC3B :                                             
(1)  855/    CC3B :                                             ;Method 4 - 28 cycles
(1)  855/    CC3B :                                             ;LDA (emu_PC,X)                 ;6
(1)  855/    CC3B :                                             ;TAY                                    ;2
(1)  855/    CC3B :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  855/    CC3B :                                             ;PHA                                    ;3
(1)  855/    CC3B :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  855/    CC3B :                                             ;PHA                                    ;3
(1)  855/    CC3B :                                             ;RTS                                    ;6
(1)  855/    CC3B :                                             
(1)  855/    CC3B :                                             ;Method 5 - 30 cycles
(1)  855/    CC3B : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  855/    CC3D : A8                                          TAY                                             ;2
(1)  855/    CC3E : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  855/    CC41 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  855/    CC43 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  855/    CC46 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  855/    CC48 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  855/    CC4B :                                                                     
(1)  856/    CC4B :                     
(1)  857/    CC4B :                     	;0xAB - NOP
(1)  858/    CC4B :                     	NOP_0xAB:
(1)  859/    CC4B : (MACRO)             		OP_MACRO 171, "NOP", "IMP", "NOP_0xAB"
(1)  859/    CC4B :                                             ;TODO
(1)  860/    CC4B : (MACRO)             		NEXT_MACRO
(1)  860/    CC4B :                                             
(1)  860/    CC4B :  (MACRO-2)                                  halt
(1)  860/    CC4B : 00                                  BRK
(1)  860/    CC4C : 00                                  BRK
(1)  860/    CC4D :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 255 - 1/5/2022 11:50:53


(1)  860/    CC4D :                                             ;Method 1 - 60 cycles
(1)  860/    CC4D :                                             ;Jump table must be page aligned!!!
(1)  860/    CC4D :                                             ;LDA (emu_PC,X)                 ;6
(1)  860/    CC4D :                                             ;ASL                                    ;2
(1)  860/    CC4D :                                             ;STA emu_ptr,X                  ;4
(1)  860/    CC4D :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  860/    CC4D :                                             ;ADC #0                                 ;2
(1)  860/    CC4D :                                             ;STA emu_ptr+1,X                ;4
(1)  860/    CC4D :                                             ;LDA (emu_ptr,X)                ;6
(1)  860/    CC4D :                                             ;STA emu_ptr2,X                 ;4
(1)  860/    CC4D :                                             ;INC emu_ptr,X                  ;6
(1)  860/    CC4D :                                             ;BCC .skip                              ;2
(1)  860/    CC4D :                                             ;       INC emu_ptr+1,X         ;6
(1)  860/    CC4D :                                             ;.skip:
(1)  860/    CC4D :                                             ;LDA (emu_ptr,X)                ;6
(1)  860/    CC4D :                                             ;STA emu_ptr2+1,X               ;4
(1)  860/    CC4D :                                             ;JMP (emu_ptr2,X)               ;6
(1)  860/    CC4D :                                             
(1)  860/    CC4D :                                             ;Method 2 - 46 cycles
(1)  860/    CC4D :                                             ;Jump table must be page aligned!!!
(1)  860/    CC4D :                                             ;LDA (emu_PC,X)                 ;6
(1)  860/    CC4D :                                             ;STZ emu_ptr+1,X                ;4
(1)  860/    CC4D :                                             ;ASL                                    ;2
(1)  860/    CC4D :                                             ;ROL emu_ptr+1,X                ;6
(1)  860/    CC4D :                                             ;ASL                                    ;2
(1)  860/    CC4D :                                             ;ROL emu_ptr+1,X                ;6
(1)  860/    CC4D :                                             ;STA emu_ptr,X                  ;4                              
(1)  860/    CC4D :                                             ;LDA emu_ptr+1,X                ;4
(1)  860/    CC4D :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  860/    CC4D :                                             ;STA emu_ptr+1,X                ;4
(1)  860/    CC4D :                                             ;JMP (emu_ptr2,X)               ;6
(1)  860/    CC4D :                                             
(1)  860/    CC4D :                                             ;Method 3 - 30 cycles
(1)  860/    CC4D :                                             ;TXA                                                    ;2
(1)  860/    CC4D :                                             ;TAY                                                    ;2
(1)  860/    CC4D :                                             ;LDA (emu_PC,X)                                 ;6
(1)  860/    CC4D :                                             ;ASL                                                    ;2
(1)  860/    CC4D :                                             ;BCS upper                                              ;2
(1)  860/    CC4D :                                             ;lower:
(1)  860/    CC4D :                                             ;       ASL                                                     ;2
(1)  860/    CC4D :                                             ;       TAX                                                     ;2
(1)  860/    CC4D :                                             ;       BCS upper_lower                         ;2
(1)  860/    CC4D :                                             ;       lower_lower:
(1)  860/    CC4D :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  860/    CC4D :                                             ;       upper_lower:
(1)  860/    CC4D :                                             ;               JMP (JUMP_TABLE2,X)
(1)  860/    CC4D :                                             ;upper:
(1)  860/    CC4D :                                             ;       ASL
(1)  860/    CC4D :                                             ;       TAX
(1)  860/    CC4D :                                             ;       BCS upper_upper
(1)  860/    CC4D :                                             ;       lower_upper:
(1)  860/    CC4D :                                             ;               JMP (JUMP_TABLE3,X)
(1)  860/    CC4D :                                             ;       upper_upper:
(1)  860/    CC4D :                                             ;               JMP (JUMP_TABLE4,X)
(1)  860/    CC4D :                                             ;After jump:
(1)  860/    CC4D :                                             ;TYA                                                    ;2
(1)  860/    CC4D :                                             ;TAX                                                    ;2
(1)  860/    CC4D :                                             
(1)  860/    CC4D :                                             ;Method 4 - 28 cycles
(1)  860/    CC4D :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 256 - 1/5/2022 11:50:53


(1)  860/    CC4D :                                             ;TAY                                    ;2
(1)  860/    CC4D :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  860/    CC4D :                                             ;PHA                                    ;3
(1)  860/    CC4D :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  860/    CC4D :                                             ;PHA                                    ;3
(1)  860/    CC4D :                                             ;RTS                                    ;6
(1)  860/    CC4D :                                             
(1)  860/    CC4D :                                             ;Method 5 - 30 cycles
(1)  860/    CC4D : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  860/    CC4F : A8                                          TAY                                             ;2
(1)  860/    CC50 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  860/    CC53 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  860/    CC55 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  860/    CC58 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  860/    CC5A : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  860/    CC5D :                                                                     
(1)  861/    CC5D :                     
(1)  862/    CC5D :                     	;0xAC - LDY ABS
(1)  863/    CC5D :                     	LDY_ABS:
(1)  864/    CC5D : (MACRO)             		OP_MACRO 172, "LDY", "ABS", "LDY_ABS"
(1)  864/    CC5D :                                             ;TODO
(1)  865/    CC5D : (MACRO)             		NEXT_MACRO
(1)  865/    CC5D :                                             
(1)  865/    CC5D :  (MACRO-2)                                  halt
(1)  865/    CC5D : 00                                  BRK
(1)  865/    CC5E : 00                                  BRK
(1)  865/    CC5F :                                             
(1)  865/    CC5F :                                             ;Method 1 - 60 cycles
(1)  865/    CC5F :                                             ;Jump table must be page aligned!!!
(1)  865/    CC5F :                                             ;LDA (emu_PC,X)                 ;6
(1)  865/    CC5F :                                             ;ASL                                    ;2
(1)  865/    CC5F :                                             ;STA emu_ptr,X                  ;4
(1)  865/    CC5F :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  865/    CC5F :                                             ;ADC #0                                 ;2
(1)  865/    CC5F :                                             ;STA emu_ptr+1,X                ;4
(1)  865/    CC5F :                                             ;LDA (emu_ptr,X)                ;6
(1)  865/    CC5F :                                             ;STA emu_ptr2,X                 ;4
(1)  865/    CC5F :                                             ;INC emu_ptr,X                  ;6
(1)  865/    CC5F :                                             ;BCC .skip                              ;2
(1)  865/    CC5F :                                             ;       INC emu_ptr+1,X         ;6
(1)  865/    CC5F :                                             ;.skip:
(1)  865/    CC5F :                                             ;LDA (emu_ptr,X)                ;6
(1)  865/    CC5F :                                             ;STA emu_ptr2+1,X               ;4
(1)  865/    CC5F :                                             ;JMP (emu_ptr2,X)               ;6
(1)  865/    CC5F :                                             
(1)  865/    CC5F :                                             ;Method 2 - 46 cycles
(1)  865/    CC5F :                                             ;Jump table must be page aligned!!!
(1)  865/    CC5F :                                             ;LDA (emu_PC,X)                 ;6
(1)  865/    CC5F :                                             ;STZ emu_ptr+1,X                ;4
(1)  865/    CC5F :                                             ;ASL                                    ;2
(1)  865/    CC5F :                                             ;ROL emu_ptr+1,X                ;6
(1)  865/    CC5F :                                             ;ASL                                    ;2
(1)  865/    CC5F :                                             ;ROL emu_ptr+1,X                ;6
(1)  865/    CC5F :                                             ;STA emu_ptr,X                  ;4                              
(1)  865/    CC5F :                                             ;LDA emu_ptr+1,X                ;4
(1)  865/    CC5F :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  865/    CC5F :                                             ;STA emu_ptr+1,X                ;4
(1)  865/    CC5F :                                             ;JMP (emu_ptr2,X)               ;6
(1)  865/    CC5F :                                             
(1)  865/    CC5F :                                             ;Method 3 - 30 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 257 - 1/5/2022 11:50:53


(1)  865/    CC5F :                                             ;TXA                                                    ;2
(1)  865/    CC5F :                                             ;TAY                                                    ;2
(1)  865/    CC5F :                                             ;LDA (emu_PC,X)                                 ;6
(1)  865/    CC5F :                                             ;ASL                                                    ;2
(1)  865/    CC5F :                                             ;BCS upper                                              ;2
(1)  865/    CC5F :                                             ;lower:
(1)  865/    CC5F :                                             ;       ASL                                                     ;2
(1)  865/    CC5F :                                             ;       TAX                                                     ;2
(1)  865/    CC5F :                                             ;       BCS upper_lower                         ;2
(1)  865/    CC5F :                                             ;       lower_lower:
(1)  865/    CC5F :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  865/    CC5F :                                             ;       upper_lower:
(1)  865/    CC5F :                                             ;               JMP (JUMP_TABLE2,X)
(1)  865/    CC5F :                                             ;upper:
(1)  865/    CC5F :                                             ;       ASL
(1)  865/    CC5F :                                             ;       TAX
(1)  865/    CC5F :                                             ;       BCS upper_upper
(1)  865/    CC5F :                                             ;       lower_upper:
(1)  865/    CC5F :                                             ;               JMP (JUMP_TABLE3,X)
(1)  865/    CC5F :                                             ;       upper_upper:
(1)  865/    CC5F :                                             ;               JMP (JUMP_TABLE4,X)
(1)  865/    CC5F :                                             ;After jump:
(1)  865/    CC5F :                                             ;TYA                                                    ;2
(1)  865/    CC5F :                                             ;TAX                                                    ;2
(1)  865/    CC5F :                                             
(1)  865/    CC5F :                                             ;Method 4 - 28 cycles
(1)  865/    CC5F :                                             ;LDA (emu_PC,X)                 ;6
(1)  865/    CC5F :                                             ;TAY                                    ;2
(1)  865/    CC5F :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  865/    CC5F :                                             ;PHA                                    ;3
(1)  865/    CC5F :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  865/    CC5F :                                             ;PHA                                    ;3
(1)  865/    CC5F :                                             ;RTS                                    ;6
(1)  865/    CC5F :                                             
(1)  865/    CC5F :                                             ;Method 5 - 30 cycles
(1)  865/    CC5F : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  865/    CC61 : A8                                          TAY                                             ;2
(1)  865/    CC62 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  865/    CC65 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  865/    CC67 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  865/    CC6A : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  865/    CC6C : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  865/    CC6F :                                                                     
(1)  866/    CC6F :                     
(1)  867/    CC6F :                     	;0xAD - LDA ABS
(1)  868/    CC6F :                     	LDA_ABS:
(1)  869/    CC6F : (MACRO)             		OP_MACRO 173, "LDA", "ABS", "LDA_ABS"
(1)  869/    CC6F :                                             ;TODO
(1)  870/    CC6F : (MACRO)             		NEXT_MACRO
(1)  870/    CC6F :                                             
(1)  870/    CC6F :  (MACRO-2)                                  halt
(1)  870/    CC6F : 00                                  BRK
(1)  870/    CC70 : 00                                  BRK
(1)  870/    CC71 :                                             
(1)  870/    CC71 :                                             ;Method 1 - 60 cycles
(1)  870/    CC71 :                                             ;Jump table must be page aligned!!!
(1)  870/    CC71 :                                             ;LDA (emu_PC,X)                 ;6
(1)  870/    CC71 :                                             ;ASL                                    ;2
(1)  870/    CC71 :                                             ;STA emu_ptr,X                  ;4
(1)  870/    CC71 :                                             ;LDA #hi(JUMP_TABLE)    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 258 - 1/5/2022 11:50:53


(1)  870/    CC71 :                                             ;ADC #0                                 ;2
(1)  870/    CC71 :                                             ;STA emu_ptr+1,X                ;4
(1)  870/    CC71 :                                             ;LDA (emu_ptr,X)                ;6
(1)  870/    CC71 :                                             ;STA emu_ptr2,X                 ;4
(1)  870/    CC71 :                                             ;INC emu_ptr,X                  ;6
(1)  870/    CC71 :                                             ;BCC .skip                              ;2
(1)  870/    CC71 :                                             ;       INC emu_ptr+1,X         ;6
(1)  870/    CC71 :                                             ;.skip:
(1)  870/    CC71 :                                             ;LDA (emu_ptr,X)                ;6
(1)  870/    CC71 :                                             ;STA emu_ptr2+1,X               ;4
(1)  870/    CC71 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  870/    CC71 :                                             
(1)  870/    CC71 :                                             ;Method 2 - 46 cycles
(1)  870/    CC71 :                                             ;Jump table must be page aligned!!!
(1)  870/    CC71 :                                             ;LDA (emu_PC,X)                 ;6
(1)  870/    CC71 :                                             ;STZ emu_ptr+1,X                ;4
(1)  870/    CC71 :                                             ;ASL                                    ;2
(1)  870/    CC71 :                                             ;ROL emu_ptr+1,X                ;6
(1)  870/    CC71 :                                             ;ASL                                    ;2
(1)  870/    CC71 :                                             ;ROL emu_ptr+1,X                ;6
(1)  870/    CC71 :                                             ;STA emu_ptr,X                  ;4                              
(1)  870/    CC71 :                                             ;LDA emu_ptr+1,X                ;4
(1)  870/    CC71 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  870/    CC71 :                                             ;STA emu_ptr+1,X                ;4
(1)  870/    CC71 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  870/    CC71 :                                             
(1)  870/    CC71 :                                             ;Method 3 - 30 cycles
(1)  870/    CC71 :                                             ;TXA                                                    ;2
(1)  870/    CC71 :                                             ;TAY                                                    ;2
(1)  870/    CC71 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  870/    CC71 :                                             ;ASL                                                    ;2
(1)  870/    CC71 :                                             ;BCS upper                                              ;2
(1)  870/    CC71 :                                             ;lower:
(1)  870/    CC71 :                                             ;       ASL                                                     ;2
(1)  870/    CC71 :                                             ;       TAX                                                     ;2
(1)  870/    CC71 :                                             ;       BCS upper_lower                         ;2
(1)  870/    CC71 :                                             ;       lower_lower:
(1)  870/    CC71 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  870/    CC71 :                                             ;       upper_lower:
(1)  870/    CC71 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  870/    CC71 :                                             ;upper:
(1)  870/    CC71 :                                             ;       ASL
(1)  870/    CC71 :                                             ;       TAX
(1)  870/    CC71 :                                             ;       BCS upper_upper
(1)  870/    CC71 :                                             ;       lower_upper:
(1)  870/    CC71 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  870/    CC71 :                                             ;       upper_upper:
(1)  870/    CC71 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  870/    CC71 :                                             ;After jump:
(1)  870/    CC71 :                                             ;TYA                                                    ;2
(1)  870/    CC71 :                                             ;TAX                                                    ;2
(1)  870/    CC71 :                                             
(1)  870/    CC71 :                                             ;Method 4 - 28 cycles
(1)  870/    CC71 :                                             ;LDA (emu_PC,X)                 ;6
(1)  870/    CC71 :                                             ;TAY                                    ;2
(1)  870/    CC71 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  870/    CC71 :                                             ;PHA                                    ;3
(1)  870/    CC71 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  870/    CC71 :                                             ;PHA                                    ;3
(1)  870/    CC71 :                                             ;RTS                                    ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 259 - 1/5/2022 11:50:53


(1)  870/    CC71 :                                             
(1)  870/    CC71 :                                             ;Method 5 - 30 cycles
(1)  870/    CC71 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  870/    CC73 : A8                                          TAY                                             ;2
(1)  870/    CC74 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  870/    CC77 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  870/    CC79 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  870/    CC7C : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  870/    CC7E : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  870/    CC81 :                                                                     
(1)  871/    CC81 :                     
(1)  872/    CC81 :                     	;0xAE - LDX ABS
(1)  873/    CC81 :                     	LDX_ABS:
(1)  874/    CC81 : (MACRO)             		OP_MACRO 174, "LDX", "ABS", "LDX_ABS"
(1)  874/    CC81 :                                             ;TODO
(1)  875/    CC81 : (MACRO)             		NEXT_MACRO
(1)  875/    CC81 :                                             
(1)  875/    CC81 :  (MACRO-2)                                  halt
(1)  875/    CC81 : 00                                  BRK
(1)  875/    CC82 : 00                                  BRK
(1)  875/    CC83 :                                             
(1)  875/    CC83 :                                             ;Method 1 - 60 cycles
(1)  875/    CC83 :                                             ;Jump table must be page aligned!!!
(1)  875/    CC83 :                                             ;LDA (emu_PC,X)                 ;6
(1)  875/    CC83 :                                             ;ASL                                    ;2
(1)  875/    CC83 :                                             ;STA emu_ptr,X                  ;4
(1)  875/    CC83 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  875/    CC83 :                                             ;ADC #0                                 ;2
(1)  875/    CC83 :                                             ;STA emu_ptr+1,X                ;4
(1)  875/    CC83 :                                             ;LDA (emu_ptr,X)                ;6
(1)  875/    CC83 :                                             ;STA emu_ptr2,X                 ;4
(1)  875/    CC83 :                                             ;INC emu_ptr,X                  ;6
(1)  875/    CC83 :                                             ;BCC .skip                              ;2
(1)  875/    CC83 :                                             ;       INC emu_ptr+1,X         ;6
(1)  875/    CC83 :                                             ;.skip:
(1)  875/    CC83 :                                             ;LDA (emu_ptr,X)                ;6
(1)  875/    CC83 :                                             ;STA emu_ptr2+1,X               ;4
(1)  875/    CC83 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  875/    CC83 :                                             
(1)  875/    CC83 :                                             ;Method 2 - 46 cycles
(1)  875/    CC83 :                                             ;Jump table must be page aligned!!!
(1)  875/    CC83 :                                             ;LDA (emu_PC,X)                 ;6
(1)  875/    CC83 :                                             ;STZ emu_ptr+1,X                ;4
(1)  875/    CC83 :                                             ;ASL                                    ;2
(1)  875/    CC83 :                                             ;ROL emu_ptr+1,X                ;6
(1)  875/    CC83 :                                             ;ASL                                    ;2
(1)  875/    CC83 :                                             ;ROL emu_ptr+1,X                ;6
(1)  875/    CC83 :                                             ;STA emu_ptr,X                  ;4                              
(1)  875/    CC83 :                                             ;LDA emu_ptr+1,X                ;4
(1)  875/    CC83 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  875/    CC83 :                                             ;STA emu_ptr+1,X                ;4
(1)  875/    CC83 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  875/    CC83 :                                             
(1)  875/    CC83 :                                             ;Method 3 - 30 cycles
(1)  875/    CC83 :                                             ;TXA                                                    ;2
(1)  875/    CC83 :                                             ;TAY                                                    ;2
(1)  875/    CC83 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  875/    CC83 :                                             ;ASL                                                    ;2
(1)  875/    CC83 :                                             ;BCS upper                                              ;2
(1)  875/    CC83 :                                             ;lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 260 - 1/5/2022 11:50:53


(1)  875/    CC83 :                                             ;       ASL                                                     ;2
(1)  875/    CC83 :                                             ;       TAX                                                     ;2
(1)  875/    CC83 :                                             ;       BCS upper_lower                         ;2
(1)  875/    CC83 :                                             ;       lower_lower:
(1)  875/    CC83 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  875/    CC83 :                                             ;       upper_lower:
(1)  875/    CC83 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  875/    CC83 :                                             ;upper:
(1)  875/    CC83 :                                             ;       ASL
(1)  875/    CC83 :                                             ;       TAX
(1)  875/    CC83 :                                             ;       BCS upper_upper
(1)  875/    CC83 :                                             ;       lower_upper:
(1)  875/    CC83 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  875/    CC83 :                                             ;       upper_upper:
(1)  875/    CC83 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  875/    CC83 :                                             ;After jump:
(1)  875/    CC83 :                                             ;TYA                                                    ;2
(1)  875/    CC83 :                                             ;TAX                                                    ;2
(1)  875/    CC83 :                                             
(1)  875/    CC83 :                                             ;Method 4 - 28 cycles
(1)  875/    CC83 :                                             ;LDA (emu_PC,X)                 ;6
(1)  875/    CC83 :                                             ;TAY                                    ;2
(1)  875/    CC83 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  875/    CC83 :                                             ;PHA                                    ;3
(1)  875/    CC83 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  875/    CC83 :                                             ;PHA                                    ;3
(1)  875/    CC83 :                                             ;RTS                                    ;6
(1)  875/    CC83 :                                             
(1)  875/    CC83 :                                             ;Method 5 - 30 cycles
(1)  875/    CC83 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  875/    CC85 : A8                                          TAY                                             ;2
(1)  875/    CC86 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  875/    CC89 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  875/    CC8B : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  875/    CC8E : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  875/    CC90 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  875/    CC93 :                                                                     
(1)  876/    CC93 :                     
(1)  877/    CC93 :                     	;0xAF - NOP
(1)  878/    CC93 :                     	NOP_0xAF:
(1)  879/    CC93 : (MACRO)             		OP_MACRO 175, "NOP", "IMP", "NOP_0xAF"
(1)  879/    CC93 :                                             ;TODO
(1)  880/    CC93 : (MACRO)             		NEXT_MACRO
(1)  880/    CC93 :                                             
(1)  880/    CC93 :  (MACRO-2)                                  halt
(1)  880/    CC93 : 00                                  BRK
(1)  880/    CC94 : 00                                  BRK
(1)  880/    CC95 :                                             
(1)  880/    CC95 :                                             ;Method 1 - 60 cycles
(1)  880/    CC95 :                                             ;Jump table must be page aligned!!!
(1)  880/    CC95 :                                             ;LDA (emu_PC,X)                 ;6
(1)  880/    CC95 :                                             ;ASL                                    ;2
(1)  880/    CC95 :                                             ;STA emu_ptr,X                  ;4
(1)  880/    CC95 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  880/    CC95 :                                             ;ADC #0                                 ;2
(1)  880/    CC95 :                                             ;STA emu_ptr+1,X                ;4
(1)  880/    CC95 :                                             ;LDA (emu_ptr,X)                ;6
(1)  880/    CC95 :                                             ;STA emu_ptr2,X                 ;4
(1)  880/    CC95 :                                             ;INC emu_ptr,X                  ;6
(1)  880/    CC95 :                                             ;BCC .skip                              ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 261 - 1/5/2022 11:50:53


(1)  880/    CC95 :                                             ;       INC emu_ptr+1,X         ;6
(1)  880/    CC95 :                                             ;.skip:
(1)  880/    CC95 :                                             ;LDA (emu_ptr,X)                ;6
(1)  880/    CC95 :                                             ;STA emu_ptr2+1,X               ;4
(1)  880/    CC95 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  880/    CC95 :                                             
(1)  880/    CC95 :                                             ;Method 2 - 46 cycles
(1)  880/    CC95 :                                             ;Jump table must be page aligned!!!
(1)  880/    CC95 :                                             ;LDA (emu_PC,X)                 ;6
(1)  880/    CC95 :                                             ;STZ emu_ptr+1,X                ;4
(1)  880/    CC95 :                                             ;ASL                                    ;2
(1)  880/    CC95 :                                             ;ROL emu_ptr+1,X                ;6
(1)  880/    CC95 :                                             ;ASL                                    ;2
(1)  880/    CC95 :                                             ;ROL emu_ptr+1,X                ;6
(1)  880/    CC95 :                                             ;STA emu_ptr,X                  ;4                              
(1)  880/    CC95 :                                             ;LDA emu_ptr+1,X                ;4
(1)  880/    CC95 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  880/    CC95 :                                             ;STA emu_ptr+1,X                ;4
(1)  880/    CC95 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  880/    CC95 :                                             
(1)  880/    CC95 :                                             ;Method 3 - 30 cycles
(1)  880/    CC95 :                                             ;TXA                                                    ;2
(1)  880/    CC95 :                                             ;TAY                                                    ;2
(1)  880/    CC95 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  880/    CC95 :                                             ;ASL                                                    ;2
(1)  880/    CC95 :                                             ;BCS upper                                              ;2
(1)  880/    CC95 :                                             ;lower:
(1)  880/    CC95 :                                             ;       ASL                                                     ;2
(1)  880/    CC95 :                                             ;       TAX                                                     ;2
(1)  880/    CC95 :                                             ;       BCS upper_lower                         ;2
(1)  880/    CC95 :                                             ;       lower_lower:
(1)  880/    CC95 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  880/    CC95 :                                             ;       upper_lower:
(1)  880/    CC95 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  880/    CC95 :                                             ;upper:
(1)  880/    CC95 :                                             ;       ASL
(1)  880/    CC95 :                                             ;       TAX
(1)  880/    CC95 :                                             ;       BCS upper_upper
(1)  880/    CC95 :                                             ;       lower_upper:
(1)  880/    CC95 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  880/    CC95 :                                             ;       upper_upper:
(1)  880/    CC95 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  880/    CC95 :                                             ;After jump:
(1)  880/    CC95 :                                             ;TYA                                                    ;2
(1)  880/    CC95 :                                             ;TAX                                                    ;2
(1)  880/    CC95 :                                             
(1)  880/    CC95 :                                             ;Method 4 - 28 cycles
(1)  880/    CC95 :                                             ;LDA (emu_PC,X)                 ;6
(1)  880/    CC95 :                                             ;TAY                                    ;2
(1)  880/    CC95 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  880/    CC95 :                                             ;PHA                                    ;3
(1)  880/    CC95 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  880/    CC95 :                                             ;PHA                                    ;3
(1)  880/    CC95 :                                             ;RTS                                    ;6
(1)  880/    CC95 :                                             
(1)  880/    CC95 :                                             ;Method 5 - 30 cycles
(1)  880/    CC95 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  880/    CC97 : A8                                          TAY                                             ;2
(1)  880/    CC98 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  880/    CC9B : 95 0A                                       STA emu_ptr,X                   ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 262 - 1/5/2022 11:50:53


(1)  880/    CC9D : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  880/    CCA0 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  880/    CCA2 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  880/    CCA5 :                                                                     
(1)  881/    CCA5 :                     
(1)  882/    CCA5 :                     	;0xB0 - BCS REL
(1)  883/    CCA5 :                     	BCS_REL:
(1)  884/    CCA5 : (MACRO)             		OP_MACRO 176, "BCS", "REL", "BCS_REL"
(1)  884/    CCA5 :                                             ;TODO
(1)  885/    CCA5 : (MACRO)             		NEXT_MACRO
(1)  885/    CCA5 :                                             
(1)  885/    CCA5 :  (MACRO-2)                                  halt
(1)  885/    CCA5 : 00                                  BRK
(1)  885/    CCA6 : 00                                  BRK
(1)  885/    CCA7 :                                             
(1)  885/    CCA7 :                                             ;Method 1 - 60 cycles
(1)  885/    CCA7 :                                             ;Jump table must be page aligned!!!
(1)  885/    CCA7 :                                             ;LDA (emu_PC,X)                 ;6
(1)  885/    CCA7 :                                             ;ASL                                    ;2
(1)  885/    CCA7 :                                             ;STA emu_ptr,X                  ;4
(1)  885/    CCA7 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  885/    CCA7 :                                             ;ADC #0                                 ;2
(1)  885/    CCA7 :                                             ;STA emu_ptr+1,X                ;4
(1)  885/    CCA7 :                                             ;LDA (emu_ptr,X)                ;6
(1)  885/    CCA7 :                                             ;STA emu_ptr2,X                 ;4
(1)  885/    CCA7 :                                             ;INC emu_ptr,X                  ;6
(1)  885/    CCA7 :                                             ;BCC .skip                              ;2
(1)  885/    CCA7 :                                             ;       INC emu_ptr+1,X         ;6
(1)  885/    CCA7 :                                             ;.skip:
(1)  885/    CCA7 :                                             ;LDA (emu_ptr,X)                ;6
(1)  885/    CCA7 :                                             ;STA emu_ptr2+1,X               ;4
(1)  885/    CCA7 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  885/    CCA7 :                                             
(1)  885/    CCA7 :                                             ;Method 2 - 46 cycles
(1)  885/    CCA7 :                                             ;Jump table must be page aligned!!!
(1)  885/    CCA7 :                                             ;LDA (emu_PC,X)                 ;6
(1)  885/    CCA7 :                                             ;STZ emu_ptr+1,X                ;4
(1)  885/    CCA7 :                                             ;ASL                                    ;2
(1)  885/    CCA7 :                                             ;ROL emu_ptr+1,X                ;6
(1)  885/    CCA7 :                                             ;ASL                                    ;2
(1)  885/    CCA7 :                                             ;ROL emu_ptr+1,X                ;6
(1)  885/    CCA7 :                                             ;STA emu_ptr,X                  ;4                              
(1)  885/    CCA7 :                                             ;LDA emu_ptr+1,X                ;4
(1)  885/    CCA7 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  885/    CCA7 :                                             ;STA emu_ptr+1,X                ;4
(1)  885/    CCA7 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  885/    CCA7 :                                             
(1)  885/    CCA7 :                                             ;Method 3 - 30 cycles
(1)  885/    CCA7 :                                             ;TXA                                                    ;2
(1)  885/    CCA7 :                                             ;TAY                                                    ;2
(1)  885/    CCA7 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  885/    CCA7 :                                             ;ASL                                                    ;2
(1)  885/    CCA7 :                                             ;BCS upper                                              ;2
(1)  885/    CCA7 :                                             ;lower:
(1)  885/    CCA7 :                                             ;       ASL                                                     ;2
(1)  885/    CCA7 :                                             ;       TAX                                                     ;2
(1)  885/    CCA7 :                                             ;       BCS upper_lower                         ;2
(1)  885/    CCA7 :                                             ;       lower_lower:
(1)  885/    CCA7 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  885/    CCA7 :                                             ;       upper_lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 263 - 1/5/2022 11:50:53


(1)  885/    CCA7 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  885/    CCA7 :                                             ;upper:
(1)  885/    CCA7 :                                             ;       ASL
(1)  885/    CCA7 :                                             ;       TAX
(1)  885/    CCA7 :                                             ;       BCS upper_upper
(1)  885/    CCA7 :                                             ;       lower_upper:
(1)  885/    CCA7 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  885/    CCA7 :                                             ;       upper_upper:
(1)  885/    CCA7 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  885/    CCA7 :                                             ;After jump:
(1)  885/    CCA7 :                                             ;TYA                                                    ;2
(1)  885/    CCA7 :                                             ;TAX                                                    ;2
(1)  885/    CCA7 :                                             
(1)  885/    CCA7 :                                             ;Method 4 - 28 cycles
(1)  885/    CCA7 :                                             ;LDA (emu_PC,X)                 ;6
(1)  885/    CCA7 :                                             ;TAY                                    ;2
(1)  885/    CCA7 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  885/    CCA7 :                                             ;PHA                                    ;3
(1)  885/    CCA7 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  885/    CCA7 :                                             ;PHA                                    ;3
(1)  885/    CCA7 :                                             ;RTS                                    ;6
(1)  885/    CCA7 :                                             
(1)  885/    CCA7 :                                             ;Method 5 - 30 cycles
(1)  885/    CCA7 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  885/    CCA9 : A8                                          TAY                                             ;2
(1)  885/    CCAA : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  885/    CCAD : 95 0A                                       STA emu_ptr,X                   ;4
(1)  885/    CCAF : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  885/    CCB2 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  885/    CCB4 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  885/    CCB7 :                                                                     
(1)  886/    CCB7 :                     
(1)  887/    CCB7 :                     	;0xB1 - LDA IY
(1)  888/    CCB7 :                     	LDA_IY:
(1)  889/    CCB7 : (MACRO)             		OP_MACRO 177, "LDA", "IY", "LDA_IY"
(1)  889/    CCB7 :                                             ;TODO
(1)  890/    CCB7 : (MACRO)             		NEXT_MACRO
(1)  890/    CCB7 :                                             
(1)  890/    CCB7 :  (MACRO-2)                                  halt
(1)  890/    CCB7 : 00                                  BRK
(1)  890/    CCB8 : 00                                  BRK
(1)  890/    CCB9 :                                             
(1)  890/    CCB9 :                                             ;Method 1 - 60 cycles
(1)  890/    CCB9 :                                             ;Jump table must be page aligned!!!
(1)  890/    CCB9 :                                             ;LDA (emu_PC,X)                 ;6
(1)  890/    CCB9 :                                             ;ASL                                    ;2
(1)  890/    CCB9 :                                             ;STA emu_ptr,X                  ;4
(1)  890/    CCB9 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  890/    CCB9 :                                             ;ADC #0                                 ;2
(1)  890/    CCB9 :                                             ;STA emu_ptr+1,X                ;4
(1)  890/    CCB9 :                                             ;LDA (emu_ptr,X)                ;6
(1)  890/    CCB9 :                                             ;STA emu_ptr2,X                 ;4
(1)  890/    CCB9 :                                             ;INC emu_ptr,X                  ;6
(1)  890/    CCB9 :                                             ;BCC .skip                              ;2
(1)  890/    CCB9 :                                             ;       INC emu_ptr+1,X         ;6
(1)  890/    CCB9 :                                             ;.skip:
(1)  890/    CCB9 :                                             ;LDA (emu_ptr,X)                ;6
(1)  890/    CCB9 :                                             ;STA emu_ptr2+1,X               ;4
(1)  890/    CCB9 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  890/    CCB9 :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 264 - 1/5/2022 11:50:53


(1)  890/    CCB9 :                                             ;Method 2 - 46 cycles
(1)  890/    CCB9 :                                             ;Jump table must be page aligned!!!
(1)  890/    CCB9 :                                             ;LDA (emu_PC,X)                 ;6
(1)  890/    CCB9 :                                             ;STZ emu_ptr+1,X                ;4
(1)  890/    CCB9 :                                             ;ASL                                    ;2
(1)  890/    CCB9 :                                             ;ROL emu_ptr+1,X                ;6
(1)  890/    CCB9 :                                             ;ASL                                    ;2
(1)  890/    CCB9 :                                             ;ROL emu_ptr+1,X                ;6
(1)  890/    CCB9 :                                             ;STA emu_ptr,X                  ;4                              
(1)  890/    CCB9 :                                             ;LDA emu_ptr+1,X                ;4
(1)  890/    CCB9 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  890/    CCB9 :                                             ;STA emu_ptr+1,X                ;4
(1)  890/    CCB9 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  890/    CCB9 :                                             
(1)  890/    CCB9 :                                             ;Method 3 - 30 cycles
(1)  890/    CCB9 :                                             ;TXA                                                    ;2
(1)  890/    CCB9 :                                             ;TAY                                                    ;2
(1)  890/    CCB9 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  890/    CCB9 :                                             ;ASL                                                    ;2
(1)  890/    CCB9 :                                             ;BCS upper                                              ;2
(1)  890/    CCB9 :                                             ;lower:
(1)  890/    CCB9 :                                             ;       ASL                                                     ;2
(1)  890/    CCB9 :                                             ;       TAX                                                     ;2
(1)  890/    CCB9 :                                             ;       BCS upper_lower                         ;2
(1)  890/    CCB9 :                                             ;       lower_lower:
(1)  890/    CCB9 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  890/    CCB9 :                                             ;       upper_lower:
(1)  890/    CCB9 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  890/    CCB9 :                                             ;upper:
(1)  890/    CCB9 :                                             ;       ASL
(1)  890/    CCB9 :                                             ;       TAX
(1)  890/    CCB9 :                                             ;       BCS upper_upper
(1)  890/    CCB9 :                                             ;       lower_upper:
(1)  890/    CCB9 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  890/    CCB9 :                                             ;       upper_upper:
(1)  890/    CCB9 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  890/    CCB9 :                                             ;After jump:
(1)  890/    CCB9 :                                             ;TYA                                                    ;2
(1)  890/    CCB9 :                                             ;TAX                                                    ;2
(1)  890/    CCB9 :                                             
(1)  890/    CCB9 :                                             ;Method 4 - 28 cycles
(1)  890/    CCB9 :                                             ;LDA (emu_PC,X)                 ;6
(1)  890/    CCB9 :                                             ;TAY                                    ;2
(1)  890/    CCB9 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  890/    CCB9 :                                             ;PHA                                    ;3
(1)  890/    CCB9 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  890/    CCB9 :                                             ;PHA                                    ;3
(1)  890/    CCB9 :                                             ;RTS                                    ;6
(1)  890/    CCB9 :                                             
(1)  890/    CCB9 :                                             ;Method 5 - 30 cycles
(1)  890/    CCB9 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  890/    CCBB : A8                                          TAY                                             ;2
(1)  890/    CCBC : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  890/    CCBF : 95 0A                                       STA emu_ptr,X                   ;4
(1)  890/    CCC1 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  890/    CCC4 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  890/    CCC6 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  890/    CCC9 :                                                                     
(1)  891/    CCC9 :                     
(1)  892/    CCC9 :                     	;0xB2 - NOP
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 265 - 1/5/2022 11:50:53


(1)  893/    CCC9 :                     	NOP_0xB2:
(1)  894/    CCC9 : (MACRO)             		OP_MACRO 178, "NOP", "IMP", "NOP_0xB2"
(1)  894/    CCC9 :                                             ;TODO
(1)  895/    CCC9 : (MACRO)             		NEXT_MACRO
(1)  895/    CCC9 :                                             
(1)  895/    CCC9 :  (MACRO-2)                                  halt
(1)  895/    CCC9 : 00                                  BRK
(1)  895/    CCCA : 00                                  BRK
(1)  895/    CCCB :                                             
(1)  895/    CCCB :                                             ;Method 1 - 60 cycles
(1)  895/    CCCB :                                             ;Jump table must be page aligned!!!
(1)  895/    CCCB :                                             ;LDA (emu_PC,X)                 ;6
(1)  895/    CCCB :                                             ;ASL                                    ;2
(1)  895/    CCCB :                                             ;STA emu_ptr,X                  ;4
(1)  895/    CCCB :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  895/    CCCB :                                             ;ADC #0                                 ;2
(1)  895/    CCCB :                                             ;STA emu_ptr+1,X                ;4
(1)  895/    CCCB :                                             ;LDA (emu_ptr,X)                ;6
(1)  895/    CCCB :                                             ;STA emu_ptr2,X                 ;4
(1)  895/    CCCB :                                             ;INC emu_ptr,X                  ;6
(1)  895/    CCCB :                                             ;BCC .skip                              ;2
(1)  895/    CCCB :                                             ;       INC emu_ptr+1,X         ;6
(1)  895/    CCCB :                                             ;.skip:
(1)  895/    CCCB :                                             ;LDA (emu_ptr,X)                ;6
(1)  895/    CCCB :                                             ;STA emu_ptr2+1,X               ;4
(1)  895/    CCCB :                                             ;JMP (emu_ptr2,X)               ;6
(1)  895/    CCCB :                                             
(1)  895/    CCCB :                                             ;Method 2 - 46 cycles
(1)  895/    CCCB :                                             ;Jump table must be page aligned!!!
(1)  895/    CCCB :                                             ;LDA (emu_PC,X)                 ;6
(1)  895/    CCCB :                                             ;STZ emu_ptr+1,X                ;4
(1)  895/    CCCB :                                             ;ASL                                    ;2
(1)  895/    CCCB :                                             ;ROL emu_ptr+1,X                ;6
(1)  895/    CCCB :                                             ;ASL                                    ;2
(1)  895/    CCCB :                                             ;ROL emu_ptr+1,X                ;6
(1)  895/    CCCB :                                             ;STA emu_ptr,X                  ;4                              
(1)  895/    CCCB :                                             ;LDA emu_ptr+1,X                ;4
(1)  895/    CCCB :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  895/    CCCB :                                             ;STA emu_ptr+1,X                ;4
(1)  895/    CCCB :                                             ;JMP (emu_ptr2,X)               ;6
(1)  895/    CCCB :                                             
(1)  895/    CCCB :                                             ;Method 3 - 30 cycles
(1)  895/    CCCB :                                             ;TXA                                                    ;2
(1)  895/    CCCB :                                             ;TAY                                                    ;2
(1)  895/    CCCB :                                             ;LDA (emu_PC,X)                                 ;6
(1)  895/    CCCB :                                             ;ASL                                                    ;2
(1)  895/    CCCB :                                             ;BCS upper                                              ;2
(1)  895/    CCCB :                                             ;lower:
(1)  895/    CCCB :                                             ;       ASL                                                     ;2
(1)  895/    CCCB :                                             ;       TAX                                                     ;2
(1)  895/    CCCB :                                             ;       BCS upper_lower                         ;2
(1)  895/    CCCB :                                             ;       lower_lower:
(1)  895/    CCCB :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  895/    CCCB :                                             ;       upper_lower:
(1)  895/    CCCB :                                             ;               JMP (JUMP_TABLE2,X)
(1)  895/    CCCB :                                             ;upper:
(1)  895/    CCCB :                                             ;       ASL
(1)  895/    CCCB :                                             ;       TAX
(1)  895/    CCCB :                                             ;       BCS upper_upper
(1)  895/    CCCB :                                             ;       lower_upper:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 266 - 1/5/2022 11:50:53


(1)  895/    CCCB :                                             ;               JMP (JUMP_TABLE3,X)
(1)  895/    CCCB :                                             ;       upper_upper:
(1)  895/    CCCB :                                             ;               JMP (JUMP_TABLE4,X)
(1)  895/    CCCB :                                             ;After jump:
(1)  895/    CCCB :                                             ;TYA                                                    ;2
(1)  895/    CCCB :                                             ;TAX                                                    ;2
(1)  895/    CCCB :                                             
(1)  895/    CCCB :                                             ;Method 4 - 28 cycles
(1)  895/    CCCB :                                             ;LDA (emu_PC,X)                 ;6
(1)  895/    CCCB :                                             ;TAY                                    ;2
(1)  895/    CCCB :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  895/    CCCB :                                             ;PHA                                    ;3
(1)  895/    CCCB :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  895/    CCCB :                                             ;PHA                                    ;3
(1)  895/    CCCB :                                             ;RTS                                    ;6
(1)  895/    CCCB :                                             
(1)  895/    CCCB :                                             ;Method 5 - 30 cycles
(1)  895/    CCCB : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  895/    CCCD : A8                                          TAY                                             ;2
(1)  895/    CCCE : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  895/    CCD1 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  895/    CCD3 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  895/    CCD6 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  895/    CCD8 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  895/    CCDB :                                                                     
(1)  896/    CCDB :                     
(1)  897/    CCDB :                     	;0xB3 - NOP
(1)  898/    CCDB :                     	NOP_0xB3:
(1)  899/    CCDB : (MACRO)             		OP_MACRO 179, "NOP", "IMP", "NOP_0xB3"
(1)  899/    CCDB :                                             ;TODO
(1)  900/    CCDB : (MACRO)             		NEXT_MACRO
(1)  900/    CCDB :                                             
(1)  900/    CCDB :  (MACRO-2)                                  halt
(1)  900/    CCDB : 00                                  BRK
(1)  900/    CCDC : 00                                  BRK
(1)  900/    CCDD :                                             
(1)  900/    CCDD :                                             ;Method 1 - 60 cycles
(1)  900/    CCDD :                                             ;Jump table must be page aligned!!!
(1)  900/    CCDD :                                             ;LDA (emu_PC,X)                 ;6
(1)  900/    CCDD :                                             ;ASL                                    ;2
(1)  900/    CCDD :                                             ;STA emu_ptr,X                  ;4
(1)  900/    CCDD :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  900/    CCDD :                                             ;ADC #0                                 ;2
(1)  900/    CCDD :                                             ;STA emu_ptr+1,X                ;4
(1)  900/    CCDD :                                             ;LDA (emu_ptr,X)                ;6
(1)  900/    CCDD :                                             ;STA emu_ptr2,X                 ;4
(1)  900/    CCDD :                                             ;INC emu_ptr,X                  ;6
(1)  900/    CCDD :                                             ;BCC .skip                              ;2
(1)  900/    CCDD :                                             ;       INC emu_ptr+1,X         ;6
(1)  900/    CCDD :                                             ;.skip:
(1)  900/    CCDD :                                             ;LDA (emu_ptr,X)                ;6
(1)  900/    CCDD :                                             ;STA emu_ptr2+1,X               ;4
(1)  900/    CCDD :                                             ;JMP (emu_ptr2,X)               ;6
(1)  900/    CCDD :                                             
(1)  900/    CCDD :                                             ;Method 2 - 46 cycles
(1)  900/    CCDD :                                             ;Jump table must be page aligned!!!
(1)  900/    CCDD :                                             ;LDA (emu_PC,X)                 ;6
(1)  900/    CCDD :                                             ;STZ emu_ptr+1,X                ;4
(1)  900/    CCDD :                                             ;ASL                                    ;2
(1)  900/    CCDD :                                             ;ROL emu_ptr+1,X                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 267 - 1/5/2022 11:50:53


(1)  900/    CCDD :                                             ;ASL                                    ;2
(1)  900/    CCDD :                                             ;ROL emu_ptr+1,X                ;6
(1)  900/    CCDD :                                             ;STA emu_ptr,X                  ;4                              
(1)  900/    CCDD :                                             ;LDA emu_ptr+1,X                ;4
(1)  900/    CCDD :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  900/    CCDD :                                             ;STA emu_ptr+1,X                ;4
(1)  900/    CCDD :                                             ;JMP (emu_ptr2,X)               ;6
(1)  900/    CCDD :                                             
(1)  900/    CCDD :                                             ;Method 3 - 30 cycles
(1)  900/    CCDD :                                             ;TXA                                                    ;2
(1)  900/    CCDD :                                             ;TAY                                                    ;2
(1)  900/    CCDD :                                             ;LDA (emu_PC,X)                                 ;6
(1)  900/    CCDD :                                             ;ASL                                                    ;2
(1)  900/    CCDD :                                             ;BCS upper                                              ;2
(1)  900/    CCDD :                                             ;lower:
(1)  900/    CCDD :                                             ;       ASL                                                     ;2
(1)  900/    CCDD :                                             ;       TAX                                                     ;2
(1)  900/    CCDD :                                             ;       BCS upper_lower                         ;2
(1)  900/    CCDD :                                             ;       lower_lower:
(1)  900/    CCDD :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  900/    CCDD :                                             ;       upper_lower:
(1)  900/    CCDD :                                             ;               JMP (JUMP_TABLE2,X)
(1)  900/    CCDD :                                             ;upper:
(1)  900/    CCDD :                                             ;       ASL
(1)  900/    CCDD :                                             ;       TAX
(1)  900/    CCDD :                                             ;       BCS upper_upper
(1)  900/    CCDD :                                             ;       lower_upper:
(1)  900/    CCDD :                                             ;               JMP (JUMP_TABLE3,X)
(1)  900/    CCDD :                                             ;       upper_upper:
(1)  900/    CCDD :                                             ;               JMP (JUMP_TABLE4,X)
(1)  900/    CCDD :                                             ;After jump:
(1)  900/    CCDD :                                             ;TYA                                                    ;2
(1)  900/    CCDD :                                             ;TAX                                                    ;2
(1)  900/    CCDD :                                             
(1)  900/    CCDD :                                             ;Method 4 - 28 cycles
(1)  900/    CCDD :                                             ;LDA (emu_PC,X)                 ;6
(1)  900/    CCDD :                                             ;TAY                                    ;2
(1)  900/    CCDD :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  900/    CCDD :                                             ;PHA                                    ;3
(1)  900/    CCDD :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  900/    CCDD :                                             ;PHA                                    ;3
(1)  900/    CCDD :                                             ;RTS                                    ;6
(1)  900/    CCDD :                                             
(1)  900/    CCDD :                                             ;Method 5 - 30 cycles
(1)  900/    CCDD : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  900/    CCDF : A8                                          TAY                                             ;2
(1)  900/    CCE0 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  900/    CCE3 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  900/    CCE5 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  900/    CCE8 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  900/    CCEA : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  900/    CCED :                                                                     
(1)  901/    CCED :                     
(1)  902/    CCED :                     	;0xB4 - LDY ZPX
(1)  903/    CCED :                     	LDY_ZPX:
(1)  904/    CCED : (MACRO)             		OP_MACRO 180, "LDY", "ZPX", "LDY_ZPX"
(1)  904/    CCED :                                             ;TODO
(1)  905/    CCED : (MACRO)             		NEXT_MACRO
(1)  905/    CCED :                                             
(1)  905/    CCED :  (MACRO-2)                                  halt
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 268 - 1/5/2022 11:50:53


(1)  905/    CCED : 00                                  BRK
(1)  905/    CCEE : 00                                  BRK
(1)  905/    CCEF :                                             
(1)  905/    CCEF :                                             ;Method 1 - 60 cycles
(1)  905/    CCEF :                                             ;Jump table must be page aligned!!!
(1)  905/    CCEF :                                             ;LDA (emu_PC,X)                 ;6
(1)  905/    CCEF :                                             ;ASL                                    ;2
(1)  905/    CCEF :                                             ;STA emu_ptr,X                  ;4
(1)  905/    CCEF :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  905/    CCEF :                                             ;ADC #0                                 ;2
(1)  905/    CCEF :                                             ;STA emu_ptr+1,X                ;4
(1)  905/    CCEF :                                             ;LDA (emu_ptr,X)                ;6
(1)  905/    CCEF :                                             ;STA emu_ptr2,X                 ;4
(1)  905/    CCEF :                                             ;INC emu_ptr,X                  ;6
(1)  905/    CCEF :                                             ;BCC .skip                              ;2
(1)  905/    CCEF :                                             ;       INC emu_ptr+1,X         ;6
(1)  905/    CCEF :                                             ;.skip:
(1)  905/    CCEF :                                             ;LDA (emu_ptr,X)                ;6
(1)  905/    CCEF :                                             ;STA emu_ptr2+1,X               ;4
(1)  905/    CCEF :                                             ;JMP (emu_ptr2,X)               ;6
(1)  905/    CCEF :                                             
(1)  905/    CCEF :                                             ;Method 2 - 46 cycles
(1)  905/    CCEF :                                             ;Jump table must be page aligned!!!
(1)  905/    CCEF :                                             ;LDA (emu_PC,X)                 ;6
(1)  905/    CCEF :                                             ;STZ emu_ptr+1,X                ;4
(1)  905/    CCEF :                                             ;ASL                                    ;2
(1)  905/    CCEF :                                             ;ROL emu_ptr+1,X                ;6
(1)  905/    CCEF :                                             ;ASL                                    ;2
(1)  905/    CCEF :                                             ;ROL emu_ptr+1,X                ;6
(1)  905/    CCEF :                                             ;STA emu_ptr,X                  ;4                              
(1)  905/    CCEF :                                             ;LDA emu_ptr+1,X                ;4
(1)  905/    CCEF :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  905/    CCEF :                                             ;STA emu_ptr+1,X                ;4
(1)  905/    CCEF :                                             ;JMP (emu_ptr2,X)               ;6
(1)  905/    CCEF :                                             
(1)  905/    CCEF :                                             ;Method 3 - 30 cycles
(1)  905/    CCEF :                                             ;TXA                                                    ;2
(1)  905/    CCEF :                                             ;TAY                                                    ;2
(1)  905/    CCEF :                                             ;LDA (emu_PC,X)                                 ;6
(1)  905/    CCEF :                                             ;ASL                                                    ;2
(1)  905/    CCEF :                                             ;BCS upper                                              ;2
(1)  905/    CCEF :                                             ;lower:
(1)  905/    CCEF :                                             ;       ASL                                                     ;2
(1)  905/    CCEF :                                             ;       TAX                                                     ;2
(1)  905/    CCEF :                                             ;       BCS upper_lower                         ;2
(1)  905/    CCEF :                                             ;       lower_lower:
(1)  905/    CCEF :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  905/    CCEF :                                             ;       upper_lower:
(1)  905/    CCEF :                                             ;               JMP (JUMP_TABLE2,X)
(1)  905/    CCEF :                                             ;upper:
(1)  905/    CCEF :                                             ;       ASL
(1)  905/    CCEF :                                             ;       TAX
(1)  905/    CCEF :                                             ;       BCS upper_upper
(1)  905/    CCEF :                                             ;       lower_upper:
(1)  905/    CCEF :                                             ;               JMP (JUMP_TABLE3,X)
(1)  905/    CCEF :                                             ;       upper_upper:
(1)  905/    CCEF :                                             ;               JMP (JUMP_TABLE4,X)
(1)  905/    CCEF :                                             ;After jump:
(1)  905/    CCEF :                                             ;TYA                                                    ;2
(1)  905/    CCEF :                                             ;TAX                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 269 - 1/5/2022 11:50:53


(1)  905/    CCEF :                                             
(1)  905/    CCEF :                                             ;Method 4 - 28 cycles
(1)  905/    CCEF :                                             ;LDA (emu_PC,X)                 ;6
(1)  905/    CCEF :                                             ;TAY                                    ;2
(1)  905/    CCEF :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  905/    CCEF :                                             ;PHA                                    ;3
(1)  905/    CCEF :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  905/    CCEF :                                             ;PHA                                    ;3
(1)  905/    CCEF :                                             ;RTS                                    ;6
(1)  905/    CCEF :                                             
(1)  905/    CCEF :                                             ;Method 5 - 30 cycles
(1)  905/    CCEF : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  905/    CCF1 : A8                                          TAY                                             ;2
(1)  905/    CCF2 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  905/    CCF5 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  905/    CCF7 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  905/    CCFA : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  905/    CCFC : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  905/    CCFF :                                                                     
(1)  906/    CCFF :                     
(1)  907/    CCFF :                     	;0xB5 - LDA ZPX
(1)  908/    CCFF :                     	LDA_ZPX:
(1)  909/    CCFF : (MACRO)             		OP_MACRO 181, "LDA", "ZPX", "LDA_ZPX"
(1)  909/    CCFF :                                             ;TODO
(1)  910/    CCFF : (MACRO)             		NEXT_MACRO
(1)  910/    CCFF :                                             
(1)  910/    CCFF :  (MACRO-2)                                  halt
(1)  910/    CCFF : 00                                  BRK
(1)  910/    CD00 : 00                                  BRK
(1)  910/    CD01 :                                             
(1)  910/    CD01 :                                             ;Method 1 - 60 cycles
(1)  910/    CD01 :                                             ;Jump table must be page aligned!!!
(1)  910/    CD01 :                                             ;LDA (emu_PC,X)                 ;6
(1)  910/    CD01 :                                             ;ASL                                    ;2
(1)  910/    CD01 :                                             ;STA emu_ptr,X                  ;4
(1)  910/    CD01 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  910/    CD01 :                                             ;ADC #0                                 ;2
(1)  910/    CD01 :                                             ;STA emu_ptr+1,X                ;4
(1)  910/    CD01 :                                             ;LDA (emu_ptr,X)                ;6
(1)  910/    CD01 :                                             ;STA emu_ptr2,X                 ;4
(1)  910/    CD01 :                                             ;INC emu_ptr,X                  ;6
(1)  910/    CD01 :                                             ;BCC .skip                              ;2
(1)  910/    CD01 :                                             ;       INC emu_ptr+1,X         ;6
(1)  910/    CD01 :                                             ;.skip:
(1)  910/    CD01 :                                             ;LDA (emu_ptr,X)                ;6
(1)  910/    CD01 :                                             ;STA emu_ptr2+1,X               ;4
(1)  910/    CD01 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  910/    CD01 :                                             
(1)  910/    CD01 :                                             ;Method 2 - 46 cycles
(1)  910/    CD01 :                                             ;Jump table must be page aligned!!!
(1)  910/    CD01 :                                             ;LDA (emu_PC,X)                 ;6
(1)  910/    CD01 :                                             ;STZ emu_ptr+1,X                ;4
(1)  910/    CD01 :                                             ;ASL                                    ;2
(1)  910/    CD01 :                                             ;ROL emu_ptr+1,X                ;6
(1)  910/    CD01 :                                             ;ASL                                    ;2
(1)  910/    CD01 :                                             ;ROL emu_ptr+1,X                ;6
(1)  910/    CD01 :                                             ;STA emu_ptr,X                  ;4                              
(1)  910/    CD01 :                                             ;LDA emu_ptr+1,X                ;4
(1)  910/    CD01 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  910/    CD01 :                                             ;STA emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 270 - 1/5/2022 11:50:53


(1)  910/    CD01 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  910/    CD01 :                                             
(1)  910/    CD01 :                                             ;Method 3 - 30 cycles
(1)  910/    CD01 :                                             ;TXA                                                    ;2
(1)  910/    CD01 :                                             ;TAY                                                    ;2
(1)  910/    CD01 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  910/    CD01 :                                             ;ASL                                                    ;2
(1)  910/    CD01 :                                             ;BCS upper                                              ;2
(1)  910/    CD01 :                                             ;lower:
(1)  910/    CD01 :                                             ;       ASL                                                     ;2
(1)  910/    CD01 :                                             ;       TAX                                                     ;2
(1)  910/    CD01 :                                             ;       BCS upper_lower                         ;2
(1)  910/    CD01 :                                             ;       lower_lower:
(1)  910/    CD01 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  910/    CD01 :                                             ;       upper_lower:
(1)  910/    CD01 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  910/    CD01 :                                             ;upper:
(1)  910/    CD01 :                                             ;       ASL
(1)  910/    CD01 :                                             ;       TAX
(1)  910/    CD01 :                                             ;       BCS upper_upper
(1)  910/    CD01 :                                             ;       lower_upper:
(1)  910/    CD01 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  910/    CD01 :                                             ;       upper_upper:
(1)  910/    CD01 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  910/    CD01 :                                             ;After jump:
(1)  910/    CD01 :                                             ;TYA                                                    ;2
(1)  910/    CD01 :                                             ;TAX                                                    ;2
(1)  910/    CD01 :                                             
(1)  910/    CD01 :                                             ;Method 4 - 28 cycles
(1)  910/    CD01 :                                             ;LDA (emu_PC,X)                 ;6
(1)  910/    CD01 :                                             ;TAY                                    ;2
(1)  910/    CD01 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  910/    CD01 :                                             ;PHA                                    ;3
(1)  910/    CD01 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  910/    CD01 :                                             ;PHA                                    ;3
(1)  910/    CD01 :                                             ;RTS                                    ;6
(1)  910/    CD01 :                                             
(1)  910/    CD01 :                                             ;Method 5 - 30 cycles
(1)  910/    CD01 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  910/    CD03 : A8                                          TAY                                             ;2
(1)  910/    CD04 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  910/    CD07 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  910/    CD09 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  910/    CD0C : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  910/    CD0E : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  910/    CD11 :                                                                     
(1)  911/    CD11 :                     
(1)  912/    CD11 :                     	;0xB6 - LDX ZPY
(1)  913/    CD11 :                     	LDX_ZPY:
(1)  914/    CD11 : (MACRO)             		OP_MACRO 182, "LDX", "ZPY", "LDX_ZPY"
(1)  914/    CD11 :                                             ;TODO
(1)  915/    CD11 : (MACRO)             		NEXT_MACRO
(1)  915/    CD11 :                                             
(1)  915/    CD11 :  (MACRO-2)                                  halt
(1)  915/    CD11 : 00                                  BRK
(1)  915/    CD12 : 00                                  BRK
(1)  915/    CD13 :                                             
(1)  915/    CD13 :                                             ;Method 1 - 60 cycles
(1)  915/    CD13 :                                             ;Jump table must be page aligned!!!
(1)  915/    CD13 :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 271 - 1/5/2022 11:50:53


(1)  915/    CD13 :                                             ;ASL                                    ;2
(1)  915/    CD13 :                                             ;STA emu_ptr,X                  ;4
(1)  915/    CD13 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  915/    CD13 :                                             ;ADC #0                                 ;2
(1)  915/    CD13 :                                             ;STA emu_ptr+1,X                ;4
(1)  915/    CD13 :                                             ;LDA (emu_ptr,X)                ;6
(1)  915/    CD13 :                                             ;STA emu_ptr2,X                 ;4
(1)  915/    CD13 :                                             ;INC emu_ptr,X                  ;6
(1)  915/    CD13 :                                             ;BCC .skip                              ;2
(1)  915/    CD13 :                                             ;       INC emu_ptr+1,X         ;6
(1)  915/    CD13 :                                             ;.skip:
(1)  915/    CD13 :                                             ;LDA (emu_ptr,X)                ;6
(1)  915/    CD13 :                                             ;STA emu_ptr2+1,X               ;4
(1)  915/    CD13 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  915/    CD13 :                                             
(1)  915/    CD13 :                                             ;Method 2 - 46 cycles
(1)  915/    CD13 :                                             ;Jump table must be page aligned!!!
(1)  915/    CD13 :                                             ;LDA (emu_PC,X)                 ;6
(1)  915/    CD13 :                                             ;STZ emu_ptr+1,X                ;4
(1)  915/    CD13 :                                             ;ASL                                    ;2
(1)  915/    CD13 :                                             ;ROL emu_ptr+1,X                ;6
(1)  915/    CD13 :                                             ;ASL                                    ;2
(1)  915/    CD13 :                                             ;ROL emu_ptr+1,X                ;6
(1)  915/    CD13 :                                             ;STA emu_ptr,X                  ;4                              
(1)  915/    CD13 :                                             ;LDA emu_ptr+1,X                ;4
(1)  915/    CD13 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  915/    CD13 :                                             ;STA emu_ptr+1,X                ;4
(1)  915/    CD13 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  915/    CD13 :                                             
(1)  915/    CD13 :                                             ;Method 3 - 30 cycles
(1)  915/    CD13 :                                             ;TXA                                                    ;2
(1)  915/    CD13 :                                             ;TAY                                                    ;2
(1)  915/    CD13 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  915/    CD13 :                                             ;ASL                                                    ;2
(1)  915/    CD13 :                                             ;BCS upper                                              ;2
(1)  915/    CD13 :                                             ;lower:
(1)  915/    CD13 :                                             ;       ASL                                                     ;2
(1)  915/    CD13 :                                             ;       TAX                                                     ;2
(1)  915/    CD13 :                                             ;       BCS upper_lower                         ;2
(1)  915/    CD13 :                                             ;       lower_lower:
(1)  915/    CD13 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  915/    CD13 :                                             ;       upper_lower:
(1)  915/    CD13 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  915/    CD13 :                                             ;upper:
(1)  915/    CD13 :                                             ;       ASL
(1)  915/    CD13 :                                             ;       TAX
(1)  915/    CD13 :                                             ;       BCS upper_upper
(1)  915/    CD13 :                                             ;       lower_upper:
(1)  915/    CD13 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  915/    CD13 :                                             ;       upper_upper:
(1)  915/    CD13 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  915/    CD13 :                                             ;After jump:
(1)  915/    CD13 :                                             ;TYA                                                    ;2
(1)  915/    CD13 :                                             ;TAX                                                    ;2
(1)  915/    CD13 :                                             
(1)  915/    CD13 :                                             ;Method 4 - 28 cycles
(1)  915/    CD13 :                                             ;LDA (emu_PC,X)                 ;6
(1)  915/    CD13 :                                             ;TAY                                    ;2
(1)  915/    CD13 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  915/    CD13 :                                             ;PHA                                    ;3
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 272 - 1/5/2022 11:50:53


(1)  915/    CD13 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  915/    CD13 :                                             ;PHA                                    ;3
(1)  915/    CD13 :                                             ;RTS                                    ;6
(1)  915/    CD13 :                                             
(1)  915/    CD13 :                                             ;Method 5 - 30 cycles
(1)  915/    CD13 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  915/    CD15 : A8                                          TAY                                             ;2
(1)  915/    CD16 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  915/    CD19 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  915/    CD1B : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  915/    CD1E : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  915/    CD20 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  915/    CD23 :                                                                     
(1)  916/    CD23 :                     
(1)  917/    CD23 :                     	;0xB7 - NOP
(1)  918/    CD23 :                     	NOP_0xB7:
(1)  919/    CD23 : (MACRO)             		OP_MACRO 183, "NOP", "IMP", "NOP_0xB7"
(1)  919/    CD23 :                                             ;TODO
(1)  920/    CD23 : (MACRO)             		NEXT_MACRO
(1)  920/    CD23 :                                             
(1)  920/    CD23 :  (MACRO-2)                                  halt
(1)  920/    CD23 : 00                                  BRK
(1)  920/    CD24 : 00                                  BRK
(1)  920/    CD25 :                                             
(1)  920/    CD25 :                                             ;Method 1 - 60 cycles
(1)  920/    CD25 :                                             ;Jump table must be page aligned!!!
(1)  920/    CD25 :                                             ;LDA (emu_PC,X)                 ;6
(1)  920/    CD25 :                                             ;ASL                                    ;2
(1)  920/    CD25 :                                             ;STA emu_ptr,X                  ;4
(1)  920/    CD25 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  920/    CD25 :                                             ;ADC #0                                 ;2
(1)  920/    CD25 :                                             ;STA emu_ptr+1,X                ;4
(1)  920/    CD25 :                                             ;LDA (emu_ptr,X)                ;6
(1)  920/    CD25 :                                             ;STA emu_ptr2,X                 ;4
(1)  920/    CD25 :                                             ;INC emu_ptr,X                  ;6
(1)  920/    CD25 :                                             ;BCC .skip                              ;2
(1)  920/    CD25 :                                             ;       INC emu_ptr+1,X         ;6
(1)  920/    CD25 :                                             ;.skip:
(1)  920/    CD25 :                                             ;LDA (emu_ptr,X)                ;6
(1)  920/    CD25 :                                             ;STA emu_ptr2+1,X               ;4
(1)  920/    CD25 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  920/    CD25 :                                             
(1)  920/    CD25 :                                             ;Method 2 - 46 cycles
(1)  920/    CD25 :                                             ;Jump table must be page aligned!!!
(1)  920/    CD25 :                                             ;LDA (emu_PC,X)                 ;6
(1)  920/    CD25 :                                             ;STZ emu_ptr+1,X                ;4
(1)  920/    CD25 :                                             ;ASL                                    ;2
(1)  920/    CD25 :                                             ;ROL emu_ptr+1,X                ;6
(1)  920/    CD25 :                                             ;ASL                                    ;2
(1)  920/    CD25 :                                             ;ROL emu_ptr+1,X                ;6
(1)  920/    CD25 :                                             ;STA emu_ptr,X                  ;4                              
(1)  920/    CD25 :                                             ;LDA emu_ptr+1,X                ;4
(1)  920/    CD25 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  920/    CD25 :                                             ;STA emu_ptr+1,X                ;4
(1)  920/    CD25 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  920/    CD25 :                                             
(1)  920/    CD25 :                                             ;Method 3 - 30 cycles
(1)  920/    CD25 :                                             ;TXA                                                    ;2
(1)  920/    CD25 :                                             ;TAY                                                    ;2
(1)  920/    CD25 :                                             ;LDA (emu_PC,X)                                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 273 - 1/5/2022 11:50:53


(1)  920/    CD25 :                                             ;ASL                                                    ;2
(1)  920/    CD25 :                                             ;BCS upper                                              ;2
(1)  920/    CD25 :                                             ;lower:
(1)  920/    CD25 :                                             ;       ASL                                                     ;2
(1)  920/    CD25 :                                             ;       TAX                                                     ;2
(1)  920/    CD25 :                                             ;       BCS upper_lower                         ;2
(1)  920/    CD25 :                                             ;       lower_lower:
(1)  920/    CD25 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  920/    CD25 :                                             ;       upper_lower:
(1)  920/    CD25 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  920/    CD25 :                                             ;upper:
(1)  920/    CD25 :                                             ;       ASL
(1)  920/    CD25 :                                             ;       TAX
(1)  920/    CD25 :                                             ;       BCS upper_upper
(1)  920/    CD25 :                                             ;       lower_upper:
(1)  920/    CD25 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  920/    CD25 :                                             ;       upper_upper:
(1)  920/    CD25 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  920/    CD25 :                                             ;After jump:
(1)  920/    CD25 :                                             ;TYA                                                    ;2
(1)  920/    CD25 :                                             ;TAX                                                    ;2
(1)  920/    CD25 :                                             
(1)  920/    CD25 :                                             ;Method 4 - 28 cycles
(1)  920/    CD25 :                                             ;LDA (emu_PC,X)                 ;6
(1)  920/    CD25 :                                             ;TAY                                    ;2
(1)  920/    CD25 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  920/    CD25 :                                             ;PHA                                    ;3
(1)  920/    CD25 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  920/    CD25 :                                             ;PHA                                    ;3
(1)  920/    CD25 :                                             ;RTS                                    ;6
(1)  920/    CD25 :                                             
(1)  920/    CD25 :                                             ;Method 5 - 30 cycles
(1)  920/    CD25 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  920/    CD27 : A8                                          TAY                                             ;2
(1)  920/    CD28 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  920/    CD2B : 95 0A                                       STA emu_ptr,X                   ;4
(1)  920/    CD2D : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  920/    CD30 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  920/    CD32 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  920/    CD35 :                                                                     
(1)  921/    CD35 :                     
(1)  922/    CD35 :                     	;0xB8 - CLV IMP
(1)  923/    CD35 :                     	CLV_IMP:
(1)  924/    CD35 : (MACRO)             		OP_MACRO 184, "CLV", "IMP", "CLV_IMP"
(1)  924/    CD35 :                                             ;TODO
(1)  925/    CD35 : (MACRO)             		NEXT_MACRO
(1)  925/    CD35 :                                             
(1)  925/    CD35 :  (MACRO-2)                                  halt
(1)  925/    CD35 : 00                                  BRK
(1)  925/    CD36 : 00                                  BRK
(1)  925/    CD37 :                                             
(1)  925/    CD37 :                                             ;Method 1 - 60 cycles
(1)  925/    CD37 :                                             ;Jump table must be page aligned!!!
(1)  925/    CD37 :                                             ;LDA (emu_PC,X)                 ;6
(1)  925/    CD37 :                                             ;ASL                                    ;2
(1)  925/    CD37 :                                             ;STA emu_ptr,X                  ;4
(1)  925/    CD37 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  925/    CD37 :                                             ;ADC #0                                 ;2
(1)  925/    CD37 :                                             ;STA emu_ptr+1,X                ;4
(1)  925/    CD37 :                                             ;LDA (emu_ptr,X)                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 274 - 1/5/2022 11:50:53


(1)  925/    CD37 :                                             ;STA emu_ptr2,X                 ;4
(1)  925/    CD37 :                                             ;INC emu_ptr,X                  ;6
(1)  925/    CD37 :                                             ;BCC .skip                              ;2
(1)  925/    CD37 :                                             ;       INC emu_ptr+1,X         ;6
(1)  925/    CD37 :                                             ;.skip:
(1)  925/    CD37 :                                             ;LDA (emu_ptr,X)                ;6
(1)  925/    CD37 :                                             ;STA emu_ptr2+1,X               ;4
(1)  925/    CD37 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  925/    CD37 :                                             
(1)  925/    CD37 :                                             ;Method 2 - 46 cycles
(1)  925/    CD37 :                                             ;Jump table must be page aligned!!!
(1)  925/    CD37 :                                             ;LDA (emu_PC,X)                 ;6
(1)  925/    CD37 :                                             ;STZ emu_ptr+1,X                ;4
(1)  925/    CD37 :                                             ;ASL                                    ;2
(1)  925/    CD37 :                                             ;ROL emu_ptr+1,X                ;6
(1)  925/    CD37 :                                             ;ASL                                    ;2
(1)  925/    CD37 :                                             ;ROL emu_ptr+1,X                ;6
(1)  925/    CD37 :                                             ;STA emu_ptr,X                  ;4                              
(1)  925/    CD37 :                                             ;LDA emu_ptr+1,X                ;4
(1)  925/    CD37 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  925/    CD37 :                                             ;STA emu_ptr+1,X                ;4
(1)  925/    CD37 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  925/    CD37 :                                             
(1)  925/    CD37 :                                             ;Method 3 - 30 cycles
(1)  925/    CD37 :                                             ;TXA                                                    ;2
(1)  925/    CD37 :                                             ;TAY                                                    ;2
(1)  925/    CD37 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  925/    CD37 :                                             ;ASL                                                    ;2
(1)  925/    CD37 :                                             ;BCS upper                                              ;2
(1)  925/    CD37 :                                             ;lower:
(1)  925/    CD37 :                                             ;       ASL                                                     ;2
(1)  925/    CD37 :                                             ;       TAX                                                     ;2
(1)  925/    CD37 :                                             ;       BCS upper_lower                         ;2
(1)  925/    CD37 :                                             ;       lower_lower:
(1)  925/    CD37 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  925/    CD37 :                                             ;       upper_lower:
(1)  925/    CD37 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  925/    CD37 :                                             ;upper:
(1)  925/    CD37 :                                             ;       ASL
(1)  925/    CD37 :                                             ;       TAX
(1)  925/    CD37 :                                             ;       BCS upper_upper
(1)  925/    CD37 :                                             ;       lower_upper:
(1)  925/    CD37 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  925/    CD37 :                                             ;       upper_upper:
(1)  925/    CD37 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  925/    CD37 :                                             ;After jump:
(1)  925/    CD37 :                                             ;TYA                                                    ;2
(1)  925/    CD37 :                                             ;TAX                                                    ;2
(1)  925/    CD37 :                                             
(1)  925/    CD37 :                                             ;Method 4 - 28 cycles
(1)  925/    CD37 :                                             ;LDA (emu_PC,X)                 ;6
(1)  925/    CD37 :                                             ;TAY                                    ;2
(1)  925/    CD37 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  925/    CD37 :                                             ;PHA                                    ;3
(1)  925/    CD37 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  925/    CD37 :                                             ;PHA                                    ;3
(1)  925/    CD37 :                                             ;RTS                                    ;6
(1)  925/    CD37 :                                             
(1)  925/    CD37 :                                             ;Method 5 - 30 cycles
(1)  925/    CD37 : A1 02                                       LDA (emu_PC,X)                  ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 275 - 1/5/2022 11:50:53


(1)  925/    CD39 : A8                                          TAY                                             ;2
(1)  925/    CD3A : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  925/    CD3D : 95 0A                                       STA emu_ptr,X                   ;4
(1)  925/    CD3F : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  925/    CD42 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  925/    CD44 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  925/    CD47 :                                                                     
(1)  926/    CD47 :                     
(1)  927/    CD47 :                     	;0xB9 - LDA ABSY
(1)  928/    CD47 :                     	LDA_ABSY:
(1)  929/    CD47 : (MACRO)             		OP_MACRO 185, "LDA", "ABSY", "LDA_ABSY"
(1)  929/    CD47 :                                             ;TODO
(1)  930/    CD47 : (MACRO)             		NEXT_MACRO
(1)  930/    CD47 :                                             
(1)  930/    CD47 :  (MACRO-2)                                  halt
(1)  930/    CD47 : 00                                  BRK
(1)  930/    CD48 : 00                                  BRK
(1)  930/    CD49 :                                             
(1)  930/    CD49 :                                             ;Method 1 - 60 cycles
(1)  930/    CD49 :                                             ;Jump table must be page aligned!!!
(1)  930/    CD49 :                                             ;LDA (emu_PC,X)                 ;6
(1)  930/    CD49 :                                             ;ASL                                    ;2
(1)  930/    CD49 :                                             ;STA emu_ptr,X                  ;4
(1)  930/    CD49 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  930/    CD49 :                                             ;ADC #0                                 ;2
(1)  930/    CD49 :                                             ;STA emu_ptr+1,X                ;4
(1)  930/    CD49 :                                             ;LDA (emu_ptr,X)                ;6
(1)  930/    CD49 :                                             ;STA emu_ptr2,X                 ;4
(1)  930/    CD49 :                                             ;INC emu_ptr,X                  ;6
(1)  930/    CD49 :                                             ;BCC .skip                              ;2
(1)  930/    CD49 :                                             ;       INC emu_ptr+1,X         ;6
(1)  930/    CD49 :                                             ;.skip:
(1)  930/    CD49 :                                             ;LDA (emu_ptr,X)                ;6
(1)  930/    CD49 :                                             ;STA emu_ptr2+1,X               ;4
(1)  930/    CD49 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  930/    CD49 :                                             
(1)  930/    CD49 :                                             ;Method 2 - 46 cycles
(1)  930/    CD49 :                                             ;Jump table must be page aligned!!!
(1)  930/    CD49 :                                             ;LDA (emu_PC,X)                 ;6
(1)  930/    CD49 :                                             ;STZ emu_ptr+1,X                ;4
(1)  930/    CD49 :                                             ;ASL                                    ;2
(1)  930/    CD49 :                                             ;ROL emu_ptr+1,X                ;6
(1)  930/    CD49 :                                             ;ASL                                    ;2
(1)  930/    CD49 :                                             ;ROL emu_ptr+1,X                ;6
(1)  930/    CD49 :                                             ;STA emu_ptr,X                  ;4                              
(1)  930/    CD49 :                                             ;LDA emu_ptr+1,X                ;4
(1)  930/    CD49 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  930/    CD49 :                                             ;STA emu_ptr+1,X                ;4
(1)  930/    CD49 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  930/    CD49 :                                             
(1)  930/    CD49 :                                             ;Method 3 - 30 cycles
(1)  930/    CD49 :                                             ;TXA                                                    ;2
(1)  930/    CD49 :                                             ;TAY                                                    ;2
(1)  930/    CD49 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  930/    CD49 :                                             ;ASL                                                    ;2
(1)  930/    CD49 :                                             ;BCS upper                                              ;2
(1)  930/    CD49 :                                             ;lower:
(1)  930/    CD49 :                                             ;       ASL                                                     ;2
(1)  930/    CD49 :                                             ;       TAX                                                     ;2
(1)  930/    CD49 :                                             ;       BCS upper_lower                         ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 276 - 1/5/2022 11:50:53


(1)  930/    CD49 :                                             ;       lower_lower:
(1)  930/    CD49 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  930/    CD49 :                                             ;       upper_lower:
(1)  930/    CD49 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  930/    CD49 :                                             ;upper:
(1)  930/    CD49 :                                             ;       ASL
(1)  930/    CD49 :                                             ;       TAX
(1)  930/    CD49 :                                             ;       BCS upper_upper
(1)  930/    CD49 :                                             ;       lower_upper:
(1)  930/    CD49 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  930/    CD49 :                                             ;       upper_upper:
(1)  930/    CD49 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  930/    CD49 :                                             ;After jump:
(1)  930/    CD49 :                                             ;TYA                                                    ;2
(1)  930/    CD49 :                                             ;TAX                                                    ;2
(1)  930/    CD49 :                                             
(1)  930/    CD49 :                                             ;Method 4 - 28 cycles
(1)  930/    CD49 :                                             ;LDA (emu_PC,X)                 ;6
(1)  930/    CD49 :                                             ;TAY                                    ;2
(1)  930/    CD49 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  930/    CD49 :                                             ;PHA                                    ;3
(1)  930/    CD49 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  930/    CD49 :                                             ;PHA                                    ;3
(1)  930/    CD49 :                                             ;RTS                                    ;6
(1)  930/    CD49 :                                             
(1)  930/    CD49 :                                             ;Method 5 - 30 cycles
(1)  930/    CD49 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  930/    CD4B : A8                                          TAY                                             ;2
(1)  930/    CD4C : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  930/    CD4F : 95 0A                                       STA emu_ptr,X                   ;4
(1)  930/    CD51 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  930/    CD54 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  930/    CD56 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  930/    CD59 :                                                                     
(1)  931/    CD59 :                     
(1)  932/    CD59 :                     	;0xBA - TSX IMP
(1)  933/    CD59 :                     	TSX_IMP:
(1)  934/    CD59 : (MACRO)             		OP_MACRO 186, "TSX", "IMP", "TSX_IMP"
(1)  934/    CD59 :                                             ;TODO
(1)  935/    CD59 : (MACRO)             		NEXT_MACRO
(1)  935/    CD59 :                                             
(1)  935/    CD59 :  (MACRO-2)                                  halt
(1)  935/    CD59 : 00                                  BRK
(1)  935/    CD5A : 00                                  BRK
(1)  935/    CD5B :                                             
(1)  935/    CD5B :                                             ;Method 1 - 60 cycles
(1)  935/    CD5B :                                             ;Jump table must be page aligned!!!
(1)  935/    CD5B :                                             ;LDA (emu_PC,X)                 ;6
(1)  935/    CD5B :                                             ;ASL                                    ;2
(1)  935/    CD5B :                                             ;STA emu_ptr,X                  ;4
(1)  935/    CD5B :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  935/    CD5B :                                             ;ADC #0                                 ;2
(1)  935/    CD5B :                                             ;STA emu_ptr+1,X                ;4
(1)  935/    CD5B :                                             ;LDA (emu_ptr,X)                ;6
(1)  935/    CD5B :                                             ;STA emu_ptr2,X                 ;4
(1)  935/    CD5B :                                             ;INC emu_ptr,X                  ;6
(1)  935/    CD5B :                                             ;BCC .skip                              ;2
(1)  935/    CD5B :                                             ;       INC emu_ptr+1,X         ;6
(1)  935/    CD5B :                                             ;.skip:
(1)  935/    CD5B :                                             ;LDA (emu_ptr,X)                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 277 - 1/5/2022 11:50:53


(1)  935/    CD5B :                                             ;STA emu_ptr2+1,X               ;4
(1)  935/    CD5B :                                             ;JMP (emu_ptr2,X)               ;6
(1)  935/    CD5B :                                             
(1)  935/    CD5B :                                             ;Method 2 - 46 cycles
(1)  935/    CD5B :                                             ;Jump table must be page aligned!!!
(1)  935/    CD5B :                                             ;LDA (emu_PC,X)                 ;6
(1)  935/    CD5B :                                             ;STZ emu_ptr+1,X                ;4
(1)  935/    CD5B :                                             ;ASL                                    ;2
(1)  935/    CD5B :                                             ;ROL emu_ptr+1,X                ;6
(1)  935/    CD5B :                                             ;ASL                                    ;2
(1)  935/    CD5B :                                             ;ROL emu_ptr+1,X                ;6
(1)  935/    CD5B :                                             ;STA emu_ptr,X                  ;4                              
(1)  935/    CD5B :                                             ;LDA emu_ptr+1,X                ;4
(1)  935/    CD5B :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  935/    CD5B :                                             ;STA emu_ptr+1,X                ;4
(1)  935/    CD5B :                                             ;JMP (emu_ptr2,X)               ;6
(1)  935/    CD5B :                                             
(1)  935/    CD5B :                                             ;Method 3 - 30 cycles
(1)  935/    CD5B :                                             ;TXA                                                    ;2
(1)  935/    CD5B :                                             ;TAY                                                    ;2
(1)  935/    CD5B :                                             ;LDA (emu_PC,X)                                 ;6
(1)  935/    CD5B :                                             ;ASL                                                    ;2
(1)  935/    CD5B :                                             ;BCS upper                                              ;2
(1)  935/    CD5B :                                             ;lower:
(1)  935/    CD5B :                                             ;       ASL                                                     ;2
(1)  935/    CD5B :                                             ;       TAX                                                     ;2
(1)  935/    CD5B :                                             ;       BCS upper_lower                         ;2
(1)  935/    CD5B :                                             ;       lower_lower:
(1)  935/    CD5B :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  935/    CD5B :                                             ;       upper_lower:
(1)  935/    CD5B :                                             ;               JMP (JUMP_TABLE2,X)
(1)  935/    CD5B :                                             ;upper:
(1)  935/    CD5B :                                             ;       ASL
(1)  935/    CD5B :                                             ;       TAX
(1)  935/    CD5B :                                             ;       BCS upper_upper
(1)  935/    CD5B :                                             ;       lower_upper:
(1)  935/    CD5B :                                             ;               JMP (JUMP_TABLE3,X)
(1)  935/    CD5B :                                             ;       upper_upper:
(1)  935/    CD5B :                                             ;               JMP (JUMP_TABLE4,X)
(1)  935/    CD5B :                                             ;After jump:
(1)  935/    CD5B :                                             ;TYA                                                    ;2
(1)  935/    CD5B :                                             ;TAX                                                    ;2
(1)  935/    CD5B :                                             
(1)  935/    CD5B :                                             ;Method 4 - 28 cycles
(1)  935/    CD5B :                                             ;LDA (emu_PC,X)                 ;6
(1)  935/    CD5B :                                             ;TAY                                    ;2
(1)  935/    CD5B :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  935/    CD5B :                                             ;PHA                                    ;3
(1)  935/    CD5B :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  935/    CD5B :                                             ;PHA                                    ;3
(1)  935/    CD5B :                                             ;RTS                                    ;6
(1)  935/    CD5B :                                             
(1)  935/    CD5B :                                             ;Method 5 - 30 cycles
(1)  935/    CD5B : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  935/    CD5D : A8                                          TAY                                             ;2
(1)  935/    CD5E : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  935/    CD61 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  935/    CD63 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  935/    CD66 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  935/    CD68 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 278 - 1/5/2022 11:50:53


(1)  935/    CD6B :                                                                     
(1)  936/    CD6B :                     
(1)  937/    CD6B :                     	;0xBB - NOP
(1)  938/    CD6B :                     	NOP_0xBB:
(1)  939/    CD6B : (MACRO)             		OP_MACRO 187, "NOP", "IMP", "NOP_0xBB"
(1)  939/    CD6B :                                             ;TODO
(1)  940/    CD6B : (MACRO)             		NEXT_MACRO
(1)  940/    CD6B :                                             
(1)  940/    CD6B :  (MACRO-2)                                  halt
(1)  940/    CD6B : 00                                  BRK
(1)  940/    CD6C : 00                                  BRK
(1)  940/    CD6D :                                             
(1)  940/    CD6D :                                             ;Method 1 - 60 cycles
(1)  940/    CD6D :                                             ;Jump table must be page aligned!!!
(1)  940/    CD6D :                                             ;LDA (emu_PC,X)                 ;6
(1)  940/    CD6D :                                             ;ASL                                    ;2
(1)  940/    CD6D :                                             ;STA emu_ptr,X                  ;4
(1)  940/    CD6D :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  940/    CD6D :                                             ;ADC #0                                 ;2
(1)  940/    CD6D :                                             ;STA emu_ptr+1,X                ;4
(1)  940/    CD6D :                                             ;LDA (emu_ptr,X)                ;6
(1)  940/    CD6D :                                             ;STA emu_ptr2,X                 ;4
(1)  940/    CD6D :                                             ;INC emu_ptr,X                  ;6
(1)  940/    CD6D :                                             ;BCC .skip                              ;2
(1)  940/    CD6D :                                             ;       INC emu_ptr+1,X         ;6
(1)  940/    CD6D :                                             ;.skip:
(1)  940/    CD6D :                                             ;LDA (emu_ptr,X)                ;6
(1)  940/    CD6D :                                             ;STA emu_ptr2+1,X               ;4
(1)  940/    CD6D :                                             ;JMP (emu_ptr2,X)               ;6
(1)  940/    CD6D :                                             
(1)  940/    CD6D :                                             ;Method 2 - 46 cycles
(1)  940/    CD6D :                                             ;Jump table must be page aligned!!!
(1)  940/    CD6D :                                             ;LDA (emu_PC,X)                 ;6
(1)  940/    CD6D :                                             ;STZ emu_ptr+1,X                ;4
(1)  940/    CD6D :                                             ;ASL                                    ;2
(1)  940/    CD6D :                                             ;ROL emu_ptr+1,X                ;6
(1)  940/    CD6D :                                             ;ASL                                    ;2
(1)  940/    CD6D :                                             ;ROL emu_ptr+1,X                ;6
(1)  940/    CD6D :                                             ;STA emu_ptr,X                  ;4                              
(1)  940/    CD6D :                                             ;LDA emu_ptr+1,X                ;4
(1)  940/    CD6D :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  940/    CD6D :                                             ;STA emu_ptr+1,X                ;4
(1)  940/    CD6D :                                             ;JMP (emu_ptr2,X)               ;6
(1)  940/    CD6D :                                             
(1)  940/    CD6D :                                             ;Method 3 - 30 cycles
(1)  940/    CD6D :                                             ;TXA                                                    ;2
(1)  940/    CD6D :                                             ;TAY                                                    ;2
(1)  940/    CD6D :                                             ;LDA (emu_PC,X)                                 ;6
(1)  940/    CD6D :                                             ;ASL                                                    ;2
(1)  940/    CD6D :                                             ;BCS upper                                              ;2
(1)  940/    CD6D :                                             ;lower:
(1)  940/    CD6D :                                             ;       ASL                                                     ;2
(1)  940/    CD6D :                                             ;       TAX                                                     ;2
(1)  940/    CD6D :                                             ;       BCS upper_lower                         ;2
(1)  940/    CD6D :                                             ;       lower_lower:
(1)  940/    CD6D :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  940/    CD6D :                                             ;       upper_lower:
(1)  940/    CD6D :                                             ;               JMP (JUMP_TABLE2,X)
(1)  940/    CD6D :                                             ;upper:
(1)  940/    CD6D :                                             ;       ASL
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 279 - 1/5/2022 11:50:53


(1)  940/    CD6D :                                             ;       TAX
(1)  940/    CD6D :                                             ;       BCS upper_upper
(1)  940/    CD6D :                                             ;       lower_upper:
(1)  940/    CD6D :                                             ;               JMP (JUMP_TABLE3,X)
(1)  940/    CD6D :                                             ;       upper_upper:
(1)  940/    CD6D :                                             ;               JMP (JUMP_TABLE4,X)
(1)  940/    CD6D :                                             ;After jump:
(1)  940/    CD6D :                                             ;TYA                                                    ;2
(1)  940/    CD6D :                                             ;TAX                                                    ;2
(1)  940/    CD6D :                                             
(1)  940/    CD6D :                                             ;Method 4 - 28 cycles
(1)  940/    CD6D :                                             ;LDA (emu_PC,X)                 ;6
(1)  940/    CD6D :                                             ;TAY                                    ;2
(1)  940/    CD6D :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  940/    CD6D :                                             ;PHA                                    ;3
(1)  940/    CD6D :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  940/    CD6D :                                             ;PHA                                    ;3
(1)  940/    CD6D :                                             ;RTS                                    ;6
(1)  940/    CD6D :                                             
(1)  940/    CD6D :                                             ;Method 5 - 30 cycles
(1)  940/    CD6D : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  940/    CD6F : A8                                          TAY                                             ;2
(1)  940/    CD70 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  940/    CD73 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  940/    CD75 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  940/    CD78 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  940/    CD7A : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  940/    CD7D :                                                                     
(1)  941/    CD7D :                     
(1)  942/    CD7D :                     	;0xBC - LDY ABSX
(1)  943/    CD7D :                     	LDY_ABSX:
(1)  944/    CD7D : (MACRO)             		OP_MACRO 188, "LDY", "ABSX", "LDY_ABSX"
(1)  944/    CD7D :                                             ;TODO
(1)  945/    CD7D : (MACRO)             		NEXT_MACRO
(1)  945/    CD7D :                                             
(1)  945/    CD7D :  (MACRO-2)                                  halt
(1)  945/    CD7D : 00                                  BRK
(1)  945/    CD7E : 00                                  BRK
(1)  945/    CD7F :                                             
(1)  945/    CD7F :                                             ;Method 1 - 60 cycles
(1)  945/    CD7F :                                             ;Jump table must be page aligned!!!
(1)  945/    CD7F :                                             ;LDA (emu_PC,X)                 ;6
(1)  945/    CD7F :                                             ;ASL                                    ;2
(1)  945/    CD7F :                                             ;STA emu_ptr,X                  ;4
(1)  945/    CD7F :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  945/    CD7F :                                             ;ADC #0                                 ;2
(1)  945/    CD7F :                                             ;STA emu_ptr+1,X                ;4
(1)  945/    CD7F :                                             ;LDA (emu_ptr,X)                ;6
(1)  945/    CD7F :                                             ;STA emu_ptr2,X                 ;4
(1)  945/    CD7F :                                             ;INC emu_ptr,X                  ;6
(1)  945/    CD7F :                                             ;BCC .skip                              ;2
(1)  945/    CD7F :                                             ;       INC emu_ptr+1,X         ;6
(1)  945/    CD7F :                                             ;.skip:
(1)  945/    CD7F :                                             ;LDA (emu_ptr,X)                ;6
(1)  945/    CD7F :                                             ;STA emu_ptr2+1,X               ;4
(1)  945/    CD7F :                                             ;JMP (emu_ptr2,X)               ;6
(1)  945/    CD7F :                                             
(1)  945/    CD7F :                                             ;Method 2 - 46 cycles
(1)  945/    CD7F :                                             ;Jump table must be page aligned!!!
(1)  945/    CD7F :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 280 - 1/5/2022 11:50:53


(1)  945/    CD7F :                                             ;STZ emu_ptr+1,X                ;4
(1)  945/    CD7F :                                             ;ASL                                    ;2
(1)  945/    CD7F :                                             ;ROL emu_ptr+1,X                ;6
(1)  945/    CD7F :                                             ;ASL                                    ;2
(1)  945/    CD7F :                                             ;ROL emu_ptr+1,X                ;6
(1)  945/    CD7F :                                             ;STA emu_ptr,X                  ;4                              
(1)  945/    CD7F :                                             ;LDA emu_ptr+1,X                ;4
(1)  945/    CD7F :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  945/    CD7F :                                             ;STA emu_ptr+1,X                ;4
(1)  945/    CD7F :                                             ;JMP (emu_ptr2,X)               ;6
(1)  945/    CD7F :                                             
(1)  945/    CD7F :                                             ;Method 3 - 30 cycles
(1)  945/    CD7F :                                             ;TXA                                                    ;2
(1)  945/    CD7F :                                             ;TAY                                                    ;2
(1)  945/    CD7F :                                             ;LDA (emu_PC,X)                                 ;6
(1)  945/    CD7F :                                             ;ASL                                                    ;2
(1)  945/    CD7F :                                             ;BCS upper                                              ;2
(1)  945/    CD7F :                                             ;lower:
(1)  945/    CD7F :                                             ;       ASL                                                     ;2
(1)  945/    CD7F :                                             ;       TAX                                                     ;2
(1)  945/    CD7F :                                             ;       BCS upper_lower                         ;2
(1)  945/    CD7F :                                             ;       lower_lower:
(1)  945/    CD7F :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  945/    CD7F :                                             ;       upper_lower:
(1)  945/    CD7F :                                             ;               JMP (JUMP_TABLE2,X)
(1)  945/    CD7F :                                             ;upper:
(1)  945/    CD7F :                                             ;       ASL
(1)  945/    CD7F :                                             ;       TAX
(1)  945/    CD7F :                                             ;       BCS upper_upper
(1)  945/    CD7F :                                             ;       lower_upper:
(1)  945/    CD7F :                                             ;               JMP (JUMP_TABLE3,X)
(1)  945/    CD7F :                                             ;       upper_upper:
(1)  945/    CD7F :                                             ;               JMP (JUMP_TABLE4,X)
(1)  945/    CD7F :                                             ;After jump:
(1)  945/    CD7F :                                             ;TYA                                                    ;2
(1)  945/    CD7F :                                             ;TAX                                                    ;2
(1)  945/    CD7F :                                             
(1)  945/    CD7F :                                             ;Method 4 - 28 cycles
(1)  945/    CD7F :                                             ;LDA (emu_PC,X)                 ;6
(1)  945/    CD7F :                                             ;TAY                                    ;2
(1)  945/    CD7F :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  945/    CD7F :                                             ;PHA                                    ;3
(1)  945/    CD7F :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  945/    CD7F :                                             ;PHA                                    ;3
(1)  945/    CD7F :                                             ;RTS                                    ;6
(1)  945/    CD7F :                                             
(1)  945/    CD7F :                                             ;Method 5 - 30 cycles
(1)  945/    CD7F : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  945/    CD81 : A8                                          TAY                                             ;2
(1)  945/    CD82 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  945/    CD85 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  945/    CD87 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  945/    CD8A : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  945/    CD8C : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  945/    CD8F :                                                                     
(1)  946/    CD8F :                     
(1)  947/    CD8F :                     	;0xBD - LDA ABSX
(1)  948/    CD8F :                     	LDA_ABSX:
(1)  949/    CD8F : (MACRO)             		OP_MACRO 189, "LDA", "ABSX", "LDA_ABSX"
(1)  949/    CD8F :                                             ;TODO
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 281 - 1/5/2022 11:50:53


(1)  950/    CD8F : (MACRO)             		NEXT_MACRO
(1)  950/    CD8F :                                             
(1)  950/    CD8F :  (MACRO-2)                                  halt
(1)  950/    CD8F : 00                                  BRK
(1)  950/    CD90 : 00                                  BRK
(1)  950/    CD91 :                                             
(1)  950/    CD91 :                                             ;Method 1 - 60 cycles
(1)  950/    CD91 :                                             ;Jump table must be page aligned!!!
(1)  950/    CD91 :                                             ;LDA (emu_PC,X)                 ;6
(1)  950/    CD91 :                                             ;ASL                                    ;2
(1)  950/    CD91 :                                             ;STA emu_ptr,X                  ;4
(1)  950/    CD91 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  950/    CD91 :                                             ;ADC #0                                 ;2
(1)  950/    CD91 :                                             ;STA emu_ptr+1,X                ;4
(1)  950/    CD91 :                                             ;LDA (emu_ptr,X)                ;6
(1)  950/    CD91 :                                             ;STA emu_ptr2,X                 ;4
(1)  950/    CD91 :                                             ;INC emu_ptr,X                  ;6
(1)  950/    CD91 :                                             ;BCC .skip                              ;2
(1)  950/    CD91 :                                             ;       INC emu_ptr+1,X         ;6
(1)  950/    CD91 :                                             ;.skip:
(1)  950/    CD91 :                                             ;LDA (emu_ptr,X)                ;6
(1)  950/    CD91 :                                             ;STA emu_ptr2+1,X               ;4
(1)  950/    CD91 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  950/    CD91 :                                             
(1)  950/    CD91 :                                             ;Method 2 - 46 cycles
(1)  950/    CD91 :                                             ;Jump table must be page aligned!!!
(1)  950/    CD91 :                                             ;LDA (emu_PC,X)                 ;6
(1)  950/    CD91 :                                             ;STZ emu_ptr+1,X                ;4
(1)  950/    CD91 :                                             ;ASL                                    ;2
(1)  950/    CD91 :                                             ;ROL emu_ptr+1,X                ;6
(1)  950/    CD91 :                                             ;ASL                                    ;2
(1)  950/    CD91 :                                             ;ROL emu_ptr+1,X                ;6
(1)  950/    CD91 :                                             ;STA emu_ptr,X                  ;4                              
(1)  950/    CD91 :                                             ;LDA emu_ptr+1,X                ;4
(1)  950/    CD91 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  950/    CD91 :                                             ;STA emu_ptr+1,X                ;4
(1)  950/    CD91 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  950/    CD91 :                                             
(1)  950/    CD91 :                                             ;Method 3 - 30 cycles
(1)  950/    CD91 :                                             ;TXA                                                    ;2
(1)  950/    CD91 :                                             ;TAY                                                    ;2
(1)  950/    CD91 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  950/    CD91 :                                             ;ASL                                                    ;2
(1)  950/    CD91 :                                             ;BCS upper                                              ;2
(1)  950/    CD91 :                                             ;lower:
(1)  950/    CD91 :                                             ;       ASL                                                     ;2
(1)  950/    CD91 :                                             ;       TAX                                                     ;2
(1)  950/    CD91 :                                             ;       BCS upper_lower                         ;2
(1)  950/    CD91 :                                             ;       lower_lower:
(1)  950/    CD91 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  950/    CD91 :                                             ;       upper_lower:
(1)  950/    CD91 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  950/    CD91 :                                             ;upper:
(1)  950/    CD91 :                                             ;       ASL
(1)  950/    CD91 :                                             ;       TAX
(1)  950/    CD91 :                                             ;       BCS upper_upper
(1)  950/    CD91 :                                             ;       lower_upper:
(1)  950/    CD91 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  950/    CD91 :                                             ;       upper_upper:
(1)  950/    CD91 :                                             ;               JMP (JUMP_TABLE4,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 282 - 1/5/2022 11:50:53


(1)  950/    CD91 :                                             ;After jump:
(1)  950/    CD91 :                                             ;TYA                                                    ;2
(1)  950/    CD91 :                                             ;TAX                                                    ;2
(1)  950/    CD91 :                                             
(1)  950/    CD91 :                                             ;Method 4 - 28 cycles
(1)  950/    CD91 :                                             ;LDA (emu_PC,X)                 ;6
(1)  950/    CD91 :                                             ;TAY                                    ;2
(1)  950/    CD91 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  950/    CD91 :                                             ;PHA                                    ;3
(1)  950/    CD91 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  950/    CD91 :                                             ;PHA                                    ;3
(1)  950/    CD91 :                                             ;RTS                                    ;6
(1)  950/    CD91 :                                             
(1)  950/    CD91 :                                             ;Method 5 - 30 cycles
(1)  950/    CD91 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  950/    CD93 : A8                                          TAY                                             ;2
(1)  950/    CD94 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  950/    CD97 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  950/    CD99 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  950/    CD9C : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  950/    CD9E : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  950/    CDA1 :                                                                     
(1)  951/    CDA1 :                     
(1)  952/    CDA1 :                     	;0xBE - LDX ABSY
(1)  953/    CDA1 :                     	LDX_ABSY:
(1)  954/    CDA1 : (MACRO)             		OP_MACRO 190, "LDX", "ABSY", "LDX_ABSY"
(1)  954/    CDA1 :                                             ;TODO
(1)  955/    CDA1 : (MACRO)             		NEXT_MACRO
(1)  955/    CDA1 :                                             
(1)  955/    CDA1 :  (MACRO-2)                                  halt
(1)  955/    CDA1 : 00                                  BRK
(1)  955/    CDA2 : 00                                  BRK
(1)  955/    CDA3 :                                             
(1)  955/    CDA3 :                                             ;Method 1 - 60 cycles
(1)  955/    CDA3 :                                             ;Jump table must be page aligned!!!
(1)  955/    CDA3 :                                             ;LDA (emu_PC,X)                 ;6
(1)  955/    CDA3 :                                             ;ASL                                    ;2
(1)  955/    CDA3 :                                             ;STA emu_ptr,X                  ;4
(1)  955/    CDA3 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  955/    CDA3 :                                             ;ADC #0                                 ;2
(1)  955/    CDA3 :                                             ;STA emu_ptr+1,X                ;4
(1)  955/    CDA3 :                                             ;LDA (emu_ptr,X)                ;6
(1)  955/    CDA3 :                                             ;STA emu_ptr2,X                 ;4
(1)  955/    CDA3 :                                             ;INC emu_ptr,X                  ;6
(1)  955/    CDA3 :                                             ;BCC .skip                              ;2
(1)  955/    CDA3 :                                             ;       INC emu_ptr+1,X         ;6
(1)  955/    CDA3 :                                             ;.skip:
(1)  955/    CDA3 :                                             ;LDA (emu_ptr,X)                ;6
(1)  955/    CDA3 :                                             ;STA emu_ptr2+1,X               ;4
(1)  955/    CDA3 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  955/    CDA3 :                                             
(1)  955/    CDA3 :                                             ;Method 2 - 46 cycles
(1)  955/    CDA3 :                                             ;Jump table must be page aligned!!!
(1)  955/    CDA3 :                                             ;LDA (emu_PC,X)                 ;6
(1)  955/    CDA3 :                                             ;STZ emu_ptr+1,X                ;4
(1)  955/    CDA3 :                                             ;ASL                                    ;2
(1)  955/    CDA3 :                                             ;ROL emu_ptr+1,X                ;6
(1)  955/    CDA3 :                                             ;ASL                                    ;2
(1)  955/    CDA3 :                                             ;ROL emu_ptr+1,X                ;6
(1)  955/    CDA3 :                                             ;STA emu_ptr,X                  ;4                              
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 283 - 1/5/2022 11:50:53


(1)  955/    CDA3 :                                             ;LDA emu_ptr+1,X                ;4
(1)  955/    CDA3 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  955/    CDA3 :                                             ;STA emu_ptr+1,X                ;4
(1)  955/    CDA3 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  955/    CDA3 :                                             
(1)  955/    CDA3 :                                             ;Method 3 - 30 cycles
(1)  955/    CDA3 :                                             ;TXA                                                    ;2
(1)  955/    CDA3 :                                             ;TAY                                                    ;2
(1)  955/    CDA3 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  955/    CDA3 :                                             ;ASL                                                    ;2
(1)  955/    CDA3 :                                             ;BCS upper                                              ;2
(1)  955/    CDA3 :                                             ;lower:
(1)  955/    CDA3 :                                             ;       ASL                                                     ;2
(1)  955/    CDA3 :                                             ;       TAX                                                     ;2
(1)  955/    CDA3 :                                             ;       BCS upper_lower                         ;2
(1)  955/    CDA3 :                                             ;       lower_lower:
(1)  955/    CDA3 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  955/    CDA3 :                                             ;       upper_lower:
(1)  955/    CDA3 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  955/    CDA3 :                                             ;upper:
(1)  955/    CDA3 :                                             ;       ASL
(1)  955/    CDA3 :                                             ;       TAX
(1)  955/    CDA3 :                                             ;       BCS upper_upper
(1)  955/    CDA3 :                                             ;       lower_upper:
(1)  955/    CDA3 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  955/    CDA3 :                                             ;       upper_upper:
(1)  955/    CDA3 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  955/    CDA3 :                                             ;After jump:
(1)  955/    CDA3 :                                             ;TYA                                                    ;2
(1)  955/    CDA3 :                                             ;TAX                                                    ;2
(1)  955/    CDA3 :                                             
(1)  955/    CDA3 :                                             ;Method 4 - 28 cycles
(1)  955/    CDA3 :                                             ;LDA (emu_PC,X)                 ;6
(1)  955/    CDA3 :                                             ;TAY                                    ;2
(1)  955/    CDA3 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  955/    CDA3 :                                             ;PHA                                    ;3
(1)  955/    CDA3 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  955/    CDA3 :                                             ;PHA                                    ;3
(1)  955/    CDA3 :                                             ;RTS                                    ;6
(1)  955/    CDA3 :                                             
(1)  955/    CDA3 :                                             ;Method 5 - 30 cycles
(1)  955/    CDA3 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  955/    CDA5 : A8                                          TAY                                             ;2
(1)  955/    CDA6 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  955/    CDA9 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  955/    CDAB : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  955/    CDAE : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  955/    CDB0 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  955/    CDB3 :                                                                     
(1)  956/    CDB3 :                     
(1)  957/    CDB3 :                     	;0xBF - NOP
(1)  958/    CDB3 :                     	NOP_0xBF:
(1)  959/    CDB3 : (MACRO)             		OP_MACRO 191, "NOP", "IMP", "NOP_0xBF"
(1)  959/    CDB3 :                                             ;TODO
(1)  960/    CDB3 : (MACRO)             		NEXT_MACRO
(1)  960/    CDB3 :                                             
(1)  960/    CDB3 :  (MACRO-2)                                  halt
(1)  960/    CDB3 : 00                                  BRK
(1)  960/    CDB4 : 00                                  BRK
(1)  960/    CDB5 :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 284 - 1/5/2022 11:50:53


(1)  960/    CDB5 :                                             ;Method 1 - 60 cycles
(1)  960/    CDB5 :                                             ;Jump table must be page aligned!!!
(1)  960/    CDB5 :                                             ;LDA (emu_PC,X)                 ;6
(1)  960/    CDB5 :                                             ;ASL                                    ;2
(1)  960/    CDB5 :                                             ;STA emu_ptr,X                  ;4
(1)  960/    CDB5 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  960/    CDB5 :                                             ;ADC #0                                 ;2
(1)  960/    CDB5 :                                             ;STA emu_ptr+1,X                ;4
(1)  960/    CDB5 :                                             ;LDA (emu_ptr,X)                ;6
(1)  960/    CDB5 :                                             ;STA emu_ptr2,X                 ;4
(1)  960/    CDB5 :                                             ;INC emu_ptr,X                  ;6
(1)  960/    CDB5 :                                             ;BCC .skip                              ;2
(1)  960/    CDB5 :                                             ;       INC emu_ptr+1,X         ;6
(1)  960/    CDB5 :                                             ;.skip:
(1)  960/    CDB5 :                                             ;LDA (emu_ptr,X)                ;6
(1)  960/    CDB5 :                                             ;STA emu_ptr2+1,X               ;4
(1)  960/    CDB5 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  960/    CDB5 :                                             
(1)  960/    CDB5 :                                             ;Method 2 - 46 cycles
(1)  960/    CDB5 :                                             ;Jump table must be page aligned!!!
(1)  960/    CDB5 :                                             ;LDA (emu_PC,X)                 ;6
(1)  960/    CDB5 :                                             ;STZ emu_ptr+1,X                ;4
(1)  960/    CDB5 :                                             ;ASL                                    ;2
(1)  960/    CDB5 :                                             ;ROL emu_ptr+1,X                ;6
(1)  960/    CDB5 :                                             ;ASL                                    ;2
(1)  960/    CDB5 :                                             ;ROL emu_ptr+1,X                ;6
(1)  960/    CDB5 :                                             ;STA emu_ptr,X                  ;4                              
(1)  960/    CDB5 :                                             ;LDA emu_ptr+1,X                ;4
(1)  960/    CDB5 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  960/    CDB5 :                                             ;STA emu_ptr+1,X                ;4
(1)  960/    CDB5 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  960/    CDB5 :                                             
(1)  960/    CDB5 :                                             ;Method 3 - 30 cycles
(1)  960/    CDB5 :                                             ;TXA                                                    ;2
(1)  960/    CDB5 :                                             ;TAY                                                    ;2
(1)  960/    CDB5 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  960/    CDB5 :                                             ;ASL                                                    ;2
(1)  960/    CDB5 :                                             ;BCS upper                                              ;2
(1)  960/    CDB5 :                                             ;lower:
(1)  960/    CDB5 :                                             ;       ASL                                                     ;2
(1)  960/    CDB5 :                                             ;       TAX                                                     ;2
(1)  960/    CDB5 :                                             ;       BCS upper_lower                         ;2
(1)  960/    CDB5 :                                             ;       lower_lower:
(1)  960/    CDB5 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  960/    CDB5 :                                             ;       upper_lower:
(1)  960/    CDB5 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  960/    CDB5 :                                             ;upper:
(1)  960/    CDB5 :                                             ;       ASL
(1)  960/    CDB5 :                                             ;       TAX
(1)  960/    CDB5 :                                             ;       BCS upper_upper
(1)  960/    CDB5 :                                             ;       lower_upper:
(1)  960/    CDB5 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  960/    CDB5 :                                             ;       upper_upper:
(1)  960/    CDB5 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  960/    CDB5 :                                             ;After jump:
(1)  960/    CDB5 :                                             ;TYA                                                    ;2
(1)  960/    CDB5 :                                             ;TAX                                                    ;2
(1)  960/    CDB5 :                                             
(1)  960/    CDB5 :                                             ;Method 4 - 28 cycles
(1)  960/    CDB5 :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 285 - 1/5/2022 11:50:53


(1)  960/    CDB5 :                                             ;TAY                                    ;2
(1)  960/    CDB5 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  960/    CDB5 :                                             ;PHA                                    ;3
(1)  960/    CDB5 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  960/    CDB5 :                                             ;PHA                                    ;3
(1)  960/    CDB5 :                                             ;RTS                                    ;6
(1)  960/    CDB5 :                                             
(1)  960/    CDB5 :                                             ;Method 5 - 30 cycles
(1)  960/    CDB5 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  960/    CDB7 : A8                                          TAY                                             ;2
(1)  960/    CDB8 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  960/    CDBB : 95 0A                                       STA emu_ptr,X                   ;4
(1)  960/    CDBD : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  960/    CDC0 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  960/    CDC2 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  960/    CDC5 :                                                                     
(1)  961/    CDC5 :                     
(1)  962/    CDC5 :                     	;0xC0 - CPY IMMED
(1)  963/    CDC5 :                     	CPY_IMMED:
(1)  964/    CDC5 : (MACRO)             		OP_MACRO 192, "CPY", "IMMED", "CPY_IMMED"
(1)  964/    CDC5 :                                             ;TODO
(1)  965/    CDC5 : (MACRO)             		NEXT_MACRO
(1)  965/    CDC5 :                                             
(1)  965/    CDC5 :  (MACRO-2)                                  halt
(1)  965/    CDC5 : 00                                  BRK
(1)  965/    CDC6 : 00                                  BRK
(1)  965/    CDC7 :                                             
(1)  965/    CDC7 :                                             ;Method 1 - 60 cycles
(1)  965/    CDC7 :                                             ;Jump table must be page aligned!!!
(1)  965/    CDC7 :                                             ;LDA (emu_PC,X)                 ;6
(1)  965/    CDC7 :                                             ;ASL                                    ;2
(1)  965/    CDC7 :                                             ;STA emu_ptr,X                  ;4
(1)  965/    CDC7 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  965/    CDC7 :                                             ;ADC #0                                 ;2
(1)  965/    CDC7 :                                             ;STA emu_ptr+1,X                ;4
(1)  965/    CDC7 :                                             ;LDA (emu_ptr,X)                ;6
(1)  965/    CDC7 :                                             ;STA emu_ptr2,X                 ;4
(1)  965/    CDC7 :                                             ;INC emu_ptr,X                  ;6
(1)  965/    CDC7 :                                             ;BCC .skip                              ;2
(1)  965/    CDC7 :                                             ;       INC emu_ptr+1,X         ;6
(1)  965/    CDC7 :                                             ;.skip:
(1)  965/    CDC7 :                                             ;LDA (emu_ptr,X)                ;6
(1)  965/    CDC7 :                                             ;STA emu_ptr2+1,X               ;4
(1)  965/    CDC7 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  965/    CDC7 :                                             
(1)  965/    CDC7 :                                             ;Method 2 - 46 cycles
(1)  965/    CDC7 :                                             ;Jump table must be page aligned!!!
(1)  965/    CDC7 :                                             ;LDA (emu_PC,X)                 ;6
(1)  965/    CDC7 :                                             ;STZ emu_ptr+1,X                ;4
(1)  965/    CDC7 :                                             ;ASL                                    ;2
(1)  965/    CDC7 :                                             ;ROL emu_ptr+1,X                ;6
(1)  965/    CDC7 :                                             ;ASL                                    ;2
(1)  965/    CDC7 :                                             ;ROL emu_ptr+1,X                ;6
(1)  965/    CDC7 :                                             ;STA emu_ptr,X                  ;4                              
(1)  965/    CDC7 :                                             ;LDA emu_ptr+1,X                ;4
(1)  965/    CDC7 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  965/    CDC7 :                                             ;STA emu_ptr+1,X                ;4
(1)  965/    CDC7 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  965/    CDC7 :                                             
(1)  965/    CDC7 :                                             ;Method 3 - 30 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 286 - 1/5/2022 11:50:53


(1)  965/    CDC7 :                                             ;TXA                                                    ;2
(1)  965/    CDC7 :                                             ;TAY                                                    ;2
(1)  965/    CDC7 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  965/    CDC7 :                                             ;ASL                                                    ;2
(1)  965/    CDC7 :                                             ;BCS upper                                              ;2
(1)  965/    CDC7 :                                             ;lower:
(1)  965/    CDC7 :                                             ;       ASL                                                     ;2
(1)  965/    CDC7 :                                             ;       TAX                                                     ;2
(1)  965/    CDC7 :                                             ;       BCS upper_lower                         ;2
(1)  965/    CDC7 :                                             ;       lower_lower:
(1)  965/    CDC7 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  965/    CDC7 :                                             ;       upper_lower:
(1)  965/    CDC7 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  965/    CDC7 :                                             ;upper:
(1)  965/    CDC7 :                                             ;       ASL
(1)  965/    CDC7 :                                             ;       TAX
(1)  965/    CDC7 :                                             ;       BCS upper_upper
(1)  965/    CDC7 :                                             ;       lower_upper:
(1)  965/    CDC7 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  965/    CDC7 :                                             ;       upper_upper:
(1)  965/    CDC7 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  965/    CDC7 :                                             ;After jump:
(1)  965/    CDC7 :                                             ;TYA                                                    ;2
(1)  965/    CDC7 :                                             ;TAX                                                    ;2
(1)  965/    CDC7 :                                             
(1)  965/    CDC7 :                                             ;Method 4 - 28 cycles
(1)  965/    CDC7 :                                             ;LDA (emu_PC,X)                 ;6
(1)  965/    CDC7 :                                             ;TAY                                    ;2
(1)  965/    CDC7 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  965/    CDC7 :                                             ;PHA                                    ;3
(1)  965/    CDC7 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  965/    CDC7 :                                             ;PHA                                    ;3
(1)  965/    CDC7 :                                             ;RTS                                    ;6
(1)  965/    CDC7 :                                             
(1)  965/    CDC7 :                                             ;Method 5 - 30 cycles
(1)  965/    CDC7 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  965/    CDC9 : A8                                          TAY                                             ;2
(1)  965/    CDCA : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  965/    CDCD : 95 0A                                       STA emu_ptr,X                   ;4
(1)  965/    CDCF : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  965/    CDD2 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  965/    CDD4 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  965/    CDD7 :                                                                     
(1)  966/    CDD7 :                     
(1)  967/    CDD7 :                     	;0xC1 - CMP IX
(1)  968/    CDD7 :                     	CMP_IX:
(1)  969/    CDD7 : (MACRO)             		OP_MACRO 193, "CMP", "IX", "CMP_IX"
(1)  969/    CDD7 :                                             ;TODO
(1)  970/    CDD7 : (MACRO)             		NEXT_MACRO
(1)  970/    CDD7 :                                             
(1)  970/    CDD7 :  (MACRO-2)                                  halt
(1)  970/    CDD7 : 00                                  BRK
(1)  970/    CDD8 : 00                                  BRK
(1)  970/    CDD9 :                                             
(1)  970/    CDD9 :                                             ;Method 1 - 60 cycles
(1)  970/    CDD9 :                                             ;Jump table must be page aligned!!!
(1)  970/    CDD9 :                                             ;LDA (emu_PC,X)                 ;6
(1)  970/    CDD9 :                                             ;ASL                                    ;2
(1)  970/    CDD9 :                                             ;STA emu_ptr,X                  ;4
(1)  970/    CDD9 :                                             ;LDA #hi(JUMP_TABLE)    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 287 - 1/5/2022 11:50:53


(1)  970/    CDD9 :                                             ;ADC #0                                 ;2
(1)  970/    CDD9 :                                             ;STA emu_ptr+1,X                ;4
(1)  970/    CDD9 :                                             ;LDA (emu_ptr,X)                ;6
(1)  970/    CDD9 :                                             ;STA emu_ptr2,X                 ;4
(1)  970/    CDD9 :                                             ;INC emu_ptr,X                  ;6
(1)  970/    CDD9 :                                             ;BCC .skip                              ;2
(1)  970/    CDD9 :                                             ;       INC emu_ptr+1,X         ;6
(1)  970/    CDD9 :                                             ;.skip:
(1)  970/    CDD9 :                                             ;LDA (emu_ptr,X)                ;6
(1)  970/    CDD9 :                                             ;STA emu_ptr2+1,X               ;4
(1)  970/    CDD9 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  970/    CDD9 :                                             
(1)  970/    CDD9 :                                             ;Method 2 - 46 cycles
(1)  970/    CDD9 :                                             ;Jump table must be page aligned!!!
(1)  970/    CDD9 :                                             ;LDA (emu_PC,X)                 ;6
(1)  970/    CDD9 :                                             ;STZ emu_ptr+1,X                ;4
(1)  970/    CDD9 :                                             ;ASL                                    ;2
(1)  970/    CDD9 :                                             ;ROL emu_ptr+1,X                ;6
(1)  970/    CDD9 :                                             ;ASL                                    ;2
(1)  970/    CDD9 :                                             ;ROL emu_ptr+1,X                ;6
(1)  970/    CDD9 :                                             ;STA emu_ptr,X                  ;4                              
(1)  970/    CDD9 :                                             ;LDA emu_ptr+1,X                ;4
(1)  970/    CDD9 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  970/    CDD9 :                                             ;STA emu_ptr+1,X                ;4
(1)  970/    CDD9 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  970/    CDD9 :                                             
(1)  970/    CDD9 :                                             ;Method 3 - 30 cycles
(1)  970/    CDD9 :                                             ;TXA                                                    ;2
(1)  970/    CDD9 :                                             ;TAY                                                    ;2
(1)  970/    CDD9 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  970/    CDD9 :                                             ;ASL                                                    ;2
(1)  970/    CDD9 :                                             ;BCS upper                                              ;2
(1)  970/    CDD9 :                                             ;lower:
(1)  970/    CDD9 :                                             ;       ASL                                                     ;2
(1)  970/    CDD9 :                                             ;       TAX                                                     ;2
(1)  970/    CDD9 :                                             ;       BCS upper_lower                         ;2
(1)  970/    CDD9 :                                             ;       lower_lower:
(1)  970/    CDD9 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  970/    CDD9 :                                             ;       upper_lower:
(1)  970/    CDD9 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  970/    CDD9 :                                             ;upper:
(1)  970/    CDD9 :                                             ;       ASL
(1)  970/    CDD9 :                                             ;       TAX
(1)  970/    CDD9 :                                             ;       BCS upper_upper
(1)  970/    CDD9 :                                             ;       lower_upper:
(1)  970/    CDD9 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  970/    CDD9 :                                             ;       upper_upper:
(1)  970/    CDD9 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  970/    CDD9 :                                             ;After jump:
(1)  970/    CDD9 :                                             ;TYA                                                    ;2
(1)  970/    CDD9 :                                             ;TAX                                                    ;2
(1)  970/    CDD9 :                                             
(1)  970/    CDD9 :                                             ;Method 4 - 28 cycles
(1)  970/    CDD9 :                                             ;LDA (emu_PC,X)                 ;6
(1)  970/    CDD9 :                                             ;TAY                                    ;2
(1)  970/    CDD9 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  970/    CDD9 :                                             ;PHA                                    ;3
(1)  970/    CDD9 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  970/    CDD9 :                                             ;PHA                                    ;3
(1)  970/    CDD9 :                                             ;RTS                                    ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 288 - 1/5/2022 11:50:53


(1)  970/    CDD9 :                                             
(1)  970/    CDD9 :                                             ;Method 5 - 30 cycles
(1)  970/    CDD9 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  970/    CDDB : A8                                          TAY                                             ;2
(1)  970/    CDDC : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  970/    CDDF : 95 0A                                       STA emu_ptr,X                   ;4
(1)  970/    CDE1 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  970/    CDE4 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  970/    CDE6 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  970/    CDE9 :                                                                     
(1)  971/    CDE9 :                     
(1)  972/    CDE9 :                     	;0xC2 - NOP
(1)  973/    CDE9 :                     	NOP_0xC2:
(1)  974/    CDE9 : (MACRO)             		OP_MACRO 194, "NOP", "IMP", "NOP_0xC2"
(1)  974/    CDE9 :                                             ;TODO
(1)  975/    CDE9 : (MACRO)             		NEXT_MACRO
(1)  975/    CDE9 :                                             
(1)  975/    CDE9 :  (MACRO-2)                                  halt
(1)  975/    CDE9 : 00                                  BRK
(1)  975/    CDEA : 00                                  BRK
(1)  975/    CDEB :                                             
(1)  975/    CDEB :                                             ;Method 1 - 60 cycles
(1)  975/    CDEB :                                             ;Jump table must be page aligned!!!
(1)  975/    CDEB :                                             ;LDA (emu_PC,X)                 ;6
(1)  975/    CDEB :                                             ;ASL                                    ;2
(1)  975/    CDEB :                                             ;STA emu_ptr,X                  ;4
(1)  975/    CDEB :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  975/    CDEB :                                             ;ADC #0                                 ;2
(1)  975/    CDEB :                                             ;STA emu_ptr+1,X                ;4
(1)  975/    CDEB :                                             ;LDA (emu_ptr,X)                ;6
(1)  975/    CDEB :                                             ;STA emu_ptr2,X                 ;4
(1)  975/    CDEB :                                             ;INC emu_ptr,X                  ;6
(1)  975/    CDEB :                                             ;BCC .skip                              ;2
(1)  975/    CDEB :                                             ;       INC emu_ptr+1,X         ;6
(1)  975/    CDEB :                                             ;.skip:
(1)  975/    CDEB :                                             ;LDA (emu_ptr,X)                ;6
(1)  975/    CDEB :                                             ;STA emu_ptr2+1,X               ;4
(1)  975/    CDEB :                                             ;JMP (emu_ptr2,X)               ;6
(1)  975/    CDEB :                                             
(1)  975/    CDEB :                                             ;Method 2 - 46 cycles
(1)  975/    CDEB :                                             ;Jump table must be page aligned!!!
(1)  975/    CDEB :                                             ;LDA (emu_PC,X)                 ;6
(1)  975/    CDEB :                                             ;STZ emu_ptr+1,X                ;4
(1)  975/    CDEB :                                             ;ASL                                    ;2
(1)  975/    CDEB :                                             ;ROL emu_ptr+1,X                ;6
(1)  975/    CDEB :                                             ;ASL                                    ;2
(1)  975/    CDEB :                                             ;ROL emu_ptr+1,X                ;6
(1)  975/    CDEB :                                             ;STA emu_ptr,X                  ;4                              
(1)  975/    CDEB :                                             ;LDA emu_ptr+1,X                ;4
(1)  975/    CDEB :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  975/    CDEB :                                             ;STA emu_ptr+1,X                ;4
(1)  975/    CDEB :                                             ;JMP (emu_ptr2,X)               ;6
(1)  975/    CDEB :                                             
(1)  975/    CDEB :                                             ;Method 3 - 30 cycles
(1)  975/    CDEB :                                             ;TXA                                                    ;2
(1)  975/    CDEB :                                             ;TAY                                                    ;2
(1)  975/    CDEB :                                             ;LDA (emu_PC,X)                                 ;6
(1)  975/    CDEB :                                             ;ASL                                                    ;2
(1)  975/    CDEB :                                             ;BCS upper                                              ;2
(1)  975/    CDEB :                                             ;lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 289 - 1/5/2022 11:50:53


(1)  975/    CDEB :                                             ;       ASL                                                     ;2
(1)  975/    CDEB :                                             ;       TAX                                                     ;2
(1)  975/    CDEB :                                             ;       BCS upper_lower                         ;2
(1)  975/    CDEB :                                             ;       lower_lower:
(1)  975/    CDEB :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  975/    CDEB :                                             ;       upper_lower:
(1)  975/    CDEB :                                             ;               JMP (JUMP_TABLE2,X)
(1)  975/    CDEB :                                             ;upper:
(1)  975/    CDEB :                                             ;       ASL
(1)  975/    CDEB :                                             ;       TAX
(1)  975/    CDEB :                                             ;       BCS upper_upper
(1)  975/    CDEB :                                             ;       lower_upper:
(1)  975/    CDEB :                                             ;               JMP (JUMP_TABLE3,X)
(1)  975/    CDEB :                                             ;       upper_upper:
(1)  975/    CDEB :                                             ;               JMP (JUMP_TABLE4,X)
(1)  975/    CDEB :                                             ;After jump:
(1)  975/    CDEB :                                             ;TYA                                                    ;2
(1)  975/    CDEB :                                             ;TAX                                                    ;2
(1)  975/    CDEB :                                             
(1)  975/    CDEB :                                             ;Method 4 - 28 cycles
(1)  975/    CDEB :                                             ;LDA (emu_PC,X)                 ;6
(1)  975/    CDEB :                                             ;TAY                                    ;2
(1)  975/    CDEB :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  975/    CDEB :                                             ;PHA                                    ;3
(1)  975/    CDEB :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  975/    CDEB :                                             ;PHA                                    ;3
(1)  975/    CDEB :                                             ;RTS                                    ;6
(1)  975/    CDEB :                                             
(1)  975/    CDEB :                                             ;Method 5 - 30 cycles
(1)  975/    CDEB : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  975/    CDED : A8                                          TAY                                             ;2
(1)  975/    CDEE : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  975/    CDF1 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  975/    CDF3 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  975/    CDF6 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  975/    CDF8 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  975/    CDFB :                                                                     
(1)  976/    CDFB :                     
(1)  977/    CDFB :                     	;0xC3 - NOP
(1)  978/    CDFB :                     	NOP_0xC3:
(1)  979/    CDFB : (MACRO)             		OP_MACRO 195, "NOP", "IMP", "NOP_0xC3"
(1)  979/    CDFB :                                             ;TODO
(1)  980/    CDFB : (MACRO)             		NEXT_MACRO
(1)  980/    CDFB :                                             
(1)  980/    CDFB :  (MACRO-2)                                  halt
(1)  980/    CDFB : 00                                  BRK
(1)  980/    CDFC : 00                                  BRK
(1)  980/    CDFD :                                             
(1)  980/    CDFD :                                             ;Method 1 - 60 cycles
(1)  980/    CDFD :                                             ;Jump table must be page aligned!!!
(1)  980/    CDFD :                                             ;LDA (emu_PC,X)                 ;6
(1)  980/    CDFD :                                             ;ASL                                    ;2
(1)  980/    CDFD :                                             ;STA emu_ptr,X                  ;4
(1)  980/    CDFD :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  980/    CDFD :                                             ;ADC #0                                 ;2
(1)  980/    CDFD :                                             ;STA emu_ptr+1,X                ;4
(1)  980/    CDFD :                                             ;LDA (emu_ptr,X)                ;6
(1)  980/    CDFD :                                             ;STA emu_ptr2,X                 ;4
(1)  980/    CDFD :                                             ;INC emu_ptr,X                  ;6
(1)  980/    CDFD :                                             ;BCC .skip                              ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 290 - 1/5/2022 11:50:53


(1)  980/    CDFD :                                             ;       INC emu_ptr+1,X         ;6
(1)  980/    CDFD :                                             ;.skip:
(1)  980/    CDFD :                                             ;LDA (emu_ptr,X)                ;6
(1)  980/    CDFD :                                             ;STA emu_ptr2+1,X               ;4
(1)  980/    CDFD :                                             ;JMP (emu_ptr2,X)               ;6
(1)  980/    CDFD :                                             
(1)  980/    CDFD :                                             ;Method 2 - 46 cycles
(1)  980/    CDFD :                                             ;Jump table must be page aligned!!!
(1)  980/    CDFD :                                             ;LDA (emu_PC,X)                 ;6
(1)  980/    CDFD :                                             ;STZ emu_ptr+1,X                ;4
(1)  980/    CDFD :                                             ;ASL                                    ;2
(1)  980/    CDFD :                                             ;ROL emu_ptr+1,X                ;6
(1)  980/    CDFD :                                             ;ASL                                    ;2
(1)  980/    CDFD :                                             ;ROL emu_ptr+1,X                ;6
(1)  980/    CDFD :                                             ;STA emu_ptr,X                  ;4                              
(1)  980/    CDFD :                                             ;LDA emu_ptr+1,X                ;4
(1)  980/    CDFD :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  980/    CDFD :                                             ;STA emu_ptr+1,X                ;4
(1)  980/    CDFD :                                             ;JMP (emu_ptr2,X)               ;6
(1)  980/    CDFD :                                             
(1)  980/    CDFD :                                             ;Method 3 - 30 cycles
(1)  980/    CDFD :                                             ;TXA                                                    ;2
(1)  980/    CDFD :                                             ;TAY                                                    ;2
(1)  980/    CDFD :                                             ;LDA (emu_PC,X)                                 ;6
(1)  980/    CDFD :                                             ;ASL                                                    ;2
(1)  980/    CDFD :                                             ;BCS upper                                              ;2
(1)  980/    CDFD :                                             ;lower:
(1)  980/    CDFD :                                             ;       ASL                                                     ;2
(1)  980/    CDFD :                                             ;       TAX                                                     ;2
(1)  980/    CDFD :                                             ;       BCS upper_lower                         ;2
(1)  980/    CDFD :                                             ;       lower_lower:
(1)  980/    CDFD :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  980/    CDFD :                                             ;       upper_lower:
(1)  980/    CDFD :                                             ;               JMP (JUMP_TABLE2,X)
(1)  980/    CDFD :                                             ;upper:
(1)  980/    CDFD :                                             ;       ASL
(1)  980/    CDFD :                                             ;       TAX
(1)  980/    CDFD :                                             ;       BCS upper_upper
(1)  980/    CDFD :                                             ;       lower_upper:
(1)  980/    CDFD :                                             ;               JMP (JUMP_TABLE3,X)
(1)  980/    CDFD :                                             ;       upper_upper:
(1)  980/    CDFD :                                             ;               JMP (JUMP_TABLE4,X)
(1)  980/    CDFD :                                             ;After jump:
(1)  980/    CDFD :                                             ;TYA                                                    ;2
(1)  980/    CDFD :                                             ;TAX                                                    ;2
(1)  980/    CDFD :                                             
(1)  980/    CDFD :                                             ;Method 4 - 28 cycles
(1)  980/    CDFD :                                             ;LDA (emu_PC,X)                 ;6
(1)  980/    CDFD :                                             ;TAY                                    ;2
(1)  980/    CDFD :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  980/    CDFD :                                             ;PHA                                    ;3
(1)  980/    CDFD :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  980/    CDFD :                                             ;PHA                                    ;3
(1)  980/    CDFD :                                             ;RTS                                    ;6
(1)  980/    CDFD :                                             
(1)  980/    CDFD :                                             ;Method 5 - 30 cycles
(1)  980/    CDFD : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  980/    CDFF : A8                                          TAY                                             ;2
(1)  980/    CE00 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  980/    CE03 : 95 0A                                       STA emu_ptr,X                   ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 291 - 1/5/2022 11:50:53


(1)  980/    CE05 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  980/    CE08 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  980/    CE0A : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  980/    CE0D :                                                                     
(1)  981/    CE0D :                     
(1)  982/    CE0D :                     	;0xC4 - CPY ZP
(1)  983/    CE0D :                     	CPY_ZP:
(1)  984/    CE0D : (MACRO)             		OP_MACRO 196, "CPY", "ZP", "CPY_ZP"
(1)  984/    CE0D :                                             ;TODO
(1)  985/    CE0D : (MACRO)             		NEXT_MACRO
(1)  985/    CE0D :                                             
(1)  985/    CE0D :  (MACRO-2)                                  halt
(1)  985/    CE0D : 00                                  BRK
(1)  985/    CE0E : 00                                  BRK
(1)  985/    CE0F :                                             
(1)  985/    CE0F :                                             ;Method 1 - 60 cycles
(1)  985/    CE0F :                                             ;Jump table must be page aligned!!!
(1)  985/    CE0F :                                             ;LDA (emu_PC,X)                 ;6
(1)  985/    CE0F :                                             ;ASL                                    ;2
(1)  985/    CE0F :                                             ;STA emu_ptr,X                  ;4
(1)  985/    CE0F :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  985/    CE0F :                                             ;ADC #0                                 ;2
(1)  985/    CE0F :                                             ;STA emu_ptr+1,X                ;4
(1)  985/    CE0F :                                             ;LDA (emu_ptr,X)                ;6
(1)  985/    CE0F :                                             ;STA emu_ptr2,X                 ;4
(1)  985/    CE0F :                                             ;INC emu_ptr,X                  ;6
(1)  985/    CE0F :                                             ;BCC .skip                              ;2
(1)  985/    CE0F :                                             ;       INC emu_ptr+1,X         ;6
(1)  985/    CE0F :                                             ;.skip:
(1)  985/    CE0F :                                             ;LDA (emu_ptr,X)                ;6
(1)  985/    CE0F :                                             ;STA emu_ptr2+1,X               ;4
(1)  985/    CE0F :                                             ;JMP (emu_ptr2,X)               ;6
(1)  985/    CE0F :                                             
(1)  985/    CE0F :                                             ;Method 2 - 46 cycles
(1)  985/    CE0F :                                             ;Jump table must be page aligned!!!
(1)  985/    CE0F :                                             ;LDA (emu_PC,X)                 ;6
(1)  985/    CE0F :                                             ;STZ emu_ptr+1,X                ;4
(1)  985/    CE0F :                                             ;ASL                                    ;2
(1)  985/    CE0F :                                             ;ROL emu_ptr+1,X                ;6
(1)  985/    CE0F :                                             ;ASL                                    ;2
(1)  985/    CE0F :                                             ;ROL emu_ptr+1,X                ;6
(1)  985/    CE0F :                                             ;STA emu_ptr,X                  ;4                              
(1)  985/    CE0F :                                             ;LDA emu_ptr+1,X                ;4
(1)  985/    CE0F :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  985/    CE0F :                                             ;STA emu_ptr+1,X                ;4
(1)  985/    CE0F :                                             ;JMP (emu_ptr2,X)               ;6
(1)  985/    CE0F :                                             
(1)  985/    CE0F :                                             ;Method 3 - 30 cycles
(1)  985/    CE0F :                                             ;TXA                                                    ;2
(1)  985/    CE0F :                                             ;TAY                                                    ;2
(1)  985/    CE0F :                                             ;LDA (emu_PC,X)                                 ;6
(1)  985/    CE0F :                                             ;ASL                                                    ;2
(1)  985/    CE0F :                                             ;BCS upper                                              ;2
(1)  985/    CE0F :                                             ;lower:
(1)  985/    CE0F :                                             ;       ASL                                                     ;2
(1)  985/    CE0F :                                             ;       TAX                                                     ;2
(1)  985/    CE0F :                                             ;       BCS upper_lower                         ;2
(1)  985/    CE0F :                                             ;       lower_lower:
(1)  985/    CE0F :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  985/    CE0F :                                             ;       upper_lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 292 - 1/5/2022 11:50:53


(1)  985/    CE0F :                                             ;               JMP (JUMP_TABLE2,X)
(1)  985/    CE0F :                                             ;upper:
(1)  985/    CE0F :                                             ;       ASL
(1)  985/    CE0F :                                             ;       TAX
(1)  985/    CE0F :                                             ;       BCS upper_upper
(1)  985/    CE0F :                                             ;       lower_upper:
(1)  985/    CE0F :                                             ;               JMP (JUMP_TABLE3,X)
(1)  985/    CE0F :                                             ;       upper_upper:
(1)  985/    CE0F :                                             ;               JMP (JUMP_TABLE4,X)
(1)  985/    CE0F :                                             ;After jump:
(1)  985/    CE0F :                                             ;TYA                                                    ;2
(1)  985/    CE0F :                                             ;TAX                                                    ;2
(1)  985/    CE0F :                                             
(1)  985/    CE0F :                                             ;Method 4 - 28 cycles
(1)  985/    CE0F :                                             ;LDA (emu_PC,X)                 ;6
(1)  985/    CE0F :                                             ;TAY                                    ;2
(1)  985/    CE0F :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  985/    CE0F :                                             ;PHA                                    ;3
(1)  985/    CE0F :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  985/    CE0F :                                             ;PHA                                    ;3
(1)  985/    CE0F :                                             ;RTS                                    ;6
(1)  985/    CE0F :                                             
(1)  985/    CE0F :                                             ;Method 5 - 30 cycles
(1)  985/    CE0F : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  985/    CE11 : A8                                          TAY                                             ;2
(1)  985/    CE12 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  985/    CE15 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  985/    CE17 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  985/    CE1A : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  985/    CE1C : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  985/    CE1F :                                                                     
(1)  986/    CE1F :                     
(1)  987/    CE1F :                     	;0xC5 - CMP ZP
(1)  988/    CE1F :                     	CMP_ZP:
(1)  989/    CE1F : (MACRO)             		OP_MACRO 197, "CMP", "ZP", "CMP_ZP"
(1)  989/    CE1F :                                             ;TODO
(1)  990/    CE1F : (MACRO)             		NEXT_MACRO
(1)  990/    CE1F :                                             
(1)  990/    CE1F :  (MACRO-2)                                  halt
(1)  990/    CE1F : 00                                  BRK
(1)  990/    CE20 : 00                                  BRK
(1)  990/    CE21 :                                             
(1)  990/    CE21 :                                             ;Method 1 - 60 cycles
(1)  990/    CE21 :                                             ;Jump table must be page aligned!!!
(1)  990/    CE21 :                                             ;LDA (emu_PC,X)                 ;6
(1)  990/    CE21 :                                             ;ASL                                    ;2
(1)  990/    CE21 :                                             ;STA emu_ptr,X                  ;4
(1)  990/    CE21 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  990/    CE21 :                                             ;ADC #0                                 ;2
(1)  990/    CE21 :                                             ;STA emu_ptr+1,X                ;4
(1)  990/    CE21 :                                             ;LDA (emu_ptr,X)                ;6
(1)  990/    CE21 :                                             ;STA emu_ptr2,X                 ;4
(1)  990/    CE21 :                                             ;INC emu_ptr,X                  ;6
(1)  990/    CE21 :                                             ;BCC .skip                              ;2
(1)  990/    CE21 :                                             ;       INC emu_ptr+1,X         ;6
(1)  990/    CE21 :                                             ;.skip:
(1)  990/    CE21 :                                             ;LDA (emu_ptr,X)                ;6
(1)  990/    CE21 :                                             ;STA emu_ptr2+1,X               ;4
(1)  990/    CE21 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  990/    CE21 :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 293 - 1/5/2022 11:50:53


(1)  990/    CE21 :                                             ;Method 2 - 46 cycles
(1)  990/    CE21 :                                             ;Jump table must be page aligned!!!
(1)  990/    CE21 :                                             ;LDA (emu_PC,X)                 ;6
(1)  990/    CE21 :                                             ;STZ emu_ptr+1,X                ;4
(1)  990/    CE21 :                                             ;ASL                                    ;2
(1)  990/    CE21 :                                             ;ROL emu_ptr+1,X                ;6
(1)  990/    CE21 :                                             ;ASL                                    ;2
(1)  990/    CE21 :                                             ;ROL emu_ptr+1,X                ;6
(1)  990/    CE21 :                                             ;STA emu_ptr,X                  ;4                              
(1)  990/    CE21 :                                             ;LDA emu_ptr+1,X                ;4
(1)  990/    CE21 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  990/    CE21 :                                             ;STA emu_ptr+1,X                ;4
(1)  990/    CE21 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  990/    CE21 :                                             
(1)  990/    CE21 :                                             ;Method 3 - 30 cycles
(1)  990/    CE21 :                                             ;TXA                                                    ;2
(1)  990/    CE21 :                                             ;TAY                                                    ;2
(1)  990/    CE21 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  990/    CE21 :                                             ;ASL                                                    ;2
(1)  990/    CE21 :                                             ;BCS upper                                              ;2
(1)  990/    CE21 :                                             ;lower:
(1)  990/    CE21 :                                             ;       ASL                                                     ;2
(1)  990/    CE21 :                                             ;       TAX                                                     ;2
(1)  990/    CE21 :                                             ;       BCS upper_lower                         ;2
(1)  990/    CE21 :                                             ;       lower_lower:
(1)  990/    CE21 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  990/    CE21 :                                             ;       upper_lower:
(1)  990/    CE21 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  990/    CE21 :                                             ;upper:
(1)  990/    CE21 :                                             ;       ASL
(1)  990/    CE21 :                                             ;       TAX
(1)  990/    CE21 :                                             ;       BCS upper_upper
(1)  990/    CE21 :                                             ;       lower_upper:
(1)  990/    CE21 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  990/    CE21 :                                             ;       upper_upper:
(1)  990/    CE21 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  990/    CE21 :                                             ;After jump:
(1)  990/    CE21 :                                             ;TYA                                                    ;2
(1)  990/    CE21 :                                             ;TAX                                                    ;2
(1)  990/    CE21 :                                             
(1)  990/    CE21 :                                             ;Method 4 - 28 cycles
(1)  990/    CE21 :                                             ;LDA (emu_PC,X)                 ;6
(1)  990/    CE21 :                                             ;TAY                                    ;2
(1)  990/    CE21 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  990/    CE21 :                                             ;PHA                                    ;3
(1)  990/    CE21 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  990/    CE21 :                                             ;PHA                                    ;3
(1)  990/    CE21 :                                             ;RTS                                    ;6
(1)  990/    CE21 :                                             
(1)  990/    CE21 :                                             ;Method 5 - 30 cycles
(1)  990/    CE21 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  990/    CE23 : A8                                          TAY                                             ;2
(1)  990/    CE24 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  990/    CE27 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  990/    CE29 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  990/    CE2C : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  990/    CE2E : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  990/    CE31 :                                                                     
(1)  991/    CE31 :                     
(1)  992/    CE31 :                     	;0xC6 - DEC ZP
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 294 - 1/5/2022 11:50:53


(1)  993/    CE31 :                     	DEC_ZP:
(1)  994/    CE31 : (MACRO)             		OP_MACRO 198, "DEC", "ZP", "DEC_ZP"
(1)  994/    CE31 :                                             ;TODO
(1)  995/    CE31 : (MACRO)             		NEXT_MACRO
(1)  995/    CE31 :                                             
(1)  995/    CE31 :  (MACRO-2)                                  halt
(1)  995/    CE31 : 00                                  BRK
(1)  995/    CE32 : 00                                  BRK
(1)  995/    CE33 :                                             
(1)  995/    CE33 :                                             ;Method 1 - 60 cycles
(1)  995/    CE33 :                                             ;Jump table must be page aligned!!!
(1)  995/    CE33 :                                             ;LDA (emu_PC,X)                 ;6
(1)  995/    CE33 :                                             ;ASL                                    ;2
(1)  995/    CE33 :                                             ;STA emu_ptr,X                  ;4
(1)  995/    CE33 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1)  995/    CE33 :                                             ;ADC #0                                 ;2
(1)  995/    CE33 :                                             ;STA emu_ptr+1,X                ;4
(1)  995/    CE33 :                                             ;LDA (emu_ptr,X)                ;6
(1)  995/    CE33 :                                             ;STA emu_ptr2,X                 ;4
(1)  995/    CE33 :                                             ;INC emu_ptr,X                  ;6
(1)  995/    CE33 :                                             ;BCC .skip                              ;2
(1)  995/    CE33 :                                             ;       INC emu_ptr+1,X         ;6
(1)  995/    CE33 :                                             ;.skip:
(1)  995/    CE33 :                                             ;LDA (emu_ptr,X)                ;6
(1)  995/    CE33 :                                             ;STA emu_ptr2+1,X               ;4
(1)  995/    CE33 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  995/    CE33 :                                             
(1)  995/    CE33 :                                             ;Method 2 - 46 cycles
(1)  995/    CE33 :                                             ;Jump table must be page aligned!!!
(1)  995/    CE33 :                                             ;LDA (emu_PC,X)                 ;6
(1)  995/    CE33 :                                             ;STZ emu_ptr+1,X                ;4
(1)  995/    CE33 :                                             ;ASL                                    ;2
(1)  995/    CE33 :                                             ;ROL emu_ptr+1,X                ;6
(1)  995/    CE33 :                                             ;ASL                                    ;2
(1)  995/    CE33 :                                             ;ROL emu_ptr+1,X                ;6
(1)  995/    CE33 :                                             ;STA emu_ptr,X                  ;4                              
(1)  995/    CE33 :                                             ;LDA emu_ptr+1,X                ;4
(1)  995/    CE33 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1)  995/    CE33 :                                             ;STA emu_ptr+1,X                ;4
(1)  995/    CE33 :                                             ;JMP (emu_ptr2,X)               ;6
(1)  995/    CE33 :                                             
(1)  995/    CE33 :                                             ;Method 3 - 30 cycles
(1)  995/    CE33 :                                             ;TXA                                                    ;2
(1)  995/    CE33 :                                             ;TAY                                                    ;2
(1)  995/    CE33 :                                             ;LDA (emu_PC,X)                                 ;6
(1)  995/    CE33 :                                             ;ASL                                                    ;2
(1)  995/    CE33 :                                             ;BCS upper                                              ;2
(1)  995/    CE33 :                                             ;lower:
(1)  995/    CE33 :                                             ;       ASL                                                     ;2
(1)  995/    CE33 :                                             ;       TAX                                                     ;2
(1)  995/    CE33 :                                             ;       BCS upper_lower                         ;2
(1)  995/    CE33 :                                             ;       lower_lower:
(1)  995/    CE33 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1)  995/    CE33 :                                             ;       upper_lower:
(1)  995/    CE33 :                                             ;               JMP (JUMP_TABLE2,X)
(1)  995/    CE33 :                                             ;upper:
(1)  995/    CE33 :                                             ;       ASL
(1)  995/    CE33 :                                             ;       TAX
(1)  995/    CE33 :                                             ;       BCS upper_upper
(1)  995/    CE33 :                                             ;       lower_upper:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 295 - 1/5/2022 11:50:53


(1)  995/    CE33 :                                             ;               JMP (JUMP_TABLE3,X)
(1)  995/    CE33 :                                             ;       upper_upper:
(1)  995/    CE33 :                                             ;               JMP (JUMP_TABLE4,X)
(1)  995/    CE33 :                                             ;After jump:
(1)  995/    CE33 :                                             ;TYA                                                    ;2
(1)  995/    CE33 :                                             ;TAX                                                    ;2
(1)  995/    CE33 :                                             
(1)  995/    CE33 :                                             ;Method 4 - 28 cycles
(1)  995/    CE33 :                                             ;LDA (emu_PC,X)                 ;6
(1)  995/    CE33 :                                             ;TAY                                    ;2
(1)  995/    CE33 :                                             ;LDA JUMP_TABLE,Y               ;4
(1)  995/    CE33 :                                             ;PHA                                    ;3
(1)  995/    CE33 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1)  995/    CE33 :                                             ;PHA                                    ;3
(1)  995/    CE33 :                                             ;RTS                                    ;6
(1)  995/    CE33 :                                             
(1)  995/    CE33 :                                             ;Method 5 - 30 cycles
(1)  995/    CE33 : A1 02                                       LDA (emu_PC,X)                  ;6
(1)  995/    CE35 : A8                                          TAY                                             ;2
(1)  995/    CE36 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1)  995/    CE39 : 95 0A                                       STA emu_ptr,X                   ;4
(1)  995/    CE3B : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1)  995/    CE3E : 95 0B                                       STA emu_ptr+1,X                 ;4
(1)  995/    CE40 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1)  995/    CE43 :                                                                     
(1)  996/    CE43 :                     
(1)  997/    CE43 :                     	;0xC7 - NOP
(1)  998/    CE43 :                     	NOP_0xC7:
(1)  999/    CE43 : (MACRO)             		OP_MACRO 199, "NOP", "IMP", "NOP_0xC7"
(1)  999/    CE43 :                                             ;TODO
(1) 1000/    CE43 : (MACRO)             		NEXT_MACRO
(1) 1000/    CE43 :                                             
(1) 1000/    CE43 :  (MACRO-2)                                  halt
(1) 1000/    CE43 : 00                                  BRK
(1) 1000/    CE44 : 00                                  BRK
(1) 1000/    CE45 :                                             
(1) 1000/    CE45 :                                             ;Method 1 - 60 cycles
(1) 1000/    CE45 :                                             ;Jump table must be page aligned!!!
(1) 1000/    CE45 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1000/    CE45 :                                             ;ASL                                    ;2
(1) 1000/    CE45 :                                             ;STA emu_ptr,X                  ;4
(1) 1000/    CE45 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1000/    CE45 :                                             ;ADC #0                                 ;2
(1) 1000/    CE45 :                                             ;STA emu_ptr+1,X                ;4
(1) 1000/    CE45 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1000/    CE45 :                                             ;STA emu_ptr2,X                 ;4
(1) 1000/    CE45 :                                             ;INC emu_ptr,X                  ;6
(1) 1000/    CE45 :                                             ;BCC .skip                              ;2
(1) 1000/    CE45 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1000/    CE45 :                                             ;.skip:
(1) 1000/    CE45 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1000/    CE45 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1000/    CE45 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1000/    CE45 :                                             
(1) 1000/    CE45 :                                             ;Method 2 - 46 cycles
(1) 1000/    CE45 :                                             ;Jump table must be page aligned!!!
(1) 1000/    CE45 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1000/    CE45 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1000/    CE45 :                                             ;ASL                                    ;2
(1) 1000/    CE45 :                                             ;ROL emu_ptr+1,X                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 296 - 1/5/2022 11:50:53


(1) 1000/    CE45 :                                             ;ASL                                    ;2
(1) 1000/    CE45 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1000/    CE45 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1000/    CE45 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1000/    CE45 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1000/    CE45 :                                             ;STA emu_ptr+1,X                ;4
(1) 1000/    CE45 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1000/    CE45 :                                             
(1) 1000/    CE45 :                                             ;Method 3 - 30 cycles
(1) 1000/    CE45 :                                             ;TXA                                                    ;2
(1) 1000/    CE45 :                                             ;TAY                                                    ;2
(1) 1000/    CE45 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1000/    CE45 :                                             ;ASL                                                    ;2
(1) 1000/    CE45 :                                             ;BCS upper                                              ;2
(1) 1000/    CE45 :                                             ;lower:
(1) 1000/    CE45 :                                             ;       ASL                                                     ;2
(1) 1000/    CE45 :                                             ;       TAX                                                     ;2
(1) 1000/    CE45 :                                             ;       BCS upper_lower                         ;2
(1) 1000/    CE45 :                                             ;       lower_lower:
(1) 1000/    CE45 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1000/    CE45 :                                             ;       upper_lower:
(1) 1000/    CE45 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1000/    CE45 :                                             ;upper:
(1) 1000/    CE45 :                                             ;       ASL
(1) 1000/    CE45 :                                             ;       TAX
(1) 1000/    CE45 :                                             ;       BCS upper_upper
(1) 1000/    CE45 :                                             ;       lower_upper:
(1) 1000/    CE45 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1000/    CE45 :                                             ;       upper_upper:
(1) 1000/    CE45 :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1000/    CE45 :                                             ;After jump:
(1) 1000/    CE45 :                                             ;TYA                                                    ;2
(1) 1000/    CE45 :                                             ;TAX                                                    ;2
(1) 1000/    CE45 :                                             
(1) 1000/    CE45 :                                             ;Method 4 - 28 cycles
(1) 1000/    CE45 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1000/    CE45 :                                             ;TAY                                    ;2
(1) 1000/    CE45 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1000/    CE45 :                                             ;PHA                                    ;3
(1) 1000/    CE45 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1000/    CE45 :                                             ;PHA                                    ;3
(1) 1000/    CE45 :                                             ;RTS                                    ;6
(1) 1000/    CE45 :                                             
(1) 1000/    CE45 :                                             ;Method 5 - 30 cycles
(1) 1000/    CE45 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1000/    CE47 : A8                                          TAY                                             ;2
(1) 1000/    CE48 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1000/    CE4B : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1000/    CE4D : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1000/    CE50 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1000/    CE52 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1000/    CE55 :                                                                     
(1) 1001/    CE55 :                     
(1) 1002/    CE55 :                     	;0xC8 - INY IMP
(1) 1003/    CE55 :                     	INY_IMP:
(1) 1004/    CE55 : (MACRO)             		OP_MACRO 200, "INY", "IMP", "INY_IMP"
(1) 1004/    CE55 :                                             ;TODO
(1) 1005/    CE55 : (MACRO)             		NEXT_MACRO
(1) 1005/    CE55 :                                             
(1) 1005/    CE55 :  (MACRO-2)                                  halt
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 297 - 1/5/2022 11:50:53


(1) 1005/    CE55 : 00                                  BRK
(1) 1005/    CE56 : 00                                  BRK
(1) 1005/    CE57 :                                             
(1) 1005/    CE57 :                                             ;Method 1 - 60 cycles
(1) 1005/    CE57 :                                             ;Jump table must be page aligned!!!
(1) 1005/    CE57 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1005/    CE57 :                                             ;ASL                                    ;2
(1) 1005/    CE57 :                                             ;STA emu_ptr,X                  ;4
(1) 1005/    CE57 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1005/    CE57 :                                             ;ADC #0                                 ;2
(1) 1005/    CE57 :                                             ;STA emu_ptr+1,X                ;4
(1) 1005/    CE57 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1005/    CE57 :                                             ;STA emu_ptr2,X                 ;4
(1) 1005/    CE57 :                                             ;INC emu_ptr,X                  ;6
(1) 1005/    CE57 :                                             ;BCC .skip                              ;2
(1) 1005/    CE57 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1005/    CE57 :                                             ;.skip:
(1) 1005/    CE57 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1005/    CE57 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1005/    CE57 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1005/    CE57 :                                             
(1) 1005/    CE57 :                                             ;Method 2 - 46 cycles
(1) 1005/    CE57 :                                             ;Jump table must be page aligned!!!
(1) 1005/    CE57 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1005/    CE57 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1005/    CE57 :                                             ;ASL                                    ;2
(1) 1005/    CE57 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1005/    CE57 :                                             ;ASL                                    ;2
(1) 1005/    CE57 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1005/    CE57 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1005/    CE57 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1005/    CE57 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1005/    CE57 :                                             ;STA emu_ptr+1,X                ;4
(1) 1005/    CE57 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1005/    CE57 :                                             
(1) 1005/    CE57 :                                             ;Method 3 - 30 cycles
(1) 1005/    CE57 :                                             ;TXA                                                    ;2
(1) 1005/    CE57 :                                             ;TAY                                                    ;2
(1) 1005/    CE57 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1005/    CE57 :                                             ;ASL                                                    ;2
(1) 1005/    CE57 :                                             ;BCS upper                                              ;2
(1) 1005/    CE57 :                                             ;lower:
(1) 1005/    CE57 :                                             ;       ASL                                                     ;2
(1) 1005/    CE57 :                                             ;       TAX                                                     ;2
(1) 1005/    CE57 :                                             ;       BCS upper_lower                         ;2
(1) 1005/    CE57 :                                             ;       lower_lower:
(1) 1005/    CE57 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1005/    CE57 :                                             ;       upper_lower:
(1) 1005/    CE57 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1005/    CE57 :                                             ;upper:
(1) 1005/    CE57 :                                             ;       ASL
(1) 1005/    CE57 :                                             ;       TAX
(1) 1005/    CE57 :                                             ;       BCS upper_upper
(1) 1005/    CE57 :                                             ;       lower_upper:
(1) 1005/    CE57 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1005/    CE57 :                                             ;       upper_upper:
(1) 1005/    CE57 :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1005/    CE57 :                                             ;After jump:
(1) 1005/    CE57 :                                             ;TYA                                                    ;2
(1) 1005/    CE57 :                                             ;TAX                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 298 - 1/5/2022 11:50:53


(1) 1005/    CE57 :                                             
(1) 1005/    CE57 :                                             ;Method 4 - 28 cycles
(1) 1005/    CE57 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1005/    CE57 :                                             ;TAY                                    ;2
(1) 1005/    CE57 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1005/    CE57 :                                             ;PHA                                    ;3
(1) 1005/    CE57 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1005/    CE57 :                                             ;PHA                                    ;3
(1) 1005/    CE57 :                                             ;RTS                                    ;6
(1) 1005/    CE57 :                                             
(1) 1005/    CE57 :                                             ;Method 5 - 30 cycles
(1) 1005/    CE57 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1005/    CE59 : A8                                          TAY                                             ;2
(1) 1005/    CE5A : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1005/    CE5D : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1005/    CE5F : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1005/    CE62 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1005/    CE64 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1005/    CE67 :                                                                     
(1) 1006/    CE67 :                     
(1) 1007/    CE67 :                     	;0xC9 - CMP IMMED
(1) 1008/    CE67 :                     	CMP_IMMED:
(1) 1009/    CE67 : (MACRO)             		OP_MACRO 201, "CMP", "IMMED", "CMP_IMMED"
(1) 1009/    CE67 :                                             ;TODO
(1) 1010/    CE67 : (MACRO)             		NEXT_MACRO
(1) 1010/    CE67 :                                             
(1) 1010/    CE67 :  (MACRO-2)                                  halt
(1) 1010/    CE67 : 00                                  BRK
(1) 1010/    CE68 : 00                                  BRK
(1) 1010/    CE69 :                                             
(1) 1010/    CE69 :                                             ;Method 1 - 60 cycles
(1) 1010/    CE69 :                                             ;Jump table must be page aligned!!!
(1) 1010/    CE69 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1010/    CE69 :                                             ;ASL                                    ;2
(1) 1010/    CE69 :                                             ;STA emu_ptr,X                  ;4
(1) 1010/    CE69 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1010/    CE69 :                                             ;ADC #0                                 ;2
(1) 1010/    CE69 :                                             ;STA emu_ptr+1,X                ;4
(1) 1010/    CE69 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1010/    CE69 :                                             ;STA emu_ptr2,X                 ;4
(1) 1010/    CE69 :                                             ;INC emu_ptr,X                  ;6
(1) 1010/    CE69 :                                             ;BCC .skip                              ;2
(1) 1010/    CE69 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1010/    CE69 :                                             ;.skip:
(1) 1010/    CE69 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1010/    CE69 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1010/    CE69 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1010/    CE69 :                                             
(1) 1010/    CE69 :                                             ;Method 2 - 46 cycles
(1) 1010/    CE69 :                                             ;Jump table must be page aligned!!!
(1) 1010/    CE69 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1010/    CE69 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1010/    CE69 :                                             ;ASL                                    ;2
(1) 1010/    CE69 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1010/    CE69 :                                             ;ASL                                    ;2
(1) 1010/    CE69 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1010/    CE69 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1010/    CE69 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1010/    CE69 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1010/    CE69 :                                             ;STA emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 299 - 1/5/2022 11:50:53


(1) 1010/    CE69 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1010/    CE69 :                                             
(1) 1010/    CE69 :                                             ;Method 3 - 30 cycles
(1) 1010/    CE69 :                                             ;TXA                                                    ;2
(1) 1010/    CE69 :                                             ;TAY                                                    ;2
(1) 1010/    CE69 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1010/    CE69 :                                             ;ASL                                                    ;2
(1) 1010/    CE69 :                                             ;BCS upper                                              ;2
(1) 1010/    CE69 :                                             ;lower:
(1) 1010/    CE69 :                                             ;       ASL                                                     ;2
(1) 1010/    CE69 :                                             ;       TAX                                                     ;2
(1) 1010/    CE69 :                                             ;       BCS upper_lower                         ;2
(1) 1010/    CE69 :                                             ;       lower_lower:
(1) 1010/    CE69 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1010/    CE69 :                                             ;       upper_lower:
(1) 1010/    CE69 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1010/    CE69 :                                             ;upper:
(1) 1010/    CE69 :                                             ;       ASL
(1) 1010/    CE69 :                                             ;       TAX
(1) 1010/    CE69 :                                             ;       BCS upper_upper
(1) 1010/    CE69 :                                             ;       lower_upper:
(1) 1010/    CE69 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1010/    CE69 :                                             ;       upper_upper:
(1) 1010/    CE69 :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1010/    CE69 :                                             ;After jump:
(1) 1010/    CE69 :                                             ;TYA                                                    ;2
(1) 1010/    CE69 :                                             ;TAX                                                    ;2
(1) 1010/    CE69 :                                             
(1) 1010/    CE69 :                                             ;Method 4 - 28 cycles
(1) 1010/    CE69 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1010/    CE69 :                                             ;TAY                                    ;2
(1) 1010/    CE69 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1010/    CE69 :                                             ;PHA                                    ;3
(1) 1010/    CE69 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1010/    CE69 :                                             ;PHA                                    ;3
(1) 1010/    CE69 :                                             ;RTS                                    ;6
(1) 1010/    CE69 :                                             
(1) 1010/    CE69 :                                             ;Method 5 - 30 cycles
(1) 1010/    CE69 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1010/    CE6B : A8                                          TAY                                             ;2
(1) 1010/    CE6C : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1010/    CE6F : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1010/    CE71 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1010/    CE74 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1010/    CE76 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1010/    CE79 :                                                                     
(1) 1011/    CE79 :                     
(1) 1012/    CE79 :                     	;0xCA - DEX IMP
(1) 1013/    CE79 :                     	DEX_IMP:
(1) 1014/    CE79 : (MACRO)             		OP_MACRO 202, "DEX", "IMP", "DEX_IMP"
(1) 1014/    CE79 :                                             ;TODO
(1) 1015/    CE79 : (MACRO)             		NEXT_MACRO
(1) 1015/    CE79 :                                             
(1) 1015/    CE79 :  (MACRO-2)                                  halt
(1) 1015/    CE79 : 00                                  BRK
(1) 1015/    CE7A : 00                                  BRK
(1) 1015/    CE7B :                                             
(1) 1015/    CE7B :                                             ;Method 1 - 60 cycles
(1) 1015/    CE7B :                                             ;Jump table must be page aligned!!!
(1) 1015/    CE7B :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 300 - 1/5/2022 11:50:53


(1) 1015/    CE7B :                                             ;ASL                                    ;2
(1) 1015/    CE7B :                                             ;STA emu_ptr,X                  ;4
(1) 1015/    CE7B :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1015/    CE7B :                                             ;ADC #0                                 ;2
(1) 1015/    CE7B :                                             ;STA emu_ptr+1,X                ;4
(1) 1015/    CE7B :                                             ;LDA (emu_ptr,X)                ;6
(1) 1015/    CE7B :                                             ;STA emu_ptr2,X                 ;4
(1) 1015/    CE7B :                                             ;INC emu_ptr,X                  ;6
(1) 1015/    CE7B :                                             ;BCC .skip                              ;2
(1) 1015/    CE7B :                                             ;       INC emu_ptr+1,X         ;6
(1) 1015/    CE7B :                                             ;.skip:
(1) 1015/    CE7B :                                             ;LDA (emu_ptr,X)                ;6
(1) 1015/    CE7B :                                             ;STA emu_ptr2+1,X               ;4
(1) 1015/    CE7B :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1015/    CE7B :                                             
(1) 1015/    CE7B :                                             ;Method 2 - 46 cycles
(1) 1015/    CE7B :                                             ;Jump table must be page aligned!!!
(1) 1015/    CE7B :                                             ;LDA (emu_PC,X)                 ;6
(1) 1015/    CE7B :                                             ;STZ emu_ptr+1,X                ;4
(1) 1015/    CE7B :                                             ;ASL                                    ;2
(1) 1015/    CE7B :                                             ;ROL emu_ptr+1,X                ;6
(1) 1015/    CE7B :                                             ;ASL                                    ;2
(1) 1015/    CE7B :                                             ;ROL emu_ptr+1,X                ;6
(1) 1015/    CE7B :                                             ;STA emu_ptr,X                  ;4                              
(1) 1015/    CE7B :                                             ;LDA emu_ptr+1,X                ;4
(1) 1015/    CE7B :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1015/    CE7B :                                             ;STA emu_ptr+1,X                ;4
(1) 1015/    CE7B :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1015/    CE7B :                                             
(1) 1015/    CE7B :                                             ;Method 3 - 30 cycles
(1) 1015/    CE7B :                                             ;TXA                                                    ;2
(1) 1015/    CE7B :                                             ;TAY                                                    ;2
(1) 1015/    CE7B :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1015/    CE7B :                                             ;ASL                                                    ;2
(1) 1015/    CE7B :                                             ;BCS upper                                              ;2
(1) 1015/    CE7B :                                             ;lower:
(1) 1015/    CE7B :                                             ;       ASL                                                     ;2
(1) 1015/    CE7B :                                             ;       TAX                                                     ;2
(1) 1015/    CE7B :                                             ;       BCS upper_lower                         ;2
(1) 1015/    CE7B :                                             ;       lower_lower:
(1) 1015/    CE7B :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1015/    CE7B :                                             ;       upper_lower:
(1) 1015/    CE7B :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1015/    CE7B :                                             ;upper:
(1) 1015/    CE7B :                                             ;       ASL
(1) 1015/    CE7B :                                             ;       TAX
(1) 1015/    CE7B :                                             ;       BCS upper_upper
(1) 1015/    CE7B :                                             ;       lower_upper:
(1) 1015/    CE7B :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1015/    CE7B :                                             ;       upper_upper:
(1) 1015/    CE7B :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1015/    CE7B :                                             ;After jump:
(1) 1015/    CE7B :                                             ;TYA                                                    ;2
(1) 1015/    CE7B :                                             ;TAX                                                    ;2
(1) 1015/    CE7B :                                             
(1) 1015/    CE7B :                                             ;Method 4 - 28 cycles
(1) 1015/    CE7B :                                             ;LDA (emu_PC,X)                 ;6
(1) 1015/    CE7B :                                             ;TAY                                    ;2
(1) 1015/    CE7B :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1015/    CE7B :                                             ;PHA                                    ;3
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 301 - 1/5/2022 11:50:53


(1) 1015/    CE7B :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1015/    CE7B :                                             ;PHA                                    ;3
(1) 1015/    CE7B :                                             ;RTS                                    ;6
(1) 1015/    CE7B :                                             
(1) 1015/    CE7B :                                             ;Method 5 - 30 cycles
(1) 1015/    CE7B : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1015/    CE7D : A8                                          TAY                                             ;2
(1) 1015/    CE7E : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1015/    CE81 : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1015/    CE83 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1015/    CE86 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1015/    CE88 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1015/    CE8B :                                                                     
(1) 1016/    CE8B :                     
(1) 1017/    CE8B :                     	;0xCB - NOP
(1) 1018/    CE8B :                     	NOP_0xCB:
(1) 1019/    CE8B : (MACRO)             		OP_MACRO 203, "NOP", "IMP", "NOP_0xCB"
(1) 1019/    CE8B :                                             ;TODO
(1) 1020/    CE8B : (MACRO)             		NEXT_MACRO
(1) 1020/    CE8B :                                             
(1) 1020/    CE8B :  (MACRO-2)                                  halt
(1) 1020/    CE8B : 00                                  BRK
(1) 1020/    CE8C : 00                                  BRK
(1) 1020/    CE8D :                                             
(1) 1020/    CE8D :                                             ;Method 1 - 60 cycles
(1) 1020/    CE8D :                                             ;Jump table must be page aligned!!!
(1) 1020/    CE8D :                                             ;LDA (emu_PC,X)                 ;6
(1) 1020/    CE8D :                                             ;ASL                                    ;2
(1) 1020/    CE8D :                                             ;STA emu_ptr,X                  ;4
(1) 1020/    CE8D :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1020/    CE8D :                                             ;ADC #0                                 ;2
(1) 1020/    CE8D :                                             ;STA emu_ptr+1,X                ;4
(1) 1020/    CE8D :                                             ;LDA (emu_ptr,X)                ;6
(1) 1020/    CE8D :                                             ;STA emu_ptr2,X                 ;4
(1) 1020/    CE8D :                                             ;INC emu_ptr,X                  ;6
(1) 1020/    CE8D :                                             ;BCC .skip                              ;2
(1) 1020/    CE8D :                                             ;       INC emu_ptr+1,X         ;6
(1) 1020/    CE8D :                                             ;.skip:
(1) 1020/    CE8D :                                             ;LDA (emu_ptr,X)                ;6
(1) 1020/    CE8D :                                             ;STA emu_ptr2+1,X               ;4
(1) 1020/    CE8D :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1020/    CE8D :                                             
(1) 1020/    CE8D :                                             ;Method 2 - 46 cycles
(1) 1020/    CE8D :                                             ;Jump table must be page aligned!!!
(1) 1020/    CE8D :                                             ;LDA (emu_PC,X)                 ;6
(1) 1020/    CE8D :                                             ;STZ emu_ptr+1,X                ;4
(1) 1020/    CE8D :                                             ;ASL                                    ;2
(1) 1020/    CE8D :                                             ;ROL emu_ptr+1,X                ;6
(1) 1020/    CE8D :                                             ;ASL                                    ;2
(1) 1020/    CE8D :                                             ;ROL emu_ptr+1,X                ;6
(1) 1020/    CE8D :                                             ;STA emu_ptr,X                  ;4                              
(1) 1020/    CE8D :                                             ;LDA emu_ptr+1,X                ;4
(1) 1020/    CE8D :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1020/    CE8D :                                             ;STA emu_ptr+1,X                ;4
(1) 1020/    CE8D :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1020/    CE8D :                                             
(1) 1020/    CE8D :                                             ;Method 3 - 30 cycles
(1) 1020/    CE8D :                                             ;TXA                                                    ;2
(1) 1020/    CE8D :                                             ;TAY                                                    ;2
(1) 1020/    CE8D :                                             ;LDA (emu_PC,X)                                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 302 - 1/5/2022 11:50:53


(1) 1020/    CE8D :                                             ;ASL                                                    ;2
(1) 1020/    CE8D :                                             ;BCS upper                                              ;2
(1) 1020/    CE8D :                                             ;lower:
(1) 1020/    CE8D :                                             ;       ASL                                                     ;2
(1) 1020/    CE8D :                                             ;       TAX                                                     ;2
(1) 1020/    CE8D :                                             ;       BCS upper_lower                         ;2
(1) 1020/    CE8D :                                             ;       lower_lower:
(1) 1020/    CE8D :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1020/    CE8D :                                             ;       upper_lower:
(1) 1020/    CE8D :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1020/    CE8D :                                             ;upper:
(1) 1020/    CE8D :                                             ;       ASL
(1) 1020/    CE8D :                                             ;       TAX
(1) 1020/    CE8D :                                             ;       BCS upper_upper
(1) 1020/    CE8D :                                             ;       lower_upper:
(1) 1020/    CE8D :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1020/    CE8D :                                             ;       upper_upper:
(1) 1020/    CE8D :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1020/    CE8D :                                             ;After jump:
(1) 1020/    CE8D :                                             ;TYA                                                    ;2
(1) 1020/    CE8D :                                             ;TAX                                                    ;2
(1) 1020/    CE8D :                                             
(1) 1020/    CE8D :                                             ;Method 4 - 28 cycles
(1) 1020/    CE8D :                                             ;LDA (emu_PC,X)                 ;6
(1) 1020/    CE8D :                                             ;TAY                                    ;2
(1) 1020/    CE8D :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1020/    CE8D :                                             ;PHA                                    ;3
(1) 1020/    CE8D :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1020/    CE8D :                                             ;PHA                                    ;3
(1) 1020/    CE8D :                                             ;RTS                                    ;6
(1) 1020/    CE8D :                                             
(1) 1020/    CE8D :                                             ;Method 5 - 30 cycles
(1) 1020/    CE8D : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1020/    CE8F : A8                                          TAY                                             ;2
(1) 1020/    CE90 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1020/    CE93 : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1020/    CE95 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1020/    CE98 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1020/    CE9A : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1020/    CE9D :                                                                     
(1) 1021/    CE9D :                     
(1) 1022/    CE9D :                     	;0xCC - CPY ABS
(1) 1023/    CE9D :                     	CPY_ABS:
(1) 1024/    CE9D : (MACRO)             		OP_MACRO 204, "CPY", "ABS", "CPY_ABS"
(1) 1024/    CE9D :                                             ;TODO
(1) 1025/    CE9D : (MACRO)             		NEXT_MACRO
(1) 1025/    CE9D :                                             
(1) 1025/    CE9D :  (MACRO-2)                                  halt
(1) 1025/    CE9D : 00                                  BRK
(1) 1025/    CE9E : 00                                  BRK
(1) 1025/    CE9F :                                             
(1) 1025/    CE9F :                                             ;Method 1 - 60 cycles
(1) 1025/    CE9F :                                             ;Jump table must be page aligned!!!
(1) 1025/    CE9F :                                             ;LDA (emu_PC,X)                 ;6
(1) 1025/    CE9F :                                             ;ASL                                    ;2
(1) 1025/    CE9F :                                             ;STA emu_ptr,X                  ;4
(1) 1025/    CE9F :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1025/    CE9F :                                             ;ADC #0                                 ;2
(1) 1025/    CE9F :                                             ;STA emu_ptr+1,X                ;4
(1) 1025/    CE9F :                                             ;LDA (emu_ptr,X)                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 303 - 1/5/2022 11:50:53


(1) 1025/    CE9F :                                             ;STA emu_ptr2,X                 ;4
(1) 1025/    CE9F :                                             ;INC emu_ptr,X                  ;6
(1) 1025/    CE9F :                                             ;BCC .skip                              ;2
(1) 1025/    CE9F :                                             ;       INC emu_ptr+1,X         ;6
(1) 1025/    CE9F :                                             ;.skip:
(1) 1025/    CE9F :                                             ;LDA (emu_ptr,X)                ;6
(1) 1025/    CE9F :                                             ;STA emu_ptr2+1,X               ;4
(1) 1025/    CE9F :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1025/    CE9F :                                             
(1) 1025/    CE9F :                                             ;Method 2 - 46 cycles
(1) 1025/    CE9F :                                             ;Jump table must be page aligned!!!
(1) 1025/    CE9F :                                             ;LDA (emu_PC,X)                 ;6
(1) 1025/    CE9F :                                             ;STZ emu_ptr+1,X                ;4
(1) 1025/    CE9F :                                             ;ASL                                    ;2
(1) 1025/    CE9F :                                             ;ROL emu_ptr+1,X                ;6
(1) 1025/    CE9F :                                             ;ASL                                    ;2
(1) 1025/    CE9F :                                             ;ROL emu_ptr+1,X                ;6
(1) 1025/    CE9F :                                             ;STA emu_ptr,X                  ;4                              
(1) 1025/    CE9F :                                             ;LDA emu_ptr+1,X                ;4
(1) 1025/    CE9F :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1025/    CE9F :                                             ;STA emu_ptr+1,X                ;4
(1) 1025/    CE9F :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1025/    CE9F :                                             
(1) 1025/    CE9F :                                             ;Method 3 - 30 cycles
(1) 1025/    CE9F :                                             ;TXA                                                    ;2
(1) 1025/    CE9F :                                             ;TAY                                                    ;2
(1) 1025/    CE9F :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1025/    CE9F :                                             ;ASL                                                    ;2
(1) 1025/    CE9F :                                             ;BCS upper                                              ;2
(1) 1025/    CE9F :                                             ;lower:
(1) 1025/    CE9F :                                             ;       ASL                                                     ;2
(1) 1025/    CE9F :                                             ;       TAX                                                     ;2
(1) 1025/    CE9F :                                             ;       BCS upper_lower                         ;2
(1) 1025/    CE9F :                                             ;       lower_lower:
(1) 1025/    CE9F :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1025/    CE9F :                                             ;       upper_lower:
(1) 1025/    CE9F :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1025/    CE9F :                                             ;upper:
(1) 1025/    CE9F :                                             ;       ASL
(1) 1025/    CE9F :                                             ;       TAX
(1) 1025/    CE9F :                                             ;       BCS upper_upper
(1) 1025/    CE9F :                                             ;       lower_upper:
(1) 1025/    CE9F :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1025/    CE9F :                                             ;       upper_upper:
(1) 1025/    CE9F :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1025/    CE9F :                                             ;After jump:
(1) 1025/    CE9F :                                             ;TYA                                                    ;2
(1) 1025/    CE9F :                                             ;TAX                                                    ;2
(1) 1025/    CE9F :                                             
(1) 1025/    CE9F :                                             ;Method 4 - 28 cycles
(1) 1025/    CE9F :                                             ;LDA (emu_PC,X)                 ;6
(1) 1025/    CE9F :                                             ;TAY                                    ;2
(1) 1025/    CE9F :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1025/    CE9F :                                             ;PHA                                    ;3
(1) 1025/    CE9F :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1025/    CE9F :                                             ;PHA                                    ;3
(1) 1025/    CE9F :                                             ;RTS                                    ;6
(1) 1025/    CE9F :                                             
(1) 1025/    CE9F :                                             ;Method 5 - 30 cycles
(1) 1025/    CE9F : A1 02                                       LDA (emu_PC,X)                  ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 304 - 1/5/2022 11:50:53


(1) 1025/    CEA1 : A8                                          TAY                                             ;2
(1) 1025/    CEA2 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1025/    CEA5 : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1025/    CEA7 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1025/    CEAA : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1025/    CEAC : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1025/    CEAF :                                                                     
(1) 1026/    CEAF :                     
(1) 1027/    CEAF :                     	;0xCD - CMP ABS
(1) 1028/    CEAF :                     	CMP_ABS:
(1) 1029/    CEAF : (MACRO)             		OP_MACRO 205, "CMP", "ABS", "CMP_ABS"
(1) 1029/    CEAF :                                             ;TODO
(1) 1030/    CEAF : (MACRO)             		NEXT_MACRO
(1) 1030/    CEAF :                                             
(1) 1030/    CEAF :  (MACRO-2)                                  halt
(1) 1030/    CEAF : 00                                  BRK
(1) 1030/    CEB0 : 00                                  BRK
(1) 1030/    CEB1 :                                             
(1) 1030/    CEB1 :                                             ;Method 1 - 60 cycles
(1) 1030/    CEB1 :                                             ;Jump table must be page aligned!!!
(1) 1030/    CEB1 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1030/    CEB1 :                                             ;ASL                                    ;2
(1) 1030/    CEB1 :                                             ;STA emu_ptr,X                  ;4
(1) 1030/    CEB1 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1030/    CEB1 :                                             ;ADC #0                                 ;2
(1) 1030/    CEB1 :                                             ;STA emu_ptr+1,X                ;4
(1) 1030/    CEB1 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1030/    CEB1 :                                             ;STA emu_ptr2,X                 ;4
(1) 1030/    CEB1 :                                             ;INC emu_ptr,X                  ;6
(1) 1030/    CEB1 :                                             ;BCC .skip                              ;2
(1) 1030/    CEB1 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1030/    CEB1 :                                             ;.skip:
(1) 1030/    CEB1 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1030/    CEB1 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1030/    CEB1 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1030/    CEB1 :                                             
(1) 1030/    CEB1 :                                             ;Method 2 - 46 cycles
(1) 1030/    CEB1 :                                             ;Jump table must be page aligned!!!
(1) 1030/    CEB1 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1030/    CEB1 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1030/    CEB1 :                                             ;ASL                                    ;2
(1) 1030/    CEB1 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1030/    CEB1 :                                             ;ASL                                    ;2
(1) 1030/    CEB1 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1030/    CEB1 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1030/    CEB1 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1030/    CEB1 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1030/    CEB1 :                                             ;STA emu_ptr+1,X                ;4
(1) 1030/    CEB1 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1030/    CEB1 :                                             
(1) 1030/    CEB1 :                                             ;Method 3 - 30 cycles
(1) 1030/    CEB1 :                                             ;TXA                                                    ;2
(1) 1030/    CEB1 :                                             ;TAY                                                    ;2
(1) 1030/    CEB1 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1030/    CEB1 :                                             ;ASL                                                    ;2
(1) 1030/    CEB1 :                                             ;BCS upper                                              ;2
(1) 1030/    CEB1 :                                             ;lower:
(1) 1030/    CEB1 :                                             ;       ASL                                                     ;2
(1) 1030/    CEB1 :                                             ;       TAX                                                     ;2
(1) 1030/    CEB1 :                                             ;       BCS upper_lower                         ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 305 - 1/5/2022 11:50:53


(1) 1030/    CEB1 :                                             ;       lower_lower:
(1) 1030/    CEB1 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1030/    CEB1 :                                             ;       upper_lower:
(1) 1030/    CEB1 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1030/    CEB1 :                                             ;upper:
(1) 1030/    CEB1 :                                             ;       ASL
(1) 1030/    CEB1 :                                             ;       TAX
(1) 1030/    CEB1 :                                             ;       BCS upper_upper
(1) 1030/    CEB1 :                                             ;       lower_upper:
(1) 1030/    CEB1 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1030/    CEB1 :                                             ;       upper_upper:
(1) 1030/    CEB1 :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1030/    CEB1 :                                             ;After jump:
(1) 1030/    CEB1 :                                             ;TYA                                                    ;2
(1) 1030/    CEB1 :                                             ;TAX                                                    ;2
(1) 1030/    CEB1 :                                             
(1) 1030/    CEB1 :                                             ;Method 4 - 28 cycles
(1) 1030/    CEB1 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1030/    CEB1 :                                             ;TAY                                    ;2
(1) 1030/    CEB1 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1030/    CEB1 :                                             ;PHA                                    ;3
(1) 1030/    CEB1 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1030/    CEB1 :                                             ;PHA                                    ;3
(1) 1030/    CEB1 :                                             ;RTS                                    ;6
(1) 1030/    CEB1 :                                             
(1) 1030/    CEB1 :                                             ;Method 5 - 30 cycles
(1) 1030/    CEB1 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1030/    CEB3 : A8                                          TAY                                             ;2
(1) 1030/    CEB4 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1030/    CEB7 : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1030/    CEB9 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1030/    CEBC : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1030/    CEBE : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1030/    CEC1 :                                                                     
(1) 1031/    CEC1 :                     
(1) 1032/    CEC1 :                     	;0xCE - DEC ABS
(1) 1033/    CEC1 :                     	DEC_ABS:
(1) 1034/    CEC1 : (MACRO)             		OP_MACRO 206, "DEC", "ABS", "DEC_ABS"
(1) 1034/    CEC1 :                                             ;TODO
(1) 1035/    CEC1 : (MACRO)             		NEXT_MACRO
(1) 1035/    CEC1 :                                             
(1) 1035/    CEC1 :  (MACRO-2)                                  halt
(1) 1035/    CEC1 : 00                                  BRK
(1) 1035/    CEC2 : 00                                  BRK
(1) 1035/    CEC3 :                                             
(1) 1035/    CEC3 :                                             ;Method 1 - 60 cycles
(1) 1035/    CEC3 :                                             ;Jump table must be page aligned!!!
(1) 1035/    CEC3 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1035/    CEC3 :                                             ;ASL                                    ;2
(1) 1035/    CEC3 :                                             ;STA emu_ptr,X                  ;4
(1) 1035/    CEC3 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1035/    CEC3 :                                             ;ADC #0                                 ;2
(1) 1035/    CEC3 :                                             ;STA emu_ptr+1,X                ;4
(1) 1035/    CEC3 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1035/    CEC3 :                                             ;STA emu_ptr2,X                 ;4
(1) 1035/    CEC3 :                                             ;INC emu_ptr,X                  ;6
(1) 1035/    CEC3 :                                             ;BCC .skip                              ;2
(1) 1035/    CEC3 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1035/    CEC3 :                                             ;.skip:
(1) 1035/    CEC3 :                                             ;LDA (emu_ptr,X)                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 306 - 1/5/2022 11:50:53


(1) 1035/    CEC3 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1035/    CEC3 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1035/    CEC3 :                                             
(1) 1035/    CEC3 :                                             ;Method 2 - 46 cycles
(1) 1035/    CEC3 :                                             ;Jump table must be page aligned!!!
(1) 1035/    CEC3 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1035/    CEC3 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1035/    CEC3 :                                             ;ASL                                    ;2
(1) 1035/    CEC3 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1035/    CEC3 :                                             ;ASL                                    ;2
(1) 1035/    CEC3 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1035/    CEC3 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1035/    CEC3 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1035/    CEC3 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1035/    CEC3 :                                             ;STA emu_ptr+1,X                ;4
(1) 1035/    CEC3 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1035/    CEC3 :                                             
(1) 1035/    CEC3 :                                             ;Method 3 - 30 cycles
(1) 1035/    CEC3 :                                             ;TXA                                                    ;2
(1) 1035/    CEC3 :                                             ;TAY                                                    ;2
(1) 1035/    CEC3 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1035/    CEC3 :                                             ;ASL                                                    ;2
(1) 1035/    CEC3 :                                             ;BCS upper                                              ;2
(1) 1035/    CEC3 :                                             ;lower:
(1) 1035/    CEC3 :                                             ;       ASL                                                     ;2
(1) 1035/    CEC3 :                                             ;       TAX                                                     ;2
(1) 1035/    CEC3 :                                             ;       BCS upper_lower                         ;2
(1) 1035/    CEC3 :                                             ;       lower_lower:
(1) 1035/    CEC3 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1035/    CEC3 :                                             ;       upper_lower:
(1) 1035/    CEC3 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1035/    CEC3 :                                             ;upper:
(1) 1035/    CEC3 :                                             ;       ASL
(1) 1035/    CEC3 :                                             ;       TAX
(1) 1035/    CEC3 :                                             ;       BCS upper_upper
(1) 1035/    CEC3 :                                             ;       lower_upper:
(1) 1035/    CEC3 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1035/    CEC3 :                                             ;       upper_upper:
(1) 1035/    CEC3 :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1035/    CEC3 :                                             ;After jump:
(1) 1035/    CEC3 :                                             ;TYA                                                    ;2
(1) 1035/    CEC3 :                                             ;TAX                                                    ;2
(1) 1035/    CEC3 :                                             
(1) 1035/    CEC3 :                                             ;Method 4 - 28 cycles
(1) 1035/    CEC3 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1035/    CEC3 :                                             ;TAY                                    ;2
(1) 1035/    CEC3 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1035/    CEC3 :                                             ;PHA                                    ;3
(1) 1035/    CEC3 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1035/    CEC3 :                                             ;PHA                                    ;3
(1) 1035/    CEC3 :                                             ;RTS                                    ;6
(1) 1035/    CEC3 :                                             
(1) 1035/    CEC3 :                                             ;Method 5 - 30 cycles
(1) 1035/    CEC3 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1035/    CEC5 : A8                                          TAY                                             ;2
(1) 1035/    CEC6 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1035/    CEC9 : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1035/    CECB : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1035/    CECE : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1035/    CED0 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 307 - 1/5/2022 11:50:53


(1) 1035/    CED3 :                                                                     
(1) 1036/    CED3 :                     
(1) 1037/    CED3 :                     	;0xCF - NOP
(1) 1038/    CED3 :                     	NOP_0xCF:
(1) 1039/    CED3 : (MACRO)             		OP_MACRO 207, "NOP", "IMP", "NOP_0xCF"
(1) 1039/    CED3 :                                             ;TODO
(1) 1040/    CED3 : (MACRO)             		NEXT_MACRO
(1) 1040/    CED3 :                                             
(1) 1040/    CED3 :  (MACRO-2)                                  halt
(1) 1040/    CED3 : 00                                  BRK
(1) 1040/    CED4 : 00                                  BRK
(1) 1040/    CED5 :                                             
(1) 1040/    CED5 :                                             ;Method 1 - 60 cycles
(1) 1040/    CED5 :                                             ;Jump table must be page aligned!!!
(1) 1040/    CED5 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1040/    CED5 :                                             ;ASL                                    ;2
(1) 1040/    CED5 :                                             ;STA emu_ptr,X                  ;4
(1) 1040/    CED5 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1040/    CED5 :                                             ;ADC #0                                 ;2
(1) 1040/    CED5 :                                             ;STA emu_ptr+1,X                ;4
(1) 1040/    CED5 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1040/    CED5 :                                             ;STA emu_ptr2,X                 ;4
(1) 1040/    CED5 :                                             ;INC emu_ptr,X                  ;6
(1) 1040/    CED5 :                                             ;BCC .skip                              ;2
(1) 1040/    CED5 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1040/    CED5 :                                             ;.skip:
(1) 1040/    CED5 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1040/    CED5 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1040/    CED5 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1040/    CED5 :                                             
(1) 1040/    CED5 :                                             ;Method 2 - 46 cycles
(1) 1040/    CED5 :                                             ;Jump table must be page aligned!!!
(1) 1040/    CED5 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1040/    CED5 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1040/    CED5 :                                             ;ASL                                    ;2
(1) 1040/    CED5 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1040/    CED5 :                                             ;ASL                                    ;2
(1) 1040/    CED5 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1040/    CED5 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1040/    CED5 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1040/    CED5 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1040/    CED5 :                                             ;STA emu_ptr+1,X                ;4
(1) 1040/    CED5 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1040/    CED5 :                                             
(1) 1040/    CED5 :                                             ;Method 3 - 30 cycles
(1) 1040/    CED5 :                                             ;TXA                                                    ;2
(1) 1040/    CED5 :                                             ;TAY                                                    ;2
(1) 1040/    CED5 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1040/    CED5 :                                             ;ASL                                                    ;2
(1) 1040/    CED5 :                                             ;BCS upper                                              ;2
(1) 1040/    CED5 :                                             ;lower:
(1) 1040/    CED5 :                                             ;       ASL                                                     ;2
(1) 1040/    CED5 :                                             ;       TAX                                                     ;2
(1) 1040/    CED5 :                                             ;       BCS upper_lower                         ;2
(1) 1040/    CED5 :                                             ;       lower_lower:
(1) 1040/    CED5 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1040/    CED5 :                                             ;       upper_lower:
(1) 1040/    CED5 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1040/    CED5 :                                             ;upper:
(1) 1040/    CED5 :                                             ;       ASL
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 308 - 1/5/2022 11:50:53


(1) 1040/    CED5 :                                             ;       TAX
(1) 1040/    CED5 :                                             ;       BCS upper_upper
(1) 1040/    CED5 :                                             ;       lower_upper:
(1) 1040/    CED5 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1040/    CED5 :                                             ;       upper_upper:
(1) 1040/    CED5 :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1040/    CED5 :                                             ;After jump:
(1) 1040/    CED5 :                                             ;TYA                                                    ;2
(1) 1040/    CED5 :                                             ;TAX                                                    ;2
(1) 1040/    CED5 :                                             
(1) 1040/    CED5 :                                             ;Method 4 - 28 cycles
(1) 1040/    CED5 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1040/    CED5 :                                             ;TAY                                    ;2
(1) 1040/    CED5 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1040/    CED5 :                                             ;PHA                                    ;3
(1) 1040/    CED5 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1040/    CED5 :                                             ;PHA                                    ;3
(1) 1040/    CED5 :                                             ;RTS                                    ;6
(1) 1040/    CED5 :                                             
(1) 1040/    CED5 :                                             ;Method 5 - 30 cycles
(1) 1040/    CED5 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1040/    CED7 : A8                                          TAY                                             ;2
(1) 1040/    CED8 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1040/    CEDB : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1040/    CEDD : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1040/    CEE0 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1040/    CEE2 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1040/    CEE5 :                                                                     
(1) 1041/    CEE5 :                     
(1) 1042/    CEE5 :                     	;0xD0 - BNE REL
(1) 1043/    CEE5 :                     	BNE_REL:
(1) 1044/    CEE5 : (MACRO)             		OP_MACRO 208, "BNE", "REL", "BNE_REL"
(1) 1044/    CEE5 :                                             ;TODO
(1) 1045/    CEE5 : (MACRO)             		NEXT_MACRO
(1) 1045/    CEE5 :                                             
(1) 1045/    CEE5 :  (MACRO-2)                                  halt
(1) 1045/    CEE5 : 00                                  BRK
(1) 1045/    CEE6 : 00                                  BRK
(1) 1045/    CEE7 :                                             
(1) 1045/    CEE7 :                                             ;Method 1 - 60 cycles
(1) 1045/    CEE7 :                                             ;Jump table must be page aligned!!!
(1) 1045/    CEE7 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1045/    CEE7 :                                             ;ASL                                    ;2
(1) 1045/    CEE7 :                                             ;STA emu_ptr,X                  ;4
(1) 1045/    CEE7 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1045/    CEE7 :                                             ;ADC #0                                 ;2
(1) 1045/    CEE7 :                                             ;STA emu_ptr+1,X                ;4
(1) 1045/    CEE7 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1045/    CEE7 :                                             ;STA emu_ptr2,X                 ;4
(1) 1045/    CEE7 :                                             ;INC emu_ptr,X                  ;6
(1) 1045/    CEE7 :                                             ;BCC .skip                              ;2
(1) 1045/    CEE7 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1045/    CEE7 :                                             ;.skip:
(1) 1045/    CEE7 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1045/    CEE7 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1045/    CEE7 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1045/    CEE7 :                                             
(1) 1045/    CEE7 :                                             ;Method 2 - 46 cycles
(1) 1045/    CEE7 :                                             ;Jump table must be page aligned!!!
(1) 1045/    CEE7 :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 309 - 1/5/2022 11:50:53


(1) 1045/    CEE7 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1045/    CEE7 :                                             ;ASL                                    ;2
(1) 1045/    CEE7 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1045/    CEE7 :                                             ;ASL                                    ;2
(1) 1045/    CEE7 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1045/    CEE7 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1045/    CEE7 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1045/    CEE7 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1045/    CEE7 :                                             ;STA emu_ptr+1,X                ;4
(1) 1045/    CEE7 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1045/    CEE7 :                                             
(1) 1045/    CEE7 :                                             ;Method 3 - 30 cycles
(1) 1045/    CEE7 :                                             ;TXA                                                    ;2
(1) 1045/    CEE7 :                                             ;TAY                                                    ;2
(1) 1045/    CEE7 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1045/    CEE7 :                                             ;ASL                                                    ;2
(1) 1045/    CEE7 :                                             ;BCS upper                                              ;2
(1) 1045/    CEE7 :                                             ;lower:
(1) 1045/    CEE7 :                                             ;       ASL                                                     ;2
(1) 1045/    CEE7 :                                             ;       TAX                                                     ;2
(1) 1045/    CEE7 :                                             ;       BCS upper_lower                         ;2
(1) 1045/    CEE7 :                                             ;       lower_lower:
(1) 1045/    CEE7 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1045/    CEE7 :                                             ;       upper_lower:
(1) 1045/    CEE7 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1045/    CEE7 :                                             ;upper:
(1) 1045/    CEE7 :                                             ;       ASL
(1) 1045/    CEE7 :                                             ;       TAX
(1) 1045/    CEE7 :                                             ;       BCS upper_upper
(1) 1045/    CEE7 :                                             ;       lower_upper:
(1) 1045/    CEE7 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1045/    CEE7 :                                             ;       upper_upper:
(1) 1045/    CEE7 :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1045/    CEE7 :                                             ;After jump:
(1) 1045/    CEE7 :                                             ;TYA                                                    ;2
(1) 1045/    CEE7 :                                             ;TAX                                                    ;2
(1) 1045/    CEE7 :                                             
(1) 1045/    CEE7 :                                             ;Method 4 - 28 cycles
(1) 1045/    CEE7 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1045/    CEE7 :                                             ;TAY                                    ;2
(1) 1045/    CEE7 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1045/    CEE7 :                                             ;PHA                                    ;3
(1) 1045/    CEE7 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1045/    CEE7 :                                             ;PHA                                    ;3
(1) 1045/    CEE7 :                                             ;RTS                                    ;6
(1) 1045/    CEE7 :                                             
(1) 1045/    CEE7 :                                             ;Method 5 - 30 cycles
(1) 1045/    CEE7 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1045/    CEE9 : A8                                          TAY                                             ;2
(1) 1045/    CEEA : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1045/    CEED : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1045/    CEEF : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1045/    CEF2 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1045/    CEF4 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1045/    CEF7 :                                                                     
(1) 1046/    CEF7 :                     
(1) 1047/    CEF7 :                     	;0xD1 - CMP IY
(1) 1048/    CEF7 :                     	CMP_IY:
(1) 1049/    CEF7 : (MACRO)             		OP_MACRO 209, "CMP", "IY", "CMP_IY"
(1) 1049/    CEF7 :                                             ;TODO
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 310 - 1/5/2022 11:50:53


(1) 1050/    CEF7 : (MACRO)             		NEXT_MACRO
(1) 1050/    CEF7 :                                             
(1) 1050/    CEF7 :  (MACRO-2)                                  halt
(1) 1050/    CEF7 : 00                                  BRK
(1) 1050/    CEF8 : 00                                  BRK
(1) 1050/    CEF9 :                                             
(1) 1050/    CEF9 :                                             ;Method 1 - 60 cycles
(1) 1050/    CEF9 :                                             ;Jump table must be page aligned!!!
(1) 1050/    CEF9 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1050/    CEF9 :                                             ;ASL                                    ;2
(1) 1050/    CEF9 :                                             ;STA emu_ptr,X                  ;4
(1) 1050/    CEF9 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1050/    CEF9 :                                             ;ADC #0                                 ;2
(1) 1050/    CEF9 :                                             ;STA emu_ptr+1,X                ;4
(1) 1050/    CEF9 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1050/    CEF9 :                                             ;STA emu_ptr2,X                 ;4
(1) 1050/    CEF9 :                                             ;INC emu_ptr,X                  ;6
(1) 1050/    CEF9 :                                             ;BCC .skip                              ;2
(1) 1050/    CEF9 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1050/    CEF9 :                                             ;.skip:
(1) 1050/    CEF9 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1050/    CEF9 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1050/    CEF9 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1050/    CEF9 :                                             
(1) 1050/    CEF9 :                                             ;Method 2 - 46 cycles
(1) 1050/    CEF9 :                                             ;Jump table must be page aligned!!!
(1) 1050/    CEF9 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1050/    CEF9 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1050/    CEF9 :                                             ;ASL                                    ;2
(1) 1050/    CEF9 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1050/    CEF9 :                                             ;ASL                                    ;2
(1) 1050/    CEF9 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1050/    CEF9 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1050/    CEF9 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1050/    CEF9 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1050/    CEF9 :                                             ;STA emu_ptr+1,X                ;4
(1) 1050/    CEF9 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1050/    CEF9 :                                             
(1) 1050/    CEF9 :                                             ;Method 3 - 30 cycles
(1) 1050/    CEF9 :                                             ;TXA                                                    ;2
(1) 1050/    CEF9 :                                             ;TAY                                                    ;2
(1) 1050/    CEF9 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1050/    CEF9 :                                             ;ASL                                                    ;2
(1) 1050/    CEF9 :                                             ;BCS upper                                              ;2
(1) 1050/    CEF9 :                                             ;lower:
(1) 1050/    CEF9 :                                             ;       ASL                                                     ;2
(1) 1050/    CEF9 :                                             ;       TAX                                                     ;2
(1) 1050/    CEF9 :                                             ;       BCS upper_lower                         ;2
(1) 1050/    CEF9 :                                             ;       lower_lower:
(1) 1050/    CEF9 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1050/    CEF9 :                                             ;       upper_lower:
(1) 1050/    CEF9 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1050/    CEF9 :                                             ;upper:
(1) 1050/    CEF9 :                                             ;       ASL
(1) 1050/    CEF9 :                                             ;       TAX
(1) 1050/    CEF9 :                                             ;       BCS upper_upper
(1) 1050/    CEF9 :                                             ;       lower_upper:
(1) 1050/    CEF9 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1050/    CEF9 :                                             ;       upper_upper:
(1) 1050/    CEF9 :                                             ;               JMP (JUMP_TABLE4,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 311 - 1/5/2022 11:50:53


(1) 1050/    CEF9 :                                             ;After jump:
(1) 1050/    CEF9 :                                             ;TYA                                                    ;2
(1) 1050/    CEF9 :                                             ;TAX                                                    ;2
(1) 1050/    CEF9 :                                             
(1) 1050/    CEF9 :                                             ;Method 4 - 28 cycles
(1) 1050/    CEF9 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1050/    CEF9 :                                             ;TAY                                    ;2
(1) 1050/    CEF9 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1050/    CEF9 :                                             ;PHA                                    ;3
(1) 1050/    CEF9 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1050/    CEF9 :                                             ;PHA                                    ;3
(1) 1050/    CEF9 :                                             ;RTS                                    ;6
(1) 1050/    CEF9 :                                             
(1) 1050/    CEF9 :                                             ;Method 5 - 30 cycles
(1) 1050/    CEF9 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1050/    CEFB : A8                                          TAY                                             ;2
(1) 1050/    CEFC : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1050/    CEFF : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1050/    CF01 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1050/    CF04 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1050/    CF06 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1050/    CF09 :                                                                     
(1) 1051/    CF09 :                     
(1) 1052/    CF09 :                     	;0xD2 - NOP
(1) 1053/    CF09 :                     	NOP_0xD2:
(1) 1054/    CF09 : (MACRO)             		OP_MACRO 210, "NOP", "IMP", "NOP_0xD2"
(1) 1054/    CF09 :                                             ;TODO
(1) 1055/    CF09 : (MACRO)             		NEXT_MACRO
(1) 1055/    CF09 :                                             
(1) 1055/    CF09 :  (MACRO-2)                                  halt
(1) 1055/    CF09 : 00                                  BRK
(1) 1055/    CF0A : 00                                  BRK
(1) 1055/    CF0B :                                             
(1) 1055/    CF0B :                                             ;Method 1 - 60 cycles
(1) 1055/    CF0B :                                             ;Jump table must be page aligned!!!
(1) 1055/    CF0B :                                             ;LDA (emu_PC,X)                 ;6
(1) 1055/    CF0B :                                             ;ASL                                    ;2
(1) 1055/    CF0B :                                             ;STA emu_ptr,X                  ;4
(1) 1055/    CF0B :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1055/    CF0B :                                             ;ADC #0                                 ;2
(1) 1055/    CF0B :                                             ;STA emu_ptr+1,X                ;4
(1) 1055/    CF0B :                                             ;LDA (emu_ptr,X)                ;6
(1) 1055/    CF0B :                                             ;STA emu_ptr2,X                 ;4
(1) 1055/    CF0B :                                             ;INC emu_ptr,X                  ;6
(1) 1055/    CF0B :                                             ;BCC .skip                              ;2
(1) 1055/    CF0B :                                             ;       INC emu_ptr+1,X         ;6
(1) 1055/    CF0B :                                             ;.skip:
(1) 1055/    CF0B :                                             ;LDA (emu_ptr,X)                ;6
(1) 1055/    CF0B :                                             ;STA emu_ptr2+1,X               ;4
(1) 1055/    CF0B :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1055/    CF0B :                                             
(1) 1055/    CF0B :                                             ;Method 2 - 46 cycles
(1) 1055/    CF0B :                                             ;Jump table must be page aligned!!!
(1) 1055/    CF0B :                                             ;LDA (emu_PC,X)                 ;6
(1) 1055/    CF0B :                                             ;STZ emu_ptr+1,X                ;4
(1) 1055/    CF0B :                                             ;ASL                                    ;2
(1) 1055/    CF0B :                                             ;ROL emu_ptr+1,X                ;6
(1) 1055/    CF0B :                                             ;ASL                                    ;2
(1) 1055/    CF0B :                                             ;ROL emu_ptr+1,X                ;6
(1) 1055/    CF0B :                                             ;STA emu_ptr,X                  ;4                              
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 312 - 1/5/2022 11:50:53


(1) 1055/    CF0B :                                             ;LDA emu_ptr+1,X                ;4
(1) 1055/    CF0B :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1055/    CF0B :                                             ;STA emu_ptr+1,X                ;4
(1) 1055/    CF0B :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1055/    CF0B :                                             
(1) 1055/    CF0B :                                             ;Method 3 - 30 cycles
(1) 1055/    CF0B :                                             ;TXA                                                    ;2
(1) 1055/    CF0B :                                             ;TAY                                                    ;2
(1) 1055/    CF0B :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1055/    CF0B :                                             ;ASL                                                    ;2
(1) 1055/    CF0B :                                             ;BCS upper                                              ;2
(1) 1055/    CF0B :                                             ;lower:
(1) 1055/    CF0B :                                             ;       ASL                                                     ;2
(1) 1055/    CF0B :                                             ;       TAX                                                     ;2
(1) 1055/    CF0B :                                             ;       BCS upper_lower                         ;2
(1) 1055/    CF0B :                                             ;       lower_lower:
(1) 1055/    CF0B :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1055/    CF0B :                                             ;       upper_lower:
(1) 1055/    CF0B :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1055/    CF0B :                                             ;upper:
(1) 1055/    CF0B :                                             ;       ASL
(1) 1055/    CF0B :                                             ;       TAX
(1) 1055/    CF0B :                                             ;       BCS upper_upper
(1) 1055/    CF0B :                                             ;       lower_upper:
(1) 1055/    CF0B :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1055/    CF0B :                                             ;       upper_upper:
(1) 1055/    CF0B :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1055/    CF0B :                                             ;After jump:
(1) 1055/    CF0B :                                             ;TYA                                                    ;2
(1) 1055/    CF0B :                                             ;TAX                                                    ;2
(1) 1055/    CF0B :                                             
(1) 1055/    CF0B :                                             ;Method 4 - 28 cycles
(1) 1055/    CF0B :                                             ;LDA (emu_PC,X)                 ;6
(1) 1055/    CF0B :                                             ;TAY                                    ;2
(1) 1055/    CF0B :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1055/    CF0B :                                             ;PHA                                    ;3
(1) 1055/    CF0B :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1055/    CF0B :                                             ;PHA                                    ;3
(1) 1055/    CF0B :                                             ;RTS                                    ;6
(1) 1055/    CF0B :                                             
(1) 1055/    CF0B :                                             ;Method 5 - 30 cycles
(1) 1055/    CF0B : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1055/    CF0D : A8                                          TAY                                             ;2
(1) 1055/    CF0E : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1055/    CF11 : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1055/    CF13 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1055/    CF16 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1055/    CF18 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1055/    CF1B :                                                                     
(1) 1056/    CF1B :                     
(1) 1057/    CF1B :                     	;0xD3 - NOP
(1) 1058/    CF1B :                     	NOP_0xD3:
(1) 1059/    CF1B : (MACRO)             		OP_MACRO 211, "NOP", "IMP", "NOP_0xD3"
(1) 1059/    CF1B :                                             ;TODO
(1) 1060/    CF1B : (MACRO)             		NEXT_MACRO
(1) 1060/    CF1B :                                             
(1) 1060/    CF1B :  (MACRO-2)                                  halt
(1) 1060/    CF1B : 00                                  BRK
(1) 1060/    CF1C : 00                                  BRK
(1) 1060/    CF1D :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 313 - 1/5/2022 11:50:53


(1) 1060/    CF1D :                                             ;Method 1 - 60 cycles
(1) 1060/    CF1D :                                             ;Jump table must be page aligned!!!
(1) 1060/    CF1D :                                             ;LDA (emu_PC,X)                 ;6
(1) 1060/    CF1D :                                             ;ASL                                    ;2
(1) 1060/    CF1D :                                             ;STA emu_ptr,X                  ;4
(1) 1060/    CF1D :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1060/    CF1D :                                             ;ADC #0                                 ;2
(1) 1060/    CF1D :                                             ;STA emu_ptr+1,X                ;4
(1) 1060/    CF1D :                                             ;LDA (emu_ptr,X)                ;6
(1) 1060/    CF1D :                                             ;STA emu_ptr2,X                 ;4
(1) 1060/    CF1D :                                             ;INC emu_ptr,X                  ;6
(1) 1060/    CF1D :                                             ;BCC .skip                              ;2
(1) 1060/    CF1D :                                             ;       INC emu_ptr+1,X         ;6
(1) 1060/    CF1D :                                             ;.skip:
(1) 1060/    CF1D :                                             ;LDA (emu_ptr,X)                ;6
(1) 1060/    CF1D :                                             ;STA emu_ptr2+1,X               ;4
(1) 1060/    CF1D :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1060/    CF1D :                                             
(1) 1060/    CF1D :                                             ;Method 2 - 46 cycles
(1) 1060/    CF1D :                                             ;Jump table must be page aligned!!!
(1) 1060/    CF1D :                                             ;LDA (emu_PC,X)                 ;6
(1) 1060/    CF1D :                                             ;STZ emu_ptr+1,X                ;4
(1) 1060/    CF1D :                                             ;ASL                                    ;2
(1) 1060/    CF1D :                                             ;ROL emu_ptr+1,X                ;6
(1) 1060/    CF1D :                                             ;ASL                                    ;2
(1) 1060/    CF1D :                                             ;ROL emu_ptr+1,X                ;6
(1) 1060/    CF1D :                                             ;STA emu_ptr,X                  ;4                              
(1) 1060/    CF1D :                                             ;LDA emu_ptr+1,X                ;4
(1) 1060/    CF1D :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1060/    CF1D :                                             ;STA emu_ptr+1,X                ;4
(1) 1060/    CF1D :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1060/    CF1D :                                             
(1) 1060/    CF1D :                                             ;Method 3 - 30 cycles
(1) 1060/    CF1D :                                             ;TXA                                                    ;2
(1) 1060/    CF1D :                                             ;TAY                                                    ;2
(1) 1060/    CF1D :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1060/    CF1D :                                             ;ASL                                                    ;2
(1) 1060/    CF1D :                                             ;BCS upper                                              ;2
(1) 1060/    CF1D :                                             ;lower:
(1) 1060/    CF1D :                                             ;       ASL                                                     ;2
(1) 1060/    CF1D :                                             ;       TAX                                                     ;2
(1) 1060/    CF1D :                                             ;       BCS upper_lower                         ;2
(1) 1060/    CF1D :                                             ;       lower_lower:
(1) 1060/    CF1D :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1060/    CF1D :                                             ;       upper_lower:
(1) 1060/    CF1D :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1060/    CF1D :                                             ;upper:
(1) 1060/    CF1D :                                             ;       ASL
(1) 1060/    CF1D :                                             ;       TAX
(1) 1060/    CF1D :                                             ;       BCS upper_upper
(1) 1060/    CF1D :                                             ;       lower_upper:
(1) 1060/    CF1D :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1060/    CF1D :                                             ;       upper_upper:
(1) 1060/    CF1D :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1060/    CF1D :                                             ;After jump:
(1) 1060/    CF1D :                                             ;TYA                                                    ;2
(1) 1060/    CF1D :                                             ;TAX                                                    ;2
(1) 1060/    CF1D :                                             
(1) 1060/    CF1D :                                             ;Method 4 - 28 cycles
(1) 1060/    CF1D :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 314 - 1/5/2022 11:50:53


(1) 1060/    CF1D :                                             ;TAY                                    ;2
(1) 1060/    CF1D :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1060/    CF1D :                                             ;PHA                                    ;3
(1) 1060/    CF1D :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1060/    CF1D :                                             ;PHA                                    ;3
(1) 1060/    CF1D :                                             ;RTS                                    ;6
(1) 1060/    CF1D :                                             
(1) 1060/    CF1D :                                             ;Method 5 - 30 cycles
(1) 1060/    CF1D : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1060/    CF1F : A8                                          TAY                                             ;2
(1) 1060/    CF20 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1060/    CF23 : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1060/    CF25 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1060/    CF28 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1060/    CF2A : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1060/    CF2D :                                                                     
(1) 1061/    CF2D :                     
(1) 1062/    CF2D :                     	;0xD4 - NOP
(1) 1063/    CF2D :                     	NOP_0xD4:
(1) 1064/    CF2D : (MACRO)             		OP_MACRO 212, "NOP", "IMP", "NOP_0xD4"
(1) 1064/    CF2D :                                             ;TODO
(1) 1065/    CF2D : (MACRO)             		NEXT_MACRO
(1) 1065/    CF2D :                                             
(1) 1065/    CF2D :  (MACRO-2)                                  halt
(1) 1065/    CF2D : 00                                  BRK
(1) 1065/    CF2E : 00                                  BRK
(1) 1065/    CF2F :                                             
(1) 1065/    CF2F :                                             ;Method 1 - 60 cycles
(1) 1065/    CF2F :                                             ;Jump table must be page aligned!!!
(1) 1065/    CF2F :                                             ;LDA (emu_PC,X)                 ;6
(1) 1065/    CF2F :                                             ;ASL                                    ;2
(1) 1065/    CF2F :                                             ;STA emu_ptr,X                  ;4
(1) 1065/    CF2F :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1065/    CF2F :                                             ;ADC #0                                 ;2
(1) 1065/    CF2F :                                             ;STA emu_ptr+1,X                ;4
(1) 1065/    CF2F :                                             ;LDA (emu_ptr,X)                ;6
(1) 1065/    CF2F :                                             ;STA emu_ptr2,X                 ;4
(1) 1065/    CF2F :                                             ;INC emu_ptr,X                  ;6
(1) 1065/    CF2F :                                             ;BCC .skip                              ;2
(1) 1065/    CF2F :                                             ;       INC emu_ptr+1,X         ;6
(1) 1065/    CF2F :                                             ;.skip:
(1) 1065/    CF2F :                                             ;LDA (emu_ptr,X)                ;6
(1) 1065/    CF2F :                                             ;STA emu_ptr2+1,X               ;4
(1) 1065/    CF2F :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1065/    CF2F :                                             
(1) 1065/    CF2F :                                             ;Method 2 - 46 cycles
(1) 1065/    CF2F :                                             ;Jump table must be page aligned!!!
(1) 1065/    CF2F :                                             ;LDA (emu_PC,X)                 ;6
(1) 1065/    CF2F :                                             ;STZ emu_ptr+1,X                ;4
(1) 1065/    CF2F :                                             ;ASL                                    ;2
(1) 1065/    CF2F :                                             ;ROL emu_ptr+1,X                ;6
(1) 1065/    CF2F :                                             ;ASL                                    ;2
(1) 1065/    CF2F :                                             ;ROL emu_ptr+1,X                ;6
(1) 1065/    CF2F :                                             ;STA emu_ptr,X                  ;4                              
(1) 1065/    CF2F :                                             ;LDA emu_ptr+1,X                ;4
(1) 1065/    CF2F :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1065/    CF2F :                                             ;STA emu_ptr+1,X                ;4
(1) 1065/    CF2F :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1065/    CF2F :                                             
(1) 1065/    CF2F :                                             ;Method 3 - 30 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 315 - 1/5/2022 11:50:53


(1) 1065/    CF2F :                                             ;TXA                                                    ;2
(1) 1065/    CF2F :                                             ;TAY                                                    ;2
(1) 1065/    CF2F :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1065/    CF2F :                                             ;ASL                                                    ;2
(1) 1065/    CF2F :                                             ;BCS upper                                              ;2
(1) 1065/    CF2F :                                             ;lower:
(1) 1065/    CF2F :                                             ;       ASL                                                     ;2
(1) 1065/    CF2F :                                             ;       TAX                                                     ;2
(1) 1065/    CF2F :                                             ;       BCS upper_lower                         ;2
(1) 1065/    CF2F :                                             ;       lower_lower:
(1) 1065/    CF2F :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1065/    CF2F :                                             ;       upper_lower:
(1) 1065/    CF2F :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1065/    CF2F :                                             ;upper:
(1) 1065/    CF2F :                                             ;       ASL
(1) 1065/    CF2F :                                             ;       TAX
(1) 1065/    CF2F :                                             ;       BCS upper_upper
(1) 1065/    CF2F :                                             ;       lower_upper:
(1) 1065/    CF2F :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1065/    CF2F :                                             ;       upper_upper:
(1) 1065/    CF2F :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1065/    CF2F :                                             ;After jump:
(1) 1065/    CF2F :                                             ;TYA                                                    ;2
(1) 1065/    CF2F :                                             ;TAX                                                    ;2
(1) 1065/    CF2F :                                             
(1) 1065/    CF2F :                                             ;Method 4 - 28 cycles
(1) 1065/    CF2F :                                             ;LDA (emu_PC,X)                 ;6
(1) 1065/    CF2F :                                             ;TAY                                    ;2
(1) 1065/    CF2F :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1065/    CF2F :                                             ;PHA                                    ;3
(1) 1065/    CF2F :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1065/    CF2F :                                             ;PHA                                    ;3
(1) 1065/    CF2F :                                             ;RTS                                    ;6
(1) 1065/    CF2F :                                             
(1) 1065/    CF2F :                                             ;Method 5 - 30 cycles
(1) 1065/    CF2F : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1065/    CF31 : A8                                          TAY                                             ;2
(1) 1065/    CF32 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1065/    CF35 : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1065/    CF37 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1065/    CF3A : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1065/    CF3C : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1065/    CF3F :                                                                     
(1) 1066/    CF3F :                     
(1) 1067/    CF3F :                     	;0xD5 - CMP ZPX
(1) 1068/    CF3F :                     	CMP_ZPX:
(1) 1069/    CF3F : (MACRO)             		OP_MACRO 213, "CMP", "ZPX", "CMP_ZPX"
(1) 1069/    CF3F :                                             ;TODO
(1) 1070/    CF3F : (MACRO)             		NEXT_MACRO
(1) 1070/    CF3F :                                             
(1) 1070/    CF3F :  (MACRO-2)                                  halt
(1) 1070/    CF3F : 00                                  BRK
(1) 1070/    CF40 : 00                                  BRK
(1) 1070/    CF41 :                                             
(1) 1070/    CF41 :                                             ;Method 1 - 60 cycles
(1) 1070/    CF41 :                                             ;Jump table must be page aligned!!!
(1) 1070/    CF41 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1070/    CF41 :                                             ;ASL                                    ;2
(1) 1070/    CF41 :                                             ;STA emu_ptr,X                  ;4
(1) 1070/    CF41 :                                             ;LDA #hi(JUMP_TABLE)    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 316 - 1/5/2022 11:50:53


(1) 1070/    CF41 :                                             ;ADC #0                                 ;2
(1) 1070/    CF41 :                                             ;STA emu_ptr+1,X                ;4
(1) 1070/    CF41 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1070/    CF41 :                                             ;STA emu_ptr2,X                 ;4
(1) 1070/    CF41 :                                             ;INC emu_ptr,X                  ;6
(1) 1070/    CF41 :                                             ;BCC .skip                              ;2
(1) 1070/    CF41 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1070/    CF41 :                                             ;.skip:
(1) 1070/    CF41 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1070/    CF41 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1070/    CF41 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1070/    CF41 :                                             
(1) 1070/    CF41 :                                             ;Method 2 - 46 cycles
(1) 1070/    CF41 :                                             ;Jump table must be page aligned!!!
(1) 1070/    CF41 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1070/    CF41 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1070/    CF41 :                                             ;ASL                                    ;2
(1) 1070/    CF41 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1070/    CF41 :                                             ;ASL                                    ;2
(1) 1070/    CF41 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1070/    CF41 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1070/    CF41 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1070/    CF41 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1070/    CF41 :                                             ;STA emu_ptr+1,X                ;4
(1) 1070/    CF41 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1070/    CF41 :                                             
(1) 1070/    CF41 :                                             ;Method 3 - 30 cycles
(1) 1070/    CF41 :                                             ;TXA                                                    ;2
(1) 1070/    CF41 :                                             ;TAY                                                    ;2
(1) 1070/    CF41 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1070/    CF41 :                                             ;ASL                                                    ;2
(1) 1070/    CF41 :                                             ;BCS upper                                              ;2
(1) 1070/    CF41 :                                             ;lower:
(1) 1070/    CF41 :                                             ;       ASL                                                     ;2
(1) 1070/    CF41 :                                             ;       TAX                                                     ;2
(1) 1070/    CF41 :                                             ;       BCS upper_lower                         ;2
(1) 1070/    CF41 :                                             ;       lower_lower:
(1) 1070/    CF41 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1070/    CF41 :                                             ;       upper_lower:
(1) 1070/    CF41 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1070/    CF41 :                                             ;upper:
(1) 1070/    CF41 :                                             ;       ASL
(1) 1070/    CF41 :                                             ;       TAX
(1) 1070/    CF41 :                                             ;       BCS upper_upper
(1) 1070/    CF41 :                                             ;       lower_upper:
(1) 1070/    CF41 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1070/    CF41 :                                             ;       upper_upper:
(1) 1070/    CF41 :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1070/    CF41 :                                             ;After jump:
(1) 1070/    CF41 :                                             ;TYA                                                    ;2
(1) 1070/    CF41 :                                             ;TAX                                                    ;2
(1) 1070/    CF41 :                                             
(1) 1070/    CF41 :                                             ;Method 4 - 28 cycles
(1) 1070/    CF41 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1070/    CF41 :                                             ;TAY                                    ;2
(1) 1070/    CF41 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1070/    CF41 :                                             ;PHA                                    ;3
(1) 1070/    CF41 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1070/    CF41 :                                             ;PHA                                    ;3
(1) 1070/    CF41 :                                             ;RTS                                    ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 317 - 1/5/2022 11:50:53


(1) 1070/    CF41 :                                             
(1) 1070/    CF41 :                                             ;Method 5 - 30 cycles
(1) 1070/    CF41 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1070/    CF43 : A8                                          TAY                                             ;2
(1) 1070/    CF44 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1070/    CF47 : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1070/    CF49 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1070/    CF4C : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1070/    CF4E : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1070/    CF51 :                                                                     
(1) 1071/    CF51 :                     
(1) 1072/    CF51 :                     	;0xD6 - DEC ZPX
(1) 1073/    CF51 :                     	DEC_ZPX:
(1) 1074/    CF51 : (MACRO)             		OP_MACRO 214, "DEC", "ZPX", "DEC_ZPX"
(1) 1074/    CF51 :                                             ;TODO
(1) 1075/    CF51 : (MACRO)             		NEXT_MACRO
(1) 1075/    CF51 :                                             
(1) 1075/    CF51 :  (MACRO-2)                                  halt
(1) 1075/    CF51 : 00                                  BRK
(1) 1075/    CF52 : 00                                  BRK
(1) 1075/    CF53 :                                             
(1) 1075/    CF53 :                                             ;Method 1 - 60 cycles
(1) 1075/    CF53 :                                             ;Jump table must be page aligned!!!
(1) 1075/    CF53 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1075/    CF53 :                                             ;ASL                                    ;2
(1) 1075/    CF53 :                                             ;STA emu_ptr,X                  ;4
(1) 1075/    CF53 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1075/    CF53 :                                             ;ADC #0                                 ;2
(1) 1075/    CF53 :                                             ;STA emu_ptr+1,X                ;4
(1) 1075/    CF53 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1075/    CF53 :                                             ;STA emu_ptr2,X                 ;4
(1) 1075/    CF53 :                                             ;INC emu_ptr,X                  ;6
(1) 1075/    CF53 :                                             ;BCC .skip                              ;2
(1) 1075/    CF53 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1075/    CF53 :                                             ;.skip:
(1) 1075/    CF53 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1075/    CF53 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1075/    CF53 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1075/    CF53 :                                             
(1) 1075/    CF53 :                                             ;Method 2 - 46 cycles
(1) 1075/    CF53 :                                             ;Jump table must be page aligned!!!
(1) 1075/    CF53 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1075/    CF53 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1075/    CF53 :                                             ;ASL                                    ;2
(1) 1075/    CF53 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1075/    CF53 :                                             ;ASL                                    ;2
(1) 1075/    CF53 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1075/    CF53 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1075/    CF53 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1075/    CF53 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1075/    CF53 :                                             ;STA emu_ptr+1,X                ;4
(1) 1075/    CF53 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1075/    CF53 :                                             
(1) 1075/    CF53 :                                             ;Method 3 - 30 cycles
(1) 1075/    CF53 :                                             ;TXA                                                    ;2
(1) 1075/    CF53 :                                             ;TAY                                                    ;2
(1) 1075/    CF53 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1075/    CF53 :                                             ;ASL                                                    ;2
(1) 1075/    CF53 :                                             ;BCS upper                                              ;2
(1) 1075/    CF53 :                                             ;lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 318 - 1/5/2022 11:50:53


(1) 1075/    CF53 :                                             ;       ASL                                                     ;2
(1) 1075/    CF53 :                                             ;       TAX                                                     ;2
(1) 1075/    CF53 :                                             ;       BCS upper_lower                         ;2
(1) 1075/    CF53 :                                             ;       lower_lower:
(1) 1075/    CF53 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1075/    CF53 :                                             ;       upper_lower:
(1) 1075/    CF53 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1075/    CF53 :                                             ;upper:
(1) 1075/    CF53 :                                             ;       ASL
(1) 1075/    CF53 :                                             ;       TAX
(1) 1075/    CF53 :                                             ;       BCS upper_upper
(1) 1075/    CF53 :                                             ;       lower_upper:
(1) 1075/    CF53 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1075/    CF53 :                                             ;       upper_upper:
(1) 1075/    CF53 :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1075/    CF53 :                                             ;After jump:
(1) 1075/    CF53 :                                             ;TYA                                                    ;2
(1) 1075/    CF53 :                                             ;TAX                                                    ;2
(1) 1075/    CF53 :                                             
(1) 1075/    CF53 :                                             ;Method 4 - 28 cycles
(1) 1075/    CF53 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1075/    CF53 :                                             ;TAY                                    ;2
(1) 1075/    CF53 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1075/    CF53 :                                             ;PHA                                    ;3
(1) 1075/    CF53 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1075/    CF53 :                                             ;PHA                                    ;3
(1) 1075/    CF53 :                                             ;RTS                                    ;6
(1) 1075/    CF53 :                                             
(1) 1075/    CF53 :                                             ;Method 5 - 30 cycles
(1) 1075/    CF53 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1075/    CF55 : A8                                          TAY                                             ;2
(1) 1075/    CF56 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1075/    CF59 : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1075/    CF5B : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1075/    CF5E : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1075/    CF60 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1075/    CF63 :                                                                     
(1) 1076/    CF63 :                     
(1) 1077/    CF63 :                     	;0xD7 - NOP
(1) 1078/    CF63 :                     	NOP_0xD7:
(1) 1079/    CF63 : (MACRO)             		OP_MACRO 215, "NOP", "IMP", "NOP_0xD7"
(1) 1079/    CF63 :                                             ;TODO
(1) 1080/    CF63 : (MACRO)             		NEXT_MACRO
(1) 1080/    CF63 :                                             
(1) 1080/    CF63 :  (MACRO-2)                                  halt
(1) 1080/    CF63 : 00                                  BRK
(1) 1080/    CF64 : 00                                  BRK
(1) 1080/    CF65 :                                             
(1) 1080/    CF65 :                                             ;Method 1 - 60 cycles
(1) 1080/    CF65 :                                             ;Jump table must be page aligned!!!
(1) 1080/    CF65 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1080/    CF65 :                                             ;ASL                                    ;2
(1) 1080/    CF65 :                                             ;STA emu_ptr,X                  ;4
(1) 1080/    CF65 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1080/    CF65 :                                             ;ADC #0                                 ;2
(1) 1080/    CF65 :                                             ;STA emu_ptr+1,X                ;4
(1) 1080/    CF65 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1080/    CF65 :                                             ;STA emu_ptr2,X                 ;4
(1) 1080/    CF65 :                                             ;INC emu_ptr,X                  ;6
(1) 1080/    CF65 :                                             ;BCC .skip                              ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 319 - 1/5/2022 11:50:53


(1) 1080/    CF65 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1080/    CF65 :                                             ;.skip:
(1) 1080/    CF65 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1080/    CF65 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1080/    CF65 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1080/    CF65 :                                             
(1) 1080/    CF65 :                                             ;Method 2 - 46 cycles
(1) 1080/    CF65 :                                             ;Jump table must be page aligned!!!
(1) 1080/    CF65 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1080/    CF65 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1080/    CF65 :                                             ;ASL                                    ;2
(1) 1080/    CF65 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1080/    CF65 :                                             ;ASL                                    ;2
(1) 1080/    CF65 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1080/    CF65 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1080/    CF65 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1080/    CF65 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1080/    CF65 :                                             ;STA emu_ptr+1,X                ;4
(1) 1080/    CF65 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1080/    CF65 :                                             
(1) 1080/    CF65 :                                             ;Method 3 - 30 cycles
(1) 1080/    CF65 :                                             ;TXA                                                    ;2
(1) 1080/    CF65 :                                             ;TAY                                                    ;2
(1) 1080/    CF65 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1080/    CF65 :                                             ;ASL                                                    ;2
(1) 1080/    CF65 :                                             ;BCS upper                                              ;2
(1) 1080/    CF65 :                                             ;lower:
(1) 1080/    CF65 :                                             ;       ASL                                                     ;2
(1) 1080/    CF65 :                                             ;       TAX                                                     ;2
(1) 1080/    CF65 :                                             ;       BCS upper_lower                         ;2
(1) 1080/    CF65 :                                             ;       lower_lower:
(1) 1080/    CF65 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1080/    CF65 :                                             ;       upper_lower:
(1) 1080/    CF65 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1080/    CF65 :                                             ;upper:
(1) 1080/    CF65 :                                             ;       ASL
(1) 1080/    CF65 :                                             ;       TAX
(1) 1080/    CF65 :                                             ;       BCS upper_upper
(1) 1080/    CF65 :                                             ;       lower_upper:
(1) 1080/    CF65 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1080/    CF65 :                                             ;       upper_upper:
(1) 1080/    CF65 :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1080/    CF65 :                                             ;After jump:
(1) 1080/    CF65 :                                             ;TYA                                                    ;2
(1) 1080/    CF65 :                                             ;TAX                                                    ;2
(1) 1080/    CF65 :                                             
(1) 1080/    CF65 :                                             ;Method 4 - 28 cycles
(1) 1080/    CF65 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1080/    CF65 :                                             ;TAY                                    ;2
(1) 1080/    CF65 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1080/    CF65 :                                             ;PHA                                    ;3
(1) 1080/    CF65 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1080/    CF65 :                                             ;PHA                                    ;3
(1) 1080/    CF65 :                                             ;RTS                                    ;6
(1) 1080/    CF65 :                                             
(1) 1080/    CF65 :                                             ;Method 5 - 30 cycles
(1) 1080/    CF65 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1080/    CF67 : A8                                          TAY                                             ;2
(1) 1080/    CF68 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1080/    CF6B : 95 0A                                       STA emu_ptr,X                   ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 320 - 1/5/2022 11:50:53


(1) 1080/    CF6D : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1080/    CF70 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1080/    CF72 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1080/    CF75 :                                                                     
(1) 1081/    CF75 :                     
(1) 1082/    CF75 :                     	;0xD8 - CLD IMP
(1) 1083/    CF75 :                     	CLD_IMP:
(1) 1084/    CF75 : (MACRO)             		OP_MACRO 216, "CLD", "IMP", "CLD_IMP"
(1) 1084/    CF75 :                                             ;TODO
(1) 1085/    CF75 : (MACRO)             		NEXT_MACRO
(1) 1085/    CF75 :                                             
(1) 1085/    CF75 :  (MACRO-2)                                  halt
(1) 1085/    CF75 : 00                                  BRK
(1) 1085/    CF76 : 00                                  BRK
(1) 1085/    CF77 :                                             
(1) 1085/    CF77 :                                             ;Method 1 - 60 cycles
(1) 1085/    CF77 :                                             ;Jump table must be page aligned!!!
(1) 1085/    CF77 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1085/    CF77 :                                             ;ASL                                    ;2
(1) 1085/    CF77 :                                             ;STA emu_ptr,X                  ;4
(1) 1085/    CF77 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1085/    CF77 :                                             ;ADC #0                                 ;2
(1) 1085/    CF77 :                                             ;STA emu_ptr+1,X                ;4
(1) 1085/    CF77 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1085/    CF77 :                                             ;STA emu_ptr2,X                 ;4
(1) 1085/    CF77 :                                             ;INC emu_ptr,X                  ;6
(1) 1085/    CF77 :                                             ;BCC .skip                              ;2
(1) 1085/    CF77 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1085/    CF77 :                                             ;.skip:
(1) 1085/    CF77 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1085/    CF77 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1085/    CF77 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1085/    CF77 :                                             
(1) 1085/    CF77 :                                             ;Method 2 - 46 cycles
(1) 1085/    CF77 :                                             ;Jump table must be page aligned!!!
(1) 1085/    CF77 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1085/    CF77 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1085/    CF77 :                                             ;ASL                                    ;2
(1) 1085/    CF77 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1085/    CF77 :                                             ;ASL                                    ;2
(1) 1085/    CF77 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1085/    CF77 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1085/    CF77 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1085/    CF77 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1085/    CF77 :                                             ;STA emu_ptr+1,X                ;4
(1) 1085/    CF77 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1085/    CF77 :                                             
(1) 1085/    CF77 :                                             ;Method 3 - 30 cycles
(1) 1085/    CF77 :                                             ;TXA                                                    ;2
(1) 1085/    CF77 :                                             ;TAY                                                    ;2
(1) 1085/    CF77 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1085/    CF77 :                                             ;ASL                                                    ;2
(1) 1085/    CF77 :                                             ;BCS upper                                              ;2
(1) 1085/    CF77 :                                             ;lower:
(1) 1085/    CF77 :                                             ;       ASL                                                     ;2
(1) 1085/    CF77 :                                             ;       TAX                                                     ;2
(1) 1085/    CF77 :                                             ;       BCS upper_lower                         ;2
(1) 1085/    CF77 :                                             ;       lower_lower:
(1) 1085/    CF77 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1085/    CF77 :                                             ;       upper_lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 321 - 1/5/2022 11:50:53


(1) 1085/    CF77 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1085/    CF77 :                                             ;upper:
(1) 1085/    CF77 :                                             ;       ASL
(1) 1085/    CF77 :                                             ;       TAX
(1) 1085/    CF77 :                                             ;       BCS upper_upper
(1) 1085/    CF77 :                                             ;       lower_upper:
(1) 1085/    CF77 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1085/    CF77 :                                             ;       upper_upper:
(1) 1085/    CF77 :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1085/    CF77 :                                             ;After jump:
(1) 1085/    CF77 :                                             ;TYA                                                    ;2
(1) 1085/    CF77 :                                             ;TAX                                                    ;2
(1) 1085/    CF77 :                                             
(1) 1085/    CF77 :                                             ;Method 4 - 28 cycles
(1) 1085/    CF77 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1085/    CF77 :                                             ;TAY                                    ;2
(1) 1085/    CF77 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1085/    CF77 :                                             ;PHA                                    ;3
(1) 1085/    CF77 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1085/    CF77 :                                             ;PHA                                    ;3
(1) 1085/    CF77 :                                             ;RTS                                    ;6
(1) 1085/    CF77 :                                             
(1) 1085/    CF77 :                                             ;Method 5 - 30 cycles
(1) 1085/    CF77 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1085/    CF79 : A8                                          TAY                                             ;2
(1) 1085/    CF7A : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1085/    CF7D : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1085/    CF7F : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1085/    CF82 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1085/    CF84 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1085/    CF87 :                                                                     
(1) 1086/    CF87 :                     
(1) 1087/    CF87 :                     	;0xD9 - CMP ABSY
(1) 1088/    CF87 :                     	CMP_ABSY:
(1) 1089/    CF87 : (MACRO)             		OP_MACRO 217, "CMP", "ABSY", "CMP_ABSY"
(1) 1089/    CF87 :                                             ;TODO
(1) 1090/    CF87 : (MACRO)             		NEXT_MACRO
(1) 1090/    CF87 :                                             
(1) 1090/    CF87 :  (MACRO-2)                                  halt
(1) 1090/    CF87 : 00                                  BRK
(1) 1090/    CF88 : 00                                  BRK
(1) 1090/    CF89 :                                             
(1) 1090/    CF89 :                                             ;Method 1 - 60 cycles
(1) 1090/    CF89 :                                             ;Jump table must be page aligned!!!
(1) 1090/    CF89 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1090/    CF89 :                                             ;ASL                                    ;2
(1) 1090/    CF89 :                                             ;STA emu_ptr,X                  ;4
(1) 1090/    CF89 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1090/    CF89 :                                             ;ADC #0                                 ;2
(1) 1090/    CF89 :                                             ;STA emu_ptr+1,X                ;4
(1) 1090/    CF89 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1090/    CF89 :                                             ;STA emu_ptr2,X                 ;4
(1) 1090/    CF89 :                                             ;INC emu_ptr,X                  ;6
(1) 1090/    CF89 :                                             ;BCC .skip                              ;2
(1) 1090/    CF89 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1090/    CF89 :                                             ;.skip:
(1) 1090/    CF89 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1090/    CF89 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1090/    CF89 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1090/    CF89 :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 322 - 1/5/2022 11:50:53


(1) 1090/    CF89 :                                             ;Method 2 - 46 cycles
(1) 1090/    CF89 :                                             ;Jump table must be page aligned!!!
(1) 1090/    CF89 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1090/    CF89 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1090/    CF89 :                                             ;ASL                                    ;2
(1) 1090/    CF89 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1090/    CF89 :                                             ;ASL                                    ;2
(1) 1090/    CF89 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1090/    CF89 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1090/    CF89 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1090/    CF89 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1090/    CF89 :                                             ;STA emu_ptr+1,X                ;4
(1) 1090/    CF89 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1090/    CF89 :                                             
(1) 1090/    CF89 :                                             ;Method 3 - 30 cycles
(1) 1090/    CF89 :                                             ;TXA                                                    ;2
(1) 1090/    CF89 :                                             ;TAY                                                    ;2
(1) 1090/    CF89 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1090/    CF89 :                                             ;ASL                                                    ;2
(1) 1090/    CF89 :                                             ;BCS upper                                              ;2
(1) 1090/    CF89 :                                             ;lower:
(1) 1090/    CF89 :                                             ;       ASL                                                     ;2
(1) 1090/    CF89 :                                             ;       TAX                                                     ;2
(1) 1090/    CF89 :                                             ;       BCS upper_lower                         ;2
(1) 1090/    CF89 :                                             ;       lower_lower:
(1) 1090/    CF89 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1090/    CF89 :                                             ;       upper_lower:
(1) 1090/    CF89 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1090/    CF89 :                                             ;upper:
(1) 1090/    CF89 :                                             ;       ASL
(1) 1090/    CF89 :                                             ;       TAX
(1) 1090/    CF89 :                                             ;       BCS upper_upper
(1) 1090/    CF89 :                                             ;       lower_upper:
(1) 1090/    CF89 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1090/    CF89 :                                             ;       upper_upper:
(1) 1090/    CF89 :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1090/    CF89 :                                             ;After jump:
(1) 1090/    CF89 :                                             ;TYA                                                    ;2
(1) 1090/    CF89 :                                             ;TAX                                                    ;2
(1) 1090/    CF89 :                                             
(1) 1090/    CF89 :                                             ;Method 4 - 28 cycles
(1) 1090/    CF89 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1090/    CF89 :                                             ;TAY                                    ;2
(1) 1090/    CF89 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1090/    CF89 :                                             ;PHA                                    ;3
(1) 1090/    CF89 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1090/    CF89 :                                             ;PHA                                    ;3
(1) 1090/    CF89 :                                             ;RTS                                    ;6
(1) 1090/    CF89 :                                             
(1) 1090/    CF89 :                                             ;Method 5 - 30 cycles
(1) 1090/    CF89 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1090/    CF8B : A8                                          TAY                                             ;2
(1) 1090/    CF8C : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1090/    CF8F : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1090/    CF91 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1090/    CF94 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1090/    CF96 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1090/    CF99 :                                                                     
(1) 1091/    CF99 :                     
(1) 1092/    CF99 :                     	;0xDA - NOP
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 323 - 1/5/2022 11:50:53


(1) 1093/    CF99 :                     	NOP_0xDA:
(1) 1094/    CF99 : (MACRO)             		OP_MACRO 218, "NOP", "IMP", "NOP_0xDA"
(1) 1094/    CF99 :                                             ;TODO
(1) 1095/    CF99 : (MACRO)             		NEXT_MACRO
(1) 1095/    CF99 :                                             
(1) 1095/    CF99 :  (MACRO-2)                                  halt
(1) 1095/    CF99 : 00                                  BRK
(1) 1095/    CF9A : 00                                  BRK
(1) 1095/    CF9B :                                             
(1) 1095/    CF9B :                                             ;Method 1 - 60 cycles
(1) 1095/    CF9B :                                             ;Jump table must be page aligned!!!
(1) 1095/    CF9B :                                             ;LDA (emu_PC,X)                 ;6
(1) 1095/    CF9B :                                             ;ASL                                    ;2
(1) 1095/    CF9B :                                             ;STA emu_ptr,X                  ;4
(1) 1095/    CF9B :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1095/    CF9B :                                             ;ADC #0                                 ;2
(1) 1095/    CF9B :                                             ;STA emu_ptr+1,X                ;4
(1) 1095/    CF9B :                                             ;LDA (emu_ptr,X)                ;6
(1) 1095/    CF9B :                                             ;STA emu_ptr2,X                 ;4
(1) 1095/    CF9B :                                             ;INC emu_ptr,X                  ;6
(1) 1095/    CF9B :                                             ;BCC .skip                              ;2
(1) 1095/    CF9B :                                             ;       INC emu_ptr+1,X         ;6
(1) 1095/    CF9B :                                             ;.skip:
(1) 1095/    CF9B :                                             ;LDA (emu_ptr,X)                ;6
(1) 1095/    CF9B :                                             ;STA emu_ptr2+1,X               ;4
(1) 1095/    CF9B :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1095/    CF9B :                                             
(1) 1095/    CF9B :                                             ;Method 2 - 46 cycles
(1) 1095/    CF9B :                                             ;Jump table must be page aligned!!!
(1) 1095/    CF9B :                                             ;LDA (emu_PC,X)                 ;6
(1) 1095/    CF9B :                                             ;STZ emu_ptr+1,X                ;4
(1) 1095/    CF9B :                                             ;ASL                                    ;2
(1) 1095/    CF9B :                                             ;ROL emu_ptr+1,X                ;6
(1) 1095/    CF9B :                                             ;ASL                                    ;2
(1) 1095/    CF9B :                                             ;ROL emu_ptr+1,X                ;6
(1) 1095/    CF9B :                                             ;STA emu_ptr,X                  ;4                              
(1) 1095/    CF9B :                                             ;LDA emu_ptr+1,X                ;4
(1) 1095/    CF9B :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1095/    CF9B :                                             ;STA emu_ptr+1,X                ;4
(1) 1095/    CF9B :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1095/    CF9B :                                             
(1) 1095/    CF9B :                                             ;Method 3 - 30 cycles
(1) 1095/    CF9B :                                             ;TXA                                                    ;2
(1) 1095/    CF9B :                                             ;TAY                                                    ;2
(1) 1095/    CF9B :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1095/    CF9B :                                             ;ASL                                                    ;2
(1) 1095/    CF9B :                                             ;BCS upper                                              ;2
(1) 1095/    CF9B :                                             ;lower:
(1) 1095/    CF9B :                                             ;       ASL                                                     ;2
(1) 1095/    CF9B :                                             ;       TAX                                                     ;2
(1) 1095/    CF9B :                                             ;       BCS upper_lower                         ;2
(1) 1095/    CF9B :                                             ;       lower_lower:
(1) 1095/    CF9B :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1095/    CF9B :                                             ;       upper_lower:
(1) 1095/    CF9B :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1095/    CF9B :                                             ;upper:
(1) 1095/    CF9B :                                             ;       ASL
(1) 1095/    CF9B :                                             ;       TAX
(1) 1095/    CF9B :                                             ;       BCS upper_upper
(1) 1095/    CF9B :                                             ;       lower_upper:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 324 - 1/5/2022 11:50:53


(1) 1095/    CF9B :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1095/    CF9B :                                             ;       upper_upper:
(1) 1095/    CF9B :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1095/    CF9B :                                             ;After jump:
(1) 1095/    CF9B :                                             ;TYA                                                    ;2
(1) 1095/    CF9B :                                             ;TAX                                                    ;2
(1) 1095/    CF9B :                                             
(1) 1095/    CF9B :                                             ;Method 4 - 28 cycles
(1) 1095/    CF9B :                                             ;LDA (emu_PC,X)                 ;6
(1) 1095/    CF9B :                                             ;TAY                                    ;2
(1) 1095/    CF9B :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1095/    CF9B :                                             ;PHA                                    ;3
(1) 1095/    CF9B :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1095/    CF9B :                                             ;PHA                                    ;3
(1) 1095/    CF9B :                                             ;RTS                                    ;6
(1) 1095/    CF9B :                                             
(1) 1095/    CF9B :                                             ;Method 5 - 30 cycles
(1) 1095/    CF9B : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1095/    CF9D : A8                                          TAY                                             ;2
(1) 1095/    CF9E : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1095/    CFA1 : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1095/    CFA3 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1095/    CFA6 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1095/    CFA8 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1095/    CFAB :                                                                     
(1) 1096/    CFAB :                     
(1) 1097/    CFAB :                     	;0xDB - NOP
(1) 1098/    CFAB :                     	NOP_0xDB:
(1) 1099/    CFAB : (MACRO)             		OP_MACRO 219, "NOP", "IMP", "NOP_0xDB"
(1) 1099/    CFAB :                                             ;TODO
(1) 1100/    CFAB : (MACRO)             		NEXT_MACRO
(1) 1100/    CFAB :                                             
(1) 1100/    CFAB :  (MACRO-2)                                  halt
(1) 1100/    CFAB : 00                                  BRK
(1) 1100/    CFAC : 00                                  BRK
(1) 1100/    CFAD :                                             
(1) 1100/    CFAD :                                             ;Method 1 - 60 cycles
(1) 1100/    CFAD :                                             ;Jump table must be page aligned!!!
(1) 1100/    CFAD :                                             ;LDA (emu_PC,X)                 ;6
(1) 1100/    CFAD :                                             ;ASL                                    ;2
(1) 1100/    CFAD :                                             ;STA emu_ptr,X                  ;4
(1) 1100/    CFAD :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1100/    CFAD :                                             ;ADC #0                                 ;2
(1) 1100/    CFAD :                                             ;STA emu_ptr+1,X                ;4
(1) 1100/    CFAD :                                             ;LDA (emu_ptr,X)                ;6
(1) 1100/    CFAD :                                             ;STA emu_ptr2,X                 ;4
(1) 1100/    CFAD :                                             ;INC emu_ptr,X                  ;6
(1) 1100/    CFAD :                                             ;BCC .skip                              ;2
(1) 1100/    CFAD :                                             ;       INC emu_ptr+1,X         ;6
(1) 1100/    CFAD :                                             ;.skip:
(1) 1100/    CFAD :                                             ;LDA (emu_ptr,X)                ;6
(1) 1100/    CFAD :                                             ;STA emu_ptr2+1,X               ;4
(1) 1100/    CFAD :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1100/    CFAD :                                             
(1) 1100/    CFAD :                                             ;Method 2 - 46 cycles
(1) 1100/    CFAD :                                             ;Jump table must be page aligned!!!
(1) 1100/    CFAD :                                             ;LDA (emu_PC,X)                 ;6
(1) 1100/    CFAD :                                             ;STZ emu_ptr+1,X                ;4
(1) 1100/    CFAD :                                             ;ASL                                    ;2
(1) 1100/    CFAD :                                             ;ROL emu_ptr+1,X                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 325 - 1/5/2022 11:50:53


(1) 1100/    CFAD :                                             ;ASL                                    ;2
(1) 1100/    CFAD :                                             ;ROL emu_ptr+1,X                ;6
(1) 1100/    CFAD :                                             ;STA emu_ptr,X                  ;4                              
(1) 1100/    CFAD :                                             ;LDA emu_ptr+1,X                ;4
(1) 1100/    CFAD :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1100/    CFAD :                                             ;STA emu_ptr+1,X                ;4
(1) 1100/    CFAD :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1100/    CFAD :                                             
(1) 1100/    CFAD :                                             ;Method 3 - 30 cycles
(1) 1100/    CFAD :                                             ;TXA                                                    ;2
(1) 1100/    CFAD :                                             ;TAY                                                    ;2
(1) 1100/    CFAD :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1100/    CFAD :                                             ;ASL                                                    ;2
(1) 1100/    CFAD :                                             ;BCS upper                                              ;2
(1) 1100/    CFAD :                                             ;lower:
(1) 1100/    CFAD :                                             ;       ASL                                                     ;2
(1) 1100/    CFAD :                                             ;       TAX                                                     ;2
(1) 1100/    CFAD :                                             ;       BCS upper_lower                         ;2
(1) 1100/    CFAD :                                             ;       lower_lower:
(1) 1100/    CFAD :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1100/    CFAD :                                             ;       upper_lower:
(1) 1100/    CFAD :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1100/    CFAD :                                             ;upper:
(1) 1100/    CFAD :                                             ;       ASL
(1) 1100/    CFAD :                                             ;       TAX
(1) 1100/    CFAD :                                             ;       BCS upper_upper
(1) 1100/    CFAD :                                             ;       lower_upper:
(1) 1100/    CFAD :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1100/    CFAD :                                             ;       upper_upper:
(1) 1100/    CFAD :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1100/    CFAD :                                             ;After jump:
(1) 1100/    CFAD :                                             ;TYA                                                    ;2
(1) 1100/    CFAD :                                             ;TAX                                                    ;2
(1) 1100/    CFAD :                                             
(1) 1100/    CFAD :                                             ;Method 4 - 28 cycles
(1) 1100/    CFAD :                                             ;LDA (emu_PC,X)                 ;6
(1) 1100/    CFAD :                                             ;TAY                                    ;2
(1) 1100/    CFAD :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1100/    CFAD :                                             ;PHA                                    ;3
(1) 1100/    CFAD :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1100/    CFAD :                                             ;PHA                                    ;3
(1) 1100/    CFAD :                                             ;RTS                                    ;6
(1) 1100/    CFAD :                                             
(1) 1100/    CFAD :                                             ;Method 5 - 30 cycles
(1) 1100/    CFAD : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1100/    CFAF : A8                                          TAY                                             ;2
(1) 1100/    CFB0 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1100/    CFB3 : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1100/    CFB5 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1100/    CFB8 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1100/    CFBA : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1100/    CFBD :                                                                     
(1) 1101/    CFBD :                     
(1) 1102/    CFBD :                     	;0xDC - NOP
(1) 1103/    CFBD :                     	NOP_0xDC:
(1) 1104/    CFBD : (MACRO)             		OP_MACRO 220, "NOP", "IMP", "NOP_0xDC"
(1) 1104/    CFBD :                                             ;TODO
(1) 1105/    CFBD : (MACRO)             		NEXT_MACRO
(1) 1105/    CFBD :                                             
(1) 1105/    CFBD :  (MACRO-2)                                  halt
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 326 - 1/5/2022 11:50:53


(1) 1105/    CFBD : 00                                  BRK
(1) 1105/    CFBE : 00                                  BRK
(1) 1105/    CFBF :                                             
(1) 1105/    CFBF :                                             ;Method 1 - 60 cycles
(1) 1105/    CFBF :                                             ;Jump table must be page aligned!!!
(1) 1105/    CFBF :                                             ;LDA (emu_PC,X)                 ;6
(1) 1105/    CFBF :                                             ;ASL                                    ;2
(1) 1105/    CFBF :                                             ;STA emu_ptr,X                  ;4
(1) 1105/    CFBF :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1105/    CFBF :                                             ;ADC #0                                 ;2
(1) 1105/    CFBF :                                             ;STA emu_ptr+1,X                ;4
(1) 1105/    CFBF :                                             ;LDA (emu_ptr,X)                ;6
(1) 1105/    CFBF :                                             ;STA emu_ptr2,X                 ;4
(1) 1105/    CFBF :                                             ;INC emu_ptr,X                  ;6
(1) 1105/    CFBF :                                             ;BCC .skip                              ;2
(1) 1105/    CFBF :                                             ;       INC emu_ptr+1,X         ;6
(1) 1105/    CFBF :                                             ;.skip:
(1) 1105/    CFBF :                                             ;LDA (emu_ptr,X)                ;6
(1) 1105/    CFBF :                                             ;STA emu_ptr2+1,X               ;4
(1) 1105/    CFBF :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1105/    CFBF :                                             
(1) 1105/    CFBF :                                             ;Method 2 - 46 cycles
(1) 1105/    CFBF :                                             ;Jump table must be page aligned!!!
(1) 1105/    CFBF :                                             ;LDA (emu_PC,X)                 ;6
(1) 1105/    CFBF :                                             ;STZ emu_ptr+1,X                ;4
(1) 1105/    CFBF :                                             ;ASL                                    ;2
(1) 1105/    CFBF :                                             ;ROL emu_ptr+1,X                ;6
(1) 1105/    CFBF :                                             ;ASL                                    ;2
(1) 1105/    CFBF :                                             ;ROL emu_ptr+1,X                ;6
(1) 1105/    CFBF :                                             ;STA emu_ptr,X                  ;4                              
(1) 1105/    CFBF :                                             ;LDA emu_ptr+1,X                ;4
(1) 1105/    CFBF :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1105/    CFBF :                                             ;STA emu_ptr+1,X                ;4
(1) 1105/    CFBF :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1105/    CFBF :                                             
(1) 1105/    CFBF :                                             ;Method 3 - 30 cycles
(1) 1105/    CFBF :                                             ;TXA                                                    ;2
(1) 1105/    CFBF :                                             ;TAY                                                    ;2
(1) 1105/    CFBF :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1105/    CFBF :                                             ;ASL                                                    ;2
(1) 1105/    CFBF :                                             ;BCS upper                                              ;2
(1) 1105/    CFBF :                                             ;lower:
(1) 1105/    CFBF :                                             ;       ASL                                                     ;2
(1) 1105/    CFBF :                                             ;       TAX                                                     ;2
(1) 1105/    CFBF :                                             ;       BCS upper_lower                         ;2
(1) 1105/    CFBF :                                             ;       lower_lower:
(1) 1105/    CFBF :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1105/    CFBF :                                             ;       upper_lower:
(1) 1105/    CFBF :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1105/    CFBF :                                             ;upper:
(1) 1105/    CFBF :                                             ;       ASL
(1) 1105/    CFBF :                                             ;       TAX
(1) 1105/    CFBF :                                             ;       BCS upper_upper
(1) 1105/    CFBF :                                             ;       lower_upper:
(1) 1105/    CFBF :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1105/    CFBF :                                             ;       upper_upper:
(1) 1105/    CFBF :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1105/    CFBF :                                             ;After jump:
(1) 1105/    CFBF :                                             ;TYA                                                    ;2
(1) 1105/    CFBF :                                             ;TAX                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 327 - 1/5/2022 11:50:53


(1) 1105/    CFBF :                                             
(1) 1105/    CFBF :                                             ;Method 4 - 28 cycles
(1) 1105/    CFBF :                                             ;LDA (emu_PC,X)                 ;6
(1) 1105/    CFBF :                                             ;TAY                                    ;2
(1) 1105/    CFBF :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1105/    CFBF :                                             ;PHA                                    ;3
(1) 1105/    CFBF :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1105/    CFBF :                                             ;PHA                                    ;3
(1) 1105/    CFBF :                                             ;RTS                                    ;6
(1) 1105/    CFBF :                                             
(1) 1105/    CFBF :                                             ;Method 5 - 30 cycles
(1) 1105/    CFBF : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1105/    CFC1 : A8                                          TAY                                             ;2
(1) 1105/    CFC2 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1105/    CFC5 : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1105/    CFC7 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1105/    CFCA : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1105/    CFCC : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1105/    CFCF :                                                                     
(1) 1106/    CFCF :                     
(1) 1107/    CFCF :                     	;0xDD - CMP ABSX
(1) 1108/    CFCF :                     	CMP_ABSX:
(1) 1109/    CFCF : (MACRO)             		OP_MACRO 221, "CMP", "ABSX", "CMP_ABSX"
(1) 1109/    CFCF :                                             ;TODO
(1) 1110/    CFCF : (MACRO)             		NEXT_MACRO
(1) 1110/    CFCF :                                             
(1) 1110/    CFCF :  (MACRO-2)                                  halt
(1) 1110/    CFCF : 00                                  BRK
(1) 1110/    CFD0 : 00                                  BRK
(1) 1110/    CFD1 :                                             
(1) 1110/    CFD1 :                                             ;Method 1 - 60 cycles
(1) 1110/    CFD1 :                                             ;Jump table must be page aligned!!!
(1) 1110/    CFD1 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1110/    CFD1 :                                             ;ASL                                    ;2
(1) 1110/    CFD1 :                                             ;STA emu_ptr,X                  ;4
(1) 1110/    CFD1 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1110/    CFD1 :                                             ;ADC #0                                 ;2
(1) 1110/    CFD1 :                                             ;STA emu_ptr+1,X                ;4
(1) 1110/    CFD1 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1110/    CFD1 :                                             ;STA emu_ptr2,X                 ;4
(1) 1110/    CFD1 :                                             ;INC emu_ptr,X                  ;6
(1) 1110/    CFD1 :                                             ;BCC .skip                              ;2
(1) 1110/    CFD1 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1110/    CFD1 :                                             ;.skip:
(1) 1110/    CFD1 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1110/    CFD1 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1110/    CFD1 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1110/    CFD1 :                                             
(1) 1110/    CFD1 :                                             ;Method 2 - 46 cycles
(1) 1110/    CFD1 :                                             ;Jump table must be page aligned!!!
(1) 1110/    CFD1 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1110/    CFD1 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1110/    CFD1 :                                             ;ASL                                    ;2
(1) 1110/    CFD1 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1110/    CFD1 :                                             ;ASL                                    ;2
(1) 1110/    CFD1 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1110/    CFD1 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1110/    CFD1 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1110/    CFD1 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1110/    CFD1 :                                             ;STA emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 328 - 1/5/2022 11:50:53


(1) 1110/    CFD1 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1110/    CFD1 :                                             
(1) 1110/    CFD1 :                                             ;Method 3 - 30 cycles
(1) 1110/    CFD1 :                                             ;TXA                                                    ;2
(1) 1110/    CFD1 :                                             ;TAY                                                    ;2
(1) 1110/    CFD1 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1110/    CFD1 :                                             ;ASL                                                    ;2
(1) 1110/    CFD1 :                                             ;BCS upper                                              ;2
(1) 1110/    CFD1 :                                             ;lower:
(1) 1110/    CFD1 :                                             ;       ASL                                                     ;2
(1) 1110/    CFD1 :                                             ;       TAX                                                     ;2
(1) 1110/    CFD1 :                                             ;       BCS upper_lower                         ;2
(1) 1110/    CFD1 :                                             ;       lower_lower:
(1) 1110/    CFD1 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1110/    CFD1 :                                             ;       upper_lower:
(1) 1110/    CFD1 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1110/    CFD1 :                                             ;upper:
(1) 1110/    CFD1 :                                             ;       ASL
(1) 1110/    CFD1 :                                             ;       TAX
(1) 1110/    CFD1 :                                             ;       BCS upper_upper
(1) 1110/    CFD1 :                                             ;       lower_upper:
(1) 1110/    CFD1 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1110/    CFD1 :                                             ;       upper_upper:
(1) 1110/    CFD1 :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1110/    CFD1 :                                             ;After jump:
(1) 1110/    CFD1 :                                             ;TYA                                                    ;2
(1) 1110/    CFD1 :                                             ;TAX                                                    ;2
(1) 1110/    CFD1 :                                             
(1) 1110/    CFD1 :                                             ;Method 4 - 28 cycles
(1) 1110/    CFD1 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1110/    CFD1 :                                             ;TAY                                    ;2
(1) 1110/    CFD1 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1110/    CFD1 :                                             ;PHA                                    ;3
(1) 1110/    CFD1 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1110/    CFD1 :                                             ;PHA                                    ;3
(1) 1110/    CFD1 :                                             ;RTS                                    ;6
(1) 1110/    CFD1 :                                             
(1) 1110/    CFD1 :                                             ;Method 5 - 30 cycles
(1) 1110/    CFD1 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1110/    CFD3 : A8                                          TAY                                             ;2
(1) 1110/    CFD4 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1110/    CFD7 : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1110/    CFD9 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1110/    CFDC : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1110/    CFDE : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1110/    CFE1 :                                                                     
(1) 1111/    CFE1 :                     
(1) 1112/    CFE1 :                     	;0xDE - DEC ABSX
(1) 1113/    CFE1 :                     	DEC_ABSX:
(1) 1114/    CFE1 : (MACRO)             		OP_MACRO 222, "DEC", "ABSX", "DEC_ABSX"
(1) 1114/    CFE1 :                                             ;TODO
(1) 1115/    CFE1 : (MACRO)             		NEXT_MACRO
(1) 1115/    CFE1 :                                             
(1) 1115/    CFE1 :  (MACRO-2)                                  halt
(1) 1115/    CFE1 : 00                                  BRK
(1) 1115/    CFE2 : 00                                  BRK
(1) 1115/    CFE3 :                                             
(1) 1115/    CFE3 :                                             ;Method 1 - 60 cycles
(1) 1115/    CFE3 :                                             ;Jump table must be page aligned!!!
(1) 1115/    CFE3 :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 329 - 1/5/2022 11:50:53


(1) 1115/    CFE3 :                                             ;ASL                                    ;2
(1) 1115/    CFE3 :                                             ;STA emu_ptr,X                  ;4
(1) 1115/    CFE3 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1115/    CFE3 :                                             ;ADC #0                                 ;2
(1) 1115/    CFE3 :                                             ;STA emu_ptr+1,X                ;4
(1) 1115/    CFE3 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1115/    CFE3 :                                             ;STA emu_ptr2,X                 ;4
(1) 1115/    CFE3 :                                             ;INC emu_ptr,X                  ;6
(1) 1115/    CFE3 :                                             ;BCC .skip                              ;2
(1) 1115/    CFE3 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1115/    CFE3 :                                             ;.skip:
(1) 1115/    CFE3 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1115/    CFE3 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1115/    CFE3 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1115/    CFE3 :                                             
(1) 1115/    CFE3 :                                             ;Method 2 - 46 cycles
(1) 1115/    CFE3 :                                             ;Jump table must be page aligned!!!
(1) 1115/    CFE3 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1115/    CFE3 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1115/    CFE3 :                                             ;ASL                                    ;2
(1) 1115/    CFE3 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1115/    CFE3 :                                             ;ASL                                    ;2
(1) 1115/    CFE3 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1115/    CFE3 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1115/    CFE3 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1115/    CFE3 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1115/    CFE3 :                                             ;STA emu_ptr+1,X                ;4
(1) 1115/    CFE3 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1115/    CFE3 :                                             
(1) 1115/    CFE3 :                                             ;Method 3 - 30 cycles
(1) 1115/    CFE3 :                                             ;TXA                                                    ;2
(1) 1115/    CFE3 :                                             ;TAY                                                    ;2
(1) 1115/    CFE3 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1115/    CFE3 :                                             ;ASL                                                    ;2
(1) 1115/    CFE3 :                                             ;BCS upper                                              ;2
(1) 1115/    CFE3 :                                             ;lower:
(1) 1115/    CFE3 :                                             ;       ASL                                                     ;2
(1) 1115/    CFE3 :                                             ;       TAX                                                     ;2
(1) 1115/    CFE3 :                                             ;       BCS upper_lower                         ;2
(1) 1115/    CFE3 :                                             ;       lower_lower:
(1) 1115/    CFE3 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1115/    CFE3 :                                             ;       upper_lower:
(1) 1115/    CFE3 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1115/    CFE3 :                                             ;upper:
(1) 1115/    CFE3 :                                             ;       ASL
(1) 1115/    CFE3 :                                             ;       TAX
(1) 1115/    CFE3 :                                             ;       BCS upper_upper
(1) 1115/    CFE3 :                                             ;       lower_upper:
(1) 1115/    CFE3 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1115/    CFE3 :                                             ;       upper_upper:
(1) 1115/    CFE3 :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1115/    CFE3 :                                             ;After jump:
(1) 1115/    CFE3 :                                             ;TYA                                                    ;2
(1) 1115/    CFE3 :                                             ;TAX                                                    ;2
(1) 1115/    CFE3 :                                             
(1) 1115/    CFE3 :                                             ;Method 4 - 28 cycles
(1) 1115/    CFE3 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1115/    CFE3 :                                             ;TAY                                    ;2
(1) 1115/    CFE3 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1115/    CFE3 :                                             ;PHA                                    ;3
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 330 - 1/5/2022 11:50:53


(1) 1115/    CFE3 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1115/    CFE3 :                                             ;PHA                                    ;3
(1) 1115/    CFE3 :                                             ;RTS                                    ;6
(1) 1115/    CFE3 :                                             
(1) 1115/    CFE3 :                                             ;Method 5 - 30 cycles
(1) 1115/    CFE3 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1115/    CFE5 : A8                                          TAY                                             ;2
(1) 1115/    CFE6 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1115/    CFE9 : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1115/    CFEB : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1115/    CFEE : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1115/    CFF0 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1115/    CFF3 :                                                                     
(1) 1116/    CFF3 :                     
(1) 1117/    CFF3 :                     	;0xDF - NOP
(1) 1118/    CFF3 :                     	NOP_0xDF:
(1) 1119/    CFF3 : (MACRO)             		OP_MACRO 223, "NOP", "IMP", "NOP_0xDF"
(1) 1119/    CFF3 :                                             ;TODO
(1) 1120/    CFF3 : (MACRO)             		NEXT_MACRO
(1) 1120/    CFF3 :                                             
(1) 1120/    CFF3 :  (MACRO-2)                                  halt
(1) 1120/    CFF3 : 00                                  BRK
(1) 1120/    CFF4 : 00                                  BRK
(1) 1120/    CFF5 :                                             
(1) 1120/    CFF5 :                                             ;Method 1 - 60 cycles
(1) 1120/    CFF5 :                                             ;Jump table must be page aligned!!!
(1) 1120/    CFF5 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1120/    CFF5 :                                             ;ASL                                    ;2
(1) 1120/    CFF5 :                                             ;STA emu_ptr,X                  ;4
(1) 1120/    CFF5 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1120/    CFF5 :                                             ;ADC #0                                 ;2
(1) 1120/    CFF5 :                                             ;STA emu_ptr+1,X                ;4
(1) 1120/    CFF5 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1120/    CFF5 :                                             ;STA emu_ptr2,X                 ;4
(1) 1120/    CFF5 :                                             ;INC emu_ptr,X                  ;6
(1) 1120/    CFF5 :                                             ;BCC .skip                              ;2
(1) 1120/    CFF5 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1120/    CFF5 :                                             ;.skip:
(1) 1120/    CFF5 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1120/    CFF5 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1120/    CFF5 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1120/    CFF5 :                                             
(1) 1120/    CFF5 :                                             ;Method 2 - 46 cycles
(1) 1120/    CFF5 :                                             ;Jump table must be page aligned!!!
(1) 1120/    CFF5 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1120/    CFF5 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1120/    CFF5 :                                             ;ASL                                    ;2
(1) 1120/    CFF5 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1120/    CFF5 :                                             ;ASL                                    ;2
(1) 1120/    CFF5 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1120/    CFF5 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1120/    CFF5 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1120/    CFF5 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1120/    CFF5 :                                             ;STA emu_ptr+1,X                ;4
(1) 1120/    CFF5 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1120/    CFF5 :                                             
(1) 1120/    CFF5 :                                             ;Method 3 - 30 cycles
(1) 1120/    CFF5 :                                             ;TXA                                                    ;2
(1) 1120/    CFF5 :                                             ;TAY                                                    ;2
(1) 1120/    CFF5 :                                             ;LDA (emu_PC,X)                                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 331 - 1/5/2022 11:50:53


(1) 1120/    CFF5 :                                             ;ASL                                                    ;2
(1) 1120/    CFF5 :                                             ;BCS upper                                              ;2
(1) 1120/    CFF5 :                                             ;lower:
(1) 1120/    CFF5 :                                             ;       ASL                                                     ;2
(1) 1120/    CFF5 :                                             ;       TAX                                                     ;2
(1) 1120/    CFF5 :                                             ;       BCS upper_lower                         ;2
(1) 1120/    CFF5 :                                             ;       lower_lower:
(1) 1120/    CFF5 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1120/    CFF5 :                                             ;       upper_lower:
(1) 1120/    CFF5 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1120/    CFF5 :                                             ;upper:
(1) 1120/    CFF5 :                                             ;       ASL
(1) 1120/    CFF5 :                                             ;       TAX
(1) 1120/    CFF5 :                                             ;       BCS upper_upper
(1) 1120/    CFF5 :                                             ;       lower_upper:
(1) 1120/    CFF5 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1120/    CFF5 :                                             ;       upper_upper:
(1) 1120/    CFF5 :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1120/    CFF5 :                                             ;After jump:
(1) 1120/    CFF5 :                                             ;TYA                                                    ;2
(1) 1120/    CFF5 :                                             ;TAX                                                    ;2
(1) 1120/    CFF5 :                                             
(1) 1120/    CFF5 :                                             ;Method 4 - 28 cycles
(1) 1120/    CFF5 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1120/    CFF5 :                                             ;TAY                                    ;2
(1) 1120/    CFF5 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1120/    CFF5 :                                             ;PHA                                    ;3
(1) 1120/    CFF5 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1120/    CFF5 :                                             ;PHA                                    ;3
(1) 1120/    CFF5 :                                             ;RTS                                    ;6
(1) 1120/    CFF5 :                                             
(1) 1120/    CFF5 :                                             ;Method 5 - 30 cycles
(1) 1120/    CFF5 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1120/    CFF7 : A8                                          TAY                                             ;2
(1) 1120/    CFF8 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1120/    CFFB : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1120/    CFFD : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1120/    D000 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1120/    D002 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1120/    D005 :                                                                     
(1) 1121/    D005 :                     
(1) 1122/    D005 :                     	;0xE0 - CPX IMMED
(1) 1123/    D005 :                     	CPX_IMMED:
(1) 1124/    D005 : (MACRO)             		OP_MACRO 224, "CPX", "IMMED", "CPX_IMMED"
(1) 1124/    D005 :                                             ;TODO
(1) 1125/    D005 : (MACRO)             		NEXT_MACRO
(1) 1125/    D005 :                                             
(1) 1125/    D005 :  (MACRO-2)                                  halt
(1) 1125/    D005 : 00                                  BRK
(1) 1125/    D006 : 00                                  BRK
(1) 1125/    D007 :                                             
(1) 1125/    D007 :                                             ;Method 1 - 60 cycles
(1) 1125/    D007 :                                             ;Jump table must be page aligned!!!
(1) 1125/    D007 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1125/    D007 :                                             ;ASL                                    ;2
(1) 1125/    D007 :                                             ;STA emu_ptr,X                  ;4
(1) 1125/    D007 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1125/    D007 :                                             ;ADC #0                                 ;2
(1) 1125/    D007 :                                             ;STA emu_ptr+1,X                ;4
(1) 1125/    D007 :                                             ;LDA (emu_ptr,X)                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 332 - 1/5/2022 11:50:53


(1) 1125/    D007 :                                             ;STA emu_ptr2,X                 ;4
(1) 1125/    D007 :                                             ;INC emu_ptr,X                  ;6
(1) 1125/    D007 :                                             ;BCC .skip                              ;2
(1) 1125/    D007 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1125/    D007 :                                             ;.skip:
(1) 1125/    D007 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1125/    D007 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1125/    D007 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1125/    D007 :                                             
(1) 1125/    D007 :                                             ;Method 2 - 46 cycles
(1) 1125/    D007 :                                             ;Jump table must be page aligned!!!
(1) 1125/    D007 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1125/    D007 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1125/    D007 :                                             ;ASL                                    ;2
(1) 1125/    D007 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1125/    D007 :                                             ;ASL                                    ;2
(1) 1125/    D007 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1125/    D007 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1125/    D007 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1125/    D007 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1125/    D007 :                                             ;STA emu_ptr+1,X                ;4
(1) 1125/    D007 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1125/    D007 :                                             
(1) 1125/    D007 :                                             ;Method 3 - 30 cycles
(1) 1125/    D007 :                                             ;TXA                                                    ;2
(1) 1125/    D007 :                                             ;TAY                                                    ;2
(1) 1125/    D007 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1125/    D007 :                                             ;ASL                                                    ;2
(1) 1125/    D007 :                                             ;BCS upper                                              ;2
(1) 1125/    D007 :                                             ;lower:
(1) 1125/    D007 :                                             ;       ASL                                                     ;2
(1) 1125/    D007 :                                             ;       TAX                                                     ;2
(1) 1125/    D007 :                                             ;       BCS upper_lower                         ;2
(1) 1125/    D007 :                                             ;       lower_lower:
(1) 1125/    D007 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1125/    D007 :                                             ;       upper_lower:
(1) 1125/    D007 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1125/    D007 :                                             ;upper:
(1) 1125/    D007 :                                             ;       ASL
(1) 1125/    D007 :                                             ;       TAX
(1) 1125/    D007 :                                             ;       BCS upper_upper
(1) 1125/    D007 :                                             ;       lower_upper:
(1) 1125/    D007 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1125/    D007 :                                             ;       upper_upper:
(1) 1125/    D007 :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1125/    D007 :                                             ;After jump:
(1) 1125/    D007 :                                             ;TYA                                                    ;2
(1) 1125/    D007 :                                             ;TAX                                                    ;2
(1) 1125/    D007 :                                             
(1) 1125/    D007 :                                             ;Method 4 - 28 cycles
(1) 1125/    D007 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1125/    D007 :                                             ;TAY                                    ;2
(1) 1125/    D007 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1125/    D007 :                                             ;PHA                                    ;3
(1) 1125/    D007 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1125/    D007 :                                             ;PHA                                    ;3
(1) 1125/    D007 :                                             ;RTS                                    ;6
(1) 1125/    D007 :                                             
(1) 1125/    D007 :                                             ;Method 5 - 30 cycles
(1) 1125/    D007 : A1 02                                       LDA (emu_PC,X)                  ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 333 - 1/5/2022 11:50:53


(1) 1125/    D009 : A8                                          TAY                                             ;2
(1) 1125/    D00A : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1125/    D00D : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1125/    D00F : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1125/    D012 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1125/    D014 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1125/    D017 :                                                                     
(1) 1126/    D017 :                     
(1) 1127/    D017 :                     	;0xE1 - SBC IX
(1) 1128/    D017 :                     	SBC_IX:
(1) 1129/    D017 : (MACRO)             		OP_MACRO 225, "SBC", "IX", "SBC_IX"
(1) 1129/    D017 :                                             ;TODO
(1) 1130/    D017 : (MACRO)             		NEXT_MACRO
(1) 1130/    D017 :                                             
(1) 1130/    D017 :  (MACRO-2)                                  halt
(1) 1130/    D017 : 00                                  BRK
(1) 1130/    D018 : 00                                  BRK
(1) 1130/    D019 :                                             
(1) 1130/    D019 :                                             ;Method 1 - 60 cycles
(1) 1130/    D019 :                                             ;Jump table must be page aligned!!!
(1) 1130/    D019 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1130/    D019 :                                             ;ASL                                    ;2
(1) 1130/    D019 :                                             ;STA emu_ptr,X                  ;4
(1) 1130/    D019 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1130/    D019 :                                             ;ADC #0                                 ;2
(1) 1130/    D019 :                                             ;STA emu_ptr+1,X                ;4
(1) 1130/    D019 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1130/    D019 :                                             ;STA emu_ptr2,X                 ;4
(1) 1130/    D019 :                                             ;INC emu_ptr,X                  ;6
(1) 1130/    D019 :                                             ;BCC .skip                              ;2
(1) 1130/    D019 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1130/    D019 :                                             ;.skip:
(1) 1130/    D019 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1130/    D019 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1130/    D019 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1130/    D019 :                                             
(1) 1130/    D019 :                                             ;Method 2 - 46 cycles
(1) 1130/    D019 :                                             ;Jump table must be page aligned!!!
(1) 1130/    D019 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1130/    D019 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1130/    D019 :                                             ;ASL                                    ;2
(1) 1130/    D019 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1130/    D019 :                                             ;ASL                                    ;2
(1) 1130/    D019 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1130/    D019 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1130/    D019 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1130/    D019 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1130/    D019 :                                             ;STA emu_ptr+1,X                ;4
(1) 1130/    D019 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1130/    D019 :                                             
(1) 1130/    D019 :                                             ;Method 3 - 30 cycles
(1) 1130/    D019 :                                             ;TXA                                                    ;2
(1) 1130/    D019 :                                             ;TAY                                                    ;2
(1) 1130/    D019 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1130/    D019 :                                             ;ASL                                                    ;2
(1) 1130/    D019 :                                             ;BCS upper                                              ;2
(1) 1130/    D019 :                                             ;lower:
(1) 1130/    D019 :                                             ;       ASL                                                     ;2
(1) 1130/    D019 :                                             ;       TAX                                                     ;2
(1) 1130/    D019 :                                             ;       BCS upper_lower                         ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 334 - 1/5/2022 11:50:53


(1) 1130/    D019 :                                             ;       lower_lower:
(1) 1130/    D019 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1130/    D019 :                                             ;       upper_lower:
(1) 1130/    D019 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1130/    D019 :                                             ;upper:
(1) 1130/    D019 :                                             ;       ASL
(1) 1130/    D019 :                                             ;       TAX
(1) 1130/    D019 :                                             ;       BCS upper_upper
(1) 1130/    D019 :                                             ;       lower_upper:
(1) 1130/    D019 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1130/    D019 :                                             ;       upper_upper:
(1) 1130/    D019 :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1130/    D019 :                                             ;After jump:
(1) 1130/    D019 :                                             ;TYA                                                    ;2
(1) 1130/    D019 :                                             ;TAX                                                    ;2
(1) 1130/    D019 :                                             
(1) 1130/    D019 :                                             ;Method 4 - 28 cycles
(1) 1130/    D019 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1130/    D019 :                                             ;TAY                                    ;2
(1) 1130/    D019 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1130/    D019 :                                             ;PHA                                    ;3
(1) 1130/    D019 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1130/    D019 :                                             ;PHA                                    ;3
(1) 1130/    D019 :                                             ;RTS                                    ;6
(1) 1130/    D019 :                                             
(1) 1130/    D019 :                                             ;Method 5 - 30 cycles
(1) 1130/    D019 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1130/    D01B : A8                                          TAY                                             ;2
(1) 1130/    D01C : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1130/    D01F : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1130/    D021 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1130/    D024 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1130/    D026 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1130/    D029 :                                                                     
(1) 1131/    D029 :                     
(1) 1132/    D029 :                     	;0xE2 - NOP
(1) 1133/    D029 :                     	NOP_0xE2:
(1) 1134/    D029 : (MACRO)             		OP_MACRO 226, "NOP", "IMP", "NOP_0xE2"
(1) 1134/    D029 :                                             ;TODO
(1) 1135/    D029 : (MACRO)             		NEXT_MACRO
(1) 1135/    D029 :                                             
(1) 1135/    D029 :  (MACRO-2)                                  halt
(1) 1135/    D029 : 00                                  BRK
(1) 1135/    D02A : 00                                  BRK
(1) 1135/    D02B :                                             
(1) 1135/    D02B :                                             ;Method 1 - 60 cycles
(1) 1135/    D02B :                                             ;Jump table must be page aligned!!!
(1) 1135/    D02B :                                             ;LDA (emu_PC,X)                 ;6
(1) 1135/    D02B :                                             ;ASL                                    ;2
(1) 1135/    D02B :                                             ;STA emu_ptr,X                  ;4
(1) 1135/    D02B :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1135/    D02B :                                             ;ADC #0                                 ;2
(1) 1135/    D02B :                                             ;STA emu_ptr+1,X                ;4
(1) 1135/    D02B :                                             ;LDA (emu_ptr,X)                ;6
(1) 1135/    D02B :                                             ;STA emu_ptr2,X                 ;4
(1) 1135/    D02B :                                             ;INC emu_ptr,X                  ;6
(1) 1135/    D02B :                                             ;BCC .skip                              ;2
(1) 1135/    D02B :                                             ;       INC emu_ptr+1,X         ;6
(1) 1135/    D02B :                                             ;.skip:
(1) 1135/    D02B :                                             ;LDA (emu_ptr,X)                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 335 - 1/5/2022 11:50:53


(1) 1135/    D02B :                                             ;STA emu_ptr2+1,X               ;4
(1) 1135/    D02B :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1135/    D02B :                                             
(1) 1135/    D02B :                                             ;Method 2 - 46 cycles
(1) 1135/    D02B :                                             ;Jump table must be page aligned!!!
(1) 1135/    D02B :                                             ;LDA (emu_PC,X)                 ;6
(1) 1135/    D02B :                                             ;STZ emu_ptr+1,X                ;4
(1) 1135/    D02B :                                             ;ASL                                    ;2
(1) 1135/    D02B :                                             ;ROL emu_ptr+1,X                ;6
(1) 1135/    D02B :                                             ;ASL                                    ;2
(1) 1135/    D02B :                                             ;ROL emu_ptr+1,X                ;6
(1) 1135/    D02B :                                             ;STA emu_ptr,X                  ;4                              
(1) 1135/    D02B :                                             ;LDA emu_ptr+1,X                ;4
(1) 1135/    D02B :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1135/    D02B :                                             ;STA emu_ptr+1,X                ;4
(1) 1135/    D02B :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1135/    D02B :                                             
(1) 1135/    D02B :                                             ;Method 3 - 30 cycles
(1) 1135/    D02B :                                             ;TXA                                                    ;2
(1) 1135/    D02B :                                             ;TAY                                                    ;2
(1) 1135/    D02B :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1135/    D02B :                                             ;ASL                                                    ;2
(1) 1135/    D02B :                                             ;BCS upper                                              ;2
(1) 1135/    D02B :                                             ;lower:
(1) 1135/    D02B :                                             ;       ASL                                                     ;2
(1) 1135/    D02B :                                             ;       TAX                                                     ;2
(1) 1135/    D02B :                                             ;       BCS upper_lower                         ;2
(1) 1135/    D02B :                                             ;       lower_lower:
(1) 1135/    D02B :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1135/    D02B :                                             ;       upper_lower:
(1) 1135/    D02B :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1135/    D02B :                                             ;upper:
(1) 1135/    D02B :                                             ;       ASL
(1) 1135/    D02B :                                             ;       TAX
(1) 1135/    D02B :                                             ;       BCS upper_upper
(1) 1135/    D02B :                                             ;       lower_upper:
(1) 1135/    D02B :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1135/    D02B :                                             ;       upper_upper:
(1) 1135/    D02B :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1135/    D02B :                                             ;After jump:
(1) 1135/    D02B :                                             ;TYA                                                    ;2
(1) 1135/    D02B :                                             ;TAX                                                    ;2
(1) 1135/    D02B :                                             
(1) 1135/    D02B :                                             ;Method 4 - 28 cycles
(1) 1135/    D02B :                                             ;LDA (emu_PC,X)                 ;6
(1) 1135/    D02B :                                             ;TAY                                    ;2
(1) 1135/    D02B :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1135/    D02B :                                             ;PHA                                    ;3
(1) 1135/    D02B :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1135/    D02B :                                             ;PHA                                    ;3
(1) 1135/    D02B :                                             ;RTS                                    ;6
(1) 1135/    D02B :                                             
(1) 1135/    D02B :                                             ;Method 5 - 30 cycles
(1) 1135/    D02B : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1135/    D02D : A8                                          TAY                                             ;2
(1) 1135/    D02E : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1135/    D031 : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1135/    D033 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1135/    D036 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1135/    D038 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 336 - 1/5/2022 11:50:53


(1) 1135/    D03B :                                                                     
(1) 1136/    D03B :                     
(1) 1137/    D03B :                     	;0xE3 - NOP
(1) 1138/    D03B :                     	NOP_0xE3:
(1) 1139/    D03B : (MACRO)             		OP_MACRO 227, "NOP", "IMP", "NOP_0xE3"
(1) 1139/    D03B :                                             ;TODO
(1) 1140/    D03B : (MACRO)             		NEXT_MACRO
(1) 1140/    D03B :                                             
(1) 1140/    D03B :  (MACRO-2)                                  halt
(1) 1140/    D03B : 00                                  BRK
(1) 1140/    D03C : 00                                  BRK
(1) 1140/    D03D :                                             
(1) 1140/    D03D :                                             ;Method 1 - 60 cycles
(1) 1140/    D03D :                                             ;Jump table must be page aligned!!!
(1) 1140/    D03D :                                             ;LDA (emu_PC,X)                 ;6
(1) 1140/    D03D :                                             ;ASL                                    ;2
(1) 1140/    D03D :                                             ;STA emu_ptr,X                  ;4
(1) 1140/    D03D :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1140/    D03D :                                             ;ADC #0                                 ;2
(1) 1140/    D03D :                                             ;STA emu_ptr+1,X                ;4
(1) 1140/    D03D :                                             ;LDA (emu_ptr,X)                ;6
(1) 1140/    D03D :                                             ;STA emu_ptr2,X                 ;4
(1) 1140/    D03D :                                             ;INC emu_ptr,X                  ;6
(1) 1140/    D03D :                                             ;BCC .skip                              ;2
(1) 1140/    D03D :                                             ;       INC emu_ptr+1,X         ;6
(1) 1140/    D03D :                                             ;.skip:
(1) 1140/    D03D :                                             ;LDA (emu_ptr,X)                ;6
(1) 1140/    D03D :                                             ;STA emu_ptr2+1,X               ;4
(1) 1140/    D03D :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1140/    D03D :                                             
(1) 1140/    D03D :                                             ;Method 2 - 46 cycles
(1) 1140/    D03D :                                             ;Jump table must be page aligned!!!
(1) 1140/    D03D :                                             ;LDA (emu_PC,X)                 ;6
(1) 1140/    D03D :                                             ;STZ emu_ptr+1,X                ;4
(1) 1140/    D03D :                                             ;ASL                                    ;2
(1) 1140/    D03D :                                             ;ROL emu_ptr+1,X                ;6
(1) 1140/    D03D :                                             ;ASL                                    ;2
(1) 1140/    D03D :                                             ;ROL emu_ptr+1,X                ;6
(1) 1140/    D03D :                                             ;STA emu_ptr,X                  ;4                              
(1) 1140/    D03D :                                             ;LDA emu_ptr+1,X                ;4
(1) 1140/    D03D :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1140/    D03D :                                             ;STA emu_ptr+1,X                ;4
(1) 1140/    D03D :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1140/    D03D :                                             
(1) 1140/    D03D :                                             ;Method 3 - 30 cycles
(1) 1140/    D03D :                                             ;TXA                                                    ;2
(1) 1140/    D03D :                                             ;TAY                                                    ;2
(1) 1140/    D03D :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1140/    D03D :                                             ;ASL                                                    ;2
(1) 1140/    D03D :                                             ;BCS upper                                              ;2
(1) 1140/    D03D :                                             ;lower:
(1) 1140/    D03D :                                             ;       ASL                                                     ;2
(1) 1140/    D03D :                                             ;       TAX                                                     ;2
(1) 1140/    D03D :                                             ;       BCS upper_lower                         ;2
(1) 1140/    D03D :                                             ;       lower_lower:
(1) 1140/    D03D :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1140/    D03D :                                             ;       upper_lower:
(1) 1140/    D03D :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1140/    D03D :                                             ;upper:
(1) 1140/    D03D :                                             ;       ASL
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 337 - 1/5/2022 11:50:53


(1) 1140/    D03D :                                             ;       TAX
(1) 1140/    D03D :                                             ;       BCS upper_upper
(1) 1140/    D03D :                                             ;       lower_upper:
(1) 1140/    D03D :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1140/    D03D :                                             ;       upper_upper:
(1) 1140/    D03D :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1140/    D03D :                                             ;After jump:
(1) 1140/    D03D :                                             ;TYA                                                    ;2
(1) 1140/    D03D :                                             ;TAX                                                    ;2
(1) 1140/    D03D :                                             
(1) 1140/    D03D :                                             ;Method 4 - 28 cycles
(1) 1140/    D03D :                                             ;LDA (emu_PC,X)                 ;6
(1) 1140/    D03D :                                             ;TAY                                    ;2
(1) 1140/    D03D :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1140/    D03D :                                             ;PHA                                    ;3
(1) 1140/    D03D :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1140/    D03D :                                             ;PHA                                    ;3
(1) 1140/    D03D :                                             ;RTS                                    ;6
(1) 1140/    D03D :                                             
(1) 1140/    D03D :                                             ;Method 5 - 30 cycles
(1) 1140/    D03D : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1140/    D03F : A8                                          TAY                                             ;2
(1) 1140/    D040 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1140/    D043 : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1140/    D045 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1140/    D048 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1140/    D04A : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1140/    D04D :                                                                     
(1) 1141/    D04D :                     
(1) 1142/    D04D :                     	;0xE4 - CPX ZP
(1) 1143/    D04D :                     	CPX_ZP:
(1) 1144/    D04D : (MACRO)             		OP_MACRO 228, "CPX", "ZP", "CPX_ZP"
(1) 1144/    D04D :                                             ;TODO
(1) 1145/    D04D : (MACRO)             		NEXT_MACRO
(1) 1145/    D04D :                                             
(1) 1145/    D04D :  (MACRO-2)                                  halt
(1) 1145/    D04D : 00                                  BRK
(1) 1145/    D04E : 00                                  BRK
(1) 1145/    D04F :                                             
(1) 1145/    D04F :                                             ;Method 1 - 60 cycles
(1) 1145/    D04F :                                             ;Jump table must be page aligned!!!
(1) 1145/    D04F :                                             ;LDA (emu_PC,X)                 ;6
(1) 1145/    D04F :                                             ;ASL                                    ;2
(1) 1145/    D04F :                                             ;STA emu_ptr,X                  ;4
(1) 1145/    D04F :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1145/    D04F :                                             ;ADC #0                                 ;2
(1) 1145/    D04F :                                             ;STA emu_ptr+1,X                ;4
(1) 1145/    D04F :                                             ;LDA (emu_ptr,X)                ;6
(1) 1145/    D04F :                                             ;STA emu_ptr2,X                 ;4
(1) 1145/    D04F :                                             ;INC emu_ptr,X                  ;6
(1) 1145/    D04F :                                             ;BCC .skip                              ;2
(1) 1145/    D04F :                                             ;       INC emu_ptr+1,X         ;6
(1) 1145/    D04F :                                             ;.skip:
(1) 1145/    D04F :                                             ;LDA (emu_ptr,X)                ;6
(1) 1145/    D04F :                                             ;STA emu_ptr2+1,X               ;4
(1) 1145/    D04F :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1145/    D04F :                                             
(1) 1145/    D04F :                                             ;Method 2 - 46 cycles
(1) 1145/    D04F :                                             ;Jump table must be page aligned!!!
(1) 1145/    D04F :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 338 - 1/5/2022 11:50:53


(1) 1145/    D04F :                                             ;STZ emu_ptr+1,X                ;4
(1) 1145/    D04F :                                             ;ASL                                    ;2
(1) 1145/    D04F :                                             ;ROL emu_ptr+1,X                ;6
(1) 1145/    D04F :                                             ;ASL                                    ;2
(1) 1145/    D04F :                                             ;ROL emu_ptr+1,X                ;6
(1) 1145/    D04F :                                             ;STA emu_ptr,X                  ;4                              
(1) 1145/    D04F :                                             ;LDA emu_ptr+1,X                ;4
(1) 1145/    D04F :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1145/    D04F :                                             ;STA emu_ptr+1,X                ;4
(1) 1145/    D04F :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1145/    D04F :                                             
(1) 1145/    D04F :                                             ;Method 3 - 30 cycles
(1) 1145/    D04F :                                             ;TXA                                                    ;2
(1) 1145/    D04F :                                             ;TAY                                                    ;2
(1) 1145/    D04F :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1145/    D04F :                                             ;ASL                                                    ;2
(1) 1145/    D04F :                                             ;BCS upper                                              ;2
(1) 1145/    D04F :                                             ;lower:
(1) 1145/    D04F :                                             ;       ASL                                                     ;2
(1) 1145/    D04F :                                             ;       TAX                                                     ;2
(1) 1145/    D04F :                                             ;       BCS upper_lower                         ;2
(1) 1145/    D04F :                                             ;       lower_lower:
(1) 1145/    D04F :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1145/    D04F :                                             ;       upper_lower:
(1) 1145/    D04F :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1145/    D04F :                                             ;upper:
(1) 1145/    D04F :                                             ;       ASL
(1) 1145/    D04F :                                             ;       TAX
(1) 1145/    D04F :                                             ;       BCS upper_upper
(1) 1145/    D04F :                                             ;       lower_upper:
(1) 1145/    D04F :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1145/    D04F :                                             ;       upper_upper:
(1) 1145/    D04F :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1145/    D04F :                                             ;After jump:
(1) 1145/    D04F :                                             ;TYA                                                    ;2
(1) 1145/    D04F :                                             ;TAX                                                    ;2
(1) 1145/    D04F :                                             
(1) 1145/    D04F :                                             ;Method 4 - 28 cycles
(1) 1145/    D04F :                                             ;LDA (emu_PC,X)                 ;6
(1) 1145/    D04F :                                             ;TAY                                    ;2
(1) 1145/    D04F :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1145/    D04F :                                             ;PHA                                    ;3
(1) 1145/    D04F :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1145/    D04F :                                             ;PHA                                    ;3
(1) 1145/    D04F :                                             ;RTS                                    ;6
(1) 1145/    D04F :                                             
(1) 1145/    D04F :                                             ;Method 5 - 30 cycles
(1) 1145/    D04F : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1145/    D051 : A8                                          TAY                                             ;2
(1) 1145/    D052 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1145/    D055 : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1145/    D057 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1145/    D05A : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1145/    D05C : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1145/    D05F :                                                                     
(1) 1146/    D05F :                     
(1) 1147/    D05F :                     	;0xE5 - SBC ZP
(1) 1148/    D05F :                     	SBC_ZP:
(1) 1149/    D05F : (MACRO)             		OP_MACRO 229, "SBC", "ZP", "SBC_ZP"
(1) 1149/    D05F :                                             ;TODO
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 339 - 1/5/2022 11:50:53


(1) 1150/    D05F : (MACRO)             		NEXT_MACRO
(1) 1150/    D05F :                                             
(1) 1150/    D05F :  (MACRO-2)                                  halt
(1) 1150/    D05F : 00                                  BRK
(1) 1150/    D060 : 00                                  BRK
(1) 1150/    D061 :                                             
(1) 1150/    D061 :                                             ;Method 1 - 60 cycles
(1) 1150/    D061 :                                             ;Jump table must be page aligned!!!
(1) 1150/    D061 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1150/    D061 :                                             ;ASL                                    ;2
(1) 1150/    D061 :                                             ;STA emu_ptr,X                  ;4
(1) 1150/    D061 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1150/    D061 :                                             ;ADC #0                                 ;2
(1) 1150/    D061 :                                             ;STA emu_ptr+1,X                ;4
(1) 1150/    D061 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1150/    D061 :                                             ;STA emu_ptr2,X                 ;4
(1) 1150/    D061 :                                             ;INC emu_ptr,X                  ;6
(1) 1150/    D061 :                                             ;BCC .skip                              ;2
(1) 1150/    D061 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1150/    D061 :                                             ;.skip:
(1) 1150/    D061 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1150/    D061 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1150/    D061 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1150/    D061 :                                             
(1) 1150/    D061 :                                             ;Method 2 - 46 cycles
(1) 1150/    D061 :                                             ;Jump table must be page aligned!!!
(1) 1150/    D061 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1150/    D061 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1150/    D061 :                                             ;ASL                                    ;2
(1) 1150/    D061 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1150/    D061 :                                             ;ASL                                    ;2
(1) 1150/    D061 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1150/    D061 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1150/    D061 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1150/    D061 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1150/    D061 :                                             ;STA emu_ptr+1,X                ;4
(1) 1150/    D061 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1150/    D061 :                                             
(1) 1150/    D061 :                                             ;Method 3 - 30 cycles
(1) 1150/    D061 :                                             ;TXA                                                    ;2
(1) 1150/    D061 :                                             ;TAY                                                    ;2
(1) 1150/    D061 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1150/    D061 :                                             ;ASL                                                    ;2
(1) 1150/    D061 :                                             ;BCS upper                                              ;2
(1) 1150/    D061 :                                             ;lower:
(1) 1150/    D061 :                                             ;       ASL                                                     ;2
(1) 1150/    D061 :                                             ;       TAX                                                     ;2
(1) 1150/    D061 :                                             ;       BCS upper_lower                         ;2
(1) 1150/    D061 :                                             ;       lower_lower:
(1) 1150/    D061 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1150/    D061 :                                             ;       upper_lower:
(1) 1150/    D061 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1150/    D061 :                                             ;upper:
(1) 1150/    D061 :                                             ;       ASL
(1) 1150/    D061 :                                             ;       TAX
(1) 1150/    D061 :                                             ;       BCS upper_upper
(1) 1150/    D061 :                                             ;       lower_upper:
(1) 1150/    D061 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1150/    D061 :                                             ;       upper_upper:
(1) 1150/    D061 :                                             ;               JMP (JUMP_TABLE4,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 340 - 1/5/2022 11:50:53


(1) 1150/    D061 :                                             ;After jump:
(1) 1150/    D061 :                                             ;TYA                                                    ;2
(1) 1150/    D061 :                                             ;TAX                                                    ;2
(1) 1150/    D061 :                                             
(1) 1150/    D061 :                                             ;Method 4 - 28 cycles
(1) 1150/    D061 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1150/    D061 :                                             ;TAY                                    ;2
(1) 1150/    D061 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1150/    D061 :                                             ;PHA                                    ;3
(1) 1150/    D061 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1150/    D061 :                                             ;PHA                                    ;3
(1) 1150/    D061 :                                             ;RTS                                    ;6
(1) 1150/    D061 :                                             
(1) 1150/    D061 :                                             ;Method 5 - 30 cycles
(1) 1150/    D061 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1150/    D063 : A8                                          TAY                                             ;2
(1) 1150/    D064 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1150/    D067 : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1150/    D069 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1150/    D06C : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1150/    D06E : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1150/    D071 :                                                                     
(1) 1151/    D071 :                     
(1) 1152/    D071 :                     	;0xE6 - INC ZP
(1) 1153/    D071 :                     	INC_ZP:
(1) 1154/    D071 : (MACRO)             		OP_MACRO 230, "INC", "ZP", "INC_ZP"
(1) 1154/    D071 :                                             ;TODO
(1) 1155/    D071 : (MACRO)             		NEXT_MACRO
(1) 1155/    D071 :                                             
(1) 1155/    D071 :  (MACRO-2)                                  halt
(1) 1155/    D071 : 00                                  BRK
(1) 1155/    D072 : 00                                  BRK
(1) 1155/    D073 :                                             
(1) 1155/    D073 :                                             ;Method 1 - 60 cycles
(1) 1155/    D073 :                                             ;Jump table must be page aligned!!!
(1) 1155/    D073 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1155/    D073 :                                             ;ASL                                    ;2
(1) 1155/    D073 :                                             ;STA emu_ptr,X                  ;4
(1) 1155/    D073 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1155/    D073 :                                             ;ADC #0                                 ;2
(1) 1155/    D073 :                                             ;STA emu_ptr+1,X                ;4
(1) 1155/    D073 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1155/    D073 :                                             ;STA emu_ptr2,X                 ;4
(1) 1155/    D073 :                                             ;INC emu_ptr,X                  ;6
(1) 1155/    D073 :                                             ;BCC .skip                              ;2
(1) 1155/    D073 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1155/    D073 :                                             ;.skip:
(1) 1155/    D073 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1155/    D073 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1155/    D073 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1155/    D073 :                                             
(1) 1155/    D073 :                                             ;Method 2 - 46 cycles
(1) 1155/    D073 :                                             ;Jump table must be page aligned!!!
(1) 1155/    D073 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1155/    D073 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1155/    D073 :                                             ;ASL                                    ;2
(1) 1155/    D073 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1155/    D073 :                                             ;ASL                                    ;2
(1) 1155/    D073 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1155/    D073 :                                             ;STA emu_ptr,X                  ;4                              
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 341 - 1/5/2022 11:50:53


(1) 1155/    D073 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1155/    D073 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1155/    D073 :                                             ;STA emu_ptr+1,X                ;4
(1) 1155/    D073 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1155/    D073 :                                             
(1) 1155/    D073 :                                             ;Method 3 - 30 cycles
(1) 1155/    D073 :                                             ;TXA                                                    ;2
(1) 1155/    D073 :                                             ;TAY                                                    ;2
(1) 1155/    D073 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1155/    D073 :                                             ;ASL                                                    ;2
(1) 1155/    D073 :                                             ;BCS upper                                              ;2
(1) 1155/    D073 :                                             ;lower:
(1) 1155/    D073 :                                             ;       ASL                                                     ;2
(1) 1155/    D073 :                                             ;       TAX                                                     ;2
(1) 1155/    D073 :                                             ;       BCS upper_lower                         ;2
(1) 1155/    D073 :                                             ;       lower_lower:
(1) 1155/    D073 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1155/    D073 :                                             ;       upper_lower:
(1) 1155/    D073 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1155/    D073 :                                             ;upper:
(1) 1155/    D073 :                                             ;       ASL
(1) 1155/    D073 :                                             ;       TAX
(1) 1155/    D073 :                                             ;       BCS upper_upper
(1) 1155/    D073 :                                             ;       lower_upper:
(1) 1155/    D073 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1155/    D073 :                                             ;       upper_upper:
(1) 1155/    D073 :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1155/    D073 :                                             ;After jump:
(1) 1155/    D073 :                                             ;TYA                                                    ;2
(1) 1155/    D073 :                                             ;TAX                                                    ;2
(1) 1155/    D073 :                                             
(1) 1155/    D073 :                                             ;Method 4 - 28 cycles
(1) 1155/    D073 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1155/    D073 :                                             ;TAY                                    ;2
(1) 1155/    D073 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1155/    D073 :                                             ;PHA                                    ;3
(1) 1155/    D073 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1155/    D073 :                                             ;PHA                                    ;3
(1) 1155/    D073 :                                             ;RTS                                    ;6
(1) 1155/    D073 :                                             
(1) 1155/    D073 :                                             ;Method 5 - 30 cycles
(1) 1155/    D073 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1155/    D075 : A8                                          TAY                                             ;2
(1) 1155/    D076 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1155/    D079 : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1155/    D07B : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1155/    D07E : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1155/    D080 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1155/    D083 :                                                                     
(1) 1156/    D083 :                     
(1) 1157/    D083 :                     	;0xE7 - NOP
(1) 1158/    D083 :                     	NOP_0xE7:
(1) 1159/    D083 : (MACRO)             		OP_MACRO 231, "NOP", "IMP", "NOP_0xE7"
(1) 1159/    D083 :                                             ;TODO
(1) 1160/    D083 : (MACRO)             		NEXT_MACRO
(1) 1160/    D083 :                                             
(1) 1160/    D083 :  (MACRO-2)                                  halt
(1) 1160/    D083 : 00                                  BRK
(1) 1160/    D084 : 00                                  BRK
(1) 1160/    D085 :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 342 - 1/5/2022 11:50:53


(1) 1160/    D085 :                                             ;Method 1 - 60 cycles
(1) 1160/    D085 :                                             ;Jump table must be page aligned!!!
(1) 1160/    D085 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1160/    D085 :                                             ;ASL                                    ;2
(1) 1160/    D085 :                                             ;STA emu_ptr,X                  ;4
(1) 1160/    D085 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1160/    D085 :                                             ;ADC #0                                 ;2
(1) 1160/    D085 :                                             ;STA emu_ptr+1,X                ;4
(1) 1160/    D085 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1160/    D085 :                                             ;STA emu_ptr2,X                 ;4
(1) 1160/    D085 :                                             ;INC emu_ptr,X                  ;6
(1) 1160/    D085 :                                             ;BCC .skip                              ;2
(1) 1160/    D085 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1160/    D085 :                                             ;.skip:
(1) 1160/    D085 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1160/    D085 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1160/    D085 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1160/    D085 :                                             
(1) 1160/    D085 :                                             ;Method 2 - 46 cycles
(1) 1160/    D085 :                                             ;Jump table must be page aligned!!!
(1) 1160/    D085 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1160/    D085 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1160/    D085 :                                             ;ASL                                    ;2
(1) 1160/    D085 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1160/    D085 :                                             ;ASL                                    ;2
(1) 1160/    D085 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1160/    D085 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1160/    D085 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1160/    D085 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1160/    D085 :                                             ;STA emu_ptr+1,X                ;4
(1) 1160/    D085 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1160/    D085 :                                             
(1) 1160/    D085 :                                             ;Method 3 - 30 cycles
(1) 1160/    D085 :                                             ;TXA                                                    ;2
(1) 1160/    D085 :                                             ;TAY                                                    ;2
(1) 1160/    D085 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1160/    D085 :                                             ;ASL                                                    ;2
(1) 1160/    D085 :                                             ;BCS upper                                              ;2
(1) 1160/    D085 :                                             ;lower:
(1) 1160/    D085 :                                             ;       ASL                                                     ;2
(1) 1160/    D085 :                                             ;       TAX                                                     ;2
(1) 1160/    D085 :                                             ;       BCS upper_lower                         ;2
(1) 1160/    D085 :                                             ;       lower_lower:
(1) 1160/    D085 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1160/    D085 :                                             ;       upper_lower:
(1) 1160/    D085 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1160/    D085 :                                             ;upper:
(1) 1160/    D085 :                                             ;       ASL
(1) 1160/    D085 :                                             ;       TAX
(1) 1160/    D085 :                                             ;       BCS upper_upper
(1) 1160/    D085 :                                             ;       lower_upper:
(1) 1160/    D085 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1160/    D085 :                                             ;       upper_upper:
(1) 1160/    D085 :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1160/    D085 :                                             ;After jump:
(1) 1160/    D085 :                                             ;TYA                                                    ;2
(1) 1160/    D085 :                                             ;TAX                                                    ;2
(1) 1160/    D085 :                                             
(1) 1160/    D085 :                                             ;Method 4 - 28 cycles
(1) 1160/    D085 :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 343 - 1/5/2022 11:50:53


(1) 1160/    D085 :                                             ;TAY                                    ;2
(1) 1160/    D085 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1160/    D085 :                                             ;PHA                                    ;3
(1) 1160/    D085 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1160/    D085 :                                             ;PHA                                    ;3
(1) 1160/    D085 :                                             ;RTS                                    ;6
(1) 1160/    D085 :                                             
(1) 1160/    D085 :                                             ;Method 5 - 30 cycles
(1) 1160/    D085 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1160/    D087 : A8                                          TAY                                             ;2
(1) 1160/    D088 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1160/    D08B : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1160/    D08D : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1160/    D090 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1160/    D092 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1160/    D095 :                                                                     
(1) 1161/    D095 :                     
(1) 1162/    D095 :                     	;0xE8 - INX IMP
(1) 1163/    D095 :                     	INX_IMP:
(1) 1164/    D095 : (MACRO)             		OP_MACRO 232, "INX", "IMP", "INX_IMP"
(1) 1164/    D095 :                                             ;TODO
(1) 1165/    D095 : (MACRO)             		NEXT_MACRO
(1) 1165/    D095 :                                             
(1) 1165/    D095 :  (MACRO-2)                                  halt
(1) 1165/    D095 : 00                                  BRK
(1) 1165/    D096 : 00                                  BRK
(1) 1165/    D097 :                                             
(1) 1165/    D097 :                                             ;Method 1 - 60 cycles
(1) 1165/    D097 :                                             ;Jump table must be page aligned!!!
(1) 1165/    D097 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1165/    D097 :                                             ;ASL                                    ;2
(1) 1165/    D097 :                                             ;STA emu_ptr,X                  ;4
(1) 1165/    D097 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1165/    D097 :                                             ;ADC #0                                 ;2
(1) 1165/    D097 :                                             ;STA emu_ptr+1,X                ;4
(1) 1165/    D097 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1165/    D097 :                                             ;STA emu_ptr2,X                 ;4
(1) 1165/    D097 :                                             ;INC emu_ptr,X                  ;6
(1) 1165/    D097 :                                             ;BCC .skip                              ;2
(1) 1165/    D097 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1165/    D097 :                                             ;.skip:
(1) 1165/    D097 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1165/    D097 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1165/    D097 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1165/    D097 :                                             
(1) 1165/    D097 :                                             ;Method 2 - 46 cycles
(1) 1165/    D097 :                                             ;Jump table must be page aligned!!!
(1) 1165/    D097 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1165/    D097 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1165/    D097 :                                             ;ASL                                    ;2
(1) 1165/    D097 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1165/    D097 :                                             ;ASL                                    ;2
(1) 1165/    D097 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1165/    D097 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1165/    D097 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1165/    D097 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1165/    D097 :                                             ;STA emu_ptr+1,X                ;4
(1) 1165/    D097 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1165/    D097 :                                             
(1) 1165/    D097 :                                             ;Method 3 - 30 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 344 - 1/5/2022 11:50:53


(1) 1165/    D097 :                                             ;TXA                                                    ;2
(1) 1165/    D097 :                                             ;TAY                                                    ;2
(1) 1165/    D097 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1165/    D097 :                                             ;ASL                                                    ;2
(1) 1165/    D097 :                                             ;BCS upper                                              ;2
(1) 1165/    D097 :                                             ;lower:
(1) 1165/    D097 :                                             ;       ASL                                                     ;2
(1) 1165/    D097 :                                             ;       TAX                                                     ;2
(1) 1165/    D097 :                                             ;       BCS upper_lower                         ;2
(1) 1165/    D097 :                                             ;       lower_lower:
(1) 1165/    D097 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1165/    D097 :                                             ;       upper_lower:
(1) 1165/    D097 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1165/    D097 :                                             ;upper:
(1) 1165/    D097 :                                             ;       ASL
(1) 1165/    D097 :                                             ;       TAX
(1) 1165/    D097 :                                             ;       BCS upper_upper
(1) 1165/    D097 :                                             ;       lower_upper:
(1) 1165/    D097 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1165/    D097 :                                             ;       upper_upper:
(1) 1165/    D097 :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1165/    D097 :                                             ;After jump:
(1) 1165/    D097 :                                             ;TYA                                                    ;2
(1) 1165/    D097 :                                             ;TAX                                                    ;2
(1) 1165/    D097 :                                             
(1) 1165/    D097 :                                             ;Method 4 - 28 cycles
(1) 1165/    D097 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1165/    D097 :                                             ;TAY                                    ;2
(1) 1165/    D097 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1165/    D097 :                                             ;PHA                                    ;3
(1) 1165/    D097 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1165/    D097 :                                             ;PHA                                    ;3
(1) 1165/    D097 :                                             ;RTS                                    ;6
(1) 1165/    D097 :                                             
(1) 1165/    D097 :                                             ;Method 5 - 30 cycles
(1) 1165/    D097 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1165/    D099 : A8                                          TAY                                             ;2
(1) 1165/    D09A : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1165/    D09D : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1165/    D09F : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1165/    D0A2 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1165/    D0A4 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1165/    D0A7 :                                                                     
(1) 1166/    D0A7 :                     
(1) 1167/    D0A7 :                     	;0xE9 - SBC IMMED
(1) 1168/    D0A7 :                     	SBC_IMMED:
(1) 1169/    D0A7 : (MACRO)             		OP_MACRO 233, "SBC", "IMMED", "SBC_IMMED"
(1) 1169/    D0A7 :                                             ;TODO
(1) 1170/    D0A7 : (MACRO)             		NEXT_MACRO
(1) 1170/    D0A7 :                                             
(1) 1170/    D0A7 :  (MACRO-2)                                  halt
(1) 1170/    D0A7 : 00                                  BRK
(1) 1170/    D0A8 : 00                                  BRK
(1) 1170/    D0A9 :                                             
(1) 1170/    D0A9 :                                             ;Method 1 - 60 cycles
(1) 1170/    D0A9 :                                             ;Jump table must be page aligned!!!
(1) 1170/    D0A9 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1170/    D0A9 :                                             ;ASL                                    ;2
(1) 1170/    D0A9 :                                             ;STA emu_ptr,X                  ;4
(1) 1170/    D0A9 :                                             ;LDA #hi(JUMP_TABLE)    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 345 - 1/5/2022 11:50:53


(1) 1170/    D0A9 :                                             ;ADC #0                                 ;2
(1) 1170/    D0A9 :                                             ;STA emu_ptr+1,X                ;4
(1) 1170/    D0A9 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1170/    D0A9 :                                             ;STA emu_ptr2,X                 ;4
(1) 1170/    D0A9 :                                             ;INC emu_ptr,X                  ;6
(1) 1170/    D0A9 :                                             ;BCC .skip                              ;2
(1) 1170/    D0A9 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1170/    D0A9 :                                             ;.skip:
(1) 1170/    D0A9 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1170/    D0A9 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1170/    D0A9 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1170/    D0A9 :                                             
(1) 1170/    D0A9 :                                             ;Method 2 - 46 cycles
(1) 1170/    D0A9 :                                             ;Jump table must be page aligned!!!
(1) 1170/    D0A9 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1170/    D0A9 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1170/    D0A9 :                                             ;ASL                                    ;2
(1) 1170/    D0A9 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1170/    D0A9 :                                             ;ASL                                    ;2
(1) 1170/    D0A9 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1170/    D0A9 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1170/    D0A9 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1170/    D0A9 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1170/    D0A9 :                                             ;STA emu_ptr+1,X                ;4
(1) 1170/    D0A9 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1170/    D0A9 :                                             
(1) 1170/    D0A9 :                                             ;Method 3 - 30 cycles
(1) 1170/    D0A9 :                                             ;TXA                                                    ;2
(1) 1170/    D0A9 :                                             ;TAY                                                    ;2
(1) 1170/    D0A9 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1170/    D0A9 :                                             ;ASL                                                    ;2
(1) 1170/    D0A9 :                                             ;BCS upper                                              ;2
(1) 1170/    D0A9 :                                             ;lower:
(1) 1170/    D0A9 :                                             ;       ASL                                                     ;2
(1) 1170/    D0A9 :                                             ;       TAX                                                     ;2
(1) 1170/    D0A9 :                                             ;       BCS upper_lower                         ;2
(1) 1170/    D0A9 :                                             ;       lower_lower:
(1) 1170/    D0A9 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1170/    D0A9 :                                             ;       upper_lower:
(1) 1170/    D0A9 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1170/    D0A9 :                                             ;upper:
(1) 1170/    D0A9 :                                             ;       ASL
(1) 1170/    D0A9 :                                             ;       TAX
(1) 1170/    D0A9 :                                             ;       BCS upper_upper
(1) 1170/    D0A9 :                                             ;       lower_upper:
(1) 1170/    D0A9 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1170/    D0A9 :                                             ;       upper_upper:
(1) 1170/    D0A9 :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1170/    D0A9 :                                             ;After jump:
(1) 1170/    D0A9 :                                             ;TYA                                                    ;2
(1) 1170/    D0A9 :                                             ;TAX                                                    ;2
(1) 1170/    D0A9 :                                             
(1) 1170/    D0A9 :                                             ;Method 4 - 28 cycles
(1) 1170/    D0A9 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1170/    D0A9 :                                             ;TAY                                    ;2
(1) 1170/    D0A9 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1170/    D0A9 :                                             ;PHA                                    ;3
(1) 1170/    D0A9 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1170/    D0A9 :                                             ;PHA                                    ;3
(1) 1170/    D0A9 :                                             ;RTS                                    ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 346 - 1/5/2022 11:50:53


(1) 1170/    D0A9 :                                             
(1) 1170/    D0A9 :                                             ;Method 5 - 30 cycles
(1) 1170/    D0A9 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1170/    D0AB : A8                                          TAY                                             ;2
(1) 1170/    D0AC : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1170/    D0AF : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1170/    D0B1 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1170/    D0B4 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1170/    D0B6 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1170/    D0B9 :                                                                     
(1) 1171/    D0B9 :                     
(1) 1172/    D0B9 :                     	;0xEA - NOP IMP
(1) 1173/    D0B9 :                     	NOP_IMP:
(1) 1174/    D0B9 : (MACRO)             		OP_MACRO 234, "NOP", "IMP", "NOP_IMP"
(1) 1174/    D0B9 :                                             ;TODO
(1) 1175/    D0B9 : (MACRO)             		NEXT_MACRO
(1) 1175/    D0B9 :                                             
(1) 1175/    D0B9 :  (MACRO-2)                                  halt
(1) 1175/    D0B9 : 00                                  BRK
(1) 1175/    D0BA : 00                                  BRK
(1) 1175/    D0BB :                                             
(1) 1175/    D0BB :                                             ;Method 1 - 60 cycles
(1) 1175/    D0BB :                                             ;Jump table must be page aligned!!!
(1) 1175/    D0BB :                                             ;LDA (emu_PC,X)                 ;6
(1) 1175/    D0BB :                                             ;ASL                                    ;2
(1) 1175/    D0BB :                                             ;STA emu_ptr,X                  ;4
(1) 1175/    D0BB :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1175/    D0BB :                                             ;ADC #0                                 ;2
(1) 1175/    D0BB :                                             ;STA emu_ptr+1,X                ;4
(1) 1175/    D0BB :                                             ;LDA (emu_ptr,X)                ;6
(1) 1175/    D0BB :                                             ;STA emu_ptr2,X                 ;4
(1) 1175/    D0BB :                                             ;INC emu_ptr,X                  ;6
(1) 1175/    D0BB :                                             ;BCC .skip                              ;2
(1) 1175/    D0BB :                                             ;       INC emu_ptr+1,X         ;6
(1) 1175/    D0BB :                                             ;.skip:
(1) 1175/    D0BB :                                             ;LDA (emu_ptr,X)                ;6
(1) 1175/    D0BB :                                             ;STA emu_ptr2+1,X               ;4
(1) 1175/    D0BB :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1175/    D0BB :                                             
(1) 1175/    D0BB :                                             ;Method 2 - 46 cycles
(1) 1175/    D0BB :                                             ;Jump table must be page aligned!!!
(1) 1175/    D0BB :                                             ;LDA (emu_PC,X)                 ;6
(1) 1175/    D0BB :                                             ;STZ emu_ptr+1,X                ;4
(1) 1175/    D0BB :                                             ;ASL                                    ;2
(1) 1175/    D0BB :                                             ;ROL emu_ptr+1,X                ;6
(1) 1175/    D0BB :                                             ;ASL                                    ;2
(1) 1175/    D0BB :                                             ;ROL emu_ptr+1,X                ;6
(1) 1175/    D0BB :                                             ;STA emu_ptr,X                  ;4                              
(1) 1175/    D0BB :                                             ;LDA emu_ptr+1,X                ;4
(1) 1175/    D0BB :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1175/    D0BB :                                             ;STA emu_ptr+1,X                ;4
(1) 1175/    D0BB :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1175/    D0BB :                                             
(1) 1175/    D0BB :                                             ;Method 3 - 30 cycles
(1) 1175/    D0BB :                                             ;TXA                                                    ;2
(1) 1175/    D0BB :                                             ;TAY                                                    ;2
(1) 1175/    D0BB :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1175/    D0BB :                                             ;ASL                                                    ;2
(1) 1175/    D0BB :                                             ;BCS upper                                              ;2
(1) 1175/    D0BB :                                             ;lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 347 - 1/5/2022 11:50:53


(1) 1175/    D0BB :                                             ;       ASL                                                     ;2
(1) 1175/    D0BB :                                             ;       TAX                                                     ;2
(1) 1175/    D0BB :                                             ;       BCS upper_lower                         ;2
(1) 1175/    D0BB :                                             ;       lower_lower:
(1) 1175/    D0BB :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1175/    D0BB :                                             ;       upper_lower:
(1) 1175/    D0BB :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1175/    D0BB :                                             ;upper:
(1) 1175/    D0BB :                                             ;       ASL
(1) 1175/    D0BB :                                             ;       TAX
(1) 1175/    D0BB :                                             ;       BCS upper_upper
(1) 1175/    D0BB :                                             ;       lower_upper:
(1) 1175/    D0BB :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1175/    D0BB :                                             ;       upper_upper:
(1) 1175/    D0BB :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1175/    D0BB :                                             ;After jump:
(1) 1175/    D0BB :                                             ;TYA                                                    ;2
(1) 1175/    D0BB :                                             ;TAX                                                    ;2
(1) 1175/    D0BB :                                             
(1) 1175/    D0BB :                                             ;Method 4 - 28 cycles
(1) 1175/    D0BB :                                             ;LDA (emu_PC,X)                 ;6
(1) 1175/    D0BB :                                             ;TAY                                    ;2
(1) 1175/    D0BB :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1175/    D0BB :                                             ;PHA                                    ;3
(1) 1175/    D0BB :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1175/    D0BB :                                             ;PHA                                    ;3
(1) 1175/    D0BB :                                             ;RTS                                    ;6
(1) 1175/    D0BB :                                             
(1) 1175/    D0BB :                                             ;Method 5 - 30 cycles
(1) 1175/    D0BB : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1175/    D0BD : A8                                          TAY                                             ;2
(1) 1175/    D0BE : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1175/    D0C1 : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1175/    D0C3 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1175/    D0C6 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1175/    D0C8 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1175/    D0CB :                                                                     
(1) 1176/    D0CB :                     
(1) 1177/    D0CB :                     	;0xEB - NOP
(1) 1178/    D0CB :                     	NOP_0xEB:
(1) 1179/    D0CB : (MACRO)             		OP_MACRO 235, "NOP", "IMP", "NOP_0xEB"
(1) 1179/    D0CB :                                             ;TODO
(1) 1180/    D0CB : (MACRO)             		NEXT_MACRO
(1) 1180/    D0CB :                                             
(1) 1180/    D0CB :  (MACRO-2)                                  halt
(1) 1180/    D0CB : 00                                  BRK
(1) 1180/    D0CC : 00                                  BRK
(1) 1180/    D0CD :                                             
(1) 1180/    D0CD :                                             ;Method 1 - 60 cycles
(1) 1180/    D0CD :                                             ;Jump table must be page aligned!!!
(1) 1180/    D0CD :                                             ;LDA (emu_PC,X)                 ;6
(1) 1180/    D0CD :                                             ;ASL                                    ;2
(1) 1180/    D0CD :                                             ;STA emu_ptr,X                  ;4
(1) 1180/    D0CD :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1180/    D0CD :                                             ;ADC #0                                 ;2
(1) 1180/    D0CD :                                             ;STA emu_ptr+1,X                ;4
(1) 1180/    D0CD :                                             ;LDA (emu_ptr,X)                ;6
(1) 1180/    D0CD :                                             ;STA emu_ptr2,X                 ;4
(1) 1180/    D0CD :                                             ;INC emu_ptr,X                  ;6
(1) 1180/    D0CD :                                             ;BCC .skip                              ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 348 - 1/5/2022 11:50:53


(1) 1180/    D0CD :                                             ;       INC emu_ptr+1,X         ;6
(1) 1180/    D0CD :                                             ;.skip:
(1) 1180/    D0CD :                                             ;LDA (emu_ptr,X)                ;6
(1) 1180/    D0CD :                                             ;STA emu_ptr2+1,X               ;4
(1) 1180/    D0CD :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1180/    D0CD :                                             
(1) 1180/    D0CD :                                             ;Method 2 - 46 cycles
(1) 1180/    D0CD :                                             ;Jump table must be page aligned!!!
(1) 1180/    D0CD :                                             ;LDA (emu_PC,X)                 ;6
(1) 1180/    D0CD :                                             ;STZ emu_ptr+1,X                ;4
(1) 1180/    D0CD :                                             ;ASL                                    ;2
(1) 1180/    D0CD :                                             ;ROL emu_ptr+1,X                ;6
(1) 1180/    D0CD :                                             ;ASL                                    ;2
(1) 1180/    D0CD :                                             ;ROL emu_ptr+1,X                ;6
(1) 1180/    D0CD :                                             ;STA emu_ptr,X                  ;4                              
(1) 1180/    D0CD :                                             ;LDA emu_ptr+1,X                ;4
(1) 1180/    D0CD :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1180/    D0CD :                                             ;STA emu_ptr+1,X                ;4
(1) 1180/    D0CD :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1180/    D0CD :                                             
(1) 1180/    D0CD :                                             ;Method 3 - 30 cycles
(1) 1180/    D0CD :                                             ;TXA                                                    ;2
(1) 1180/    D0CD :                                             ;TAY                                                    ;2
(1) 1180/    D0CD :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1180/    D0CD :                                             ;ASL                                                    ;2
(1) 1180/    D0CD :                                             ;BCS upper                                              ;2
(1) 1180/    D0CD :                                             ;lower:
(1) 1180/    D0CD :                                             ;       ASL                                                     ;2
(1) 1180/    D0CD :                                             ;       TAX                                                     ;2
(1) 1180/    D0CD :                                             ;       BCS upper_lower                         ;2
(1) 1180/    D0CD :                                             ;       lower_lower:
(1) 1180/    D0CD :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1180/    D0CD :                                             ;       upper_lower:
(1) 1180/    D0CD :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1180/    D0CD :                                             ;upper:
(1) 1180/    D0CD :                                             ;       ASL
(1) 1180/    D0CD :                                             ;       TAX
(1) 1180/    D0CD :                                             ;       BCS upper_upper
(1) 1180/    D0CD :                                             ;       lower_upper:
(1) 1180/    D0CD :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1180/    D0CD :                                             ;       upper_upper:
(1) 1180/    D0CD :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1180/    D0CD :                                             ;After jump:
(1) 1180/    D0CD :                                             ;TYA                                                    ;2
(1) 1180/    D0CD :                                             ;TAX                                                    ;2
(1) 1180/    D0CD :                                             
(1) 1180/    D0CD :                                             ;Method 4 - 28 cycles
(1) 1180/    D0CD :                                             ;LDA (emu_PC,X)                 ;6
(1) 1180/    D0CD :                                             ;TAY                                    ;2
(1) 1180/    D0CD :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1180/    D0CD :                                             ;PHA                                    ;3
(1) 1180/    D0CD :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1180/    D0CD :                                             ;PHA                                    ;3
(1) 1180/    D0CD :                                             ;RTS                                    ;6
(1) 1180/    D0CD :                                             
(1) 1180/    D0CD :                                             ;Method 5 - 30 cycles
(1) 1180/    D0CD : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1180/    D0CF : A8                                          TAY                                             ;2
(1) 1180/    D0D0 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1180/    D0D3 : 95 0A                                       STA emu_ptr,X                   ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 349 - 1/5/2022 11:50:53


(1) 1180/    D0D5 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1180/    D0D8 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1180/    D0DA : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1180/    D0DD :                                                                     
(1) 1181/    D0DD :                     
(1) 1182/    D0DD :                     	;0xEC - CPX ABS
(1) 1183/    D0DD :                     	CPX_ABS:
(1) 1184/    D0DD : (MACRO)             		OP_MACRO 236, "CPX", "ABS", "CPX_ABS"
(1) 1184/    D0DD :                                             ;TODO
(1) 1185/    D0DD : (MACRO)             		NEXT_MACRO
(1) 1185/    D0DD :                                             
(1) 1185/    D0DD :  (MACRO-2)                                  halt
(1) 1185/    D0DD : 00                                  BRK
(1) 1185/    D0DE : 00                                  BRK
(1) 1185/    D0DF :                                             
(1) 1185/    D0DF :                                             ;Method 1 - 60 cycles
(1) 1185/    D0DF :                                             ;Jump table must be page aligned!!!
(1) 1185/    D0DF :                                             ;LDA (emu_PC,X)                 ;6
(1) 1185/    D0DF :                                             ;ASL                                    ;2
(1) 1185/    D0DF :                                             ;STA emu_ptr,X                  ;4
(1) 1185/    D0DF :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1185/    D0DF :                                             ;ADC #0                                 ;2
(1) 1185/    D0DF :                                             ;STA emu_ptr+1,X                ;4
(1) 1185/    D0DF :                                             ;LDA (emu_ptr,X)                ;6
(1) 1185/    D0DF :                                             ;STA emu_ptr2,X                 ;4
(1) 1185/    D0DF :                                             ;INC emu_ptr,X                  ;6
(1) 1185/    D0DF :                                             ;BCC .skip                              ;2
(1) 1185/    D0DF :                                             ;       INC emu_ptr+1,X         ;6
(1) 1185/    D0DF :                                             ;.skip:
(1) 1185/    D0DF :                                             ;LDA (emu_ptr,X)                ;6
(1) 1185/    D0DF :                                             ;STA emu_ptr2+1,X               ;4
(1) 1185/    D0DF :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1185/    D0DF :                                             
(1) 1185/    D0DF :                                             ;Method 2 - 46 cycles
(1) 1185/    D0DF :                                             ;Jump table must be page aligned!!!
(1) 1185/    D0DF :                                             ;LDA (emu_PC,X)                 ;6
(1) 1185/    D0DF :                                             ;STZ emu_ptr+1,X                ;4
(1) 1185/    D0DF :                                             ;ASL                                    ;2
(1) 1185/    D0DF :                                             ;ROL emu_ptr+1,X                ;6
(1) 1185/    D0DF :                                             ;ASL                                    ;2
(1) 1185/    D0DF :                                             ;ROL emu_ptr+1,X                ;6
(1) 1185/    D0DF :                                             ;STA emu_ptr,X                  ;4                              
(1) 1185/    D0DF :                                             ;LDA emu_ptr+1,X                ;4
(1) 1185/    D0DF :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1185/    D0DF :                                             ;STA emu_ptr+1,X                ;4
(1) 1185/    D0DF :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1185/    D0DF :                                             
(1) 1185/    D0DF :                                             ;Method 3 - 30 cycles
(1) 1185/    D0DF :                                             ;TXA                                                    ;2
(1) 1185/    D0DF :                                             ;TAY                                                    ;2
(1) 1185/    D0DF :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1185/    D0DF :                                             ;ASL                                                    ;2
(1) 1185/    D0DF :                                             ;BCS upper                                              ;2
(1) 1185/    D0DF :                                             ;lower:
(1) 1185/    D0DF :                                             ;       ASL                                                     ;2
(1) 1185/    D0DF :                                             ;       TAX                                                     ;2
(1) 1185/    D0DF :                                             ;       BCS upper_lower                         ;2
(1) 1185/    D0DF :                                             ;       lower_lower:
(1) 1185/    D0DF :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1185/    D0DF :                                             ;       upper_lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 350 - 1/5/2022 11:50:53


(1) 1185/    D0DF :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1185/    D0DF :                                             ;upper:
(1) 1185/    D0DF :                                             ;       ASL
(1) 1185/    D0DF :                                             ;       TAX
(1) 1185/    D0DF :                                             ;       BCS upper_upper
(1) 1185/    D0DF :                                             ;       lower_upper:
(1) 1185/    D0DF :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1185/    D0DF :                                             ;       upper_upper:
(1) 1185/    D0DF :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1185/    D0DF :                                             ;After jump:
(1) 1185/    D0DF :                                             ;TYA                                                    ;2
(1) 1185/    D0DF :                                             ;TAX                                                    ;2
(1) 1185/    D0DF :                                             
(1) 1185/    D0DF :                                             ;Method 4 - 28 cycles
(1) 1185/    D0DF :                                             ;LDA (emu_PC,X)                 ;6
(1) 1185/    D0DF :                                             ;TAY                                    ;2
(1) 1185/    D0DF :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1185/    D0DF :                                             ;PHA                                    ;3
(1) 1185/    D0DF :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1185/    D0DF :                                             ;PHA                                    ;3
(1) 1185/    D0DF :                                             ;RTS                                    ;6
(1) 1185/    D0DF :                                             
(1) 1185/    D0DF :                                             ;Method 5 - 30 cycles
(1) 1185/    D0DF : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1185/    D0E1 : A8                                          TAY                                             ;2
(1) 1185/    D0E2 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1185/    D0E5 : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1185/    D0E7 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1185/    D0EA : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1185/    D0EC : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1185/    D0EF :                                                                     
(1) 1186/    D0EF :                     
(1) 1187/    D0EF :                     	;0xED - SBC ABS
(1) 1188/    D0EF :                     	SBC_ABS:
(1) 1189/    D0EF : (MACRO)             		OP_MACRO 237, "SBC", "ABS", "SBC_ABS"
(1) 1189/    D0EF :                                             ;TODO
(1) 1190/    D0EF : (MACRO)             		NEXT_MACRO
(1) 1190/    D0EF :                                             
(1) 1190/    D0EF :  (MACRO-2)                                  halt
(1) 1190/    D0EF : 00                                  BRK
(1) 1190/    D0F0 : 00                                  BRK
(1) 1190/    D0F1 :                                             
(1) 1190/    D0F1 :                                             ;Method 1 - 60 cycles
(1) 1190/    D0F1 :                                             ;Jump table must be page aligned!!!
(1) 1190/    D0F1 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1190/    D0F1 :                                             ;ASL                                    ;2
(1) 1190/    D0F1 :                                             ;STA emu_ptr,X                  ;4
(1) 1190/    D0F1 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1190/    D0F1 :                                             ;ADC #0                                 ;2
(1) 1190/    D0F1 :                                             ;STA emu_ptr+1,X                ;4
(1) 1190/    D0F1 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1190/    D0F1 :                                             ;STA emu_ptr2,X                 ;4
(1) 1190/    D0F1 :                                             ;INC emu_ptr,X                  ;6
(1) 1190/    D0F1 :                                             ;BCC .skip                              ;2
(1) 1190/    D0F1 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1190/    D0F1 :                                             ;.skip:
(1) 1190/    D0F1 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1190/    D0F1 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1190/    D0F1 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1190/    D0F1 :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 351 - 1/5/2022 11:50:53


(1) 1190/    D0F1 :                                             ;Method 2 - 46 cycles
(1) 1190/    D0F1 :                                             ;Jump table must be page aligned!!!
(1) 1190/    D0F1 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1190/    D0F1 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1190/    D0F1 :                                             ;ASL                                    ;2
(1) 1190/    D0F1 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1190/    D0F1 :                                             ;ASL                                    ;2
(1) 1190/    D0F1 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1190/    D0F1 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1190/    D0F1 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1190/    D0F1 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1190/    D0F1 :                                             ;STA emu_ptr+1,X                ;4
(1) 1190/    D0F1 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1190/    D0F1 :                                             
(1) 1190/    D0F1 :                                             ;Method 3 - 30 cycles
(1) 1190/    D0F1 :                                             ;TXA                                                    ;2
(1) 1190/    D0F1 :                                             ;TAY                                                    ;2
(1) 1190/    D0F1 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1190/    D0F1 :                                             ;ASL                                                    ;2
(1) 1190/    D0F1 :                                             ;BCS upper                                              ;2
(1) 1190/    D0F1 :                                             ;lower:
(1) 1190/    D0F1 :                                             ;       ASL                                                     ;2
(1) 1190/    D0F1 :                                             ;       TAX                                                     ;2
(1) 1190/    D0F1 :                                             ;       BCS upper_lower                         ;2
(1) 1190/    D0F1 :                                             ;       lower_lower:
(1) 1190/    D0F1 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1190/    D0F1 :                                             ;       upper_lower:
(1) 1190/    D0F1 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1190/    D0F1 :                                             ;upper:
(1) 1190/    D0F1 :                                             ;       ASL
(1) 1190/    D0F1 :                                             ;       TAX
(1) 1190/    D0F1 :                                             ;       BCS upper_upper
(1) 1190/    D0F1 :                                             ;       lower_upper:
(1) 1190/    D0F1 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1190/    D0F1 :                                             ;       upper_upper:
(1) 1190/    D0F1 :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1190/    D0F1 :                                             ;After jump:
(1) 1190/    D0F1 :                                             ;TYA                                                    ;2
(1) 1190/    D0F1 :                                             ;TAX                                                    ;2
(1) 1190/    D0F1 :                                             
(1) 1190/    D0F1 :                                             ;Method 4 - 28 cycles
(1) 1190/    D0F1 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1190/    D0F1 :                                             ;TAY                                    ;2
(1) 1190/    D0F1 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1190/    D0F1 :                                             ;PHA                                    ;3
(1) 1190/    D0F1 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1190/    D0F1 :                                             ;PHA                                    ;3
(1) 1190/    D0F1 :                                             ;RTS                                    ;6
(1) 1190/    D0F1 :                                             
(1) 1190/    D0F1 :                                             ;Method 5 - 30 cycles
(1) 1190/    D0F1 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1190/    D0F3 : A8                                          TAY                                             ;2
(1) 1190/    D0F4 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1190/    D0F7 : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1190/    D0F9 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1190/    D0FC : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1190/    D0FE : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1190/    D101 :                                                                     
(1) 1191/    D101 :                     
(1) 1192/    D101 :                     	;0xEE - INC ABS
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 352 - 1/5/2022 11:50:53


(1) 1193/    D101 :                     	INC_ABS:
(1) 1194/    D101 : (MACRO)             		OP_MACRO 238, "INC", "ABS", "INC_ABS"
(1) 1194/    D101 :                                             ;TODO
(1) 1195/    D101 : (MACRO)             		NEXT_MACRO
(1) 1195/    D101 :                                             
(1) 1195/    D101 :  (MACRO-2)                                  halt
(1) 1195/    D101 : 00                                  BRK
(1) 1195/    D102 : 00                                  BRK
(1) 1195/    D103 :                                             
(1) 1195/    D103 :                                             ;Method 1 - 60 cycles
(1) 1195/    D103 :                                             ;Jump table must be page aligned!!!
(1) 1195/    D103 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1195/    D103 :                                             ;ASL                                    ;2
(1) 1195/    D103 :                                             ;STA emu_ptr,X                  ;4
(1) 1195/    D103 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1195/    D103 :                                             ;ADC #0                                 ;2
(1) 1195/    D103 :                                             ;STA emu_ptr+1,X                ;4
(1) 1195/    D103 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1195/    D103 :                                             ;STA emu_ptr2,X                 ;4
(1) 1195/    D103 :                                             ;INC emu_ptr,X                  ;6
(1) 1195/    D103 :                                             ;BCC .skip                              ;2
(1) 1195/    D103 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1195/    D103 :                                             ;.skip:
(1) 1195/    D103 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1195/    D103 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1195/    D103 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1195/    D103 :                                             
(1) 1195/    D103 :                                             ;Method 2 - 46 cycles
(1) 1195/    D103 :                                             ;Jump table must be page aligned!!!
(1) 1195/    D103 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1195/    D103 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1195/    D103 :                                             ;ASL                                    ;2
(1) 1195/    D103 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1195/    D103 :                                             ;ASL                                    ;2
(1) 1195/    D103 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1195/    D103 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1195/    D103 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1195/    D103 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1195/    D103 :                                             ;STA emu_ptr+1,X                ;4
(1) 1195/    D103 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1195/    D103 :                                             
(1) 1195/    D103 :                                             ;Method 3 - 30 cycles
(1) 1195/    D103 :                                             ;TXA                                                    ;2
(1) 1195/    D103 :                                             ;TAY                                                    ;2
(1) 1195/    D103 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1195/    D103 :                                             ;ASL                                                    ;2
(1) 1195/    D103 :                                             ;BCS upper                                              ;2
(1) 1195/    D103 :                                             ;lower:
(1) 1195/    D103 :                                             ;       ASL                                                     ;2
(1) 1195/    D103 :                                             ;       TAX                                                     ;2
(1) 1195/    D103 :                                             ;       BCS upper_lower                         ;2
(1) 1195/    D103 :                                             ;       lower_lower:
(1) 1195/    D103 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1195/    D103 :                                             ;       upper_lower:
(1) 1195/    D103 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1195/    D103 :                                             ;upper:
(1) 1195/    D103 :                                             ;       ASL
(1) 1195/    D103 :                                             ;       TAX
(1) 1195/    D103 :                                             ;       BCS upper_upper
(1) 1195/    D103 :                                             ;       lower_upper:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 353 - 1/5/2022 11:50:53


(1) 1195/    D103 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1195/    D103 :                                             ;       upper_upper:
(1) 1195/    D103 :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1195/    D103 :                                             ;After jump:
(1) 1195/    D103 :                                             ;TYA                                                    ;2
(1) 1195/    D103 :                                             ;TAX                                                    ;2
(1) 1195/    D103 :                                             
(1) 1195/    D103 :                                             ;Method 4 - 28 cycles
(1) 1195/    D103 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1195/    D103 :                                             ;TAY                                    ;2
(1) 1195/    D103 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1195/    D103 :                                             ;PHA                                    ;3
(1) 1195/    D103 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1195/    D103 :                                             ;PHA                                    ;3
(1) 1195/    D103 :                                             ;RTS                                    ;6
(1) 1195/    D103 :                                             
(1) 1195/    D103 :                                             ;Method 5 - 30 cycles
(1) 1195/    D103 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1195/    D105 : A8                                          TAY                                             ;2
(1) 1195/    D106 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1195/    D109 : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1195/    D10B : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1195/    D10E : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1195/    D110 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1195/    D113 :                                                                     
(1) 1196/    D113 :                     
(1) 1197/    D113 :                     	;0xEF - NOP
(1) 1198/    D113 :                     	NOP_0xEF:
(1) 1199/    D113 : (MACRO)             		OP_MACRO 239, "NOP", "IMP", "NOP_0xEF"
(1) 1199/    D113 :                                             ;TODO
(1) 1200/    D113 : (MACRO)             		NEXT_MACRO
(1) 1200/    D113 :                                             
(1) 1200/    D113 :  (MACRO-2)                                  halt
(1) 1200/    D113 : 00                                  BRK
(1) 1200/    D114 : 00                                  BRK
(1) 1200/    D115 :                                             
(1) 1200/    D115 :                                             ;Method 1 - 60 cycles
(1) 1200/    D115 :                                             ;Jump table must be page aligned!!!
(1) 1200/    D115 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1200/    D115 :                                             ;ASL                                    ;2
(1) 1200/    D115 :                                             ;STA emu_ptr,X                  ;4
(1) 1200/    D115 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1200/    D115 :                                             ;ADC #0                                 ;2
(1) 1200/    D115 :                                             ;STA emu_ptr+1,X                ;4
(1) 1200/    D115 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1200/    D115 :                                             ;STA emu_ptr2,X                 ;4
(1) 1200/    D115 :                                             ;INC emu_ptr,X                  ;6
(1) 1200/    D115 :                                             ;BCC .skip                              ;2
(1) 1200/    D115 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1200/    D115 :                                             ;.skip:
(1) 1200/    D115 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1200/    D115 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1200/    D115 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1200/    D115 :                                             
(1) 1200/    D115 :                                             ;Method 2 - 46 cycles
(1) 1200/    D115 :                                             ;Jump table must be page aligned!!!
(1) 1200/    D115 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1200/    D115 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1200/    D115 :                                             ;ASL                                    ;2
(1) 1200/    D115 :                                             ;ROL emu_ptr+1,X                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 354 - 1/5/2022 11:50:53


(1) 1200/    D115 :                                             ;ASL                                    ;2
(1) 1200/    D115 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1200/    D115 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1200/    D115 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1200/    D115 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1200/    D115 :                                             ;STA emu_ptr+1,X                ;4
(1) 1200/    D115 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1200/    D115 :                                             
(1) 1200/    D115 :                                             ;Method 3 - 30 cycles
(1) 1200/    D115 :                                             ;TXA                                                    ;2
(1) 1200/    D115 :                                             ;TAY                                                    ;2
(1) 1200/    D115 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1200/    D115 :                                             ;ASL                                                    ;2
(1) 1200/    D115 :                                             ;BCS upper                                              ;2
(1) 1200/    D115 :                                             ;lower:
(1) 1200/    D115 :                                             ;       ASL                                                     ;2
(1) 1200/    D115 :                                             ;       TAX                                                     ;2
(1) 1200/    D115 :                                             ;       BCS upper_lower                         ;2
(1) 1200/    D115 :                                             ;       lower_lower:
(1) 1200/    D115 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1200/    D115 :                                             ;       upper_lower:
(1) 1200/    D115 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1200/    D115 :                                             ;upper:
(1) 1200/    D115 :                                             ;       ASL
(1) 1200/    D115 :                                             ;       TAX
(1) 1200/    D115 :                                             ;       BCS upper_upper
(1) 1200/    D115 :                                             ;       lower_upper:
(1) 1200/    D115 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1200/    D115 :                                             ;       upper_upper:
(1) 1200/    D115 :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1200/    D115 :                                             ;After jump:
(1) 1200/    D115 :                                             ;TYA                                                    ;2
(1) 1200/    D115 :                                             ;TAX                                                    ;2
(1) 1200/    D115 :                                             
(1) 1200/    D115 :                                             ;Method 4 - 28 cycles
(1) 1200/    D115 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1200/    D115 :                                             ;TAY                                    ;2
(1) 1200/    D115 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1200/    D115 :                                             ;PHA                                    ;3
(1) 1200/    D115 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1200/    D115 :                                             ;PHA                                    ;3
(1) 1200/    D115 :                                             ;RTS                                    ;6
(1) 1200/    D115 :                                             
(1) 1200/    D115 :                                             ;Method 5 - 30 cycles
(1) 1200/    D115 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1200/    D117 : A8                                          TAY                                             ;2
(1) 1200/    D118 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1200/    D11B : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1200/    D11D : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1200/    D120 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1200/    D122 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1200/    D125 :                                                                     
(1) 1201/    D125 :                     
(1) 1202/    D125 :                     	;0xF0 - BEQ REL
(1) 1203/    D125 :                     	BEQ_REL:
(1) 1204/    D125 : (MACRO)             		OP_MACRO 240, "BEQ", "REL", "BEQ_REL"
(1) 1204/    D125 :                                             ;TODO
(1) 1205/    D125 : (MACRO)             		NEXT_MACRO
(1) 1205/    D125 :                                             
(1) 1205/    D125 :  (MACRO-2)                                  halt
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 355 - 1/5/2022 11:50:53


(1) 1205/    D125 : 00                                  BRK
(1) 1205/    D126 : 00                                  BRK
(1) 1205/    D127 :                                             
(1) 1205/    D127 :                                             ;Method 1 - 60 cycles
(1) 1205/    D127 :                                             ;Jump table must be page aligned!!!
(1) 1205/    D127 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1205/    D127 :                                             ;ASL                                    ;2
(1) 1205/    D127 :                                             ;STA emu_ptr,X                  ;4
(1) 1205/    D127 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1205/    D127 :                                             ;ADC #0                                 ;2
(1) 1205/    D127 :                                             ;STA emu_ptr+1,X                ;4
(1) 1205/    D127 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1205/    D127 :                                             ;STA emu_ptr2,X                 ;4
(1) 1205/    D127 :                                             ;INC emu_ptr,X                  ;6
(1) 1205/    D127 :                                             ;BCC .skip                              ;2
(1) 1205/    D127 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1205/    D127 :                                             ;.skip:
(1) 1205/    D127 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1205/    D127 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1205/    D127 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1205/    D127 :                                             
(1) 1205/    D127 :                                             ;Method 2 - 46 cycles
(1) 1205/    D127 :                                             ;Jump table must be page aligned!!!
(1) 1205/    D127 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1205/    D127 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1205/    D127 :                                             ;ASL                                    ;2
(1) 1205/    D127 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1205/    D127 :                                             ;ASL                                    ;2
(1) 1205/    D127 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1205/    D127 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1205/    D127 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1205/    D127 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1205/    D127 :                                             ;STA emu_ptr+1,X                ;4
(1) 1205/    D127 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1205/    D127 :                                             
(1) 1205/    D127 :                                             ;Method 3 - 30 cycles
(1) 1205/    D127 :                                             ;TXA                                                    ;2
(1) 1205/    D127 :                                             ;TAY                                                    ;2
(1) 1205/    D127 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1205/    D127 :                                             ;ASL                                                    ;2
(1) 1205/    D127 :                                             ;BCS upper                                              ;2
(1) 1205/    D127 :                                             ;lower:
(1) 1205/    D127 :                                             ;       ASL                                                     ;2
(1) 1205/    D127 :                                             ;       TAX                                                     ;2
(1) 1205/    D127 :                                             ;       BCS upper_lower                         ;2
(1) 1205/    D127 :                                             ;       lower_lower:
(1) 1205/    D127 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1205/    D127 :                                             ;       upper_lower:
(1) 1205/    D127 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1205/    D127 :                                             ;upper:
(1) 1205/    D127 :                                             ;       ASL
(1) 1205/    D127 :                                             ;       TAX
(1) 1205/    D127 :                                             ;       BCS upper_upper
(1) 1205/    D127 :                                             ;       lower_upper:
(1) 1205/    D127 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1205/    D127 :                                             ;       upper_upper:
(1) 1205/    D127 :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1205/    D127 :                                             ;After jump:
(1) 1205/    D127 :                                             ;TYA                                                    ;2
(1) 1205/    D127 :                                             ;TAX                                                    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 356 - 1/5/2022 11:50:53


(1) 1205/    D127 :                                             
(1) 1205/    D127 :                                             ;Method 4 - 28 cycles
(1) 1205/    D127 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1205/    D127 :                                             ;TAY                                    ;2
(1) 1205/    D127 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1205/    D127 :                                             ;PHA                                    ;3
(1) 1205/    D127 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1205/    D127 :                                             ;PHA                                    ;3
(1) 1205/    D127 :                                             ;RTS                                    ;6
(1) 1205/    D127 :                                             
(1) 1205/    D127 :                                             ;Method 5 - 30 cycles
(1) 1205/    D127 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1205/    D129 : A8                                          TAY                                             ;2
(1) 1205/    D12A : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1205/    D12D : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1205/    D12F : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1205/    D132 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1205/    D134 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1205/    D137 :                                                                     
(1) 1206/    D137 :                     
(1) 1207/    D137 :                     	;0xF1 - SBC IY
(1) 1208/    D137 :                     	SBC_IY:
(1) 1209/    D137 : (MACRO)             		OP_MACRO 241, "SBC", "IY", "SBC_IY"
(1) 1209/    D137 :                                             ;TODO
(1) 1210/    D137 : (MACRO)             		NEXT_MACRO
(1) 1210/    D137 :                                             
(1) 1210/    D137 :  (MACRO-2)                                  halt
(1) 1210/    D137 : 00                                  BRK
(1) 1210/    D138 : 00                                  BRK
(1) 1210/    D139 :                                             
(1) 1210/    D139 :                                             ;Method 1 - 60 cycles
(1) 1210/    D139 :                                             ;Jump table must be page aligned!!!
(1) 1210/    D139 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1210/    D139 :                                             ;ASL                                    ;2
(1) 1210/    D139 :                                             ;STA emu_ptr,X                  ;4
(1) 1210/    D139 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1210/    D139 :                                             ;ADC #0                                 ;2
(1) 1210/    D139 :                                             ;STA emu_ptr+1,X                ;4
(1) 1210/    D139 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1210/    D139 :                                             ;STA emu_ptr2,X                 ;4
(1) 1210/    D139 :                                             ;INC emu_ptr,X                  ;6
(1) 1210/    D139 :                                             ;BCC .skip                              ;2
(1) 1210/    D139 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1210/    D139 :                                             ;.skip:
(1) 1210/    D139 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1210/    D139 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1210/    D139 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1210/    D139 :                                             
(1) 1210/    D139 :                                             ;Method 2 - 46 cycles
(1) 1210/    D139 :                                             ;Jump table must be page aligned!!!
(1) 1210/    D139 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1210/    D139 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1210/    D139 :                                             ;ASL                                    ;2
(1) 1210/    D139 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1210/    D139 :                                             ;ASL                                    ;2
(1) 1210/    D139 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1210/    D139 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1210/    D139 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1210/    D139 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1210/    D139 :                                             ;STA emu_ptr+1,X                ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 357 - 1/5/2022 11:50:53


(1) 1210/    D139 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1210/    D139 :                                             
(1) 1210/    D139 :                                             ;Method 3 - 30 cycles
(1) 1210/    D139 :                                             ;TXA                                                    ;2
(1) 1210/    D139 :                                             ;TAY                                                    ;2
(1) 1210/    D139 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1210/    D139 :                                             ;ASL                                                    ;2
(1) 1210/    D139 :                                             ;BCS upper                                              ;2
(1) 1210/    D139 :                                             ;lower:
(1) 1210/    D139 :                                             ;       ASL                                                     ;2
(1) 1210/    D139 :                                             ;       TAX                                                     ;2
(1) 1210/    D139 :                                             ;       BCS upper_lower                         ;2
(1) 1210/    D139 :                                             ;       lower_lower:
(1) 1210/    D139 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1210/    D139 :                                             ;       upper_lower:
(1) 1210/    D139 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1210/    D139 :                                             ;upper:
(1) 1210/    D139 :                                             ;       ASL
(1) 1210/    D139 :                                             ;       TAX
(1) 1210/    D139 :                                             ;       BCS upper_upper
(1) 1210/    D139 :                                             ;       lower_upper:
(1) 1210/    D139 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1210/    D139 :                                             ;       upper_upper:
(1) 1210/    D139 :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1210/    D139 :                                             ;After jump:
(1) 1210/    D139 :                                             ;TYA                                                    ;2
(1) 1210/    D139 :                                             ;TAX                                                    ;2
(1) 1210/    D139 :                                             
(1) 1210/    D139 :                                             ;Method 4 - 28 cycles
(1) 1210/    D139 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1210/    D139 :                                             ;TAY                                    ;2
(1) 1210/    D139 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1210/    D139 :                                             ;PHA                                    ;3
(1) 1210/    D139 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1210/    D139 :                                             ;PHA                                    ;3
(1) 1210/    D139 :                                             ;RTS                                    ;6
(1) 1210/    D139 :                                             
(1) 1210/    D139 :                                             ;Method 5 - 30 cycles
(1) 1210/    D139 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1210/    D13B : A8                                          TAY                                             ;2
(1) 1210/    D13C : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1210/    D13F : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1210/    D141 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1210/    D144 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1210/    D146 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1210/    D149 :                                                                     
(1) 1211/    D149 :                     
(1) 1212/    D149 :                     	;0xF2 - NOP
(1) 1213/    D149 :                     	NOP_0xF2:
(1) 1214/    D149 : (MACRO)             		OP_MACRO 242, "NOP", "IMP", "NOP_0xF2"
(1) 1214/    D149 :                                             ;TODO
(1) 1215/    D149 : (MACRO)             		NEXT_MACRO
(1) 1215/    D149 :                                             
(1) 1215/    D149 :  (MACRO-2)                                  halt
(1) 1215/    D149 : 00                                  BRK
(1) 1215/    D14A : 00                                  BRK
(1) 1215/    D14B :                                             
(1) 1215/    D14B :                                             ;Method 1 - 60 cycles
(1) 1215/    D14B :                                             ;Jump table must be page aligned!!!
(1) 1215/    D14B :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 358 - 1/5/2022 11:50:53


(1) 1215/    D14B :                                             ;ASL                                    ;2
(1) 1215/    D14B :                                             ;STA emu_ptr,X                  ;4
(1) 1215/    D14B :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1215/    D14B :                                             ;ADC #0                                 ;2
(1) 1215/    D14B :                                             ;STA emu_ptr+1,X                ;4
(1) 1215/    D14B :                                             ;LDA (emu_ptr,X)                ;6
(1) 1215/    D14B :                                             ;STA emu_ptr2,X                 ;4
(1) 1215/    D14B :                                             ;INC emu_ptr,X                  ;6
(1) 1215/    D14B :                                             ;BCC .skip                              ;2
(1) 1215/    D14B :                                             ;       INC emu_ptr+1,X         ;6
(1) 1215/    D14B :                                             ;.skip:
(1) 1215/    D14B :                                             ;LDA (emu_ptr,X)                ;6
(1) 1215/    D14B :                                             ;STA emu_ptr2+1,X               ;4
(1) 1215/    D14B :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1215/    D14B :                                             
(1) 1215/    D14B :                                             ;Method 2 - 46 cycles
(1) 1215/    D14B :                                             ;Jump table must be page aligned!!!
(1) 1215/    D14B :                                             ;LDA (emu_PC,X)                 ;6
(1) 1215/    D14B :                                             ;STZ emu_ptr+1,X                ;4
(1) 1215/    D14B :                                             ;ASL                                    ;2
(1) 1215/    D14B :                                             ;ROL emu_ptr+1,X                ;6
(1) 1215/    D14B :                                             ;ASL                                    ;2
(1) 1215/    D14B :                                             ;ROL emu_ptr+1,X                ;6
(1) 1215/    D14B :                                             ;STA emu_ptr,X                  ;4                              
(1) 1215/    D14B :                                             ;LDA emu_ptr+1,X                ;4
(1) 1215/    D14B :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1215/    D14B :                                             ;STA emu_ptr+1,X                ;4
(1) 1215/    D14B :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1215/    D14B :                                             
(1) 1215/    D14B :                                             ;Method 3 - 30 cycles
(1) 1215/    D14B :                                             ;TXA                                                    ;2
(1) 1215/    D14B :                                             ;TAY                                                    ;2
(1) 1215/    D14B :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1215/    D14B :                                             ;ASL                                                    ;2
(1) 1215/    D14B :                                             ;BCS upper                                              ;2
(1) 1215/    D14B :                                             ;lower:
(1) 1215/    D14B :                                             ;       ASL                                                     ;2
(1) 1215/    D14B :                                             ;       TAX                                                     ;2
(1) 1215/    D14B :                                             ;       BCS upper_lower                         ;2
(1) 1215/    D14B :                                             ;       lower_lower:
(1) 1215/    D14B :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1215/    D14B :                                             ;       upper_lower:
(1) 1215/    D14B :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1215/    D14B :                                             ;upper:
(1) 1215/    D14B :                                             ;       ASL
(1) 1215/    D14B :                                             ;       TAX
(1) 1215/    D14B :                                             ;       BCS upper_upper
(1) 1215/    D14B :                                             ;       lower_upper:
(1) 1215/    D14B :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1215/    D14B :                                             ;       upper_upper:
(1) 1215/    D14B :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1215/    D14B :                                             ;After jump:
(1) 1215/    D14B :                                             ;TYA                                                    ;2
(1) 1215/    D14B :                                             ;TAX                                                    ;2
(1) 1215/    D14B :                                             
(1) 1215/    D14B :                                             ;Method 4 - 28 cycles
(1) 1215/    D14B :                                             ;LDA (emu_PC,X)                 ;6
(1) 1215/    D14B :                                             ;TAY                                    ;2
(1) 1215/    D14B :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1215/    D14B :                                             ;PHA                                    ;3
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 359 - 1/5/2022 11:50:53


(1) 1215/    D14B :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1215/    D14B :                                             ;PHA                                    ;3
(1) 1215/    D14B :                                             ;RTS                                    ;6
(1) 1215/    D14B :                                             
(1) 1215/    D14B :                                             ;Method 5 - 30 cycles
(1) 1215/    D14B : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1215/    D14D : A8                                          TAY                                             ;2
(1) 1215/    D14E : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1215/    D151 : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1215/    D153 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1215/    D156 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1215/    D158 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1215/    D15B :                                                                     
(1) 1216/    D15B :                     
(1) 1217/    D15B :                     	;0xF3 - NOP
(1) 1218/    D15B :                     	NOP_0xF3:
(1) 1219/    D15B : (MACRO)             		OP_MACRO 243, "NOP", "IMP", "NOP_0xF3"
(1) 1219/    D15B :                                             ;TODO
(1) 1220/    D15B : (MACRO)             		NEXT_MACRO
(1) 1220/    D15B :                                             
(1) 1220/    D15B :  (MACRO-2)                                  halt
(1) 1220/    D15B : 00                                  BRK
(1) 1220/    D15C : 00                                  BRK
(1) 1220/    D15D :                                             
(1) 1220/    D15D :                                             ;Method 1 - 60 cycles
(1) 1220/    D15D :                                             ;Jump table must be page aligned!!!
(1) 1220/    D15D :                                             ;LDA (emu_PC,X)                 ;6
(1) 1220/    D15D :                                             ;ASL                                    ;2
(1) 1220/    D15D :                                             ;STA emu_ptr,X                  ;4
(1) 1220/    D15D :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1220/    D15D :                                             ;ADC #0                                 ;2
(1) 1220/    D15D :                                             ;STA emu_ptr+1,X                ;4
(1) 1220/    D15D :                                             ;LDA (emu_ptr,X)                ;6
(1) 1220/    D15D :                                             ;STA emu_ptr2,X                 ;4
(1) 1220/    D15D :                                             ;INC emu_ptr,X                  ;6
(1) 1220/    D15D :                                             ;BCC .skip                              ;2
(1) 1220/    D15D :                                             ;       INC emu_ptr+1,X         ;6
(1) 1220/    D15D :                                             ;.skip:
(1) 1220/    D15D :                                             ;LDA (emu_ptr,X)                ;6
(1) 1220/    D15D :                                             ;STA emu_ptr2+1,X               ;4
(1) 1220/    D15D :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1220/    D15D :                                             
(1) 1220/    D15D :                                             ;Method 2 - 46 cycles
(1) 1220/    D15D :                                             ;Jump table must be page aligned!!!
(1) 1220/    D15D :                                             ;LDA (emu_PC,X)                 ;6
(1) 1220/    D15D :                                             ;STZ emu_ptr+1,X                ;4
(1) 1220/    D15D :                                             ;ASL                                    ;2
(1) 1220/    D15D :                                             ;ROL emu_ptr+1,X                ;6
(1) 1220/    D15D :                                             ;ASL                                    ;2
(1) 1220/    D15D :                                             ;ROL emu_ptr+1,X                ;6
(1) 1220/    D15D :                                             ;STA emu_ptr,X                  ;4                              
(1) 1220/    D15D :                                             ;LDA emu_ptr+1,X                ;4
(1) 1220/    D15D :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1220/    D15D :                                             ;STA emu_ptr+1,X                ;4
(1) 1220/    D15D :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1220/    D15D :                                             
(1) 1220/    D15D :                                             ;Method 3 - 30 cycles
(1) 1220/    D15D :                                             ;TXA                                                    ;2
(1) 1220/    D15D :                                             ;TAY                                                    ;2
(1) 1220/    D15D :                                             ;LDA (emu_PC,X)                                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 360 - 1/5/2022 11:50:53


(1) 1220/    D15D :                                             ;ASL                                                    ;2
(1) 1220/    D15D :                                             ;BCS upper                                              ;2
(1) 1220/    D15D :                                             ;lower:
(1) 1220/    D15D :                                             ;       ASL                                                     ;2
(1) 1220/    D15D :                                             ;       TAX                                                     ;2
(1) 1220/    D15D :                                             ;       BCS upper_lower                         ;2
(1) 1220/    D15D :                                             ;       lower_lower:
(1) 1220/    D15D :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1220/    D15D :                                             ;       upper_lower:
(1) 1220/    D15D :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1220/    D15D :                                             ;upper:
(1) 1220/    D15D :                                             ;       ASL
(1) 1220/    D15D :                                             ;       TAX
(1) 1220/    D15D :                                             ;       BCS upper_upper
(1) 1220/    D15D :                                             ;       lower_upper:
(1) 1220/    D15D :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1220/    D15D :                                             ;       upper_upper:
(1) 1220/    D15D :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1220/    D15D :                                             ;After jump:
(1) 1220/    D15D :                                             ;TYA                                                    ;2
(1) 1220/    D15D :                                             ;TAX                                                    ;2
(1) 1220/    D15D :                                             
(1) 1220/    D15D :                                             ;Method 4 - 28 cycles
(1) 1220/    D15D :                                             ;LDA (emu_PC,X)                 ;6
(1) 1220/    D15D :                                             ;TAY                                    ;2
(1) 1220/    D15D :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1220/    D15D :                                             ;PHA                                    ;3
(1) 1220/    D15D :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1220/    D15D :                                             ;PHA                                    ;3
(1) 1220/    D15D :                                             ;RTS                                    ;6
(1) 1220/    D15D :                                             
(1) 1220/    D15D :                                             ;Method 5 - 30 cycles
(1) 1220/    D15D : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1220/    D15F : A8                                          TAY                                             ;2
(1) 1220/    D160 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1220/    D163 : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1220/    D165 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1220/    D168 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1220/    D16A : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1220/    D16D :                                                                     
(1) 1221/    D16D :                     
(1) 1222/    D16D :                     	;0xF4 - NOP
(1) 1223/    D16D :                     	NOP_0xF4:
(1) 1224/    D16D : (MACRO)             		OP_MACRO 244, "NOP", "IMP", "NOP_0xF4"
(1) 1224/    D16D :                                             ;TODO
(1) 1225/    D16D : (MACRO)             		NEXT_MACRO
(1) 1225/    D16D :                                             
(1) 1225/    D16D :  (MACRO-2)                                  halt
(1) 1225/    D16D : 00                                  BRK
(1) 1225/    D16E : 00                                  BRK
(1) 1225/    D16F :                                             
(1) 1225/    D16F :                                             ;Method 1 - 60 cycles
(1) 1225/    D16F :                                             ;Jump table must be page aligned!!!
(1) 1225/    D16F :                                             ;LDA (emu_PC,X)                 ;6
(1) 1225/    D16F :                                             ;ASL                                    ;2
(1) 1225/    D16F :                                             ;STA emu_ptr,X                  ;4
(1) 1225/    D16F :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1225/    D16F :                                             ;ADC #0                                 ;2
(1) 1225/    D16F :                                             ;STA emu_ptr+1,X                ;4
(1) 1225/    D16F :                                             ;LDA (emu_ptr,X)                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 361 - 1/5/2022 11:50:53


(1) 1225/    D16F :                                             ;STA emu_ptr2,X                 ;4
(1) 1225/    D16F :                                             ;INC emu_ptr,X                  ;6
(1) 1225/    D16F :                                             ;BCC .skip                              ;2
(1) 1225/    D16F :                                             ;       INC emu_ptr+1,X         ;6
(1) 1225/    D16F :                                             ;.skip:
(1) 1225/    D16F :                                             ;LDA (emu_ptr,X)                ;6
(1) 1225/    D16F :                                             ;STA emu_ptr2+1,X               ;4
(1) 1225/    D16F :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1225/    D16F :                                             
(1) 1225/    D16F :                                             ;Method 2 - 46 cycles
(1) 1225/    D16F :                                             ;Jump table must be page aligned!!!
(1) 1225/    D16F :                                             ;LDA (emu_PC,X)                 ;6
(1) 1225/    D16F :                                             ;STZ emu_ptr+1,X                ;4
(1) 1225/    D16F :                                             ;ASL                                    ;2
(1) 1225/    D16F :                                             ;ROL emu_ptr+1,X                ;6
(1) 1225/    D16F :                                             ;ASL                                    ;2
(1) 1225/    D16F :                                             ;ROL emu_ptr+1,X                ;6
(1) 1225/    D16F :                                             ;STA emu_ptr,X                  ;4                              
(1) 1225/    D16F :                                             ;LDA emu_ptr+1,X                ;4
(1) 1225/    D16F :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1225/    D16F :                                             ;STA emu_ptr+1,X                ;4
(1) 1225/    D16F :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1225/    D16F :                                             
(1) 1225/    D16F :                                             ;Method 3 - 30 cycles
(1) 1225/    D16F :                                             ;TXA                                                    ;2
(1) 1225/    D16F :                                             ;TAY                                                    ;2
(1) 1225/    D16F :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1225/    D16F :                                             ;ASL                                                    ;2
(1) 1225/    D16F :                                             ;BCS upper                                              ;2
(1) 1225/    D16F :                                             ;lower:
(1) 1225/    D16F :                                             ;       ASL                                                     ;2
(1) 1225/    D16F :                                             ;       TAX                                                     ;2
(1) 1225/    D16F :                                             ;       BCS upper_lower                         ;2
(1) 1225/    D16F :                                             ;       lower_lower:
(1) 1225/    D16F :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1225/    D16F :                                             ;       upper_lower:
(1) 1225/    D16F :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1225/    D16F :                                             ;upper:
(1) 1225/    D16F :                                             ;       ASL
(1) 1225/    D16F :                                             ;       TAX
(1) 1225/    D16F :                                             ;       BCS upper_upper
(1) 1225/    D16F :                                             ;       lower_upper:
(1) 1225/    D16F :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1225/    D16F :                                             ;       upper_upper:
(1) 1225/    D16F :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1225/    D16F :                                             ;After jump:
(1) 1225/    D16F :                                             ;TYA                                                    ;2
(1) 1225/    D16F :                                             ;TAX                                                    ;2
(1) 1225/    D16F :                                             
(1) 1225/    D16F :                                             ;Method 4 - 28 cycles
(1) 1225/    D16F :                                             ;LDA (emu_PC,X)                 ;6
(1) 1225/    D16F :                                             ;TAY                                    ;2
(1) 1225/    D16F :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1225/    D16F :                                             ;PHA                                    ;3
(1) 1225/    D16F :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1225/    D16F :                                             ;PHA                                    ;3
(1) 1225/    D16F :                                             ;RTS                                    ;6
(1) 1225/    D16F :                                             
(1) 1225/    D16F :                                             ;Method 5 - 30 cycles
(1) 1225/    D16F : A1 02                                       LDA (emu_PC,X)                  ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 362 - 1/5/2022 11:50:53


(1) 1225/    D171 : A8                                          TAY                                             ;2
(1) 1225/    D172 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1225/    D175 : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1225/    D177 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1225/    D17A : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1225/    D17C : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1225/    D17F :                                                                     
(1) 1226/    D17F :                     
(1) 1227/    D17F :                     	;0xF5 - SBC ZPX
(1) 1228/    D17F :                     	SBC_ZPX:
(1) 1229/    D17F : (MACRO)             		OP_MACRO 245, "SBC", "ZPX", "SBC_ZPX"
(1) 1229/    D17F :                                             ;TODO
(1) 1230/    D17F : (MACRO)             		NEXT_MACRO
(1) 1230/    D17F :                                             
(1) 1230/    D17F :  (MACRO-2)                                  halt
(1) 1230/    D17F : 00                                  BRK
(1) 1230/    D180 : 00                                  BRK
(1) 1230/    D181 :                                             
(1) 1230/    D181 :                                             ;Method 1 - 60 cycles
(1) 1230/    D181 :                                             ;Jump table must be page aligned!!!
(1) 1230/    D181 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1230/    D181 :                                             ;ASL                                    ;2
(1) 1230/    D181 :                                             ;STA emu_ptr,X                  ;4
(1) 1230/    D181 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1230/    D181 :                                             ;ADC #0                                 ;2
(1) 1230/    D181 :                                             ;STA emu_ptr+1,X                ;4
(1) 1230/    D181 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1230/    D181 :                                             ;STA emu_ptr2,X                 ;4
(1) 1230/    D181 :                                             ;INC emu_ptr,X                  ;6
(1) 1230/    D181 :                                             ;BCC .skip                              ;2
(1) 1230/    D181 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1230/    D181 :                                             ;.skip:
(1) 1230/    D181 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1230/    D181 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1230/    D181 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1230/    D181 :                                             
(1) 1230/    D181 :                                             ;Method 2 - 46 cycles
(1) 1230/    D181 :                                             ;Jump table must be page aligned!!!
(1) 1230/    D181 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1230/    D181 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1230/    D181 :                                             ;ASL                                    ;2
(1) 1230/    D181 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1230/    D181 :                                             ;ASL                                    ;2
(1) 1230/    D181 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1230/    D181 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1230/    D181 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1230/    D181 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1230/    D181 :                                             ;STA emu_ptr+1,X                ;4
(1) 1230/    D181 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1230/    D181 :                                             
(1) 1230/    D181 :                                             ;Method 3 - 30 cycles
(1) 1230/    D181 :                                             ;TXA                                                    ;2
(1) 1230/    D181 :                                             ;TAY                                                    ;2
(1) 1230/    D181 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1230/    D181 :                                             ;ASL                                                    ;2
(1) 1230/    D181 :                                             ;BCS upper                                              ;2
(1) 1230/    D181 :                                             ;lower:
(1) 1230/    D181 :                                             ;       ASL                                                     ;2
(1) 1230/    D181 :                                             ;       TAX                                                     ;2
(1) 1230/    D181 :                                             ;       BCS upper_lower                         ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 363 - 1/5/2022 11:50:53


(1) 1230/    D181 :                                             ;       lower_lower:
(1) 1230/    D181 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1230/    D181 :                                             ;       upper_lower:
(1) 1230/    D181 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1230/    D181 :                                             ;upper:
(1) 1230/    D181 :                                             ;       ASL
(1) 1230/    D181 :                                             ;       TAX
(1) 1230/    D181 :                                             ;       BCS upper_upper
(1) 1230/    D181 :                                             ;       lower_upper:
(1) 1230/    D181 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1230/    D181 :                                             ;       upper_upper:
(1) 1230/    D181 :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1230/    D181 :                                             ;After jump:
(1) 1230/    D181 :                                             ;TYA                                                    ;2
(1) 1230/    D181 :                                             ;TAX                                                    ;2
(1) 1230/    D181 :                                             
(1) 1230/    D181 :                                             ;Method 4 - 28 cycles
(1) 1230/    D181 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1230/    D181 :                                             ;TAY                                    ;2
(1) 1230/    D181 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1230/    D181 :                                             ;PHA                                    ;3
(1) 1230/    D181 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1230/    D181 :                                             ;PHA                                    ;3
(1) 1230/    D181 :                                             ;RTS                                    ;6
(1) 1230/    D181 :                                             
(1) 1230/    D181 :                                             ;Method 5 - 30 cycles
(1) 1230/    D181 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1230/    D183 : A8                                          TAY                                             ;2
(1) 1230/    D184 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1230/    D187 : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1230/    D189 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1230/    D18C : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1230/    D18E : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1230/    D191 :                                                                     
(1) 1231/    D191 :                     
(1) 1232/    D191 :                     	;0xF6 - INC ZPX
(1) 1233/    D191 :                     	INC_ZPX:
(1) 1234/    D191 : (MACRO)             		OP_MACRO 246, "INC", "ZPX", "INC_ZPX"
(1) 1234/    D191 :                                             ;TODO
(1) 1235/    D191 : (MACRO)             		NEXT_MACRO
(1) 1235/    D191 :                                             
(1) 1235/    D191 :  (MACRO-2)                                  halt
(1) 1235/    D191 : 00                                  BRK
(1) 1235/    D192 : 00                                  BRK
(1) 1235/    D193 :                                             
(1) 1235/    D193 :                                             ;Method 1 - 60 cycles
(1) 1235/    D193 :                                             ;Jump table must be page aligned!!!
(1) 1235/    D193 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1235/    D193 :                                             ;ASL                                    ;2
(1) 1235/    D193 :                                             ;STA emu_ptr,X                  ;4
(1) 1235/    D193 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1235/    D193 :                                             ;ADC #0                                 ;2
(1) 1235/    D193 :                                             ;STA emu_ptr+1,X                ;4
(1) 1235/    D193 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1235/    D193 :                                             ;STA emu_ptr2,X                 ;4
(1) 1235/    D193 :                                             ;INC emu_ptr,X                  ;6
(1) 1235/    D193 :                                             ;BCC .skip                              ;2
(1) 1235/    D193 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1235/    D193 :                                             ;.skip:
(1) 1235/    D193 :                                             ;LDA (emu_ptr,X)                ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 364 - 1/5/2022 11:50:53


(1) 1235/    D193 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1235/    D193 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1235/    D193 :                                             
(1) 1235/    D193 :                                             ;Method 2 - 46 cycles
(1) 1235/    D193 :                                             ;Jump table must be page aligned!!!
(1) 1235/    D193 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1235/    D193 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1235/    D193 :                                             ;ASL                                    ;2
(1) 1235/    D193 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1235/    D193 :                                             ;ASL                                    ;2
(1) 1235/    D193 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1235/    D193 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1235/    D193 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1235/    D193 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1235/    D193 :                                             ;STA emu_ptr+1,X                ;4
(1) 1235/    D193 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1235/    D193 :                                             
(1) 1235/    D193 :                                             ;Method 3 - 30 cycles
(1) 1235/    D193 :                                             ;TXA                                                    ;2
(1) 1235/    D193 :                                             ;TAY                                                    ;2
(1) 1235/    D193 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1235/    D193 :                                             ;ASL                                                    ;2
(1) 1235/    D193 :                                             ;BCS upper                                              ;2
(1) 1235/    D193 :                                             ;lower:
(1) 1235/    D193 :                                             ;       ASL                                                     ;2
(1) 1235/    D193 :                                             ;       TAX                                                     ;2
(1) 1235/    D193 :                                             ;       BCS upper_lower                         ;2
(1) 1235/    D193 :                                             ;       lower_lower:
(1) 1235/    D193 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1235/    D193 :                                             ;       upper_lower:
(1) 1235/    D193 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1235/    D193 :                                             ;upper:
(1) 1235/    D193 :                                             ;       ASL
(1) 1235/    D193 :                                             ;       TAX
(1) 1235/    D193 :                                             ;       BCS upper_upper
(1) 1235/    D193 :                                             ;       lower_upper:
(1) 1235/    D193 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1235/    D193 :                                             ;       upper_upper:
(1) 1235/    D193 :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1235/    D193 :                                             ;After jump:
(1) 1235/    D193 :                                             ;TYA                                                    ;2
(1) 1235/    D193 :                                             ;TAX                                                    ;2
(1) 1235/    D193 :                                             
(1) 1235/    D193 :                                             ;Method 4 - 28 cycles
(1) 1235/    D193 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1235/    D193 :                                             ;TAY                                    ;2
(1) 1235/    D193 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1235/    D193 :                                             ;PHA                                    ;3
(1) 1235/    D193 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1235/    D193 :                                             ;PHA                                    ;3
(1) 1235/    D193 :                                             ;RTS                                    ;6
(1) 1235/    D193 :                                             
(1) 1235/    D193 :                                             ;Method 5 - 30 cycles
(1) 1235/    D193 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1235/    D195 : A8                                          TAY                                             ;2
(1) 1235/    D196 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1235/    D199 : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1235/    D19B : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1235/    D19E : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1235/    D1A0 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 365 - 1/5/2022 11:50:53


(1) 1235/    D1A3 :                                                                     
(1) 1236/    D1A3 :                     
(1) 1237/    D1A3 :                     	;0xF7 - NOP
(1) 1238/    D1A3 :                     	NOP_0xF7:
(1) 1239/    D1A3 : (MACRO)             		OP_MACRO 247, "NOP", "IMP", "NOP_0xF7"
(1) 1239/    D1A3 :                                             ;TODO
(1) 1240/    D1A3 : (MACRO)             		NEXT_MACRO
(1) 1240/    D1A3 :                                             
(1) 1240/    D1A3 :  (MACRO-2)                                  halt
(1) 1240/    D1A3 : 00                                  BRK
(1) 1240/    D1A4 : 00                                  BRK
(1) 1240/    D1A5 :                                             
(1) 1240/    D1A5 :                                             ;Method 1 - 60 cycles
(1) 1240/    D1A5 :                                             ;Jump table must be page aligned!!!
(1) 1240/    D1A5 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1240/    D1A5 :                                             ;ASL                                    ;2
(1) 1240/    D1A5 :                                             ;STA emu_ptr,X                  ;4
(1) 1240/    D1A5 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1240/    D1A5 :                                             ;ADC #0                                 ;2
(1) 1240/    D1A5 :                                             ;STA emu_ptr+1,X                ;4
(1) 1240/    D1A5 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1240/    D1A5 :                                             ;STA emu_ptr2,X                 ;4
(1) 1240/    D1A5 :                                             ;INC emu_ptr,X                  ;6
(1) 1240/    D1A5 :                                             ;BCC .skip                              ;2
(1) 1240/    D1A5 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1240/    D1A5 :                                             ;.skip:
(1) 1240/    D1A5 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1240/    D1A5 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1240/    D1A5 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1240/    D1A5 :                                             
(1) 1240/    D1A5 :                                             ;Method 2 - 46 cycles
(1) 1240/    D1A5 :                                             ;Jump table must be page aligned!!!
(1) 1240/    D1A5 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1240/    D1A5 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1240/    D1A5 :                                             ;ASL                                    ;2
(1) 1240/    D1A5 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1240/    D1A5 :                                             ;ASL                                    ;2
(1) 1240/    D1A5 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1240/    D1A5 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1240/    D1A5 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1240/    D1A5 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1240/    D1A5 :                                             ;STA emu_ptr+1,X                ;4
(1) 1240/    D1A5 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1240/    D1A5 :                                             
(1) 1240/    D1A5 :                                             ;Method 3 - 30 cycles
(1) 1240/    D1A5 :                                             ;TXA                                                    ;2
(1) 1240/    D1A5 :                                             ;TAY                                                    ;2
(1) 1240/    D1A5 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1240/    D1A5 :                                             ;ASL                                                    ;2
(1) 1240/    D1A5 :                                             ;BCS upper                                              ;2
(1) 1240/    D1A5 :                                             ;lower:
(1) 1240/    D1A5 :                                             ;       ASL                                                     ;2
(1) 1240/    D1A5 :                                             ;       TAX                                                     ;2
(1) 1240/    D1A5 :                                             ;       BCS upper_lower                         ;2
(1) 1240/    D1A5 :                                             ;       lower_lower:
(1) 1240/    D1A5 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1240/    D1A5 :                                             ;       upper_lower:
(1) 1240/    D1A5 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1240/    D1A5 :                                             ;upper:
(1) 1240/    D1A5 :                                             ;       ASL
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 366 - 1/5/2022 11:50:53


(1) 1240/    D1A5 :                                             ;       TAX
(1) 1240/    D1A5 :                                             ;       BCS upper_upper
(1) 1240/    D1A5 :                                             ;       lower_upper:
(1) 1240/    D1A5 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1240/    D1A5 :                                             ;       upper_upper:
(1) 1240/    D1A5 :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1240/    D1A5 :                                             ;After jump:
(1) 1240/    D1A5 :                                             ;TYA                                                    ;2
(1) 1240/    D1A5 :                                             ;TAX                                                    ;2
(1) 1240/    D1A5 :                                             
(1) 1240/    D1A5 :                                             ;Method 4 - 28 cycles
(1) 1240/    D1A5 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1240/    D1A5 :                                             ;TAY                                    ;2
(1) 1240/    D1A5 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1240/    D1A5 :                                             ;PHA                                    ;3
(1) 1240/    D1A5 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1240/    D1A5 :                                             ;PHA                                    ;3
(1) 1240/    D1A5 :                                             ;RTS                                    ;6
(1) 1240/    D1A5 :                                             
(1) 1240/    D1A5 :                                             ;Method 5 - 30 cycles
(1) 1240/    D1A5 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1240/    D1A7 : A8                                          TAY                                             ;2
(1) 1240/    D1A8 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1240/    D1AB : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1240/    D1AD : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1240/    D1B0 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1240/    D1B2 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1240/    D1B5 :                                                                     
(1) 1241/    D1B5 :                     
(1) 1242/    D1B5 :                     	;0xF8 - SED IMP
(1) 1243/    D1B5 :                     	SED_IMP:
(1) 1244/    D1B5 : (MACRO)             		OP_MACRO 248, "SED", "IMP", "SED_IMP"
(1) 1244/    D1B5 :                                             ;TODO
(1) 1245/    D1B5 : (MACRO)             		NEXT_MACRO
(1) 1245/    D1B5 :                                             
(1) 1245/    D1B5 :  (MACRO-2)                                  halt
(1) 1245/    D1B5 : 00                                  BRK
(1) 1245/    D1B6 : 00                                  BRK
(1) 1245/    D1B7 :                                             
(1) 1245/    D1B7 :                                             ;Method 1 - 60 cycles
(1) 1245/    D1B7 :                                             ;Jump table must be page aligned!!!
(1) 1245/    D1B7 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1245/    D1B7 :                                             ;ASL                                    ;2
(1) 1245/    D1B7 :                                             ;STA emu_ptr,X                  ;4
(1) 1245/    D1B7 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1245/    D1B7 :                                             ;ADC #0                                 ;2
(1) 1245/    D1B7 :                                             ;STA emu_ptr+1,X                ;4
(1) 1245/    D1B7 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1245/    D1B7 :                                             ;STA emu_ptr2,X                 ;4
(1) 1245/    D1B7 :                                             ;INC emu_ptr,X                  ;6
(1) 1245/    D1B7 :                                             ;BCC .skip                              ;2
(1) 1245/    D1B7 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1245/    D1B7 :                                             ;.skip:
(1) 1245/    D1B7 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1245/    D1B7 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1245/    D1B7 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1245/    D1B7 :                                             
(1) 1245/    D1B7 :                                             ;Method 2 - 46 cycles
(1) 1245/    D1B7 :                                             ;Jump table must be page aligned!!!
(1) 1245/    D1B7 :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 367 - 1/5/2022 11:50:53


(1) 1245/    D1B7 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1245/    D1B7 :                                             ;ASL                                    ;2
(1) 1245/    D1B7 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1245/    D1B7 :                                             ;ASL                                    ;2
(1) 1245/    D1B7 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1245/    D1B7 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1245/    D1B7 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1245/    D1B7 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1245/    D1B7 :                                             ;STA emu_ptr+1,X                ;4
(1) 1245/    D1B7 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1245/    D1B7 :                                             
(1) 1245/    D1B7 :                                             ;Method 3 - 30 cycles
(1) 1245/    D1B7 :                                             ;TXA                                                    ;2
(1) 1245/    D1B7 :                                             ;TAY                                                    ;2
(1) 1245/    D1B7 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1245/    D1B7 :                                             ;ASL                                                    ;2
(1) 1245/    D1B7 :                                             ;BCS upper                                              ;2
(1) 1245/    D1B7 :                                             ;lower:
(1) 1245/    D1B7 :                                             ;       ASL                                                     ;2
(1) 1245/    D1B7 :                                             ;       TAX                                                     ;2
(1) 1245/    D1B7 :                                             ;       BCS upper_lower                         ;2
(1) 1245/    D1B7 :                                             ;       lower_lower:
(1) 1245/    D1B7 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1245/    D1B7 :                                             ;       upper_lower:
(1) 1245/    D1B7 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1245/    D1B7 :                                             ;upper:
(1) 1245/    D1B7 :                                             ;       ASL
(1) 1245/    D1B7 :                                             ;       TAX
(1) 1245/    D1B7 :                                             ;       BCS upper_upper
(1) 1245/    D1B7 :                                             ;       lower_upper:
(1) 1245/    D1B7 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1245/    D1B7 :                                             ;       upper_upper:
(1) 1245/    D1B7 :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1245/    D1B7 :                                             ;After jump:
(1) 1245/    D1B7 :                                             ;TYA                                                    ;2
(1) 1245/    D1B7 :                                             ;TAX                                                    ;2
(1) 1245/    D1B7 :                                             
(1) 1245/    D1B7 :                                             ;Method 4 - 28 cycles
(1) 1245/    D1B7 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1245/    D1B7 :                                             ;TAY                                    ;2
(1) 1245/    D1B7 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1245/    D1B7 :                                             ;PHA                                    ;3
(1) 1245/    D1B7 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1245/    D1B7 :                                             ;PHA                                    ;3
(1) 1245/    D1B7 :                                             ;RTS                                    ;6
(1) 1245/    D1B7 :                                             
(1) 1245/    D1B7 :                                             ;Method 5 - 30 cycles
(1) 1245/    D1B7 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1245/    D1B9 : A8                                          TAY                                             ;2
(1) 1245/    D1BA : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1245/    D1BD : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1245/    D1BF : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1245/    D1C2 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1245/    D1C4 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1245/    D1C7 :                                                                     
(1) 1246/    D1C7 :                     
(1) 1247/    D1C7 :                     	;0xF9 - SBC ABSY
(1) 1248/    D1C7 :                     	SBC_ABSY:
(1) 1249/    D1C7 : (MACRO)             		OP_MACRO 249, "SBC", "ABSY", "SBC_ABSY"
(1) 1249/    D1C7 :                                             ;TODO
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 368 - 1/5/2022 11:50:53


(1) 1250/    D1C7 : (MACRO)             		NEXT_MACRO
(1) 1250/    D1C7 :                                             
(1) 1250/    D1C7 :  (MACRO-2)                                  halt
(1) 1250/    D1C7 : 00                                  BRK
(1) 1250/    D1C8 : 00                                  BRK
(1) 1250/    D1C9 :                                             
(1) 1250/    D1C9 :                                             ;Method 1 - 60 cycles
(1) 1250/    D1C9 :                                             ;Jump table must be page aligned!!!
(1) 1250/    D1C9 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1250/    D1C9 :                                             ;ASL                                    ;2
(1) 1250/    D1C9 :                                             ;STA emu_ptr,X                  ;4
(1) 1250/    D1C9 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1250/    D1C9 :                                             ;ADC #0                                 ;2
(1) 1250/    D1C9 :                                             ;STA emu_ptr+1,X                ;4
(1) 1250/    D1C9 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1250/    D1C9 :                                             ;STA emu_ptr2,X                 ;4
(1) 1250/    D1C9 :                                             ;INC emu_ptr,X                  ;6
(1) 1250/    D1C9 :                                             ;BCC .skip                              ;2
(1) 1250/    D1C9 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1250/    D1C9 :                                             ;.skip:
(1) 1250/    D1C9 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1250/    D1C9 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1250/    D1C9 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1250/    D1C9 :                                             
(1) 1250/    D1C9 :                                             ;Method 2 - 46 cycles
(1) 1250/    D1C9 :                                             ;Jump table must be page aligned!!!
(1) 1250/    D1C9 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1250/    D1C9 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1250/    D1C9 :                                             ;ASL                                    ;2
(1) 1250/    D1C9 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1250/    D1C9 :                                             ;ASL                                    ;2
(1) 1250/    D1C9 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1250/    D1C9 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1250/    D1C9 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1250/    D1C9 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1250/    D1C9 :                                             ;STA emu_ptr+1,X                ;4
(1) 1250/    D1C9 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1250/    D1C9 :                                             
(1) 1250/    D1C9 :                                             ;Method 3 - 30 cycles
(1) 1250/    D1C9 :                                             ;TXA                                                    ;2
(1) 1250/    D1C9 :                                             ;TAY                                                    ;2
(1) 1250/    D1C9 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1250/    D1C9 :                                             ;ASL                                                    ;2
(1) 1250/    D1C9 :                                             ;BCS upper                                              ;2
(1) 1250/    D1C9 :                                             ;lower:
(1) 1250/    D1C9 :                                             ;       ASL                                                     ;2
(1) 1250/    D1C9 :                                             ;       TAX                                                     ;2
(1) 1250/    D1C9 :                                             ;       BCS upper_lower                         ;2
(1) 1250/    D1C9 :                                             ;       lower_lower:
(1) 1250/    D1C9 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1250/    D1C9 :                                             ;       upper_lower:
(1) 1250/    D1C9 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1250/    D1C9 :                                             ;upper:
(1) 1250/    D1C9 :                                             ;       ASL
(1) 1250/    D1C9 :                                             ;       TAX
(1) 1250/    D1C9 :                                             ;       BCS upper_upper
(1) 1250/    D1C9 :                                             ;       lower_upper:
(1) 1250/    D1C9 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1250/    D1C9 :                                             ;       upper_upper:
(1) 1250/    D1C9 :                                             ;               JMP (JUMP_TABLE4,X)
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 369 - 1/5/2022 11:50:53


(1) 1250/    D1C9 :                                             ;After jump:
(1) 1250/    D1C9 :                                             ;TYA                                                    ;2
(1) 1250/    D1C9 :                                             ;TAX                                                    ;2
(1) 1250/    D1C9 :                                             
(1) 1250/    D1C9 :                                             ;Method 4 - 28 cycles
(1) 1250/    D1C9 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1250/    D1C9 :                                             ;TAY                                    ;2
(1) 1250/    D1C9 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1250/    D1C9 :                                             ;PHA                                    ;3
(1) 1250/    D1C9 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1250/    D1C9 :                                             ;PHA                                    ;3
(1) 1250/    D1C9 :                                             ;RTS                                    ;6
(1) 1250/    D1C9 :                                             
(1) 1250/    D1C9 :                                             ;Method 5 - 30 cycles
(1) 1250/    D1C9 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1250/    D1CB : A8                                          TAY                                             ;2
(1) 1250/    D1CC : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1250/    D1CF : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1250/    D1D1 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1250/    D1D4 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1250/    D1D6 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1250/    D1D9 :                                                                     
(1) 1251/    D1D9 :                     
(1) 1252/    D1D9 :                     	;0xFA - NOP
(1) 1253/    D1D9 :                     	NOP_0xFA:
(1) 1254/    D1D9 : (MACRO)             		OP_MACRO 250, "NOP", "IMP", "NOP_0xFA"
(1) 1254/    D1D9 :                                             ;TODO
(1) 1255/    D1D9 : (MACRO)             		NEXT_MACRO
(1) 1255/    D1D9 :                                             
(1) 1255/    D1D9 :  (MACRO-2)                                  halt
(1) 1255/    D1D9 : 00                                  BRK
(1) 1255/    D1DA : 00                                  BRK
(1) 1255/    D1DB :                                             
(1) 1255/    D1DB :                                             ;Method 1 - 60 cycles
(1) 1255/    D1DB :                                             ;Jump table must be page aligned!!!
(1) 1255/    D1DB :                                             ;LDA (emu_PC,X)                 ;6
(1) 1255/    D1DB :                                             ;ASL                                    ;2
(1) 1255/    D1DB :                                             ;STA emu_ptr,X                  ;4
(1) 1255/    D1DB :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1255/    D1DB :                                             ;ADC #0                                 ;2
(1) 1255/    D1DB :                                             ;STA emu_ptr+1,X                ;4
(1) 1255/    D1DB :                                             ;LDA (emu_ptr,X)                ;6
(1) 1255/    D1DB :                                             ;STA emu_ptr2,X                 ;4
(1) 1255/    D1DB :                                             ;INC emu_ptr,X                  ;6
(1) 1255/    D1DB :                                             ;BCC .skip                              ;2
(1) 1255/    D1DB :                                             ;       INC emu_ptr+1,X         ;6
(1) 1255/    D1DB :                                             ;.skip:
(1) 1255/    D1DB :                                             ;LDA (emu_ptr,X)                ;6
(1) 1255/    D1DB :                                             ;STA emu_ptr2+1,X               ;4
(1) 1255/    D1DB :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1255/    D1DB :                                             
(1) 1255/    D1DB :                                             ;Method 2 - 46 cycles
(1) 1255/    D1DB :                                             ;Jump table must be page aligned!!!
(1) 1255/    D1DB :                                             ;LDA (emu_PC,X)                 ;6
(1) 1255/    D1DB :                                             ;STZ emu_ptr+1,X                ;4
(1) 1255/    D1DB :                                             ;ASL                                    ;2
(1) 1255/    D1DB :                                             ;ROL emu_ptr+1,X                ;6
(1) 1255/    D1DB :                                             ;ASL                                    ;2
(1) 1255/    D1DB :                                             ;ROL emu_ptr+1,X                ;6
(1) 1255/    D1DB :                                             ;STA emu_ptr,X                  ;4                              
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 370 - 1/5/2022 11:50:53


(1) 1255/    D1DB :                                             ;LDA emu_ptr+1,X                ;4
(1) 1255/    D1DB :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1255/    D1DB :                                             ;STA emu_ptr+1,X                ;4
(1) 1255/    D1DB :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1255/    D1DB :                                             
(1) 1255/    D1DB :                                             ;Method 3 - 30 cycles
(1) 1255/    D1DB :                                             ;TXA                                                    ;2
(1) 1255/    D1DB :                                             ;TAY                                                    ;2
(1) 1255/    D1DB :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1255/    D1DB :                                             ;ASL                                                    ;2
(1) 1255/    D1DB :                                             ;BCS upper                                              ;2
(1) 1255/    D1DB :                                             ;lower:
(1) 1255/    D1DB :                                             ;       ASL                                                     ;2
(1) 1255/    D1DB :                                             ;       TAX                                                     ;2
(1) 1255/    D1DB :                                             ;       BCS upper_lower                         ;2
(1) 1255/    D1DB :                                             ;       lower_lower:
(1) 1255/    D1DB :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1255/    D1DB :                                             ;       upper_lower:
(1) 1255/    D1DB :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1255/    D1DB :                                             ;upper:
(1) 1255/    D1DB :                                             ;       ASL
(1) 1255/    D1DB :                                             ;       TAX
(1) 1255/    D1DB :                                             ;       BCS upper_upper
(1) 1255/    D1DB :                                             ;       lower_upper:
(1) 1255/    D1DB :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1255/    D1DB :                                             ;       upper_upper:
(1) 1255/    D1DB :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1255/    D1DB :                                             ;After jump:
(1) 1255/    D1DB :                                             ;TYA                                                    ;2
(1) 1255/    D1DB :                                             ;TAX                                                    ;2
(1) 1255/    D1DB :                                             
(1) 1255/    D1DB :                                             ;Method 4 - 28 cycles
(1) 1255/    D1DB :                                             ;LDA (emu_PC,X)                 ;6
(1) 1255/    D1DB :                                             ;TAY                                    ;2
(1) 1255/    D1DB :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1255/    D1DB :                                             ;PHA                                    ;3
(1) 1255/    D1DB :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1255/    D1DB :                                             ;PHA                                    ;3
(1) 1255/    D1DB :                                             ;RTS                                    ;6
(1) 1255/    D1DB :                                             
(1) 1255/    D1DB :                                             ;Method 5 - 30 cycles
(1) 1255/    D1DB : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1255/    D1DD : A8                                          TAY                                             ;2
(1) 1255/    D1DE : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1255/    D1E1 : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1255/    D1E3 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1255/    D1E6 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1255/    D1E8 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1255/    D1EB :                                                                     
(1) 1256/    D1EB :                     
(1) 1257/    D1EB :                     	;0xFB - NOP
(1) 1258/    D1EB :                     	NOP_0xFB:
(1) 1259/    D1EB : (MACRO)             		OP_MACRO 251, "NOP", "IMP", "NOP_0xFB"
(1) 1259/    D1EB :                                             ;TODO
(1) 1260/    D1EB : (MACRO)             		NEXT_MACRO
(1) 1260/    D1EB :                                             
(1) 1260/    D1EB :  (MACRO-2)                                  halt
(1) 1260/    D1EB : 00                                  BRK
(1) 1260/    D1EC : 00                                  BRK
(1) 1260/    D1ED :                                             
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 371 - 1/5/2022 11:50:53


(1) 1260/    D1ED :                                             ;Method 1 - 60 cycles
(1) 1260/    D1ED :                                             ;Jump table must be page aligned!!!
(1) 1260/    D1ED :                                             ;LDA (emu_PC,X)                 ;6
(1) 1260/    D1ED :                                             ;ASL                                    ;2
(1) 1260/    D1ED :                                             ;STA emu_ptr,X                  ;4
(1) 1260/    D1ED :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1260/    D1ED :                                             ;ADC #0                                 ;2
(1) 1260/    D1ED :                                             ;STA emu_ptr+1,X                ;4
(1) 1260/    D1ED :                                             ;LDA (emu_ptr,X)                ;6
(1) 1260/    D1ED :                                             ;STA emu_ptr2,X                 ;4
(1) 1260/    D1ED :                                             ;INC emu_ptr,X                  ;6
(1) 1260/    D1ED :                                             ;BCC .skip                              ;2
(1) 1260/    D1ED :                                             ;       INC emu_ptr+1,X         ;6
(1) 1260/    D1ED :                                             ;.skip:
(1) 1260/    D1ED :                                             ;LDA (emu_ptr,X)                ;6
(1) 1260/    D1ED :                                             ;STA emu_ptr2+1,X               ;4
(1) 1260/    D1ED :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1260/    D1ED :                                             
(1) 1260/    D1ED :                                             ;Method 2 - 46 cycles
(1) 1260/    D1ED :                                             ;Jump table must be page aligned!!!
(1) 1260/    D1ED :                                             ;LDA (emu_PC,X)                 ;6
(1) 1260/    D1ED :                                             ;STZ emu_ptr+1,X                ;4
(1) 1260/    D1ED :                                             ;ASL                                    ;2
(1) 1260/    D1ED :                                             ;ROL emu_ptr+1,X                ;6
(1) 1260/    D1ED :                                             ;ASL                                    ;2
(1) 1260/    D1ED :                                             ;ROL emu_ptr+1,X                ;6
(1) 1260/    D1ED :                                             ;STA emu_ptr,X                  ;4                              
(1) 1260/    D1ED :                                             ;LDA emu_ptr+1,X                ;4
(1) 1260/    D1ED :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1260/    D1ED :                                             ;STA emu_ptr+1,X                ;4
(1) 1260/    D1ED :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1260/    D1ED :                                             
(1) 1260/    D1ED :                                             ;Method 3 - 30 cycles
(1) 1260/    D1ED :                                             ;TXA                                                    ;2
(1) 1260/    D1ED :                                             ;TAY                                                    ;2
(1) 1260/    D1ED :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1260/    D1ED :                                             ;ASL                                                    ;2
(1) 1260/    D1ED :                                             ;BCS upper                                              ;2
(1) 1260/    D1ED :                                             ;lower:
(1) 1260/    D1ED :                                             ;       ASL                                                     ;2
(1) 1260/    D1ED :                                             ;       TAX                                                     ;2
(1) 1260/    D1ED :                                             ;       BCS upper_lower                         ;2
(1) 1260/    D1ED :                                             ;       lower_lower:
(1) 1260/    D1ED :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1260/    D1ED :                                             ;       upper_lower:
(1) 1260/    D1ED :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1260/    D1ED :                                             ;upper:
(1) 1260/    D1ED :                                             ;       ASL
(1) 1260/    D1ED :                                             ;       TAX
(1) 1260/    D1ED :                                             ;       BCS upper_upper
(1) 1260/    D1ED :                                             ;       lower_upper:
(1) 1260/    D1ED :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1260/    D1ED :                                             ;       upper_upper:
(1) 1260/    D1ED :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1260/    D1ED :                                             ;After jump:
(1) 1260/    D1ED :                                             ;TYA                                                    ;2
(1) 1260/    D1ED :                                             ;TAX                                                    ;2
(1) 1260/    D1ED :                                             
(1) 1260/    D1ED :                                             ;Method 4 - 28 cycles
(1) 1260/    D1ED :                                             ;LDA (emu_PC,X)                 ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 372 - 1/5/2022 11:50:53


(1) 1260/    D1ED :                                             ;TAY                                    ;2
(1) 1260/    D1ED :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1260/    D1ED :                                             ;PHA                                    ;3
(1) 1260/    D1ED :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1260/    D1ED :                                             ;PHA                                    ;3
(1) 1260/    D1ED :                                             ;RTS                                    ;6
(1) 1260/    D1ED :                                             
(1) 1260/    D1ED :                                             ;Method 5 - 30 cycles
(1) 1260/    D1ED : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1260/    D1EF : A8                                          TAY                                             ;2
(1) 1260/    D1F0 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1260/    D1F3 : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1260/    D1F5 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1260/    D1F8 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1260/    D1FA : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1260/    D1FD :                                                                     
(1) 1261/    D1FD :                     
(1) 1262/    D1FD :                     	;0xFC - NOP
(1) 1263/    D1FD :                     	NOP_0xFC:
(1) 1264/    D1FD : (MACRO)             		OP_MACRO 252, "NOP", "IMP", "NOP_0xFC"
(1) 1264/    D1FD :                                             ;TODO
(1) 1265/    D1FD : (MACRO)             		NEXT_MACRO
(1) 1265/    D1FD :                                             
(1) 1265/    D1FD :  (MACRO-2)                                  halt
(1) 1265/    D1FD : 00                                  BRK
(1) 1265/    D1FE : 00                                  BRK
(1) 1265/    D1FF :                                             
(1) 1265/    D1FF :                                             ;Method 1 - 60 cycles
(1) 1265/    D1FF :                                             ;Jump table must be page aligned!!!
(1) 1265/    D1FF :                                             ;LDA (emu_PC,X)                 ;6
(1) 1265/    D1FF :                                             ;ASL                                    ;2
(1) 1265/    D1FF :                                             ;STA emu_ptr,X                  ;4
(1) 1265/    D1FF :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1265/    D1FF :                                             ;ADC #0                                 ;2
(1) 1265/    D1FF :                                             ;STA emu_ptr+1,X                ;4
(1) 1265/    D1FF :                                             ;LDA (emu_ptr,X)                ;6
(1) 1265/    D1FF :                                             ;STA emu_ptr2,X                 ;4
(1) 1265/    D1FF :                                             ;INC emu_ptr,X                  ;6
(1) 1265/    D1FF :                                             ;BCC .skip                              ;2
(1) 1265/    D1FF :                                             ;       INC emu_ptr+1,X         ;6
(1) 1265/    D1FF :                                             ;.skip:
(1) 1265/    D1FF :                                             ;LDA (emu_ptr,X)                ;6
(1) 1265/    D1FF :                                             ;STA emu_ptr2+1,X               ;4
(1) 1265/    D1FF :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1265/    D1FF :                                             
(1) 1265/    D1FF :                                             ;Method 2 - 46 cycles
(1) 1265/    D1FF :                                             ;Jump table must be page aligned!!!
(1) 1265/    D1FF :                                             ;LDA (emu_PC,X)                 ;6
(1) 1265/    D1FF :                                             ;STZ emu_ptr+1,X                ;4
(1) 1265/    D1FF :                                             ;ASL                                    ;2
(1) 1265/    D1FF :                                             ;ROL emu_ptr+1,X                ;6
(1) 1265/    D1FF :                                             ;ASL                                    ;2
(1) 1265/    D1FF :                                             ;ROL emu_ptr+1,X                ;6
(1) 1265/    D1FF :                                             ;STA emu_ptr,X                  ;4                              
(1) 1265/    D1FF :                                             ;LDA emu_ptr+1,X                ;4
(1) 1265/    D1FF :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1265/    D1FF :                                             ;STA emu_ptr+1,X                ;4
(1) 1265/    D1FF :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1265/    D1FF :                                             
(1) 1265/    D1FF :                                             ;Method 3 - 30 cycles
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 373 - 1/5/2022 11:50:53


(1) 1265/    D1FF :                                             ;TXA                                                    ;2
(1) 1265/    D1FF :                                             ;TAY                                                    ;2
(1) 1265/    D1FF :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1265/    D1FF :                                             ;ASL                                                    ;2
(1) 1265/    D1FF :                                             ;BCS upper                                              ;2
(1) 1265/    D1FF :                                             ;lower:
(1) 1265/    D1FF :                                             ;       ASL                                                     ;2
(1) 1265/    D1FF :                                             ;       TAX                                                     ;2
(1) 1265/    D1FF :                                             ;       BCS upper_lower                         ;2
(1) 1265/    D1FF :                                             ;       lower_lower:
(1) 1265/    D1FF :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1265/    D1FF :                                             ;       upper_lower:
(1) 1265/    D1FF :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1265/    D1FF :                                             ;upper:
(1) 1265/    D1FF :                                             ;       ASL
(1) 1265/    D1FF :                                             ;       TAX
(1) 1265/    D1FF :                                             ;       BCS upper_upper
(1) 1265/    D1FF :                                             ;       lower_upper:
(1) 1265/    D1FF :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1265/    D1FF :                                             ;       upper_upper:
(1) 1265/    D1FF :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1265/    D1FF :                                             ;After jump:
(1) 1265/    D1FF :                                             ;TYA                                                    ;2
(1) 1265/    D1FF :                                             ;TAX                                                    ;2
(1) 1265/    D1FF :                                             
(1) 1265/    D1FF :                                             ;Method 4 - 28 cycles
(1) 1265/    D1FF :                                             ;LDA (emu_PC,X)                 ;6
(1) 1265/    D1FF :                                             ;TAY                                    ;2
(1) 1265/    D1FF :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1265/    D1FF :                                             ;PHA                                    ;3
(1) 1265/    D1FF :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1265/    D1FF :                                             ;PHA                                    ;3
(1) 1265/    D1FF :                                             ;RTS                                    ;6
(1) 1265/    D1FF :                                             
(1) 1265/    D1FF :                                             ;Method 5 - 30 cycles
(1) 1265/    D1FF : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1265/    D201 : A8                                          TAY                                             ;2
(1) 1265/    D202 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1265/    D205 : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1265/    D207 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1265/    D20A : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1265/    D20C : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1265/    D20F :                                                                     
(1) 1266/    D20F :                     
(1) 1267/    D20F :                     	;0xFD - SBC ABSX
(1) 1268/    D20F :                     	SBC_ABSX:
(1) 1269/    D20F : (MACRO)             		OP_MACRO 253, "SBC", "ABSX", "SBC_ABSX"
(1) 1269/    D20F :                                             ;TODO
(1) 1270/    D20F : (MACRO)             		NEXT_MACRO
(1) 1270/    D20F :                                             
(1) 1270/    D20F :  (MACRO-2)                                  halt
(1) 1270/    D20F : 00                                  BRK
(1) 1270/    D210 : 00                                  BRK
(1) 1270/    D211 :                                             
(1) 1270/    D211 :                                             ;Method 1 - 60 cycles
(1) 1270/    D211 :                                             ;Jump table must be page aligned!!!
(1) 1270/    D211 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1270/    D211 :                                             ;ASL                                    ;2
(1) 1270/    D211 :                                             ;STA emu_ptr,X                  ;4
(1) 1270/    D211 :                                             ;LDA #hi(JUMP_TABLE)    ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 374 - 1/5/2022 11:50:53


(1) 1270/    D211 :                                             ;ADC #0                                 ;2
(1) 1270/    D211 :                                             ;STA emu_ptr+1,X                ;4
(1) 1270/    D211 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1270/    D211 :                                             ;STA emu_ptr2,X                 ;4
(1) 1270/    D211 :                                             ;INC emu_ptr,X                  ;6
(1) 1270/    D211 :                                             ;BCC .skip                              ;2
(1) 1270/    D211 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1270/    D211 :                                             ;.skip:
(1) 1270/    D211 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1270/    D211 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1270/    D211 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1270/    D211 :                                             
(1) 1270/    D211 :                                             ;Method 2 - 46 cycles
(1) 1270/    D211 :                                             ;Jump table must be page aligned!!!
(1) 1270/    D211 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1270/    D211 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1270/    D211 :                                             ;ASL                                    ;2
(1) 1270/    D211 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1270/    D211 :                                             ;ASL                                    ;2
(1) 1270/    D211 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1270/    D211 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1270/    D211 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1270/    D211 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1270/    D211 :                                             ;STA emu_ptr+1,X                ;4
(1) 1270/    D211 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1270/    D211 :                                             
(1) 1270/    D211 :                                             ;Method 3 - 30 cycles
(1) 1270/    D211 :                                             ;TXA                                                    ;2
(1) 1270/    D211 :                                             ;TAY                                                    ;2
(1) 1270/    D211 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1270/    D211 :                                             ;ASL                                                    ;2
(1) 1270/    D211 :                                             ;BCS upper                                              ;2
(1) 1270/    D211 :                                             ;lower:
(1) 1270/    D211 :                                             ;       ASL                                                     ;2
(1) 1270/    D211 :                                             ;       TAX                                                     ;2
(1) 1270/    D211 :                                             ;       BCS upper_lower                         ;2
(1) 1270/    D211 :                                             ;       lower_lower:
(1) 1270/    D211 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1270/    D211 :                                             ;       upper_lower:
(1) 1270/    D211 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1270/    D211 :                                             ;upper:
(1) 1270/    D211 :                                             ;       ASL
(1) 1270/    D211 :                                             ;       TAX
(1) 1270/    D211 :                                             ;       BCS upper_upper
(1) 1270/    D211 :                                             ;       lower_upper:
(1) 1270/    D211 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1270/    D211 :                                             ;       upper_upper:
(1) 1270/    D211 :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1270/    D211 :                                             ;After jump:
(1) 1270/    D211 :                                             ;TYA                                                    ;2
(1) 1270/    D211 :                                             ;TAX                                                    ;2
(1) 1270/    D211 :                                             
(1) 1270/    D211 :                                             ;Method 4 - 28 cycles
(1) 1270/    D211 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1270/    D211 :                                             ;TAY                                    ;2
(1) 1270/    D211 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1270/    D211 :                                             ;PHA                                    ;3
(1) 1270/    D211 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1270/    D211 :                                             ;PHA                                    ;3
(1) 1270/    D211 :                                             ;RTS                                    ;6
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 375 - 1/5/2022 11:50:53


(1) 1270/    D211 :                                             
(1) 1270/    D211 :                                             ;Method 5 - 30 cycles
(1) 1270/    D211 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1270/    D213 : A8                                          TAY                                             ;2
(1) 1270/    D214 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1270/    D217 : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1270/    D219 : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1270/    D21C : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1270/    D21E : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1270/    D221 :                                                                     
(1) 1271/    D221 :                     
(1) 1272/    D221 :                     	;0xFE - INC ABSX
(1) 1273/    D221 :                     	INC_ABSX:
(1) 1274/    D221 : (MACRO)             		OP_MACRO 254, "INC", "ABSX", "INC_ABSX"
(1) 1274/    D221 :                                             ;TODO
(1) 1275/    D221 : (MACRO)             		NEXT_MACRO
(1) 1275/    D221 :                                             
(1) 1275/    D221 :  (MACRO-2)                                  halt
(1) 1275/    D221 : 00                                  BRK
(1) 1275/    D222 : 00                                  BRK
(1) 1275/    D223 :                                             
(1) 1275/    D223 :                                             ;Method 1 - 60 cycles
(1) 1275/    D223 :                                             ;Jump table must be page aligned!!!
(1) 1275/    D223 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1275/    D223 :                                             ;ASL                                    ;2
(1) 1275/    D223 :                                             ;STA emu_ptr,X                  ;4
(1) 1275/    D223 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1275/    D223 :                                             ;ADC #0                                 ;2
(1) 1275/    D223 :                                             ;STA emu_ptr+1,X                ;4
(1) 1275/    D223 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1275/    D223 :                                             ;STA emu_ptr2,X                 ;4
(1) 1275/    D223 :                                             ;INC emu_ptr,X                  ;6
(1) 1275/    D223 :                                             ;BCC .skip                              ;2
(1) 1275/    D223 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1275/    D223 :                                             ;.skip:
(1) 1275/    D223 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1275/    D223 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1275/    D223 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1275/    D223 :                                             
(1) 1275/    D223 :                                             ;Method 2 - 46 cycles
(1) 1275/    D223 :                                             ;Jump table must be page aligned!!!
(1) 1275/    D223 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1275/    D223 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1275/    D223 :                                             ;ASL                                    ;2
(1) 1275/    D223 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1275/    D223 :                                             ;ASL                                    ;2
(1) 1275/    D223 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1275/    D223 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1275/    D223 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1275/    D223 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1275/    D223 :                                             ;STA emu_ptr+1,X                ;4
(1) 1275/    D223 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1275/    D223 :                                             
(1) 1275/    D223 :                                             ;Method 3 - 30 cycles
(1) 1275/    D223 :                                             ;TXA                                                    ;2
(1) 1275/    D223 :                                             ;TAY                                                    ;2
(1) 1275/    D223 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1275/    D223 :                                             ;ASL                                                    ;2
(1) 1275/    D223 :                                             ;BCS upper                                              ;2
(1) 1275/    D223 :                                             ;lower:
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 376 - 1/5/2022 11:50:53


(1) 1275/    D223 :                                             ;       ASL                                                     ;2
(1) 1275/    D223 :                                             ;       TAX                                                     ;2
(1) 1275/    D223 :                                             ;       BCS upper_lower                         ;2
(1) 1275/    D223 :                                             ;       lower_lower:
(1) 1275/    D223 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1275/    D223 :                                             ;       upper_lower:
(1) 1275/    D223 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1275/    D223 :                                             ;upper:
(1) 1275/    D223 :                                             ;       ASL
(1) 1275/    D223 :                                             ;       TAX
(1) 1275/    D223 :                                             ;       BCS upper_upper
(1) 1275/    D223 :                                             ;       lower_upper:
(1) 1275/    D223 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1275/    D223 :                                             ;       upper_upper:
(1) 1275/    D223 :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1275/    D223 :                                             ;After jump:
(1) 1275/    D223 :                                             ;TYA                                                    ;2
(1) 1275/    D223 :                                             ;TAX                                                    ;2
(1) 1275/    D223 :                                             
(1) 1275/    D223 :                                             ;Method 4 - 28 cycles
(1) 1275/    D223 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1275/    D223 :                                             ;TAY                                    ;2
(1) 1275/    D223 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1275/    D223 :                                             ;PHA                                    ;3
(1) 1275/    D223 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1275/    D223 :                                             ;PHA                                    ;3
(1) 1275/    D223 :                                             ;RTS                                    ;6
(1) 1275/    D223 :                                             
(1) 1275/    D223 :                                             ;Method 5 - 30 cycles
(1) 1275/    D223 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1275/    D225 : A8                                          TAY                                             ;2
(1) 1275/    D226 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1275/    D229 : 95 0A                                       STA emu_ptr,X                   ;4
(1) 1275/    D22B : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1275/    D22E : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1275/    D230 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1275/    D233 :                                                                     
(1) 1276/    D233 :                     
(1) 1277/    D233 :                     	;0xFF - NOP
(1) 1278/    D233 :                     	NOP_0xFF:
(1) 1279/    D233 : (MACRO)             		OP_MACRO 255, "NOP", "IMP", "NOP_0xFF"
(1) 1279/    D233 :                                             ;TODO
(1) 1280/    D233 : (MACRO)             		NEXT_MACRO
(1) 1280/    D233 :                                             
(1) 1280/    D233 :  (MACRO-2)                                  halt
(1) 1280/    D233 : 00                                  BRK
(1) 1280/    D234 : 00                                  BRK
(1) 1280/    D235 :                                             
(1) 1280/    D235 :                                             ;Method 1 - 60 cycles
(1) 1280/    D235 :                                             ;Jump table must be page aligned!!!
(1) 1280/    D235 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1280/    D235 :                                             ;ASL                                    ;2
(1) 1280/    D235 :                                             ;STA emu_ptr,X                  ;4
(1) 1280/    D235 :                                             ;LDA #hi(JUMP_TABLE)    ;2
(1) 1280/    D235 :                                             ;ADC #0                                 ;2
(1) 1280/    D235 :                                             ;STA emu_ptr+1,X                ;4
(1) 1280/    D235 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1280/    D235 :                                             ;STA emu_ptr2,X                 ;4
(1) 1280/    D235 :                                             ;INC emu_ptr,X                  ;6
(1) 1280/    D235 :                                             ;BCC .skip                              ;2
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 377 - 1/5/2022 11:50:53


(1) 1280/    D235 :                                             ;       INC emu_ptr+1,X         ;6
(1) 1280/    D235 :                                             ;.skip:
(1) 1280/    D235 :                                             ;LDA (emu_ptr,X)                ;6
(1) 1280/    D235 :                                             ;STA emu_ptr2+1,X               ;4
(1) 1280/    D235 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1280/    D235 :                                             
(1) 1280/    D235 :                                             ;Method 2 - 46 cycles
(1) 1280/    D235 :                                             ;Jump table must be page aligned!!!
(1) 1280/    D235 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1280/    D235 :                                             ;STZ emu_ptr+1,X                ;4
(1) 1280/    D235 :                                             ;ASL                                    ;2
(1) 1280/    D235 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1280/    D235 :                                             ;ASL                                    ;2
(1) 1280/    D235 :                                             ;ROL emu_ptr+1,X                ;6
(1) 1280/    D235 :                                             ;STA emu_ptr,X                  ;4                              
(1) 1280/    D235 :                                             ;LDA emu_ptr+1,X                ;4
(1) 1280/    D235 :                                             ;ADC #hi(JUMP_TABLE)    ;2
(1) 1280/    D235 :                                             ;STA emu_ptr+1,X                ;4
(1) 1280/    D235 :                                             ;JMP (emu_ptr2,X)               ;6
(1) 1280/    D235 :                                             
(1) 1280/    D235 :                                             ;Method 3 - 30 cycles
(1) 1280/    D235 :                                             ;TXA                                                    ;2
(1) 1280/    D235 :                                             ;TAY                                                    ;2
(1) 1280/    D235 :                                             ;LDA (emu_PC,X)                                 ;6
(1) 1280/    D235 :                                             ;ASL                                                    ;2
(1) 1280/    D235 :                                             ;BCS upper                                              ;2
(1) 1280/    D235 :                                             ;lower:
(1) 1280/    D235 :                                             ;       ASL                                                     ;2
(1) 1280/    D235 :                                             ;       TAX                                                     ;2
(1) 1280/    D235 :                                             ;       BCS upper_lower                         ;2
(1) 1280/    D235 :                                             ;       lower_lower:
(1) 1280/    D235 :                                             ;               JMP (JUMP_TABLE1,X)             ;6
(1) 1280/    D235 :                                             ;       upper_lower:
(1) 1280/    D235 :                                             ;               JMP (JUMP_TABLE2,X)
(1) 1280/    D235 :                                             ;upper:
(1) 1280/    D235 :                                             ;       ASL
(1) 1280/    D235 :                                             ;       TAX
(1) 1280/    D235 :                                             ;       BCS upper_upper
(1) 1280/    D235 :                                             ;       lower_upper:
(1) 1280/    D235 :                                             ;               JMP (JUMP_TABLE3,X)
(1) 1280/    D235 :                                             ;       upper_upper:
(1) 1280/    D235 :                                             ;               JMP (JUMP_TABLE4,X)
(1) 1280/    D235 :                                             ;After jump:
(1) 1280/    D235 :                                             ;TYA                                                    ;2
(1) 1280/    D235 :                                             ;TAX                                                    ;2
(1) 1280/    D235 :                                             
(1) 1280/    D235 :                                             ;Method 4 - 28 cycles
(1) 1280/    D235 :                                             ;LDA (emu_PC,X)                 ;6
(1) 1280/    D235 :                                             ;TAY                                    ;2
(1) 1280/    D235 :                                             ;LDA JUMP_TABLE,Y               ;4
(1) 1280/    D235 :                                             ;PHA                                    ;3
(1) 1280/    D235 :                                             ;LDA JUMP_TABLE2,Y              ;4
(1) 1280/    D235 :                                             ;PHA                                    ;3
(1) 1280/    D235 :                                             ;RTS                                    ;6
(1) 1280/    D235 :                                             
(1) 1280/    D235 :                                             ;Method 5 - 30 cycles
(1) 1280/    D235 : A1 02                                       LDA (emu_PC,X)                  ;6
(1) 1280/    D237 : A8                                          TAY                                             ;2
(1) 1280/    D238 : B9 45 D2                                    LDA JUMP_TABLE_LO,Y             ;4
(1) 1280/    D23B : 95 0A                                       STA emu_ptr,X                   ;4
 AS V1.42 Beta [Bld 157] - Source File main.asm(instructions.asm) - Page 378 - 1/5/2022 11:50:53


(1) 1280/    D23D : B9 45 D3                                    LDA JUMP_TABLE_HI,Y             ;4
(1) 1280/    D240 : 95 0B                                       STA emu_ptr+1,X                 ;4
(1) 1280/    D242 : 7C 0A 00                                    JMP (emu_ptr,X)                 ;6
(1) 1280/    D245 :                                                                     
(1) 1281/    D245 :                     
(1) 1282/    D245 :                     
(1) 1283/    D245 :                     
     101/    D245 :                     	include "jump-table.asm"
(1)    1/    D245 :                     	;Jump table
(1)    2/    D245 :                     	JUMP_TABLE_LO:
(1)    3/    D245 : 45                  	FCB lo(BRK_IMP)
(1)    4/    D246 : 57                  	FCB lo(ORA_IX)
(1)    5/    D247 : 69                  	FCB lo(NOP_0x2)
(1)    6/    D248 : 7B                  	FCB lo(NOP_0x3)
(1)    7/    D249 : 8D                  	FCB lo(NOP_0x4)
(1)    8/    D24A : 9F                  	FCB lo(ORA_ZP)
(1)    9/    D24B : B1                  	FCB lo(ASL_ZP)
(1)   10/    D24C : C3                  	FCB lo(NOP_0x7)
(1)   11/    D24D : D5                  	FCB lo(PHP_IMP)
(1)   12/    D24E : E7                  	FCB lo(ORA_IMMED)
(1)   13/    D24F : F9                  	FCB lo(ASL_A)
(1)   14/    D250 : 0B                  	FCB lo(NOP_0xB)
(1)   15/    D251 : 1D                  	FCB lo(NOP_0xC)
(1)   16/    D252 : 2F                  	FCB lo(ORA_ABS)
(1)   17/    D253 : 41                  	FCB lo(ASL_ABS)
(1)   18/    D254 : 53                  	FCB lo(NOP_0xF)
(1)   19/    D255 : 65                  	FCB lo(BPL_REL)
(1)   20/    D256 : 77                  	FCB lo(ORA_IY)
(1)   21/    D257 : 89                  	FCB lo(NOP_0x12)
(1)   22/    D258 : 9B                  	FCB lo(NOP_0x13)
(1)   23/    D259 : AD                  	FCB lo(NOP_0x14)
(1)   24/    D25A : BF                  	FCB lo(ORA_ZPX)
(1)   25/    D25B : D1                  	FCB lo(ASL_ZPX)
(1)   26/    D25C : E3                  	FCB lo(NOP_0x17)
(1)   27/    D25D : F5                  	FCB lo(CLC_IMP)
(1)   28/    D25E : 07                  	FCB lo(ORA_ABSY)
(1)   29/    D25F : 19                  	FCB lo(NOP_0x1A)
(1)   30/    D260 : 2B                  	FCB lo(NOP_0x1B)
(1)   31/    D261 : 3D                  	FCB lo(NOP_0x1C)
(1)   32/    D262 : 4F                  	FCB lo(ORA_ABSX)
(1)   33/    D263 : 61                  	FCB lo(ASL_ABSX)
(1)   34/    D264 : 73                  	FCB lo(NOP_0x1F)
(1)   35/    D265 : 85                  	FCB lo(JSR_ABS)
(1)   36/    D266 : 97                  	FCB lo(AND_IX)
(1)   37/    D267 : A9                  	FCB lo(NOP_0x22)
(1)   38/    D268 : BB                  	FCB lo(NOP_0x23)
(1)   39/    D269 : CD                  	FCB lo(BIT_ZP)
(1)   40/    D26A : DF                  	FCB lo(AND_ZP)
(1)   41/    D26B : F1                  	FCB lo(ROL_ZP)
(1)   42/    D26C : 03                  	FCB lo(NOP_0x27)
(1)   43/    D26D : 15                  	FCB lo(PLP_IMP)
(1)   44/    D26E : 27                  	FCB lo(AND_IMMED)
(1)   45/    D26F : 39                  	FCB lo(ROL_A)
(1)   46/    D270 : 4B                  	FCB lo(NOP_0x2B)
(1)   47/    D271 : 5D                  	FCB lo(BIT_ABS)
(1)   48/    D272 : 6F                  	FCB lo(AND_ABS)
(1)   49/    D273 : 81                  	FCB lo(ROL_ABS)
(1)   50/    D274 : 93                  	FCB lo(NOP_0x2F)
(1)   51/    D275 : A5                  	FCB lo(BMI_REL)
(1)   52/    D276 : B7                  	FCB lo(AND_IY)
 AS V1.42 Beta [Bld 157] - Source File main.asm(jump-table.asm) - Page 379 - 1/5/2022 11:50:53


(1)   53/    D277 : C9                  	FCB lo(NOP_0x32)
(1)   54/    D278 : DB                  	FCB lo(NOP_0x33)
(1)   55/    D279 : ED                  	FCB lo(NOP_0x34)
(1)   56/    D27A : FF                  	FCB lo(AND_ZPX)
(1)   57/    D27B : 11                  	FCB lo(ROL_ZPX)
(1)   58/    D27C : 23                  	FCB lo(NOP_0x37)
(1)   59/    D27D : 35                  	FCB lo(SEC_IMP)
(1)   60/    D27E : 47                  	FCB lo(AND_ABSY)
(1)   61/    D27F : 59                  	FCB lo(NOP_0x3A)
(1)   62/    D280 : 6B                  	FCB lo(NOP_0x3B)
(1)   63/    D281 : 7D                  	FCB lo(NOP_0x3C)
(1)   64/    D282 : 8F                  	FCB lo(AND_ABSX)
(1)   65/    D283 : A1                  	FCB lo(ROL_ABSX)
(1)   66/    D284 : B3                  	FCB lo(NOP_0x3F)
(1)   67/    D285 : C5                  	FCB lo(RTI_IMP)
(1)   68/    D286 : D7                  	FCB lo(EOR_IX)
(1)   69/    D287 : E9                  	FCB lo(NOP_0x42)
(1)   70/    D288 : FB                  	FCB lo(NOP_0x43)
(1)   71/    D289 : 0D                  	FCB lo(NOP_0x44)
(1)   72/    D28A : 1F                  	FCB lo(EOR_ZP)
(1)   73/    D28B : 31                  	FCB lo(LSR_ZP)
(1)   74/    D28C : 43                  	FCB lo(NOP_0x47)
(1)   75/    D28D : 55                  	FCB lo(PHA_IMP)
(1)   76/    D28E : 67                  	FCB lo(EOR_IMMED)
(1)   77/    D28F : 79                  	FCB lo(LSR_A)
(1)   78/    D290 : 8B                  	FCB lo(NOP_0x4B)
(1)   79/    D291 : 9D                  	FCB lo(JMP_ABS)
(1)   80/    D292 : AF                  	FCB lo(EOR_ABS)
(1)   81/    D293 : C1                  	FCB lo(LSR_ABS)
(1)   82/    D294 : D3                  	FCB lo(NOP_0x4F)
(1)   83/    D295 : E5                  	FCB lo(BVC_REL)
(1)   84/    D296 : F7                  	FCB lo(EOR_IY)
(1)   85/    D297 : 09                  	FCB lo(NOP_0x52)
(1)   86/    D298 : 1B                  	FCB lo(NOP_0x53)
(1)   87/    D299 : 2D                  	FCB lo(NOP_0x54)
(1)   88/    D29A : 3F                  	FCB lo(EOR_ZPX)
(1)   89/    D29B : 51                  	FCB lo(LSR_ZPX)
(1)   90/    D29C : 63                  	FCB lo(NOP_0x57)
(1)   91/    D29D : 75                  	FCB lo(CLI_IMP)
(1)   92/    D29E : 87                  	FCB lo(EOR_ABSY)
(1)   93/    D29F : 99                  	FCB lo(NOP_0x5A)
(1)   94/    D2A0 : AB                  	FCB lo(NOP_0x5B)
(1)   95/    D2A1 : BD                  	FCB lo(NOP_0x5C)
(1)   96/    D2A2 : CF                  	FCB lo(EOR_ABSX)
(1)   97/    D2A3 : E1                  	FCB lo(LSR_ABSX)
(1)   98/    D2A4 : F3                  	FCB lo(NOP_0x5F)
(1)   99/    D2A5 : 05                  	FCB lo(RTS_IMP)
(1)  100/    D2A6 : 17                  	FCB lo(ADC_IX)
(1)  101/    D2A7 : 29                  	FCB lo(NOP_0x62)
(1)  102/    D2A8 : 3B                  	FCB lo(NOP_0x63)
(1)  103/    D2A9 : 4D                  	FCB lo(NOP_0x64)
(1)  104/    D2AA : 5F                  	FCB lo(ADC_ZP)
(1)  105/    D2AB : 71                  	FCB lo(ROR_ZP)
(1)  106/    D2AC : 83                  	FCB lo(NOP_0x67)
(1)  107/    D2AD : 95                  	FCB lo(PLA_IMP)
(1)  108/    D2AE : A7                  	FCB lo(ADC_IMMED)
(1)  109/    D2AF : B9                  	FCB lo(ROR_A)
(1)  110/    D2B0 : CB                  	FCB lo(NOP_0x6B)
(1)  111/    D2B1 : DD                  	FCB lo(JMP_I)
(1)  112/    D2B2 : EF                  	FCB lo(ADC_ABS)
 AS V1.42 Beta [Bld 157] - Source File main.asm(jump-table.asm) - Page 380 - 1/5/2022 11:50:53


(1)  113/    D2B3 : 01                  	FCB lo(ROR_ABS)
(1)  114/    D2B4 : 13                  	FCB lo(NOP_0x6F)
(1)  115/    D2B5 : 25                  	FCB lo(BVS_REL)
(1)  116/    D2B6 : 37                  	FCB lo(ADC_IY)
(1)  117/    D2B7 : 49                  	FCB lo(NOP_0x72)
(1)  118/    D2B8 : 5B                  	FCB lo(NOP_0x73)
(1)  119/    D2B9 : 6D                  	FCB lo(NOP_0x74)
(1)  120/    D2BA : 7F                  	FCB lo(ADC_ZPX)
(1)  121/    D2BB : 91                  	FCB lo(ROR_ZPX)
(1)  122/    D2BC : A3                  	FCB lo(NOP_0x77)
(1)  123/    D2BD : B5                  	FCB lo(SEI_IMP)
(1)  124/    D2BE : C7                  	FCB lo(ADC_ABSY)
(1)  125/    D2BF : D9                  	FCB lo(NOP_0x7A)
(1)  126/    D2C0 : EB                  	FCB lo(NOP_0x7B)
(1)  127/    D2C1 : FD                  	FCB lo(NOP_0x7C)
(1)  128/    D2C2 : 0F                  	FCB lo(ADC_ABSX)
(1)  129/    D2C3 : 21                  	FCB lo(ROR_ABSX)
(1)  130/    D2C4 : 33                  	FCB lo(NOP_0x7F)
(1)  131/    D2C5 : 45                  	FCB lo(NOP_0x80)
(1)  132/    D2C6 : 57                  	FCB lo(STA_IX)
(1)  133/    D2C7 : 69                  	FCB lo(NOP_0x82)
(1)  134/    D2C8 : 7B                  	FCB lo(NOP_0x83)
(1)  135/    D2C9 : 8D                  	FCB lo(STY_ZP)
(1)  136/    D2CA : 9F                  	FCB lo(STA_ZP)
(1)  137/    D2CB : B1                  	FCB lo(STX_ZP)
(1)  138/    D2CC : C3                  	FCB lo(NOP_0x87)
(1)  139/    D2CD : D5                  	FCB lo(DEY_IMP)
(1)  140/    D2CE : E7                  	FCB lo(NOP_0x89)
(1)  141/    D2CF : F9                  	FCB lo(TXA_IMP)
(1)  142/    D2D0 : 0B                  	FCB lo(NOP_0x8B)
(1)  143/    D2D1 : 1D                  	FCB lo(STY_ABS)
(1)  144/    D2D2 : 2F                  	FCB lo(STA_ABS)
(1)  145/    D2D3 : 41                  	FCB lo(STX_ABS)
(1)  146/    D2D4 : 53                  	FCB lo(NOP_0x8F)
(1)  147/    D2D5 : 65                  	FCB lo(BCC_REL)
(1)  148/    D2D6 : 77                  	FCB lo(STA_IY)
(1)  149/    D2D7 : 89                  	FCB lo(NOP_0x92)
(1)  150/    D2D8 : 9B                  	FCB lo(NOP_0x93)
(1)  151/    D2D9 : AD                  	FCB lo(STY_ZPX)
(1)  152/    D2DA : BF                  	FCB lo(STA_ZPX)
(1)  153/    D2DB : D1                  	FCB lo(STX_ZPY)
(1)  154/    D2DC : E3                  	FCB lo(NOP_0x97)
(1)  155/    D2DD : F5                  	FCB lo(TYA_IMP)
(1)  156/    D2DE : 07                  	FCB lo(STA_ABSY)
(1)  157/    D2DF : 19                  	FCB lo(TXS_IMP)
(1)  158/    D2E0 : 2B                  	FCB lo(NOP_0x9B)
(1)  159/    D2E1 : 3D                  	FCB lo(NOP_0x9C)
(1)  160/    D2E2 : 4F                  	FCB lo(STA_ABSX)
(1)  161/    D2E3 : 61                  	FCB lo(NOP_0x9E)
(1)  162/    D2E4 : 73                  	FCB lo(NOP_0x9F)
(1)  163/    D2E5 : 85                  	FCB lo(LDY_IMMED)
(1)  164/    D2E6 : 97                  	FCB lo(LDA_IX)
(1)  165/    D2E7 : A9                  	FCB lo(LDX_IMMED)
(1)  166/    D2E8 : BB                  	FCB lo(NOP_0xA3)
(1)  167/    D2E9 : CD                  	FCB lo(LDY_ZP)
(1)  168/    D2EA : DF                  	FCB lo(LDA_ZP)
(1)  169/    D2EB : F1                  	FCB lo(LDX_ZP)
(1)  170/    D2EC : 03                  	FCB lo(NOP_0xA7)
(1)  171/    D2ED : 15                  	FCB lo(TAY_IMP)
(1)  172/    D2EE : 27                  	FCB lo(LDA_IMMED)
 AS V1.42 Beta [Bld 157] - Source File main.asm(jump-table.asm) - Page 381 - 1/5/2022 11:50:53


(1)  173/    D2EF : 39                  	FCB lo(TAX_IMP)
(1)  174/    D2F0 : 4B                  	FCB lo(NOP_0xAB)
(1)  175/    D2F1 : 5D                  	FCB lo(LDY_ABS)
(1)  176/    D2F2 : 6F                  	FCB lo(LDA_ABS)
(1)  177/    D2F3 : 81                  	FCB lo(LDX_ABS)
(1)  178/    D2F4 : 93                  	FCB lo(NOP_0xAF)
(1)  179/    D2F5 : A5                  	FCB lo(BCS_REL)
(1)  180/    D2F6 : B7                  	FCB lo(LDA_IY)
(1)  181/    D2F7 : C9                  	FCB lo(NOP_0xB2)
(1)  182/    D2F8 : DB                  	FCB lo(NOP_0xB3)
(1)  183/    D2F9 : ED                  	FCB lo(LDY_ZPX)
(1)  184/    D2FA : FF                  	FCB lo(LDA_ZPX)
(1)  185/    D2FB : 11                  	FCB lo(LDX_ZPY)
(1)  186/    D2FC : 23                  	FCB lo(NOP_0xB7)
(1)  187/    D2FD : 35                  	FCB lo(CLV_IMP)
(1)  188/    D2FE : 47                  	FCB lo(LDA_ABSY)
(1)  189/    D2FF : 59                  	FCB lo(TSX_IMP)
(1)  190/    D300 : 6B                  	FCB lo(NOP_0xBB)
(1)  191/    D301 : 7D                  	FCB lo(LDY_ABSX)
(1)  192/    D302 : 8F                  	FCB lo(LDA_ABSX)
(1)  193/    D303 : A1                  	FCB lo(LDX_ABSY)
(1)  194/    D304 : B3                  	FCB lo(NOP_0xBF)
(1)  195/    D305 : C5                  	FCB lo(CPY_IMMED)
(1)  196/    D306 : D7                  	FCB lo(CMP_IX)
(1)  197/    D307 : E9                  	FCB lo(NOP_0xC2)
(1)  198/    D308 : FB                  	FCB lo(NOP_0xC3)
(1)  199/    D309 : 0D                  	FCB lo(CPY_ZP)
(1)  200/    D30A : 1F                  	FCB lo(CMP_ZP)
(1)  201/    D30B : 31                  	FCB lo(DEC_ZP)
(1)  202/    D30C : 43                  	FCB lo(NOP_0xC7)
(1)  203/    D30D : 55                  	FCB lo(INY_IMP)
(1)  204/    D30E : 67                  	FCB lo(CMP_IMMED)
(1)  205/    D30F : 79                  	FCB lo(DEX_IMP)
(1)  206/    D310 : 8B                  	FCB lo(NOP_0xCB)
(1)  207/    D311 : 9D                  	FCB lo(CPY_ABS)
(1)  208/    D312 : AF                  	FCB lo(CMP_ABS)
(1)  209/    D313 : C1                  	FCB lo(DEC_ABS)
(1)  210/    D314 : D3                  	FCB lo(NOP_0xCF)
(1)  211/    D315 : E5                  	FCB lo(BNE_REL)
(1)  212/    D316 : F7                  	FCB lo(CMP_IY)
(1)  213/    D317 : 09                  	FCB lo(NOP_0xD2)
(1)  214/    D318 : 1B                  	FCB lo(NOP_0xD3)
(1)  215/    D319 : 2D                  	FCB lo(NOP_0xD4)
(1)  216/    D31A : 3F                  	FCB lo(CMP_ZPX)
(1)  217/    D31B : 51                  	FCB lo(DEC_ZPX)
(1)  218/    D31C : 63                  	FCB lo(NOP_0xD7)
(1)  219/    D31D : 75                  	FCB lo(CLD_IMP)
(1)  220/    D31E : 87                  	FCB lo(CMP_ABSY)
(1)  221/    D31F : 99                  	FCB lo(NOP_0xDA)
(1)  222/    D320 : AB                  	FCB lo(NOP_0xDB)
(1)  223/    D321 : BD                  	FCB lo(NOP_0xDC)
(1)  224/    D322 : CF                  	FCB lo(CMP_ABSX)
(1)  225/    D323 : E1                  	FCB lo(DEC_ABSX)
(1)  226/    D324 : F3                  	FCB lo(NOP_0xDF)
(1)  227/    D325 : 05                  	FCB lo(CPX_IMMED)
(1)  228/    D326 : 17                  	FCB lo(SBC_IX)
(1)  229/    D327 : 29                  	FCB lo(NOP_0xE2)
(1)  230/    D328 : 3B                  	FCB lo(NOP_0xE3)
(1)  231/    D329 : 4D                  	FCB lo(CPX_ZP)
(1)  232/    D32A : 5F                  	FCB lo(SBC_ZP)
 AS V1.42 Beta [Bld 157] - Source File main.asm(jump-table.asm) - Page 382 - 1/5/2022 11:50:53


(1)  233/    D32B : 71                  	FCB lo(INC_ZP)
(1)  234/    D32C : 83                  	FCB lo(NOP_0xE7)
(1)  235/    D32D : 95                  	FCB lo(INX_IMP)
(1)  236/    D32E : A7                  	FCB lo(SBC_IMMED)
(1)  237/    D32F : B9                  	FCB lo(NOP_IMP)
(1)  238/    D330 : CB                  	FCB lo(NOP_0xEB)
(1)  239/    D331 : DD                  	FCB lo(CPX_ABS)
(1)  240/    D332 : EF                  	FCB lo(SBC_ABS)
(1)  241/    D333 : 01                  	FCB lo(INC_ABS)
(1)  242/    D334 : 13                  	FCB lo(NOP_0xEF)
(1)  243/    D335 : 25                  	FCB lo(BEQ_REL)
(1)  244/    D336 : 37                  	FCB lo(SBC_IY)
(1)  245/    D337 : 49                  	FCB lo(NOP_0xF2)
(1)  246/    D338 : 5B                  	FCB lo(NOP_0xF3)
(1)  247/    D339 : 6D                  	FCB lo(NOP_0xF4)
(1)  248/    D33A : 7F                  	FCB lo(SBC_ZPX)
(1)  249/    D33B : 91                  	FCB lo(INC_ZPX)
(1)  250/    D33C : A3                  	FCB lo(NOP_0xF7)
(1)  251/    D33D : B5                  	FCB lo(SED_IMP)
(1)  252/    D33E : C7                  	FCB lo(SBC_ABSY)
(1)  253/    D33F : D9                  	FCB lo(NOP_0xFA)
(1)  254/    D340 : EB                  	FCB lo(NOP_0xFB)
(1)  255/    D341 : FD                  	FCB lo(NOP_0xFC)
(1)  256/    D342 : 0F                  	FCB lo(SBC_ABSX)
(1)  257/    D343 : 21                  	FCB lo(INC_ABSX)
(1)  258/    D344 : 33                  	FCB lo(NOP_0xFF)
(1)  259/    D345 :                     
(1)  260/    D345 :                     	JUMP_TABLE_HI:
(1)  261/    D345 : C0                  	FCB hi(BRK_IMP)
(1)  262/    D346 : C0                  	FCB hi(ORA_IX)
(1)  263/    D347 : C0                  	FCB hi(NOP_0x2)
(1)  264/    D348 : C0                  	FCB hi(NOP_0x3)
(1)  265/    D349 : C0                  	FCB hi(NOP_0x4)
(1)  266/    D34A : C0                  	FCB hi(ORA_ZP)
(1)  267/    D34B : C0                  	FCB hi(ASL_ZP)
(1)  268/    D34C : C0                  	FCB hi(NOP_0x7)
(1)  269/    D34D : C0                  	FCB hi(PHP_IMP)
(1)  270/    D34E : C0                  	FCB hi(ORA_IMMED)
(1)  271/    D34F : C0                  	FCB hi(ASL_A)
(1)  272/    D350 : C1                  	FCB hi(NOP_0xB)
(1)  273/    D351 : C1                  	FCB hi(NOP_0xC)
(1)  274/    D352 : C1                  	FCB hi(ORA_ABS)
(1)  275/    D353 : C1                  	FCB hi(ASL_ABS)
(1)  276/    D354 : C1                  	FCB hi(NOP_0xF)
(1)  277/    D355 : C1                  	FCB hi(BPL_REL)
(1)  278/    D356 : C1                  	FCB hi(ORA_IY)
(1)  279/    D357 : C1                  	FCB hi(NOP_0x12)
(1)  280/    D358 : C1                  	FCB hi(NOP_0x13)
(1)  281/    D359 : C1                  	FCB hi(NOP_0x14)
(1)  282/    D35A : C1                  	FCB hi(ORA_ZPX)
(1)  283/    D35B : C1                  	FCB hi(ASL_ZPX)
(1)  284/    D35C : C1                  	FCB hi(NOP_0x17)
(1)  285/    D35D : C1                  	FCB hi(CLC_IMP)
(1)  286/    D35E : C2                  	FCB hi(ORA_ABSY)
(1)  287/    D35F : C2                  	FCB hi(NOP_0x1A)
(1)  288/    D360 : C2                  	FCB hi(NOP_0x1B)
(1)  289/    D361 : C2                  	FCB hi(NOP_0x1C)
(1)  290/    D362 : C2                  	FCB hi(ORA_ABSX)
(1)  291/    D363 : C2                  	FCB hi(ASL_ABSX)
(1)  292/    D364 : C2                  	FCB hi(NOP_0x1F)
 AS V1.42 Beta [Bld 157] - Source File main.asm(jump-table.asm) - Page 383 - 1/5/2022 11:50:53


(1)  293/    D365 : C2                  	FCB hi(JSR_ABS)
(1)  294/    D366 : C2                  	FCB hi(AND_IX)
(1)  295/    D367 : C2                  	FCB hi(NOP_0x22)
(1)  296/    D368 : C2                  	FCB hi(NOP_0x23)
(1)  297/    D369 : C2                  	FCB hi(BIT_ZP)
(1)  298/    D36A : C2                  	FCB hi(AND_ZP)
(1)  299/    D36B : C2                  	FCB hi(ROL_ZP)
(1)  300/    D36C : C3                  	FCB hi(NOP_0x27)
(1)  301/    D36D : C3                  	FCB hi(PLP_IMP)
(1)  302/    D36E : C3                  	FCB hi(AND_IMMED)
(1)  303/    D36F : C3                  	FCB hi(ROL_A)
(1)  304/    D370 : C3                  	FCB hi(NOP_0x2B)
(1)  305/    D371 : C3                  	FCB hi(BIT_ABS)
(1)  306/    D372 : C3                  	FCB hi(AND_ABS)
(1)  307/    D373 : C3                  	FCB hi(ROL_ABS)
(1)  308/    D374 : C3                  	FCB hi(NOP_0x2F)
(1)  309/    D375 : C3                  	FCB hi(BMI_REL)
(1)  310/    D376 : C3                  	FCB hi(AND_IY)
(1)  311/    D377 : C3                  	FCB hi(NOP_0x32)
(1)  312/    D378 : C3                  	FCB hi(NOP_0x33)
(1)  313/    D379 : C3                  	FCB hi(NOP_0x34)
(1)  314/    D37A : C3                  	FCB hi(AND_ZPX)
(1)  315/    D37B : C4                  	FCB hi(ROL_ZPX)
(1)  316/    D37C : C4                  	FCB hi(NOP_0x37)
(1)  317/    D37D : C4                  	FCB hi(SEC_IMP)
(1)  318/    D37E : C4                  	FCB hi(AND_ABSY)
(1)  319/    D37F : C4                  	FCB hi(NOP_0x3A)
(1)  320/    D380 : C4                  	FCB hi(NOP_0x3B)
(1)  321/    D381 : C4                  	FCB hi(NOP_0x3C)
(1)  322/    D382 : C4                  	FCB hi(AND_ABSX)
(1)  323/    D383 : C4                  	FCB hi(ROL_ABSX)
(1)  324/    D384 : C4                  	FCB hi(NOP_0x3F)
(1)  325/    D385 : C4                  	FCB hi(RTI_IMP)
(1)  326/    D386 : C4                  	FCB hi(EOR_IX)
(1)  327/    D387 : C4                  	FCB hi(NOP_0x42)
(1)  328/    D388 : C4                  	FCB hi(NOP_0x43)
(1)  329/    D389 : C5                  	FCB hi(NOP_0x44)
(1)  330/    D38A : C5                  	FCB hi(EOR_ZP)
(1)  331/    D38B : C5                  	FCB hi(LSR_ZP)
(1)  332/    D38C : C5                  	FCB hi(NOP_0x47)
(1)  333/    D38D : C5                  	FCB hi(PHA_IMP)
(1)  334/    D38E : C5                  	FCB hi(EOR_IMMED)
(1)  335/    D38F : C5                  	FCB hi(LSR_A)
(1)  336/    D390 : C5                  	FCB hi(NOP_0x4B)
(1)  337/    D391 : C5                  	FCB hi(JMP_ABS)
(1)  338/    D392 : C5                  	FCB hi(EOR_ABS)
(1)  339/    D393 : C5                  	FCB hi(LSR_ABS)
(1)  340/    D394 : C5                  	FCB hi(NOP_0x4F)
(1)  341/    D395 : C5                  	FCB hi(BVC_REL)
(1)  342/    D396 : C5                  	FCB hi(EOR_IY)
(1)  343/    D397 : C6                  	FCB hi(NOP_0x52)
(1)  344/    D398 : C6                  	FCB hi(NOP_0x53)
(1)  345/    D399 : C6                  	FCB hi(NOP_0x54)
(1)  346/    D39A : C6                  	FCB hi(EOR_ZPX)
(1)  347/    D39B : C6                  	FCB hi(LSR_ZPX)
(1)  348/    D39C : C6                  	FCB hi(NOP_0x57)
(1)  349/    D39D : C6                  	FCB hi(CLI_IMP)
(1)  350/    D39E : C6                  	FCB hi(EOR_ABSY)
(1)  351/    D39F : C6                  	FCB hi(NOP_0x5A)
(1)  352/    D3A0 : C6                  	FCB hi(NOP_0x5B)
 AS V1.42 Beta [Bld 157] - Source File main.asm(jump-table.asm) - Page 384 - 1/5/2022 11:50:53


(1)  353/    D3A1 : C6                  	FCB hi(NOP_0x5C)
(1)  354/    D3A2 : C6                  	FCB hi(EOR_ABSX)
(1)  355/    D3A3 : C6                  	FCB hi(LSR_ABSX)
(1)  356/    D3A4 : C6                  	FCB hi(NOP_0x5F)
(1)  357/    D3A5 : C7                  	FCB hi(RTS_IMP)
(1)  358/    D3A6 : C7                  	FCB hi(ADC_IX)
(1)  359/    D3A7 : C7                  	FCB hi(NOP_0x62)
(1)  360/    D3A8 : C7                  	FCB hi(NOP_0x63)
(1)  361/    D3A9 : C7                  	FCB hi(NOP_0x64)
(1)  362/    D3AA : C7                  	FCB hi(ADC_ZP)
(1)  363/    D3AB : C7                  	FCB hi(ROR_ZP)
(1)  364/    D3AC : C7                  	FCB hi(NOP_0x67)
(1)  365/    D3AD : C7                  	FCB hi(PLA_IMP)
(1)  366/    D3AE : C7                  	FCB hi(ADC_IMMED)
(1)  367/    D3AF : C7                  	FCB hi(ROR_A)
(1)  368/    D3B0 : C7                  	FCB hi(NOP_0x6B)
(1)  369/    D3B1 : C7                  	FCB hi(JMP_I)
(1)  370/    D3B2 : C7                  	FCB hi(ADC_ABS)
(1)  371/    D3B3 : C8                  	FCB hi(ROR_ABS)
(1)  372/    D3B4 : C8                  	FCB hi(NOP_0x6F)
(1)  373/    D3B5 : C8                  	FCB hi(BVS_REL)
(1)  374/    D3B6 : C8                  	FCB hi(ADC_IY)
(1)  375/    D3B7 : C8                  	FCB hi(NOP_0x72)
(1)  376/    D3B8 : C8                  	FCB hi(NOP_0x73)
(1)  377/    D3B9 : C8                  	FCB hi(NOP_0x74)
(1)  378/    D3BA : C8                  	FCB hi(ADC_ZPX)
(1)  379/    D3BB : C8                  	FCB hi(ROR_ZPX)
(1)  380/    D3BC : C8                  	FCB hi(NOP_0x77)
(1)  381/    D3BD : C8                  	FCB hi(SEI_IMP)
(1)  382/    D3BE : C8                  	FCB hi(ADC_ABSY)
(1)  383/    D3BF : C8                  	FCB hi(NOP_0x7A)
(1)  384/    D3C0 : C8                  	FCB hi(NOP_0x7B)
(1)  385/    D3C1 : C8                  	FCB hi(NOP_0x7C)
(1)  386/    D3C2 : C9                  	FCB hi(ADC_ABSX)
(1)  387/    D3C3 : C9                  	FCB hi(ROR_ABSX)
(1)  388/    D3C4 : C9                  	FCB hi(NOP_0x7F)
(1)  389/    D3C5 : C9                  	FCB hi(NOP_0x80)
(1)  390/    D3C6 : C9                  	FCB hi(STA_IX)
(1)  391/    D3C7 : C9                  	FCB hi(NOP_0x82)
(1)  392/    D3C8 : C9                  	FCB hi(NOP_0x83)
(1)  393/    D3C9 : C9                  	FCB hi(STY_ZP)
(1)  394/    D3CA : C9                  	FCB hi(STA_ZP)
(1)  395/    D3CB : C9                  	FCB hi(STX_ZP)
(1)  396/    D3CC : C9                  	FCB hi(NOP_0x87)
(1)  397/    D3CD : C9                  	FCB hi(DEY_IMP)
(1)  398/    D3CE : C9                  	FCB hi(NOP_0x89)
(1)  399/    D3CF : C9                  	FCB hi(TXA_IMP)
(1)  400/    D3D0 : CA                  	FCB hi(NOP_0x8B)
(1)  401/    D3D1 : CA                  	FCB hi(STY_ABS)
(1)  402/    D3D2 : CA                  	FCB hi(STA_ABS)
(1)  403/    D3D3 : CA                  	FCB hi(STX_ABS)
(1)  404/    D3D4 : CA                  	FCB hi(NOP_0x8F)
(1)  405/    D3D5 : CA                  	FCB hi(BCC_REL)
(1)  406/    D3D6 : CA                  	FCB hi(STA_IY)
(1)  407/    D3D7 : CA                  	FCB hi(NOP_0x92)
(1)  408/    D3D8 : CA                  	FCB hi(NOP_0x93)
(1)  409/    D3D9 : CA                  	FCB hi(STY_ZPX)
(1)  410/    D3DA : CA                  	FCB hi(STA_ZPX)
(1)  411/    D3DB : CA                  	FCB hi(STX_ZPY)
(1)  412/    D3DC : CA                  	FCB hi(NOP_0x97)
 AS V1.42 Beta [Bld 157] - Source File main.asm(jump-table.asm) - Page 385 - 1/5/2022 11:50:53


(1)  413/    D3DD : CA                  	FCB hi(TYA_IMP)
(1)  414/    D3DE : CB                  	FCB hi(STA_ABSY)
(1)  415/    D3DF : CB                  	FCB hi(TXS_IMP)
(1)  416/    D3E0 : CB                  	FCB hi(NOP_0x9B)
(1)  417/    D3E1 : CB                  	FCB hi(NOP_0x9C)
(1)  418/    D3E2 : CB                  	FCB hi(STA_ABSX)
(1)  419/    D3E3 : CB                  	FCB hi(NOP_0x9E)
(1)  420/    D3E4 : CB                  	FCB hi(NOP_0x9F)
(1)  421/    D3E5 : CB                  	FCB hi(LDY_IMMED)
(1)  422/    D3E6 : CB                  	FCB hi(LDA_IX)
(1)  423/    D3E7 : CB                  	FCB hi(LDX_IMMED)
(1)  424/    D3E8 : CB                  	FCB hi(NOP_0xA3)
(1)  425/    D3E9 : CB                  	FCB hi(LDY_ZP)
(1)  426/    D3EA : CB                  	FCB hi(LDA_ZP)
(1)  427/    D3EB : CB                  	FCB hi(LDX_ZP)
(1)  428/    D3EC : CC                  	FCB hi(NOP_0xA7)
(1)  429/    D3ED : CC                  	FCB hi(TAY_IMP)
(1)  430/    D3EE : CC                  	FCB hi(LDA_IMMED)
(1)  431/    D3EF : CC                  	FCB hi(TAX_IMP)
(1)  432/    D3F0 : CC                  	FCB hi(NOP_0xAB)
(1)  433/    D3F1 : CC                  	FCB hi(LDY_ABS)
(1)  434/    D3F2 : CC                  	FCB hi(LDA_ABS)
(1)  435/    D3F3 : CC                  	FCB hi(LDX_ABS)
(1)  436/    D3F4 : CC                  	FCB hi(NOP_0xAF)
(1)  437/    D3F5 : CC                  	FCB hi(BCS_REL)
(1)  438/    D3F6 : CC                  	FCB hi(LDA_IY)
(1)  439/    D3F7 : CC                  	FCB hi(NOP_0xB2)
(1)  440/    D3F8 : CC                  	FCB hi(NOP_0xB3)
(1)  441/    D3F9 : CC                  	FCB hi(LDY_ZPX)
(1)  442/    D3FA : CC                  	FCB hi(LDA_ZPX)
(1)  443/    D3FB : CD                  	FCB hi(LDX_ZPY)
(1)  444/    D3FC : CD                  	FCB hi(NOP_0xB7)
(1)  445/    D3FD : CD                  	FCB hi(CLV_IMP)
(1)  446/    D3FE : CD                  	FCB hi(LDA_ABSY)
(1)  447/    D3FF : CD                  	FCB hi(TSX_IMP)
(1)  448/    D400 : CD                  	FCB hi(NOP_0xBB)
(1)  449/    D401 : CD                  	FCB hi(LDY_ABSX)
(1)  450/    D402 : CD                  	FCB hi(LDA_ABSX)
(1)  451/    D403 : CD                  	FCB hi(LDX_ABSY)
(1)  452/    D404 : CD                  	FCB hi(NOP_0xBF)
(1)  453/    D405 : CD                  	FCB hi(CPY_IMMED)
(1)  454/    D406 : CD                  	FCB hi(CMP_IX)
(1)  455/    D407 : CD                  	FCB hi(NOP_0xC2)
(1)  456/    D408 : CD                  	FCB hi(NOP_0xC3)
(1)  457/    D409 : CE                  	FCB hi(CPY_ZP)
(1)  458/    D40A : CE                  	FCB hi(CMP_ZP)
(1)  459/    D40B : CE                  	FCB hi(DEC_ZP)
(1)  460/    D40C : CE                  	FCB hi(NOP_0xC7)
(1)  461/    D40D : CE                  	FCB hi(INY_IMP)
(1)  462/    D40E : CE                  	FCB hi(CMP_IMMED)
(1)  463/    D40F : CE                  	FCB hi(DEX_IMP)
(1)  464/    D410 : CE                  	FCB hi(NOP_0xCB)
(1)  465/    D411 : CE                  	FCB hi(CPY_ABS)
(1)  466/    D412 : CE                  	FCB hi(CMP_ABS)
(1)  467/    D413 : CE                  	FCB hi(DEC_ABS)
(1)  468/    D414 : CE                  	FCB hi(NOP_0xCF)
(1)  469/    D415 : CE                  	FCB hi(BNE_REL)
(1)  470/    D416 : CE                  	FCB hi(CMP_IY)
(1)  471/    D417 : CF                  	FCB hi(NOP_0xD2)
(1)  472/    D418 : CF                  	FCB hi(NOP_0xD3)
 AS V1.42 Beta [Bld 157] - Source File main.asm(jump-table.asm) - Page 386 - 1/5/2022 11:50:53


(1)  473/    D419 : CF                  	FCB hi(NOP_0xD4)
(1)  474/    D41A : CF                  	FCB hi(CMP_ZPX)
(1)  475/    D41B : CF                  	FCB hi(DEC_ZPX)
(1)  476/    D41C : CF                  	FCB hi(NOP_0xD7)
(1)  477/    D41D : CF                  	FCB hi(CLD_IMP)
(1)  478/    D41E : CF                  	FCB hi(CMP_ABSY)
(1)  479/    D41F : CF                  	FCB hi(NOP_0xDA)
(1)  480/    D420 : CF                  	FCB hi(NOP_0xDB)
(1)  481/    D421 : CF                  	FCB hi(NOP_0xDC)
(1)  482/    D422 : CF                  	FCB hi(CMP_ABSX)
(1)  483/    D423 : CF                  	FCB hi(DEC_ABSX)
(1)  484/    D424 : CF                  	FCB hi(NOP_0xDF)
(1)  485/    D425 : D0                  	FCB hi(CPX_IMMED)
(1)  486/    D426 : D0                  	FCB hi(SBC_IX)
(1)  487/    D427 : D0                  	FCB hi(NOP_0xE2)
(1)  488/    D428 : D0                  	FCB hi(NOP_0xE3)
(1)  489/    D429 : D0                  	FCB hi(CPX_ZP)
(1)  490/    D42A : D0                  	FCB hi(SBC_ZP)
(1)  491/    D42B : D0                  	FCB hi(INC_ZP)
(1)  492/    D42C : D0                  	FCB hi(NOP_0xE7)
(1)  493/    D42D : D0                  	FCB hi(INX_IMP)
(1)  494/    D42E : D0                  	FCB hi(SBC_IMMED)
(1)  495/    D42F : D0                  	FCB hi(NOP_IMP)
(1)  496/    D430 : D0                  	FCB hi(NOP_0xEB)
(1)  497/    D431 : D0                  	FCB hi(CPX_ABS)
(1)  498/    D432 : D0                  	FCB hi(SBC_ABS)
(1)  499/    D433 : D1                  	FCB hi(INC_ABS)
(1)  500/    D434 : D1                  	FCB hi(NOP_0xEF)
(1)  501/    D435 : D1                  	FCB hi(BEQ_REL)
(1)  502/    D436 : D1                  	FCB hi(SBC_IY)
(1)  503/    D437 : D1                  	FCB hi(NOP_0xF2)
(1)  504/    D438 : D1                  	FCB hi(NOP_0xF3)
(1)  505/    D439 : D1                  	FCB hi(NOP_0xF4)
(1)  506/    D43A : D1                  	FCB hi(SBC_ZPX)
(1)  507/    D43B : D1                  	FCB hi(INC_ZPX)
(1)  508/    D43C : D1                  	FCB hi(NOP_0xF7)
(1)  509/    D43D : D1                  	FCB hi(SED_IMP)
(1)  510/    D43E : D1                  	FCB hi(SBC_ABSY)
(1)  511/    D43F : D1                  	FCB hi(NOP_0xFA)
(1)  512/    D440 : D1                  	FCB hi(NOP_0xFB)
(1)  513/    D441 : D1                  	FCB hi(NOP_0xFC)
(1)  514/    D442 : D2                  	FCB hi(SBC_ABSX)
(1)  515/    D443 : D2                  	FCB hi(INC_ABSX)
(1)  516/    D444 : D2                  	FCB hi(NOP_0xFF)
(1)  517/    D445 :                     
     102/    D445 :                     	include "test.asm"
(1)    1/    D445 :                     	test_prog:
(1)    2/    D445 : A9 41               		LDA #65
(1)    3/    D447 : 85 05               		STA $5
(1)    4/    D449 : 8D 23 01            		STA $123
     103/    D44C :                     	
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 387 - 1/5/2022 11:50:53


  Symbol Table (* = unused):
  --------------------------

 ADC_ABS :                     C7EF C |  ADC_ABSX :                    C90F C |
 ADC_ABSY :                    C8C7 C |  ADC_IMMED :                   C7A7 C |
 ADC_IX :                      C717 C |  ADC_IY :                      C837 C |
 ADC_ZP :                      C75F C |  ADC_ZPX :                     C87F C |
 AND_ABS :                     C36F C |  AND_ABSX :                    C48F C |
 AND_ABSY :                    C447 C |  AND_IMMED :                   C327 C |
 AND_IX :                      C297 C |  AND_IY :                      C3B7 C |
 AND_ZP :                      C2DF C |  AND_ZPX :                     C3FF C |
*ARCHITECTURE :  i386-unknown-win32 - |  ASL_A :                       C0F9 C |
 ASL_ABS :                     C141 C |  ASL_ABSX :                    C261 C |
 ASL_ZP :                      C0B1 C |  ASL_ZPX :                     C1D1 C |
*BANK_GFX_RAM1 :                  4 - | *BANK_GFX_RAM2 :                  5 - |
 BCC_REL :                     CA65 C |  BCS_REL :                     CCA5 C |
 BEQ_REL :                     D125 C | *BIGENDIAN :                      0 - |
 BIT_ABS :                     C35D C |  BIT_ZP :                      C2CD C |
 BMI_REL :                     C3A5 C |  BNE_REL :                     CEE5 C |
 BPL_REL :                     C165 C | *BRANCHEXT :                      0 - |
 BRK_IMP :                     C045 C |  BVC_REL :                     C5E5 C |
 BVS_REL :                     C825 C | *CASESENSITIVE :                  1 - |
 CLC_IMP :                     C1F5 C |  CLD_IMP :                     CF75 C |
 CLI_IMP :                     C675 C |  CLV_IMP :                     CD35 C |
 CMP_ABS :                     CEAF C |  CMP_ABSX :                    CFCF C |
 CMP_ABSY :                    CF87 C |  CMP_IMMED :                   CE67 C |
 CMP_IX :                      CDD7 C |  CMP_IY :                      CEF7 C |
 CMP_ZP :                      CE1F C |  CMP_ZPX :                     CF3F C |
*CONSTPI :        3.141592653589793 - |  CPX_ABS :                     D0DD C |
 CPX_IMMED :                   D005 C |  CPX_ZP :                      D04D C |
 CPY_ABS :                     CE9D C |  CPY_IMMED :                   CDC5 C |
 CPY_ZP :                      CE0D C | *DATE :                    1/5/2022 - |
*DEBUG :                       FFE7 - | *DEBUG_DEC :                   FFE9 - |
*DEBUG_DEC16 :                 FFEA - | *DEBUG_HEX :                   FFE8 - |
 DEC_ABS :                     CEC1 C |  DEC_ABSX :                    CFE1 C |
 DEC_ZP :                      CE31 C |  DEC_ZPX :                     CF51 C |
 DEX_IMP :                     CE79 C |  DEY_IMP :                     C9D5 C |
 EOR_ABS :                     C5AF C |  EOR_ABSX :                    C6CF C |
 EOR_ABSY :                    C687 C |  EOR_IMMED :                   C567 C |
 EOR_IX :                      C4D7 C |  EOR_IY :                      C5F7 C |
 EOR_ZP :                      C51F C |  EOR_ZPX :                     C63F C |
 ExitEmu :                     C040 C | *FALSE :                          0 - |
*FULLPMMU :                       1 - | *HAS64 :                          1 - |
*HASDSP :                         0 - | *HASFPU :                         0 - |
*HASPMMU :                        0 - |  INC_ABS :                     D101 C |
 INC_ABSX :                    D221 C |  INC_ZP :                      D071 C |
 INC_ZPX :                     D191 C | *INEXTMODE :                      0 - |
*INLWORDMODE :                    0 - | *INMAXMODE :                      0 - |
*INSRCMODE :                      0 - | *INSUPMODE :                      0 - |
 INX_IMP :                     D095 C |  INY_IMP :                     CE55 C |
 JMP_ABS :                     C59D C |  JMP_I :                       C7DD C |
 JSR_ABS :                     C285 C |  JUMP_TABLE_HI :               D345 C |
 JUMP_TABLE_LO :               D245 C |  LDA_ABS :                     CC6F C |
 LDA_ABSX :                    CD8F C |  LDA_ABSY :                    CD47 C |
 LDA_IMMED :                   CC27 C |  LDA_IX :                      CB97 C |
 LDA_IY :                      CCB7 C |  LDA_ZP :                      CBDF C |
 LDA_ZPX :                     CCFF C |  LDX_ABS :                     CC81 C |
 LDX_ABSY :                    CDA1 C |  LDX_IMMED :                   CBA9 C |
 LDX_ZP :                      CBF1 C |  LDX_ZPY :                     CD11 C |
 LDY_ABS :                     CC5D C |  LDY_ABSX :                    CD7D C |
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 388 - 1/5/2022 11:50:53


 LDY_IMMED :                   CB85 C |  LDY_ZP :                      CBCD C |
 LDY_ZPX :                     CCED C | *LISTON :                         1 - |
 LSR_A :                       C579 C |  LSR_ABS :                     C5C1 C |
 LSR_ABSX :                    C6E1 C |  LSR_ZP :                      C531 C |
 LSR_ZPX :                     C651 C | *MACEXP :                         7 - |
 MAX_EMU_LEVEL :                  5 - | *MOMCPU :                     65C02 - |
*MOMCPUNAME :                 65C02 - | *NESTMAX :                      100 - |
 NOP_0x12 :                    C189 C |  NOP_0x13 :                    C19B C |
 NOP_0x14 :                    C1AD C |  NOP_0x17 :                    C1E3 C |
 NOP_0x1A :                    C219 C |  NOP_0x1B :                    C22B C |
 NOP_0x1C :                    C23D C |  NOP_0x1F :                    C273 C |
 NOP_0x2 :                     C069 C |  NOP_0x22 :                    C2A9 C |
 NOP_0x23 :                    C2BB C |  NOP_0x27 :                    C303 C |
 NOP_0x2B :                    C34B C |  NOP_0x2F :                    C393 C |
 NOP_0x3 :                     C07B C |  NOP_0x32 :                    C3C9 C |
 NOP_0x33 :                    C3DB C |  NOP_0x34 :                    C3ED C |
 NOP_0x37 :                    C423 C |  NOP_0x3A :                    C459 C |
 NOP_0x3B :                    C46B C |  NOP_0x3C :                    C47D C |
 NOP_0x3F :                    C4B3 C |  NOP_0x4 :                     C08D C |
 NOP_0x42 :                    C4E9 C |  NOP_0x43 :                    C4FB C |
 NOP_0x44 :                    C50D C |  NOP_0x47 :                    C543 C |
 NOP_0x4B :                    C58B C |  NOP_0x4F :                    C5D3 C |
 NOP_0x52 :                    C609 C |  NOP_0x53 :                    C61B C |
 NOP_0x54 :                    C62D C |  NOP_0x57 :                    C663 C |
 NOP_0x5A :                    C699 C |  NOP_0x5B :                    C6AB C |
 NOP_0x5C :                    C6BD C |  NOP_0x5F :                    C6F3 C |
 NOP_0x62 :                    C729 C |  NOP_0x63 :                    C73B C |
 NOP_0x64 :                    C74D C |  NOP_0x67 :                    C783 C |
 NOP_0x6B :                    C7CB C |  NOP_0x6F :                    C813 C |
 NOP_0x7 :                     C0C3 C |  NOP_0x72 :                    C849 C |
 NOP_0x73 :                    C85B C |  NOP_0x74 :                    C86D C |
 NOP_0x77 :                    C8A3 C |  NOP_0x7A :                    C8D9 C |
 NOP_0x7B :                    C8EB C |  NOP_0x7C :                    C8FD C |
 NOP_0x7F :                    C933 C |  NOP_0x80 :                    C945 C |
 NOP_0x82 :                    C969 C |  NOP_0x83 :                    C97B C |
 NOP_0x87 :                    C9C3 C |  NOP_0x89 :                    C9E7 C |
 NOP_0x8B :                    CA0B C |  NOP_0x8F :                    CA53 C |
 NOP_0x92 :                    CA89 C |  NOP_0x93 :                    CA9B C |
 NOP_0x97 :                    CAE3 C |  NOP_0x9B :                    CB2B C |
 NOP_0x9C :                    CB3D C |  NOP_0x9E :                    CB61 C |
 NOP_0x9F :                    CB73 C |  NOP_0xA3 :                    CBBB C |
 NOP_0xA7 :                    CC03 C |  NOP_0xAB :                    CC4B C |
 NOP_0xAF :                    CC93 C |  NOP_0xB :                     C10B C |
 NOP_0xB2 :                    CCC9 C |  NOP_0xB3 :                    CCDB C |
 NOP_0xB7 :                    CD23 C |  NOP_0xBB :                    CD6B C |
 NOP_0xBF :                    CDB3 C |  NOP_0xC :                     C11D C |
 NOP_0xC2 :                    CDE9 C |  NOP_0xC3 :                    CDFB C |
 NOP_0xC7 :                    CE43 C |  NOP_0xCB :                    CE8B C |
 NOP_0xCF :                    CED3 C |  NOP_0xD2 :                    CF09 C |
 NOP_0xD3 :                    CF1B C |  NOP_0xD4 :                    CF2D C |
 NOP_0xD7 :                    CF63 C |  NOP_0xDA :                    CF99 C |
 NOP_0xDB :                    CFAB C |  NOP_0xDC :                    CFBD C |
 NOP_0xDF :                    CFF3 C |  NOP_0xE2 :                    D029 C |
 NOP_0xE3 :                    D03B C |  NOP_0xE7 :                    D083 C |
 NOP_0xEB :                    D0CB C |  NOP_0xEF :                    D113 C |
 NOP_0xF :                     C153 C |  NOP_0xF2 :                    D149 C |
 NOP_0xF3 :                    D15B C |  NOP_0xF4 :                    D16D C |
 NOP_0xF7 :                    D1A3 C |  NOP_0xFA :                    D1D9 C |
 NOP_0xFB :                    D1EB C |  NOP_0xFC :                    D1FD C |
 NOP_0xFF :                    D233 C |  NOP_IMP :                     D0B9 C |
 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 389 - 1/5/2022 11:50:53


 ORA_ABS :                     C12F C |  ORA_ABSX :                    C24F C |
 ORA_ABSY :                    C207 C |  ORA_IMMED :                   C0E7 C |
 ORA_IX :                      C057 C |  ORA_IY :                      C177 C |
 ORA_ZP :                      C09F C |  ORA_ZPX :                     C1BF C |
*PACKING :                        0 - | *PADDING :                        1 - |
 PHA_IMP :                     C555 C |  PHP_IMP :                     C0D5 C |
 PLA_IMP :                     C795 C |  PLP_IMP :                     C315 C |
*RAM_BANK2 :                   FFE1 - | *RAM_BANK3 :                   FFE2 - |
*RELAXED :                        0 - |  ROL_A :                       C339 C |
 ROL_ABS :                     C381 C |  ROL_ABSX :                    C4A1 C |
 ROL_ZP :                      C2F1 C |  ROL_ZPX :                     C411 C |
 ROR_A :                       C7B9 C |  ROR_ABS :                     C801 C |
 ROR_ABSX :                    C921 C |  ROR_ZP :                      C771 C |
 ROR_ZPX :                     C891 C |  RTI_IMP :                     C4C5 C |
 RTS_IMP :                     C705 C |  SBC_ABS :                     D0EF C |
 SBC_ABSX :                    D20F C |  SBC_ABSY :                    D1C7 C |
 SBC_IMMED :                   D0A7 C |  SBC_IX :                      D017 C |
 SBC_IY :                      D137 C |  SBC_ZP :                      D05F C |
 SBC_ZPX :                     D17F C |  SEC_IMP :                     C435 C |
 SED_IMP :                     D1B5 C |  SEI_IMP :                     C8B5 C |
 STA_ABS :                     CA2F C |  STA_ABSX :                    CB4F C |
 STA_ABSY :                    CB07 C |  STA_IX :                      C957 C |
 STA_IY :                      CA77 C |  STA_ZP :                      C99F C |
 STA_ZPX :                     CABF C |  STX_ABS :                     CA41 C |
 STX_ZP :                      C9B1 C |  STX_ZPY :                     CAD1 C |
 STY_ABS :                     CA1D C |  STY_ZP :                      C98D C |
 STY_ZPX :                     CAAD C |  TAX_IMP :                     CC39 C |
 TAY_IMP :                     CC15 C | *TIME :                    11:50:53 - |
*TRUE :                           1 - |  TSX_IMP :                     CD59 C |
 TXA_IMP :                     C9F9 C |  TXS_IMP :                     CB19 C |
 TYA_IMP :                     CAF5 C | *VERSION :                     142F - |
*emu_A :                          5 - |  emu_D_flag :                     8 - |
 emu_PC :                         2 - | *emu_PC_hi :                      3 - |
 emu_SP :                         4 - | *emu_X :                          6 - |
*emu_Y :                          7 - | *emu_begin :                   C002 C |
 emu_begin.level_good :        C00B C |  emu_begin.loop :              C012 C |
 emu_data_SP :                    1 - |  emu_level :                      0 - |
*emu_mem :                        9 - |  emu_ptr :                        A - |
*emu_ptr2 :                       C - | *emu_ptr2_hi :                    D - |
*emu_ptr_hi :                     B - |  global_emu_level :              F0 - |
 local_address :                  E - |  locals_begin :                   0 - |
 locals_end :                     E - |  locals_size :                    E - |
 test_prog :                   D445 C |  zp_address :                    F1 - |
 zp_begin :                      F0 - | *zp_end :                        F1 - |
*zp_size :                        1 - |

    323 symbols
     47 unused symbols

 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 390 - 1/5/2022 11:50:53


  Defined Macros:
  ---------------

LOCAL                                 | LOCALS_END                           
LOCALS_START                          | NEXT_MACRO                           
OP_MACRO                              | ZP                                   
ZP_END                                | ZP_START                             
halt                                  |

      9 macros

 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 391 - 1/5/2022 11:50:53


  Defined Functions:
  ------------------

lo                                    | hi                                   

 AS V1.42 Beta [Bld 157] - Source File main.asm - Page 392 - 1/5/2022 11:50:53


  Code Pages:
  ----------

STANDARD (0 changed characters)

1 code page

0.31 seconds assembly time

   2036 lines source file
  23151 lines incl. macro expansions
      2 passes
      0 errors
      0 warnings
